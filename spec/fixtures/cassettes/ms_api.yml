---
http_interactions:
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,RId,E&count=1&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - NO_TOKEN
  response:
    status:
      code: 401
      message: Access Denied
    headers:
      Content-Length:
      - '198'
      Content-Type:
      - application/json
      Www-Authenticate:
      - AzureApiManagementKey realm="https://api.labs.cognitive.microsoft.com/academic/v1.0",name="Ocp-Apim-Subscription-Key",type="header"
      Date:
      - Thu, 25 Oct 2018 10:07:41 GMT
    body:
      encoding: UTF-8
      string: "\n{\"error\":{\"code\":\"Unspecified\",\"message\":\"Access denied
        due to invalid subscription key. Make sure you are subscribed to an API you
        are trying to call and provide the right key.\"}}\n                "
    http_version: 
  recorded_at: Thu, 25 Oct 2018 10:07:41 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,RId,E&count=1&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '10858'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 25 Oct 2018 10:07:41 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJleHByIjoiVyA9PSAnaW50ZXJuZXQnIiwiZW50aXRpZXMiOlt7ImxvZ3Byb2IiOi0xNC4zNjEsIklkIjoyMTE4NDI4MTkzLCJUaSI6ImNob3JkIGEgc2NhbGFibGUgcGVlciB0byBwZWVyIGxvb2t1cCBwcm90b2NvbCBmb3IgaW50ZXJuZXQgYXBwbGljYXRpb25zIiwiWSI6MjAwMywiRCI6IjIwMDMtMDItMDEiLCJSSWQiOlsyMTU4MDQ5ODIxLDIxNjMwNTkxOTAsMjE2Nzg5ODQxNCwxNjUwNjc1NTA5LDIxMDQyMTA4OTQsMjE3NDUwNzg2OSwyMTY0MTkyNzIyLDIxNDQ1NTMwNzgsMjE1MDY3NjU4NiwxNjYzNDkzNjQ5LDE1ODQ2MzU0NTksMjAyMDc2NTY1MiwyMDAwODc2MDIzLDc5OTMxMDMxLDIxMjA2MjYyOTQsMjE2ODg4NjEzMSwxMDU2MDE1OTcsNzQ0NDk0NzMsMjA2NDM2MDU0Myw5NTQzMjE0OSwyMTA4ODI0MDA0LDE0OTQ5NDY0NTQsMTcyNTQxNDIwNiw2NTM1MTA5NCwxODE1NzY5NDM0LDE1Mjg1NDU4OTcsMjA1MjIwNzgzNCwyMTcwNzU2MDI4LDIxMjc1NTUxNDMsMTc5OTMzODQyOSwyMTIyMjY5OTI1LDIwMzU2OTkxNSwxNTk3OTY3NTQ0LDIyMjc4OTUwNzldLCJBQSI6W3siQXVOIjoiaW9uIHN0b2ljYSJ9LHsiQXVOIjoicm9iZXJ0IHRhcHBhbiBtb3JyaXMifSx7IkF1TiI6ImRhdmlkIGxpYmVubm93ZWxsIn0seyJBdU4iOiJkYXZpZCByIGthcmdlciJ9LHsiQXVOIjoibSBmcmFucyBrYWFzaG9layJ9LHsiQXVOIjoiZnJhbmsgZGFiZWsifSx7IkF1TiI6ImhhcmkgYmFsYWtyaXNobmFuIn1dLCJFIjoie1wiRE5cIjpcIkNob3JkOiBhIHNjYWxhYmxlIHBlZXItdG8tcGVlciBsb29rdXAgcHJvdG9jb2wgZm9yIEludGVybmV0IGFwcGxpY2F0aW9uc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjEzMSxcIkludmVydGVkSW5kZXhcIjp7XCJBXCI6WzBdLFwiZnVuZGFtZW50YWxcIjpbMV0sXCJwcm9ibGVtXCI6WzJdLFwidGhhdFwiOlszLDE0LDMwLDExMF0sXCJjb25mcm9udHNcIjpbNF0sXCJwZWVyLXRvLXBlZXJcIjpbNV0sXCJhcHBsaWNhdGlvbnNcIjpbNl0sXCJpc1wiOls3LDEwMCwxMTJdLFwidGhlXCI6WzgsMTIsNDYsNzEsNzUsNzksOTAsOTgsMTE3LDEyNl0sXCJlZmZpY2llbnRcIjpbOV0sXCJsb2NhdGlvblwiOlsxMCw1Ml0sXCJvZlwiOlsxMSw1OSwxMjhdLFwibm9kZVwiOlsxMyw3NiwxMjJdLFwic3RvcmVzXCI6WzE1XSxcImFcIjpbMTYsMjYsNDIsNDksNjNdLFwiZGVzaXJlZFwiOlsxN10sXCJkYXRhXCI6WzE4LDY3XSxcIml0ZW0uXCI6WzE5XSxcIlRoaXNcIjpbMjBdLFwicGFwZXJcIjpbMjFdLFwicHJlc2VudHNcIjpbMjJdLFwiQ2hvcmRcIjpbMjQsMzQsNjAsODIsMTExLDEyOV0sXCIsXCI6WzI1XSxcImRpc3RyaWJ1dGVkXCI6WzI3XSxcImxvb2t1cFwiOlsyOF0sXCJwcm90b2NvbFwiOlsyOV0sXCJhZGRyZXNzZXNcIjpbMzFdLFwidGhpc1wiOlszMl0sXCJwcm9ibGVtLlwiOlszM10sXCJwcm92aWRlc1wiOlszNV0sXCJzdXBwb3J0XCI6WzM2XSxcImZvclwiOlszN10sXCJqdXN0XCI6WzM4XSxcIm9uZVwiOlszOV0sXCJvcGVyYXRpb246XCI6WzQwXSxcImdpdmVuXCI6WzQxXSxcImtleSxcIjpbNDNdLFwiaXRcIjpbNDRdLFwibWFwc1wiOls0NV0sXCJrZXlcIjpbNDcsNjQsODBdLFwib250b1wiOls0OF0sXCJub2RlLlwiOls1MF0sXCJEYXRhXCI6WzUxXSxcImNhblwiOls1Myw5M10sXCJiZVwiOls1NF0sXCJlYXNpbHlcIjpbNTVdLFwiaW1wbGVtZW50ZWRcIjpbNTZdLFwib25cIjpbNTddLFwidG9wXCI6WzU4XSxcImJ5XCI6WzYxLDEyMF0sXCJhc3NvY2lhdGluZ1wiOls2Ml0sXCJ3aXRoXCI6WzY1LDEyNV0sXCJlYWNoXCI6WzY2LDEyMV0sXCJpdGVtLFwiOls2OF0sXCJhbmRcIjpbNjksODgsOTIsMTA3LDExNl0sXCJzdG9yaW5nXCI6WzcwXSxcImtleS9kYXRhXCI6WzcyXSxcInBhaXJcIjpbNzNdLFwiYXRcIjpbNzRdLFwidG9cIjpbNzddLFwid2hpY2hcIjpbNzhdLFwibWFwcy5cIjpbODFdLFwiYWRhcHRzXCI6WzgzXSxcImVmZmljaWVudGx5XCI6Wzg0XSxcImFzXCI6Wzg1XSxcIm5vZGVzXCI6Wzg2XSxcImpvaW5cIjpbODddLFwibGVhdmVcIjpbODldLFwic3lzdGVtLFwiOls5MV0sXCJhbnN3ZXJcIjpbOTRdLFwicXVlcmllc1wiOls5NV0sXCJldmVuXCI6Wzk2XSxcImlmXCI6Wzk3XSxcInN5c3RlbVwiOls5OV0sXCJjb250aW51b3VzbHlcIjpbMTAxXSxcImNoYW5naW5nLlwiOlsxMDJdLFwiUmVzdWx0c1wiOlsxMDNdLFwiZnJvbVwiOlsxMDRdLFwidGhlb3JldGljYWxcIjpbMTA1XSxcImFuYWx5c2lzXCI6WzEwNl0sXCJzaW11bGF0aW9uc1wiOlsxMDhdLFwic2hvd1wiOlsxMDldLFwic2NhbGFibGU6XCI6WzExM10sXCJDb21tdW5pY2F0aW9uXCI6WzExNF0sXCJjb3N0XCI6WzExNV0sXCJzdGF0ZVwiOlsxMThdLFwibWFpbnRhaW5lZFwiOlsxMTldLFwic2NhbGVcIjpbMTIzXSxcImxvZ2FyaXRobWljYWxseVwiOlsxMjRdLFwibnVtYmVyXCI6WzEyN10sXCJub2Rlcy5cIjpbMTMwXX19LFwiU1wiOlt7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9mdF9nYXRld2F5LmNmbT9pZD02MzgzMzYmdHlwZT1wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL25tcy5jc2FpbC5taXQuZWR1L3BhcGVycy9jaG9yZC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy51Y2NzLmVkdS9+Y3M2MjIvcGFwZXJzLzAxMTgwNTQzLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY291cnNlcy5jc2UudGFtdS5lZHUvY2F2ZXJsZWUvY3NjZTQzOC9yZWFkaW5ncy9jaG9yZC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cuY3NlLmlpdGIuYWMuaW4vfmNzNjQxL3JlZmVyZW5jZXMvMDYtY2hvcmQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vY3MudXdhdGVybG9vLmNhL350b3pzdS9jb3Vyc2VzL2NzODU2L1cwNS9QcmVzZW50YXRpb25zL05hYmVlbC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5ydXRnZXJzLmVkdS9+cm1hcnRpbi90ZWFjaGluZy9mYWxsMDQvY3M1NTIvcmVhZGluZ3Mvc3RvMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jbmRzLmVlY3MuamFjb2JzLXVuaXZlcnNpdHkuZGUvY291cnNlcy9hY24tMjAxNC9saWF1a2V2aWNoLWNob3JkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnByaW5jZXRvbi5lZHUvY291cnNlcy9hcmNoaXZlL3NwcmluZzEzL2NvczU5OEMvcDE0OS1zdG9pY2EucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3Muc2p0dS5lZHUuY24vfmdjaGVuL2NvdXJzZS9hY24vUmVhZGluZy9jaG9yZC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2ZhYy1zdGFmZi5zZWF0dGxldS5lZHUvemh1eS93ZWIvdGVhY2hpbmcvU3ByaW5nMDgvY3NzZTQ5Mi9QMlAvcDJwX2Nob3JkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzbC5tdHUuZWR1L2NzNjQ2MS93d3cvUmVhZGluZy9TdG9pY2EwMy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cuY3Muc3dhcnRobW9yZS5lZHUvfmt3ZWJiL2NzOTEvZjE0L3BhcGVycy9TdG9pY2FfQ2hvcmQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuaWMudW5pY2FtcC5ici9+Y2VsaW8vcGVlcjJwZWVyL2Nob3JkL2Nob3JkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzZS5zY3UuZWR1L35qaG9sbGlkYXkvQ09FTjMxN1MwNS9jaG9yZF90em0ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jb3Vyc2VzLmNzLnZ0LmVkdS9+Y3M1MjA0L2ZhbGwxMS1rYWZ1cmEvUGFwZXJzL0ZpbGVTeXN0ZW1zL0Nob3JkLlNJR0NPTU0wMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5jbXUuZWR1L35zcmluaS8xNS03NDQvRjA5L3BhcGVycy9wMTItc3RvaWNhLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnVuYy5lZHUvfmphc2xlZW4vQ291cnNlcy9DT01QNjMxL3BhcGVycy9jaG9yZC10b24ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vd2ViLnN0YW5mb3JkLmVkdS9jbGFzcy9jczM0NGcvY3MzNDRnLUw5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzZS5idWZmYWxvLmVkdS9+b2tlbm5lZHkvY291cnNlcy9wYXBlcnMvY2hvcmQucGRmXCJ9XSxcIlZGTlwiOlwiSUVFRSBBQ00gVHJhbnNhY3Rpb25zIG9uIE5ldHdvcmtpbmdcIixcIlZcIjoxMSxcIklcIjoxLFwiRlBcIjoxNyxcIkxQXCI6MzIsXCJET0lcIjpcIjEwLjExMDkvVE5FVC4yMDAyLjgwODQwN1wiLFwiQ0NcIjp7XCI2NTM1MTA5NFwiOltcIkFyY2hpdmFsIEludGVybWVtb3J5IHVzZXMgYW4gb2ZmLWxpbmUgY29tcHV0ZWQgdHJlZSB0byBtYXAgbG9naWNhbCBhZGRyZXNzZXMgdG8gbWFjaGluZXMgdGhhdCBzdG9yZSB0aGUgZGF0YSBbIDQgXS5cIl0sXCI3NDQ0OTQ3M1wiOltcIlRoZSBGcmVlbmV0IHBlZXItdG8tcGVlciBzdG9yYWdlIHN5c3RlbSBbNV0sIFs2XSwgbGlrZSBDaG9yZCwgaXMgZGVjZW50cmFsaXplZCBhbmQgc3ltbWV0cmljIGFuZCBhdXRvbWF0aWNhbGx5IGFkYXB0cyB3aGVuIGhvc3RzIGxlYXZlIGFuZCBqb2luLlwiXSxcIjk1NDMyMTQ5XCI6W1wiVGhlIENob3JkIHByb3RvY29sIGlzIGFsc28gc2ltaWxhciB0byBQYXN0cnksIHRoZSBsb2NhdGlvbiBhbGdvcml0aG0gdXNlZCBpbiBQQVNUIFs4XS5cIl0sXCIyMDM1Njk5MTVcIjpbXCJhIGtleSBbN10uXCIsXCJDaG9yZCBoYXMgYmVlbiBldmFsdWF0ZWQgYXMgYSB0b29sIHRvIHNlcnZlIEROUyBbN10gYW5kIHRvIG1haW50YWluIGEgZGlzdHJpYnV0ZWQgcHVibGljIGtleSBkYXRhYmFzZSBmb3Igc2VjdXJlIG5hbWUgcmVzb2x1dGlvbiBbMV0uXCJdLFwiMTUyODU0NTg5N1wiOltcInRoZXkgbGV0IG5vZGVzIGpvaW4gYW5kIGxlYXZlIHRoZSBzeXN0ZW0gd2l0aCBtaW5pbWFsIGRpc3J1cHRpb24gWzNdWzRdLlwiXSxcIjE1OTc5Njc1NDRcIjpbXCJDaG9yZCBoYXMgYmVlbiBldmFsdWF0ZWQgYXMgYSB0b29sIHRvIHNlcnZlIEROUyBbN10gYW5kIHRvIG1haW50YWluIGEgZGlzdHJpYnV0ZWQgcHVibGljIGtleSBkYXRhYmFzZSBmb3Igc2VjdXJlIG5hbWUgcmVzb2x1dGlvbiBbMV0uXCIsXCJmaW5nZXJbMV0uXCIsXCJOZXdseS1qb2luZWQgbm9kZXMgdGhhdCBhcmUgbm90IHlldCByZWZsZWN0ZWQgaW4gb3RoZXIgbm9kZXPigJkgZmluZ2VyIHRhYmxlcyBtYXkgY2F1c2UgZmluZCBzdWNjZXNzb3IoKSB0byBpbml0aWFsbHkgdW5kZXJzaG9vdCwgYnV0IHRoZSBsb29wIGluIHRoZSBsb29rdXAgYWxnb3JpdGhtIHdpbGwgbmV2ZXJ0aGVsZXNzIGZvbGxvdyBzdWNjZXNzb3IgKGZpbmdlclsxXSkgcG9pbnRlcnMgdGhyb3VnaCB0aGUgbmV3bHktam9pbmVkIG5vZGVzIHVudGlsIHRoZSBjb3JyZWN0IHByZWRlY2Vzc29yIGlzIHJlYWNoZWQuXCJdLFwiMTY1MDY3NTUwOVwiOltcIlRoZSBUYXBlc3RyeSBsb29rdXAgcHJvdG9jb2wgWzI2XSwgdXNlZCBpbiBPY2VhblN0b3JlIFsxM10sIGlzIGEgdmFyaWFudCBvZiB0aGUgUGxheHRvbiBhbGdvcml0aG0uXCJdLFwiMTY2MzQ5MzY0OVwiOltcIlRoZSBGcmVlbmV0IHBlZXItdG8tcGVlciBzdG9yYWdlIHN5c3RlbSBbNV0sIFsgNiBdLCBsaWtlIENob3JkLCBpcyBkZWNlbnRyYWxpemVkIGFuZCBzeW1tZXRyaWMgYW5kIGF1dG9tYXRpY2FsbHkgYWRhcHRzIHdoZW4gaG9zdHMgbGVhdmUgYW5kIGpvaW4uXCJdLFwiMTcyNTQxNDIwNlwiOltcIlRoZSBHbG9iZSBzeXN0ZW0gWzJdIGhhcyBhIHdpZGUtYXJlYSBsb2NhdGlvbiBzZXJ2aWNlIHRvIG1hcCBvYmplY3QgaWRlbnRpZmllcnMgdG8gdGhlIGxvY2F0aW9ucyBvZiBtb3Zpbmcgb2JqZWN0cy5cIl0sXCIxNzk5MzM4NDI5XCI6W1wiTmV3IGFuYWx5c2lzIHRlY2huaXF1ZXMgaGF2ZSBzaG93biB0aGF0IENob3Jk4oCZcyBzdGFiaWxpemF0aW9uIGFsZ29yaXRobXMgKHdpdGggbWlub3IgbW9kaWZpY2F0aW9ucykgbWFpbnRhaW4gZ29vZCBsb29rdXAgcGVyZm9ybWFuY2UgZGVzcGl0ZSBjb250aW51b3VzIGZhaWx1cmUgYW5kIGpvaW5pbmcgb2Ygbm9kZXMgWzE2XS5cIixcIk90aGVyIHdvcmsgWzE2XSBzaG93cyB0aGF0IGlmIHRoZSBzdGFiaWxpemF0aW9uIHByb3RvY29sIGlzIHJ1biBhdCBhIGNlcnRhaW4gcmF0ZSAoZGVwZW5kZW50IG9uIHRoZSByYXRlIGF0IHdoaWNoIG5vZGVzIGpvaW4gYW5kIGZhaWwpIHRoZW4gdGhlIENob3JkIHJpbmcgcmVtYWlucyBjb250aW51b3VzbHkgaW4gYW4g4oCcYWxtb3N0IHN0YWJsZeKAnSBzdGF0ZSBpbiB3aGljaCBsb29rdXBzIGFyZSBmYXN0IGFuZCBjb3JyZWN0LlwiXSxcIjIwMDA4NzYwMjNcIjpbXCJbMjFdIGlzIHBlcmhhcHMgdGhlIGNsb3Nlc3QgYWxnb3JpdGhtIHRvIHRoZSBDaG9yZCBwcm90b2NvbC5cIl0sXCIyMDIwNzY1NjUyXCI6W1widGhleSBsZXQgbm9kZXMgam9pbiBhbmQgbGVhdmUgdGhlIHN5c3RlbSB3aXRoIG1pbmltYWwgZGlzcnVwdGlvbiBbM11bNF0uXCJdLFwiMjA1MjIwNzgzNFwiOltcIlRlY2huaXF1ZXMgaGF2ZSBhbHNvIGJlZW4gZGV2ZWxvcGVkIFszXSB0byBpbnRyb2R1Y2UgcmFuZG9tbmVzcyBpbiB0aGUgaGFzaCBmdW5jdGlvbjsgZ2l2ZW4gYW55IHNldCBvZiBrZXlzLCB3ZSBjYW4gY2hvb3NlIGEgaGFzaCBmdW5jdGlvbiBhdCByYW5kb20gc28gdGhhdCB0aGUga2V5cyBhcmUgd2VsbCBkaXN0cmlidXRlZCB3aXRoIGhpZ2ggcHJvYmFiaWxpdHkgb3ZlciB0aGUgY2hvaWNlIG9mIGhhc2ggZnVuY3Rpb24uXCJdLFwiMjA2NDM2MDU0M1wiOltcIkFyY2hpdmFsIEludGVybWVtb3J5IHVzZXMgYW4gb2ZmLWxpbmUgY29tcHV0ZWQgdHJlZSB0byBtYXAgbG9naWNhbCBhZGRyZXNzZXMgdG8gbWFjaGluZXMgdGhhdCBzdG9yZSB0aGUgZGF0YSBbNF0uXCJdLFwiMjEwNDIxMDg5NFwiOltcIlsxOV0sIGEgdmFyaWFudCBvZiB3aGljaCBpcyB1c2VkIGluIE9jZWFuU3RvcmUgWzEyXSwgaXMgcGVyaGFwcyB0aGUgY2xvc2VzdCBhbGdvcml0aG0gdG8gdGhlIENob3JkIHByb3RvY29sLlwiXSxcIjIxMjIyNjk5MjVcIjpbXCJETlMgcHJvdmlkZXMgYSBob3N0IG5hbWUgdG8gSVAgYWRkcmVzcyBtYXBwaW5nIFsxNV0uXCJdLFwiMjEyNzU1NTE0M1wiOltcIkluZm9ybWF0aW9uIGFib3V0IGFuIG9iamVjdCBpcyBzdG9yZWQgaW4gYSBwYXJ0aWN1bGFyIGxlYWYgZG9tYWluLCBhbmQgcG9pbnRlciBjYWNoZXMgcHJvdmlkZSBzZWFyY2ggc2hvcnRjdXRzIFsyNV0uXCJdLFwiMjE0NDU1MzA3OFwiOltcInN1Y2Nlc3NvciB0aGUgbmV4dCBub2RlIG9uIHRoZSBpZGVudGlmaWVyIGNpcmNsZTsgZmluZ2VyWzFdOm5vZGVcIixcImZpbmdlclsxXS5cIixcImludGVydmFsID0gW2ZpbmdlclsxXS5cIixcIk5vZGUgbiBjYW4gYmVjb21lIHRoZSBzdWNjZXNzb3Igb25seSBmb3Iga2V5cyB0aGF0IHdlcmUgcHJldmlvdXNseSB0aGUgcmVzcG9uc2liaWxpdHkgb2YgdGhlIG5vZGUgaW1tZWRpYXRlbHkgZm9sbG93I2RlZmluZSBzdWNjZXNzb3IgZmluZ2VyWzFdOm5vZGVcIixcImZpbmdlclsxXTpub2RlID0gbjpmaW5kIHN1Y2Nlc3NvcihmaW5nZXJbMV06c3RhcnQpOyBwcmVkZWNlc3NvciA9IHN1Y2Nlc3NvcjpwcmVkZWNlc3Nvcjsgc3VjY2Vzc29yOnByZWRlY2Vzc29yID0gbjsgZm9yIGkgPSAxIHRvIG0gMSBpZiAoZmluZ2VyW2krIDFdOnN0YXJ0IDIgW247IGZpbmdlcltpXTpub2RlKSkgZmluZ2VyW2krIDFdOm5vZGUgPSBmaW5nZXJbaV06bm9kZTsgZWxzZSBmaW5nZXJbaSsgMV06bm9kZSA9XCIsXCJOZXdseSBqb2luZWQgbm9kZXMgdGhhdCBoYXZlIG5vdCB5ZXQgYmVlbiBmaW5nZXJlZCBtYXkgY2F1c2UgZmluZCBwcmVkZWNlc3NvciB0byBpbml0aWFsbHkgdW5kZXJzaG9vdCwgYnV0IHRoZSBsb29wIGluIHRoZSBsb29rdXAgYWxnb3JpdGhtIHdpbGwgbmV2ZXJ0aGVsZXNzIGZvbGxvdyBzdWNjZXNzb3IgKGZpbmdlclsxXSkgcG9pbnRlcnMgdGhyb3VnaCB0aGUgbmV3bHkgam9pbmVkIG5vZGVzIHVudGlsIHRoZSBjb3JyZWN0IHByZWRlY2Vzc29yIGlzIHJlYWNoZWQuXCIsXCJUaGUgQ2hvcmQgbm9kZXMgYXJlIGF0IHRlbiBzaXRlcyBvbiBhIHN1YnNldCBvZiB0aGUgUk9OIHRlc3QtYmVkIGluIHRoZSBVbml0ZWQgU3RhdGVzIFsxXSwgaW4gQ2FsaWZvcm5pYSwgQ29sb3JhZG8sIE1hc3NhY2h1c2V0dHMsIE5ldyBZb3JrLCBOb3J0aCBDYXJvbGluYSwgYW5kIFBlbm5zeWx2YW5pYS5cIl0sXCIyMTUwNjc2NTg2XCI6W1wicGFydCBvZiBhbiBleHBlcmltZW50YWwgZGlzdHJpYnV0ZWQgZmlsZSBzeXN0ZW0gWzddLCB0aG91Z2ggdGhpcyBzZWN0aW9uIGNvbnNpZGVycyBvbmx5IHRoZSBDaG9yZCBjb21wb25lbnQgb2YgdGhlIHN5c3RlbS5cIl0sXCIyMTYzMDU5MTkwXCI6W1wiQ0FOIHVzZXMgYSBkLWRpbWVuc2lvbmFsIENhcnRlc2lhbiBjb29yZGluYXRlIHNwYWNlIChmb3Igc29tZSBmaXhlZCBkKSB0byBpbXBsZW1lbnQgYSBkaXN0cmlidXRlZCBoYXNoIHRhYmxlIHRoYXQgbWFwcyBrZXlzIG9udG8gdmFsdWVzIFsyMl0uXCJdLFwiMjE2NDE5MjcyMlwiOltcIkNob3Jk4oCZcyByb3V0aW5nIHByb2NlZHVyZSBtYXkgYmUgdGhvdWdodCBvZiBhcyBhIG9uZWRpbWVuc2lvbmFsIGFuYWxvZ3VlIG9mIHRoZSBHcmlkIGxvY2F0aW9uIHN5c3RlbSBbMTRdLlwiXSxcIjIxNjc4OTg0MTRcIjpbXCJQYXN0cnkgWzIzXSBpcyBhIHByZWZpeGJhc2VkIGxvb2t1cCBwcm90b2NvbCB0aGF0IGhhcyBwcm9wZXJ0aWVzIHNpbWlsYXIgdG8gQ2hvcmQuXCJdLFwiMjE2ODg4NjEzMVwiOltcIk5ldyBhbmFseXNpcyB0ZWNobmlxdWVzIGhhdmUgc2hvd24gdGhhdCBDaG9yZOKAmXMgc3RhYmlsaXphdGlvbiBhbGdvcml0aG1zICh3aXRoIG1pbm9yIG1vZGlmaWNhdGlvbnMpIG1haW50YWluIGdvb2QgbG9va3VwIHBlcmZvcm1hbmNlIGRlc3BpdGUgY29udGludW91cyBmYWlsdXJlIGFuZCBqb2luaW5nIG9mIG5vZGVzIFsxNl0uXCIsXCJPdGhlciB3b3JrIFsxNl0gc2hvd3MgdGhhdCBpZiB0aGUgc3RhYmlsaXphdGlvbiBwcm90b2NvbCBpcyBydW4gYXQgYSBjZXJ0YWluIHJhdGUgKGRlcGVuZGVudCBvbiB0aGUgcmF0ZSBhdCB3aGljaCBub2RlcyBqb2luIGFuZCBmYWlsKSB0aGVuIHRoZSBDaG9yZCByaW5nIHJlbWFpbnMgY29udGludW91c2x5IGluIGFuIOKAnGFsbW9zdCBzdGFibGXigJ0gc3RhdGUgaW4gd2hpY2ggbG9va3VwcyBhcmUgZmFzdCBhbmQgY29ycmVjdC5cIl0sXCIyMTcwNzU2MDI4XCI6W1wiVGhpcyBtb2RlbCBpcyBtb3RpdmF0ZWQgYnkgcmVjZW50IHJlc2VhcmNoIFsxOV0gc2hvd2luZyB0aGF0IHRoZSBuZXR3b3JrIGxhdGVuY3kgYmV0d2VlbiB0d28gbm9kZXMgaW4gdGhlIEludGVybmV0IGNhbiBiZSBtb2RlbGVkICh3aXRoIGdvb2QgYWNjdXJhY3kpIGFzIHRoZSBnZW9tZXRyaWMgZGlzdGFuY2UgaW4gYSBkLWRpbWVuc2lvbmFsIEV1Y2xpZGVhbiBzcGFjZSwgd2hlcmUgZCDiiaUgMy5cIl0sXCIyMTc0NTA3ODY5XCI6W1wiVGhlIEZyZWVuZXQgcGVlci10by1wZWVyIHN0b3JhZ2Ugc3lzdGVtIFs1XSwgWzZdLCBsaWtlIENob3JkLCBpcyBkZWNlbnRyYWxpemVkIGFuZCBzeW1tZXRyaWMgYW5kIGF1dG9tYXRpY2FsbHkgYWRhcHRzIHdoZW4gaG9zdHMgbGVhdmUgYW5kIGpvaW4uXCJdLFwiMjIyNzg5NTA3OVwiOltcIlRvIGFsbGV2aWF0ZSB0aGlzIHByb2JsZW0sIGluIHByZXZpb3VzIHdvcmsgWyA4IF0sIHdlIGhhdmUgZXhwZXJpbWVudGVkIHdpdGggYSBzaW1wbGUgZXh0ZW5zaW9uIG9mIHRoZSBDaG9yZCBwcm90b2NvbCB0aGF0IGV4cGxvaXRzIG9ubHkgdGhlIGluZm9ybWF0aW9uIGluIHRoZSBub2Rl4oCZc1xcdTAwMWJXaGlsZSB0aGlzIHByb3RvY29sIGV4dGVuc2lvbiBpcyBzaW1wbGUgdG8gaW1wbGVtZW50IGFuZCBkb2VzIG5vdCByZXF1aXJlIGFueSBhZGRpdGlvbmFsIHN0YXRlLCBpdHMgcGVyZm9ybWFuY2UgaXMgZGlmZmljdWx0IHRvIGFuYWx5emUgWyA4IF0uXCJdfSxcIlBSXCI6WzIxNTgwNDk4MjEsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDE2NTA2NzU1MDksMjExOTI0NTEwNiwyMTIzNDgyNDYyLDIxNTA2NzY1ODYsMjE3NDUwNzg2OSwyMTA0MjEwODk0LDIwNTYzNjMzNTMsMjAyMDc2NTY1MiwyMDA3MjE5MzA0LDIxMjM4MjA4MjAsMTU4NDYzNTQ1OSwyMTYyNzMzNjc3LDIwMDA4NzYwMjMsMjE2OTA0NzIyNiwxOTcwNTY0Nzc4LDE1MjA5MTQ5NDMsMTQ5MjU1MjUzMSwyMTU4MDQ5ODIxLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwxNjUwNjc1NTA5LDIxMTkyNDUxMDYsMjEyMzQ4MjQ2MiwyMTUwNjc2NTg2LDIxNzQ1MDc4NjksMjEwNDIxMDg5NCwyMDU2MzYzMzUzLDIwMjA3NjU2NTIsMjAwNzIxOTMwNCwyMTIzODIwODIwLDE1ODQ2MzU0NTksMjE2MjczMzY3NywyMDAwODc2MDIzLDIxNjkwNDcyMjYsMTk3MDU2NDc3OCwxNTIwOTE0OTQzLDE0OTI1NTI1MzFdLFwiQU5GXCI6W3tcIkZOXCI6XCJJb25cIixcIkxOXCI6XCJTdG9pY2FcIixcIlNcIjoxfSx7XCJGTlwiOlwiUm9iZXJ0IFRhcHBhblwiLFwiTE5cIjpcIk1vcnJpc1wiLFwiU1wiOjJ9LHtcIkZOXCI6XCJEYXZpZFwiLFwiTE5cIjpcIkxpYmVuLU5vd2VsbFwiLFwiU1wiOjN9LHtcIkZOXCI6XCJEYXZpZCBSLlwiLFwiTE5cIjpcIkthcmdlclwiLFwiU1wiOjR9LHtcIkZOXCI6XCJNLiBGcmFuc1wiLFwiTE5cIjpcIkthYXNob2VrXCIsXCJTXCI6NX0se1wiRk5cIjpcIkZyYW5rXCIsXCJMTlwiOlwiRGFiZWtcIixcIlNcIjo2fSx7XCJGTlwiOlwiSGFyaVwiLFwiTE5cIjpcIkJhbGFrcmlzaG5hblwiLFwiU1wiOjd9XSxcIkJWXCI6XCJJRUVFIEFDTSBUcmFuc2FjdGlvbnMgb24gTmV0d29ya2luZ1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJJRUVFXCJ9In1dfQ==
    http_version: 
  recorded_at: Thu, 25 Oct 2018 10:07:42 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,RId,E&count=-5&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 25 Oct 2018 10:07:43 GMT
    body:
      encoding: UTF-8
      string: '{"Error":{"Code":"Bad Argument","Message":"count should be >= 0"}}'
    http_version: 
  recorded_at: Thu, 25 Oct 2018 10:07:43 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,F.FN,E&count=1&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '10795'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Wed, 31 Oct 2018 06:04:16 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 31 Oct 2018 05:57:06 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,F.FN,E&count=1&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - NO_TOKEN
  response:
    status:
      code: 401
      message: Access Denied
    headers:
      Content-Length:
      - '198'
      Content-Type:
      - application/json
      Www-Authenticate:
      - AzureApiManagementKey realm="https://api.labs.cognitive.microsoft.com/academic/v1.0",name="Ocp-Apim-Subscription-Key",type="header"
      Date:
      - Wed, 31 Oct 2018 06:04:17 GMT
    body:
      encoding: UTF-8
      string: "\n{\"error\":{\"code\":\"Unspecified\",\"message\":\"Access denied
        due to invalid subscription key. Make sure you are subscribed to an API you
        are trying to call and provide the right key.\"}}\n                "
    http_version: 
  recorded_at: Wed, 31 Oct 2018 05:57:07 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,F.FN,E&count=-5&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Length:
      - '66'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Wed, 31 Oct 2018 06:04:18 GMT
    body:
      encoding: UTF-8
      string: '{"Error":{"Code":"Bad Argument","Message":"count should be >= 0"}}'
    http_version: 
  recorded_at: Wed, 31 Oct 2018 05:57:08 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,F.FN,E&count=10&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '84965'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Wed, 31 Oct 2018 11:14:19 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 31 Oct 2018 11:14:18 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Ti,AA.AuN,Y,D,F.FN,E&count=10&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - NO_TOKEN
  response:
    status:
      code: 401
      message: Access Denied
    headers:
      Content-Length:
      - '198'
      Content-Type:
      - application/json
      Www-Authenticate:
      - AzureApiManagementKey realm="https://api.labs.cognitive.microsoft.com/academic/v1.0",name="Ocp-Apim-Subscription-Key",type="header"
      Date:
      - Wed, 31 Oct 2018 11:14:20 GMT
    body:
      encoding: UTF-8
      string: "\n{\"error\":{\"code\":\"Unspecified\",\"message\":\"Access denied
        due to invalid subscription key. Make sure you are subscribed to an API you
        are trying to call and provide the right key.\"}}\n                "
    http_version: 
  recorded_at: Wed, 31 Oct 2018 11:14:19 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Id,Ti,AA.AuN,Y,D,F.FN,E,RId&count=20&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '281529'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 15 Nov 2018 16:33:54 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 15 Nov 2018 16:33:53 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Id,Ti,AA.AuN,Y,D,F.FN,E,RId&expr=Id=2118428193&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '11168'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 15 Nov 2018 16:35:21 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 15 Nov 2018 16:35:19 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Id,Ti,AA.AuN,Y,D,F.FN,E,RId,CC&count=100&expr=Or(Id=2158049821,%20Id=2158049821,%20Id=2163059190,%20Id=2167898414,%20Id=1650675509,%20Id=2104210894,%20Id=2174507869,%20Id=2164192722,%20Id=2144553078,%20Id=2150676586,%20Id=1663493649,%20Id=1584635459,%20Id=2020765652,%20Id=2000876023,%20Id=79931031,%20Id=2120626294,%20Id=2168886131,%20Id=74449473,%20Id=2064360543,%20Id=95432149,%20Id=105601597,%20Id=2108824004,%20Id=1725414206,%20Id=1528545897,%20Id=1494946454,%20Id=1815769434,%20Id=2127555143,%20Id=2052207834,%20Id=2170756028,%20Id=2122269925,%20Id=1799338429,%20Id=65351094,%20Id=203569915,%20Id=1597967544,%20Id=2227895079)&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '235454'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Thu, 15 Nov 2018 16:35:21 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJleHByIjoiT3IoSWQ9MjE1ODA0OTgyMSwgSWQ9MjE1ODA0OTgyMSwgSWQ9MjE2MzA1OTE5MCwgSWQ9MjE2Nzg5ODQxNCwgSWQ9MTY1MDY3NTUwOSwgSWQ9MjEwNDIxMDg5NCwgSWQ9MjE3NDUwNzg2OSwgSWQ9MjE2NDE5MjcyMiwgSWQ9MjE0NDU1MzA3OCwgSWQ9MjE1MDY3NjU4NiwgSWQ9MTY2MzQ5MzY0OSwgSWQ9MTU4NDYzNTQ1OSwgSWQ9MjAyMDc2NTY1MiwgSWQ9MjAwMDg3NjAyMywgSWQ9Nzk5MzEwMzEsIElkPTIxMjA2MjYyOTQsIElkPTIxNjg4ODYxMzEsIElkPTc0NDQ5NDczLCBJZD0yMDY0MzYwNTQzLCBJZD05NTQzMjE0OSwgSWQ9MTA1NjAxNTk3LCBJZD0yMTA4ODI0MDA0LCBJZD0xNzI1NDE0MjA2LCBJZD0xNTI4NTQ1ODk3LCBJZD0xNDk0OTQ2NDU0LCBJZD0xODE1NzY5NDM0LCBJZD0yMTI3NTU1MTQzLCBJZD0yMDUyMjA3ODM0LCBJZD0yMTcwNzU2MDI4LCBJZD0yMTIyMjY5OTI1LCBJZD0xNzk5MzM4NDI5LCBJZD02NTM1MTA5NCwgSWQ9MjAzNTY5OTE1LCBJZD0xNTk3OTY3NTQ0LCBJZD0yMjI3ODk1MDc5KSIsImVudGl0aWVzIjpbeyJsb2dwcm9iIjotMTQuOTEyLCJrZXNFbnRpdHlJZCI6Mzg2MzM4LCJJZCI6MjE1ODA0OTgyMSwiVGkiOiJjaG9yZCBhIHNjYWxhYmxlIHBlZXIgdG8gcGVlciBsb29rdXAgc2VydmljZSBmb3IgaW50ZXJuZXQgYXBwbGljYXRpb25zIiwiWSI6MjAwMSwiRCI6IjIwMDEtMTAtMDEiLCJDQyI6MTYzMzcsIlJJZCI6WzIxMTg0MjgxOTMsMjE2MzA1OTE5MCwyMTA0MjEwODk0LDIxNzQ1MDc4NjksMjE2NDE5MjcyMiwyMTQ0NTUzMDc4LDIxNTA2NzY1ODYsMjAyMDc2NTY1MiwyMDAwODc2MDIzLDc0NDQ5NDczLDE2NDIwMjczNDgsMjA2NDM2MDU0Myw5NTQzMjE0OSwxNzI1NDE0MjA2LDE1Mjg1NDU4OTcsMjEyNzU1NTE0MywyMTIyMjY5OTI1XSwiQUEiOlt7IkF1TiI6ImlvbiBzdG9pY2EifSx7IkF1TiI6InJvYmVydCB0YXBwYW4gbW9ycmlzIn0seyJBdU4iOiJkYXZpZCByIGthcmdlciJ9LHsiQXVOIjoibSBmcmFucyBrYWFzaG9layJ9LHsiQXVOIjoiaGFyaSBiYWxha3Jpc2huYW4ifV0sIkYiOlt7IkZOIjoia29vcmRlIn0seyJGTiI6ImtleSBiYXNlZCByb3V0aW5nIn0seyJGTiI6ImNvbnRlbnQgYWRkcmVzc2FibGUgbmV0d29yayJ9LHsiRk4iOiJkZWFkIHBlZXIgZGV0ZWN0aW9uIn0seyJGTiI6InNraXAgZ3JhcGgifSx7IkZOIjoiY2hvcmQifSx7IkZOIjoiZGlzdHJpYnV0ZWQgaGFzaCB0YWJsZSJ9LHsiRk4iOiJwYXN0cnkifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJDaG9yZDogQSBzY2FsYWJsZSBwZWVyLXRvLXBlZXIgbG9va3VwIHNlcnZpY2UgZm9yIGludGVybmV0IGFwcGxpY2F0aW9uc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjEzMyxcIkludmVydGVkSW5kZXhcIjp7XCJBXCI6WzBdLFwiZnVuZGFtZW50YWxcIjpbMV0sXCJwcm9ibGVtXCI6WzJdLFwidGhhdFwiOlszLDEzLDI5LDExMV0sXCJjb25mcm9udHNcIjpbNF0sXCJwZWVyLXRvLXBlZXJcIjpbNV0sXCJhcHBsaWNhdGlvbnNcIjpbNl0sXCJpc1wiOls3LDEwMCwxMTNdLFwidG9cIjpbOCw3N10sXCJlZmZpY2llbnRseVwiOls5LDg0XSxcImxvY2F0ZVwiOlsxMF0sXCJ0aGVcIjpbMTEsNDUsNzAsNzUsNzksOTAsOTgsMTE5LDEyOF0sXCJub2RlXCI6WzEyLDc2LDEyNF0sXCJzdG9yZXNcIjpbMTRdLFwiYVwiOlsxNSwyNSw0MSw0OCw2Ml0sXCJwYXJ0aWN1bGFyXCI6WzE2XSxcImRhdGFcIjpbMTcsNjZdLFwiaXRlbS5cIjpbMThdLFwiVGhpc1wiOlsxOV0sXCJwYXBlclwiOlsyMF0sXCJwcmVzZW50c1wiOlsyMV0sXCJDaG9yZFwiOlsyMywzMyw1OSw4MiwxMTIsMTMxXSxcIixcIjpbMjRdLFwiZGlzdHJpYnV0ZWRcIjpbMjZdLFwibG9va3VwXCI6WzI3XSxcInByb3RvY29sXCI6WzI4XSxcImFkZHJlc3Nlc1wiOlszMF0sXCJ0aGlzXCI6WzMxXSxcInByb2JsZW0uXCI6WzMyXSxcInByb3ZpZGVzXCI6WzM0XSxcInN1cHBvcnRcIjpbMzVdLFwiZm9yXCI6WzM2XSxcImp1c3RcIjpbMzddLFwib25lXCI6WzM4XSxcIm9wZXJhdGlvbjpcIjpbMzldLFwiZ2l2ZW5cIjpbNDBdLFwia2V5LFwiOls0Ml0sXCJpdFwiOls0M10sXCJtYXBzXCI6WzQ0XSxcImtleVwiOls0Niw2Myw4MF0sXCJvbnRvXCI6WzQ3XSxcIm5vZGUuXCI6WzQ5XSxcIkRhdGFcIjpbNTBdLFwibG9jYXRpb25cIjpbNTFdLFwiY2FuXCI6WzUyLDkzXSxcImJlXCI6WzUzXSxcImVhc2lseVwiOls1NF0sXCJpbXBsZW1lbnRlZFwiOls1NV0sXCJvblwiOls1Nl0sXCJ0b3BcIjpbNTddLFwib2ZcIjpbNTgsMTMwXSxcImJ5XCI6WzYwLDEyMl0sXCJhc3NvY2lhdGluZ1wiOls2MV0sXCJ3aXRoXCI6WzY0LDExNSwxMjddLFwiZWFjaFwiOls2NSwxMjNdLFwiaXRlbSxcIjpbNjddLFwiYW5kXCI6WzY4LDg4LDkyLDEwOCwxMThdLFwic3RvcmluZ1wiOls2OV0sXCJrZXkvZGF0YVwiOls3MV0sXCJpdGVtXCI6WzcyXSxcInBhaXJcIjpbNzNdLFwiYXRcIjpbNzRdLFwid2hpY2hcIjpbNzhdLFwibWFwcy5cIjpbODFdLFwiYWRhcHRzXCI6WzgzXSxcImFzXCI6Wzg1XSxcIm5vZGVzXCI6Wzg2XSxcImpvaW5cIjpbODddLFwibGVhdmVcIjpbODldLFwic3lzdGVtLFwiOls5MV0sXCJhbnN3ZXJcIjpbOTRdLFwicXVlcmllc1wiOls5NV0sXCJldmVuXCI6Wzk2XSxcImlmXCI6Wzk3XSxcInN5c3RlbVwiOls5OV0sXCJjb250aW51b3VzbHlcIjpbMTAxXSxcImNoYW5naW5nLlwiOlsxMDJdLFwiUmVzdWx0c1wiOlsxMDNdLFwiZnJvbVwiOlsxMDRdLFwidGhlb3JldGljYWxcIjpbMTA1XSxcImFuYWx5c2lzLFwiOlsxMDZdLFwic2ltdWxhdGlvbnMsXCI6WzEwN10sXCJleHBlcmltZW50c1wiOlsxMDldLFwic2hvd1wiOlsxMTBdLFwic2NhbGFibGUsXCI6WzExNF0sXCJjb21tdW5pY2F0aW9uXCI6WzExNl0sXCJjb3N0XCI6WzExN10sXCJzdGF0ZVwiOlsxMjBdLFwibWFpbnRhaW5lZFwiOlsxMjFdLFwic2NhbGluZ1wiOlsxMjVdLFwibG9nYXJpdGhtaWNhbGx5XCI6WzEyNl0sXCJudW1iZXJcIjpbMTI5XSxcIm5vZGVzLlwiOlsxMzJdfX0sXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MzgzMDcxXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9jb25mL3NpZ2NvbW0vc2lnY29tbTIwMDEuaHRtbCNTdG9pY2FNS0tCMDFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1Lzk2NDcyMy4zODMwNzFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0zODMwNzFcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RvaS5hY20ub3JnLzEwLjExNDUvOTY0NzIzLjM4MzA3MVwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MzgzMDcxXCJ9XSxcIlZGTlwiOlwiQUNNIFNwZWNpYWwgSW50ZXJlc3QgR3JvdXAgb24gRGF0YSBDb21tdW5pY2F0aW9uXCIsXCJWU05cIjpcIlNJR0NPTU1cIixcIlZcIjozMSxcIklcIjo0LFwiRlBcIjoxNDksXCJMUFwiOjE2MCxcIkRPSVwiOlwiMTAuMTE0NS85NjQ3MjMuMzgzMDcxXCIsXCJDQ1wiOntcIjc0NDQ5NDczXCI6W1wiVGhlIEZyZWVuZXQgcGVlci10by1wZWVyIHN0b3JhZ2Ugc3lzdGVtIFsgNCAsIDVdLCBsaWtlIENob3JkLCBpcyBkZWNlbnRyYWxpemVkIGFuZCBzeW1tZXRyaWMgYW5kIGF1dG9tYXRpY2FsbHkgYWRhcHRzIHdoZW4gaG9zdHMgbGVhdmUgYW5kIGpvaW4uXCJdLFwiOTU0MzIxNDlcIjpbXCJUaGUgQ2hvcmQgcHJvdG9jb2wgaXMgYWxzbyBzaW1pbGFyIHRvIFBhc3RyeSwgdGhlIGxvY2F0aW9uIGFsZ29yaXRobSB1c2VkIGluIFBBU1QgWyA4IF0uXCJdLFwiMTUyODU0NTg5N1wiOltcIkl0IHVzZXMgY29uc2lzdGVudCBoYXNoaW5nIFsxMSwgIDEzIF0sIHdoaWNoIGhhcyBzZXZlcmFsIGdvb2QgcHJvcGVydGllcy5cXHUwMDFiVGhlIGZvbGxvd2luZyByZXN1bHRzIGFyZSBwcm92ZW4gaW4gdGhlIHBhcGVycyB0aGF0IGludHJvZHVjZWQgY29uc2lzdGVudCBoYXNoaW5nIFsxMSwgIDEzIF06XCJdLFwiMTY0MjAyNzM0OFwiOltcIkNvb3BlcmF0aXZlIE1pcnJvcmluZywgYXMgb3V0bGluZWQgaW4gYSByZWNlbnQgcHJvcG9zYWwgWyA2IF0uXCJdLFwiMjAwMDg3NjAyM1wiOltcIlRoZSBkaXN0cmlidXRlZCBkYXRhIGxvY2F0aW9uIHByb3RvY29sIGRldmVsb3BlZCBieSBQbGF4dG9uIGV0IGFsLiBbIDE5IF0sIGEgdmFyaWFudCBvZiB3aGljaCBpcyB1c2VkIGluIE9jZWFuU3RvcmUgWzEyXSwgaXMgcGVyaGFwcyB0aGUgY2xvc2VzdCBhbGdvcml0aG0gdG8gdGhlIENob3JkIHByb3RvY29sLlwiXSxcIjIwMjA3NjU2NTJcIjpbXCJDaG9yZCB1c2VzIGEgdmFyaWFudCBvZiBjb25zaXN0ZW50IGhhc2hpbmcgWyAxMSBdIHRvIGFzc2lnbiBrZXlzIHRvIENob3JkIG5vZGVzLlxcdTAwMWJJdCB1c2VzIGNvbnNpc3RlbnQgaGFzaGluZyBbIDExICwgMTNdLCB3aGljaCBoYXMgc2V2ZXJhbCBnb29kIHByb3BlcnRpZXMuXFx1MDAxYlRoZSBmb2xsb3dpbmcgcmVzdWx0cyBhcmUgcHJvdmVuIGluIHRoZSBwYXBlcnMgdGhhdCBpbnRyb2R1Y2VkIGNvbnNpc3RlbnQgaGFzaGluZyBbIDExICwgMTNdOlwiXSxcIjIwNjQzNjA1NDNcIjpbXCJBcmNoaXZhbCBJbnRlcm1lbW9yeSB1c2VzIGFuIG9mZi1saW5lIGNvbXB1dGVkIHRyZWUgdG8gbWFwIGxvZ2ljYWwgYWRkcmVzc2VzIHRvIG1hY2hpbmVzIHRoYXQgc3RvcmUgdGhlIGRhdGEgWyAzIF0uXCJdLFwiMjEwNDIxMDg5NFwiOltcIlRoZSBkaXN0cmlidXRlZCBkYXRhIGxvY2F0aW9uIHByb3RvY29sIGRldmVsb3BlZCBieSBQbGF4dG9uIGV0IGFsLiBbMTldLCBhIHZhcmlhbnQgb2Ygd2hpY2ggaXMgdXNlZCBpbiBPY2VhblN0b3JlIFsgMTIgXSwgaXMgcGVyaGFwcyB0aGUgY2xvc2VzdCBhbGdvcml0aG0gdG8gdGhlIENob3JkIHByb3RvY29sLlwiXSxcIjIxMjIyNjk5MjVcIjpbXCJETlMgcHJvdmlkZXMgYSBob3N0IG5hbWUgdG8gSVAgYWRkcmVzcyBtYXBwaW5nIFsgMTUgXS5cIl0sXCIyMTI3NTU1MTQzXCI6W1wiSW5mb3JtYXRpb24gYWJvdXQgYW4gb2JqZWN0IGlzIHN0b3JlZCBpbiBhIHBhcnRpY3VsYXIgbGVhZiBkb21haW4sIGFuZCBwb2ludGVyIGNhY2hlcyBwcm92aWRlIHNlYXJjaCBzaG9ydCBjdXRzIFsgMjIgXS5cIl0sXCIyMTUwNjc2NTg2XCI6W1wiVGhlc2UgQ2hvcmQgbm9kZXMgYXJlIHBhcnQgb2YgYW4gZXhwZXJpbWVudGFsIGRpc3RyaWJ1dGVkIGZpbGUgc3lzdGVtIFsgNyBdLCB0aG91Z2ggdGhpcyBzZWN0aW9uIGNvbnNpZGVycyBvbmx5IHRoZSBDaG9yZCBjb21wb25lbnQgb2YgdGhlIHN5c3RlbS5cIl0sXCIyMTYzMDU5MTkwXCI6W1wiQ0FOIHVzZXMgYSAtZGltZW5zaW9uYWwgQ2FydGVzaWFuIGNvb3JkaW5hdGUgc3BhY2UgKGZvciBzb21lIGZpeGVkICkgdG8gaW1wbGVtZW50IGEgZGlzdHJpYnV0ZWQgaGFzaCB0YWJsZSB0aGF0IG1hcHMga2V5cyBvbnRvIHZhbHVlcyBbIDIwIF0uXCJdLFwiMjE2NDE5MjcyMlwiOltcIkNob3Jk4oCZcyByb3V0aW5nIHByb2NlZHVyZSBtYXkgYmUgdGhvdWdodCBvZiBhcyBhIG9uZWRpbWVuc2lvbmFsIGFuYWxvZ3VlIG9mIHRoZSBHcmlkIGxvY2F0aW9uIHN5c3RlbSBbIDE0IF0uXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDE2NTA2NzU1MDksMjExOTI0NTEwNiwyMTIzNDgyNDYyLDIxNTA2NzY1ODYsMjEwNDIxMDg5NCwyMTc0NTA3ODY5LDIwNTYzNjMzNTMsMjAwNzIxOTMwNCwyMDIwNzY1NjUyLDIxMjM4MjA4MjAsMTU4NDYzNTQ1OSwyMDAwODc2MDIzLDIxNjkwNDcyMjYsMjE2MjczMzY3NywxNTIwOTE0OTQzLDIxNTY2NDQ1MDEsMTk3MDU2NDc3OCwyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwxNjUwNjc1NTA5LDIxMTkyNDUxMDYsMjEyMzQ4MjQ2MiwyMTUwNjc2NTg2LDIxMDQyMTA4OTQsMjE3NDUwNzg2OSwyMDU2MzYzMzUzLDIwMDcyMTkzMDQsMjAyMDc2NTY1MiwyMTIzODIwODIwLDE1ODQ2MzU0NTksMjAwMDg3NjAyMywyMTY5MDQ3MjI2LDIxNjI3MzM2NzcsMTUyMDkxNDk0MywyMTU2NjQ0NTAxLDE5NzA1NjQ3NzhdLFwiQU5GXCI6W3tcIkZOXCI6XCJJb25cIixcIkxOXCI6XCJTdG9pY2FcIixcIlNcIjoxfSx7XCJGTlwiOlwiUm9iZXJ0IFRhcHBhblwiLFwiTE5cIjpcIk1vcnJpc1wiLFwiU1wiOjJ9LHtcIkZOXCI6XCJEYXZpZCBSLlwiLFwiTE5cIjpcIkthcmdlclwiLFwiU1wiOjN9LHtcIkZOXCI6XCJNLiBGcmFuc1wiLFwiTE5cIjpcIkthYXNob2VrXCIsXCJTXCI6NH0se1wiRk5cIjpcIkhhcmlcIixcIkxOXCI6XCJCYWxha3Jpc2huYW5cIixcIlNcIjo1fV0sXCJCVlwiOlwiYWNtIHNwZWNpYWwgaW50ZXJlc3QgZ3JvdXAgb24gZGF0YSBjb21tdW5pY2F0aW9uXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIkFDTVwifSJ9LHsibG9ncHJvYiI6LTE0LjkyMSwia2VzRW50aXR5SWQiOjM4OTc0MywiSWQiOjIxNjMwNTkxOTAsIlRpIjoiYSBzY2FsYWJsZSBjb250ZW50IGFkZHJlc3NhYmxlIG5ldHdvcmsiLCJZIjoyMDAxLCJEIjoiMjAwMS0xMC0wMSIsIkNDIjoxMDA3OCwiUklkIjpbMjExODQyODE5MywyMTU4MDQ5ODIxLDIxMDE5NjMyNjIsMjEwNDIxMDg5NCwyMTc0NTA3ODY5LDIxNjQxOTI3MjIsMTY2MzQ5MzY0OSwyMTU1NjU5MjkyLDIxNDU3MjE0NzksMjAwMDg3NjAyMywxOTg5MTYzMDA2LDIwOTc1NjI3MTUsMjA4NTEzMzE1NCwyMTE1NTk5OTQ2LDIxNjY0NTQ5MTgsMjE2MzU5ODY5MCwyMDAwMjYxOTExLDE0OTI1NTI1MzEsMTU2ODIyMDk5OSwyMTY5ODA2ODA0LDIwOTU3OTIwODIsMTk5MzI0ODYxMywyMDM0MDYyMTQ0LDIwOTg1OTY1MjQsMTU3OTU5NDM2LDIwNjA0OTM2MiwyNDA5Njk5NCwxMjg1NTA5MjAsMTQ3OTIwNDI1LDE3NDMzMjAyOCwyNjQwMzM2Ml0sIkFBIjpbeyJBdU4iOiJzeWx2aWEgcmF0bmFzYW15In0seyJBdU4iOiJwYXVsIGZyYW5jaXMifSx7IkF1TiI6Im1hcmsgaGFuZGxleSJ9LHsiQXVOIjoicmljaGFyZCBtIGthcnAifSx7IkF1TiI6InNjb3R0IHNoZW5rZXIifV0sIkYiOlt7IkZOIjoia2V5IGJhc2VkIHJvdXRpbmcifSx7IkZOIjoiY29udGVudCBhZGRyZXNzYWJsZSBuZXR3b3JrIn0seyJGTiI6InNraXAgZ3JhcGgifSx7IkZOIjoiY2hvcmQifSx7IkZOIjoiZGlzdHJpYnV0ZWQgaGFzaCB0YWJsZSJ9LHsiRk4iOiJoYXNoIHRhYmxlIn0seyJGTiI6Imhhc2ggZnVuY3Rpb24ifSx7IkZOIjoicGVlciB0byBwZWVyIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkEgc2NhbGFibGUgY29udGVudC1hZGRyZXNzYWJsZSBuZXR3b3JrXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6NzQsXCJJbnZlcnRlZEluZGV4XCI6e1wiSGFzaFwiOlswXSxcInRhYmxlc1wiOlsxXSxcIi1cIjpbMiw4XSxcIndoaWNoXCI6WzNdLFwibWFwXCI6WzRdLFwiXFxcImtleXNcXFwiXCI6WzVdLFwib250b1wiOls2XSxcIlxcXCJ2YWx1ZXNcXFwiXCI6WzddLFwiYXJlXCI6WzldLFwiYW5cIjpbMTBdLFwiZXNzZW50aWFsXCI6WzExXSxcImJ1aWxkaW5nXCI6WzEyXSxcImJsb2NrXCI6WzEzXSxcImluXCI6WzE0XSxcIm1vZGVyblwiOlsxNV0sXCJzb2Z0d2FyZVwiOlsxNl0sXCJzeXN0ZW1zLlwiOlsxNywzMF0sXCJXZVwiOlsxOF0sXCJiZWxpZXZlXCI6WzE5XSxcImFcIjpbMjAsMzksNDRdLFwic2ltaWxhclwiOlsyMV0sXCJmdW5jdGlvbmFsaXR5XCI6WzIyLDUxXSxcIndvdWxkXCI6WzIzXSxcImJlXCI6WzI0XSxcImVxdWFsbHlcIjpbMjVdLFwidmFsdWFibGVcIjpbMjZdLFwidG9cIjpbMjddLFwibGFyZ2VcIjpbMjhdLFwiZGlzdHJpYnV0ZWRcIjpbMjksNDVdLFwiSW5cIjpbMzFdLFwidGhpc1wiOlszMl0sXCJwYXBlcixcIjpbMzNdLFwid2VcIjpbMzQsNjRdLFwiaW50cm9kdWNlXCI6WzM1XSxcInRoZVwiOlszNl0sXCJjb25jZXB0XCI6WzM3XSxcIm9mXCI6WzM4XSxcIkNvbnRlbnQtQWRkcmVzc2FibGVcIjpbNDBdLFwiTmV0d29ya1wiOls0MV0sXCIoQ0FOKVwiOls0Ml0sXCJhc1wiOls0M10sXCJpbmZyYXN0cnVjdHVyZVwiOls0Nl0sXCJ0aGF0XCI6WzQ3XSxcInByb3ZpZGVzXCI6WzQ4XSxcImhhc2hcIjpbNDldLFwidGFibGUtbGlrZVwiOls1MF0sXCJvblwiOls1Ml0sXCJJbnRlcm5ldC1saWtlXCI6WzUzXSxcInNjYWxlcy5cIjpbNTRdLFwiVGhlXCI6WzU1XSxcIkNBTlwiOls1Nl0sXCJpc1wiOls1N10sXCJzY2FsYWJsZSxcIjpbNThdLFwiZmF1bHQtdG9sZXJhbnRcIjpbNTldLFwiYW5kXCI6WzYwLDYzLDY5XSxcImNvbXBsZXRlbHlcIjpbNjFdLFwic2VsZi1vcmdhbml6aW5nLFwiOls2Ml0sXCJkZW1vbnN0cmF0ZVwiOls2NV0sXCJpdHNcIjpbNjZdLFwic2NhbGFiaWxpdHksXCI6WzY3XSxcInJvYnVzdG5lc3NcIjpbNjhdLFwibG93LWxhdGVuY3lcIjpbNzBdLFwicHJvcGVydGllc1wiOls3MV0sXCJ0aHJvdWdoXCI6WzcyXSxcInNpbXVsYXRpb24uXCI6WzczXX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY29uZmVyZW5jZXMuc2lnY29tbS5vcmcvc2lnY29tbS8yMDAxL3AxMy1yYXRuYXNhbXkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9zc2UudG9uZ2ppLmVkdS5jbi9saWppYW5nZmVuZy9EaXN0cmlidXRlZENvbXB1dGluZzIwMTQvcGFwZXJzL0ElMjBTY2FsYWJsZSUyMENvbnRlbnQtQWRkcmVzc2FibGUlMjBOZXR3b3JrLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3d3dy5jcy51dGV4YXMuZWR1L3VzZXJzL2Jyb3duZS9jczM5NXRmMjAwNS9QYXBlcnMvQ2FuLXAxNjEtcmF0bmFzYW15LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lmljc2kuYmVya2VsZXkuZWR1L2Z0cC9nbG9iYWwvcHViL3RlY2hyZXBvcnRzLzIwMDAvdHItMDAtMDEwLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY3Npcy5wYWNlLmVkdS9+bWFyY2hlc2UvQ1M4NjUvUGFwZXJzL0NBTi1wYXBlci5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5lZWNzLmhhcnZhcmQuZWR1L35tZW1hL2NvdXJzZXMvY3MyNjQvcGFwZXJzL3AxMy1yYXRuYXNhbXkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9ncmFhbC5lbnMtbHlvbi5mci8lN0VhYmVub2l0L3Jlc28wNS9wYXBpZXIvY2FuLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmNvcm5lbGwuZWR1L3Blb3BsZS9lZ3MvY3M2MTUtc3ByaW5nMDYvY2FuLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmljLnVuaWNhbXAuYnIvfmNlbGlvL3BlZXIycGVlci9jYW4vQ0FOLXJhdG5hc2FteS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3JvYm90aWNzLmVlY3MuYmVya2VsZXkuZWR1L353bHIvMjI4YS9Qcm9qZWN0cy9SYXRuYXNhbXkyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbHNpcnd3dy5lcGZsLmNoL2NvdXJzZXMvZGlwLzIwMDJ3cy9zZW1pbmFyLXBhcGVycy9wMTMtcmF0bmFzYW15JTIwKENBTikucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jcy5iYXlsb3IuZWR1L35kb25haG9vL2NsYXNzZXMvNTMyMS9wYXBlcnMvQ0FOLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lm1waS1zd3Mub3JnL35mcmFuY2lzL3AxMy1yYXRuYXNhbXkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MudWNzYi5lZHUvfmViZWxkaW5nL2NvdXJzZXMvMjc2L2YwNC9wYXBlcnMvY2FuLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzZC51b2MuZ3Ivfmh5NTU0L3BhcGVycy9wMTMtcmF0bmFzYW15LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnByaW5jZXRvbi5lZHUvY291cnNlcy9hcmNoaXZlL2ZhbGwwMi9jczU5N0MvUDJQL1JvdXRpbmdBZGRyZXNzaW5nTXVsdGljYXN0L0NBTl9zaWdjb21tLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY3MtcHViLmJ1LmVkdS9ncm91cHMvbnJnL3JlYWRpbmdsaXN0L3JhdG5hc2FteS1zaWdjb21tMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jcy5lY3MuYmF5bG9yLmVkdS9+ZG9uYWhvby9jbGFzc2VzLzUzMjEvcGFwZXJzL0NBTi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy51b2kuZ3IvfnBpdG91cmEvY291cnNlcy9wMnAvY2FuX3NpZ2NvbW0ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9uZXQucGt1LmVkdS5jbi9+Y291cnNlL2NzNTAxLzIwMDUvcmVhZGluZ3MvcDEzLXJhdG5hc2FteS5wZGZcIn1dLFwiVkZOXCI6XCJBQ00gU3BlY2lhbCBJbnRlcmVzdCBHcm91cCBvbiBEYXRhIENvbW11bmljYXRpb25cIixcIlZTTlwiOlwiU0lHQ09NTVwiLFwiVlwiOjMxLFwiSVwiOjQsXCJGUFwiOjE2MSxcIkxQXCI6MTcyLFwiRE9JXCI6XCIxMC4xMTQ1Lzk2NDcyMy4zODMwNzJcIixcIkNDXCI6e1wiMjQwOTY5OTRcIjpbXCJsYXJnZSBzY2FsZSBzdG9yYWdlIG1hbmFnZW1lbnQgc3lzdGVtcyBsaWtlIE9jZWFuU3RvcmUsIFB1YmxpdXMgVWJpcXVpdG91cyBjb21wdXRpbmcgZW52aXJvbm1lbnRzIHN1Y2ggYXMgdGhvc2UgZGVzY3JpYmVkIGluIFsxMV0gZnJlcXVlbnRseSByZXF1aXJlIHNlcnZpY2VzIHN1Y2ggYXMgb2JqZWN0IHRyYWNraW5nLCBzZXJ2aWNlIGxvY2F0aW9uIGV0Yy5cIixcIldlIGhlbmNlIGF2b2lkZWQgbW9yZSB0cmFkaXRpb25hbCBoaWVyYXJjaGljYWwgcm91dGluZyBhbGdvcml0aG1zIFsxOCwgMTEsIDJdLlwiXSxcIjEyODU1MDkyMFwiOltcIkluIFsxN10sIHdlIGRlc2NyaWJlLCBpbiBzb21lIGRldGFpbCwgb25lIHBvc3NpYmxlIGFwcGxpY2F0aW9uLCB3aGljaCB3ZSBjYWxsIGEg4oCcZ3Jhc3Mtcm9vdHPigJ0gY29udGVudCBkaXN0cmlidXRpb24gc3lzdGVtLCB0aGF0IGxldmVyYWdlcyBvdXIgQ0FOIHdvcmsuXCJdLFwiMTU3OTU5NDM2XCI6W1wiQWxnb3JpdGhtcyBidWlsdCBhcm91bmQgdGhlIGNvbmNlcHQgb2YgZ2VvZ3JhcGhpYyByb3V0aW5nIFs5LCAxMl0gYXJlIHNpbWlsYXIgdG8gb3VyIENBTiByb3V0aW5nIGFsZ29yaXRobSBpbiB0aGF0IHRoZXkgYnVpbGQgYXJvdW5kIHRoZSBub3Rpb24gb2YgZm9yd2FyZGluZyBtZXNzYWdlcyB0aHJvdWdoIGEgY29vcmRpbmF0ZSBzcGFjZS5cIl0sXCIxNzQzMzIwMjhcIjpbXCJXaGlsZSB0cnVseSBkaXN0cmlidXRlZCBpbiBkZXNpZ24sIGZsb29kaW5nIHNlYXJjaCByZXF1ZXN0cyBpcyBub3Qgc2NhbGFibGUgWyA5IF0gYW5kLCBiZWNhdXNlIHRoZSBmbG9vZGluZyBoYXMgdG8gYmUgY3VydGFpbGVkIGF0IHNvbWUgcG9pbnQsIG1heSBmYWlsIHRvIGZpbmQgY29udGVudCB0aGF0IGlzIGFjdHVhbGx5IGluIHRoZSBzeXN0ZW0uXFx1MDAxYlRoZSBkaXN0cmlidXRlZCBzZWFyY2ggY29tcG9uZW50IG9mIEdudXRlbGxhIHRodXMgaGFzIHNjYWxhYmlsaXR5IHByb2JsZW1zIFsgOSBdIGFuZCwgYmVjYXVzZSB0aGUgZmxvb2RpbmcgaGFzIHRvIGJlIGN1cnRhaWxlZCBhdCBzb21lIHBvaW50LCBtYXkgYWN0dWFsbHkgZmFpbCB0byBmaW5kIGNvbnRlbnQgdGhhdCBpcyBhY3R1YWxseSBpbiB0aGUgc3lzdGVtLlwiXSxcIjIwNjA0OTM2MlwiOltcIkFkZGl0aW9uYWwgcmVsYXRlZCBwcm9ibGVtcyB0aGF0IGFyZSB0b3BpY3MgZm9yIGZ1dHVyZSB3b3JrIGluY2x1ZGUgdGhlIGV4dGVuc2lvbiBvZiBvdXIgQ0FOIGFsZ29yaXRobXMgdG8gaGFuZGxlIG11dGFibGUgY29udGVudCwgYW5kIHRoZSBkZXNpZ24gb2Ygc2VhcmNoIHRlY2huaXF1ZXMgWzgsIDIxXSBzdWNoIGFzIGtleXdvcmQgc2VhcmNoaW5nIGJ1aWx0IGFyb3VuZCBvdXIgQ0FOIGluZGV4aW5nIG1lY2hhbmlzbS5cIl0sXCIxNTY4MjIwOTk5XCI6W1wib24gdGhlIGRldGFpbHMgb2YgaG93IHRoaXMgaXMgZG9uZSwgYnV0IHdlIHVzZSB0aGUgc2FtZSBib290c3RyYXAgbWVjaGFuaXNtIGFzIFlPSUQgWzRdLlwiLFwiQXMgaW4gWzRdIHdlIGFzc3VtZSB0aGF0IGEgQ0FOIGhhcyBhbiBhc3NvY2lhdGVkIEROUyBkb21haW4gbmFtZSwgYW5kIHRoYXQgdGhpcyByZXNvbHZlcyB0byB0aGUgSVAgYWRkcmVzcyBvZiBvbmUgb3IgbW9yZSBDQU4gYm9vdHN0cmFwIG5vZGVzLlwiLFwiU2ltcGxlIHRlY2huaXF1ZXMgdG8ga2VlcCB0aGlzIGxpc3QgcmVhc29uYWJseSBjdXJyZW50IGFyZSBkZXNjcmliZWQgaW4gWzRdLlwiXSxcIjE5ODkxNjMwMDZcIjpbXCJXZSBoZW5jZSBhdm9pZGVkIG1vcmUgdHJhZGl0aW9uYWwgaGllcmFyY2hpY2FsIHJvdXRpbmcgYWxnb3JpdGhtcyBbMTgsIDExLCAgMiBdLlwiXSxcIjE5OTMyNDg2MTNcIjpbXCJXZSBoZW5jZSBhdm9pZGVkIG1vcmUgdHJhZGl0aW9uYWwgaGllcmFyY2hpY2FsIHJvdXRpbmcgYWxnb3JpdGhtcyBbMTgsIDExLCAyXS5cIl0sXCIyMDAwMjYxOTExXCI6W1wiRmluYWxseSwgYSBsb3Qgb2Ygb25nb2luZyByZXNlYXJjaCBlZmZvcnQgZm9jdXNlcyBvbiB1bmRlcnN0YW5kaW5nIG5ldHdvcmsgdG9wb2xvZ3kgYW5kIGJ1aWxkaW5nIG5ldHdvcmsgbWVhc3VyZW1lbnQgc2VydmljZXMgWzIsIDE5LCA4XS5cIl0sXCIyMDAwODc2MDIzXCI6W1wiUGVyaGFwcyBjbG9zZXN0IGluIHNwaXJpdCB0byB0aGUgQ0FOIHJvdXRpbmcgc2NoZW1lIGlzIHRoZSBQbGF4dG9uIGFsZ29yaXRobSBbMjBdLlwiLFwiU2luY2UgdGhlcmUgaXMgbm8gbm9kZSBjdXJyZW50bHkgaW4gdGhlIHN5c3RlbSB3aXRoIGxhYmVsIG9mIHRoZSBmb3JtIDEzWCwgbm9kZXMgaW5zdGVhZCBzdG9yZSBhIHBvaW50ZXIgdG8gYSBub2RlIGN1cnJlbnRseSBpbiB0aGUgc3lzdGVtLCB3aXRoIGEgbGFiZWwgdGhhdCBpcyBhIGdvb2Qg4oCdYXBwcm94aW1hdGlvbuKAnSBvZiB0aGUgbGFiZWwgMTNYIChkZXRhaWxzIG9mIHdoYXQgY29uc3RpdHV0ZXMgYSBnb29kIGFwcHJveGltYXRpb24gYXJlIGluIFsyMF0pLlwiXSxcIjIwMzQwNjIxNDRcIjpbXCJGaW5hbGx5LCBhIGxvdCBvZiBvbmdvaW5nIHJlc2VhcmNoIGVmZm9ydCBmb2N1c2VzIG9uIHVuZGVyc3RhbmRpbmcgbmV0d29yayB0b3BvbG9neSBhbmQgYnVpbGRpbmcgbmV0d29yayBtZWFzdXJlbWVudCBzZXJ2aWNlcyBbMiwgMTksIDhdLlwiXSxcIjIwOTU3OTIwODJcIjpbXCJPdXIgYWxnb3JpdGhtcyBkcmF3IGhlYXZpbHkgZnJvbSB0aGUgc29mdC1zdGF0ZSBbMjFdIHN0eWxlIHJlY292ZXJ5IGFsZ29yaXRobXMgZGVzY3JpYmVkIGluIFs2XS5cIl0sXCIyMDk3NTYyNzE1XCI6W1wiT3VyIGFsZ29yaXRobXMgZHJhdyBoZWF2aWx5IGZyb20gdGhlIHNvZnQtc3RhdGUgWzIxXSBzdHlsZSByZWNvdmVyeSBhbGdvcml0aG1zIGRlc2NyaWJlZCBpbiBbNl0uXCJdLFwiMjA5ODU5NjUyNFwiOltcImxhcmdlIHNjYWxlIHN0b3JhZ2UgbWFuYWdlbWVudCBzeXN0ZW1zIGxpa2UgT2NlYW5TdG9yZSwgUHVibGl1cyBVYmlxdWl0b3VzIGNvbXB1dGluZyBlbnZpcm9ubWVudHMgc3VjaCBhcyB0aG9zZSBkZXNjcmliZWQgaW4gWyAxMSBdIGZyZXF1ZW50bHkgcmVxdWlyZSBzZXJ2aWNlcyBzdWNoIGFzIG9iamVjdCB0cmFja2luZywgc2VydmljZSBsb2NhdGlvbiBldGMuXFx1MDAxYldlIGhlbmNlIGF2b2lkZWQgbW9yZSB0cmFkaXRpb25hbCBoaWVyYXJjaGljYWwgcm91dGluZyBhbGdvcml0aG1zIFsxOCwgIDExICwgMl0uXCJdLFwiMjEwNDIxMDg5NFwiOltcIkNBTnMgY291bGQgYWxzbyBiZSB1c2VkIGluIGxhcmdlIHNjYWxlIHN0b3JhZ2UgbWFuYWdlbWVudCBzeXN0ZW1zIHN1Y2ggYXMgT2NlYW5TdG9yZSBbMTBdLCBGYXJzaXRlIFsxXSwgYW5kIFB1YmxpdXMgWzEzXS5cIixcIkJlcmtlbGV5IFsxMF0gaXMgYnVpbGRpbmcgYSB1dGlsaXR5IGluZnJhc3RydWN0dXJlIGRlc2lnbmVkIHRvIHNwYW4gdGhlIGdsb2JlIGFuZCBwcm92aWRlIGNvbnRpbnVvdXMgYWNjZXNzIHRvIHBlcnNpc3RlbnQgaW5mb3JtYXRpb24uXCIsXCJBIG51bWJlciBvZiBvbmdvaW5nIHByb2plY3RzIGJvdGggaW4gcmVzZWFyY2ggYW5kIGluZHVzdHJ5IGFyZSBsb29raW5nIGludG8gdGhlIHByb2JsZW0gb2YgYnVpbGRpbmcgbGFyZ2Utc2NhbGUgZGlzdHJpYnV0ZWQgc3lzdGVtcyB0aGF0IGFyZSBib3RoIHNlY3VyZSBhbmQgcmVzaXN0YW50IHRvIGRlbmlhbC1vZi1zZXJ2aWNlIGF0dGFja3MgWzEzLCAxMCwgMl0uXCJdLFwiMjExNTU5OTk0NlwiOltcIkNBTnMgY291bGQgYWxzbyBiZSB1c2VkIGluIGxhcmdlIHNjYWxlIHN0b3JhZ2UgbWFuYWdlbWVudCBzeXN0ZW1zIHN1Y2ggYXMgT2NlYW5TdG9yZSBbMTBdLCBGYXJzaXRlIFsxXSwgYW5kIFB1YmxpdXMgWzEzXS5cIl0sXCIyMTU1NjU5MjkyXCI6W1wiV2Ugc2ltdWxhdGVkIG91ciBDQU4gZGVzaWduIG9uIFRyYW5zaXQtU3R1YiAoVFMpIHRvcG9sb2dpZXMgdXNpbmcgdGhlIEdULUlUTSB0b3BvbG9neSBnZW5lcmF0b3IgWzIyXS5cIl0sXCIyMTU4MDQ5ODIxXCI6W1wiVGhlIGZ1bmN0aW9uaW5nIG9mIGEgQ0FOIGRvZXMgbm90IGRlcGVuZCAzUmVjZW50bHkgcHJvcG9zZWQgcm91dGluZyBhbGdvcml0aG1zIGZvciBsb2NhdGlvbiBzZXJ2aWNlcyBbMTUsIDIwXSByb3V0ZSBpbiBPKGxvZyBuKSBob3BzIHdpdGggZWFjaCBub2RlIG1haW50YWluaW5nIE8obG9nIG4pIG5laWdoYm9ycy5cIl0sXCIyMTYzNTk4NjkwXCI6W1wiUHVibGl1cyBbIDEyIF0gaXMgYSBXZWIgcHVibGlzaGluZyBzeXN0ZW0gdGhhdCBpcyBoaWdobHkgcmVzaXN0YW50IHRvIGNlbnNvcnNoaXAgYW5kIHByb3ZpZGVzIHB1Ymxpc2hlcnMgd2l0aCBhIGhpZ2ggZGVncmVlIG9mIGFub255bWl0eS5cIl0sXCIyMTY0MTkyNzIyXCI6W1wiQWxnb3JpdGhtcyBidWlsdCBhcm91bmQgdGhlIGNvbmNlcHQgb2YgZ2VvZ3JhcGhpYyByb3V0aW5nIFs5LCAxMl0gYXJlIHNpbWlsYXIgdG8gb3VyIENBTiByb3V0aW5nIGFsZ29yaXRobSBpbiB0aGF0IHRoZXkgYnVpbGQgYXJvdW5kIHRoZSBub3Rpb24gb2YgZm9yd2FyZGluZyBtZXNzYWdlcyB0aHJvdWdoIGEgY29vcmRpbmF0ZSBzcGFjZS5cIl0sXCIyMTY2NDU0OTE4XCI6W1wiVGhlcmUgYXJlIG1hbnkgb3RoZXIgZGlyZWN0aW9ucyBpbiB3aGljaCBDQU4gY2FuIGJlIHVzZWQ6IGFwcGxpY2F0aW9uIGxheWVyIG11bHRpY2FzdCBbIDUgXSwgZXZlbnQgbm90aWNhdGlvbiBzZXJ2aWNlcyBbNF0sIGNoYXQgc2VydmljZXMgWzNdIGFuZCBvdGhlcnMuXCJdLFwiMjE2OTgwNjgwNFwiOltcIkZpbmFsbHksIGEgbG90IG9mIG9uZ29pbmcgcmVzZWFyY2ggZWZmb3J0IGZvY3VzZXMgb24gdW5kZXJzdGFuZGluZyBuZXR3b3JrIHRvcG9sb2d5IGFuZCBidWlsZGluZyBuZXR3b3JrIG1lYXN1cmVtZW50IHNlcnZpY2VzIFsyLCAgMTkgLCA4XS4gU29tZSBjb21tZXJjaWFsIGNvbXBhbmllcyBbMV0gZXZlbiBvZmZlciBzZXJ2aWNlcyBiYXNlZCBvbiB0ZWNobm9sb2d5IHRoYXQgaGVscCDigJ1tYXDigJ0gdGhlIEludGVybmV0LlwiXSxcIjIxNzQ1MDc4NjlcIjpbXCJGcmVlbmV0IFs1LCAyXSBpcyBhIGZpbGUgc2hhcmluZyBhcHBsaWNhdGlvbiB0aGF0IGFkZGl0aW9uYWxseSBwcm90ZWN0cyB0aGUgYW5vbnltaXR5IG9mIGJvdGggYXV0aG9ycyBhbmQgcmVhZGVycy5cIixcIldpdGggc3lzdGVtcyBzdWNoIGFzIFsyLCA2XVwiLFwiaG93ZXZlciBpdCBpcyBxdWl0ZSBwb3NzaWJsZSB0aGF0IGV2ZW4gd2l0aCBldmVyeSBub2RlIGluIHRoZSBzeXN0ZW0gYmVoYXZpbmcgY29ycmVjdGx5LCBjb250ZW50IG1heSBub3QgYmUgZm91bmQgZWl0aGVyIGJlY2F1c2UgY29udGVudCBpcyBiZXlvbmQgdGhlIGhvcml6b24gb2YgYSBwYXJ0aWN1bGFyIG5vZGUgWzZdIG9yIGJlY2F1c2UgZGlmZmVyZW50IG5vZGVzIGhhdmUgZGlmZmVyZW50LCBpbmNvbnNpc3RlbnQgdmlld3Mgb2YgdGhlIG5ldHdvcmsgWzJdLlwiLFwiQSBudW1iZXIgb2Ygb25nb2luZyBwcm9qZWN0cyBib3RoIGluIHJlc2VhcmNoIGFuZCBpbmR1c3RyeSBhcmUgbG9va2luZyBpbnRvIHRoZSBwcm9ibGVtIG9mIGJ1aWxkaW5nIGxhcmdlLXNjYWxlIGRpc3RyaWJ1dGVkIHN5c3RlbXMgdGhhdCBhcmUgYm90aCBzZWN1cmUgYW5kIHJlc2lzdGFudCB0byBkZW5pYWwtb2Ytc2VydmljZSBhdHRhY2tzIFsxMywgMTAsIDJdLlwiXX0sXCJQUlwiOlsyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE1ODA0OTgyMSwxNjUwNjc1NTA5LDIxMjM0ODI0NjIsMjExOTI0NTEwNiwyMTc0NTA3ODY5LDIwMDcyMTkzMDQsMjE1MDY3NjU4NiwyMTA0MjEwODk0LDIwNTYzNjMzNTMsMTU4NDYzNTQ1OSwyMTIzODIwODIwLDIwMDA4NzYwMjMsMjAyMDc2NTY1MiwyMTY5MDQ3MjI2LDE5NzA1NjQ3NzgsMjE1NjY0NDUwMSwyMTM1ODA1NjA3LDE0OTI1NTI1MzEsMjExODQyODE5MywyMTY3ODk4NDE0LDIxNTgwNDk4MjEsMTY1MDY3NTUwOSwyMTIzNDgyNDYyLDIxMTkyNDUxMDYsMjE3NDUwNzg2OSwyMDA3MjE5MzA0LDIxNTA2NzY1ODYsMjEwNDIxMDg5NCwyMDU2MzYzMzUzLDE1ODQ2MzU0NTksMjEyMzgyMDgyMCwyMDAwODc2MDIzLDIwMjA3NjU2NTIsMjE2OTA0NzIyNiwxOTcwNTY0Nzc4LDIxNTY2NDQ1MDEsMjEzNTgwNTYwNywxNDkyNTUyNTMxXSxcIkFORlwiOlt7XCJGTlwiOlwiU3lsdmlhXCIsXCJMTlwiOlwiUmF0bmFzYW15XCIsXCJTXCI6MX0se1wiRk5cIjpcIlBhdWxcIixcIkxOXCI6XCJGcmFuY2lzXCIsXCJTXCI6Mn0se1wiRk5cIjpcIk1hcmtcIixcIkxOXCI6XCJIYW5kbGV5XCIsXCJTXCI6M30se1wiRk5cIjpcIlJpY2hhcmQgTS5cIixcIkxOXCI6XCJLYXJwXCIsXCJTXCI6NH0se1wiRk5cIjpcIlNjb3R0XCIsXCJMTlwiOlwiU2hlbmtlclwiLFwiU1wiOjV9XSxcIkJWXCI6XCJhY20gc3BlY2lhbCBpbnRlcmVzdCBncm91cCBvbiBkYXRhIGNvbW11bmljYXRpb25cIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiQUNNXCJ9In0seyJsb2dwcm9iIjotMTQuOTYxLCJrZXNFbnRpdHlJZCI6NDA0NTc5LCJJZCI6MjE2Nzg5ODQxNCwiVGkiOiJwYXN0cnkgc2NhbGFibGUgZGVjZW50cmFsaXplZCBvYmplY3QgbG9jYXRpb24gYW5kIHJvdXRpbmcgZm9yIGxhcmdlIHNjYWxlIHBlZXIgdG8gcGVlciBzeXN0ZW1zIiwiWSI6MjAwMSwiRCI6IjIwMDEtMTEtMTIiLCJDQyI6MTA4NzcsIlJJZCI6WzIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTYzMDU5MTkwLDE2NTA2NzU1MDksMjEwNDIxMDg5NCwyMTc0NTA3ODY5LDIxNjQxOTI3MjIsMjE1MDY3NjU4NiwxNjYzNDkzNjQ5LDIxMjM4MjA4MjAsMTU4NDYzNTQ1OSwyMTU1NjU5MjkyLDIxMjU4NTU3NTAsMjE1NzkxODYxNywyMDAwODc2MDIzLDIxMTU1OTk5NDYsMTU4MDAwNDQ0MCwxOTU3NTgyNTkwLDIxMTAxNTg3OTIsMTk5MzI0ODYxMywyMDA0NzU1OTE4LDIxMDAxMzIwMjgsMjAwMjEzMjQ3NSwxNTg4Nzk5NDQyLDIxMzA0OTM0MjYsMjEyMzgzNzkwOSwyMjkxNzMzMjY4LDE5OTcwMTk3MTBdLCJBQSI6W3siQXVOIjoiYW50b255IGkgdCByb3dzdHJvbiJ9LHsiQXVOIjoicGV0ZXIgZHJ1c2NoZWwifV0sIkYiOlt7IkZOIjoia2FkZW1saWEifSx7IkZOIjoia2V5IGJhc2VkIHJvdXRpbmcifSx7IkZOIjoiY29udGVudCBhZGRyZXNzYWJsZSBuZXR3b3JrIn0seyJGTiI6ImRlYWQgcGVlciBkZXRlY3Rpb24ifSx7IkZOIjoiY2hvcmQifSx7IkZOIjoiZGlzdHJpYnV0ZWQgaGFzaCB0YWJsZSJ9LHsiRk4iOiJwYXN0cnkifSx7IkZOIjoib3ZlcmxheSBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIG5ldHdvcmsifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiUGFzdHJ5OiBTY2FsYWJsZSwgRGVjZW50cmFsaXplZCBPYmplY3QgTG9jYXRpb24sIGFuZCBSb3V0aW5nIGZvciBMYXJnZS1TY2FsZSBQZWVyLXRvLVBlZXIgU3lzdGVtc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjIxNSxcIkludmVydGVkSW5kZXhcIjp7XCJUaGlzXCI6WzBdLFwicGFwZXJcIjpbMV0sXCJwcmVzZW50c1wiOlsyXSxcInRoZVwiOlszLDQxLDY3LDg4LDkxLDEwMSwxMTksMTQzLDE1NSwxNzJdLFwiZGVzaWduXCI6WzRdLFwiYW5kXCI6WzUsMTQsMjYsNjIsODAsMTIyLDEzMSwxNjYsMTc1LDE5OCwyMDQsMjA5XSxcImV2YWx1YXRpb25cIjpbNl0sXCJvZlwiOls3LDM3LDUxLDExNCwxMjUsMTU3LDE3NywxOTBdLFwiUGFzdHJ5LFwiOls4XSxcImFcIjpbOSwzMCw0OSw3MSw3OCw4MSw4Myw5NCwxNDksMTgzXSxcInNjYWxhYmxlLFwiOlsxMCwxNjVdLFwiZGlzdHJpYnV0ZWRcIjpbMTFdLFwib2JqZWN0XCI6WzEyLDI3XSxcImxvY2F0aW9uXCI6WzEzLDI4XSxcInJvdXRpbmdcIjpbMTUsMjUsMTU5XSxcInN1YnN0cmF0ZVwiOlsxNl0sXCJmb3JcIjpbMTddLFwid2lkZS1hcmVhXCI6WzE4XSxcInBlZXItdG8tcGVlclwiOlsxOSw1Ml0sXCJhcC1cIjpbMjBdLFwicGxpY2F0aW9ucy5cIjpbMjFdLFwiUGFzdHJ5XCI6WzIyLDY4LDg0LDEwNywxMTAsMTMzLDE2MV0sXCJwZXJmb3Jtc1wiOlsyM10sXCJhcHBsaWNhdGlvbi1sZXZlbFwiOlsyNF0sXCJpblwiOlsyOSw2NiwxMThdLFwicG8tXCI6WzMxXSxcInRlbnRpYWxseVwiOlszMl0sXCJ2ZXJ5XCI6WzMzXSxcImxhcmdlXCI6WzM0XSxcIm92ZXJsYXlcIjpbMzVdLFwibmV0d29ya1wiOlszNiw2OSwxMzcsMTg5LDIxMl0sXCJub2Rlc1wiOlszOCwxOTRdLFwiY29ubmVjdGVkXCI6WzM5XSxcInZpYVwiOls0MF0sXCJJbnRlcm5ldC5cIjpbNDJdLFwiSXRcIjpbNDNdLFwiY2FuXCI6WzQ0XSxcImJlXCI6WzQ1XSxcInVzZWRcIjpbNDZdLFwidG9cIjpbNDcsOTAsMTAwLDE0MSwxNDgsMTUwLDE3MSwxOTIsMjAyLDIwNl0sXCJzdXBwb3J0XCI6WzQ4XSxcInZhcmlldHlcIjpbNTBdLFwiYXBwbGljYXRpb25zLFwiOls1M10sXCJpbmNsdWRpbmdcIjpbNTRdLFwiZ2xvYmFsXCI6WzU1XSxcImRhdGFcIjpbNTYsNThdLFwic3RvcmFnZSxcIjpbNTddLFwic2hhcmluZyxcIjpbNTldLFwiZ3JvdXBcIjpbNjBdLFwiY29tbXVuaWNhdGlvblwiOls2MV0sXCJuYW1pbmcuXCI6WzYzXSxcIkVhY2hcIjpbNjQsMTA5XSxcIm5vZGVcIjpbNjUsODUsOTIsMTExLDEyNywxMjksMjA3XSxcImhhc1wiOls3MF0sXCJ1bmlxdWVcIjpbNzJdLFwiaWRlbnRpZmllclwiOls3M10sXCIobm9kZUlkKS5cIjpbNzRdLFwiV2hlblwiOls3NV0sXCJwcmVzZW50ZWRcIjpbNzZdLFwid2l0aFwiOls3Nyw5MywxODJdLFwibWVzc2FnZVwiOls3OSw4OV0sXCJrZXksXCI6WzgyLDEwMl0sXCJlZmZpY2llbnRseVwiOls4Nl0sXCJyb3V0ZXNcIjpbODddLFwibm9kZUlkXCI6Wzk1LDEyMF0sXCJ0aGF0XCI6Wzk2XSxcImlzXCI6Wzk3LDE2Ml0sXCJudW1lcmljYWxseVwiOls5OF0sXCJjbG9zZXN0XCI6Wzk5XSxcImFtb25nXCI6WzEwM10sXCJhbGxcIjpbMTA0XSxcImN1cnJlbnRseVwiOlsxMDVdLFwibGl2ZVwiOlsxMDZdLFwibm9kZXMuXCI6WzEwOCwxNzhdLFwia2VlcHNcIjpbMTEyXSxcInRyYWNrXCI6WzExM10sXCJpdHNcIjpbMTE1LDIwMCwyMTBdLFwiaW1tZWRpYXRlXCI6WzExNl0sXCJuZWlnaGJvcnNcIjpbMTE3XSxcInNwYWNlLFwiOlsxMjFdLFwibm90aWZpZXNcIjpbMTIzXSxcImFwcGxpY2F0aW9uc1wiOlsxMjRdLFwibmV3XCI6WzEyNl0sXCJhcnJpdmFscyxcIjpbMTI4XSxcImZhaWx1cmVzXCI6WzEzMF0sXCJyZWNvdmVyaWVzLlwiOlsxMzJdLFwidGFrZXNcIjpbMTM0XSxcImludG9cIjpbMTM1XSxcImFjY291bnRcIjpbMTM2XSxcImxvY2FsaXR5O1wiOlsxMzhdLFwiaXRcIjpbMTM5LDE2OF0sXCJzZWVrc1wiOlsxNDBdLFwibWluaW1pemVcIjpbMTQyXSxcImRpc3RhbmNlXCI6WzE0NF0sXCJtZXNzYWdlc1wiOlsxNDVdLFwidHJhdmVsLFwiOlsxNDZdLFwiYWNjb3JkaW5nXCI6WzE0N10sXCJzY2FsYXJcIjpbMTUxXSxcInByb3hpbWl0eVwiOlsxNTJdLFwibWV0cmljXCI6WzE1M10sXCJsaWtlXCI6WzE1NF0sXCJudW1iZXJcIjpbMTU2XSxcIklQXCI6WzE1OF0sXCJob3BzLlwiOlsxNjBdLFwiY29tcGxldGVseVwiOlsxNjNdLFwiZGVjZW50cmFsaXplZCxcIjpbMTY0XSxcInNlbGYtb3JnYW5pemluZztcIjpbMTY3XSxcImF1dG9tYXRpY2FsbHlcIjpbMTY5XSxcImFkYXB0c1wiOlsxNzBdLFwiYXJyaXZhbCxcIjpbMTczXSxcImRlcGFydHVyZVwiOlsxNzRdLFwiZmFpbHVyZVwiOlsxNzZdLFwiRXhwZXJpbWVudGFsXCI6WzE3OV0sXCJyZXN1bHRzXCI6WzE4MF0sXCJvYnRhaW5lZFwiOlsxODFdLFwicHJvdG90eXBlXCI6WzE4NF0sXCJpbXBsZW1lbnRhdGlvblwiOlsxODVdLFwib25cIjpbMTg2XSxcImFuXCI6WzE4N10sXCJlbXVsYXRlZFwiOlsxODhdLFwidXBcIjpbMTkxXSxcIjEwMCwwMDBcIjpbMTkzXSxcImNvbmZpcm1cIjpbMTk1XSxcIlBhc3RyeSdzXCI6WzE5Nl0sXCJzY2FsYWJpbGl0eVwiOlsxOTddLFwiZWZmaWNpZW5jeSxcIjpbMTk5XSxcImFiaWxpdHlcIjpbMjAxXSxcInNlbGYtb3JnYW5pemVcIjpbMjAzXSxcImFkYXB0XCI6WzIwNV0sXCJmYWlsdXJlcyxcIjpbMjA4XSxcImdvb2RcIjpbMjExXSxcImxvY2FsaXR5XCI6WzIxM10sXCJwcm9wZXJ0aWVzLlwiOlsyMTRdfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9hZG1pcy5mdWRhbi5lZHUuY24vbWVtYmVyL3l6dGFuZy9QYXBlcnMvUDJQL292ZXJsYXkvUGFzdHJ5JTIwU2NhbGFibGUsJTIwZGVjZW50cmFsaXplZCUyMG9iamVjdCUyMGxvY2F0aW9uJTIwYW5kJTIwcm91dGluZyUyMGZvciUyMGxhcmdlJTIwc2NhbGUlMjBwMnAlMjBzeXN0ZW1zLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmNvcm5lbGwuZWR1L1Blb3BsZS9lZ3MvY3M2NDYwLXNwcmluZzEwL3Bhc3RyeS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9jb250ZW50L3BkZi8xMC4xMDA3JTJGMy01NDAtNDU1MTgtM18xOC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL21qcnV0aGVyZm9yZC5vcmcvZmlsZXMvMjAwOS1TcHJpbmctQ09NUC00NzA0LVBhc3RyeS1NVzIwMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuZnN1LmVkdS9+YXdhbmcvY291cnNlcy9jb3A1NjExX3MyMDEzL3Bhc3RyeS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy53aW4udHVlLm5sL35qb2hhbmwvZWR1Yy8yUTM0MS9wYXN0cnkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vd3d3LnNpY3Muc2UvfmFtaXIvZmlsZXMvZG93bmxvYWQvcDJwL3Bhc3RyeS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy51bmliby5pdC9+YmFiYW9nbHUvY291cnNlcy9jYXMxMi0xMy9yZXNvdXJjZXMvdHV0b3JpYWxzL3Bhc3RyeS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy51b2kuZ3IvfnBpdG91cmEvY291cnNlcy9wMnAwNi9wYXBlcnMvcGFzdHJ5Mi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5nc2QuaW5lc2MtaWQucHQvfmxlci9kb2NlbmNpYS9yY3MxMzE0L3BhcGVycy9wYXN0cnkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9mYWMtc3RhZmYuc2VhdHRsZXUuZWR1L3podXkvd2ViL3RlYWNoaW5nL3NwcmluZzA2L2Nzc2U0OTMvcGFwZXIvcGFzdHJ5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vYm91cmJvbi51c2MuZWR1L2NzNjk0LXMwOS9wYXBlcnMvcGFzdHJ5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnByaW5jZXRvbi5lZHUvY291cnNlcy9hcmNoaXZlL2ZhbGwwNi9jb3M1NjEvcGFwZXJzL3Bhc3RyeS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3BhZ2VzLmNzLndpc2MuZWR1L35zdW1hbi9jb3Vyc2VzLzc0MC9wYXBlcnMvcm93c3Ryb24wMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy1raXYuemN1LmN6LyU3RWxlZHZpbmEvREhUL3Bhc3RyeV8xLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnVuYy5lZHUvfmphc2xlZW4vQ291cnNlcy9DT01QNjMxL3BhcGVycy9wYXN0cnkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3Mua2VudC5lZHUvfmphdmVkL2NsYXNzLUZQMlAxMFMvcGFwZXJzLTIwMDYvUDJQLXBhc3RyeS0xLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnV0ZXhhcy5lZHUvJTdFYnJvd25lL2NzMzk1dGYyMDA1L1BhcGVycy9wYXN0cnkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cua2l2LnpjdS5jei9+bGVkdmluYS9ESFQvcGFzdHJ5XzEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9hbi5rYWlzdC5hYy5rci9jb3Vyc2VzLzIwMDkvY3M1NDAvcGFwZXJzL3Bhc3RyeS5wZGZcIn1dLFwiVkZOXCI6XCJMZWN0dXJlIE5vdGVzIGluIENvbXB1dGVyIFNjaWVuY2VcIixcIlZcIjoyMjE4LFwiRlBcIjozMjksXCJMUFwiOjM1MCxcIkRPSVwiOlwiMTAuMTAwNy8zLTU0MC00NTUxOC0zXzE4XCIsXCJDQ1wiOntcIjE1ODAwMDQ0NDBcIjpbXCJUaGVyZSBhcmUgY3VycmVudGx5IG1hbnkgcHJvamVjdHMgYWltZWQgYXQgY29uc3RydWN0aW5nIHBlZXItdG8tcGVlciBhcHBsaWNhdGlvbnMgYW5kIHVuZGVyc3RhbmRpbmcgbW9yZSBvZiB0aGUgaXNzdWVzIGFuZCByZXF1aXJlbWVudHMgb2Ygc3VjaCBhcHBsaWNhdGlvbnMgYW5kIHN5c3RlbXMgWzEsMiw1LDgsMTAsMTVdLlwiXSxcIjE1ODg3OTk0NDJcIjpbXCJTZXZlcmFsIHByaW9yIHdvcmtzIGNvbnNpZGVyIGlzc3VlcyBpbiByZXBsaWNhdGluZyBXZWIgY29udGVudCBpbiB0aGUgSW50ZXJuZXQsIGFuZCBzZWxlY3RpbmcgdGhlIG5lYXJlc3QgcmVwbGljYSByZWxhdGl2ZSB0byBhIGNsaWVudCBIVFRQIHF1ZXJ5IFs0LDEzLDE0XS5cIl0sXCIxOTU3NTgyNTkwXCI6W1wiU2V2ZXJhbCBhcHBsaWNhdGlvbiBoYXZlIGJlZW4gYnVpbHQgb24gdG9wIG9mIFBhc3RyeSB0byBkYXRlLCBpbmNsdWRpbmcgYSBnbG9iYWwsIHBlcnNpc3RlbnQgc3RvcmFnZSB1dGlsaXR5IGNhbGxlZCBQQVNUIFsxMSwyMV0gYW5kIGEgc2NhbGFibGUgcHVibGlzaC9zdWJzY3JpYmUgc3lzdGVtIGNhbGxlZCBTQ1JJQkUgWzIyXS5cIixcIkRldGFpbHMgb24gUEFTVOKAmXMgdXNlIG9mIFBhc3RyeSBjYW4gYmUgZm91bmQgaW4gWzExLDIxXS5cIixcIlNldmVyYWwgYXBwbGljYXRpb25zIGhhdmUgYmVlbiBidWlsdCBvbiB0b3Agb2YgUGFzdHJ5IHVzaW5nIHRoaXMgc2ltcGxlIEFQSSwgaW5jbHVkaW5nIFBBU1QgWzExLDIxXSBhbmQgU0NSSUJFIFsyMl0sIGFuZCBzZXZlcmFsIGFwcGxpY2F0aW9ucyBhcmUgdW5kZXIgZGV2ZWxvcG1lbnQuXCIsXCJFeGlzdGluZyBhcHBsaWNhdGlvbnMgYnVpbHQgb24gdG9wIG9mIFBhc3RyeSBpbmNsdWRlIFBBU1QgWzExLDIxXSBhbmQgU0NSSUJFIFsyMl0uXCJdLFwiMTk5MzI0ODYxM1wiOltcIlBhc3RyeSBhbmQgVGFwZXN0cnkgYmVhciBzb21lIHNpbWlsYXJpdHkgdG8gdGhlIHdvcmsgYnkgUGxheHRvbiBldCBhbCBbMThdIGFuZCB0byByb3V0aW5nIGluIHRoZSBsYW5kbWFyayBoaWVyYXJjaHkgWzI1XS5cIl0sXCIxOTk3MDE5NzEwXCI6W1wiRmluYWxseSwgYXR0cmlidXRlIGJhc2VkIGFuZCBpbnRlbnRpb25hbCBuYW1pbmcgc3lzdGVtcyBbNiwzXSwgYXMgd2VsbCBhcyBkaXJlY3Rvcnkgc2VydmljZXMgWzIwLDIzXSByZXNvbHZlIGEgc2V0IG9mIGF0dHJpYnV0ZXMgdGhhdCBkZXNjcmliZSB0aGUgcHJvcGVydGllcyBvZiBhbiBvYmplY3QgdG8gdGhlIGFkZHJlc3Mgb2YgYW4gb2JqZWN0IGluc3RhbmNlIHRoYXQgc2F0aXNmaWVzIHRoZSBnaXZlbiBwcm9wZXJ0aWVzLlwiXSxcIjIwMDA4NzYwMjNcIjpbXCJQYXN0cnkgYW5kIFRhcGVzdHJ5IGJlYXIgc29tZSBzaW1pbGFyaXR5IHRvIHRoZSB3b3JrIGJ5IFBsYXh0b24gZXQgYWwgWzE4XSBhbmQgdG8gcm91dGluZyBpbiB0aGUgbGFuZG1hcmsgaGllcmFyY2h5IFsyNV0uXCJdLFwiMjAwMjEzMjQ3NVwiOltcIkZpbmFsbHksIGF0dHJpYnV0ZSBiYXNlZCBhbmQgaW50ZW50aW9uYWwgbmFtaW5nIHN5c3RlbXMgWzYsM10sIGFzIHdlbGwgYXMgZGlyZWN0b3J5IHNlcnZpY2VzIFsyMCwyM10gcmVzb2x2ZSBhIHNldCBvZiBhdHRyaWJ1dGVzIHRoYXQgZGVzY3JpYmUgdGhlIHByb3BlcnRpZXMgb2YgYW4gb2JqZWN0IHRvIHRoZSBhZGRyZXNzIG9mIGFuIG9iamVjdCBpbnN0YW5jZSB0aGF0IHNhdGlzZmllcyB0aGUgZ2l2ZW4gcHJvcGVydGllcy5cIl0sXCIyMDA0NzU1OTE4XCI6W1wiU2V2ZXJhbCBwcmlvciB3b3JrcyBjb25zaWRlciBpc3N1ZXMgaW4gcmVwbGljYXRpbmcgV2ViIGNvbnRlbnQgaW4gdGhlIEludGVybmV0LCBhbmQgc2VsZWN0aW5nIHRoZSBuZWFyZXN0IHJlcGxpY2EgcmVsYXRpdmUgdG8gYSBjbGllbnQgSFRUUCBxdWVyeSBbNCwxMywxNF0uXCJdLFwiMjEwMDEzMjAyOFwiOltcIlNldmVyYWwgcHJpb3Igd29ya3MgY29uc2lkZXIgaXNzdWVzIGluIHJlcGxpY2F0aW5nIFdlYiBjb250ZW50IGluIHRoZSBJbnRlcm5ldCwgYW5kIHNlbGVjdGluZyB0aGUgbmVhcmVzdCByZXBsaWNhIHJlbGF0aXZlIHRvIGEgY2xpZW50IEhUVFAgcXVlcnkgWzQsMTMsMTRdLlwiXSxcIjIxMTU1OTk5NDZcIjpbXCJUaGVyZSBhcmUgY3VycmVudGx5IG1hbnkgcHJvamVjdHMgYWltZWQgYXQgY29uc3RydWN0aW5nIHBlZXItdG8tcGVlciBhcHBsaWNhdGlvbnMgYW5kIHVuZGVyc3RhbmRpbmcgbW9yZSBvZiB0aGUgaXNzdWVzIGFuZCByZXF1aXJlbWVudHMgb2Ygc3VjaCBhcHBsaWNhdGlvbnMgYW5kIHN5c3RlbXMgWzEsMiw1LDgsMTAsMTVdLlwiLFwiRmFyU2l0ZSBbNV0gdXNlcyBhIGNvbnZlbnRpb25hbCBkaXN0cmlidXRlZCBkaXJlY3Rvcnkgc2VydmljZSwgYnV0IGNvdWxkIHBvdGVudGlhbGx5IGJlIGJ1aWx0IG9uIHRvcCBvZiBhIHN5c3RlbSBsaWtlIFBhc3RyeS5cIl0sXCIyMTIzODIwODIwXCI6W1wiU2V2ZXJhbCBhcHBsaWNhdGlvbiBoYXZlIGJlZW4gYnVpbHQgb24gdG9wIG9mIFBhc3RyeSB0byBkYXRlLCBpbmNsdWRpbmcgYSBnbG9iYWwsIHBlcnNpc3RlbnQgc3RvcmFnZSB1dGlsaXR5IGNhbGxlZCBQQVNUIFsxMSwyMV0gYW5kIGEgc2NhbGFibGUgcHVibGlzaC9zdWJzY3JpYmUgc3lzdGVtIGNhbGxlZCBTQ1JJQkUgWzIyXS5cIixcIkRldGFpbHMgb24gUEFTVOKAmXMgdXNlIG9mIFBhc3RyeSBjYW4gYmUgZm91bmQgaW4gWzExLDIxXS5cIixcIlNldmVyYWwgYXBwbGljYXRpb25zIGhhdmUgYmVlbiBidWlsdCBvbiB0b3Agb2YgUGFzdHJ5IHVzaW5nIHRoaXMgc2ltcGxlIEFQSSwgaW5jbHVkaW5nIFBBU1QgWzExLDIxXSBhbmQgU0NSSUJFIFsyMl0sIGFuZCBzZXZlcmFsIGFwcGxpY2F0aW9ucyBhcmUgdW5kZXIgZGV2ZWxvcG1lbnQuXCIsXCJFeGlzdGluZyBhcHBsaWNhdGlvbnMgYnVpbHQgb24gdG9wIG9mIFBhc3RyeSBpbmNsdWRlIFBBU1QgWzExLDIxXSBhbmQgU0NSSUJFIFsyMl0uXCJdLFwiMjEyMzgzNzkwOVwiOltcIkNoZXJpdG9uIGFuZCBNYW5uIFs3XSBkZXNjcmliZSBhbm90aGVyIHNjYWxhYmxlIG5hbWluZyBzZXJ2aWNlLlwiXSxcIjIxMjU4NTU3NTBcIjpbXCJGaW5hbGx5LCBhdHRyaWJ1dGUgYmFzZWQgYW5kIGludGVudGlvbmFsIG5hbWluZyBzeXN0ZW1zIFs2LDNdLCBhcyB3ZWxsIGFzIGRpcmVjdG9yeSBzZXJ2aWNlcyBbMjAsMjNdIHJlc29sdmUgYSBzZXQgb2YgYXR0cmlidXRlcyB0aGF0IGRlc2NyaWJlIHRoZSBwcm9wZXJ0aWVzIG9mIGFuIG9iamVjdCB0byB0aGUgYWRkcmVzcyBvZiBhbiBvYmplY3QgaW5zdGFuY2UgdGhhdCBzYXRpc2ZpZXMgdGhlIGdpdmVuIHByb3BlcnRpZXMuXCJdLFwiMjEzMDQ5MzQyNlwiOltcIkxhbXBzb27igJlzIEdsb2JhbCBOYW1pbmcgU3lzdGVtIChHTlMpIFsxNl0gaXMgYW4gZXhhbXBsZSBvZiBhIHNjYWxhYmxlIG5hbWluZyBzeXN0ZW0gdGhhdCByZWxpZXMgb24gYSBoaWVyYXJjaHkgb2YgbmFtZSBzZXJ2ZXJzIHRoYXQgZGlyZWN0bHkgY29ycmVzcG9uZHMgdG8gdGhlIHN0cnVjdHVyZSBvZiB0aGUgbmFtZSBzcGFjZS5cIl0sXCIyMTUwNjc2NTg2XCI6W1wiT3RoZXIgcGVlci10by1wZWVyIGFwcGxpY2F0aW9ucyB0aGF0IHdlcmUgYnVpbHQgb24gdG9wIG9mIGEgZ2VuZXJpYyByb3V0aW5nIGFuZCBsb2NhdGlvbiBzdWJzdHJhdGUgbGlrZSBQYXN0cnkgYXJlIE9jZWFuU3RvcmUgWzE1XSAoVGFwZXN0cnkpIGFuZCBDRlMgWzldIChDaG9yZCkuXCJdLFwiMjE1NTY1OTI5MlwiOltcIldlIGFyZSBjdXJyZW50bHkgcGVyZm9ybWluZyBlbXVsYXRpb25zIGJhc2VkIG9uIGEgbW9yZSByZWFsaXN0aWMgbmV0d29yayB0b3BvbG9neSBtb2RlbCB0YWtlbiBmcm9tIFsyNl0uXCJdLFwiMjE1NzkxODYxN1wiOltcIkFub3RoZXIgZXhhbXBsZSBvZiBhbiBvdmVybGF5IG5ldHdvcmsgaXMgdGhlIE92ZXJjYXN0IHN5c3RlbSBbMTJdLCB3aGljaCBwcm92aWRlcyByZWxpYWJsZSBzaW5nbGUtc291cmNlIG11bHRpY2FzdCBzdHJlYW1zLlwiXSxcIjIxNTgwNDk4MjFcIjpbXCJQYXN0cnksIGFsb25nIHdpdGggVGFwZXN0cnkgWzI3XSwgQ2hvcmQgWzI0XSBhbmQgQ0FOIFsxOV0sIHJlcHJlc2VudCBhIHNlY29uZCBnZW5lcmF0aW9uIG9mIHBlZXItdG8tcGVlciByb3V0aW5nIGFuZCBsb2NhdGlvbiBzY2hlbWVzIHRoYXQgd2VyZSBpbnNwaXJlZCBieSB0aGUgcGlvbmVlcmluZyB3b3JrIG9mIHN5c3RlbXMgbGlrZSBGcmVlTmV0IGFuZCBHbnV0ZWxsYS5cIl0sXCIyMTYzMDU5MTkwXCI6W1wiUGFzdHJ5LCBhbG9uZyB3aXRoIFRhcGVzdHJ5IFsyN10sIENob3JkIFsyNF0gYW5kIENBTiBbMTldLCByZXByZXNlbnQgYSBzZWNvbmQgZ2VuZXJhdGlvbiBvZiBwZWVyLXRvLXBlZXIgcm91dGluZyBhbmQgbG9jYXRpb24gc2NoZW1lcyB0aGF0IHdlcmUgaW5zcGlyZWQgYnkgdGhlIHBpb25lZXJpbmcgd29yayBvZiBzeXN0ZW1zIGxpa2UgRnJlZU5ldCBhbmQgR251dGVsbGEuXCJdLFwiMjE3NDUwNzg2OVwiOltcIlBlZXItdG8tcGVlciBJbnRlcm5ldCBhcHBsaWNhdGlvbnMgaGF2ZSByZWNlbnRseSBiZWVuIHBvcHVsYXJpemVkIHRocm91Z2ggwqNsZSBzaGFyaW5nIGFwcGxpY2F0aW9ucyBsaWtlIE5hcHN0ZXIsIEdudXRlbGxhIGFuZCBGcmVlTmV0IFsxLCAyLCA4XS5cIixcIlRoZXJlIGFyZSBjdXJyZW50bHkgbWFueSBwcm9qZWN0cyBhaW1lZCBhdCBjb25zdHJ1Y3RpbmcgcGVlci10by1wZWVyIGFwcGxpY2F0aW9ucyBhbmQgdW5kZXJzdGFuZGluZyBtb3JlIG9mIHRoZSBpc3N1ZXMgYW5kIHJlcXVpcmVtZW50cyBvZiBzdWNoIGFwcGxpY2F0aW9ucyBhbmQgc3lzdGVtcyBbMSwgMiwgNSwgOCwgMTAsIDE1XS5cIixcIkFtb25nIHRoZSBtb3N0IHByb21pbmVudCBhcmUgwqNsZSBzaGFyaW5nIGZhY2lsaXRpZXMsIHN1Y2ggYXMgR251dGVsbGEgWzJdIGFuZCBGcmVlbmV0IFs4XS5cIl19LFwiUFJcIjpbMjExODQyODE5MywyMTYzMDU5MTkwLDIxNTgwNDk4MjEsMTY1MDY3NTUwOSwyMTIzNDgyNDYyLDIxMTkyNDUxMDYsMjE1MDY3NjU4NiwyMTA0MjEwODk0LDIxNTY2NDQ1MDEsMjE3NDUwNzg2OSwyMTIzODIwODIwLDIwNTYzNjMzNTMsMjAwNzIxOTMwNCwyMDAwODc2MDIzLDE1ODQ2MzU0NTksMjE2MjczMzY3NywyMDIwNzY1NjUyLDE5NzA1NjQ3NzgsMTQ5MjU1MjUzMSwyMTIzNzMyMzg1LDIxMTg0MjgxOTMsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDE2NTA2NzU1MDksMjEyMzQ4MjQ2MiwyMTE5MjQ1MTA2LDIxNTA2NzY1ODYsMjEwNDIxMDg5NCwyMTU2NjQ0NTAxLDIxNzQ1MDc4NjksMjEyMzgyMDgyMCwyMDU2MzYzMzUzLDIwMDcyMTkzMDQsMjAwMDg3NjAyMywxNTg0NjM1NDU5LDIxNjI3MzM2NzcsMjAyMDc2NTY1MiwxOTcwNTY0Nzc4LDE0OTI1NTI1MzEsMjEyMzczMjM4NV0sXCJBTkZcIjpbe1wiRk5cIjpcIkFudG9ueSBJLiBULlwiLFwiTE5cIjpcIlJvd3N0cm9uXCIsXCJTXCI6MX0se1wiRk5cIjpcIlBldGVyXCIsXCJMTlwiOlwiRHJ1c2NoZWxcIixcIlNcIjoyfV0sXCJCVlwiOlwiTGVjdHVyZSBOb3RlcyBpbiBDb21wdXRlciBTY2llbmNlXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIlNwcmluZ2VyXCJ9In0seyJsb2dwcm9iIjotMTUuNzM1LCJrZXNFbnRpdHlJZCI6ODYxMjQwLCJJZCI6MTY1MDY3NTUwOSwiVGkiOiJ0YXBlc3RyeSBhbiBpbmZyYXN0cnVjdHVyZSBmb3IgZmF1bHQgdG9sZXJhbnQgd2lkZSBhcmVhIGxvY2F0aW9uIGFuZCByb3V0aW5nIiwiWSI6MjAwMSwiRCI6IjIwMDEtMDEtMDEiLCJDQyI6MzYwMiwiUklkIjpbMjExODQyODE5MywyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMjEwNDIxMDg5NCwyMjYzMTI0NjA3LDIxNjQxOTI3MjIsMjEyMzczMjM4NSwyMTQ0NTUzMDc4LDE1MTM3MTA0MDIsMjE1NTY1OTI5MiwyMTI1ODU1NzUwLDIxNTc5MTg2MTcsMjAwMDg3NjAyMywyMDMxODQ5OTUwLDIwNTc0NTY0MjMsMjEzNDMzMDgxNCwyMDAwMjYxOTExLDk1NDMyMTQ5LDE2NDIwNzAyMTEsMTY2ODYyNTU3NCwyMTQ4MjkyNDQxLDIwNzAxMjU0OTYsMjE1NTI5Mzk1MywyMDIwODczODcyLDIxMzA0MjY2MjAsMTUwODE3NDAyOSwxNTY2MDg3NDksMjU4MTg5MjYsMTUwODU1MjQ0MiwyNjE2MTU5MTMyLDE2MDc2Mzg1NSwxNjYyMDQyNTFdLCJBQSI6W3siQXVOIjoiYmVuIHkgemhhbyJ9LHsiQXVOIjoiam9obiBrdWJpYXRvd2ljeiJ9LHsiQXVOIjoiYW50aG9ueSBkIGpvc2VwaCJ9XSwiRiI6W3siRk4iOiJrb29yZGUifSx7IkZOIjoia2V5IGJhc2VkIHJvdXRpbmcifSx7IkZOIjoiY29udGVudCBhZGRyZXNzYWJsZSBuZXR3b3JrIn0seyJGTiI6ImNob3JkIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGhhc2ggdGFibGUifSx7IkZOIjoicG9pbnQgdG8gcG9pbnQifSx7IkZOIjoiYXJjaGl0ZWN0dXJlIn0seyJGTiI6ImZhdWx0IHRvbGVyYW5jZSJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJUYXBlc3RyeTogQW4gSW5mcmFzdHJ1Y3R1cmUgZm9yIEZhdWx0LXRvbGVyYW50IFdpZGUtYXJlYSBMb2NhdGlvbiBhbmQgUm91dGluZ1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjExOSxcIkludmVydGVkSW5kZXhcIjp7XCJJblwiOlswXSxcInRvZGF54oCZc1wiOlsxXSxcImNoYW90aWNcIjpbMl0sXCJuZXR3b3JrLFwiOlszXSxcImRhdGFcIjpbNF0sXCJhbmRcIjpbNSw5LDE1LDI0LDM0LDUxLDc0LDgwLDkwLDk3LDEwNiwxMTBdLFwic2VydmljZXNcIjpbNl0sXCJhcmVcIjpbN10sXCJtb2JpbGVcIjpbOF0sXCJyZXBsaWNhdGVkXCI6WzEwXSxcIndpZGVseVwiOlsxMV0sXCJmb3JcIjpbMTJdLFwiYXZhaWxhYmlsaXR5LFwiOlsxM10sXCJkdXJhYmlsaXR5LFwiOlsxNF0sXCJsb2NhbGl0eS5cIjpbMTZdLFwiQ29tcG9uZW50c1wiOlsxN10sXCJ3aXRoaW5cIjpbMTgsODNdLFwidGhpc1wiOlsxOSw4NF0sXCJpbmZyYXN0cnVjdHVyZVwiOlsyMCw1Myw4NV0sXCJpbnRlcmFjdFwiOlsyMV0sXCJpblwiOlsyMl0sXCJyaWNoXCI6WzIzXSxcImNvbXBsZXhcIjpbMjVdLFwid2F5cyxcIjpbMjZdLFwiZ3JlYXRseVwiOlsyN10sXCJzdHJlc3NpbmdcIjpbMjhdLFwidHJhZGl0aW9uYWxcIjpbMjksNDJdLFwiYXBwcm9hY2hlc1wiOlszMCw0M10sXCJ0b1wiOlszMSw0MSw2MV0sXCJuYW1lXCI6WzMyXSxcInNlcnZpY2VcIjpbMzMsNjldLFwicm91dGluZy5cIjpbMzVdLFwiVGhpc1wiOlszNiwxMDFdLFwicGFwZXJcIjpbMzcsMTAyXSxcImV4cGxvcmVzXCI6WzM4LDExMV0sXCJhblwiOlszOSw0OCw2Nl0sXCJhbHRlcm5hdGl2ZVwiOls0MF0sXCJjYWxsZWRcIjpbNDRdLFwiVGFwZXN0cnkuXCI6WzQ1XSxcIlRhcGVzdHJ5XCI6WzQ2LDkzLDEwOV0sXCJpc1wiOls0Nyw4Niw5NF0sXCJvdmVybGF5XCI6WzQ5XSxcImxvY2F0aW9uXCI6WzUwXSxcInJvdXRpbmdcIjpbNTIsNTcsNzldLFwidGhhdFwiOls1NF0sXCJwcm92aWRlc1wiOls1NV0sXCJsb2NhdGlvbi1pbmRlcGVuZGVudFwiOls1Nl0sXCJvZlwiOls1OCw2NSwxMDgsMTE3XSxcIm1lc3NhZ2VzXCI6WzU5XSxcImRpcmVjdGx5XCI6WzYwXSxcInRoZVwiOls2MiwxMDRdLFwiY2xvc2VzdFwiOls2M10sXCJjb3B5XCI6WzY0XSxcIm9iamVjdFwiOls2N10sXCJvclwiOls2OF0sXCJ1c2luZ1wiOls3MF0sXCJvbmx5XCI6WzcxXSxcInBvaW50LXRvLXBvaW50XCI6WzcyXSxcImxpbmtzXCI6WzczXSxcIndpdGhvdXRcIjpbNzVdLFwiY2VudHJhbGl6ZWRcIjpbNzZdLFwicmVzb3VyY2VzLlwiOls3N10sXCJUaGVcIjpbNzhdLFwiZGlyZWN0b3J5XCI6WzgxXSxcImluZm9ybWF0aW9uXCI6WzgyXSxcInB1cmVseVwiOls4N10sXCJzb2Z0XCI6Wzg4XSxcInN0YXRlXCI6Wzg5XSxcImVhc2lseVwiOls5MV0sXCJyZXBhaXJlZC5cIjpbOTJdLFwic2VsZi1hZG1pbmlzdGVyaW5nLFwiOls5NV0sXCJmYXVsdHRvbGVyYW50LFwiOls5Nl0sXCJyZXNpbGllbnRcIjpbOThdLFwidW5kZXJcIjpbOTldLFwibG9hZC5cIjpbMTAwXSxcInByZXNlbnRzXCI6WzEwM10sXCJhcmNoaXRlY3R1cmVcIjpbMTA1XSxcImFsZ29yaXRobXNcIjpbMTA3XSxcInRoZWlyXCI6WzExMl0sXCJhZHZhbnRhZ2VzXCI6WzExM10sXCJ0aHJvdWdoXCI6WzExNF0sXCJhXCI6WzExNV0sXCJudW1iZXJcIjpbMTE2XSxcImV4cGVyaW1lbnRzLlwiOlsxMThdfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY29ybmVsbC5lZHUvcGVvcGxlL2Vncy82MTUvdGFwZXN0cnkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZmFjd2ViLmlpdGtncC5lcm5ldC5pbi9+bmlsb3kvQ09VUlNFL0F1dHVtbjIwMTAvVUMvUmVzb3VyY2UvVGFwZXN0cnkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuc20ubHV0aC5zZS9jc2VlL2NvdXJzZXMvc21kLzE0NC9hcnRpY2xlcy90YXBlc3RyeV9zaWdjb21tX3RyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmtlbnQuZWR1L35qYXZlZC9jbGFzcy1GUDJQMTBTL3BhcGVycy0yMDA2L1AyUC10YXBlc3RyeS0xLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnVjc2IuZWR1L35yYXZlbmJlbi9wdWJsaWNhdGlvbnMvQ1NELTAxLTExNDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9vY2VhbnN0b3JlLm5ldC9wdWJsaWNhdGlvbnMvcGFwZXJzL3BkZi90YXBlc3RyeV9zaWdjb21tX3RyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vc3dzb2Z0Lm5zdS5ydS9+Y2hlYm90YXJldi9kb2NzL3RhcGVzdHJ5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vcGFyYWxsZWxzLm5zdS5ydS9+Y2hlYm90YXJldi9kb2NzL3RhcGVzdHJ5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnByaW5jZXRvbi5lZHUvY291cnNlcy9hcmNoaXZlL2ZhbGwwMi9jczU5N0MvUDJQL1JvdXRpbmdBZGRyZXNzaW5nTXVsdGljYXN0L3poYW8wMXRhcGVzdHJ5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmVjZS51Yy5lZHUvfm9zY2FyL3AycGFyZWEvbmV0d29yay90YXBlc3RyeV9zaWdjb21tX3RyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vZmFjLXN0YWZmLnNlYXR0bGV1LmVkdS96aHV5L3dlYi90ZWFjaGluZy9zcHJpbmcwNi9jc3NlNDkzL3BhcGVyL3RhcGVzdHJ5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vYm5yZy5jcy5iZXJrZWxleS5lZHUvJTdFYWRqL3B1YmxpY2F0aW9ucy9wYXBlci1maWxlcy9DU0QtMDEtMTE0MS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2hvbWVzLmNzLndhc2hpbmd0b24uZWR1L35hcnZpbmQvY3M0MjUvZG9jL3RhcGVzdHJ5LnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vd3d3LmNvbXAubnVzLmVkdS5zZy9+Y3M2MjAzL2d1aWRlbGluZXMvdG9waWMxL3RhcGVzdHJ5LnBkZlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vd3d3LmVlY3MuYmVya2VsZXkuZWR1L1B1YnMvVGVjaFJwdHMvMjAwMS9DU0QtMDEtMTE0MS5wZGZcIn1dLFwiVkZOXCI6XCJcIixcIkNDXCI6e1wiMjU4MTg5MjZcIjpbXCJUYXBlc3RyeSBpcyBzZWxmYWRtaW5pc3RyYXRpbmcsIGZhdWx0LXRvbGVyYW50LCBhbmQgcmVzaWxpZW50IHVuZGVyIGxvYWQsIGFuZCBpcyBhIGZ1bmRhbWVudGFsIGNvbXBvbmVudCBvZiB0aGUgT2NlYW5TdG9yZSBzeXN0ZW0gWzE3LCAyNF0uXCIsXCJUaGUgZHJpdmluZyBhcHBsaWNhdGlvbiBmb3IgVGFwZXN0cnkgaXMgT2NlYW5TdG9yZSBbMTcsIDI0XSwgYSB3aWRlLWFyZWEgZGlzdHJpYnV0ZWQgc3RvcmFnZSBzeXN0ZW0gZGVzaWduZWQgdG8gc3BhbiB0aGUgZ2xvYmUgYW5kIHByb3ZpZGUgY29udGludW91cyBhY2Nlc3MgdG8gcGVyc2lzdGVudCBkYXRhLlwiXSxcIjk1NDMyMTQ5XCI6W1wiUEFTVCBbMTFdIGlzIGEgcmVjZW50IHByb2plY3QgYmVndW4gYXQgTWljcm9zb2Z0IFJlc2VhcmNoIGZvY3VzaW5nIG9uIHBlZXItdG8tcGVlciBhbm9ueW1vdXMgc3RvcmFnZS5cIl0sXCIxNTY2MDg3NDlcIjpbXCJUaGUgd2lkZS1hcmVhIGV4dGVuc2lvbiB0byB0aGUgU2VydmljZSBMb2NhdGlvbiBQcm90b2NvbCAoU0xQKSBbMjZdIHVzZWQgYSBwYWlyLXdpc2UgcXVlcnkgcm91dGluZyBtb2RlbCBiZXR3ZWVuIGFkbWluaXN0cmF0aXZlIGRvbWFpbnMsIHdoaWNoIHByZXNlbnRzIGEgcG90ZW50aWFsIGJvdHRsZW5lY2sgYXMgdGhlIG51bWJlciBvZiBkb21haW5zIGluY3JlYXNlcy5cIl0sXCIxNjA3NjM4NTVcIjpbXCJUaGlzIGlzIHRoZSBzb2Z0LXN0YXRlIG9yIGFubm91bmNlL2xpc3RlbiBhcHByb2FjaCBmaXJzdCBwcmVzZW50ZWQgaW4gSUdNUCBbOV0gYW5kIGNsYXJpZmllZCBpbiB0aGUgTUJvbmUgU2Vzc2lvbiBBbm5vdW5jZW1lbnQgUHJvdG9jb2wgWzE5XS5cIl0sXCIxNjYyMDQyNTFcIjpbXCJTaW1pbGFyIHVzZSBvZiBzb2Z0LXN0YXRlIGZvciBmYXVsdCBoYW5kbGluZyBhcHBlYXJzIGluIHRoZSBjb250ZXh0IG9mIHRoZSBBUzEgQWN0aXZlIFNlcnZpY2VzIGZyYW1ld29yayBbMl0gYW5kIHRoZSBCZXJrZWxleSBTZXJ2aWNlIERpc2NvdmVyeSBTZXJ2aWNlIFsxNF0uXCIsXCJUaGUgQmVya2VsZXkgU2VydmljZSBEaXNjb3ZlcnkgU2VydmljZSBbMTRdIHVzZXMgbG9zc3kgYmxvb20gZmlsdGVycyB0byBjb21wcmVzcyBzZXJ2aWNlIG1ldGFkYXRhIHRvIGNvbXBsZW1lbnQgaXRzIHVzZSBvZiBtdWx0aXBsZSB3aWRlLWFyZWEgaGllcmFyY2hpZXMuXCJdLFwiMTUwODE3NDAyOVwiOltcImhhdmUgcHJvcG9zZWQgU1BBTkQgWzI3XSwgYSBzaGFyZWQgbmV0d29yayBtZWFzdXJlbWVudCBhcmNoaXRlY3R1cmUgYW5kIGFkYXB0aXZlIGFwcGxpY2F0aW9uIGZyYW1ld29yay5cIl0sXCIxNTA4NTUyNDQyXCI6W1wiV2UgZXhhbWluZSB0aGUgZmVhc2liaWxpdHkgb2YgdGhpcyBhcHByb2FjaCBpbiBUYXBlc3RyeSBpbiB0aGUgY29udGV4dCBvZiBTaWx2ZXJiYWNrIFszMF0sIHRoZSBhcmNoaXZhbCB1dGlsaXR5IG9mIHRoZSBPY2VhblN0b3JlIGdsb2JhbCBzdG9yYWdlIGluZnJhc3RydWN0dXJlLlwiLFwiRmluYWxseSwgdGhlIHNlbGYtY29udGFpbmVkIGFyY2hpdmFsIHN0b3JhZ2UgbGF5ZXIgb2YgT2NlYW5TdG9yZSBjYWxsZWQgU2lsdmVyYmFjayBbMzBdIHVzZXMgVGFwZXN0cnkgZm9yIGRpc3RyaWJ1dGlvbiBhbmQgY29sbGVjdGlvbiBvZiBlcmFzdXJlLWNvZGVkIGRhdGEgZnJhZ21lbnRzLlwiXSxcIjE1MTM3MTA0MDJcIjpbXCJXZSB1c2UgYXMgb3VyIHVuaXQgb2Ygb3ZlcmxheSBvdmVyaGVhZCBtZWFzdXJlbWVudCwgdGhlIFJlbGF0aXZlIERlbGF5IFBlbmFsdHkgKFJEUCksIGZpcnN0IGludHJvZHVjZWQgaW4gWzhdLlwiLFwiQWRkaXRpb25hbGx5LCBib3RoIEVuZCBTeXN0ZW0gTXVsdGljYXN0IFs4XSBhbmQgU2NhdHRlckNhc3QgWzddIHV0aWxpemUgc2VsZi1jb25maWd1cmluZyBhbGdvcml0aG1zIGZvciBjb25zdHJ1Y3RpbmcgZWZmaWNpZW50IG92ZXJsYXkgdG9wb2xvZ2llcy5cIl0sXCIxNjQyMDcwMjExXCI6W1wiVGhpcyBhcHByb2FjaCBpcyBzaW1pbGFyIHRvIGxvbmdlc3QgcHJlZml4IHJvdXRpbmcgaW4gdGhlIENJRFIgSVAgYWRkcmVzcyBhbGxvY2F0aW9uIGFyY2hpdGVjdHVyZSBbMjNdLlwiXSxcIjE2Njg2MjU1NzRcIjpbXCJUaGUgVFJJQUQgWzEzXSBwcm9qZWN0IGF0IFN0YW5mb3JkIFVuaXZlcnNpdHkgZm9jdXNlcyBvbiB0aGUgcHJvYmxlbSBjb250ZW50IGRpc3RyaWJ1dGlvbiwgaW50ZWdyYXRpbmcgbmFtaW5nLCByb3V0aW5nIGFuZCBjb25uZWN0aW9uIHNldHVwIGludG8gaXRzIGNvbnRlbnQgbGF5ZXIuXCJdLFwiMjAwMDI2MTkxMVwiOltcInByb3Bvc2UgYSBzb2x1dGlvbiBpbiBJRE1hcHMgWzEyXSwgd2hpY2ggdXNlcyBkaXN0cmlidXRlZCB0cmFjZXJzIHRvIGJ1aWxkIGEgZGlzdGFuY2UgZXN0aW1hdGlvbiBtYXAuXCJdLFwiMjAwMDg3NjAyM1wiOltcIkl0IGhhcyBpdHMgcm9vdHMgaW4gdGhlIFBsYXh0b24gZGlzdHJpYnV0ZWQgc2VhcmNoIHRlY2huaXF1ZSBbMjFdLCBhdWdtZW50ZWQgd2l0aCBhZGRpdGlvbmFsIG1lY2hhbmlzbXMgdG8gcHJvdmlkZSBhdmFpbGFiaWxpdHksIHNjYWxhYmlsaXR5LCBhbmQgYWRhcHRhdGlvbiBpbiB0aGUgcHJlc2VuY2Ugb2YgZmFpbHVyZXMgYW5kIGF0dGFja3MuXCIsXCJJbiB0aGlzIHNlY3Rpb24sIHdlIGZpcnN0IGRpc2N1c3MgdGhlIGluc3BpcmF0aW9uIGZvciBUYXBlc3RyeeKAmXMgZGVzaWduLCB0aGUgbG9jYXRpb24gYW5kIHJvdXRpbmcgbWVjaGFuaXNtcyBpbnRyb2R1Y2VkIGJ5IFBsYXh0b24sIFJhamFtYXJhbiBhbmQgUmljaGEgaW4gWzIxXSwgZm9sbG93ZWQgYnkgYSBkaXNjdXNzaW9uIG9mIHRoZSBiZW5lZml0cyBhbmQgbGltaXRhdGlvbnMgb2YgdGhlIFBsYXh0b24gbWVjaGFuaXNtcy5cIixcInByZXNlbnQgaW4gWzIxXSBhIGRpc3RyaWJ1dGVkIGRhdGEgc3RydWN0dXJlIG9wdGltaXplZCB0byBzdXBwb3J0IGEgbmV0d29yayBvdmVybGF5IGZvciBsb2NhdGluZyBuYW1lZCBvYmplY3RzIGFuZCByb3V0aW5nIG9mIG1lc3NhZ2VzIHRvIHRob3NlIG9iamVjdHMuXCIsXCJQcm9wb3J0aW9uYWwgUm91dGUgRGlzdGFuY2UgUGxheHRvbiBoYXMgcHJvdmVuIHRoYXQgdGhlIHRvdGFsIG5ldHdvcmsgZGlzdGFuY2UgdHJhdmVsZWQgYnkgYSBtZXNzYWdlIGR1cmluZyBib3RoIGxvY2F0aW9uIGFuZCByb3V0aW5nIHBoYXNlcyBpcyBwcm9wb3J0aW9uYWwgdG8gdGhlIHVuZGVybHlpbmcgbmV0d29yayBkaXN0YW5jZSBbMjFdLCBhc3N1cmluZyB1cyB0aGF0IHJvdXRpbmcgb24gdGhlIFBsYXh0b24gb3ZlcmxheSBpbmN1cnMgYSByZWFzb25hYmxlIG92ZXJoZWFkLlwiLFwiV2hpbGUgUGxheHRvbiwgUmFqYW1hcmFuIGFuZCBSaWNoYSBwcm92ZSB0aGF0IGxvY2F0aW5nIGFuZCByb3V0aW5nIHRvIGFuIG9iamVjdCB3aXRoIHRoZXNlIGxvY2F0aW9uIHBvaW50ZXJzIGluY3VycyBhIHNtYWxsIGxpbmVhciBmYWN0b3Igb2Ygb3ZlcmhlYWQgY29tcGFyZWQgdG8gcm91dGluZyB1c2luZyB0aGUgcGh5c2ljYWwgbGF5ZXIgWzIxXSwgd2Ugd291bGQgbGlrZSB0byBjb25maXJtIHRoZSB0aGVvcmV0aWNhbCByZXN1bHRzLlwiLFwiV2hpbGUgVGFwZXN0cnkgaXMgc2ltaWxhciB0byB0aGUgUGxheHRvbiBkaXN0cmlidXRlZCBzZWFyY2ggdGVjaG5pcXVlIFsyMV0sIHdlIGhhdmUgYWRkaXRpb25hbCBtZWNoYW5pc21zIHRoYXQgbGV2ZXJhZ2Ugc29mdCBzdGF0ZSBpbmZvcm1hdGlvbiBhbmQgcHJvdmlkZSBzZWxmLWFkbWluaXN0cmF0aW9uLCByb2J1c3RuZXNzLCBzY2FsYWJpbGl0eSwgZHluYW1pYyBhZGFwdGF0aW9uLCBhbmQgZ3JhY2VmdWwgZGVncmFkYXRpb24gaW4gdGhlIHByZXNlbmNlIG9mIGZhaWx1cmVzIGFuZCBoaWdoIGxvYWQsIGFsbCB3aGlsZSBlbGltaW5hdGluZyB0aGUgbmVlZCBmb3IgZ2xvYmFsIGluZm9ybWF0aW9uLCByb290IG5vZGUgdnVsbmVyYWJpbGl0aWVzLCBhbmQgYSBsYWNrIG9mIGFkYXB0YWJpbGl0eS5cIl0sXCIyMDIwODczODcyXCI6W1wiVGhlIEdsb2JlIFsyOV0gcHJvamVjdCB3YXMgb25lIG9mIHRoZSBmaXJzdCBsb2NhdGlvbiBtZWNoYW5pc21zIHRvIGZvY3VzIG9uIHdpZGUtYXJlYSBvcGVyYXRpb24uXCJdLFwiMjAzMTg0OTk1MFwiOltcIkluIHRoZSBleHBlcmltZW50cyBzaG93biBpbiBGaWd1cmVzIDE1IGFuZCAxNiwgd2UgY29tcGFyZWQgYSBzaW1wbGlmaWVkIFRhcGVzdHJ5IGxvY2F0aW9uIG1lY2hhbmlzbSBhZ2FpbnN0IGEgY2VudHJhbGl6ZWQgZGlyZWN0b3J5IHNlcnZlciBvbiBhIDEwMCBub2RlIG5zLTIgWzVdIFRDUC9JUCBzaW11bGF0aW9uIG9mIGEgdG9wb2xvZ3kgZ2VuZXJhdGVkIGJ5IEdULUlUTSBbMzFdLlwiXSxcIjIwNTc0NTY0MjNcIjpbXCJXZSBoYXZlIGFsc28gZGV2ZWxvcGVkIEJheWV1eCBbMzJdLCBhbiBhcHBsaWNhdGlvbi1sZXZlbCBtdWx0aWNhc3QgcHJvdG9jb2wgb24gdG9wIG9mIFRhcGVzdHJ5LlwiXSxcIjIwNzAxMjU0OTZcIjpbXCJ0aGVzaXMgWzRdLiBQYXJ0cmlkZ2UgZXQgYWwuIHByb3Bvc2VkIGFueWNhc3QsIHdoaWNoIGF0dGVtcHRzIHRvIGRlbGl2ZXIgbWVzc2FnZXMgdG8gb25lIG5lYXJieSBob3N0IFsgMTYgXS5cIl0sXCIyMTA0MjEwODk0XCI6W1wiVGFwZXN0cnkgaXMgc2VsZmFkbWluaXN0cmF0aW5nLCBmYXVsdC10b2xlcmFudCwgYW5kIHJlc2lsaWVudCB1bmRlciBsb2FkLCBhbmQgaXMgYSBmdW5kYW1lbnRhbCBjb21wb25lbnQgb2YgdGhlIE9jZWFuU3RvcmUgc3lzdGVtIFsxNywgMjRdLlwiLFwiVGhlIGRyaXZpbmcgYXBwbGljYXRpb24gZm9yIFRhcGVzdHJ5IGlzIE9jZWFuU3RvcmUgWzE3LCAyNF0sIGEgd2lkZS1hcmVhIGRpc3RyaWJ1dGVkIHN0b3JhZ2Ugc3lzdGVtIGRlc2lnbmVkIHRvIHNwYW4gdGhlIGdsb2JlIGFuZCBwcm92aWRlIGNvbnRpbnVvdXMgYWNjZXNzIHRvIHBlcnNpc3RlbnQgZGF0YS5cIl0sXCIyMTE4NDI4MTkzXCI6W1wiYXBwcm9hY2hlcywgaW5jbHVkaW5nIFBhc3RyeSBbMTBdLCBDSE9SRCBbIDI4IF0sIGFuZCBDQU4gWzIyXS5cXHUwMDFiVGhlIENob3JkIFsgMjggXSBwcm9qZWN0IHByb3ZpZGVzIGFuIGVmZmljaWVudCBkaXN0cmlidXRlZCBsb29rdXAgc2VydmljZSwgYW5kIHVzZXMgYSBsb2dhcml0aG1pYy1zaXplZCByb3V0aW5nIHRhYmxlIHRvIHJvdXRlIG9iamVjdCBxdWVyaWVzLlwiXSxcIjIxMjM3MzIzODVcIjpbXCJXZSB1c2UgYXMgb3VyIHVuaXQgb2Ygb3ZlcmxheSBvdmVyaGVhZCBtZWFzdXJlbWVudCwgdGhlIFJlbGF0aXZlIERlbGF5IFBlbmFsdHkgKFJEUCksIGZpcnN0IGludHJvZHVjZWQgaW4gWyA4IF0uXFx1MDAxYkFkZGl0aW9uYWxseSwgYm90aCBFbmQgU3lzdGVtIE11bHRpY2FzdCBbIDggXSBhbmQgU2NhdHRlckNhc3QgWzddIHV0aWxpemUgc2VsZi1jb25maWd1cmluZyBhbGdvcml0aG1zIGZvciBjb25zdHJ1Y3RpbmcgZWZmaWNpZW50IG92ZXJsYXkgdG9wb2xvZ2llcy5cIl0sXCIyMTI1ODU1NzUwXCI6W1wiU2Vjb25kLCB0aGUgSW50ZW50aW9uYWwgTmFtaW5nIFN5c3RlbSAoSU5TKSBbMV0gY29tYmluZXMgbG9jYXRpb24gYW5kIHJvdXRpbmcgaW50byBvbmUgbWVjaGFuaXNtLlwiLFwiRmluYWxseSwgUmVzaWxpZW50IE92ZXJsYXkgTmV0d29ya3MgWzNdLCBsZXZlcmFnZXMgdGhlIEdSSUQgbG9jYXRpb24gbWVjaGFuaXNtIGFuZCB0aGUgc2VtYW50aWMgcm91dGluZyBvZiB0aGUgSW50ZW50aW9uYWwgTmFtaW5nIFN5c3RlbSAoSU5TKSBbMV0gdG8gcHJvdmlkZSBmYXVsdC1yZXNpbGllbnQgb3ZlcmxheSByb3V0aW5nIGFjcm9zcyB0aGUgd2lkZS1hcmVhLlwiXSxcIjIxMzQzMzA4MTRcIjpbXCJUaGlzIGlzIHRoZSBzb2Z0LXN0YXRlIG9yIGFubm91bmNlL2xpc3RlbiBhcHByb2FjaCBmaXJzdCBwcmVzZW50ZWQgaW4gSUdNUCBbOV0gYW5kIGNsYXJpZmllZCBpbiB0aGUgTUJvbmUgU2Vzc2lvbiBBbm5vdW5jZW1lbnQgUHJvdG9jb2wgWzE5XS5cIl0sXCIyMTQ0NTUzMDc4XCI6W1wiRmluYWxseSwgUmVzaWxpZW50IE92ZXJsYXkgTmV0d29ya3MgWyAzIF0sIGxldmVyYWdlcyB0aGUgR1JJRCBsb2NhdGlvbiBtZWNoYW5pc20gYW5kIHRoZSBzZW1hbnRpYyByb3V0aW5nIG9mIHRoZSBJbnRlbnRpb25hbCBOYW1pbmcgU3lzdGVtIChJTlMpIFsxXSB0byBwcm92aWRlIGZhdWx0LXJlc2lsaWVudCBvdmVybGF5IHJvdXRpbmcgYWNyb3NzIHRoZSB3aWRlLWFyZWEuXCJdLFwiMjE1NTI5Mzk1M1wiOltcIkFkZGl0aW9uYWxseSwgYm90aCBFbmQgU3lzdGVtIE11bHRpY2FzdCBbOF0gYW5kIFNjYXR0ZXJDYXN0IFs3XSB1dGlsaXplIHNlbGYtY29uZmlndXJpbmcgYWxnb3JpdGhtcyBmb3IgY29uc3RydWN0aW5nIGVmZmljaWVudCBvdmVybGF5IHRvcG9sb2dpZXMuXCJdLFwiMjE1NTY1OTI5MlwiOltcIkluIHRoZSBleHBlcmltZW50cyBzaG93biBpbiBGaWd1cmVzIDE1IGFuZCAxNiwgd2UgY29tcGFyZWQgYSBzaW1wbGlmaWVkIFRhcGVzdHJ5IGxvY2F0aW9uIG1lY2hhbmlzbSBhZ2FpbnN0IGEgY2VudHJhbGl6ZWQgZGlyZWN0b3J5IHNlcnZlciBvbiBhIDEwMCBub2RlIG5zLTIgWzVdIFRDUC9JUCBzaW11bGF0aW9uIG9mIGEgdG9wb2xvZ3kgZ2VuZXJhdGVkIGJ5IEdULUlUTSBbMzFdLlwiXSxcIjIxNTc5MTg2MTdcIjpbXCJJbiB0aGUgT3ZlcmNhc3QgWzE1XSBtdWx0aWNhc3Qgc3lzdGVtLCBKYW5ub3R0aSBldCBhbC5cIl0sXCIyMTYzMDU5MTkwXCI6W1wiYXBwcm9hY2hlcywgaW5jbHVkaW5nIFBhc3RyeSBbMTBdLCBDSE9SRCBbMjhdLCBhbmQgQ0FOIFsgMjIgXS5cXHUwMDFiVGhlIOKAnENvbnRlbnQgQWRkcmVzc2FibGUgTmV0d29ya3PigJ0gKENBTikgWyAyMiBdIHdvcmsgaXMgYmVpbmcgZG9uZSBhdCBBVCZUIENlbnRlciBmb3IgSW50ZXJuZXQgUmVzZWFyY2ggYXQgSUNTSSAoQUNJUkkpLlwiXSxcIjIxNjQxOTI3MjJcIjpbXCJwcmVzZW50ZWQgYSBkZWNlbnRyYWxpemVkIHdpZGVhcmVhIGxvY2F0aW9uIGFyY2hpdGVjdHVyZSBmb3IgdXNlIHdpdGggZ2VvZ3JhcGhpYyByb3V0aW5nIGluIEdSSUQgWzE4XS5cIl0sXCIyMTY3ODk4NDE0XCI6W1wiYXBwcm9hY2hlcywgaW5jbHVkaW5nIFBhc3RyeSBbMTBdLCBDSE9SRCBbMjhdLCBhbmQgQ0FOIFsyMl0uXCIsXCJUaGUgUEFTVCByb3V0aW5nIGFuZCBsb2NhdGlvbiBsYXllciwgY2FsbGVkIFBhc3RyeSBbMTBdLCBpcyBhIGxvY2F0aW9uIHByb3RvY29sIHNoYXJpbmcgbWFueSBzaW1pbGFyaXRpZXMgd2l0aCBUYXBlc3RyeS5cIl0sXCIyMjYzMTI0NjA3XCI6W1wiV2UgYXJlIGFsc28gZXhwbG9yaW5nIHRoZSBwb3NzaWJpbGl0eSBvZiBvZmZlcmluZyBNb2JpbGUgSVAtbGlrZSBbMjBdIGZ1bmN0aW9uYWxpdHkgdXNpbmcgdGhlIGxvY2F0aW9uLWluZGVwZW5kZW50IG5hbWluZyBtZWNoYW5pc20gb2YgVGFwZXN0cnkuXCJdLFwiMjYxNjE1OTEzMlwiOltcIlRoaXMgY2FuIGJlIGFjaGlldmVkIGJ5IGEgYm9vdHN0cmFwIG1lY2hhbmlzbSBzdWNoIGFzIGV4cGFuZGluZyByaW5nIHNlYXJjaCBbNF0gb3Igb3V0IG9mIGJhbmQgY29tbXVuaWNhdGlvbi5cIixcInRoZXNpcyBbNF0uXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDIxNTgwNDk4MjEsMTU4NDYzNTQ1OSwyMTA0MjEwODk0LDIxNTA2NzY1ODYsMjE3NDUwNzg2OSwyMDU2MzYzMzUzLDIxMjM4MjA4MjAsMjExOTI0NTEwNiwyMDAwODc2MDIzLDIwMDcyMTkzMDQsMjA1NzQ1NjQyMywyMDIwNzY1NjUyLDIxNTY2NDQ1MDEsMTQ5MjU1MjUzMSwyMTIzNzMyMzg1LDE5NzA1NjQ3NzgsMjE2NjQ1NDkxOCwyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDE1ODQ2MzU0NTksMjEwNDIxMDg5NCwyMTUwNjc2NTg2LDIxNzQ1MDc4NjksMjA1NjM2MzM1MywyMTIzODIwODIwLDIxMTkyNDUxMDYsMjAwMDg3NjAyMywyMDA3MjE5MzA0LDIwNTc0NTY0MjMsMjAyMDc2NTY1MiwyMTU2NjQ0NTAxLDE0OTI1NTI1MzEsMjEyMzczMjM4NSwxOTcwNTY0Nzc4LDIxNjY0NTQ5MThdLFwiQU5GXCI6W3tcIkZOXCI6XCJCZW4gWS5cIixcIkxOXCI6XCJaaGFvXCIsXCJTXCI6MX0se1wiRk5cIjpcIkpvaG5cIixcIkxOXCI6XCJLdWJpYXRvd2ljelwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJBbnRob255IEQuXCIsXCJMTlwiOlwiSm9zZXBoXCIsXCJTXCI6M31dLFwiQlRcIjpcImFcIn0ifSx7ImxvZ3Byb2IiOi0xNS44MjYsImtlc0VudGl0eUlkIjo5NDIxOTksIklkIjoyMTA0MjEwODk0LCJUaSI6Im9jZWFuc3RvcmUgYW4gYXJjaGl0ZWN0dXJlIGZvciBnbG9iYWwgc2NhbGUgcGVyc2lzdGVudCBzdG9yYWdlIiwiWSI6MjAwMCwiRCI6IjIwMDAtMTEtMDEiLCJDQyI6MzIzMSwiUklkIjpbMjEwNDUzMjc0MSwyMTcwNDk2MjQwLDIxMzg2ODM5MjMsMjAwMDg3NjAyMywxNTM5MjU5OTIxLDIxMTU1OTk5NDYsMjEyNjA4NzgzMSwyMDA1MzczNzE0LDIxNTc3NDAwMjAsMjEyNDA3NDE5NywyMDg3MDQwMjc5LDIxMTE1ODY5NjIsMjEyMDUxMDg4NSwyMDI1NDEzNjg2LDIxMDU0NzA3NDgsMjEwNDExMjg0OSwyMTU3NzM3MDk3LDE4MTkwMTAzMjYsMTk3NDQwMTgwOSwyMDc3OTY3MjExLDIxNTkzMzk5NjEsMTk4OTY0OTc4OCwyMTA3NDYwOTM4LDIwOTc4MjkyNTIsMjAzNTYwNjM2NCwyMTE4ODI4NDY0LDIxNDgyOTE0ODUsMjEyMzg0NTM4NCw5NTU0MjY0NCwyMTY1MDI4NjA1LDIxMzMzODYwNjUsMjExNzAzNDk0NiwyMTQ1OTk5NTQ0LDIwMjUzNzEzMTYsMjE2Nzg3NDgxMCwyMDU5NDMyMzI4LDE5NzEyNzk4MjYsMjEyMjEwMDM3OCw0NTAwMTM5MywxOTg4NTQ5MTAyLDIxNDM2OTQ3NzksMjE2Njk1NTAwMSwyMDk5MTg0NTE5LDE4NTIwNTk2NzksMTU5ODE0OTE4MywyMTIxOTQ1NTYxLDIxNjAzNzg5MTYsMjA3NDI1MDgxNiwxNTYzMTM1MTUxLDIxMDg4NjQ3NzksMTc2MDE3NzAxXSwiQUEiOlt7IkF1TiI6ImpvaG4ga3ViaWF0b3dpY3oifSx7IkF1TiI6ImRhdmlkIGJpbmRlbCJ9LHsiQXVOIjoieWFuIGNoZW4ifSx7IkF1TiI6InN0ZXZlbiBlIGN6ZXJ3aW5za2kifSx7IkF1TiI6InBhdHJpY2sgZWF0b24ifSx7IkF1TiI6ImRlbm5pcyBnZWVscyJ9LHsiQXVOIjoicmFtYWtyaXNobmEgZ3VtbWFkaSJ9LHsiQXVOIjoic2VhbiByaGVhIn0seyJBdU4iOiJoYWtpbSB3ZWF0aGVyc3Bvb24ifSx7IkF1TiI6Indlc3RsZXkgd2VpbWVyIn0seyJBdU4iOiJjaHJpcyB3ZWxscyJ9LHsiQXVOIjoiYmVuIHkgemhhbyJ9XSwiRiI6W3siRk4iOiJzeXN0ZW1zIGFyY2hpdGVjdHVyZSJ9LHsiRk4iOiJjYWNoZSJ9LHsiRk4iOiJpbmZvcm1hdGlvbiBhY2Nlc3MifSx7IkZOIjoiZGVuaWFsIG9mIHNlcnZpY2UgYXR0YWNrIn0seyJGTiI6InNlcnZlciJ9LHsiRk4iOiJyZWR1bmRhbmN5In0seyJGTiI6InBlcnNpc3RlbmNlIn0seyJGTiI6ImFyY2hpdGVjdHVyZSJ9LHsiRk4iOiJjb21wdXRlciBzZWN1cml0eSJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6InJlYWwgdGltZSBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJPY2VhblN0b3JlOiBhbiBhcmNoaXRlY3R1cmUgZm9yIGdsb2JhbC1zY2FsZSBwZXJzaXN0ZW50IHN0b3JhZ2VcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjo3NSxcIkludmVydGVkSW5kZXhcIjp7XCJPY2VhblN0b3JlXCI6WzBdLFwiaXNcIjpbMSwyMCwyNiwzNyw3MV0sXCJhXCI6WzJdLFwidXRpbGl0eVwiOlszXSxcImluZnJhc3RydWN0dXJlXCI6WzQsMTldLFwiZGVzaWduZWRcIjpbNV0sXCJ0b1wiOls2LDE0LDM5LDUxXSxcInNwYW5cIjpbN10sXCJ0aGVcIjpbOF0sXCJnbG9iZVwiOls5XSxcImFuZFwiOlsxMCwzMCw1NF0sXCJwcm92aWRlXCI6WzExXSxcImNvbnRpbnVvdXNcIjpbMTJdLFwiYWNjZXNzXCI6WzEzXSxcInBlcnNpc3RlbnRcIjpbMTVdLFwiaW5mb3JtYXRpb24uXCI6WzE2XSxcIlNpbmNlXCI6WzE3XSxcInRoaXNcIjpbMThdLFwiY29tcHJpc2VkXCI6WzIxXSxcIm9mXCI6WzIyLDQ2LDU2LDY2XSxcInVudHJ1c3RlZFwiOlsyM10sXCJzZXJ2ZXJzLFwiOlsyNF0sXCJkYXRhXCI6WzI1LDM2XSxcInByb3RlY3RlZFwiOlsyN10sXCJ0aHJvdWdoXCI6WzI4LDYzXSxcInJlZHVuZGFuY3lcIjpbMjldLFwiY3J5cHRvZ3JhcGhpY1wiOlszMV0sXCJ0ZWNobmlxdWVzLlwiOlszMl0sXCJUb1wiOlszM10sXCJpbXByb3ZlXCI6WzM0XSxcInBlcmZvcm1hbmNlLFwiOlszNV0sXCJhbGxvd2VkXCI6WzM4XSxcImJlXCI6WzQwXSxcImNhY2hlZFwiOls0MV0sXCJhbnl3aGVyZSxcIjpbNDJdLFwiYW55dGltZS5cIjpbNDNdLFwiQWRkaXRpb25hbGx5LFwiOls0NF0sXCJtb25pdG9yaW5nXCI6WzQ1LDU5XSxcInVzYWdlXCI6WzQ3XSxcInBhdHRlcm5zXCI6WzQ4XSxcImFsbG93c1wiOls0OV0sXCJhZGFwdGF0aW9uXCI6WzUwXSxcInJlZ2lvbmFsXCI6WzUyXSxcIm91dGFnZXNcIjpbNTNdLFwiZGVuaWFsXCI6WzU1XSxcInNlcnZpY2VcIjpbNTddLFwiYXR0YWNrcztcIjpbNThdLFwiYWxzb1wiOls2MF0sXCJlbmhhbmNlc1wiOls2MV0sXCJwZXJmb3JtYW5jZVwiOls2Ml0sXCJwcm8tYWN0aXZlXCI6WzY0XSxcIm1vdmVtZW50XCI6WzY1XSxcImRhdGEuXCI6WzY3XSxcIkFcIjpbNjhdLFwicHJvdG90eXBlXCI6WzY5XSxcImltcGxlbWVudGF0aW9uXCI6WzcwXSxcImN1cnJlbnRseVwiOls3Ml0sXCJ1bmRlclwiOls3M10sXCJkZXZlbG9wbWVudC5cIjpbNzRdfX0sXCJTXCI6W3tcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly93d3cud3d3LXVzZXJzLml0bGFicy51bW4uZWR1L2NsYXNzZXMvZmFsbC0yMDA4L2NzY2k4MTAxL3BhcGVycy9vY2VhbnN0b3JlLnBkZlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9Mzc5MjM5XCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuc3JoZWEubmV0L3BhcGVycy9hc3Bsb3MwMC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3BhZ2VzLmNzLndpc2MuZWR1L35yZW16aS9DbGFzc2VzLzgzOC9GYWxsMjAwMS9QYXBlcnMvb2NlYW5zdG9yZS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cuY3MudWNzYi5lZHUvfnJhdmVuYmVuL3B1YmxpY2F0aW9ucy9wZGYvYXNwbG9zMDAucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9maXJlbGVzcy5jcy5jb3JuZWxsLmVkdS9wdWJsaWNhdGlvbnMvYXNwbG9zMDAucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9ob21lcGFnZS5kaXZtcy51aW93YS5lZHUvfmdob3NoL29jZWFuc3RvcmUucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3NlLmJ1ZmZhbG8uZWR1L2ZhY3VsdHkvdGtvc2FyL2NzZTcxMF9zcHJpbmcxMy9wYXBlcnMvb2NlYW5zdG9yZS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5pY3MudWNpLmVkdS9+Y3MyMzcvcmVhZGluZy9maWxlcy9vY2VhblN0b3JlLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3VzZXJzLnNvZS51Y3NjLmVkdS9+c2JyYW5kdC8yOTBTL29jZWFuc3RvcmUucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly96b28uY3MueWFsZS5lZHUvY2xhc3Nlcy9jczQyNi8yMDE0L2JpYi9rdWJpYXRvd2ljejAwb2NlYW5zdG9yZS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dzIuY3MudWguZWR1LyU3RWphc3BhbC9jb3NjNzM5Ny8wNnBhcGVycy9vY2VhbnN0b3JlLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnVpb3dhLmVkdS9+Z2hvc2gvb2NlYW5zdG9yZS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5jb3JuZWxsLmVkdS9+aHdlYXRoZXIvT2NlYW5zdG9yZS9hc3Bsb3MwMC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5mc3UuZWR1LyU3RWF3YW5nL2NvdXJzZXMvY29wNTYxMV9zMjAwNC9vY2VhbnN0b3JlLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzZC51d28uY2EvZmFjdWx0eS9oYW5hbi9QZXJ2L1BhcGVycy9vY2VhbnN0b3JlLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3d3dy5nbnVuZXQub3JnL3NpdGVzL2RlZmF1bHQvZmlsZXMvcDE5MC1rdWJpLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnByaW5jZXRvbi5lZHUvY291cnNlcy9hcmNoaXZlL2ZhbGwwMi9jczU5N0MvUDJQL0FwcGxpY2F0aW9ucy9vY2VhbnN0b3JlX2FzcGxvczIwMDAucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZWNlLnVjLmVkdS9+b3NjYXIvcDJwYXJlYS9zdG9yYWdlLWZzL29jZWFuc3RvcmUucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cudXRkYWxsYXMuZWR1L35rc2FyYWMvY291cnNlcy9QYXBlcnMvb2NlYW5zdG9yZS4xcGRmLnBkZlwifV0sXCJWRk5cIjpcIkFyY2hpdGVjdHVyYWwgU3VwcG9ydCBmb3IgUHJvZ3JhbW1pbmcgTGFuZ3VhZ2VzIGFuZCBPcGVyYXRpbmcgU3lzdGVtc1wiLFwiVlNOXCI6XCJBU1BMT1NcIixcIlZcIjozNSxcIklcIjoxMSxcIkZQXCI6MTkwLFwiTFBcIjoyMDEsXCJET0lcIjpcIjEwLjExNDUvMzU2OTg5LjM1NzAwN1wiLFwiQ0NcIjp7XCI0NTAwMTM5M1wiOltcIk90aGVycyBoYXZlIHVzZWQgZmlsZSBzeXN0ZW0gb2JzZXJ2YXRpb24gdG8gZHJpdmUgYXV0b21hdGljIHByZWZldGNoaW5nIFsyMCwgMjddLlwiXSxcIjk1NTQyNjQ0XCI6W1wiT3RoZXJzIGhhdmUgdXNlZCBmaWxlIHN5c3RlbSBvYnNlcnZhdGlvbiB0byBkcml2ZSBhdXRvbWF0aWMgcHJlZmV0Y2hpbmcgWzIwLCAyN10uXCJdLFwiMTc2MDE3NzAxXCI6W1wiVGhlIFIqIGRpc3RyaWJ1dGVkIGRhdGFiYXNlIFszM10gY2FsY3VsYXRlcyB0aGVtIG9uIGRlbWFuZCB0byBpbXBsZW1lbnQgZWZmaWNpZW50IHNlbWlqb2lucy5cIl0sXCIxNTM5MjU5OTIxXCI6W1wiQmVmb3JlIHN1Y2ggYSByZXZvbHV0aW9uIGNhbiBvY2N1ciwgaG93ZXZlciwgY29tcHV0aW5nIGRldmljZXMgbXVzdCBiZWNvbWUgc28gcmVsaWFibGUgYW5kIHJlc2lsaWVudCB0aGF0IHRoZXkgYXJlIGNvbXBsZXRlbHkgdHJhbnNwYXJlbnQgdG8gdGhlIHVzZXIgWyA1MCBdLlwiXSxcIjE1NjMxMzUxNTFcIjpbXCJUaGUgU2VjdXJlIEZpbGUgU3lzdGVtIFsyNF1cIl0sXCIxNTk4MTQ5MTgzXCI6W1wiT3RoZXJzIG9wdGltaXplIGNvbW11bmljYXRpb24gY29zdCB3aGVuIHNlbGVjdGluZyBhIG5ldyBsb2NhdGlvbiBmb3IgcmVwbGljYSBwbGFjZW1lbnQgWzJdIHdpdGhpbiBhIHNpbmdsZSBhZG1pbmlzdHJhdGl2ZSBkb21haW4uXCJdLFwiMTgxOTAxMDMyNlwiOltcIldlIGFkZHJlc3MgdGhpcyBwcm9ibGVtIHVzaW5nIHRoZSBsb2NhbGx5IGxpbmtlZCBuYW1lIHNwYWNlcyBmcm9tIHRoZSBTRFNJIGZyYW1ld29yayBbMSwgNDJdLlwiXSxcIjE5NzEyNzk4MjZcIjpbXCJPY2VhblN0b3Jl4oCZcyBzZWNvbmQgdGllciBvZiBmbG9hdGluZyByZXBsaWNhcyBhcmUgc2ltaWxhciB0byB0cmFuc2FjdGlvbmFsIGNhY2hlczsgaW4gdGhlIHRheG9ub215IG9mIFsgMTcgXSBvdXIgYWxnb3JpdGhtIGlzIGRldGVjdGlvbmJhc2VkIGFuZCBwZXJmb3JtcyBpdHMgdmFsaWRpdHkgY2hlY2tzIGF0IGNvbW1pdCB0aW1lLlwiXSxcIjE5NzQ0MDE4MDlcIjpbXCJUaGUgYXJjaGl2YWwgbWVjaGFuaXNtIG9mIE9jZWFuU3RvcmUgZW1wbG95cyBlcmFzdXJlIGNvZGVzLCBzdWNoIGFzIGludGVybGVhdmVkIFJlYWQtU29sb21vbiBjb2RlcyBbIDM5IF0gYW5kIFRvcm5hZG8gY29kZXMgWzMyXS5cIl0sXCIxOTg4NTQ5MTAyXCI6W1wiQSBzdW1tYXJ5IG9mIGRpc3RyaWJ1dGVkIGZpbGUgc3lzdGVtcyBjYW4gYmUgZm91bmQgaW4gWzMxXS5cIl0sXCIxOTg5NjQ5Nzg4XCI6W1wiV2UgcGxhbiB0byBhZG9wdCBpZGVhcyBmcm9tIHN5c3RlbXMgc3VjaCBhcyBUYW9zIGFuZCBQb2xpY3lNYWtlciB0byBhbGxvdyB1c2VycyB0byBleHByZXNzIGFuZCByZWFzb24gZm9ybWFsbHkgYWJvdXQgYSB3aWRlIHJhbmdlIG9mIHBvc3NpYmxlIHBvbGljaWVzIFs1MiwgNl0uXCIsXCJEaXN0cmlidXRlZCBzeXN0ZW1zIHN1Y2ggYXMgVGFvcyBbNTJdIGFzc3VtZSB1bnRydXN0ZWQgbmV0d29ya3MgYW5kIGFwcGxpY2F0aW9ucywgYnV0IHJlbHkgb24gc29tZSB0cnVzdGVkIGNvbXB1dGluZyBiYXNlLlwiXSxcIjIwMDA4NzYwMjNcIjpbXCJbNDBdIGxvY2F0ZXMgZW50aXRpZXMgdGhhdCBjYW5ub3QgYmUgZm91bmQgbG9jYWxseS5cIixcIuKAmXMgcmFuZG9taXplZCBoaWVyYXJjaGljYWwgZGlzdHJpYnV0ZWQgZGF0YSBzdHJ1Y3R1cmUgWzQwXSwgd2hpY2ggZW1iZWRzIG11bHRpcGxlIHJhbmRvbSB0cmVlcyBpbiB0aGUgbmV0d29yay5cIixcIkluIFs0MF0sIHRoZSBhdXRob3JzIHNob3cgdGhhdCB0aGUgYXZlcmFnZSBkaXN0YW5jZSB0cmF2ZWxlZCBpcyBwcm9wb3J0aW9uYWwgdG8gdGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIHNvdXJjZSBvZiB0aGUgcXVlcnkgYW5kIHRoZSBjbG9zZXN0IHJlcGxpY2EgdGhhdCBzYXRpc2ZpZXMgdGhpcyBxdWVyeS5cIl0sXCIyMDA1MzczNzE0XCI6W1wiUHJvbWlzY3VvdXMgY2FjaGluZyBpcyBhbiBpbXBvcnRhbnQgZGlzdGluY3Rpb24gYmV0d2VlbiBPY2VhblN0b3JlIGFuZCBzeXN0ZW1zIHN1Y2ggYXMgTkZTIFs0M10gYW5kIEFGUyBbMjNdIGluIHdoaWNoIGNhY2hlZCBkYXRhIGlzIGNvbmZpbmVkIHRvIHBhcnRpY3VsYXIgc2VydmVycyBpbiBwYXJ0aWN1bGFyXCJdLFwiMjAyNTM3MTMxNlwiOltcIk1hbnkgcHJldmlvdXMgcHJvamVjdHMgaGF2ZSBleHBsb3JlZCBmZWVkYmFjay1kcml2ZW4gYWRhcHRhdGlvbiBpbiBleHRlbnNpYmxlIG9wZXJhdGluZyBzeXN0ZW1zIFs0NV0sIGRhdGFiYXNlcyBbMTFdLCBmaWxlIHN5c3RlbXMgWzM0XSwgZ2xvYmFsIG9wZXJhdGluZyBzeXN0ZW1zIFs5XSwgYW5kIHN0b3JhZ2UgZGV2aWNlcyBbNTFdLlwiXSxcIjIwMjU0MTM2ODZcIjpbXCJFeHBlcmltZW50YWwgc3lzdGVtcyBzdWNoIGFzIFhGUyBbM10gYWxsb3cg4oCcY29vcGVyYXRpdmUgY2FjaGluZ+KAnSBbMTJdLCBidXQgb25seSBpbiBzeXN0ZW1zIGNvbm5lY3RlZCBieSBhIGZhc3QgTEFOLlwiXSxcIjIwMzU2MDYzNjRcIjpbXCJNYW55IHByZXZpb3VzIHByb2plY3RzIGhhdmUgZXhwbG9yZWQgZmVlZGJhY2stZHJpdmVuIGFkYXB0YXRpb24gaW4gZXh0ZW5zaWJsZSBvcGVyYXRpbmcgc3lzdGVtcyBbNDVdLCBkYXRhYmFzZXMgWzExXSwgZmlsZSBzeXN0ZW1zIFszNF0sIGdsb2JhbCBvcGVyYXRpbmcgc3lzdGVtcyBbOV0sIGFuZCBzdG9yYWdlIGRldmljZXMgWzUxXS5cIl0sXCIyMDU5NDMyMzI4XCI6W1wiU2xpZ2h0IGV4dGVuc2lvbnMgdG8gdGhlIG1vZGVsIGNhbiBzdXBwb3J0IExvdHVzIE5vdGVzLXN0eWxlIGNvbmZsaWN0IHJlc29sdXRpb24sIHdoZXJlIHVucmVzb2x2YWJsZSBjb25mbGljdHMgcmVzdWx0IGluIGEgYnJhbmNoIGluIHRoZSBvYmplY3TigJlzIHZlcnNpb24gc3RyZWFtIFsyNV0uXCJdLFwiMjA3NDI1MDgxNlwiOltcIk5vbmUgb2YgdGhlc2Ugc3lzdGVtcyBhZGRyZXNzZXMgdGhlIHJhbmdlIG9mIHNlY3VyaXR5IGNvbmNlcm5zIHRoYXQgT2NlYW5TdG9yZSBkb2VzLCBhbHRob3VnaCBCYXlvdSBleGFtaW5lcyBzb21lIHByb2JsZW1zIHRoYXQgb2NjdXIgd2hlbiByZXBsaWNhcyBhcmUgY29ycnVwdGVkIFs0OF0uXCJdLFwiMjA3Nzk2NzIxMVwiOltcIkV4cGVyaW1lbnRhbCBzeXN0ZW1zIHN1Y2ggYXMgWEZTIFszXSBhbGxvdyDigJxjb29wZXJhdGl2ZSBjYWNoaW5n4oCdIFsxMl0sIGJ1dCBvbmx5IGluIHN5c3RlbXMgY29ubmVjdGVkIGJ5IGEgZmFzdCBMQU4uXCJdLFwiMjA4NzA0MDI3OVwiOltcIlRoZSBhcmNoaXZhbCBtZWNoYW5pc20gb2YgT2NlYW5TdG9yZSBlbXBsb3lzIGVyYXN1cmUgY29kZXMsIHN1Y2ggYXMgaW50ZXJsZWF2ZWQgUmVhZC1Tb2xvbW9uIGNvZGVzIFszOV0gYW5kIFRvcm5hZG8gY29kZXMgWzMyXS5cIl0sXCIyMDk3ODI5MjUyXCI6W1wiSW4gZmFjdCwgZ3JvdXBzIG9mIHVwZGF0ZXMgYXJlIGNvbWJpbmVkIHRvIGNyZWF0ZSBuZXcgdmVyc2lvbnMsIGFuZCB3ZSBwbGFuIHRvIHByb3ZpZGUgaW50ZXJmYWNlcyBmb3IgcmV0aXJpbmcgb2xkIHZlcnNpb25zLCBhcyBpbiB0aGUgRWxlcGhhbnQgRmlsZSBTeXN0ZW0gWzQ0XS5cIixcIkluIGFkZGl0aW9uLCBpbnRlcmZhY2VzIHdpbGwgZXhpc3QgdG8gZXhhbWluZSBtb2RpZmljYXRpb24gaGlzdG9yeSBhbmQgdG8gc2V0IHZlcnNpb25pbmcgcG9saWNpZXMgWzQ0XS5cIl0sXCIyMDk5MTg0NTE5XCI6W1wiTmV2ZXJ0aGVsZXNzLCB3ZSBwcmVzZXJ2ZSB0aGUga2V5IGZ1bmN0aW9uYWxpdHkgb2YgdGhlaXIgbW9kZWwsIHdoaWNoIHRoZXkgZm91bmQgdG8gYmUgZXhwcmVzc2l2ZSBlbm91Z2ggZm9yIGEgbnVtYmVyIG9mIHNhbXBsZSBhcHBsaWNhdGlvbnMgaW5jbHVkaW5nIGEgZ3JvdXAgY2FsZW5kYXIsIGEgc2hhcmVkIGJpYmxpb2dyYXBoaWMgZGF0YWJhc2UsIGFuZCBhIG1haWwgYXBwbGljYXRpb24gWzE0XS5cIl0sXCIyMTA0MTEyODQ5XCI6W1wiVGhpcyBsYWNrIG9mIHRydXN0IGlzIGluaGVyZW50IGluIHRoZSB1dGlsaXR5IG1vZGVsIGFuZCBpcyBkaWZmZXJlbnQgZnJvbSBvdGhlciBjcnlwdG9ncmFwaGljIHN5c3RlbXMgc3VjaCBhcyBbMzVdLlwiLFwiVG8gcHJvdmlkZSBhIGZhY2lsaXR5IHRoYXQgaXMgYm90aCBkZWNlbnRyYWxpemVkIGFuZCByZXNpc3RhbnQgdG8gYXR0ZW1wdHMgYnkgYWR2ZXJzYXJpZXMgdG8g4oCcaGlqYWNr4oCdIG5hbWVzIHRoYXQgYmVsb25nIHRvIG90aGVyIHVzZXJzLCB3ZSBoYXZlIGFkYXB0ZWQgdGhlIGlkZWEgb2Ygc2VsZi1jZXJ0aWZ5aW5nIHBhdGggbmFtZXMgZHVlIHRvIE1hemnDqHJlcyBbMzVdLlwiLFwiTWF6acOocmVzIHByb3Bvc2VzIHNlbGYtY2VydGlmeWluZyBwYXRocyB0byBzZXBhcmF0ZSBrZXkgbWFuYWdlbWVudCBmcm9tIHN5c3RlbSBzZWN1cml0eSBbMzVdLlwiXSxcIjIxMDQ1MzI3NDFcIjpbXCJUaGUgc3lzdGVtIGlzIHdyaXR0ZW4gaW4gSmF2YSB3aXRoIGEgc3RhdGUgbWFjaGluZS1iYXNlZCByZXF1ZXN0IG1vZGVsIGZvciBmYXN0IEkvTyBbMjJdLlwiXSxcIjIxMDU0NzA3NDhcIjpbXCJTRFNJIFsxXSBhbmQgU1BLSSBbMTVdIGFkZHJlc3MgdGhlIHByb2JsZW0gb2Ygc2VjdXJlbHkgZGlzdHJpYnV0aW5nIGtleXMgYW5kIGNlcnRpZmljYXRlcyBpbiBhIGRlY2VudHJhbGl6ZWQgbWFubmVyLlwiXSxcIjIxMDc0NjA5MzhcIjpbXCJTcHJpdGUgWyAzNiBdIGFsc28gdXNlcyByZXBsaWNhdGlvbiBhbmQgY2FjaGluZyB0byBpbXByb3ZlIGF2YWlsYWJpbGl0eSBhbmQgcGVyZm9ybWFuY2UsIGJ1dCBoYXMgYSBndWFyYW50ZWUgb2YgY29uc2lzdGVuY3kgdGhhdCBpbmN1cnMgYSBwZXJmb3JtYW5jZSBwZW5hbHR5IGluIHRoZSBmYWNlIG9mIG11bHRpcGxlIHdyaXRlcnMuXCJdLFwiMjExMTU4Njk2MlwiOltcImFyZ3VlIGFnYWluc3QgcHJvbWlzY3VvdXMgcmVwbGljYXRpb24gaW4gWzE5XS5cIl0sXCIyMTE1NTk5OTQ2XCI6W1wiVGhlIEZhcnNpdGUgcHJvamVjdCBbOF0gaXMgbW9yZSBzaW1pbGFyIHRvIE9jZWFuU3RvcmUgdGhhbiB0aGVzZSBvdGhlciB3b3JrcywgYnV0IHdoaWxlIGl0IGFzc3VtZXMgdGhlIHVzZSBvZiB1bnRydXN0ZWQgY2xpZW50cywgaXQgZG9lcyBub3QgYWRkcmVzcyBhIHdpZGUtYXJlYSBpbmZyYXN0cnVjdHVyZS5cIl0sXCIyMTE3MDM0OTQ2XCI6W1wiQ29uc2lzdGVuY3kgYmFzZWQgb24gdmVyc2lvbmluZywgd2hpbGUgbW9yZSBleHBlbnNpdmUgdG8gaW1wbGVtZW50IHRoYW4gdXBkYXRlLWluLXBsYWNlIGNvbnNpc3RlbmN5LCBwcm92aWRlcyBmb3IgY2xlYW5lciByZWNvdmVyeSBpbiB0aGUgZmFjZSBvZiBzeXN0ZW0gZmFpbHVyZXMgWzQ5XS5cIl0sXCIyMTE4ODI4NDY0XCI6W1wiVXBkYXRlcyBjb250YWluIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgY2hhbmdlcyB0byBtYWtlIHRvIGFuIG9iamVjdCBhbmQgdGhlIGFzc3VtZWQgc3RhdGUgb2YgdGhlIG9iamVjdCB1bmRlciB3aGljaCB0aG9zZSBjaGFuZ2VzIHdlcmUgZGV2ZWxvcGVkLCBtdWNoIGFzIGluIHRoZSBCYXlvdSBzeXN0ZW0gWzEzXS5cIixcIkVhY2ggc2Vzc2lvbiBpcyBhIHNlcXVlbmNlIG9mIHJlYWQgYW5kIHdyaXRlIHJlcXVlc3RzIHJlbGF0ZWQgdG8gb25lIGFub3RoZXIgdGhyb3VnaCB0aGUgc2Vzc2lvbiBndWFyYW50ZWVzLCBpbiB0aGUgc3R5bGUgb2YgdGhlIEJheW91IHN5c3RlbSBbMTNdLlwiLFwiQ29uZmxpY3QgcmVzb2x1dGlvbiB3YXMgaW50cm9kdWNlZCBpbiB0aGUgQmF5b3Ugc3lzdGVtIFsxM10gYW5kIHN1cHBvcnRzIGEgcmFuZ2Ugb2YgY29uc2lzdGVuY3kgc2VtYW50aWNz4oCUdXAgdG8gYW5kIGluY2x1ZGluZyBBQ0lEIHNlbWFudGljcy5cIixcIkluIHBhcnRpY3VsYXIsIEJheW91IFsxM10gYW5kIENvZGEgWzI2XSB1c2UgcmVwbGljYXRpb24gdG8gaW1wcm92ZSBhdmFpbGFiaWxpdHkgYXQgdGhlIGV4cGVuc2Ugb2YgY29uc2lzdGVuY3kgYW5kIGludHJvZHVjZSBzcGVjaWFsaXplZCBjb25mbGljdCByZXNvbHV0aW9uIHByb2NlZHVyZXMuXCJdLFwiMjEyMDUxMDg4NVwiOltcIlRoZXNlIHJlcGxpY2FzIGNvb3BlcmF0ZSB3aXRoIG9uZSBhbm90aGVyIGluIGEgQnl6YW50aW5lIGFncmVlbWVudCBwcm90b2NvbCBbMzBdIHRvIGNob29zZSB0aGUgZmluYWwgY29tbWl0IG9yZGVyIGZvciB1cGRhdGVzLlwiXSxcIjIxMjE5NDU1NjFcIjpbXCJUbyBhbGxvdyBmb3IgbGF0ZXIsIG9mZmxpbmUgdmVyaWZpY2F0aW9uIGJ5IGEgcGFydHkgd2hvIGRpZCBub3QgcGFydGljaXBhdGUgaW4gdGhlIHByb3RvY29sLCB3ZSBhcmUgZXhwbG9yaW5nIHRoZSB1c2Ugb2YgcHJvYWN0aXZlIHNpZ25hdHVyZSB0ZWNobmlxdWVzIFs0XSB0byBjZXJ0aWZ5IHRoZSByZXN1bHQgb2YgdGhlIHNlcmlhbGl6YXRpb24gcHJvY2Vzcy5cIl0sXCIyMTIzODQ1Mzg0XCI6W1wiQSBtb2RpZmllZCB2ZXJzaW9uIG9mIGEgQmxvb20gZmlsdGVyIFs3XeKAlGNhbGxlZCBhbiBhdHRlbnVhdGVkIEJsb29tIGZpbHRlcuKAlGlzIHVzZWQgdG8gaW1wbGVtZW50IHRoaXMgcG90ZW50aWFsIGZ1bmN0aW9uLlwiLFwiQmxvb20gZmlsdGVycyBbN10gYXJlIGNvbW1vbmx5IHVzZWQgYXMgY29tcGFjdCByZXByZXNlbnRhdGlvbnMgb2YgbGFyZ2Ugc2V0cy5cIl0sXCIyMTI0MDc0MTk3XCI6W1wiRm9yIGluc3RhbmNlLCBDb2RhIFsyNl0gcHJvdmlkZWQgc3BlY2lmaWMgbWVyZ2UgcHJvY2VkdXJlcyBmb3IgY29uZmxpY3RpbmcgdXBkYXRlcyBvZiBkaXJlY3RvcmllczsgdGhpcyB0eXBlIG9mIGNvbmZsaWN0IHJlc29sdXRpb24gaXNcIixcIkluIHBhcnRpY3VsYXIsIEJheW91IFsxM10gYW5kIENvZGEgWzI2XSB1c2UgcmVwbGljYXRpb24gdG8gaW1wcm92ZSBhdmFpbGFiaWxpdHkgYXQgdGhlIGV4cGVuc2Ugb2YgY29uc2lzdGVuY3kgYW5kIGludHJvZHVjZSBzcGVjaWFsaXplZCBjb25mbGljdCByZXNvbHV0aW9uIHByb2NlZHVyZXMuXCJdLFwiMjEyNjA4NzgzMVwiOltcIldlIGhvcGUgdG8gZXh0ZW5kIHRoZSBwcm90b2NvbCBpbiBbMTBdIHRvIHVzZSBzdWNoIHRlY2huaXF1ZXMuXCIsXCJBc3N1bWluZyB0aGF0IGEgQnl6YW50aW5lIGFncmVlbWVudCBwcm90b2NvbCBsaWtlIHRoYXQgaW4gWzEwXSBpcyB1c2VkLCB0aGUgdG90YWwgY29zdCBhbiB1cGRhdGUgaW4gYnl0ZXMgc2VudCBhY3Jvc3MgdGhlIG5ldHdvcmssIGIsIGlzIGdpdmVuIGJ5IHRoZSBlcXVhdGlvbjpcIl0sXCIyMTMzMzg2MDY1XCI6W1wiQWRkaXRpb25hbGx5LCBjb25mbGljdCByZXNvbHV0aW9uIHJlZHVjZXMgdGhlIG51bWJlciBvZiBhYm9ydHMgbm9ybWFsbHkgc2VlbiBpbiBkZXRlY3Rpb24tYmFzZWQgc2NoZW1lcyBzdWNoIGFzIG9wdGltaXN0aWMgY29uY3VycmVuY3kgY29udHJvbCBbMjldLlwiXSxcIjIxNDM2OTQ3NzlcIjpbXCJNYW55IHByZXZpb3VzIHByb2plY3RzIGhhdmUgZXhwbG9yZWQgZmVlZGJhY2stZHJpdmVuIGFkYXB0YXRpb24gaW4gZXh0ZW5zaWJsZSBvcGVyYXRpbmcgc3lzdGVtcyBbNDVdLCBkYXRhYmFzZXMgWzExXSwgZmlsZSBzeXN0ZW1zIFszNF0sIGdsb2JhbCBvcGVyYXRpbmcgc3lzdGVtcyBbOV0sIGFuZCBzdG9yYWdlIGRldmljZXMgWzUxXS5cIl0sXCIyMTQ1OTk5NTQ0XCI6W1wiV2UgYWRkcmVzcyB0aGlzIHByb2JsZW0gdXNpbmcgdGhlIGxvY2FsbHkgbGlua2VkIG5hbWUgc3BhY2VzIGZyb20gdGhlIFNEU0kgZnJhbWV3b3JrIFsxLCA0Ml0uXCIsXCJTRFNJIFsxXSBhbmQgU1BLSSBbMTVdIGFkZHJlc3MgdGhlIHByb2JsZW0gb2Ygc2VjdXJlbHkgZGlzdHJpYnV0aW5nIGtleXMgYW5kIGNlcnRpZmljYXRlcyBpbiBhIGRlY2VudHJhbGl6ZWQgbWFubmVyLlwiXSxcIjIxNDgyOTE0ODVcIjpbXCJNYW55IHByZXZpb3VzIHByb2plY3RzIGhhdmUgZXhwbG9yZWQgZmVlZGJhY2stZHJpdmVuIGFkYXB0YXRpb24gaW4gZXh0ZW5zaWJsZSBvcGVyYXRpbmcgc3lzdGVtcyBbNDVdLCBkYXRhYmFzZXMgWzExXSwgZmlsZSBzeXN0ZW1zIFszNF0sIGdsb2JhbCBvcGVyYXRpbmcgc3lzdGVtcyBbOV0sIGFuZCBzdG9yYWdlIGRldmljZXMgWzUxXS5cIl0sXCIyMTU3NzM3MDk3XCI6W1wiUHJvbWlzY3VvdXMgY2FjaGluZyBpcyBhbiBpbXBvcnRhbnQgZGlzdGluY3Rpb24gYmV0d2VlbiBPY2VhblN0b3JlIGFuZCBzeXN0ZW1zIHN1Y2ggYXMgTkZTIFsgNDMgXSBhbmQgQUZTIFsyM10gaW4gd2hpY2ggY2FjaGVkIGRhdGEgaXMgY29uZmluZWQgdG8gcGFydGljdWxhciBzZXJ2ZXJzIGluIHBhcnRpY3VsYXIgcmVnaW9ucyBvZiB0aGUgbmV0d29yay5cIl0sXCIyMTU3NzQwMDIwXCI6W1wiVGhlIFN1bW1hcnkgQ2FjaGUgWzE2XSBwdXNoZXMgQmxvb20gZmlsdGVycyBiZXR3ZWVuIGNvb3BlcmF0aW5nIHdlYiBjYWNoZXMsIGFsdGhvdWdoIHRoZWlyIG1ldGhvZCBkb2VzIG5vdCBzY2FsZSB3ZWxsIGluIHRoZSBudW1iZXIgb2YgY2FjaGVzLlwiXSxcIjIxNTkzMzk5NjFcIjpbXCJIb3dldmVyLCByYXRoZXIgdGhhbiBhc3N1bWluZyB0aGF0IHNlcnZlcnMgYXJlIHBhc3NpdmUgcmVwb3NpdG9yaWVzIG9mIGluZm9ybWF0aW9uIChzdWNoIGFzIGluIENGUyBbNV0pLCB3ZSBhbGxvdyBzZXJ2ZXJzIHRvIGJlIGFibGUgdG8gcGFydGljaXBhdGUgaW4gcHJvdG9jb2xzIGZvciBkaXN0cmlidXRlZCBjb25zaXN0ZW5jeSBtYW5hZ2VtZW50LlwiLFwiQ3J5cHRvZ3JhcGhpYyBmaWxlIHN5c3RlbXMgc3VjaCBhcyBCbGF6ZeKAmXMgQ0ZTIFs1XSBwcm92aWRlIGVuZC10by1lbmQgc2VjcmVjeSwgYnV0IGluY2x1ZGUgbm8gcHJvdmlzaW9ucyBmb3Igc2hhcmluZyBkYXRhLCBub3IgZm9yIHByb3RlY3RpbmcgaW50ZWdyaXR5IGluZGVwZW5kZW50bHkgZnJvbSBzZWNyZWN5LlwiXSxcIjIxNjAzNzg5MTZcIjpbXCJUaGlzIGhhbmRsZXIgaW5jcmVtZW50YWxseSBjb25zdHJ1Y3RzIGEgZ3JhcGggcmVwcmVzZW50aW5nIHRoZSBzZW1hbnRpYyBkaXN0YW5jZSBbMjhdIGFtb25nIGRhdGEgb2JqZWN0cywgd2hpY2ggcmVxdWlyZXMgb25seSBhIGZldyBvcGVyYXRpb25zIHBlciBhY2Nlc3MuXCIsXCJUaGUgU2VlciBwcm9qZWN0IGZvcm11bGF0ZWQgdGhlIGNvbmNlcHQgb2Ygc2VtYW50aWMgZGlzdGFuY2UgWzI4XSBhbmQgY29sbGVjdHMgY2x1c3RlcnMgb2YgcmVsYXRlZCBmaWxlcyBmb3IgYXV0b21hdGVkIGhvYXJkaW5nLlwiXSxcIjIxNjUwMjg2MDVcIjpbXCJBcmNoaXZhbCB2ZXJzaW9ucyBvZiBvYmplY3RzIGFyZSBlbmNvZGVkIHdpdGggYW4gZXJhc3VyZSBjb2RlIGFuZCBzcHJlYWQgb3ZlciBodW5kcmVkcyBvciB0aG91c2FuZHMgb2Ygc2VydmVycyBbMThdOyBzaW5jZSBkYXRhIGNhbiBiZSByZWNvbnN0cnVjdGVkIGZyb20gYW55IHN1ZmZpY2llbnRseSBsYXJnZSBzdWJzZXQgb2YgZnJhZ21lbnRzLCB0aGUgcmVzdWx0IGlzIHRoYXQgbm90aGluZyBzaG9ydCBvZiBhIGdsb2JhbCBkaXNhc3RlciBjb3VsZCBldmVyIGRlc3Ryb3kgaW5mb3JtYXRpb24uXCIsXCJTaW1pbGFyIHRvIE9jZWFuU3RvcmUsIHRoZSBJbnRlcm1lbW9yeSBwcm9qZWN0IFsxOF0gdXNlcyBDYXVjaHkgUmVlZC1Tb2xvbW9uIENvZGVzIHRvIGFyY2hpdmUgd2lkZSBzY2FsZSBkdXJhYmlsaXR5LlwiXSxcIjIxNjY5NTUwMDFcIjpbXCJUaGUgTWFyaXBvc2EgcHJvamVjdCBbNDZdIGFkZHJlc3NlcyBpbnRlcmRvbWFpbiByZXBsaWNhdGlvbiB3aXRoIGFuIGVjb25vbWljIG1vZGVsLlwiXSxcIjIxNjc4NzQ4MTBcIjpbXCJJbnRyb3NwZWN0aXZlIHJlcGxpY2EgbWFuYWdlbWVudCBmb3Igd2ViIGNvbnRlbnQgd2FzIGV4YW1pbmVkIGluIEFUJlTigJlzIFJhZGFyIHByb2plY3QgWzQxXSwgd2hpY2ggY29uc2lkZXJzIHJlYWQtb25seSBkYXRhIGluIGEgdHJ1c3RlZCBpbmZyYXN0cnVjdHVyZS5cIl0sXCIyMTcwNDk2MjQwXCI6W1wiV2UgcGxhbiB0byBhZG9wdCBpZGVhcyBmcm9tIHN5c3RlbXMgc3VjaCBhcyBUYW9zIGFuZCBQb2xpY3lNYWtlciB0byBhbGxvdyB1c2VycyB0byBleHByZXNzIGFuZCByZWFzb24gZm9ybWFsbHkgYWJvdXQgYSB3aWRlIHJhbmdlIG9mIHBvc3NpYmxlIHBvbGljaWVzIFs1MiwgNl0uXCIsXCJQb2xpY3lNYWtlciBbNl0gZGVhbHMgd2l0aCB0aGUgZGVzY3JpcHRpb24gb2YgdHJ1c3QgcmVsYXRpb25zLlwiXX0sXCJQUlwiOlsyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDIxNTA2NzY1ODYsMjEyMzgyMDgyMCwyMDU4OTcyNTg5LDIxNDE0MjA0NTMsMjEyMTEzMzE3NywxNjUwNjc1NTA5LDIxNDg5MzA0ODAsMjEyODI1OTkyMywyMTc0NTA3ODY5LDIxMDc0MDk5MzMsMjExNTI2NzE5MSwxNzY2NDQxOTQ1LDE5NTMxMDAyMjUsMjE4NjU2NDkzOCwxNTU1ODExOTk1LDE1NjU2OTI5NTUsMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE1ODA0OTgyMSwyMTUwNjc2NTg2LDIxMjM4MjA4MjAsMjA1ODk3MjU4OSwyMTQxNDIwNDUzLDIxMjExMzMxNzcsMTY1MDY3NTUwOSwyMTQ4OTMwNDgwLDIxMjgyNTk5MjMsMjE3NDUwNzg2OSwyMTA3NDA5OTMzLDIxMTUyNjcxOTEsMTc2NjQ0MTk0NSwxOTUzMTAwMjI1LDIxODY1NjQ5MzgsMTU1NTgxMTk5NSwxNTY1NjkyOTU1XSxcIkFORlwiOlt7XCJGTlwiOlwiSm9oblwiLFwiTE5cIjpcIkt1YmlhdG93aWN6XCIsXCJTXCI6MX0se1wiRk5cIjpcIkRhdmlkXCIsXCJMTlwiOlwiQmluZGVsXCIsXCJTXCI6Mn0se1wiRk5cIjpcIllhblwiLFwiTE5cIjpcIkNoZW5cIixcIlNcIjozfSx7XCJGTlwiOlwiU3RldmVuIEUuXCIsXCJMTlwiOlwiQ3plcndpbnNraVwiLFwiU1wiOjR9LHtcIkZOXCI6XCJQYXRyaWNrIFIuXCIsXCJMTlwiOlwiRWF0b25cIixcIlNcIjo1fSx7XCJGTlwiOlwiRGVubmlzXCIsXCJMTlwiOlwiR2VlbHNcIixcIlNcIjo2fSx7XCJGTlwiOlwiUmFtYWtyaXNobmFcIixcIkxOXCI6XCJHdW1tYWRpXCIsXCJTXCI6N30se1wiRk5cIjpcIlNlYW4gQy5cIixcIkxOXCI6XCJSaGVhXCIsXCJTXCI6OH0se1wiRk5cIjpcIkhha2ltXCIsXCJMTlwiOlwiV2VhdGhlcnNwb29uXCIsXCJTXCI6OX0se1wiRk5cIjpcIldlc3RsZXlcIixcIkxOXCI6XCJXZWltZXJcIixcIlNcIjoxMH0se1wiRk5cIjpcIkNocmlzXCIsXCJMTlwiOlwiV2VsbHNcIixcIlNcIjoxMX0se1wiRk5cIjpcIkJlbiBZLlwiLFwiTE5cIjpcIlpoYW9cIixcIlNcIjoxMn1dLFwiQlZcIjpcImFyY2hpdGVjdHVyYWwgc3VwcG9ydCBmb3IgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzIGFuZCBvcGVyYXRpbmcgc3lzdGVtc1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNS44OTMsImtlc0VudGl0eUlkIjoxMDA2NzY5LCJJZCI6MjE3NDUwNzg2OSwiVGkiOiJmcmVlbmV0IGEgZGlzdHJpYnV0ZWQgYW5vbnltb3VzIGluZm9ybWF0aW9uIHN0b3JhZ2UgYW5kIHJldHJpZXZhbCBzeXN0ZW0iLCJZIjoyMDAxLCJEIjoiMjAwMS0wMS0wMSIsIkNDIjoyNzExLCJSSWQiOlsyMTEyMDkwNzAyLDIwNjU3Njk1MDIsMjA3MzM0NjA0MywxNjQzNDEyOTcxLDE5MTY3MDk3NzEsMTU4MDAwNDQ0MCwyMTYzNTk4NjkwLDIxMDM2NDc2MjgsNzQ0NDk0NzMsMjA2NDM2MDU0MywxNTY4ODkzMzkyLDE1NjIxOTk5NjIsMjM0MTExMTMzNCwxNTkwNzY1NzMxLDIwMDkxNzI4MTUsMTk3MzI2NDA1Myw2NTM1MTA5NCw4ODIyODgwMyw0MTY3ODc4MCwxNTczNTc5MzI5LDE3ODE3Mzg5OSwxNjU5NDA3NDJdLCJBQSI6W3siQXVOIjoiaWFuIGNsYXJrZSJ9LHsiQXVOIjoib3NrYXIgc2FuZGJlcmcifSx7IkF1TiI6ImJyYW5kb24gd2lsZXkifSx7IkF1TiI6InRoZW9kb3JlIHcgaG9uZyJ9XSwiRiI6W3siRk4iOiJkaWN0aW9uYXJ5IGF0dGFjayJ9LHsiRk4iOiJkYXRhIGZpbGUifSx7IkZOIjoiZGlzdHJpYnV0ZWQgZGF0YSBzdG9yZSJ9LHsiRk4iOiJhbm9ueW1pdHkifSx7IkZOIjoib3BlcmF0b3IifSx7IkZOIjoicHJpdmF0ZSBpbmZvcm1hdGlvbiByZXRyaWV2YWwifSx7IkZOIjoiY29tcHV0ZXIgc2VjdXJpdHkifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiRnJlZW5ldDogYSBkaXN0cmlidXRlZCBhbm9ueW1vdXMgaW5mb3JtYXRpb24gc3RvcmFnZSBhbmQgcmV0cmlldmFsIHN5c3RlbVwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjEyOSxcIkludmVydGVkSW5kZXhcIjp7XCJXZVwiOlswXSxcImRlc2NyaWJlXCI6WzFdLFwiRnJlZW5ldCxcIjpbMl0sXCJhblwiOlszXSxcImFkYXB0aXZlXCI6WzRdLFwicGVlci10by1wZWVyXCI6WzVdLFwibmV0d29ya1wiOls2LDMwXSxcImFwcGxpY2F0aW9uXCI6WzddLFwidGhhdFwiOls4LDM0XSxcInBlcm1pdHNcIjpbOV0sXCJ0aGVcIjpbMTAsMTksNTAsOTYsMTA2LDEyMV0sXCJwdWJsaWNhdGlvbixcIjpbMTFdLFwicmVwbGljYXRpb24sXCI6WzEyXSxcImFuZFwiOlsxMywyNCw0NCw3NCw4MiwxMDhdLFwicmV0cmlldmFsXCI6WzE0XSxcIm9mXCI6WzE1LDIxLDMxLDU1LDEwMSwxMjVdLFwiZGF0YVwiOlsxNiw0Ml0sXCJ3aGlsZVwiOlsxN10sXCJwcm90ZWN0aW5nXCI6WzE4XSxcImFub255bWl0eVwiOlsyMF0sXCJib3RoXCI6WzIyXSxcImF1dGhvcnNcIjpbMjNdLFwicmVhZGVycy5cIjpbMjVdLFwiRnJlZW5ldFwiOlsyNl0sXCJvcGVyYXRlc1wiOlsyN10sXCJhc1wiOlsyOF0sXCJhXCI6WzI5LDcxLDEwMiwxMTFdLFwiaWRlbnRpY2FsXCI6WzMyXSxcIm5vZGVzXCI6WzMzXSxcImNvbGxlY3RpdmVseVwiOlszNV0sXCJwb29sXCI6WzM2XSxcInRoZWlyXCI6WzM3XSxcInN0b3JhZ2VcIjpbMzhdLFwic3BhY2VcIjpbMzldLFwidG9cIjpbNDAsNDYsNDksNjksOTQsMTE0XSxcInN0b3JlXCI6WzQxXSxcImZpbGVzXCI6WzQzXSxcImNvb3BlcmF0ZVwiOls0NV0sXCJyb3V0ZVwiOls0N10sXCJyZXF1ZXN0c1wiOls0OF0sXCJtb3N0XCI6WzUxXSxcImxpa2VseVwiOls1Ml0sXCJwaHlzaWNhbFwiOls1MywxMjNdLFwibG9jYXRpb25cIjpbNTQsNjJdLFwiZGF0YS5cIjpbNTZdLFwiTm9cIjpbNTddLFwiYnJvYWRjYXN0XCI6WzU4XSxcInNlYXJjaFwiOls1OV0sXCJvclwiOls2MCw5OSwxMTZdLFwiY2VudHJhbGl6ZWRcIjpbNjFdLFwiaW5kZXhcIjpbNjNdLFwiaXNcIjpbNjQsODgsOTJdLFwiZW1wbG95ZWQuXCI6WzY1XSxcIkZpbGVzXCI6WzY2XSxcImFyZVwiOls2Nyw3NV0sXCJyZWZlcnJlZFwiOls2OF0sXCJpblwiOls3MCw3OF0sXCJsb2NhdGlvbi1pbmRlcGVuZGVudFwiOls3Ml0sXCJtYW5uZXIsXCI6WzczXSxcImR5bmFtaWNhbGx5XCI6Wzc2XSxcInJlcGxpY2F0ZWRcIjpbNzddLFwibG9jYXRpb25zXCI6Wzc5LDg1XSxcIm5lYXJcIjpbODBdLFwicmVxdWVzdG9yc1wiOls4MV0sXCJkZWxldGVkXCI6WzgzXSxcImZyb21cIjpbODRdLFwid2hlcmVcIjpbODZdLFwidGhlcmVcIjpbODddLFwibm9cIjpbODldLFwiaW50ZXJlc3QuXCI6WzkwXSxcIkl0XCI6WzkxXSxcImluZmVhc2libGVcIjpbOTNdLFwiZGlzY292ZXJcIjpbOTVdLFwidHJ1ZVwiOls5N10sXCJvcmlnaW5cIjpbOThdLFwiZGVzdGluYXRpb25cIjpbMTAwXSxcImZpbGVcIjpbMTAzXSxcInBhc3NpbmdcIjpbMTA0XSxcInRocm91Z2hcIjpbMTA1XSxcIm5ldHdvcmssXCI6WzEwN10sXCJkaWZmaWN1bHRcIjpbMTA5XSxcImZvclwiOlsxMTAsMTIwXSxcIm5vZGVcIjpbMTEyXSxcIm9wZXJhdG9yXCI6WzExM10sXCJkZXRlcm1pbmVcIjpbMTE1XSxcImJlXCI6WzExN10sXCJoZWxkXCI6WzExOF0sXCJyZXNwb25zaWJsZVwiOlsxMTldLFwiYWN0dWFsXCI6WzEyMl0sXCJjb250ZW50c1wiOlsxMjRdLFwiaGVyXCI6WzEyNl0sXCJvd25cIjpbMTI3XSxcIm5vZGUuXCI6WzEyOF19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cuY3MuY29ybmVsbC5lZHUvUGVvcGxlL2Vncy82MTUvZnJlZW5ldC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2hvbWVwYWdlLmNzLnVpb3dhLmVkdS9+Z2hvc2gvZnJlZW5ldC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5qaHUuZWR1L350ZXJ6aXMvY2xhc3Nlcy82MDAuNDEzL2ljc2ktcmV2aXNlZC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5lbmcuYXVidXJuLmVkdS9+eHFpbi9jb3Vyc2VzL2NvbXA3MzcwL0ZyZWVuZXQtMjAwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5wcmluY2V0b24uZWR1L2NvdXJzZXMvYXJjaGl2ZS9mYWxsMDkvY29zNTE4L3BhcGVycy9mcmVlbmV0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vaG9tZXBhZ2UuZGl2bXMudWlvd2EuZWR1L35naG9zaC9mcmVlbmV0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3JkLnNwcmluZ2VyLmNvbS9jb250ZW50L3BkZi8xMC4xMDA3JTJGMy01NDAtNDQ3MDItNF80LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lm5ld3MuY3Mubnl1LmVkdS9+amlueWFuZy9zcDA3L3BhcGVycy9mcmVlbmV0LXJldmlzZWQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3Muc2p0dS5lZHUuY24vfmdjaGVuL2NvdXJzZS9hY24vUmVhZGluZy9GcmVlbmV0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vaGF0c3dpdGNoLm9yZy9+bmlraXRhL2NvdXJzZXMvZWNlNTk4bmItc3AwNi9yZWFkaW5ncy9mcmVlbmV0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnVhaC5lZHUvfndlaXNza29wL3BhcGVycy9mcmVlbmV0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3d3dy5jcy51aW93YS5lZHUvfmdob3NoL2ZyZWVuZXQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuYWdlbnRncm91cC51bmltb3JlLml0L1phbWJvbmVsbGkvZGlkYXR0aWNhL2Nhcy9MNy9mcmVlbmV0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY291cnNlcy5jcy53YXNoaW5ndG9uLmVkdS9jb3Vyc2VzL2NzZTU2MS8wMmF1L3BhcGVycy9jbGFya2UtZnJlZW5ldC1pY3NpMDAucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vbGluay5zcHJpbmdlci5jb20vY2hhcHRlci8xMC4xMDA3LzMtNTQwLTQ0NzAyLTRfNFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTM3MTkzMS4zNzE5NzdcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1LzM3MTkzMS4zNzE5NzdcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0zNzE5NzdcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9yZC5zcHJpbmdlci5jb20vY2hhcHRlci8xMC4xMDA3LzMtNTQwLTQ0NzAyLTRfNFwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vem9vLmNzLnlhbGUuZWR1L2NsYXNzZXMvY3M0MjYvMjAxNC9iaWIvY2xhcmtlMDFmcmVlbmV0LnBkZlwifV0sXCJWRk5cIjpcIlByaXZhY3kgRW5oYW5jaW5nIFRlY2hub2xvZ2llc1wiLFwiVlNOXCI6XCJQRVRTXCIsXCJGUFwiOjQ2LFwiTFBcIjo2NixcIkRPSVwiOlwiMTAuMTAwNy8zLTU0MC00NDcwMi00XzRcIixcIkNDXCI6e1wiNDE2Nzg3ODBcIjpbXCJCZWNhdXNlIG9mIGEgY29udGludWVkIGRlc2lyZSBhbW9uZyBpbmRpdmlkdWFscyB0byBwcm90ZWN0IHRoZSBwcml2YWN5IG9mIHRoZWlyIGF1dGhvcnNoaXAgb3IgcmVhZGVyc2hpcCBvZiB2YXJpb3VzIHR5cGVzIG9mIHNlbnNpdGl2ZSBpbmZvcm1hdGlvblsyOF0sIGFuZCB0aGUgdW5kZXNpcmFiaWxpdHkgb2YgY2VudHJhbCBwb2ludHMgb2YgZmFpbHVyZSB3aGljaCBjYW4gYmUgYXR0YWNrZWQgYnkgb3Bwb25lbnRzIHdpc2hpbmcgdG8gcmVtb3ZlIGRhdGEgZnJvbSB0aGUgc3lzdGVtWzExLDI3XSBvciBzaW1wbHkgb3ZlcmxvYWRlZCBieSB0b28gbXVjaCBpbnRlcmVzdFsxXSwgc3lzdGVtcyBvZmZlcmluZyBncmVhdGVyIHNlY3VyaXR5IGFuZCByZWxpYWJpbGl0eSBhcmUgbmVlZGVkLlwiXSxcIjc0NDQ5NDczXCI6W1wiSXQgZ3JldyBvdXQgb2Ygd29yayBvcmlnaW5hbGx5IGRvbmUgYnkgdGhlIGZpcnN0IGF1dGhvciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBFZGluYnVyZ2hbMTJdLlwiXSxcIjE3ODE3Mzg5OVwiOltcIkJlY2F1c2Ugb2YgYSBjb250aW51ZWQgZGVzaXJlIGFtb25nIGluZGl2aWR1YWxzIHRvIHByb3RlY3QgdGhlIHByaXZhY3kgb2YgdGhlaXIgYXV0aG9yc2hpcCBvciByZWFkZXJzaGlwIG9mIHZhcmlvdXMgdHlwZXMgb2Ygc2Vuc2l0aXZlIGluZm9ybWF0aW9uWzI4XSwgYW5kIHRoZSB1bmRlc2lyYWJpbGl0eSBvZiBjZW50cmFsIHBvaW50cyBvZiBmYWlsdXJlIHdoaWNoIGNhbiBiZSBhdHRhY2tlZCBieSBvcHBvbmVudHMgd2lzaGluZyB0byByZW1vdmUgZGF0YSBmcm9tIHRoZSBzeXN0ZW1bMTEsMjddIG9yIHNpbXBseSBvdmVybG9hZGVkIGJ5IHRvbyBtdWNoIGludGVyZXN0WzFdLCBzeXN0ZW1zIG9mZmVyaW5nIGdyZWF0ZXIgc2VjdXJpdHkgYW5kIHJlbGlhYmlsaXR5IGFyZSBuZWVkZWQuXCJdLFwiMTU2MjE5OTk2MlwiOltcIkFub255bW91cyBwb2ludC10by1wb2ludCBjaGFubmVscyBiYXNlZCBvbiBDaGF1beKAmXMgbWl4LW5ldCBzY2hlbWVbOF0gaGF2ZSBiZWVuIGltcGxlbWVudGVkIGZvciBlbWFpbCBieSB0aGUgTWl4bWFzdGVyIHJlbWFpbGVyWzEzXSBhbmQgZm9yIGdlbmVyYWwgVENQL0lQIHRyYWZmaWMgYnkgb25pb24gcm91dGluZ1sxOV0gYW5kIEZyZWVkb21bMzJdLlwiXSxcIjE1Njg4OTMzOTJcIjpbXCJUaGUgc2NhbGFiaWxpdHkgYW5kIGZhdWx0LXRvbGVyYW5jZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgRnJlZW5ldCBjYW4gYmUgZXhwbGFpbmVkIGluIHRlcm1zIG9mIGEgc21hbGwtd29ybGQgbmV0d29yayBtb2RlbFsyMywgMzEsIDIyLCAzXS5cIl0sXCIxNTczNTc5MzI5XCI6W1wiVGhlIHNjYWxhYmlsaXR5IGFuZCBmYXVsdC10b2xlcmFuY2UgY2hhcmFjdGVyaXN0aWNzIG9mIEZyZWVuZXQgY2FuIGJlIGV4cGxhaW5lZCBpbiB0ZXJtcyBvZiBhIHNtYWxsLXdvcmxkIG5ldHdvcmsgbW9kZWxbMjMsMzEsMjIsM10uXCIsXCJTbWFsbC13b3JsZCBuZXR3b3JrcyBwZXJtaXQgZWZmaWNpZW50IHNob3J0IHBhdGhzIGJldHdlZW4gYXJiaXRyYXJ5IHBvaW50cyBiZWNhdXNlIG9mIHRoZSBzaG9ydGN1dHMgcHJvdmlkZWQgYnkgdGhlIHdlbGwtY29ubmVjdGVkIG5vZGVzLCBhcyBldmlkZW5jZWQgYnkgZXhhbWluYXRpb24gb2YgTWlsZ3JhbeKAmXMgbGV0dGVyLXBhc3NpbmcgZXhwZXJpbWVudFsyM10gYW5kIHRoZSBFcmTDtnMgbnVtYmVyIGdhbWUgY2l0ZWQgYnkgV2F0dHMgYW5kIFN0cm9nYXR6WzMxXS5cIl0sXCIxNjQzNDEyOTcxXCI6W1wiVGhlIHNjYWxhYmlsaXR5IGFuZCBmYXVsdC10b2xlcmFuY2UgY2hhcmFjdGVyaXN0aWNzIG9mIEZyZWVuZXQgY2FuIGJlIGV4cGxhaW5lZCBpbiB0ZXJtcyBvZiBhIHNtYWxsLXdvcmxkIG5ldHdvcmsgbW9kZWxbMjMsMzEsMjIsM10uXCJdLFwiMTk3MzI2NDA1M1wiOltcIlRBWlsxOF0gZXh0ZW5kcyB0aGlzIGlkZWEgYnkgdXNpbmcgY2hhaW5zIG9mIG5lc3RlZCBlbmNyeXB0ZWQgVVJMcyB0aGF0IHN1Y2Nlc3NpdmVseSBwb2ludCB0byBkaWZmZXJlbnQgcmV3ZWJiZXIgc2VydmVycyB0byBiZSBjb250YWN0ZWQsIGFsdGhvdWdoIHRoaXMgaXMgdnVsbmVyYWJsZSB0byB0cmFmZmljIGFuYWx5c2lzIHVzaW5nIHJlcGxheS5cIl0sXCIyMDA5MTcyODE1XCI6W1wiVGhlIGNsb3Nlc3Qgd29yayB0byBvdXIgb3duIGlzIFJlaXRlciBhbmQgUnViaW7igJlzIENyb3dkcyBzeXN0ZW1bMjVdLCB3aGljaCB1c2VzIGEgc2ltaWxhciBtZXRob2Qgb2YgcHJveHlpbmcgcmVxdWVzdHMgZm9yIGNvbnN1bWVycywgYWx0aG91Z2ggQ3Jvd2RzIGRvZXMgbm90IGl0c2VsZiBzdG9yZSBpbmZvcm1hdGlvbiBhbmQgZG9lcyBub3QgcHJvdGVjdCBpbmZvcm1hdGlvbiBwcm9kdWNlcnMuXCIsXCJSZWl0ZXIgYW5kIFJ1YmluWzI1XSBwcmVzZW50IGEgdXNlZnVsIHRheG9ub215IG9mIGFub255bW91cyBjb21tdW5pY2F0aW9uIHByb3BlcnRpZXMgb24gdGhyZWUgYXhlcy5cIixcIlsyNV0gZGVzY3JpYmVzIGEgcHJvYmFiaWxpc3RpYyBhdHRhY2sgd2hpY2ggbWlnaHQgY29tcHJvbWlzZSBzZW5kZXIgYW5vbnltaXR5LCB1c2luZyBhIHN0YXRpc3RpY2FsIGFuYWx5c2lzIG9mIHRoZSBwcm9iYWJpbGl0eSB0aGF0IGEgcmVxdWVzdCBhcnJpdmluZyBhdCBhIG5vZGUgYSBpcyBmb3J3YXJkZWQgb24gb3IgaGFuZGxlZCBkaXJlY3RseSwgYW5kIHRoZSBwcm9iYWJpbGl0eSB0aGF0IGEgY2hvb3NlcyBhIHBhcnRpY3VsYXIgbm9kZSBiIHRvIGZvcndhcmQgdG8uXCJdLFwiMjA2NDM2MDU0M1wiOltcIkludGVybWVtb3J5WzldIGFuZCBJbmRpYVsxNl0gYXJlIGNvb3BlcmF0aXZlIGRpc3RyaWJ1dGVkIGZpbGVzZXJ2ZXIgc3lzdGVtcyBpbnRlbmRlZCBmb3IgbG9uZy10ZXJtIGFyY2hpdmFsIHN0b3JhZ2UgYWxvbmcgdGhlIGxpbmVzIG9mIEV0ZXJuaXR5LCBpbiB3aGljaCBmaWxlcyBhcmUgc3BsaXQgaW50byByZWR1bmRhbnQgc2hhcmVzIGFuZCBkaXN0cmlidXRlZCBhbW9uZyBtYW55IHBhcnRpY2lwYW50cy5cIl0sXCIyMTAzNjQ3NjI4XCI6W1wiQW5vbnltb3VzIHBvaW50LXRvLXBvaW50IGNoYW5uZWxzIGJhc2VkIG9uIENoYXVt4oCZcyBtaXgtbmV0IHNjaGVtZVs4XSBoYXZlIGJlZW4gaW1wbGVtZW50ZWQgZm9yIGVtYWlsIGJ5IHRoZSBNaXhtYXN0ZXIgcmVtYWlsZXJbMTNdIGFuZCBmb3IgZ2VuZXJhbCBUQ1AvSVAgdHJhZmZpYyBieSBvbmlvbiByb3V0aW5nWzE5XSBhbmQgRnJlZWRvbVszMl0uXCJdLFwiMjE2MzU5ODY5MFwiOltcIlB1YmxpdXNbMzBdIGVuaGFuY2VzIGF2YWlsYWJpbGl0eSBieSBkaXN0cmlidXRpbmcgZmlsZXMgYXMgcmVkdW5kYW50IHNoYXJlcyBhbW9uZyBuIHdlYnNlcnZlcnMsIG9ubHkgayBvZiB3aGljaCBhcmUgbmVlZGVkIHRvIHJlY29uc3RydWN0IGEgZmlsZTsgaG93ZXZlciwgc2luY2UgdGhlIGlkZW50aXR5IG9mIHRoZSBzZXJ2ZXJzIHRoZW1zZWx2ZXMgaXMgbm90IGFub255bWl6ZWQsIGFuIGF0dGFja2VyIG1pZ2h0IHJlbW92ZSBpbmZvcm1hdGlvbiBieSBmb3JjaW5nIHRoZSBjbG9zdXJlIG9mIG7igJNrKzEgc2VydmVycy5cIl19LFwiUFJcIjpbMjExODQyODE5MywyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMjE1ODA0OTgyMSwyMTA0MjEwODk0LDE2NTA2NzU1MDksMjE1MDY3NjU4NiwyMTE5MjQ1MTA2LDIxMjM4MjA4MjAsMjAwNzIxOTMwNCwyMTAzNjQ3NjI4LDE2NTU5NTgzOTEsMTU4MDAwNDQ0MCwxOTc4ODg0NzU1LDIxMjM0ODI0NjIsMjA1NjM2MzM1MywyMDAwODc2MDIzLDIxNjM1OTg2OTAsMTUyMDkxNDk0MywyMzk5NjQyMDksMjExODQyODE5MywyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMjE1ODA0OTgyMSwyMTA0MjEwODk0LDE2NTA2NzU1MDksMjE1MDY3NjU4NiwyMTE5MjQ1MTA2LDIxMjM4MjA4MjAsMjAwNzIxOTMwNCwyMTAzNjQ3NjI4LDE2NTU5NTgzOTEsMTU4MDAwNDQ0MCwxOTc4ODg0NzU1LDIxMjM0ODI0NjIsMjA1NjM2MzM1MywyMDAwODc2MDIzLDIxNjM1OTg2OTAsMTUyMDkxNDk0MywyMzk5NjQyMDldLFwiQU5GXCI6W3tcIkZOXCI6XCJJYW5cIixcIkxOXCI6XCJDbGFya2VcIixcIlNcIjoxfSx7XCJGTlwiOlwiT3NrYXJcIixcIkxOXCI6XCJTYW5kYmVyZ1wiLFwiU1wiOjJ9LHtcIkZOXCI6XCJCcmFuZG9uXCIsXCJMTlwiOlwiV2lsZXlcIixcIlNcIjozfSx7XCJGTlwiOlwiVGhlb2RvcmUgVy5cIixcIkxOXCI6XCJIb25nXCIsXCJTXCI6NH1dLFwiQlZcIjpcInByaXZhY3kgZW5oYW5jaW5nIHRlY2hub2xvZ2llc1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJTcHJpbmdlclwifSJ9LHsibG9ncHJvYiI6LTE1Ljk0LCJrZXNFbnRpdHlJZCI6MTA1Mzk0NywiSWQiOjIxNjQxOTI3MjIsIlRpIjoiYSBzY2FsYWJsZSBsb2NhdGlvbiBzZXJ2aWNlIGZvciBnZW9ncmFwaGljIGFkIGhvYyByb3V0aW5nIiwiWSI6MjAwMCwiRCI6IjIwMDAtMDgtMDEiLCJDQyI6MjIzMywiUklkIjpbMjA5OTU3NDQ4MiwyMTMyOTMyNjI1LDIxMDE5NjMyNjIsMjAzMDgyNDU4NCwyMTI0NjUxMzk5LDE0OTIxODY2MTcsMjEzNTAzNTE3MywyMTE5NzEwNjA1LDIxNTY2ODkxODEsMjA4MDk3OTAxOCwyMDIwNzY1NjUyLDIwOTUyMDY3NzQsMTUxMDI1NDcyOSwyMDQ0OTU5NzI1LDIxNjk3NDYyMzcsMjE1NTQyNzE0MywxOTkzMjQ4NjEzLDE1MTg3ODAwMTIsMjAzMDcyODY5LDk4MjUzNDg4XSwiQUEiOlt7IkF1TiI6ImppbnlhbmcgbGkifSx7IkF1TiI6ImpvaG4gamFubm90dGkifSx7IkF1TiI6ImRvdWdsYXMgcyBqIGRlIGNvdXRvIn0seyJBdU4iOiJkYXZpZCByIGthcmdlciJ9LHsiQXVOIjoicm9iZXJ0IHRhcHBhbiBtb3JyaXMifV0sIkYiOlt7IkZOIjoibG9jYXRpb24gYmFzZWQgcm91dGluZyJ9LHsiRk4iOiJnZW9ncmFwaGljIHJvdXRpbmcifSx7IkZOIjoib3B0aW1pemVkIGxpbmsgc3RhdGUgcm91dGluZyBwcm90b2NvbCJ9LHsiRk4iOiJkeW5hbWljIHNvdXJjZSByb3V0aW5nIn0seyJGTiI6Im5ldHdvcmsgcGFja2V0In0seyJGTiI6InNlcnZlciJ9LHsiRk4iOiJzY2FsYWJpbGl0eSJ9LHsiRk4iOiJjZWxsdWxhciBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIG5ldHdvcmsifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiQSBzY2FsYWJsZSBsb2NhdGlvbiBzZXJ2aWNlIGZvciBnZW9ncmFwaGljIGFkIGhvYyByb3V0aW5nXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MjE2LFwiSW52ZXJ0ZWRJbmRleFwiOntcIkdMU1wiOlswLDEyLDM4LDE0MywxNTMsMTc5LDE5Ml0sXCJpc1wiOlsxLDM5LDE4MF0sXCJhXCI6WzIsMjgsNTcsODcsOTQsMTAwLDExNSwxNjJdLFwibmV3XCI6WzNdLFwiZGlzdHJpYnV0ZWRcIjpbNF0sXCJsb2NhdGlvblwiOls1LDY0LDc4LDEwMywxMTZdLFwic2VydmljZVwiOls2XSxcIndoaWNoXCI6WzddLFwidHJhY2tzXCI6WzhdLFwibW9iaWxlXCI6WzksMjMsNDUsNTMsMTAxLDEzM10sXCJub2RlXCI6WzEwLDU0LDcxLDkxLDE1NSwxODVdLFwibG9jYXRpb25zLlwiOlsxMV0sXCJjb21iaW5lZFwiOlsxMywxOTBdLFwid2l0aFwiOlsxNCwzNSw2NiwxNDYsMTkxLDE5NV0sXCJnZW9ncmFwaGljXCI6WzE1LDk2LDE4OF0sXCJmb3J3YXJkaW5nXCI6WzE2LDE4OV0sXCJhbGxvd3NcIjpbMTddLFwidGhlXCI6WzE4LDQ0LDEwNiwxMjQsMTM3LDE0NywxNTBdLFwiY29uc3RydWN0aW9uXCI6WzE5XSxcIm9mXCI6WzIwLDMxLDYwLDkwLDE0MiwxNDksMTc4XSxcImFkXCI6WzIxXSxcImhvY1wiOlsyMl0sXCJuZXR3b3Jrc1wiOlsyNCwyMDJdLFwidGhhdFwiOlsyNSwxMTksMTM2XSxcInNjYWxlXCI6WzI2XSxcInRvXCI6WzI3LDc2LDExMywxMzEsMTg0XSxcImxhcmdlclwiOlsyOSwyMDFdLFwibnVtYmVyXCI6WzMwXSxcIm5vZGVzXCI6WzMyLDQ2LDYyLDEzNCwxNzFdLFwidGhhblwiOlszM10sXCJwb3NzaWJsZVwiOlszNF0sXCJwcmV2aW91c1wiOlszNl0sXCJ3b3JrLlwiOlszN10sXCJkZWNlbnRyYWxpemVkXCI6WzQwXSxcImFuZFwiOls0MSw5MywxMTAsMTM5LDE2NSwxNzNdLFwicnVuc1wiOls0Ml0sXCJvblwiOls0M10sXCJ0aGVtc2VsdmVzLFwiOls0N10sXCJyZXF1aXJpbmdcIjpbNDhdLFwibm9cIjpbNDldLFwiZml4ZWRcIjpbNTBdLFwiaW5mcmFzdHJ1Y3R1cmUuXCI6WzUxXSxcIkVhY2hcIjpbNTJdLFwicGVyaW9kaWNhbGx5XCI6WzU1XSxcInVwZGF0ZXNcIjpbNTYsNzVdLFwic21hbGxcIjpbNThdLFwic2V0XCI6WzU5XSxcIm90aGVyXCI6WzYxXSxcIihpdHNcIjpbNjNdLFwic2VydmVycylcIjpbNjVdLFwiaXRzXCI6WzY3LDczLDc3XSxcImN1cnJlbnRcIjpbNjhdLFwibG9jYXRpb24uXCI6WzY5XSxcIkFcIjpbNzBdLFwic2VuZHNcIjpbNzJdLFwicG9zaXRpb25cIjpbNzRdLFwic2VydmVyc1wiOls3OV0sXCJ3aXRob3V0XCI6WzgwXSxcImtub3dpbmdcIjpbODFdLFwidGhlaXJcIjpbODJdLFwiYWN0dWFsXCI6WzgzXSxcImlkZW50aXRpZXMsXCI6Wzg0XSxcImFzc2lzdGVkXCI6Wzg1XSxcImJ5XCI6Wzg2XSxcInByZWRlZmluZWRcIjpbODgsOTUsMTA3XSxcIm9yZGVyaW5nXCI6Wzg5LDEwOV0sXCJpZGVudGlmaWVyc1wiOls5Ml0sXCJoaWVyYXJjaHkuXCI6Wzk3XSxcIlF1ZXJpZXNcIjpbOThdLFwiZm9yXCI6Wzk5LDExOCwxMjldLFwibm9kZSdzXCI6WzEwMl0sXCJhbHNvXCI6WzEwNCwxODFdLFwidXNlXCI6WzEwNV0sXCJpZGVudGlmaWVyXCI6WzEwOF0sXCJzcGF0aWFsXCI6WzExMV0sXCJoaWVyYXJjaHlcIjpbMTEyXSxcImZpbmRcIjpbMTE0XSxcInNlcnZlclwiOlsxMTddLFwibm9kZS5cIjpbMTIwXSxcIkV4cGVyaW1lbnRzXCI6WzEyMl0sXCJ1c2luZ1wiOlsxMjNdLFwibnNcIjpbMTI2XSxcInNpbXVsYXRvclwiOlsxMjhdLFwidXBcIjpbMTMwXSxcIjYwMFwiOlsxMzJdLFwic2hvd1wiOlsxMzVdLFwic3RvcmFnZVwiOlsxMzhdLFwiYmFuZHdpZHRoXCI6WzE0MF0sXCJyZXF1aXJlbWVudHNcIjpbMTQxXSxcImdyb3dcIjpbMTQ0XSxcInNsb3dseVwiOlsxNDVdLFwic2l6ZVwiOlsxNDhdLFwibmV0d29yay5cIjpbMTUxXSxcIkZ1cnRoZXJtb3JlLFwiOlsxNTJdLFwidG9sZXJhdGVzXCI6WzE1NF0sXCJmYWlsdXJlc1wiOlsxNTZdLFwid2VsbDpcIjpbMTU3XSxcImVhY2hcIjpbMTU4XSxcImZhaWx1cmVcIjpbMTU5XSxcImhhc1wiOlsxNjBdLFwib25seVwiOlsxNjFdLFwibGltaXRlZFwiOlsxNjNdLFwiZWZmZWN0XCI6WzE2NF0sXCJxdWVyeVwiOlsxNjYsMTc2XSxcInBlcmZvcm1hbmNlXCI6WzE2NywxNzddLFwiZGVncmFkZXNcIjpbMTY4XSxcImdyYWNlZnVsbHlcIjpbMTY5XSxcImFzXCI6WzE3MF0sXCJmYWlsXCI6WzE3Ml0sXCJyZXN0YXJ0LlwiOlsxNzRdLFwiVGhlXCI6WzE3NV0sXCJyZWxhdGl2ZWx5XCI6WzE4Ml0sXCJpbnNlbnNpdGl2ZVwiOlsxODNdLFwic3BlZWRzLlwiOlsxODZdLFwiU2ltcGxlXCI6WzE4N10sXCJjb21wYXJlc1wiOlsxOTNdLFwiZmF2b3JhYmx5XCI6WzE5NF0sXCJEeW5hbWljXCI6WzE5Nl0sXCJTb3VyY2VcIjpbMTk3XSxcIlJvdXRpbmdcIjpbMTk4XSxcIihEU1IpOlwiOlsxOTldLFwiaW5cIjpbMjAwXSxcIihvdmVyXCI6WzIwM10sXCIyMDBcIjpbMjA0XSxcIm5vZGVzKVwiOlsyMDVdLFwib3VyXCI6WzIwNl0sXCJhcHByb2FjaFwiOlsyMDddLFwiZGVsaXZlcnNcIjpbMjA4XSxcIm1vcmVcIjpbMjA5XSxcInBhY2tldHMsXCI6WzIxMF0sXCJidXRcIjpbMjExXSxcImNvbnN1bWVzXCI6WzIxMl0sXCJmZXdlclwiOlsyMTNdLFwibmV0d29ya1wiOlsyMTRdLFwicmVzb3VyY2VzLlwiOlsyMTVdfX0sXCJTXCI6W3tcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9saXN0LmNzLmJyb3duLmVkdS9wZW9wbGUvamovcGFwZXJzL2dyaWQtbW9iaWNvbTAwLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vcGRvcy5jc2FpbC5taXQuZWR1LyU3RXJ0bS9wYXBlcnMvZ3JpZC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5uZXdzLmNzLm55dS5lZHUvfmppbnlhbmcvcHViL21vYmljb20wMC1nbHMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuYWkubWl0LmVkdS9wcm9qZWN0cy9veHlnZW4vb3h5Z2VuLWJvb2syMDAxL1NlY3Rpb24yLU5ldHdvcmsyMS9OMjEtMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MubXVuLmNhL355emNoZW4vcGFwZXJzL3BhcGVycy9sb2NzZXJ2X3Bvc3JvdXRpbmcvZ2xzX2xpX21vYmljb20wMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2NzLmJyb3duLmVkdS8lN0Vqai9wYXBlcnMvZ3JpZC1tb2JpY29tMDAucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9uZXQucGt1LmVkdS5jbi8lN0Vjb3Vyc2UvY3M1MDEvMjAwNC9yZWFkaW5ncy9ncmlkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vcGRvcy5sY3MubWl0LmVkdS8lN0Vqai9qYW5ub3R0aS5jb20vcGFwZXJzL2dyaWQtbW9iaWNvbTAwLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vZ3JhcGhpY3Muc3RhbmZvcmQuZWR1L2NvdXJzZXMvY3M0MjgtMDMtc3ByaW5nL1BhcGVycy9yZWFkaW5ncy9Mb2NhdGlvbi9tb3JyaXNfZ3JpZF9tb2JpY29tMDAucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuaW5mLmZ1LWJlcmxpbi5kZS9sZWhyZS9XUzExL1dpcmVsZXNzL3BhcGVycy9Nb2JHcmlkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY3Nld2ViLnVjc2QuZWR1L2NsYXNzZXMvc3AwNy9jc2UyOTEtZC9wcmVzZW50YXRpb25zL2ZhcnJpbmd0b24ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY29tcC5udXMuZWR1LnNnL35ibGVvbmcvZ2VvZ3JhcGhpYy9yZWxhdGVkL2xpMDBncmlkLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJscC51bmktdHJpZXIuZGUvZGIvY29uZi9tb2JpY29tL21vYmljb20yMDAwLmh0bWwjTGlKQ0tNMDBcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kc3BhY2UubWl0LmVkdS9oYW5kbGUvMTcyMS4xLzM4ODU5XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cuY3NlLnd1c3RsLmVkdS9+bHUvY3NlNTIxcy9QYXBlcnMvZ2xzLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5hY20ub3JnLzEwLjExNDUvMzQ1OTEwLjM0NTkzMVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGNnLmV0aHouY2gvbGVjdHVyZXMvd3MwNDA1L3NlbWluYXIvcGFwZXJzL2xvY2F0aW9uc2VydmljZS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9kb2lkPTM0NTkxMC4zNDU5MzFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2Rpc2NvLmV0aHouY2gvbGVjdHVyZXMvd3MwNDA1L3NlbWluYXIvcGFwZXJzL2xvY2F0aW9uc2VydmljZS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3dlYmVlLnRlY2huaW9uLmFjLmlsL2NvdXJzZXMvMDQ4ODQ2LWludGVsLzEzX1NjYWxhYmxlJTIwTG9jYXRpb24ucGRmXCJ9XSxcIlZGTlwiOlwiQUNNL0lFRUUgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIE1vYmlsZSBDb21wdXRpbmcgYW5kIE5ldHdvcmtpbmdcIixcIlZTTlwiOlwiTU9CSUNPTVwiLFwiRlBcIjoxMjAsXCJMUFwiOjEzMCxcIkRPSVwiOlwiMTAuMTE0NS8zNDU5MTAuMzQ1OTMxXCIsXCJDQ1wiOntcIjk4MjUzNDg4XCI6W1wiVGhlIExhbmRtYXJrIHN5c3RlbSBbMTgsIDE5XSBhY3RpdmVseSBtYWludGFpbnMgYSBoaWVyYXJjaHkgdG8gcHJvdmlkZSByb3V0aW5nIGluIGEgY2hhbmdpbmcgbmV0d29yay5cIl0sXCIxNTEwMjU0NzI5XCI6W1wiV2UgcHJlc2VudCBhIHNpbXBsZSBldmFsdWF0aW9uIG9mIHRoZSBlZmZlY3RzIG9mIG5vZGUgZGVuc2l0eSB1c2luZyB0aGUgbnMgWyA2IF0gbmV0d29yayBzaW11bGF0b3IuXFx1MDAxYlRoZSBzaW11bGF0aW9ucyB1c2UgQ01VJ3Mgd2lyZWxlc3MgZXh0ZW5zaW9ucyBbOF0gZm9yIHRoZSBucyBbIDYgXSBzaW11bGF0b3IuXCJdLFwiMTUxODc4MDAxMlwiOltcIkZpbm7igJlzIENhcnRlc2lhbiByb3V0aW5nIFs4XSBhZGRyZXNzZXMgZWFjaCBub2RlIHdpdGggYSBnZW9ncmFwaGljIGxvY2F0aW9uIGFzIHdlbGwgYXMgYSB1bmlxdWUgaWRlbnRpZmllci5cIixcIldlIHVzZSBhIHNpbXBsZSBzY2hlbWUgZm9yIGdlb2dyYXBoaWMgZm9yd2FyZGluZyB0aGF0IGlzIHNpbWlsYXIgdG8gQ2FydGVzaWFuIHJvdXRpbmcgWzhdLlwiXSxcIjE5OTMyNDg2MTNcIjpbXCJUaGUgTGFuZG1hcmsgc3lzdGVtIFsxOCwgMTldIGFjdGl2ZWx5IG1haW50YWlucyBhIGhpZXJhcmNoeSB0byBwcm92aWRlIHJvdXRpbmcgaW4gYSBjaGFuZ2luZyBuZXR3b3JrLlwiXSxcIjIwMjA3NjU2NTJcIjpbXCJPdXIgYXBwcm9hY2ggZHJhd3MgaXRzIGludHVpdGlvbiBmcm9tIENvbnNpc3RlbnQgSGFzaGluZywgYSB0ZWNobmlxdWUgZGV2ZWxvcGVkIHRvIHN1cHBvcnQgaGllcmFyY2hpY2FsIGNhY2hpbmcgb2Ygd2ViIHBhZ2VzIFsxMV0uXCJdLFwiMjA4MDk3OTAxOFwiOltcIk1vcmUgcmVjZW50IHdvcmsgb24gZ2VvZ3JhcGhpYyBhcHByb2FjaGVzIHRvIHJvdXRpbmcgaW5jbHVkZXMgdGhlIERSRUFNIFsyXSBhbmQgTEFSIFsxM10gc3lzdGVtcy5cIl0sXCIyMDk1MjA2Nzc0XCI6W1wiWzldIGVhY2ggcHJvdmlkZSBvdmVydmlld3Mgb2YgdGhlc2UgYWQgaG9jIHJvdXRpbmcgdGVjaG5pcXVlcywgYWxvbmcgd2l0aCBjb21wYXJhdGl2ZSBtZWFzdXJlbWVudHMgdXNpbmcgc21hbGwgKDMw4oCTNTAgbm9kZSkgc2ltdWxhdGlvbnMuXCJdLFwiMjEwMTk2MzI2MlwiOltcIkthcnAgYW5kIEt1bmcgcHJvcG9zZSBHUFNSIFsxM10sIGEgZ2VvZ3JhcGhpYyByb3V0aW5nIHN5c3RlbSB0aGF0IHVzZXMgYSBwbGFuYXIgc3ViZ3JhcGggb2YgdGhlIHdpcmVsZXNzIG5ldHdvcmvigJlzIGdyYXBoIHRvIHJvdXRlIGFyb3VuZCBob2xlcy5cIl0sXCIyMTE5NzEwNjA1XCI6W1wiTW9yZSByZWNlbnQgd29yayBvbiBnZW9ncmFwaGljIGFwcHJvYWNoZXMgdG8gcm91dGluZyBpbmNsdWRlcyB0aGUgRFJFQU0gWzJdIGFuZCBMQVIgWzEzXSBzeXN0ZW1zLlwiXSxcIjIxMjQ2NTEzOTlcIjpbXCJTb21lLCBzdWNoIGFzIERTRFYgWzE2XSwgYXJlIHByb2FjdGl2ZTsgdGhleSBjb250aW51b3VzbHkgbWFpbnRhaW4gcm91dGUgZW50cmllcyBmb3IgYWxsIGRlc3RpbmF0aW9ucy5cIl0sXCIyMTMyOTMyNjI1XCI6W1wiWzRdIGFuZCBKb2hhbnNzb24gZXQgYWwuXCIsXCJFYWNoIG5vZGUgbW92ZXMgdXNpbmcgYSDigJxyYW5kb20gd2F5cG9pbnTigJ0gbW9kZWwgWzRdLlwiXSxcIjIxMzUwMzUxNzNcIjpbXCJUaGlzIGluY2x1ZGVzIHN5c3RlbXMgc3VjaCBhcyBEU1IgWzExXSwgQU9EViBbMTZdLCBhbmQgVE9SQVsxNV0uXCJdLFwiMjE1NTQyNzE0M1wiOltcIk1NV00gWyAxOCBdIG9yZ2FuaXplcyBub2RlcyBpbnRvIGEgaGllcmFyY2h5IG9mIGNsdXN0ZXJzIGFuZCBkaXN0cmlidXRlcyBsaW5rIHN0YXRlXCJdLFwiMjE2OTc0NjIzN1wiOltcIlRoaXMgaW5jbHVkZXMgc3lzdGVtcyBzdWNoIGFzIERTUiBbMTFdLCBBT0RWIFsxNl0sIGFuZCBUT1JBWzE1XS5cIixcIkZvciBwdXJwb3NlcyBvZiBjb21wYXJpc29uIHdlIGluY2x1ZGUgcmVzdWx0cyBmb3IgdGhlIERTUiBbMTFdIHByb3RvY29sLlwiXX0sXCJQUlwiOlsyMTAxOTYzMjYyLDIwODA5NzkwMTgsMjExOTcxMDYwNSwyMTU3NDU3NDA0LDIwOTk1NzQ0ODIsMjE1NjY4OTE4MSwyMTI0NjUxMzk5LDIxNjQ0NzAwMjAsMjEzMjkzMjYyNSwyMTAyMjU4NTQzLDE1NTA0NDQxMjUsMjEzNTAzNTE3MywyMTQ4MjUxNjQ0LDIxNjY2MTcyMjcsMjEzMzc5NDIxNSwyMTQ4NTY1NzA2LDIwODU0NjM3ODAsMjExOTM2MjU1NSwxNTE4NzgwMDEyLDIxMjE0ODA3MjUsMjEwMTk2MzI2MiwyMDgwOTc5MDE4LDIxMTk3MTA2MDUsMjE1NzQ1NzQwNCwyMDk5NTc0NDgyLDIxNTY2ODkxODEsMjEyNDY1MTM5OSwyMTY0NDcwMDIwLDIxMzI5MzI2MjUsMjEwMjI1ODU0MywxNTUwNDQ0MTI1LDIxMzUwMzUxNzMsMjE0ODI1MTY0NCwyMTY2NjE3MjI3LDIxMzM3OTQyMTUsMjE0ODU2NTcwNiwyMDg1NDYzNzgwLDIxMTkzNjI1NTUsMTUxODc4MDAxMiwyMTIxNDgwNzI1XSxcIkFORlwiOlt7XCJGTlwiOlwiSmlueWFuZ1wiLFwiTE5cIjpcIkxpXCIsXCJTXCI6MX0se1wiRk5cIjpcIkpvaG5cIixcIkxOXCI6XCJKYW5ub3R0aVwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJEb3VnbGFzIFMuIEouIERlXCIsXCJMTlwiOlwiQ291dG9cIixcIlNcIjozfSx7XCJGTlwiOlwiRGF2aWQgUi5cIixcIkxOXCI6XCJLYXJnZXJcIixcIlNcIjo0fSx7XCJGTlwiOlwiUm9iZXJ0IFRhcHBhblwiLFwiTE5cIjpcIk1vcnJpc1wiLFwiU1wiOjV9XSxcIkJWXCI6XCJQcm9jZWVkaW5ncyBvZiB0aGUgNnRoIGFubnVhbCBpbnRlcm5hdGlvbmFsIGNvbmZlcmVuY2Ugb24gTW9iaWxlIGNvbXB1dGluZyBhbmQgbmV0d29ya2luZ1wiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNi4wMzgsImtlc0VudGl0eUlkIjoxMTYwNTI3LCJJZCI6MjE0NDU1MzA3OCwiVGkiOiJyZXNpbGllbnQgb3ZlcmxheSBuZXR3b3JrcyIsIlkiOjIwMDEsIkQiOiIyMDAxLTEwLTIxIiwiQ0MiOjI4MDMsIlJJZCI6WzIxMjM3MzIzODUsMjEyNDQ3ODY3OCwxNTEzNzEwNDAyLDIxNjMwOTMxMDcsMjE0NTcyMTQ3OSwyMTU3OTE4NjE3LDIxMzgzODEzMzgsMjA5NjA3NzM5NywyMTIyODg5NTQ4LDE1NDA2NDEwODIsMjEyNzI4MDM0MCwyMTA3ODk5MDI4LDIxNjA5OTI5OTEsMjAzNjczMjU5OCwyMTE4MTcyNDI2LDIxMTM4NzI2ODEsNzQ0NDk0NzMsMTYwMzQyMTY2MywyMTQ5NDYyNDgzLDE5NzQ5NjU1OTQsMTU2ODIyMDk5OSwxNjUxNzIwNTQ4LDIxNjk4MDY4MDQsMTQ4MjU0NTczMSwyMTU4Mjg4NzA0LDE3ODk1NjQ0MDUsMTMyNzQyMzUwLDE5ODU3OTU0ODksMjEwMTAzMTA2MCwyMTE1MTY0MDc1LDE4MDgyMjQ5MDIsMTQ5MDY5OTQ5NCwyMDY0NjIzNDcxLDIwMjE2ODg2MDYsMTU5MzkxNzI2NywyMTE0ODQxMTU4LDIxNzI0MDg2NzcsMjA5NjcwNDA5NiwyMTUwODk2NTc5LDIxMzg1ODEwNTksMjEyOTcxNjE5MSwxMzkwMTM2ODcsNjU4MDM0MTAsMTk1NjYwNTAyMyw1OTg4MzkwNywxMTMzNzYwNDAsMTY2NjUwMjg0MiwxNzkwODc1ODIxXSwiQUEiOlt7IkF1TiI6ImRhdmlkIGcgYW5kZXJzZW4ifSx7IkF1TiI6ImhhcmkgYmFsYWtyaXNobmFuIn0seyJBdU4iOiJtIGZyYW5zIGthYXNob2VrIn0seyJBdU4iOiJyb2JlcnQgdGFwcGFuIG1vcnJpcyJ9XSwiRiI6W3siRk4iOiJrZXkgYmFzZWQgcm91dGluZyJ9LHsiRk4iOiJ0cmFuc21pc3Npb24gY29udHJvbCBwcm90b2NvbCJ9LHsiRk4iOiJpcCBmb3J3YXJkaW5nIn0seyJGTiI6Im5ldHdvcmsgcGFja2V0In0seyJGTiI6Im92ZXJsYXkgbmV0d29yayJ9LHsiRk4iOiJyb3V0aW5nIHByb3RvY29sIn0seyJGTiI6ImFyY2hpdGVjdHVyZSJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJyZWFsIHRpbWUgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiUmVzaWxpZW50IG92ZXJsYXkgbmV0d29ya3NcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoyNzYsXCJJbnZlcnRlZEluZGV4XCI6e1wiQVwiOlswLDQyXSxcIlJlc2lsaWVudFwiOlsxXSxcIk92ZXJsYXlcIjpbMl0sXCJOZXR3b3JrXCI6WzNdLFwiKFJPTilcIjpbNF0sXCJpc1wiOls1LDQ0LDIzOF0sXCJhblwiOls2LDQ1XSxcImFyY2hpdGVjdHVyZVwiOls3XSxcInRoYXRcIjpbOCwzNCwxNzAsMjI4XSxcImFsbG93c1wiOls5XSxcImRpc3RyaWJ1dGVkXCI6WzEwXSxcIkludGVybmV0XCI6WzExLDUzLDY2LDgzLDExMF0sXCJhcHBsaWNhdGlvbnNcIjpbMTJdLFwidG9cIjpbMTMsNDAsNzQsNzcsMTUxLDE5MSwyNDBdLFwiZGV0ZWN0XCI6WzE0XSxcImFuZFwiOlsxNSwyMCw2Miw3MCwxNTQsMTc2LDIxNCwyNDMsMjU4XSxcInJlY292ZXJcIjpbMTZdLFwiZnJvbVwiOlsxNyw5NV0sXCJwYXRoXCI6WzE4XSxcIm91dGFnZXNcIjpbMTldLFwicGVyaW9kc1wiOlsyMV0sXCJvZlwiOlsyMiw1MCw2NCw4Nyw5OCwxMDAsMTE0LDE2MCwyMDcsMjE2LDI1NSwyNjMsMjY2LDI3NF0sXCJkZWdyYWRlZFwiOlsyM10sXCJwZXJmb3JtYW5jZVwiOlsyNCwyNDVdLFwid2l0aGluXCI6WzI1XSxcInNldmVyYWxcIjpbMjYsMzhdLFwic2Vjb25kcyxcIjpbMjddLFwiaW1wcm92aW5nXCI6WzI4XSxcIm92ZXJcIjpbMjksODEsMTE5LDEzOCwxNDEsMjY5XSxcInRvZGF5J3NcIjpbMzBdLFwid2lkZS1hcmVhXCI6WzMxXSxcInJvdXRpbmdcIjpbMzIsNTQsOTMsMTQ3LDI3MF0sXCJwcm90b2NvbHNcIjpbMzNdLFwidGFrZVwiOlszNV0sXCJhdFwiOlszNiwxMDUsMTgwLDIzMl0sXCJsZWFzdFwiOlszN10sXCJtaW51dGVzXCI6WzM5XSxcInJlY292ZXIuXCI6WzQxXSxcIlJPTlwiOls0Myw1Nyw4OSwxMDMsMTg4LDIzNl0sXCJhcHBsaWNhdGlvbi1sYXllclwiOls0Nl0sXCJvdmVybGF5XCI6WzQ3XSxcIm9uXCI6WzQ4LDE2N10sXCJ0b3BcIjpbNDldLFwidGhlXCI6WzUxLDYwLDY1LDgyLDEwOSwxMTIsMTQyLDE4NSwxOTMsMjA4LDI1MywyNjEsMjY3LDI3Ml0sXCJleGlzdGluZ1wiOls1Ml0sXCJzdWJzdHJhdGUuXCI6WzU1XSxcIlRoZVwiOls1Nl0sXCJub2Rlc1wiOls1OF0sXCJtb25pdG9yXCI6WzU5XSxcImZ1bmN0aW9uaW5nXCI6WzYxXSxcInF1YWxpdHlcIjpbNjNdLFwicGF0aHNcIjpbNjcsMTgzXSxcImFtb25nXCI6WzY4XSxcInRoZW1zZWx2ZXMsXCI6WzY5XSxcInVzZVwiOls3MV0sXCJ0aGlzXCI6WzcyXSxcImluZm9ybWF0aW9uXCI6WzczXSxcImRlY2lkZVwiOls3NV0sXCJ3aGV0aGVyXCI6Wzc2XSxcInJvdXRlXCI6Wzc4LDE1NV0sXCJwYWNrZXRzXCI6Wzc5LDIzMF0sXCJkaXJlY3RseVwiOls4MF0sXCJvclwiOls4NCwxOTddLFwiYnlcIjpbODUsMjAwLDIyNF0sXCJ3YXlcIjpbODZdLFwib3RoZXJcIjpbODhdLFwibm9kZXMsXCI6WzkwXSxcIm9wdGltaXppbmdcIjpbOTFdLFwiYXBwbGljYXRpb24tc3BlY2lmaWNcIjpbOTJdLFwibWV0cmljcy5SZXN1bHRzXCI6Wzk0XSxcInR3b1wiOls5Nl0sXCJzZXRzXCI6Wzk3XSxcIm1lYXN1cmVtZW50c1wiOls5OV0sXCJhXCI6WzEwMSwxMjAsMTI4XSxcIndvcmtpbmdcIjpbMTAyXSxcImRlcGxveWVkXCI6WzEwNF0sXCJzaXRlc1wiOlsxMDZdLFwic2NhdHRlcmVkXCI6WzEwN10sXCJhY3Jvc3NcIjpbMTA4LDEyN10sXCJkZW1vbnN0cmF0ZVwiOlsxMTEsMjYwXSxcImJlbmVmaXRzXCI6WzExMywyNjJdLFwib3VyXCI6WzExNSwyMTddLFwiYXJjaGl0ZWN0dXJlLlwiOlsxMTZdLFwiRm9yXCI6WzExN10sXCJpbnN0YW5jZSxcIjpbMTE4XSxcIjY0LWhvdXJcIjpbMTIxXSxcInNhbXBsaW5nXCI6WzEyMl0sXCJwZXJpb2RcIjpbMTIzXSxcImluXCI6WzEyNCwxNjIsMTg0LDI0NiwyNTJdLFwiTWFyY2hcIjpbMTI1XSxcIjIwMDFcIjpbMTI2XSxcInR3ZWx2ZS1ub2RlXCI6WzEyOV0sXCJST04sXCI6WzEzMF0sXCJ0aGVyZVwiOlsxMzFdLFwid2VyZVwiOlsxMzJdLFwiMzJcIjpbMTMzXSxcInNpZ25pZmljYW50XCI6WzEzNF0sXCJvdXRhZ2VzLFwiOlsxMzVdLFwiZWFjaFwiOlsxMzZdLFwibGFzdGluZ1wiOlsxMzddLFwidGhpcnR5XCI6WzEzOV0sXCJtaW51dGVzLFwiOlsxNDBdLFwiMTMyXCI6WzE0M10sXCJtZWFzdXJlZFwiOlsxNDRdLFwicGF0aHMuXCI6WzE0NV0sXCJST04nc1wiOlsxNDZdLFwibWVjaGFuaXNtXCI6WzE0OF0sXCJ3YXNcIjpbMTQ5LDE4OV0sXCJhYmxlXCI6WzE1MCwxOTBdLFwiZGV0ZWN0LFwiOlsxNTJdLFwicmVjb3ZlcixcIjpbMTUzXSxcImFyb3VuZFwiOlsxNTZdLFwiYWxsXCI6WzE1OF0sXCJ0aGVtLFwiOlsxNjFdLFwibGVzc1wiOlsxNjNdLFwidGhhblwiOlsxNjRdLFwidHdlbnR5XCI6WzE2NV0sXCJzZWNvbmRzXCI6WzE2Nl0sXCJhdmVyYWdlLFwiOlsxNjhdLFwic2hvd2luZ1wiOlsxNjldLFwiaXRzXCI6WzE3MV0sXCJtZXRob2RzXCI6WzE3Ml0sXCJmb3JcIjpbMTczLDIwM10sXCJmYXVsdFwiOlsxNzQsMjU2XSxcImRldGVjdGlvblwiOlsxNzUsMjU3XSxcInJlY292ZXJ5XCI6WzE3N10sXCJ3b3JrXCI6WzE3OF0sXCJ3ZWxsXCI6WzE3OV0sXCJkaXNjb3ZlcmluZ1wiOlsxODFdLFwiYWx0ZXJuYXRlXCI6WzE4Ml0sXCJJbnRlcm5ldC5cIjpbMTg2XSxcIkZ1cnRoZXJtb3JlLFwiOlsxODddLFwiaW1wcm92ZVwiOlsxOTIsMjQ0XSxcImxvc3NcIjpbMTk0LDIyMV0sXCJyYXRlLFwiOlsxOTVdLFwibGF0ZW5jeSxcIjpbMTk2XSxcInRocm91Z2hwdXRcIjpbMTk4LDIxM10sXCJwZXJjZWl2ZWRcIjpbMTk5XSxcImRhdGFcIjpbMjAxXSxcInRyYW5zZmVycztcIjpbMjAyXSxcImV4YW1wbGUsXCI6WzIwNF0sXCJhYm91dFwiOlsyMDVdLFwiNSVcIjpbMjA2LDIxNV0sXCJ0cmFuc2ZlcnNcIjpbMjA5LDIxOF0sXCJkb3VibGVkXCI6WzIxMF0sXCJ0aGVpclwiOlsyMTEsMjIwXSxcIlRDUFwiOlsyMTJdLFwic2F3XCI6WzIxOV0sXCJwcm9iYWJpbGl0eVwiOlsyMjJdLFwicmVkdWNlZFwiOlsyMjNdLFwiMC4wNS5cIjpbMjI1XSxcIldlXCI6WzIyNl0sXCJmb3VuZFwiOlsyMjddLFwiZm9yd2FyZGluZ1wiOlsyMjldLFwidmlhXCI6WzIzMV0sXCJtb3N0XCI6WzIzMywyNDddLFwib25lXCI6WzIzNF0sXCJpbnRlcm1lZGlhdGVcIjpbMjM1XSxcIm5vZGVcIjpbMjM3XSxcInN1ZmZpY2llbnRcIjpbMjM5XSxcIm92ZXJjb21lXCI6WzI0MV0sXCJmYXVsdHNcIjpbMjQyXSxcImNhc2VzLlwiOlsyNDhdLFwiVGhlc2VcIjpbMjQ5XSxcImltcHJvdmVtZW50cyxcIjpbMjUwXSxcInBhcnRpY3VsYXJseVwiOlsyNTFdLFwiYXJlYVwiOlsyNTRdLFwicmVjb3ZlcnksXCI6WzI1OV0sXCJtb3ZpbmdcIjpbMjY0XSxcInNvbWVcIjpbMjY1XSxcImNvbnRyb2xcIjpbMjY4XSxcImludG9cIjpbMjcxXSxcImhhbmRzXCI6WzI3M10sXCJlbmQtc3lzdGVtcy5cIjpbMjc1XX19LFwiU1wiOlt7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZHNwYWNlLm1pdC5lZHUvYml0c3RyZWFtLzE3MjEuMS84NjY1Ny8yLzQ4OTk1MzYzLU1JVC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5jbXUuZWR1L35kZ2EvcGFwZXJzL2FuZGVyc2VuLW1zLXRoZXNpcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2JucmcuZWVjcy5iZXJrZWxleS5lZHUvfnJhbmR5L0NvdXJzZXMvQ1MyNjguRjA4L3BhcGVycy8yN19yb24tc29zcDIwMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9ubXMubGNzLm1pdC5lZHUvcHVibGljYXRpb25zL2FuZGVyc2VuLW1zLXRoZXNpcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3BiZy5jcy5pbGxpbm9pcy5lZHUvY291cnNlcy9jczU5OGZhMTAvcmVhZGluZ3Mvcm9uLXNvc3AyMDAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbm1zLmNzYWlsLm1pdC5lZHUvdGFsa3Mvc29zcDAxLXJvbi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2VjZWUuY29sb3JhZG8uZWR1L35la2VsbGVyL2NsYXNzZXMvc3ByaW5nMjAxM19hZHZuZXQvcGFwZXJzL2FuZGVyc2VuX3Jvbl9zb3NwMjAwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5kY3MuZ2xhLmFjLnVrL35sZXdpcy9wMTMxLWFuZGVyc2VuLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmFuZ2lvLm5ldC9yZXMvdGFsa3Mvc29zcDAxLXJvbi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3JlcG9zaXRvcnkuY211LmVkdS9jZ2kvdmlld2NvbnRlbnQuY2dpP2FydGljbGU9MTA4MiZjb250ZXh0PWNvbXBzY2lcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy51Y2NzLmVkdS9+Y3M2MjIvcGFwZXJzL3Jvbi1zb3NwMjAwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3Nvc3Aub3JnLzIwMDEvcGFwZXJzL2FuZGVyc2VuLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vanBrYy5mdWRhbi5lZHUuY24vcGljdHVyZS9hcnRpY2xlLzEwMS83Ni85MS84OTVhNDU1ZDRhY2M5YWQyNjU4YmZjMDVmMzA5L2NjMzVjN2ZjLTRjNDYtNGY4Mi1iMmMyLTNlYmJlMzQ0NzM2Zi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5uZXdzLmNzLm55dS5lZHUvfmppbnlhbmcvZmEwNy9wYXBlcnMvcm9uLXNvc3AyMDAxLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJscC51bmktdHJpZXIuZGUvZGIvY29uZi9zb3NwL3Nvc3AyMDAxLmh0bWwjQW5kZXJzZW5CS00wMVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTUwMjA0OFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5hY20ub3JnLzEwLjExNDUvNTAyMDM0LjUwMjA0OFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcmVwb3NpdG9yeS5jbXUuZWR1L2NvbXBzY2kvODMvXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kc3BhY2UubWl0LmVkdS9oYW5kbGUvMTcyMS4xLzg2NjU3XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NTAyMDQ4XCJ9XSxcIlZGTlwiOlwiU3ltcG9zaXVtIG9uIE9wZXJhdGluZyBTeXN0ZW1zIFByaW5jaXBsZXNcIixcIlZTTlwiOlwiU09TUFwiLFwiVlwiOjM1LFwiSVwiOjUsXCJGUFwiOjEzMSxcIkxQXCI6MTQ1LFwiRE9JXCI6XCIxMC4xMTQ1LzUwMjAzNC41MDIwNDhcIixcIkNDXCI6e1wiNTk4ODM5MDdcIjpbXCJPbmUgd2F5IG9mIHRhY2tsaW5nIHRoaXMgd291bGQgYmUgdG8gc2VuZCBwYWlycyBvZiBwcm9iZSBwYWNrZXRzIHRvIGVzdGltYXRlIGFuIHVwcGVyLWJvdW5kIG9uIGxpbmsgYmFuZHdpZHRoLHdoaWxlIGFub3RoZXIgbWlnaHQgYmUgdG8gdXNlIG5vbmludmFzaXZlIHByb2JlcyB0byBwcmVkaWN0IHRocm91Z2hwdXQgWyA4IF0uXCJdLFwiNjU4MDM0MTBcIjpbXCJTZXZlcmFsIEludGVybmV0IG92ZXJsYXlzIGhhdmUgYmVlbiBkZXNpZ25lZCBpbiB0aGUgcGFzdCBmb3IgdmFyaW91cyBwdXJwb3NlcywgaW5jbHVkaW5nIHByb3ZpZGluZyBPU0kgbmV0d29yay1sYXllciBjb25uZWN0aXZpdHkgWzEwXSwgZWFzaW5nIElQIG11bHRpY2FzdCBkZXBsb3ltZW50IHVzaW5nIHRoZSBNQm9uZSBbNl0sIGFuZCBwcm92aWRpbmcgSVB2NiBjb25uZWN0aXZpdHkgdXNpbmcgdGhlIDYtQm9uZSBbIDkgXS5cIl0sXCIxMzkwMTM2ODdcIjpbXCJUaGUgRGV0b3VyIGZyYW1ld29yayBbNSwgMjJdIHdhcyBtb3RpdmF0ZWQgYnkgdGhlIHBvdGVudGlhbCBsb25nLXRlcm0gcGVyZm9ybWFuY2UgYmVuZWZpdHMgb2YgaW5kaXJlY3Qgcm91dGluZyBbMjNdLlwiXSxcIjE0ODI1NDU3MzFcIjpbXCJUaGUgZGF0YWJhc2UgaXMgYSBnZW5lcmFsaXphdGlvbiBvZiBTUEFORCBbMjRdLCBzdXBwb3J0aW5nIGRpZmZlcmVudCBkYXRhIHR5cGVzIGFuZCBzdW1tYXJpemF0aW9uIG1lY2hhbmlzbXMuXCJdLFwiMTQ5MDY5OTQ5NFwiOltcIlRoZSBEZXRvdXIgZnJhbWV3b3JrIFs1LCAyMl0gd2FzIG1vdGl2YXRlZCBieSB0aGUgcG90ZW50aWFsIGxvbmctdGVybSBwZXJmb3JtYW5jZSBiZW5lZml0cyBvZiBpbmRpcmVjdCByb3V0aW5nIFsyM10uXCJdLFwiMTU0MDY0MTA4MlwiOltcIlRoaXMgbnVtYmVyIGlzIHNpbWlsYXIgdG8gdGhlIHZhbHVlcyBzdWdnZXN0ZWQgZm9yIFRDUOKAmXMgcm91bmQtdHJpcCB0aW1lIGVzdGltYXRvciBbMjBdLlwiLFwiMTAlIDUyNiBbNTE3XSA1OCBbNTFdIDQ3IFs0NV0gMjAlIDE0MiBbMTQwXSA0IFszXSAxNSBbMTVdIDMwJSAzMiBbMzJdIDAgMCA0MCUgMjMgWzIzXSAwIDAgNTAlIDIwIFsyMF0gMCAwIDYwJSAxOSBbMTldIDAgMCA3MCUgMTUgWzE1XSAwIDAgODAlIDE0IFsxNF0gMCAwIDkwJSAxMiBbMTJdIDAgMCAxMDAlIDEwIFsxMF0gMCAwXCJdLFwiMTc5MDg3NTgyMVwiOltcImluY2x1ZGluZyBwcm92aWRpbmcgT1NJIG5ldHdvcmstbGF5ZXIgY29ubmVjdGl2aXR5IFsxMF0sIGVhc2luZyBJUCBtdWx0aWNhc3QgZGVwbG95bWVudCB1c2luZyB0aGUgTUJvbmUgWzZdLCBhbmQgcHJvdmlkaW5nIElQdjYgY29ubmVjdGl2aXR5IHVzaW5nIHRoZSA2LUJvbmUgWzldLlwiLFwiMTAlIDUyNiBbNTE3XSA1OCBbNTFdIDQ3IFs0NV0gMjAlIDE0MiBbMTQwXSA0IFszXSAxNSBbMTVdIDMwJSAzMiBbMzJdIDAgMCA0MCUgMjMgWzIzXSAwIDAgNTAlIDIwIFsyMF0gMCAwIDYwJSAxOSBbMTldIDAgMCA3MCUgMTUgWzE1XSAwIDAgODAlIDE0IFsxNF0gMCAwIDkwJSAxMiBbMTJdIDAgMCAxMDAlIDEwIFsxMF0gMCAwXCJdLFwiMTk1NjYwNTAyM1wiOltcIlRoZSBST04gcGFja2V0IGhlYWRlciBpcyBzaG93biBpbiBGaWd1cmUgNi4gSXQgaXMgaW5zcGlyZWQgYnkgdGhlIGRlc2lnbiBvZiBJUHY2IFsgMTcgXS5cIl0sXCIyMDM2NzMyNTk4XCI6W1wiVGhlIERldG91ciBtZWFzdXJlbWVudCBzdHVkeSBtYWRlIHRoZSBvYnNlcnZhdGlvbiwgdXNpbmcgUGF4c29u4oCZcyBhbmQgdGhlaXIgb3duIGRhdGEgY29sbGVjdGVkIGF0IHZhcmlvdXMgdGltZXMgYmV0d2VlbiAxOTk1IGFuZCAxOTk5LCB0aGF0IHBhdGggc2VsZWN0aW9uIGluIHRoZSB3aWRlLWFyZWEgSW50ZXJuZXQgaXMgc3Vib3B0aW1hbCBmcm9tIHRoZSBzdGFuZHBvaW50IG9mIGVuZC10by1lbmQgbGF0ZW5jeSwgcGFja2V0IGxvc3MgcmF0ZSwgYW5kIFRDUCB0aHJvdWdocHV0IFsyM10uXCIsXCJUaGUgRGV0b3VyIGZyYW1ld29yayBbNSwgMjJdIHdhcyBtb3RpdmF0ZWQgYnkgdGhlIHBvdGVudGlhbCBsb25nLXRlcm0gcGVyZm9ybWFuY2UgYmVuZWZpdHMgb2YgaW5kaXJlY3Qgcm91dGluZyBbMjNdLlwiLFwiMTAlIDUyNiBbNTE3XSA1OCBbNTFdIDQ3IFs0NV0gMjAlIDE0MiBbMTQwXSA0IFszXSAxNSBbMTVdIDMwJSAzMiBbMzJdIDAgMCA0MCUgMjMgWzIzXSAwIDAgNTAlIDIwIFsyMF0gMCAwIDYwJSAxOSBbMTldIDAgMCA3MCUgMTUgWzE1XSAwIDAgODAlIDE0IFsxNF0gMCAwIDkwJSAxMiBbMTJdIDAgMCAxMDAlIDEwIFsxMF0gMCAwXCJdLFwiMjA2NDYyMzQ3MVwiOltcIkdpdmVuIHRoZSB0aW1lLXZhcnlpbmcgYW5kIHNvbWV3aGF0IHVucHJlZGljdGFibGUgbmF0dXJlIG9mIGF2YWlsYWJsZSBiYW5kd2lkdGggb24gSW50ZXJuZXQgcGF0aHMgWzIsIDE5XSwgd2UgYmVsaWV2ZSB0aGlzIGlzIGFuIGFwcHJvcHJpYXRlIGdvYWwuXCIsXCJ1dGVzIFsyXS5cIl0sXCIyMDk2NzA0MDk2XCI6W1wiQnkgMTk4OSwgdGhlIEFSUEFORVQgZXZvbHZlZCB0byB1c2luZyBhIGRlbGF5LSBhbmQgY29uZ2VzdGlvbmJhc2VkIGRpc3RyaWJ1dGVkIHNob3J0ZXN0IHBhdGggcm91dGluZyBhbGdvcml0aG0gWzExXS5cIl0sXCIyMTAxMDMxMDYwXCI6W1wiYW4gb3JkZXIgb2YgbWFnbml0dWRlIGxhcmdlciB0aGFuIFJPTuKAmXMgWzI1XeKAlGFuZCBldmVuIHNvLCBpdCBpcyBsaWtlbHkgdGhhdCBhIEJHUCByb3V0ZSBjaGFuZ2Ugd291bGQgc2ltcGx5IGVuZCB1cCBjYXJyeWluZyB0aGUgZmxvb2RpbmcgdHJhZmZpYyBhbG9uZyB0aGUgbmV3IGxpbmtzLlwiXSxcIjIxMDc4OTkwMjhcIjpbXCJpbmNsdWRpbmcgcHJvdmlkaW5nIE9TSSBuZXR3b3JrLWxheWVyIGNvbm5lY3Rpdml0eSBbMTBdLCBlYXNpbmcgSVAgbXVsdGljYXN0IGRlcGxveW1lbnQgdXNpbmcgdGhlIE1Cb25lIFs2XSwgYW5kIHByb3ZpZGluZyBJUHY2IGNvbm5lY3Rpdml0eSB1c2luZyB0aGUgNi1Cb25lIFs5XS5cIl0sXCIyMTEzODcyNjgxXCI6W1wiQXMgYSByZXN1bHQsIEJHUOKAmXMgZmF1bHQgcmVjb3ZlcnkgbWVjaGFuaXNtcyBzb21ldGltZXMgdGFrZSBtYW55IG1pbnV0ZXMgYmVmb3JlIHJvdXRlcyBjb252ZXJnZSB0byBhIGNvbnNpc3RlbnQgZm9ybSBbMTJdLCBhbmQgdGhlcmUgYXJlIHRpbWVzIHdoZW4gcGF0aCBvdXRhZ2VzIGV2ZW4gbGVhZCB0byBzaWduaWZpY2FudCBkaXNydXB0aW9ucyBpbiBjb21tdW5pY2F0aW9uIGxhc3RpbmcgdGVucyBvZiBtaW51dGVzIG9yIG1vcmUgWzMsIDE4LCAxOV0uXCIsXCJbMTJdIHVzZSBhIGNvbWJpbmF0aW9uIG9mIG1lYXN1cmVtZW50IGFuZCBhbmFseXNpcyB0byBzaG93IHRoYXQgaW50ZXItZG9tYWluIHJvdXRlcnMgaW4gdGhlIEludGVybmV0IG1heSB0YWtlIHRlbnMgb2YgbWludXRlcyB0byByZWFjaCBhIGNvbnNpc3RlbnQgdmlldyBvZiB0aGUgbmV0d29yayB0b3BvbG9neSBhZnRlciBhIGZhdWx0LCBwcmltYXJpbHkgYmVjYXVzZSBvZiByb3V0aW5nIHRhYmxlIG9zY2lsbGF0aW9ucyBkdXJpbmcgQkdQ4oCZcyByYXRoZXIgY29tcGxpY2F0ZWQgcGF0aCBzZWxlY3Rpb24gcHJvY2Vzcy5cIixcIkJHUC00IHRha2VzIGEgbG9uZyB0aW1lLCBvbiB0aGUgb3JkZXIgb2Ygc2V2ZXJhbCBtaW51dGVzLCB0byBjb252ZXJnZSB0byBhIG5ldyB2YWxpZCByb3V0ZSBhZnRlciBhIGxpbmsgZmFpbHVyZSBjYXVzZXMgYW4gb3V0YWdlIFsxMl0uXCIsXCIxMCUgNTI2IFs1MTddIDU4IFs1MV0gNDcgWzQ1XSAyMCUgMTQyIFsxNDBdIDQgWzNdIDE1IFsxNV0gMzAlIDMyIFszMl0gMCAwIDQwJSAyMyBbMjNdIDAgMCA1MCUgMjAgWzIwXSAwIDAgNjAlIDE5IFsxOV0gMCAwIDcwJSAxNSBbMTVdIDAgMCA4MCUgMTQgWzE0XSAwIDAgOTAlIDEyIFsxMl0gMCAwIDEwMCUgMTAgWzEwXSAwIDBcIl0sXCIyMTE4MTcyNDI2XCI6W1wiQXMgYSByZXN1bHQsIEJHUOKAmXMgZmF1bHQgcmVjb3ZlcnkgbWVjaGFuaXNtcyBzb21ldGltZXMgdGFrZSBtYW55IG1pbnV0ZXMgYmVmb3JlIHJvdXRlcyBjb252ZXJnZSB0byBhIGNvbnNpc3RlbnQgZm9ybSBbMTJdLCBhbmQgdGhlcmUgYXJlIHRpbWVzIHdoZW4gcGF0aCBvdXRhZ2VzIGV2ZW4gbGVhZCB0byBzaWduaWZpY2FudCBkaXNydXB0aW9ucyBpbiBjb21tdW5pY2F0aW9uIGxhc3RpbmcgdGVucyBvZiBtaW51dGVzIG9yIG1vcmUgWzMsIDE4LCAxOV0uXCIsXCIzJSBvZiB0aGUgdGltZSBhdmVyYWdlZCBvdmVyIGEgbG9uZyB0aW1lIHBlcmlvZCwgYW5kIHRoYXQgdGhpcyBwZXJjZW50YWdlIGhhcyBub3QgaW1wcm92ZWQgd2l0aCB0aW1lIFsxOF0uXCIsXCJUaGUgTyhOKSBzY2FsaW5nIG9mIHBhdGggZGl2ZXJzaXR5IHN1Z2dlc3RzIHRoYXQgZXZlbiBzbWFsbCBudW1iZXJzIG9mIGNvbmZlZGVyYXRpbmcgaG9zdHMgZXhwb3NlIGEgbGFyZ2UgbnVtYmVyIG9mIEludGVybmV0IHBhdGhzIHRvIGV4YW1pbmF0aW9uIFsxOCwgMTldLlwiXSxcIjIxMjI4ODk1NDhcIjpbXCJBcyBhIHJlc3VsdCwgQkdQ4oCZcyBmYXVsdCByZWNvdmVyeSBtZWNoYW5pc21zIHNvbWV0aW1lcyB0YWtlIG1hbnkgbWludXRlcyBiZWZvcmUgcm91dGVzIGNvbnZlcmdlIHRvIGEgY29uc2lzdGVudCBmb3JtIFsxMl0sIGFuZCB0aGVyZSBhcmUgdGltZXMgd2hlbiBwYXRoIG91dGFnZXMgZXZlbiBsZWFkIHRvIHNpZ25pZmljYW50IGRpc3J1cHRpb25zIGluIGNvbW11bmljYXRpb24gbGFzdGluZyB0ZW5zIG9mIG1pbnV0ZXMgb3IgbW9yZSBbMywgMTgsIDE5XS5cIixcIkdpdmVuIHRoZSB0aW1lLXZhcnlpbmcgYW5kIHNvbWV3aGF0IHVucHJlZGljdGFibGUgbmF0dXJlIG9mIGF2YWlsYWJsZSBiYW5kd2lkdGggb24gSW50ZXJuZXQgcGF0aHMgWzIsIDE5XSwgd2UgYmVsaWV2ZSB0aGlzIGlzIGFuIGFwcHJvcHJpYXRlIGdvYWwuXCIsXCJUaGUgTyhOKSBzY2FsaW5nIG9mIHBhdGggZGl2ZXJzaXR5IHN1Z2dlc3RzIHRoYXQgZXZlbiBzbWFsbCBudW1iZXJzIG9mIGNvbmZlZGVyYXRpbmcgaG9zdHMgZXhwb3NlIGEgbGFyZ2UgbnVtYmVyIG9mIEludGVybmV0IHBhdGhzIHRvIGV4YW1pbmF0aW9uIFsxOCwgMTldLlwiLFwiMTAlIDUyNiBbNTE3XSA1OCBbNTFdIDQ3IFs0NV0gMjAlIDE0MiBbMTQwXSA0IFszXSAxNSBbMTVdIDMwJSAzMiBbMzJdIDAgMCA0MCUgMjMgWzIzXSAwIDAgNTAlIDIwIFsyMF0gMCAwIDYwJSAxOSBbMTldIDAgMCA3MCUgMTUgWzE1XSAwIDAgODAlIDE0IFsxNF0gMCAwIDkwJSAxMiBbMTJdIDAgMCAxMDAlIDEwIFsxMF0gMCAwXCJdLFwiMjEyNDQ3ODY3OFwiOltcIkhvd2V2ZXIsIGF0IGxvc3MgcmF0ZXMgb2YgMzAlIG9yIG1vcmUsIFRDUCBiZWNvbWVzIGVzc2VudGlhbGx5IHVudXNhYmxlIGJlY2F1c2UgaXQgdGltZXMgb3V0IGZvciBtb3N0IHBhY2tldHMgWzE2XS5cIixcIlRocm91Z2hwdXQgb3B0aW1pemF0aW9uIGNvbWJpbmVzIHRoZSBsYXRlbmN5IGFuZCBsb3NzIG1ldHJpY3MgdXNpbmcgYSBzaW1wbGlmaWVkIHZlcnNpb24gb2YgdGhlIFRDUCB0aHJvdWdocHV0IGVxdWF0aW9uIFsxNl0sIHdoaWNoIHByb3ZpZGVzIGFuIHVwcGVyLWJvdW5kIG9uIFRDUCB0aHJvdWdocHV0LlwiLFwiRm9yIHZhbHVlcyBvZiBvbiB0aGUgb3JkZXIgb2Ygc2V2ZXJhbCBtaW51dGVzLCBhIG1lYXN1cmVkIHZhbHVlIG9mIHAgbGFyZ2VyIHRoYW4gMzAlIGRlZ3JhZGVzIFRDUCBwZXJmb3JtYW5jZSBieSBvcmRlcnMgb2YgbWFnbml0dWRlLCBieSBmb3JjaW5nIFRDUCBpbnRvIGZyZXF1ZW50IHRpbWVvdXQtYmFzZWQgcmV0cmFuc21pc3Npb25zIFsxNl0uXCJdLFwiMjEzODM4MTMzOFwiOltcIk91ciBnZW5lcmFsIHBvbGljeSBjb21wb25lbnQgaXMgbW9yZSBwb3dlcmZ1bDsgaXQgYWNjZXB0cyBhIEJQRi1saWtlIHBhY2tldCBtYXRjaGVyIFsxNF0sIGFuZCBhIGxpc3Qgb2YgbGlua3MgdGhhdCBhcmUgZGVuaWVkIGJ5IHRoaXMgcG9saWN5LlwiLFwiMTAlIDUyNiBbNTE3XSA1OCBbNTFdIDQ3IFs0NV0gMjAlIDE0MiBbMTQwXSA0IFszXSAxNSBbMTVdIDMwJSAzMiBbMzJdIDAgMCA0MCUgMjMgWzIzXSAwIDAgNTAlIDIwIFsyMF0gMCAwIDYwJSAxOSBbMTldIDAgMCA3MCUgMTUgWzE1XSAwIDAgODAlIDE0IFsxNF0gMCAwIDkwJSAxMiBbMTJdIDAgMCAxMDAlIDEwIFsxMF0gMCAwXCJdLFwiMjEzODU4MTA1OVwiOltcIkluIHRyYWRpdGlvbmFsIEludGVybmV0IHBvbGljeSByb3V0aW5nLCDigJx0eXBl4oCdIGlzIHR5cGljYWxseSBkZWZpbmVkIG9ubHkgYnkgdGhlIHBhY2tldOKAmXMgc291cmNlIGFuZCBkZXN0aW5hdGlvbiBhZGRyZXNzZXMgWzRdOyBST04gZ2VuZXJhbGl6ZXMgdGhpcyBub3Rpb24gdG8gaW5jbHVkZSBvdGhlciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcGFja2V0LlwiXSxcIjIxNDU3MjE0NzlcIjpbXCJUaGUgaW5mb3JtYXRpb24gc2hhcmVkIHdpdGggb3RoZXIgcHJvdmlkZXJzIGFuZCBBU+KAmXMgaXMgaGVhdmlseSBmaWx0ZXJlZCBhbmQgc3VtbWFyaXplZCB1c2luZyB0aGUgQm9yZGVyIEdhdGV3YXkgUHJvdG9jb2wgKEJHUC00KSBydW5uaW5nIGF0IHRoZSBib3JkZXIgcm91dGVycyBiZXR3ZWVuIEFT4oCZcyBbMjFdLCB3aGljaCBhbGxvd3MgdGhlIEludGVybmV0IHRvIHNjYWxlIHRvIG1pbGxpb25zIG9mIG5ldHdvcmtzLlwiXSxcIjIxNTgyODg3MDRcIjpbXCJMYWJvdml0eiBldCBhbC4gZmluZCwgYnkgZXhhbWluaW5nIHJvdXRpbmcgdGFibGUgbG9ncyBhdCBJbnRlcm5ldCBiYWNrYm9uZXMsIHRoYXQgMTAlIG9mIGFsbCBjb25zaWRlcmVkIHJvdXRlcyB3ZXJlIGF2YWlsYWJsZSBsZXNzIHRoYW4gOTUlIG9mIHRoZSB0aW1lLCBhbmQgdGhhdCBsZXNzIHRoYW4gMzUlIG9mIGFsbCByb3V0ZXMgd2VyZSBhdmFpbGFibGUgbW9yZSB0aGFuIDk5Ljk5JSBvZiB0aGUgdGltZSBbIDEzIF0uXCJdLFwiMjE2MzA5MzEwN1wiOltcIls3XSwgd2UgZm91bmQgdGhpcyB0byBiZSBhIGJldHRlciBlc3RpbWF0b3IgdGhhbiBFV01BLCB3aGljaCByZXRhaW5zIHNvbWUgbWVtb3J5IG9mIHNhbXBsZXMgb2J0YWluZWQgaW4gdGhlIGRpc3RhbnQgcGFzdCBhcyB3ZWxsLlwiLFwic29tZSBvZiB0aGUgayBzYW1wbGVzIFs3XS5cIl0sXCIyMTcyNDA4Njc3XCI6W1wiQXMgYSByZXN1bHQsIEJHUOKAmXMgZmF1bHQgcmVjb3ZlcnkgbWVjaGFuaXNtcyBzb21ldGltZXMgdGFrZSBtYW55IG1pbnV0ZXMgYmVmb3JlIHJvdXRlcyBjb252ZXJnZSB0byBhIGNvbnNpc3RlbnQgZm9ybSBbMTJdLCBhbmQgdGhlcmUgYXJlIHRpbWVzIHdoZW4gcGF0aCBvdXRhZ2VzIGV2ZW4gbGVhZCB0byBzaWduaWZpY2FudCBkaXNydXB0aW9ucyBpbiBjb21tdW5pY2F0aW9uIGxhc3RpbmcgdGVucyBvZiBtaW51dGVzIG9yIG1vcmUgWzMsIDE4LCAxOV0uXCIsXCJmaW5kIHVzaW5nIGFjdGl2ZSBwcm9iaW5nIHRoYXQgNSUgb2YgYWxsIGRldGVjdGVkIGZhaWx1cmVzIGxhc3QgbW9yZSB0aGFuIDEwLDAwMCBzZWNvbmRzICgyIGhvdXJzLCA0NSBtaW51dGVzKSwgYW5kIHRoYXQgZmFpbHVyZSBkdXJhdGlvbnMgYXJlIGhlYXZ5LXRhaWxlZCBhbmQgY2FuIGxhc3QgZm9yIGFzIGxvbmcgYXMgMTAwLDAwMCBzZWNvbmRzIGJlZm9yZSBiZWluZyByZXBhaXJlZCBbM10uXCIsXCIxMCUgNTI2IFs1MTddIDU4IFs1MV0gNDcgWzQ1XSAyMCUgMTQyIFsxNDBdIDQgWzNdIDE1IFsxNV0gMzAlIDMyIFszMl0gMCAwIDQwJSAyMyBbMjNdIDAgMCA1MCUgMjAgWzIwXSAwIDAgNjAlIDE5IFsxOV0gMCAwIDcwJSAxNSBbMTVdIDAgMCA4MCUgMTQgWzE0XSAwIDAgOTAlIDEyIFsxMl0gMCAwIDEwMCUgMTAgWzEwXSAwIDBcIl19LFwiUFJcIjpbMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjEyMzczMjM4NSwyMTU4MDQ5ODIxLDIwMzY3MzI1OTgsMjE1NzkxODYxNywxNTMwMTIwNzc0LDIxMDc1ODk0NjcsMjExMzg3MjY4MSwxNDkwNjk5NDk0LDIxMTUxNjQwNzUsMjEwNDUxNzY0MCwyMTQ4NjYyNzQ4LDIxMjk4MDc3NDYsMjAxMDM2NTQ2NywyMTAxMjk2MjIzLDIxNTU0NDQzMTMsMTY1MDk2MDE1LDIxNDcxMTg0MDYsMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjEyMzczMjM4NSwyMTU4MDQ5ODIxLDIwMzY3MzI1OTgsMjE1NzkxODYxNywxNTMwMTIwNzc0LDIxMDc1ODk0NjcsMjExMzg3MjY4MSwxNDkwNjk5NDk0LDIxMTUxNjQwNzUsMjEwNDUxNzY0MCwyMTQ4NjYyNzQ4LDIxMjk4MDc3NDYsMjAxMDM2NTQ2NywyMTAxMjk2MjIzLDIxNTU0NDQzMTMsMTY1MDk2MDE1LDIxNDcxMTg0MDZdLFwiQU5GXCI6W3tcIkZOXCI6XCJEYXZpZCBHLlwiLFwiTE5cIjpcIkFuZGVyc2VuXCIsXCJTXCI6MX0se1wiRk5cIjpcIkhhcmlcIixcIkxOXCI6XCJCYWxha3Jpc2huYW5cIixcIlNcIjoyfSx7XCJGTlwiOlwiTS4gRnJhbnNcIixcIkxOXCI6XCJLYWFzaG9la1wiLFwiU1wiOjN9LHtcIkZOXCI6XCJSb2JlcnQgVGFwcGFuXCIsXCJMTlwiOlwiTW9ycmlzXCIsXCJTXCI6NH1dLFwiQlZcIjpcIlByb2NlZWRpbmdzIG9mIHRoZSBlaWdodGVlbnRoIEFDTSBzeW1wb3NpdW0gb24gT3BlcmF0aW5nIHN5c3RlbXMgcHJpbmNpcGxlc1wiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNi4wNjksImtlc0VudGl0eUlkIjoxMTk2MDE2LCJJZCI6MjE1MDY3NjU4NiwiVGkiOiJ3aWRlIGFyZWEgY29vcGVyYXRpdmUgc3RvcmFnZSB3aXRoIGNmcyIsIlkiOjIwMDEsIkQiOiIyMDAxLTEwLTIxIiwiQ0MiOjIzMjEsIlJJZCI6WzIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMTY1MDY3NTUwOSwyMTA0MjEwODk0LDIxNzQ1MDc4NjksMjE0NDU1MzA3OCwxNjYzNDkzNjQ5LDIxMjM4MjA4MjAsMTU4NDYzNTQ1OSwyMDIwNzY1NjUyLDE5Nzg4ODQ3NTUsMjAwMDg3NjAyMywxNjAxMzc2NTY1LDE1Mjc5NjE2ODMsMTU4MDAwNDQ0MCwyMTU3NzQwMDIwLDIxNjM1OTg2OTAsMjA1ODk3MjU4OSwyMTAzNjQ3NjI4LDc0NDQ5NDczLDIxMDQxMTI4NDksMjE1NjQzNTU0OSwxNTI4NTQ1ODk3LDIwODQ0NDU4MTIsMzE5OTE3NTA2LDE1NzUzMDQ1MzksMjE0MzM1MTUwMCwxNTY5MzkwODk2LDIxNjg2MjQ0NTgsMTU0MDQ4NzE2NiwyMDMzNTQyNjcsMTk4MzM0NjA0LDE0MzkyMTc2NiwxODQ3NDcxNDNdLCJBQSI6W3siQXVOIjoiZnJhbmsgZGFiZWsifSx7IkF1TiI6Im0gZnJhbnMga2Fhc2hvZWsifSx7IkF1TiI6ImRhdmlkIHIga2FyZ2VyIn0seyJBdU4iOiJyb2JlcnQgdGFwcGFuIG1vcnJpcyJ9LHsiQXVOIjoiaW9uIHN0b2ljYSJ9XSwiRiI6W3siRk4iOiJrZXkgYmFzZWQgcm91dGluZyJ9LHsiRk4iOiJkaXN0cmlidXRlZCBoYXNoIHRhYmxlIn0seyJGTiI6ImZpbGUgc3lzdGVtIn0seyJGTiI6InBlZXIgdG8gcGVlciJ9LHsiRk4iOiJzZXJ2ZXIifSx7IkZOIjoic2NhbGFiaWxpdHkifSx7IkZOIjoibG9hZCBiYWxhbmNpbmcifSx7IkZOIjoiYXJjaGl0ZWN0dXJlIn0seyJGTiI6InJlYWwgdGltZSBjb21wdXRpbmcifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiV2lkZS1hcmVhIGNvb3BlcmF0aXZlIHN0b3JhZ2Ugd2l0aCBDRlNcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxNzQsXCJJbnZlcnRlZEluZGV4XCI6e1wiVGhlXCI6WzAsMTU1XSxcIkNvb3BlcmF0aXZlXCI6WzFdLFwiRmlsZVwiOlsyXSxcIlN5c3RlbVwiOlszXSxcIihDRlMpXCI6WzRdLFwiaXNcIjpbNSwxMDIsMTM5XSxcImFcIjpbNiwzMSw0NCw1OCw2NywxMTksMTQ2XSxcIm5ld1wiOls3XSxcInBlZXItdG8tcGVlclwiOls4XSxcInJlYWQtb25seVwiOls5XSxcInN0b3JhZ2VcIjpbMTAsMjRdLFwic3lzdGVtXCI6WzExLDEwOF0sXCJ0aGF0XCI6WzEyLDM1LDEyNCwxMzddLFwicHJvdmlkZXNcIjpbMTNdLFwicHJvdmFibGVcIjpbMTRdLFwiZ3VhcmFudGVlc1wiOlsxNV0sXCJmb3JcIjpbMTYsNDksNzZdLFwidGhlXCI6WzE3LDg4LDk4LDEwNSwxNzFdLFwiZWZmaWNpZW5jeSxcIjpbMThdLFwicm9idXN0bmVzcyxcIjpbMTksNzddLFwiYW5kXCI6WzIwLDI1LDYzLDc4LDExMCwxMTUsMTYyXSxcImxvYWQtYmFsYW5jZVwiOlsyMV0sXCJvZlwiOlsyMiwxMDAsMTQ4XSxcImZpbGVcIjpbMjMsNTksMTA3XSxcInJldHJpZXZhbC5cIjpbMjZdLFwiQ0ZTXCI6WzI3LDQxLDUyLDEyNSwxMzhdLFwiZG9lc1wiOlsyOF0sXCJ0aGlzXCI6WzI5XSxcIndpdGhcIjpbMzAsODEsMTQxXSxcImNvbXBsZXRlbHlcIjpbMzJdLFwiZGVjZW50cmFsaXplZFwiOlszM10sXCJhcmNoaXRlY3R1cmVcIjpbMzRdLFwiY2FuXCI6WzM2XSxcInNjYWxlXCI6WzM3XSxcInRvXCI6WzM4LDcwLDEyOF0sXCJsYXJnZVwiOlszOV0sXCJzeXN0ZW1zLlwiOls0MF0sXCJzZXJ2ZXJzXCI6WzQyLDE3Ml0sXCJwcm92aWRlXCI6WzQzXSxcImRpc3RyaWJ1dGVkXCI6WzQ1XSxcImhhc2hcIjpbNDZdLFwidGFibGVcIjpbNDddLFwiKERIYXNoKVwiOls0OF0sXCJibG9ja1wiOls1MCwxNDddLFwic3RvcmFnZS5cIjpbNTFdLFwiY2xpZW50c1wiOls1MywxMjldLFwiaW50ZXJwcmV0XCI6WzU0XSxcIkRIYXNoXCI6WzU1LDYxLDg0XSxcImJsb2Nrc1wiOls1Niw2NSw4Nl0sXCJhc1wiOls1NywxMzAsMTMyLDE2NywxNjldLFwic3lzdGVtLlwiOls2MF0sXCJkaXN0cmlidXRlc1wiOls2Ml0sXCJjYWNoZXNcIjpbNjRdLFwiYXRcIjpbNjZdLFwiZmluZVwiOls2OF0sXCJncmFudWxhcml0eVwiOls2OV0sXCJhY2hpZXZlXCI6WzcxXSxcImxvYWRcIjpbNzJdLFwiYmFsYW5jZSxcIjpbNzNdLFwidXNlc1wiOls3NF0sXCJyZXBsaWNhdGlvblwiOls3NV0sXCJkZWNyZWFzZXNcIjpbNzldLFwibGF0ZW5jeVwiOls4MF0sXCJzZXJ2ZXJcIjpbODJdLFwic2VsZWN0aW9uLlwiOls4M10sXCJmaW5kc1wiOls4NV0sXCJ1c2luZ1wiOls4NywxMDRdLFwiQ2hvcmRcIjpbODldLFwibG9jYXRpb25cIjpbOTBdLFwicHJvdG9jb2wsXCI6WzkxXSxcIndoaWNoXCI6WzkyXSxcIm9wZXJhdGVzXCI6WzkzXSxcImluXCI6Wzk0LDk3XSxcInRpbWVcIjpbOTVdLFwibG9nYXJpdGhtaWNcIjpbOTZdLFwibnVtYmVyXCI6Wzk5XSxcInNlcnZlcnMuQ0ZTXCI6WzEwMV0sXCJpbXBsZW1lbnRlZFwiOlsxMDNdLFwiU0ZTXCI6WzEwNl0sXCJ0b29sa2l0XCI6WzEwOV0sXCJydW5zXCI6WzExMV0sXCJvblwiOlsxMTIsMTE4XSxcIkxpbnV4LFwiOlsxMTNdLFwiT3BlbkJTRCxcIjpbMTE0XSxcIkZyZWVCU0QuXCI6WzExNl0sXCJFeHBlcmllbmNlXCI6WzExN10sXCJnbG9iYWxseVwiOlsxMjBdLFwiZGVwbG95ZWRcIjpbMTIxXSxcInByb3RvdHlwZVwiOlsxMjJdLFwic2hvd3NcIjpbMTIzXSxcImRlbGl2ZXJzXCI6WzEyNl0sXCJkYXRhXCI6WzEyNywxNDldLFwiZmFzdFwiOlsxMzFdLFwiRlRQLlwiOlsxMzNdLFwiQ29udHJvbGxlZFwiOlsxMzRdLFwidGVzdHNcIjpbMTM1LDE1Nl0sXCJzaG93XCI6WzEzNl0sXCJzY2FsYWJsZTpcIjpbMTQwXSxcIjQsMDk2XCI6WzE0Ml0sXCJzZXJ2ZXJzLFwiOlsxNDNdLFwibG9va2luZ1wiOlsxNDRdLFwidXBcIjpbMTQ1XSxcImludm9sdmVzXCI6WzE1MF0sXCJjb250YWN0aW5nXCI6WzE1MV0sXCJvbmx5XCI6WzE1Ml0sXCJzZXZlblwiOlsxNTNdLFwic2VydmVycy5cIjpbMTU0XSxcImFsc29cIjpbMTU3XSxcImRlbW9uc3RyYXRlXCI6WzE1OF0sXCJuZWFybHlcIjpbMTU5XSxcInBlcmZlY3RcIjpbMTYwXSxcInJvYnVzdG5lc3NcIjpbMTYxXSxcInVuaW1wYWlyZWRcIjpbMTYzXSxcInBlcmZvcm1hbmNlXCI6WzE2NF0sXCJldmVuXCI6WzE2NV0sXCJ3aGVuXCI6WzE2Nl0sXCJtYW55XCI6WzE2OF0sXCJoYWxmXCI6WzE3MF0sXCJmYWlsLlwiOlsxNzNdfX0sXCJTXCI6W3tcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9kb2lkPTUwMjA1OS41MDIwNTRcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3Nvc3Aub3JnLzIwMDEvcGFwZXJzL21vcnJpcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5jb3JuZWxsLmVkdS9QZW9wbGUvZWdzL2NzNjE1LXNwcmluZzA3L2Nmcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3BhZ2VzLmNzLndpc2MuZWR1L35yZW16aS9DbGFzc2VzLzczOS9TcHJpbmcyMDAzL1BhcGVycy9jZnMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vd2ViLmNzLmRhbC5jYS9+YWJyb2Rza3kvNzMwMS9yZWFkaW5ncy9EYUthS2FNb1N0MDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wZG9zLmNzYWlsLm1pdC5lZHUvcGFwZXJzL2Nmczpzb3NwMDEvY2ZzX3Nvc3AucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jb3Vyc2VzLmNzLnZ0LmVkdS9+Y3M1MjA0L2ZhbGwwMi9QYXBlcnMvRmlsZVN5c3RlbXMvQ0ZTLlNPU1AyMDAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LnNjcy5zdGFuZm9yZC5lZHUvbnl1LzAxZmEvc2NoZWQvY2hvcmQtY2ZzLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbWVtYmVycy51bmluZS5jaC9ldGllbm5lLnJpdmllcmUvcGFwZXJzL2Nmcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5lZWNnLnV0b3JvbnRvLmNhL35hc2h2aW4vY291cnNlcy9lY2UxNzQ2LzIwMDMvcmVhZGluZy9kYWJlay1zb3NwMjAwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5lY2UudWMuZWR1LyU3RW9zY2FyL3AycGFyZWEvc3RvcmFnZS1mcy9jZnNfc29zcC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2ZhYy1zdGFmZi5zZWF0dGxldS5lZHUvemh1eS93ZWIvdGVhY2hpbmcvc3ByaW5nMDYvY3NzZTQ5My9wYXBlci9jZnMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZWVjZy50b3JvbnRvLmVkdS9+YXNodmluL2NvdXJzZXMvZWNlMTc0Ni8yMDAzL3JlYWRpbmcvZGFiZWstc29zcDIwMDEucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9jb25mL3Nvc3Avc29zcDIwMDEuaHRtbCNEYWJla0tLTVMwMVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9mdF9nYXRld2F5LmNmbT9pZD01MDIwNTQmdHlwZT1wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1LzUwMjAzNC41MDIwNTRcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD01MDIwMzQuNTAyMDU0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kaXNjby5ldGh6LmNoL2xlY3R1cmVzL3dzMDMwNC9zZW1pbmFyL3BhcGVycy9jZnMucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cuZGlzdGNvbXAuZXRoei5jaC9sZWN0dXJlcy93czAzMDQvc2VtaW5hci9wYXBlcnMvY2ZzLnBkZlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZG9pLmFjbS5vcmcvMTAuMTE0NS81MDIwMzQuNTAyMDU0XCJ9XSxcIlZGTlwiOlwiU3ltcG9zaXVtIG9uIE9wZXJhdGluZyBTeXN0ZW1zIFByaW5jaXBsZXNcIixcIlZTTlwiOlwiU09TUFwiLFwiVlwiOjM1LFwiSVwiOjUsXCJGUFwiOjIwMixcIkxQXCI6MjE1LFwiRE9JXCI6XCIxMC4xMTQ1LzUwMjAzNC41MDIwNTRcIixcIkNDXCI6e1wiNzQ0NDk0NzNcIjpbXCJGcmVlbmV0IFs1XSB1c2VzIHByb2JhYmlsaXN0aWMgcm91dGluZyB0byBwcmVzZXJ2ZSB0aGUgYW5vbnltaXR5IG9mIGNsaWVudHMsIHB1Ymxpc2hlcnMsIGFuZCBzZXJ2ZXJzLlwiXSxcIjE0MzkyMTc2NlwiOltcIlRoaXMgd29ya3Mgd2VsbCB3aGVuIGxvdyBsYXRlbmNpZXMgZnJvbSBub2RlcyB0byAsIGFuZCB0byAsIG1lYW4gdGhhdCBsYXRlbmN5IGlzIGFsc28gbG93IGZyb20gdG8gLiBNZWFzdXJlbWVudHMgb2Ygb3VyIEludGVybmV0IHRlc3QtYmVkIHN1Z2dlc3QgdGhhdCB0aGlzIGlzIG9mdGVuIHRydWUgWyAzMyBdLlwiXSxcIjE4NDc0NzE0M1wiOltcIlRoZXJlIGFyZSBzZXZlcmFsIHByb3Bvc2VkIHNjYWxhYmxlIGNvb3BlcmF0aXZlIFdlYiBjYWNoZXMgWyAzICwgOCwgMTAsIDE1XS5cIl0sXCIxOTgzMzQ2MDRcIjpbXCJBcyBhbiBleGFtcGxlLCBIb25nIHNob3dzIGluIGhpcyBGaWd1cmUgMTQtMTIgdGhhdCBpbiBhIG5ldHdvcmsgd2l0aCAxLDAwMCBzZXJ2ZXJzLCB0aGUgbG9va3VwIHBhdGggbGVuZ3RoIGNhbiBleGNlZWQgOTAgaG9wcyBbMjNdLlwiXSxcIjIwMzM1NDI2N1wiOltcIlRoZXJlIGFyZSBzZXZlcmFsIHByb3Bvc2VkIHNjYWxhYmxlIGNvb3BlcmF0aXZlIFdlYiBjYWNoZXMgWzMsIDgsIDEwLCAxNV0uXCJdLFwiMzE5OTE3NTA2XCI6W1wiVGhlIHVzZSBvZiBjb250ZW50LWhhc2hlcyB0byBzZWN1cmVseSBsaW5rIHRvZ2V0aGVyIGRpZmZlcmVudCBwaWVjZXMgb2YgZGF0YSBpcyBkdWUgdG8gTWVya2xlIFsxOF07IHRoZSB1c2Ugb2YgcHVibGljIGtleXMgdG8gYXV0aGVudGljYWxseSBuYW1lIGRhdGEgaXMgZHVlIHRvIHRoZSBTRlMgc3lzdGVtIFsxN10uXCJdLFwiMTUyNzk2MTY4M1wiOltcIlRoZXJlIGFyZSBzZXZlcmFsIHByb3Bvc2VkIHNjYWxhYmxlIGNvb3BlcmF0aXZlIFdlYiBjYWNoZXMgWzMsIDgsIDEwLCAxNV0uXCJdLFwiMTUyODU0NTg5N1wiOltcIkNhY2hlIFJlc29sdmVyIFszMF0sIGxpa2UgQ0ZTLCB1c2VzIGNvbnNpc3RlbnQgaGFzaGluZyB0byBldmVubHkgbWFwIHN0b3JlZCBkYXRhIGFtb25nIHRoZSBzZXJ2ZXJzIFsxMiwgMTRdLlwiXSxcIjE1NDA0ODcxNjZcIjpbXCJtYWtlIHRoaXMgcG9zc2libGUsIHN1Y2ggYXMgYSBwb29sIG9mIGdsb2JhbCBzZXJ2ZXJzIGFjdGluZyBhcyBwcm94aWVzIGZvciBob3N0cyBiZWhpbmQgTkFUcyBbMjFdLlwiXSxcIjE1NjkzOTA4OTZcIjpbXCJDRlMgaGFzIGJlZW4gaW1wbGVtZW50ZWQgdXNpbmcgdGhlIFNGUyB0b29sa2l0IFsxNl0uXCIsXCJVRFAgd2l0aCBhIEMrKyBSUEMgcGFja2FnZSBwcm92aWRlZCBieSB0aGUgU0ZTIHRvb2xraXQgWzE2XS5cIixcIkNGUyBleHBvcnRzIGFuIG9yZGluYXJ5IFVOSVggZmlsZSBzeXN0ZW0gaW50ZXJmYWNlIGJ5IGFjdGluZyBhcyBhIGxvY2FsIE5GUyBzZXJ2ZXIgdXNpbmcgdGhlIFNGUyB1c2VyIGxldmVsIGZpbGUgc3lzdGVtIHRvb2xraXQgWzE2XS5cIl0sXCIxNTc1MzA0NTM5XCI6W1wiVGhlcmUgYXJlIHNldmVyYWwgcHJvcG9zZWQgc2NhbGFibGUgY29vcGVyYXRpdmUgV2ViIGNhY2hlcyBbMywgOCwgMTAsIDE1XS5cIl0sXCIxNTgwMDA0NDQwXCI6W1wiQ0ZTIGF1dGhlbnRpY2F0ZXMgZGF0YSBieSBuYW1pbmcgaXQgd2l0aCBwdWJsaWMga2V5cyBvciBjb250ZW50aGFzaGVzLCBhcyBkbyBtYW55IG90aGVyIGRpc3RyaWJ1dGVkIHN0b3JhZ2Ugc3lzdGVtcyBbOSwgNiwgNywgMTMsIDI5LCAzNF0uXCIsXCJGcmVlIEhhdmVuIFs3XSB1c2VzIGJvdGggY3J5cHRvZ3JhcGh5IGFuZCByb3V0aW5nICh1c2luZyByZS1tYWlsZXJzIFs0XSkgdG8gcHJvdmlkZSBhbm9ueW1pdHk7IGxpa2UgR251dGVsbGEsIEZyZWUgSGF2ZW4gZmluZHMgZGF0YSB3aXRoIGEgZ2xvYmFsIHNlYXJjaC5cIl0sXCIxNjUwNjc1NTA5XCI6W1wiQ0ZTIHVzZXMgcGVlci10by1wZWVyIGRpc3RyaWJ1dGVkIGhhc2hpbmcgc2ltaWxhciBpbiBzcGlyaXQgdG8gYSBudW1iZXIgb2Ygb25nb2luZyByZXNlYXJjaCBwcm9qZWN0cyBbMjYsIDI5LCAzNV0uXCIsXCJsYXIgYXBwcm9hY2hlcyB3aXRoIHNpbWlsYXIgc2NhbGFiaWxpdHkgYW5kIHBlcmZvcm1hbmNlLCBpbmNsdWRpbmcgQ0FOIFsyNl0sIFBBU1QgWzI4LCAyOV0sIE9jZWFuU3RvcmUgWzEzLCAzNV0sIGFuZCBPaGFoYSBbMjJdLlwiLFwiRm9yIGV4YW1wbGUsIE9jZWFuU3RvcmUgdXNlcyBhIEJ5emFudGluZSBhZ3JlZW1lbnQgcHJvdG9jb2wgZm9yIGNvbmZsaWN0IHJlc29sdXRpb24sIGFuZCBhIGNvbXBsZXggcHJvdG9jb2wgYmFzZWQgb24gUGxheHRvbiB0cmVlcyBbMjRdIHRvIGltcGxlbWVudCB0aGUgbG9jYXRpb24gc2VydmljZSBbMzVdLlwiXSxcIjE2NjM0OTM2NDlcIjpbXCJFeGlzdGluZyBwZWVyLXRvLXBlZXIgc3lzdGVtcyAoc3VjaCBhcyBOYXBzdGVyIFsyMF0sIEdudXRlbGxhIFsxMV0sIGFuZCBGcmVlbmV0IFsgNiBdKSBkZW1vbnN0cmF0ZSB0aGUgYmVuZWZpdHMgb2YgY29vcGVyYXRpdmUgc3RvcmFnZSBhbmQgc2VydmluZzogZmF1bHQgdG9sZXJhbmNlLCBsb2FkIGJhbGFuY2UsIGFuZCB0aGUgYWJpbGl0eSB0byBoYXJuZXNzIGlkbGUgc3RvcmFnZSBhbmQgbmV0d29yayByZXNvdXJjZXMuXFx1MDAxYkNGUyB3YXMgaW5zcGlyZWQgYnkgTmFwc3RlciBbMjBdLCBHbnV0ZWxsYSBbMTFdLCBhbmQgcGFydGljdWxhcmx5IEZyZWVuZXQgWyA2IF0uXFx1MDAxYkNGUyBhdXRoZW50aWNhdGVzIGRhdGEgYnkgbmFtaW5nIGl0IHdpdGggcHVibGljIGtleXMgb3IgY29udGVudGhhc2hlcywgYXMgZG8gbWFueSBvdGhlciBkaXN0cmlidXRlZCBzdG9yYWdlIHN5c3RlbXMgWzksICA2ICwgNywgMTMsIDI5LCAzNF0uXFx1MDAxYlN5c3RlbXMgc3VjaCBhcyBGcmVlbmV0IFsgNiBdIGFuZCBQQVNUIFsyOV0gc3RvcmUgd2hvbGUgZmlsZXMuXCJdLFwiMTk3ODg4NDc1NVwiOltcIk9uIHRoZSBvdGhlciBoYW5kLCBnaXZlbiBhIHJvYnVzdCBsb2NhdGlvbiBhbmQgc3RvcmFnZSBsYXllciwgYW5vbnltb3VzIGNsaWVudCBhY2Nlc3MgdG8gQ0ZTIGNvdWxkIGJlIHByb3ZpZGVkIGJ5IHNlcGFyYXRlIGFub255bWl6aW5nIHByb3hpZXMsIHVzaW5nIHRlY2huaXF1ZXMgc2ltaWxhciB0byB0aG9zZSBwcm9wb3NlZCBieSBDaGF1bSBbNF0gb3IgUmVpdGVyIGFuZCBSdWJpbiBbMjddLlwiXSxcIjIwMDA4NzYwMjNcIjpbXCJGb3IgZXhhbXBsZSwgT2NlYW5TdG9yZSB1c2VzIGEgQnl6YW50aW5lIGFncmVlbWVudCBwcm90b2NvbCBmb3IgY29uZmxpY3QgcmVzb2x1dGlvbiwgYW5kIGEgY29tcGxleCBwcm90b2NvbCBiYXNlZCBvbiBQbGF4dG9uIHRyZWVzIFsyNF0gdG8gaW1wbGVtZW50IHRoZSBsb2NhdGlvbiBzZXJ2aWNlIFszNV0uXCJdLFwiMjAyMDc2NTY1MlwiOltcIkNhY2hlIFJlc29sdmVyIFszMF0sIGxpa2UgQ0ZTLCB1c2VzIGNvbnNpc3RlbnQgaGFzaGluZyB0byBldmVubHkgbWFwIHN0b3JlZCBkYXRhIGFtb25nIHRoZSBzZXJ2ZXJzIFsxMiwgMTRdLlwiLFwibXVjaCBhcyBpbiBjb25zaXN0ZW50IGhhc2hpbmcgWzEyXS5cIixcIkluIGFkZGl0aW9uLCBldmVuIHVuaWZvcm0gZGlzdHJpYnV0aW9uIGRvZXNu4oCZdCBwcm9kdWNlIHBlcmZlY3QgbG9hZCBiYWxhbmNlOyB0aGUgbWF4aW11bSBzdG9yYWdlIGJ1cmRlbiBpcyBsaWtlbHkgdG8gYmUgYWJvdXQgbG9nKE4pIHRpbWVzIHRoZSBhdmVyYWdlIGR1ZSB0byBpcnJlZ3VsYXIgc3BhY2luZyBiZXR3ZWVuIHNlcnZlciBJRHMgWzEyXS5cIixcIlRvIGFjY29tbW9kYXRlIGhldGVyb2dlbmVvdXMgc2VydmVyIGNhcGFjaXRpZXMsIENGUyB1c2VzIHRoZSBub3Rpb24gKGZyb20gWzEyXSkgb2YgYSByZWFsIHNlcnZlciBhY3RpbmcgYXMgbXVsdGlwbGUgdmlydHVhbCBzZXJ2ZXJzLlwiXSxcIjIwNTg5NzI1ODlcIjpbXCJDRlMgY291bGQgc2F2ZSBzcGFjZSBieSBzdG9yaW5nIGNvZGVkIHBpZWNlcyBvZiBibG9ja3MgcmF0aGVyIHRoYW4gd2hvbGUtYmxvY2sgcmVwbGljYXMsIHVzaW5nIGFuIGFsZ29yaXRobSBzdWNoIGFzIElEQSBbMjVdLlwiXSxcIjIxMDM2NDc2MjhcIjpbXCJGcmVlIEhhdmVuIFs3XSB1c2VzIGJvdGggY3J5cHRvZ3JhcGh5IGFuZCByb3V0aW5nICh1c2luZyByZS1tYWlsZXJzIFs0XSkgdG8gcHJvdmlkZSBhbm9ueW1pdHk7IGxpa2UgR251dGVsbGEsIEZyZWUgSGF2ZW4gZmluZHMgZGF0YSB3aXRoIGEgZ2xvYmFsIHNlYXJjaC5cIixcIk9uIHRoZSBvdGhlciBoYW5kLCBnaXZlbiBhIHJvYnVzdCBsb2NhdGlvbiBhbmQgc3RvcmFnZSBsYXllciwgYW5vbnltb3VzIGNsaWVudCBhY2Nlc3MgdG8gQ0ZTIGNvdWxkIGJlIHByb3ZpZGVkIGJ5IHNlcGFyYXRlIGFub255bWl6aW5nIHByb3hpZXMsIHVzaW5nIHRlY2huaXF1ZXMgc2ltaWxhciB0byB0aG9zZSBwcm9wb3NlZCBieSBDaGF1bSBbNF0gb3IgUmVpdGVyIGFuZCBSdWJpbiBbMjddLlwiXSxcIjIxMDQxMTI4NDlcIjpbXCJUaGUgdXNlIG9mIGNvbnRlbnQtaGFzaGVzIHRvIHNlY3VyZWx5IGxpbmsgdG9nZXRoZXIgZGlmZmVyZW50IHBpZWNlcyBvZiBkYXRhIGlzIGR1ZSB0byBNZXJrbGUgWzE4XTsgdGhlIHVzZSBvZiBwdWJsaWMga2V5cyB0byBhdXRoZW50aWNhbGx5IG5hbWUgZGF0YSBpcyBkdWUgdG8gdGhlIFNGUyBzeXN0ZW0gWzE3XS5cIl0sXCIyMTA0MjEwODk0XCI6W1wiQ0ZTIGF1dGhlbnRpY2F0ZXMgZGF0YSBieSBuYW1pbmcgaXQgd2l0aCBwdWJsaWMga2V5cyBvciBjb250ZW50aGFzaGVzLCBhcyBkbyBtYW55IG90aGVyIGRpc3RyaWJ1dGVkIHN0b3JhZ2Ugc3lzdGVtcyBbOSwgNiwgNywgMTMsIDI5LCAzNF0uXCIsXCJsYXIgYXBwcm9hY2hlcyB3aXRoIHNpbWlsYXIgc2NhbGFiaWxpdHkgYW5kIHBlcmZvcm1hbmNlLCBpbmNsdWRpbmcgQ0FOIFsyNl0sIFBBU1QgWzI4LCAyOV0sIE9jZWFuU3RvcmUgWzEzLCAzNV0sIGFuZCBPaGFoYSBbMjJdLlwiLFwiT2NlYW5TdG9yZSBbMTNdIGFpbXMgdG8gYnVpbGQgYSBnbG9iYWwgcGVyc2lzdGVudCBzdG9yYWdlIHV0aWxpdHkuXCJdLFwiMjEyMzgyMDgyMFwiOltcIkNGUyB1c2VzIHBlZXItdG8tcGVlciBkaXN0cmlidXRlZCBoYXNoaW5nIHNpbWlsYXIgaW4gc3Bpcml0IHRvIGEgbnVtYmVyIG9mIG9uZ29pbmcgcmVzZWFyY2ggcHJvamVjdHMgWzI2LCAyOSwgMzVdLlwiLFwiQ0ZTIGF1dGhlbnRpY2F0ZXMgZGF0YSBieSBuYW1pbmcgaXQgd2l0aCBwdWJsaWMga2V5cyBvciBjb250ZW50aGFzaGVzLCBhcyBkbyBtYW55IG90aGVyIGRpc3RyaWJ1dGVkIHN0b3JhZ2Ugc3lzdGVtcyBbOSwgNiwgNywgMTMsIDI5LCAzNF0uXCIsXCJsYXIgYXBwcm9hY2hlcyB3aXRoIHNpbWlsYXIgc2NhbGFiaWxpdHkgYW5kIHBlcmZvcm1hbmNlLCBpbmNsdWRpbmcgQ0FOIFsyNl0sIFBBU1QgWzI4LCAyOV0sIE9jZWFuU3RvcmUgWzEzLCAzNV0sIGFuZCBPaGFoYSBbMjJdLlwiLFwiVGhlIFBBU1QgWzI5XSBzdG9yYWdlIHN5c3RlbSBkaWZmZXJzIGZyb20gQ0ZTIGluIGl0cyBhcHByb2FjaCB0byBsb2FkIGJhbGFuY2UuXCIsXCJTeXN0ZW1zIHN1Y2ggYXMgRnJlZW5ldCBbNl0gYW5kIFBBU1QgWzI5XSBzdG9yZSB3aG9sZSBmaWxlcy5cIixcIklkZWFsbHksIENGUyB3b3VsZCBpbXBvc2UgcGVyLXB1Ymxpc2hlciBxdW90YXMgYmFzZWQgb24gcmVsaWFibGUgaWRlbnRpZmljYXRpb24gb2YgcHVibGlzaGVycywgYXMgaXMgZG9uZSBpbiB0aGUgUEFTVCBzeXN0ZW0gWzI5XS5cIl0sXCIyMTQzMzUxNTAwXCI6W1wiQ0ZTIGF1dGhlbnRpY2F0ZXMgZGF0YSBieSBuYW1pbmcgaXQgd2l0aCBwdWJsaWMga2V5cyBvciBjb250ZW50aGFzaGVzLCBhcyBkbyBtYW55IG90aGVyIGRpc3RyaWJ1dGVkIHN0b3JhZ2Ugc3lzdGVtcyBbOSwgNiwgNywgMTMsIDI5LCAzNF0uXCIsXCJDRlMgYWRvcHRzIG5hbWluZywgYXV0aGVudGljYXRpb24sIGFuZCBmaWxlIHN5c3RlbSBzdHJ1Y3R1cmUgaWRlYXMgZnJvbSBTRlNSTyBbOV0sIHdoaWNoIGltcGxlbWVudHMgYSBzZWN1cmUgZGlzdHJpYnV0ZWQgcmVhZG9ubHkgZmlsZSBzeXN0ZW3igJR0aGF0IGlzLCBhIGZpbGUgc3lzdGVtIGluIHdoaWNoIGZpbGVzIGNhbiBiZSBtb2RpZmllZCBvbmx5IGJ5IHRoZWlyIG93bmVyLCBhbmQgb25seSB0aHJvdWdoIGNvbXBsZXRlIHJlcGxhY2VtZW50IG9mIHRoZSBmaWxlLlwiLFwiQSBjbGllbnQgY2FuIGNoZWNrIHRoZSBmcmVzaG5lc3Mgb2YgYSBjYWNoZWQgcm9vdCBibG9jayBbOV0gdG8gZGVjaWRlIHdoZXRoZXIgdG8gbG9vayBmb3IgYSBuZXdlciB2ZXJzaW9uLlwiXSxcIjIxNDQ1NTMwNzhcIjpbXCJUaGUgbWFjaGluZXMgYXJlIHBhcnQgb2YgdGhlIFJPTiB0ZXN0YmVkIFsyXTsgOSBvZiB0aGVtIGFyZSBhdCBzaXRlcyBzcHJlYWQgb3ZlciB0aGUgVW5pdGVkIFN0YXRlcywgYW5kIHRoZSBvdGhlciB0aHJlZSBhcmUgaW4gdGhlIE5ldGhlcmxhbmRzLCBTd2VkZW4sIGFuZCBTb3V0aCBLb3JlYS5cIl0sXCIyMTU2NDM1NTQ5XCI6W1wiQ2FjaGUgUmVzb2x2ZXIgWzMwXSwgbGlrZSBDRlMsIHVzZXMgY29uc2lzdGVudCBoYXNoaW5nIHRvIGV2ZW5seSBtYXAgc3RvcmVkIGRhdGEgYW1vbmcgdGhlIHNlcnZlcnMgWzEyLCAxNF0uXCJdLFwiMjE1Nzc0MDAyMFwiOltcIlRoZXJlIGFyZSBzZXZlcmFsIHByb3Bvc2VkIHNjYWxhYmxlIGNvb3BlcmF0aXZlIFdlYiBjYWNoZXMgWzMsICA4ICwgMTAsIDE1XS5cIl0sXCIyMTU4MDQ5ODIxXCI6W1wiREhhc2ggdXNlcyB0aGUgQ2hvcmQgWzMxXSBkaXN0cmlidXRlZCBsb29rdXAgc3lzdGVtIHRvIGxvY2F0ZSB0aGUgc2VydmVycyByZXNwb25zaWJsZSBmb3IgYSBibG9jay5cIixcIkEgZGV0YWlsZWQgY29tcGFyaXNvbiBvZiB0aGVzZSBhbGdvcml0aG1zIGNhbiBiZSBmb3VuZCBpbiBbMzFdLlwiLFwiQ0ZTIHVzZXMgdGhlIENob3JkIHByb3RvY29sIHRvIGxvY2F0ZSBibG9ja3MgWzMxXS5cIixcIlRoZSBzdGFiaWxpemF0aW9uIHByb2NlZHVyZSBkZXNjcmliZWQgaW4gWzMxXSBkb2VzIHRoaXMgaW4gYSB3YXkgdGhhdCBndWFyYW50ZWVzIHRvIHByZXNlcnZlIHRoZSBjb25uZWN0aXZpdHkgb2YgdGhlIENob3JkIHJpbmfigJlzIHN1Y2Nlc3NvciBwb2ludGVycy5cIixcIlRoZSBudW1iZXIgb2YgUlBDcyByZXF1aXJlZCBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBudW1iZXIgb2YgYml0cyBpbiB3aGljaCB0aGUgb3JpZ2luYXRpbmcgc2VydmVy4oCZcyBJRCBhbmQgdGhlIGRlc2lyZWQgYmxvY2vigJlzIElEIGRpZmZlciBbMzFdOyB0aGlzIHdpbGwgYXZlcmFnZSBhYm91dCBoYWxmIG9mIHRoZSBiaXRzLCB3aGljaCBhY2NvdW50cyBmb3IgdGhlIDEgMiAuXCIsXCJXZSBleHBlY3QgdGhhdCBPKGxvZyhOKSkgdmlydHVhbCBzZXJ2ZXJzIHBlciBwaHlzaWNhbCBzZXJ2ZXIgd2lsbCBiZSBzdWZmaWNpZW50IHRvIGJhbGFuY2UgdGhlIGxvYWQgcmVhc29uYWJseSB3ZWxsIFszMV0uXCJdLFwiMjE2MzA1OTE5MFwiOltcIkNGUyB1c2VzIHBlZXItdG8tcGVlciBkaXN0cmlidXRlZCBoYXNoaW5nIHNpbWlsYXIgaW4gc3Bpcml0IHRvIGEgbnVtYmVyIG9mIG9uZ29pbmcgcmVzZWFyY2ggcHJvamVjdHMgWzI2LCAyOSwgMzVdLlwiLFwibGFyIGFwcHJvYWNoZXMgd2l0aCBzaW1pbGFyIHNjYWxhYmlsaXR5IGFuZCBwZXJmb3JtYW5jZSwgaW5jbHVkaW5nIENBTiBbMjZdLCBQQVNUIFsyOCwgMjldLCBPY2VhblN0b3JlIFsxMywgMzVdLCBhbmQgT2hhaGEgWzIyXS5cIl0sXCIyMTYzNTk4NjkwXCI6W1wiQ0ZTIGF1dGhlbnRpY2F0ZXMgZGF0YSBieSBuYW1pbmcgaXQgd2l0aCBwdWJsaWMga2V5cyBvciBjb250ZW50aGFzaGVzLCBhcyBkbyBtYW55IG90aGVyIGRpc3RyaWJ1dGVkIHN0b3JhZ2Ugc3lzdGVtcyBbOSwgNiwgNywgMTMsIDI5LCAzNF0uXCIsXCJMaWtlIEZyZWVuZXQsIFB1YmxpdXMgWzM0XSBmb2N1c2VzIG9uIGFub255bWl0eSwgYnV0IGFjaGlldmVzIGl0IHdpdGggZW5jcnlwdGlvbiBhbmQgc2VjcmV0IHNoYXJpbmcgcmF0aGVyIHRoYW4gcm91dGluZy5cIl0sXCIyMTY3ODk4NDE0XCI6W1wibGFyIGFwcHJvYWNoZXMgd2l0aCBzaW1pbGFyIHNjYWxhYmlsaXR5IGFuZCBwZXJmb3JtYW5jZSwgaW5jbHVkaW5nIENBTiBbMjZdLCBQQVNUIFsyOCwgMjldLCBPY2VhblN0b3JlIFsxMywgMzVdLCBhbmQgT2hhaGEgWzIyXS5cIl0sXCIyMTY4NjI0NDU4XCI6W1wiQ0ZTIGhhcyBiZWVuIGltcGxlbWVudGVkIHVzaW5nIHRoZSBTRlMgdG9vbGtpdCBbMTZdLlwiLFwiVURQIHdpdGggYSBDKysgUlBDIHBhY2thZ2UgcHJvdmlkZWQgYnkgdGhlIFNGUyB0b29sa2l0IFsxNl0uXCIsXCJDRlMgZXhwb3J0cyBhbiBvcmRpbmFyeSBVTklYIGZpbGUgc3lzdGVtIGludGVyZmFjZSBieSBhY3RpbmcgYXMgYSBsb2NhbCBORlMgc2VydmVyIHVzaW5nIHRoZSBTRlMgdXNlciBsZXZlbCBmaWxlIHN5c3RlbSB0b29sa2l0IFsxNl0uXCJdLFwiMjE3NDUwNzg2OVwiOltcIkV4aXN0aW5nIHBlZXItdG8tcGVlciBzeXN0ZW1zIChzdWNoIGFzIE5hcHN0ZXIgWzIwXSwgR251dGVsbGEgWzExXSwgYW5kIEZyZWVuZXQgWzZdKSBkZW1vbnN0cmF0ZSB0aGUgYmVuZWZpdHMgb2YgY29vcGVyYXRpdmUgc3RvcmFnZSBhbmQgc2VydmluZzogZmF1bHQgdG9sZXJhbmNlLCBsb2FkIGJhbGFuY2UsIGFuZCB0aGUgYWJpbGl0eSB0byBoYXJuZXNzIGlkbGUgc3RvcmFnZSBhbmQgbmV0d29yayByZXNvdXJjZXMuXCIsXCJDRlMgd2FzIGluc3BpcmVkIGJ5IE5hcHN0ZXIgWzIwXSwgR251dGVsbGEgWzExXSwgYW5kIHBhcnRpY3VsYXJseSBGcmVlbmV0IFs2XS5cIixcIkNGUyBhdXRoZW50aWNhdGVzIGRhdGEgYnkgbmFtaW5nIGl0IHdpdGggcHVibGljIGtleXMgb3IgY29udGVudGhhc2hlcywgYXMgZG8gbWFueSBvdGhlciBkaXN0cmlidXRlZCBzdG9yYWdlIHN5c3RlbXMgWzksIDYsIDcsIDEzLCAyOSwgMzRdLlwiLFwiU3lzdGVtcyBzdWNoIGFzIEZyZWVuZXQgWzZdIGFuZCBQQVNUIFsyOV0gc3RvcmUgd2hvbGUgZmlsZXMuXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDIxNTgwNDk4MjEsMjEyMzgyMDgyMCwyMTA0MjEwODk0LDE2NTA2NzU1MDksMjE3NDUwNzg2OSwyMTE5MjQ1MTA2LDIwMjA3NjU2NTIsMjA1NjM2MzM1MywyMTIxMTMzMTc3LDIxMjM0ODI0NjIsMjA3MTk1ODY1NSwxOTU3NTgyNTkwLDIwMDA4NzYwMjMsMjE2MjczMzY3NywyMTE1NTk5OTQ2LDE2MDAzMjg0MTAsMjExOTU2NTc0MiwyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDIxMjM4MjA4MjAsMjEwNDIxMDg5NCwxNjUwNjc1NTA5LDIxNzQ1MDc4NjksMjExOTI0NTEwNiwyMDIwNzY1NjUyLDIwNTYzNjMzNTMsMjEyMTEzMzE3NywyMTIzNDgyNDYyLDIwNzE5NTg2NTUsMTk1NzU4MjU5MCwyMDAwODc2MDIzLDIxNjI3MzM2NzcsMjExNTU5OTk0NiwxNjAwMzI4NDEwLDIxMTk1NjU3NDJdLFwiQU5GXCI6W3tcIkZOXCI6XCJGcmFua1wiLFwiTE5cIjpcIkRhYmVrXCIsXCJTXCI6MX0se1wiRk5cIjpcIk0uIEZyYW5zXCIsXCJMTlwiOlwiS2Fhc2hvZWtcIixcIlNcIjoyfSx7XCJGTlwiOlwiRGF2aWQgUi5cIixcIkxOXCI6XCJLYXJnZXJcIixcIlNcIjozfSx7XCJGTlwiOlwiUm9iZXJ0IFRhcHBhblwiLFwiTE5cIjpcIk1vcnJpc1wiLFwiU1wiOjR9LHtcIkZOXCI6XCJJb25cIixcIkxOXCI6XCJTdG9pY2FcIixcIlNcIjo1fV0sXCJCVlwiOlwiUHJvY2VlZGluZ3Mgb2YgdGhlIGVpZ2h0ZWVudGggQUNNIHN5bXBvc2l1bSBvbiBPcGVyYXRpbmcgc3lzdGVtcyBwcmluY2lwbGVzXCIsXCJCVFwiOlwicFwiLFwiUEJcIjpcIkFDTVwifSJ9LHsibG9ncHJvYiI6LTE2LjI2Mywia2VzRW50aXR5SWQiOjE0NDcxMDksIklkIjoxNjYzNDkzNjQ5LCJUaSI6ImZyZWVuZXQgYSBkaXN0cmlidXRlZCBhbm9ueW1vdXMgaW5mb3JtYXRpb24gc3RvcmFnZSBhbmQgcmV0cmlldmFsIHN5c3RlbSIsIlkiOjIwMDAsIkQiOiIyMDAwLTAxLTAxIiwiQ0MiOjE5NTYsIlJJZCI6WzIxMTIwOTA3MDIsMjA2NTc2OTUwMiwyMDczMzQ2MDQzLDE2NDM0MTI5NzEsMTkxNjcwOTc3MSwxNTgwMDA0NDQwLDIxNjM1OTg2OTAsMjEwMzY0NzYyOCw3NDQ0OTQ3MywyMDY0MzYwNTQzLDE1Njg4OTMzOTIsMTU2MjE5OTk2MiwxNTkwNzY1NzMxLDIwMDkxNzI4MTUsMTk3MzI2NDA1Myw0MTY3ODc4MCwxNTczNTc5MzI5LDE3ODE3Mzg5OSwxNjU5NDA3NDJdLCJBQSI6W3siQXVOIjoiaWFuIGNsYXJrZSJ9LHsiQXVOIjoib3NrYXIgc2FuZGJlcmcifSx7IkF1TiI6ImJyYW5kb24gd2lsZXkifSx7IkF1TiI6InRoZW9kb3JlIHcgaG9uZyJ9XSwiRiI6W3siRk4iOiJpbmRleGF0aW9uIn0seyJGTiI6ImludGVybmV0IHByaXZhY3kifSx7IkZOIjoid29ybGQgd2lkZSB3ZWIifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJGcmVlbmV0IDogQSBEaXN0cmlidXRlZCBBbm9ueW1vdXMgSW5mb3JtYXRpb24gU3RvcmFnZSBhbmQgUmV0cmlldmFsIFN5c3RlbVwiLFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY3MuYnJvd24uZWR1L2NvdXJzZXMvY3MyNTMvcGFwZXJzL0ZyZWVuZXQtMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy51aW93YS5lZHUvJTdFZ2hvc2gvZnJlZW5ldC5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvZGlhdS9kaWF1MjAwMC5odG1sI0NsYXJrZVNXSDAwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9jaS5uaWkuYWMuanAvbmFpZC8xMDAxNDk2MjY1M1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vd3d3Lmxpc3QuY3MuYnJvd24uZWR1L2NvdXJzZXMvY3NjaTI1MzEvcGFwZXJzL2ZyZWVuZXQtMS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kub3JnLzEwLjEwMDcvMy01NDAtNDQ3MDItNF80XCJ9XSxcIlZGTlwiOlwiSUNTSSB3b3Jrc2hvcCBvbiBEZXNpZ24gSXNzdWVzIGluIEFub255bWl0eSBhbmQgVW5vYnNldmFiaWxpdHksIEp1bHkgMjAwMFwiLFwiRlBcIjo0NixcIkxQXCI6NjYsXCJDQ1wiOntcIjQxNjc4NzgwXCI6W1wiQmVjYXVzZSBvZiBhIGNvbnRpbnVlZCBkZXNpcmUgYW1vbmcgaW5kaXZpZHVhbHMgdG8gcHJvdGVjdCB0aGUgcHJpdmFjeSBvZiB0aGVpciBhdXRob3JzaGlwIG9yIHJlYWRlcnNoaXAgb2YgdmFyaW91cyB0eXBlcyBvZiBzZW5zaXRpdmUgaW5mb3JtYXRpb25bMjhdLCBhbmQgdGhlIHVuZGVzaXJhYmlsaXR5IG9mIGNlbnRyYWwgcG9pbnRzIG9mIGZhaWx1cmUgd2hpY2ggY2FuIGJlIGF0dGFja2VkIGJ5IG9wcG9uZW50cyB3aXNoaW5nIHRvIHJlbW92ZSBkYXRhIGZyb20gdGhlIHN5c3RlbVsxMSwgMjddIG9yIHNpbXBseSBvdmVybG9hZGVkIGJ5IHRvbyBtdWNoIGludGVyZXN0WyAxIF0sIHN5c3RlbXMgb2ZmZXJpbmcgZ3JlYXRlciBzZWN1cml0eSBhbmQgcmVsaWFiaWxpdHkgYXJlIG5lZWRlZC5cIl0sXCI3NDQ0OTQ3M1wiOltcIkl0IGdyZXcgb3V0IG9mIHdvcmsgb3JpZ2luYWxseSBkb25lIGJ5IHRoZSBmaXJzdCBhdXRob3IgYXQgdGhlIFVuaXZlcnNpdHkgb2YgRWRpbmJ1cmdoWyAxMiBdLlwiXSxcIjE2NTk0MDc0MlwiOltcIkFub255bW91cyBwb2ludC10by1wb2ludCBjaGFubmVscyBiYXNlZCBvbiBDaGF1beKAmXMgbWl4LW5ldCBzY2hlbWVbOF0gaGF2ZSBiZWVuIGltcGxlbWVudGVkIGZvciBlbWFpbCBieSB0aGUgTWl4bWFzdGVyIHJlbWFpbGVyWyAxMyBdIGFuZCBmb3IgZ2VuZXJhbCBUQ1AvSVAgdHJhZmZpYyBieSBvbmlvbiByb3V0aW5nWzE5XSBhbmQgRnJlZWRvbVszMl0uXCJdLFwiMTc4MTczODk5XCI6W1wiQmVjYXVzZSBvZiBhIGNvbnRpbnVlZCBkZXNpcmUgYW1vbmcgaW5kaXZpZHVhbHMgdG8gcHJvdGVjdCB0aGUgcHJpdmFjeSBvZiB0aGVpciBhdXRob3JzaGlwIG9yIHJlYWRlcnNoaXAgb2YgdmFyaW91cyB0eXBlcyBvZiBzZW5zaXRpdmUgaW5mb3JtYXRpb25bMjhdLCBhbmQgdGhlIHVuZGVzaXJhYmlsaXR5IG9mIGNlbnRyYWwgcG9pbnRzIG9mIGZhaWx1cmUgd2hpY2ggY2FuIGJlIGF0dGFja2VkIGJ5IG9wcG9uZW50cyB3aXNoaW5nIHRvIHJlbW92ZSBkYXRhIGZyb20gdGhlIHN5c3RlbVsxMSwgIDI3IF0gb3Igc2ltcGx5IG92ZXJsb2FkZWQgYnkgdG9vIG11Y2ggaW50ZXJlc3RbMV0sIHN5c3RlbXMgb2ZmZXJpbmcgZ3JlYXRlciBzZWN1cml0eSBhbmQgcmVsaWFiaWxpdHkgYXJlIG5lZWRlZC5cIl0sXCIxNTYyMTk5OTYyXCI6W1wiQW5vbnltb3VzIHBvaW50LXRvLXBvaW50IGNoYW5uZWxzIGJhc2VkIG9uIENoYXVt4oCZcyBtaXgtbmV0IHNjaGVtZVs4XSBoYXZlIGJlZW4gaW1wbGVtZW50ZWQgZm9yIGVtYWlsIGJ5IHRoZSBNaXhtYXN0ZXIgcmVtYWlsZXJbMTNdIGFuZCBmb3IgZ2VuZXJhbCBUQ1AvSVAgdHJhZmZpYyBieSBvbmlvbiByb3V0aW5nWyAxOSBdIGFuZCBGcmVlZG9tWzMyXS5cIl0sXCIxNTY4ODkzMzkyXCI6W1wiVGhlIHNjYWxhYmlsaXR5IGFuZCBmYXVsdC10b2xlcmFuY2UgY2hhcmFjdGVyaXN0aWNzIG9mIEZyZWVuZXQgY2FuIGJlIGV4cGxhaW5lZCBpbiB0ZXJtcyBvZiBhIHNtYWxsLXdvcmxkIG5ldHdvcmsgbW9kZWxbMjMsIDMxLCAgMjIgLCAzXS4gSW4gYSBzbWFsbC13b3JsZCBuZXR3b3JrLCB0aGUgbWFqb3JpdHkgb2Ygbm9kZXMgaGF2ZSBvbmx5IHJlbGF0aXZlbHkgZmV3LCBsb2NhbCwgY29ubmVjdGlvbnMgdG8gb3RoZXIgbm9kZXMsIHdoaWxlIGEgc21hbGwgbnVtYmVyIG9mIG5vZGVzIGhhdmUgbGFyZ2UsIHdpZGUtcmFuZ2luZyBzZXRzIG9mIGNvbm5lY3Rpb25zLlwiXSxcIjE1NzM1NzkzMjlcIjpbXCJUaGUgc2NhbGFiaWxpdHkgYW5kIGZhdWx0LXRvbGVyYW5jZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgRnJlZW5ldCBjYW4gYmUgZXhwbGFpbmVkIGluIHRlcm1zIG9mIGEgc21hbGwtd29ybGQgbmV0d29yayBtb2RlbFsgMjMgLCAzMSwgMjIsIDNdLiBJbiBhIHNtYWxsLXdvcmxkIG5ldHdvcmssIHRoZSBtYWpvcml0eSBvZiBub2RlcyBoYXZlIG9ubHkgcmVsYXRpdmVseSBmZXcsIGxvY2FsLCBjb25uZWN0aW9ucyB0byBvdGhlciBub2Rlcywgd2hpbGUgYSBzbWFsbCBudW1iZXIgb2Ygbm9kZXMgaGF2ZSBsYXJnZSwgd2lkZS1yYW5naW5nIHNldHMgb2YgY29ubmVjdGlvbnMuXFx1MDAxYmV4YW1pbmF0aW9uIG9mIE1pbGdyYW3igJlzIGxldHRlci1wYXNzaW5nIGV4cGVyaW1lbnRbIDIzIF0gYW5kIHRoZSBFcmTCqCBvcyBudW1iZXIgZ2FtZSBjaXRlZCBieSBXYXR0cyBhbmQgU3Ryb2dhdHpbMzFdLlwiXSxcIjE1ODAwMDQ0NDBcIjpbXCJGcmVlIEhhdmVuWyAxNCBdIGlzIGFuIGludGVyZXN0aW5nIGFub255bW91cyBwdWJsaWNhdGlvbiBzeXN0ZW0gdGhhdCB1c2VzIGEgdHJ1c3QgbmV0d29yayBhbmQgZmlsZSB0cmFkaW5nIG1lY2hhbmlzbSB0byBwcm92aWRlIGdyZWF0ZXIgc2VydmVyIGFjY291bnRhYmlsaXR5IHdoaWxlIG1haW50YWluaW5nIGFub255bWl0eS5cIl0sXCIxOTE2NzA5NzcxXCI6W1wiTm9kZSBzdG9yYWdlIGlzIG1hbmFnZWQgYXMgYW4gTFJVIChMZWFzdCBSZWNlbnRseSBVc2VkKSBjYWNoZVsgMjkgXSBpbiB3aGljaCBkYXRhIGl0ZW1zIGFyZSBrZXB0IHNvcnRlZCBpbiBkZWNyZWFzaW5nIG9yZGVyIGJ5IHRpbWUgb2YgbW9zdCByZWNlbnQgcmVxdWVzdCAob3IgdGltZSBvZiBpbnNlcnQsIGlmIGFuIGl0ZW0gaGFzIG5ldmVyIGJlZW4gcmVxdWVzdGVkKS5cIl0sXCIxOTczMjY0MDUzXCI6W1wiVEFaWyAxOCBdIGV4dGVuZHMgdGhpcyBpZGVhIGJ5IHVzaW5nIGNoYWlucyBvZiBuZXN0ZWQgZW5jcnlwdGVkIFVSTHMgdGhhdCBzdWNjZXNzaXZlbHkgcG9pbnQgdG8gZGlmZmVyZW50IHJld2ViYmVyIHNlcnZlcnMgdG8gYmUgY29udGFjdGVkLCBhbHRob3VnaCB0aGlzIGlzIHZ1bG5lcmFibGUgdG8gdHJhZmZpYyBhbmFseXNpcyB1c2luZyByZXBsYXkuXCJdLFwiMjAwOTE3MjgxNVwiOltcIlRoZSBjbG9zZXN0IHdvcmsgdG8gb3VyIG93biBpcyBSZWl0ZXIgYW5kIFJ1Ymlu4oCZcyBDcm93ZHMgc3lzdGVtWyAyNSBdLCB3aGljaCB1c2VzIGEgc2ltaWxhciBtZXRob2Qgb2YgcHJveHlpbmcgcmVxdWVzdHMgZm9yIGNvbnN1bWVycywgYWx0aG91Z2ggQ3Jvd2RzIGRvZXMgbm90IGl0c2VsZiBzdG9yZSBpbmZvcm1hdGlvbiBhbmQgZG9lcyBub3QgcHJvdGVjdCBpbmZvcm1hdGlvbiBwcm9kdWNlcnMuXFx1MDAxYlJlaXRlciBhbmQgUnViaW5bIDI1IF0gcHJlc2VudCBhIHVzZWZ1bCB0YXhvbm9teSBvZiBhbm9ueW1vdXMgY29tbXVuaWNhdGlvbiBwcm9wZXJ0aWVzIG9uIHRocmVlIGF4ZXMuXFx1MDAxYkFnYWluc3QgYSBjb2xsYWJvcmF0aW9uIG9mIG1hbGljaW91cyBub2Rlcywgc2VuZGVyIGFub255bWl0eSBpcyBwcmVzZXJ2ZWQgYmV5b25kIHN1c3BpY2lvbiBzaW5jZSBhIG5vZGUgaW4gYSByZXF1ZXN0IHBhdGggY2Fubm90IHRlbGwgd2hldGhlciBpdHMgcHJlZGVjZXNzb3IgaW4gdGhlIHBhdGggaW5pdGlhdGVkIHRoZSByZXF1ZXN0IG9yIGlzIG1lcmVseSBmb3J3YXJkaW5nIGl0LiBbIDI1IF0gZGVzY3JpYmVzIGEgcHJvYmFiaWxpc3RpYyBhdHRhY2sgd2hpY2ggbWlnaHQgY29tcHJvbWlzZSBzZW5kZXIgYW5vbnltaXR5LCB1c2luZyBhIHN0YXRpc3RpY2FsIGFuYWx5c2lzIG9mIHRoZSBwcm9iYWJpbGl0eSB0aGF0IGEgcmVxdWVzdCBhcnJpdmluZyBhdCBhIG5vZGUgYSBpcyBmb3J3YXJkZWQgb24gb3IgaGFuZGxlZCBkaXJlY3RseSwgYW5kIHRoZSBwcm9iYWJpbGl0eSAuLi5cIl0sXCIyMDY0MzYwNTQzXCI6W1wiSW50ZXJtZW1vcnlbIDkgXSBhbmQgSW5kaWFbMTZdIGFyZSBjb29wZXJhdGl2ZSBkaXN0cmlidXRlZCBmaWxlc2VydmVyIHN5c3RlbXMgaW50ZW5kZWQgZm9yIGxvbmctdGVybSBhcmNoaXZhbCBzdG9yYWdlIGFsb25nIHRoZSBsaW5lcyBvZiBFdGVybml0eSwgaW4gd2hpY2ggZmlsZXMgYXJlIHNwbGl0IGludG8gcmVkdW5kYW50IHNoYXJlcyBhbmQgZGlzdHJpYnV0ZWQgYW1vbmcgbWFueSBwYXJ0aWNpcGFudHMuXCJdLFwiMjA2NTc2OTUwMlwiOltcIlRoZSBzY2FsYWJpbGl0eSBhbmQgZmF1bHQtdG9sZXJhbmNlIGNoYXJhY3RlcmlzdGljcyBvZiBGcmVlbmV0IGNhbiBiZSBleHBsYWluZWQgaW4gdGVybXMgb2YgYSBzbWFsbC13b3JsZCBuZXR3b3JrIG1vZGVsWzIzLCAzMSwgMjIsICAzIF0uIEluIGEgc21hbGwtd29ybGQgbmV0d29yaywgdGhlIG1ham9yaXR5IG9mIG5vZGVzIGhhdmUgb25seSByZWxhdGl2ZWx5IGZldywgbG9jYWwsIGNvbm5lY3Rpb25zIHRvIG90aGVyIG5vZGVzLCB3aGlsZSBhIHNtYWxsIG51bWJlciBvZiBub2RlcyBoYXZlIGxhcmdlLCB3aWRlLXJhbmdpbmcgc2V0cyBvZiBjb25uZWN0aW9ucy5cIl0sXCIyMDczMzQ2MDQzXCI6W1wiUHJpdmF0ZSBpbmZvcm1hdGlvbiByZXRyaWV2YWwgc2NoZW1lc1sgMTAgXSBwcm92aWRlIG11Y2ggc3Ryb25nZXIgZ3VhcmFudGVlcyBmb3IgaW5mb3JtYXRpb24gY29uc3VtZXJzLCBidXQgb25seSB0byB0aGUgZXh0ZW50IG9mIGhpZGluZyB3aGljaCBwaWVjZSBvZiBpbmZvcm1hdGlvbiB3YXMgcmV0cmlldmVkIGZyb20gYSBwYXJ0aWN1bGFyIHNlcnZlci5cIl0sXCIyMTAzNjQ3NjI4XCI6W1wiQW5vbnltb3VzIHBvaW50LXRvLXBvaW50IGNoYW5uZWxzIGJhc2VkIG9uIENoYXVt4oCZcyBtaXgtbmV0IHNjaGVtZVsgOCBdIGhhdmUgYmVlbiBpbXBsZW1lbnRlZCBmb3IgZW1haWwgYnkgdGhlIE1peG1hc3RlciByZW1haWxlclsxM10gYW5kIGZvciBnZW5lcmFsIFRDUC9JUCB0cmFmZmljIGJ5IG9uaW9uIHJvdXRpbmdbMTldIGFuZCBGcmVlZG9tWzMyXS5cIl0sXCIyMTEyMDkwNzAyXCI6W1wiVGhlIHNjYWxhYmlsaXR5IGFuZCBmYXVsdC10b2xlcmFuY2UgY2hhcmFjdGVyaXN0aWNzIG9mIEZyZWVuZXQgY2FuIGJlIGV4cGxhaW5lZCBpbiB0ZXJtcyBvZiBhIHNtYWxsLXdvcmxkIG5ldHdvcmsgbW9kZWxbMjMsICAzMSAsIDIyLCAzXS4gSW4gYSBzbWFsbC13b3JsZCBuZXR3b3JrLCB0aGUgbWFqb3JpdHkgb2Ygbm9kZXMgaGF2ZSBvbmx5IHJlbGF0aXZlbHkgZmV3LCBsb2NhbCwgY29ubmVjdGlvbnMgdG8gb3RoZXIgbm9kZXMsIHdoaWxlIGEgc21hbGwgbnVtYmVyIG9mIG5vZGVzIGhhdmUgbGFyZ2UsIHdpZGUtcmFuZ2luZyBzZXRzIG9mIGNvbm5lY3Rpb25zLlxcdTAwMWJleGFtaW5hdGlvbiBvZiBNaWxncmFt4oCZcyBsZXR0ZXItcGFzc2luZyBleHBlcmltZW50WzIzXSBhbmQgdGhlIEVyZMKoIG9zIG51bWJlciBnYW1lIGNpdGVkIGJ5IFdhdHRzIGFuZCBTdHJvZ2F0elsgMzEgXS5cIl0sXCIyMTYzNTk4NjkwXCI6W1wiUHVibGl1c1sgMzAgXSBlbmhhbmNlcyBhdmFpbGFiaWxpdHkgYnkgZGlzdHJpYnV0aW5nIGZpbGVzIGFzIHJlZHVuZGFudCBzaGFyZXMgYW1vbmcgbiB3ZWJzZXJ2ZXJzLCBvbmx5IGsgb2Ygd2hpY2ggYXJlIG5lZWRlZCB0byByZWNvbnN0cnVjdCBhIGZpbGU7IGhvd2V2ZXIsIHNpbmNlIHRoZSBpZGVudGl0eSBvZiB0aGUgc2VydmVycyB0aGVtc2VsdmVzIGlzIG5vdCBhbm9ueW1pemVkLCBhbiBhdHRhY2tlciBtaWdodCByZW1vdmUgaW5mb3JtYXRpb24gYnkgZm9yY2luZyB0aGUgY2xvc3VyZSBvZiBu4oCTaysxIHNlcnZlcnMuXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMjE2MzA1OTE5MCwyMTY3ODk4NDE0LDIxNTgwNDk4MjEsMjEwNDIxMDg5NCwxNjUwNjc1NTA5LDIxNTA2NzY1ODYsMjEyMzgyMDgyMCwyMTAzNjQ3NjI4LDIxMTkyNDUxMDYsMTk3ODg4NDc1NSwyMDA3MjE5MzA0LDE1ODAwMDQ0NDAsMTY1NTk1ODM5MSwyMDU2MzYzMzUzLDIxMjM0ODI0NjIsMjE2MzU5ODY5MCwyMDAwODc2MDIzLDIwNzkwNDE1ODAsMTUyMDkxNDk0MywyMTE4NDI4MTkzLDIxNjMwNTkxOTAsMjE2Nzg5ODQxNCwyMTU4MDQ5ODIxLDIxMDQyMTA4OTQsMTY1MDY3NTUwOSwyMTUwNjc2NTg2LDIxMjM4MjA4MjAsMjEwMzY0NzYyOCwyMTE5MjQ1MTA2LDE5Nzg4ODQ3NTUsMjAwNzIxOTMwNCwxNTgwMDA0NDQwLDE2NTU5NTgzOTEsMjA1NjM2MzM1MywyMTIzNDgyNDYyLDIxNjM1OTg2OTAsMjAwMDg3NjAyMywyMDc5MDQxNTgwLDE1MjA5MTQ5NDNdLFwiQU5GXCI6W3tcIkZOXCI6XCJJYW5cIixcIkxOXCI6XCJDbGFya2VcIixcIlNcIjoxfSx7XCJGTlwiOlwiT3NrYXJcIixcIkxOXCI6XCJTYW5kYmVyZ1wiLFwiU1wiOjJ9LHtcIkZOXCI6XCJCcmFuZG9uXCIsXCJMTlwiOlwiV2lsZXlcIixcIlNcIjozfSx7XCJGTlwiOlwiVGhlb2RvcmUgVy5cIixcIkxOXCI6XCJIb25nXCIsXCJTXCI6NH1dLFwiQlZcIjpcIklDU0kgd29ya3Nob3Agb24gRGVzaWduIElzc3VlcyBpbiBBbm9ueW1pdHkgYW5kIFVub2JzZXZhYmlsaXR5LCBKdWx5IDIwMDBcIixcIkJUXCI6XCJhXCJ9In0seyJsb2dwcm9iIjotMTYuNDkxLCJrZXNFbnRpdHlJZCI6MTgwNzg4MiwiSWQiOjE1ODQ2MzU0NTksIlRpIjoidGFwZXN0cnkgYW4gaW5mcmFzdHJ1Y3R1cmUgZm9yIGZhdWx0IHRvbGVyYW50IHdpZGUgYXJlYSBsb2NhdGlvbiBhbmQiLCJZIjoyMDAxLCJEIjoiMjAwMS0wNC0wNCIsIkNDIjo5ODgsIkFBIjpbeyJBdU4iOiJiZW4geSB6aGFvIn0seyJBdU4iOiJqb2huIGt1YmlhdG93aWN6In0seyJBdU4iOiJhbnRob255IGQgam9zZXBoIn1dLCJGIjpbeyJGTiI6InNvZnQgc3RhdGUifSx7IkZOIjoiZGlyZWN0b3J5In0seyJGTiI6ImxvY2FsaXR5In0seyJGTiI6Im92ZXJsYXkifSx7IkZOIjoiZHVyYWJpbGl0eSJ9LHsiRk4iOiJhcmNoaXRlY3R1cmUifSx7IkZOIjoiZmF1bHQgdG9sZXJhbmNlIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJlbmdpbmVlcmluZyJ9XSwiRSI6IntcIkROXCI6XCJUYXBlc3RyeTogQW4gSW5mcmFzdHJ1Y3R1cmUgZm9yIEZhdWx0LXRvbGVyYW50IFdpZGUtYXJlYSBMb2NhdGlvbiBhbmRcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxMTksXCJJbnZlcnRlZEluZGV4XCI6e1wiSW5cIjpbMF0sXCJ0b2RheScnc1wiOlsxXSxcImNoYW90aWNcIjpbMl0sXCJuZXR3b3JrLFwiOlszXSxcImRhdGFcIjpbNF0sXCJhbmRcIjpbNSw5LDE1LDI0LDM0LDUxLDc0LDgwLDkwLDk3LDEwNiwxMTBdLFwic2VydmljZXNcIjpbNl0sXCJhcmVcIjpbN10sXCJtb2JpbGVcIjpbOF0sXCJyZXBsaWNhdGVkXCI6WzEwXSxcIndpZGVseVwiOlsxMV0sXCJmb3JcIjpbMTJdLFwiYXZhaWxhYmlsaXR5LFwiOlsxM10sXCJkdXJhYmlsaXR5LFwiOlsxNF0sXCJsb2NhbGl0eS5cIjpbMTZdLFwiQ29tcG9uZW50c1wiOlsxN10sXCJ3aXRoaW5cIjpbMTgsODNdLFwidGhpc1wiOlsxOSw4NF0sXCJpbmZyYXN0cnVjdHVyZVwiOlsyMCw1Myw4NV0sXCJpbnRlcmFjdFwiOlsyMV0sXCJpblwiOlsyMl0sXCJyaWNoXCI6WzIzXSxcImNvbXBsZXhcIjpbMjVdLFwid2F5cyxcIjpbMjZdLFwiZ3JlYXRseVwiOlsyN10sXCJzdHJlc3NpbmdcIjpbMjhdLFwidHJhZGl0aW9uYWxcIjpbMjksNDJdLFwiYXBwcm9hY2hlc1wiOlszMCw0M10sXCJ0b1wiOlszMSw0MSw2MV0sXCJuYW1lXCI6WzMyXSxcInNlcnZpY2VcIjpbMzMsNjldLFwicm91dGluZy5cIjpbMzVdLFwiVGhpc1wiOlszNiwxMDFdLFwicGFwZXJcIjpbMzcsMTAyXSxcImV4cGxvcmVzXCI6WzM4LDExMV0sXCJhblwiOlszOSw0OCw2Nl0sXCJhbHRlcm5hdGl2ZVwiOls0MF0sXCJjYWxsZWRcIjpbNDRdLFwiVGFwZXN0cnkuXCI6WzQ1XSxcIlRhcGVzdHJ5XCI6WzQ2LDkzLDEwOV0sXCJpc1wiOls0Nyw4Niw5NF0sXCJvdmVybGF5XCI6WzQ5XSxcImxvY2F0aW9uXCI6WzUwXSxcInJvdXRpbmdcIjpbNTIsNTcsNzldLFwidGhhdFwiOls1NF0sXCJwcm92aWRlc1wiOls1NV0sXCJsb2NhdGlvbi1pbmRlcGVuZGVudFwiOls1Nl0sXCJvZlwiOls1OCw2NSwxMDgsMTE3XSxcIm1lc3NhZ2VzXCI6WzU5XSxcImRpcmVjdGx5XCI6WzYwXSxcInRoZVwiOls2MiwxMDRdLFwiY2xvc2VzdFwiOls2M10sXCJjb3B5XCI6WzY0XSxcIm9iamVjdFwiOls2N10sXCJvclwiOls2OF0sXCJ1c2luZ1wiOls3MF0sXCJvbmx5XCI6WzcxXSxcInBvaW50LXRvLXBvaW50XCI6WzcyXSxcImxpbmtzXCI6WzczXSxcIndpdGhvdXRcIjpbNzVdLFwiY2VudHJhbGl6ZWRcIjpbNzZdLFwicmVzb3VyY2VzLlwiOls3N10sXCJUaGVcIjpbNzhdLFwiZGlyZWN0b3J5XCI6WzgxXSxcImluZm9ybWF0aW9uXCI6WzgyXSxcInB1cmVseVwiOls4N10sXCJzb2Z0XCI6Wzg4XSxcInN0YXRlXCI6Wzg5XSxcImVhc2lseVwiOls5MV0sXCJyZXBhaXJlZC5cIjpbOTJdLFwic2VsZi1hZG1pbmlzdGVyaW5nLFwiOls5NV0sXCJmYXVsdC10b2xlcmFudCxcIjpbOTZdLFwicmVzaWxpZW50XCI6Wzk4XSxcInVuZGVyXCI6Wzk5XSxcImxvYWQuXCI6WzEwMF0sXCJwcmVzZW50c1wiOlsxMDNdLFwiYXJjaGl0ZWN0dXJlXCI6WzEwNV0sXCJhbGdvcml0aG1zXCI6WzEwN10sXCJ0aGVpclwiOlsxMTJdLFwiYWR2YW50YWdlc1wiOlsxMTNdLFwidGhyb3VnaFwiOlsxMTRdLFwiYVwiOlsxMTVdLFwibnVtYmVyXCI6WzExNl0sXCJleHBlcmltZW50cy5cIjpbMTE4XX19LFwiU1wiOlt7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTg5NDExNlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTg5NDExNlwifV0sXCJWRk5cIjpcIlwiLFwiUFJcIjpbMjExODQyODE5MywxNjUwNjc1NTA5LDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDIwNTYzNjMzNTMsMjEwNDIxMDg5NCwyMTUwNjc2NTg2LDIwMDA4NzYwMjMsMjE3NDUwNzg2OSwyMTIzODIwODIwLDIwNTc0NTY0MjMsMjExOTI0NTEwNiwyMDA3MjE5MzA0LDIxNTY2NDQ1MDEsMjAyMDc2NTY1MiwxNjUwODAyMTgxLDE5NzA1NjQ3NzgsMTQ5MjU1MjUzMSwyMTY2NDU0OTE4LDIxMTg0MjgxOTMsMTY1MDY3NTUwOSwyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE1ODA0OTgyMSwyMDU2MzYzMzUzLDIxMDQyMTA4OTQsMjE1MDY3NjU4NiwyMDAwODc2MDIzLDIxNzQ1MDc4NjksMjEyMzgyMDgyMCwyMDU3NDU2NDIzLDIxMTkyNDUxMDYsMjAwNzIxOTMwNCwyMTU2NjQ0NTAxLDIwMjA3NjU2NTIsMTY1MDgwMjE4MSwxOTcwNTY0Nzc4LDE0OTI1NTI1MzEsMjE2NjQ1NDkxOF0sXCJBTkZcIjpbe1wiRk5cIjpcIkJlbiBZLlwiLFwiTE5cIjpcIlpoYW9cIixcIlNcIjoxfSx7XCJGTlwiOlwiSm9obiBELlwiLFwiTE5cIjpcIkt1YmlhdG93aWN6XCIsXCJTXCI6Mn0se1wiRk5cIjpcIkFudGhvbnkgRC5cIixcIkxOXCI6XCJKb3NlcGhcIixcIlNcIjozfV0sXCJCVFwiOlwiYVwiLFwiUEJcIjpcIlVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBhdCBCZXJrZWxleVwifSJ9LHsibG9ncHJvYiI6LTE2LjUzMiwia2VzRW50aXR5SWQiOjE4ODE0ODUsIklkIjoyMDIwNzY1NjUyLCJUaSI6ImNvbnNpc3RlbnQgaGFzaGluZyBhbmQgcmFuZG9tIHRyZWVzIGRpc3RyaWJ1dGVkIGNhY2hpbmcgcHJvdG9jb2xzIGZvciByZWxpZXZpbmcgaG90IHNwb3RzIG9uIHRoZSB3b3JsZCB3aWRlIHdlYiIsIlkiOjE5OTcsIkQiOiIxOTk3LTA1LTA0IiwiQ0MiOjI1NTMsIlJJZCI6WzIxNjk2MDAwMTMsMTUyNzk2MTY4MywyMDk3NTYyNzE1LDIwNTg5NzI1ODksMjAxMjY0Mzk1NSwxNTc1MzA0NTM5LDIwMjg5Mjg5MjIsMjE0MjAwOTgyNywyMDYzODQ0OTU2LDE3MjUxMjQ2MjAsMjA2MzczODQyNywxNTE2OTEzMjg0LDIwODY2MDQ0MTYsMjEwMzMzNjYwN10sIkFBIjpbeyJBdU4iOiJkYXZpZCByIGthcmdlciJ9LHsiQXVOIjoiZXJpYyBsZWhtYW4ifSx7IkF1TiI6InRvbSBsZWlnaHRvbiJ9LHsiQXVOIjoicmluYSBwYW5pZ3JhaHkifSx7IkF1TiI6Im1hdHRoZXcgcyBsZXZpbmUifSx7IkF1TiI6ImRhbmllbCBtIGxld2luIn1dLCJGIjpbeyJGTiI6ImNvbnNpc3RlbnQgaGFzaGluZyJ9LHsiRk4iOiJrb29yZGUifSx7IkZOIjoiY2hvcmQifSx7IkZOIjoibmFtZSBzZXJ2ZXIifSx7IkZOIjoiaGFzaCBmdW5jdGlvbiJ9LHsiRk4iOiJhcHByb3hpbWF0aW9uIGFsZ29yaXRobSJ9LHsiRk4iOiJjb21tdW5pY2F0aW9ucyBwcm90b2NvbCJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoiY29tYmluYXRvcmljcyJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJDb25zaXN0ZW50IGhhc2hpbmcgYW5kIHJhbmRvbSB0cmVlczogZGlzdHJpYnV0ZWQgY2FjaGluZyBwcm90b2NvbHMgZm9yIHJlbGlldmluZyBob3Qgc3BvdHMgb24gdGhlIFdvcmxkIFdpZGUgV2ViXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTk2LFwiSW52ZXJ0ZWRJbmRleFwiOntcIldlXCI6WzAsMTczXSxcImRlc2NyaWJlXCI6WzFdLFwiYVwiOlsyLDExNCwxMjYsMTY0XSxcImZhbWlseVwiOlszXSxcIm9mXCI6WzQsMjAsNjcsOTgsMTE3LDEzOCwxNDUsMTcwXSxcImNhY2hpbmdcIjpbNSwxMDksMTU1XSxcInByb3RvY29sc1wiOls2LDI3LDcyLDgwLDkwLDExMCwxNTZdLFwiZm9yXCI6WzcsMzEsNTZdLFwiZGlzdHJpYi11dGVkXCI6WzhdLFwibmV0d29ya3NcIjpbOSwzNl0sXCJ0aGF0XCI6WzEwLDExOSwxNzVdLFwiY2FuXCI6WzExLDQ3XSxcImJlXCI6WzEyLDQ4LDE4M10sXCJ1c2VkXCI6WzEzXSxcInRvXCI6WzE0LDU5LDc1LDE1MywxNjIsMTgyXSxcImRlY3JlYXNlXCI6WzE1XSxcIm9yXCI6WzE2LDE2Nl0sXCJlbGltaW5hdGVcIjpbMTddLFwidGhlXCI6WzE4LDI0LDM5LDY0LDY4LDEwNSwxMzYsMTM5LDE0MywxNzFdLFwib2NjdXJyZW5jZVwiOlsxOV0sXCJob3RcIjpbMjEsNDVdLFwic3BvdHNcIjpbMjIsNDZdLFwiaW5cIjpbMjMsMTg1XSxcIm5ldHdvcmsuXCI6WzI1LDcwLDE3Ml0sXCJPdXJcIjpbMjYsMTA4XSxcImFyZVwiOlsyOCw3MywxMTEsMTUxXSxcInBhcnRpY3VsYXJseVwiOlsyOV0sXCJkZXNpZ25lZFwiOlszMF0sXCJ1c2VcIjpbMzIsOTddLFwid2l0aFwiOlszMyw5Ml0sXCJ2ZXJ5XCI6WzM0LDg2XSxcImxhcmdlXCI6WzM1XSxcInN1Y2hcIjpbMzcsODEsMTg4XSxcImFzXCI6WzM4LDgyLDEwNCwxMzUsMTg5XSxcIkludGVybmV0LFwiOls0MF0sXCJ3aGVyZVwiOls0MSw1MV0sXCJkZWxheXNcIjpbNDJdLFwiY2F1c2VkXCI6WzQzXSxcImJ5XCI6WzQ0XSxcInNldmVyZSxcIjpbNDldLFwiYW5kXCI6WzUwLDg0LDEwMV0sXCJpdFwiOls1Ml0sXCJpc1wiOls1MywxMzBdLFwibm90XCI6WzU0LDE1OV0sXCJmZWFzaWJsZVwiOls1NV0sXCJldmVyeVwiOls1N10sXCJzZXJ2ZXJcIjpbNThdLFwiaGF2ZVwiOls2MCwxNjNdLFwiY29tcGxldGVcIjpbNjFdLFwiaW5mb3JtYXRpb25cIjpbNjJdLFwiYWJvdXRcIjpbNjNdLFwiY3VycmVudFwiOls2NSwxNjVdLFwic3RhdGVcIjpbNjZdLFwiZW50aXJlXCI6WzY5XSxcIlRoZVwiOls3MSw4OV0sXCJlYXN5XCI6Wzc0XSxcImltcGxlbWVudFwiOls3Nl0sXCJ1c2luZ1wiOls3N10sXCJleGlzdGluZ1wiOls3OCw5OV0sXCJuZXR3b3JrXCI6Wzc5LDEwNl0sXCJUQ1AvSVAsXCI6WzgzXSxcInJlcXVpcmVcIjpbODUsMTYwXSxcImxpdHRsZVwiOls4N10sXCJvdmVyaGVhZC5cIjpbODhdLFwid29ya1wiOls5MV0sXCJsb2NhbFwiOls5M10sXCJjb250cm9sLFwiOls5NF0sXCJtYWtlXCI6Wzk1XSxcImVmZmljaWVudFwiOls5Nl0sXCJyZXNvdXJjZXMsXCI6WzEwMF0sXCJzY2FsZVwiOlsxMDJdLFwiZ3JhY2VmdWxseVwiOlsxMDNdLFwiZ3Jvd3MuXCI6WzEwN10sXCJiYXNlZFwiOlsxMTJdLFwib25cIjpbMTEzXSxcInNwZWNpYWxcIjpbMTE1XSxcImtpbmRcIjpbMTE2XSxcImhhc2hpbmdcIjpbMTE4XSxcIndlXCI6WzEyMCwxNTBdLFwiY2FsbFwiOlsxMjFdLFwiY29uc2lzdGVudFwiOlsxMjIsMTI3LDE0NywxNjgsMTc2XSxcImhhc2hpbmcuXCI6WzEyM10sXCJSb3VnaGx5XCI6WzEyNF0sXCJzcGVha2luZyxcIjpbMTI1XSxcImhhc2hcIjpbMTI4LDE0OCwxNzddLFwiZnVuY3Rpb25cIjpbMTI5LDE0MF0sXCJvbmVcIjpbMTMxXSxcIndoaWNoXCI6WzEzMiwxNTddLFwiY2hhbmdlc1wiOlsxMzNdLFwibWluaW1hbGx5XCI6WzEzNF0sXCJyYW5nZVwiOlsxMzddLFwiY2hhbmdlcy5cIjpbMTQxXSxcIlRocm91Z2hcIjpbMTQyXSxcImRldmVsb3BtZW50XCI6WzE0NF0sXCJnb29kXCI6WzE0Nl0sXCJmdW5jdGlvbnMsXCI6WzE0OV0sXCJhYmxlXCI6WzE1Ml0sXCJkZXZlbG9wXCI6WzE1NF0sXCJkb1wiOlsxNThdLFwidXNlcnNcIjpbMTYxXSxcImV2ZW5cIjpbMTY3XSxcInZpZXdcIjpbMTY5XSxcImJlbGlldmVcIjpbMTc0XSxcImZ1bmN0aW9uc1wiOlsxNzhdLFwibWF5XCI6WzE3OV0sXCJldmVudHVhbGx5XCI6WzE4MF0sXCJwcm92ZVwiOlsxODFdLFwidXNlZnVsXCI6WzE4NF0sXCJvdGhlclwiOlsxODZdLFwiYXBwbGljYXRpb25zXCI6WzE4N10sXCJkaXN0cmlidXRlZFwiOlsxOTBdLFwibmFtZVwiOlsxOTFdLFwic2VydmVyc1wiOlsxOTJdLFwiYW5kL29yXCI6WzE5M10sXCJxdW9ydW1cIjpbMTk0XSxcInN5c3RlbXMuXCI6WzE5NV19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5wcmluY2V0b24uZWR1L2NvdXJzZXMvYXJjaGl2ZS9mYWxsMDkvY29zNTE4L3BhcGVycy9jaGFzaC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2NzLmJyb3duLmVkdS9jb3Vyc2VzL2NzY2kyOTUwLXUvcGFwZXJzL2NoYXNoOTdzdG9jLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vcGVvcGxlLmNzYWlsLm1pdC5lZHUva2FyZ2VyL1BhcGVycy93ZWIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vd3d3LnJlc2VhcmNoZ2F0ZS5uZXQvcHJvZmlsZS9EYXZpZF9LYXJnZXIvcHVibGljYXRpb24vMjM5NTc5M19Db25zaXN0ZW50X0hhc2hpbmdfYW5kX1JhbmRvbV9UcmVlc19EaXN0cmlidXRlZF9DYWNoaW5nX1Byb3RvY29sc19mb3JfUmVsaWV2aW5nX0hvdF9TcG90c19vbl90aGVfV29ybGRfV2lkZV9XZWIvbGlua3MvNTQ2ODM1ZWEwY2YyMGRlZGFmY2Y1Nzg4LnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI1ODY2MFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJscC51bmktdHJpZXIuZGUvZGIvY29uZi9zdG9jL3N0b2MxOTk3Lmh0bWwjS2FyZ2VyTExQTEw5N1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI1ODY2MFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5hY20ub3JnLzEwLjExNDUvMjU4NTMzLjI1ODY2MFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vY2kubmlpLmFjLmpwL25haWQvMTAwMTI5ODM5MzRcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI1ODY2MFwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZG9pLmFjbS5vcmcvMTAuMTE0NS8yNTg1MzMuMjU4NjYwXCJ9XSxcIlZGTlwiOlwiU3ltcG9zaXVtIG9uIHRoZSBUaGVvcnkgb2YgQ29tcHV0aW5nXCIsXCJWU05cIjpcIlNUT0NcIixcIkZQXCI6NjU0LFwiTFBcIjo2NjMsXCJET0lcIjpcIjEwLjExNDUvMjU4NTMzLjI1ODY2MFwiLFwiQ0NcIjp7XCIxNTE2OTEzMjg0XCI6W1wiQW5vdGhlciBzY2hlbWUgdGhhdCB3ZSBjYW4gaW1wcm92ZSBvbiBpcyBnaXZlbiBieSBEZXZpbmUgWzJdLlwiLFwiWzJdIFJvYmVydCBEZXZpbmUuXCJdLFwiMTUyNzk2MTY4M1wiOltcIlsxXSBkZXZlbG9wZWQgdGhlIEhhcnZlc3QgQ2FjaGUsIGEgbW9yZSBzY2FsYWJsZSBhcHByb2FjaCB1c2luZyBhIHRyZWUgb2YgY2FjaGVzLlwiXSxcIjE1NzUzMDQ1MzlcIjpbXCJbNl0gd29yayBhcm91bmQgdGhpcyBwcm9ibGVtIGJ5IG1ha2luZyBhIGdyb3VwIG9mIGNhY2hlcyBmdW5jdGlvbiBhcyBvbmUuXCJdLFwiMTcyNTEyNDYyMFwiOltcIlBsYXh0b24gYW5kIFJhamFyYW1hbiBbOV0gc2hvdyBob3cgdG8gYmFsYW5jZSB0aGUgbG9hZCBhbW9uZyBhbGwgY2FjaGVzIGJ5IHVzaW5nIHJhbmRvbWl6YXRpb24gYW5kIGhhc2hpbmcuXCIsXCJbOV0gR3JlZyBQbGF4dG9uIGFuZCBSYWptb2hhbiBSYWphcmFtYW4uXCJdLFwiMjAxMjY0Mzk1NVwiOltcIkZvciBleGFtcGxlLCBGZWVsZXkgZXQgYWwgWzNdIGltcGxlbWVudCBhIGRpc3RyaWJ1dGVkIGdsb2JhbCBzaGFyZWQgbWVtb3J5IHN5c3RlbSBmb3IgYSBuZXR3b3JrIG9mIHdvcmtzdGF0aW9ucyB0aGF0IHVzZXMgYSBoYXNoIHRhYmxlIGRpc3RyaWJ1dGVkIGFtb25nIHRoZSBtYWNoaW5lcyB0byByZXNvbHZlIHJlZmVyZW5jZXMuXCIsXCJbM10gTS5cIl0sXCIyMDI4OTI4OTIyXCI6W1wiSW4gWzVdIExpdHdpbiBldCBhbCBwcm9wb3NlcyBhIGhhc2ggZnVuY3Rpb24gdGhhdCBhbGxvd3MgYnVja2V0cyB0byBiZSBhZGRlZCBvbmUgYXQgYSB0aW1lIHNlcXVlbnRpYWxseS5cIl0sXCIyMDU4OTcyNTg5XCI6W1wiVGhpcyBwcm9ibGVtIGNhbiBiZSBlbGltaW5hdGVkIHVzaW5nIHN0YW5kYXJkIHRlY2huaXF1ZXMsIHN1Y2ggYXMgUmFiaW4ncyBJbmZvcm1hdGlvbiBEaXNwZXJzYWwgQWxnb3JpdGhtIFsxMF0uXCIsXCJbMTBdIE0uXCJdLFwiMjA2MzczODQyN1wiOltcIkluIGFkZGl0aW9uLCB3ZSBiZWxpZXZlIHRoYXQgY29uc2lzdGVudCBoYXNoaW5nIHdpbGwgYmUgdXNlZnVsIGluIG90aGVyIGFwcGxpY2F0aW9ucyAoc3VjaCBhcyBxdW9ydW0gc3lzdGVtcyBbN10gWzhdIG9yIGRpc3RyaWJ1dGVkIG5hbWUgc2VydmVycykgd2hlcmUgbXVsdGlwbGUgbWFjaGluZXMgd2l0aCBkaWZmZXJlbnQgdmlld3Mgb2YgdGhlIG5ldHdvcmsgbXVzdCBhZ3JlZSBvbiBhIGNvbW1vbiBzdG9yYWdlIGxvY2F0aW9uIGZvciBhbiBvYmplY3Qgd2l0aG91dCBjb21tdW5pY2F0aW9uLlwiLFwiWzhdIEQuXCJdLFwiMjA4NjYwNDQxNlwiOltcInVzaW5nIG1ldGhvZHMgc2ltaWxhciB0byB0aG9zZSBpbiBbMTFdLlwiLFwiV2UgY2FuIHRoZXJlZm9yZSBhcmd1ZSBhcyBpbiBbMTFdIHRoYXQgaXQgYXBwbGllcyBldmVuIHdoZW4gdGhlIGJhbGxzIGFyZSBhc3NpZ25lZCB0byBiaW5zIG9ubHkgayA9IE8obG9nTiktXCIsXCJUaGlzIHJlc3VsdCBkb2VzIG5vdCBmb2xsb3cgaW1tZWRpYXRlbHkgZnJvbSB0aGUgcmVzdWx0cyBvZiBbMTFdLCBidXQgaW52b2x2ZXMgYSBzaW1pbGFyIGFyZ3VtZW50LlwiXSxcIjIxMDMzMzY2MDdcIjpbXCJJbiBhZGRpdGlvbiwgd2UgYmVsaWV2ZSB0aGF0IGNvbnNpc3RlbnQgaGFzaGluZyB3aWxsIGJlIHVzZWZ1bCBpbiBvdGhlciBhcHBsaWNhdGlvbnMgKHN1Y2ggYXMgcXVvcnVtIHN5c3RlbXMgWzddIFs4XSBvciBkaXN0cmlidXRlZCBuYW1lIHNlcnZlcnMpIHdoZXJlIG11bHRpcGxlIG1hY2hpbmVzIHdpdGggZGlmZmVyZW50IHZpZXdzIG9mIHRoZSBuZXR3b3JrIG11c3QgYWdyZWUgb24gYSBjb21tb24gc3RvcmFnZSBsb2NhdGlvbiBmb3IgYW4gb2JqZWN0IHdpdGhvdXQgY29tbXVuaWNhdGlvbi5cIixcIls3XSBNLlwiXX0sXCJQUlwiOlsyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDIxNTM3MDQ2MjUsMjE1MDY3NjU4NiwxNjUwNjc1NTA5LDIwODc5NDY3MDAsMjExOTI0NTEwNiwyMTA0MjEwODk0LDIxMjM0ODI0NjIsMjAwMDg3NjAyMywyNjI0MzA0MDM1LDIxMTk1NjU3NDIsMjEyMzgyMDgyMCwxOTcwNTY0Nzc4LDIxNzQ1MDc4NjksMjE1NjQzNTU0OSwxNTI3OTYxNjgzLDE5ODUyMjkxNjgsMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE1ODA0OTgyMSwyMTUzNzA0NjI1LDIxNTA2NzY1ODYsMTY1MDY3NTUwOSwyMDg3OTQ2NzAwLDIxMTkyNDUxMDYsMjEwNDIxMDg5NCwyMTIzNDgyNDYyLDIwMDA4NzYwMjMsMjYyNDMwNDAzNSwyMTE5NTY1NzQyLDIxMjM4MjA4MjAsMTk3MDU2NDc3OCwyMTc0NTA3ODY5LDIxNTY0MzU1NDksMTUyNzk2MTY4MywxOTg1MjI5MTY4XSxcIkFORlwiOlt7XCJGTlwiOlwiRGF2aWRcIixcIkxOXCI6XCJLYXJnZXJcIixcIlNcIjoxfSx7XCJGTlwiOlwiRXJpY1wiLFwiTE5cIjpcIkxlaG1hblwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJUb21cIixcIkxOXCI6XCJMZWlnaHRvblwiLFwiU1wiOjN9LHtcIkZOXCI6XCJSaW5hXCIsXCJMTlwiOlwiUGFuaWdyYWh5XCIsXCJTXCI6NH0se1wiRk5cIjpcIk1hdHRoZXdcIixcIkxOXCI6XCJMZXZpbmVcIixcIlNcIjo1fSx7XCJGTlwiOlwiRGFuaWVsXCIsXCJMTlwiOlwiTGV3aW5cIixcIlNcIjo2fV0sXCJCVlwiOlwiUHJvY2VlZGluZ3Mgb2YgdGhlIHR3ZW50eS1uaW50aCBhbm51YWwgQUNNIHN5bXBvc2l1bSBvbiBUaGVvcnkgb2YgY29tcHV0aW5nXCIsXCJCVFwiOlwicFwiLFwiUEJcIjpcIkFDTVwifSJ9LHsibG9ncHJvYiI6LTE2Ljc1Mywia2VzRW50aXR5SWQiOjIzMzQ3NzQsIklkIjoyMDAwODc2MDIzLCJUaSI6ImFjY2Vzc2luZyBuZWFyYnkgY29waWVzIG9mIHJlcGxpY2F0ZWQgb2JqZWN0cyBpbiBhIGRpc3RyaWJ1dGVkIGVudmlyb25tZW50IiwiWSI6MTk5NywiRCI6IjE5OTctMDYtMDEiLCJDQyI6MTE5NSwiUklkIjpbMjAyMDc2NTY1MiwyMDgzMDU3MzEyLDIyOTMwMDE5ODIsMTk3MjQ0MjExNywxNzI1MTI0NjIwLDIwMDU1ODAxMDYsMTk2OTAwODU3NSwxOTgxMTA3MzU3LDIwMzczMjk3MDQsMTU2MTQwMjQyMywyMDA5MjM5Nzg2LDE1NDQxMjY3NzUsMjA2NjAxNTQ1MCwyMDQ3NjU3NzA4LDIwMDI4MzM4NDAsMTk3MTQ5NzY4Nl0sIkFBIjpbeyJBdU4iOiJjIGdyZWcgcGxheHRvbiJ9LHsiQXVOIjoicmFqbW9oYW4gcmFqYXJhbWFuIn0seyJBdU4iOiJhbmRyZWEgdyByaWNoYSJ9XSwiRiI6W3siRk4iOiJkaXN0cmlidXRlZCBzaGFyZWQgbWVtb3J5In0seyJGTiI6ImFzeW1wdG90aWNhbGx5IG9wdGltYWwgYWxnb3JpdGhtIn0seyJGTiI6InJlc291cmNlIn0seyJGTiI6ImRpc3RyaWJ1dGVkIG9iamVjdCJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcgZW52aXJvbm1lbnQifSx7IkZOIjoicmFuZG9taXplZCBhbGdvcml0aG0ifSx7IkZOIjoicmVhbCB0aW1lIGNvbXB1dGluZyJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJBY2Nlc3NpbmcgbmVhcmJ5IGNvcGllcyBvZiByZXBsaWNhdGVkIG9iamVjdHMgaW4gYSBkaXN0cmlidXRlZCBlbnZpcm9ubWVudFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjIxNSxcIkludmVydGVkSW5kZXhcIjp7XCJDb25zaWRlclwiOlswXSxcImFcIjpbMSw3LDQ4LDY3LDg5LDEwNSwxMTMsMTI3LDE0Ml0sXCJzZXRcIjpbMiwyMTFdLFwib2ZcIjpbMywxMywzNSw3NSwxMzAsMTQ0LDE1MiwxNjgsMjEyXSxcInNoYXJlZFwiOls0LDk1XSxcIm9iamVjdHNcIjpbNSwyOSw3Niw5NiwxNzgsMTg2XSxcImluXCI6WzYsNjYsNzEsMjAzXSxcImRpc3RyaWJ1dGVkXCI6WzgsNjldLFwibmV0d29yayxcIjpbOV0sXCJ3aGVyZVwiOlsxMF0sXCJzZXZlcmFsXCI6WzExXSxcImNvcGllc1wiOlsxMl0sXCJlYWNoXCI6WzE0LDQyLDEwMSwxMzRdLFwib2JqZWN0XCI6WzE1LDEyMiwyMTNdLFwibWF5XCI6WzE2XSxcImV4aXN0XCI6WzE3XSxcImF0XCI6WzE4LDEzM10sXCJhbnlcIjpbMTldLFwiZ2l2ZW5cIjpbMjBdLFwidGltZS5cIjpbMjFdLFwiVG9cIjpbMjJdLFwiZW5zdXJlXCI6WzIzXSxcImJvdGhcIjpbMjQsMjA0XSxcImZhc3RcIjpbMjVdLFwiYWNjZXNzXCI6WzI2LDQzLDEwMiwxMzksMTcxXSxcInRvXCI6WzI3LDUxLDYxLDk5LDExNl0sXCJ0aGVcIjpbMjgsNTIsMTQ5LDE1OSwxNjUsMTgyLDE4OCwyMDUsMjEwXSxcImFzXCI6WzMwLDMyLDIwNywyMDldLFwid2VsbFwiOlszMSwyMDhdLFwiZWZmaWNpZW50XCI6WzMzXSxcInV0aWxpemF0aW9uXCI6WzM0XSxcIm5ldHdvcmtcIjpbMzYsMjA2XSxcInJlc291cmNlcyxcIjpbMzddLFwiaXRcIjpbMzgsNTZdLFwiaXNcIjpbMzksNTcsMTEwLDE3Ml0sXCJkZXNpcmFibGVcIjpbNDBdLFwidGhhdFwiOls0MSw5NywxNDcsMTU3XSxcInJlcXVlc3RcIjpbNDQsMTAzXSxcImJlXCI6WzQ1XSxcInNhdGlzZmllZFwiOls0Nl0sXCJieVwiOls0NywxOTJdLFwiY29weVwiOls0OV0sXCJcXFwiY2xvc2VcXFwiXCI6WzUwXSxcInJlcXVlc3RpbmdcIjpbNTNdLFwibm9kZS5cIjpbNTQsMTM1XSxcIlVuZm9ydHVuYXRlbHksXCI6WzU1XSxcIm5vdFwiOls1OF0sXCJjbGVhclwiOls1OV0sXCJob3dcIjpbNjBdLFwiZWZmaWNpZW50bHlcIjpbNjJdLFwiYWNoaWV2ZVwiOls2M10sXCJ0aGlzXCI6WzY0LDg1XSxcImdvYWxcIjpbNjVdLFwiZHluYW1pYyxcIjpbNjhdLFwiZW52aXJvbm1lbnRcIjpbNzBdLFwid2hpY2hcIjpbNzJdLFwibGFyZ2VcIjpbNzNdLFwibnVtYmVyc1wiOls3NF0sXCJhcmVcIjpbNzcsMTc5XSxcImNvbnRpbnVvdXNseVwiOls3OF0sXCJiZWluZ1wiOls3OV0sXCJjcmVhdGVkLFwiOls4MF0sXCJyZXBsaWNhdGVkLFwiOls4MV0sXCJhbmRcIjpbODIsMTE4LDEyNCwxNzVdLFwiZGVzdHJveWVkLlwiOls4M10sXCJJblwiOls4NF0sXCJwYXBlcixcIjpbODZdLFwid2VcIjpbODddLFwiZGVzaWduXCI6Wzg4XSxcInNpbXBsZVwiOls5MF0sXCJyYW5kb21pemVkXCI6WzkxXSxcImFsZ29yaXRobVwiOls5MiwxMDksMTk0XSxcImZvclwiOls5MywxNDEsMTg1XSxcImFjY2Vzc2luZ1wiOls5NF0sXCJ0ZW5kc1wiOls5OF0sXCJzYXRpc2Z5XCI6WzEwMF0sXCJ3aXRoXCI6WzEwNCwxOTVdLFwibmVhcmJ5XCI6WzEwNl0sXCJjb3B5LlwiOlsxMDddLFwiVGhlXCI6WzEwOF0sXCJiYXNlZFwiOlsxMTFdLFwib25cIjpbMTEyXSxcIm5vdmVsXCI6WzExNF0sXCJtZWNoYW5pc21cIjpbMTE1XSxcIm1haW50YWluXCI6WzExN10sXCJkaXN0cmlidXRlXCI6WzExOV0sXCJpbmZvcm1hdGlvblwiOlsxMjBdLFwiYWJvdXRcIjpbMTIxXSxcImxvY2F0aW9ucyxcIjpbMTIzXSxcInJlcXVpcmVzXCI6WzEyNV0sXCJvbmx5XCI6WzEyNl0sXCJzbWFsbFwiOlsxMjhdLFwiYW1vdW50XCI6WzEyOV0sXCJhZGRpdGlvbmFsXCI6WzEzMSwxODldLFwibWVtb3J5XCI6WzEzMiwxODMsMTkwXSxcIldlXCI6WzEzNiwxNTUsMTk4XSxcImFuYWx5emVcIjpbMTM3XSxcIm91clwiOlsxMzgsMTkzXSxcInNjaGVtZVwiOlsxNDBdLFwiY2xhc3NcIjpbMTQzXSxcImNvc3RcIjpbMTQ1LDE2MSwxNjddLFwiZnVuY3Rpb25zXCI6WzE0Nl0sXCJjYXB0dXJlc1wiOlsxNDhdLFwiaGllcmFyY2hpY2FsXCI6WzE1MF0sXCJuYXR1cmVcIjpbMTUxXSxcIndpZGUtYXJlYVwiOlsxNTNdLFwibmV0d29ya3MuXCI6WzE1NF0sXCJzaG93XCI6WzE1Nl0sXCJ1bmRlclwiOlsxNThdLFwicGFydGljdWxhclwiOlsxNjBdLFwibW9kZWxcIjpbMTYyXSxcImNvbnNpZGVyZWQ6XCI6WzE2M10sXCIoaSlcIjpbMTY0XSxcImV4cGVjdGVkXCI6WzE2Nl0sXCJhblwiOlsxNjldLFwiaW5kaXZpZHVhbFwiOlsxNzBdLFwiYXN5bXB0b3RpY2FsbHlcIjpbMTczXSxcIm9wdGltYWwsXCI6WzE3NF0sXCIoaWkpXCI6WzE3Nl0sXCJpZlwiOlsxNzddLFwic3VmZmljaWVudGx5XCI6WzE4MF0sXCJsYXJnZSxcIjpbMTgxXSxcInVzZWRcIjpbMTg0LDE5MV0sXCJkb21pbmF0ZXNcIjpbMTg3XSxcImhpZ2hcIjpbMTk2XSxcInByb2JhYmlsaXR5LlwiOlsxOTddLFwiYWxzb1wiOlsxOTldLFwiYWRkcmVzc1wiOlsyMDBdLFwiZHluYW1pY1wiOlsyMDFdLFwiY2hhbmdlc1wiOlsyMDJdLFwiY29waWVzLlwiOlsyMTRdfX0sXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9jb25mL3NwYWEvc3BhYTk3Lmh0bWwjUGxheHRvblJSOTdcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9hcnRpY2xlLzEwLjEwMDcvczAwMjI0MDAwMDExOFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9ODk5MzIwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLmFjbS5vcmcvMTAuMTE0NS8yNTg0OTIuMjU4NTIzXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MjU4NDkyLjI1ODUyM1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2FzdS5wdXJlLmVsc2V2aWVyLmNvbS9lbi9wdWJsaWNhdGlvbnMvYWNjZXNzaW5nLW5lYXJieS1jb3BpZXMtb2YtcmVwbGljYXRlZC1vYmplY3RzLWluLWEtZGlzdHJpYnV0ZWQtZW5cIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9yZC5zcHJpbmdlci5jb20vYXJ0aWNsZS8xMC4xMDA3L3MwMDIyNDAwMDAxMThcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI1ODUyM1wifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZG9pLmFjbS5vcmcvMTAuMTE0NS8yNTg0OTIuMjU4NTIzXCJ9XSxcIlZGTlwiOlwiQUNNIFN5bXBvc2l1bSBvbiBQYXJhbGxlbCBBbGdvcml0aG1zIGFuZCBBcmNoaXRlY3R1cmVzXCIsXCJWU05cIjpcIlNQQUFcIixcIkZQXCI6MzExLFwiTFBcIjozMjAsXCJET0lcIjpcIjEwLjExNDUvMjU4NDkyLjI1ODUyM1wiLFwiUFJcIjpbMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE1ODA0OTgyMSwxNjUwNjc1NTA5LDIxMDQyMTA4OTQsMjEyMzQ4MjQ2MiwyMTUwNjc2NTg2LDE5NzA1NjQ3NzgsMjAyMDc2NTY1MiwyMTE5MjQ1MTA2LDIxNzQ1MDc4NjksMjEyMzgyMDgyMCwxNjUwODAyMTgxLDE1ODQ2MzU0NTksMjA1NjM2MzM1MywyMDk2NzA2NTEyLDE0OTI1NTI1MzEsMjEyODY3ODU3NiwyMTYyNzMzNjc3LDIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDIxNTgwNDk4MjEsMTY1MDY3NTUwOSwyMTA0MjEwODk0LDIxMjM0ODI0NjIsMjE1MDY3NjU4NiwxOTcwNTY0Nzc4LDIwMjA3NjU2NTIsMjExOTI0NTEwNiwyMTc0NTA3ODY5LDIxMjM4MjA4MjAsMTY1MDgwMjE4MSwxNTg0NjM1NDU5LDIwNTYzNjMzNTMsMjA5NjcwNjUxMiwxNDkyNTUyNTMxLDIxMjg2Nzg1NzYsMjE2MjczMzY3N10sXCJBTkZcIjpbe1wiRk5cIjpcIkMuIEdyZWdcIixcIkxOXCI6XCJQbGF4dG9uXCIsXCJTXCI6MX0se1wiRk5cIjpcIlJham1vaGFuXCIsXCJMTlwiOlwiUmFqYXJhbWFuXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkFuZHLDqWEgVy5cIixcIkxOXCI6XCJSaWNoYVwiLFwiU1wiOjN9XSxcIkJWXCI6XCJQcm9jZWVkaW5ncyBvZiB0aGUgbmludGggYW5udWFsIEFDTSBzeW1wb3NpdW0gb24gUGFyYWxsZWwgYWxnb3JpdGhtcyBhbmQgYXJjaGl0ZWN0dXJlc1wiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNi44OCwia2VzRW50aXR5SWQiOjI2NDQzNDgsIklkIjo3OTkzMTAzMSwiVGkiOiJzZWN1cmUgaGFzaCBzdGFuZGFyZCIsIlkiOjE5OTUsIkQiOiIxOTk1LTA0LTE3IiwiQ0MiOjE2NzIsIkFBIjpbeyJBdU4iOiJqYW1lcyBoIGJ1cnJvd3MifV0sIkYiOlt7IkZOIjoia2Nkc2EifSx7IkZOIjoic2VjdXJlIGhhc2ggc3RhbmRhcmQifSx7IkZOIjoic2VjdXJlIGhhc2ggYWxnb3JpdGhtIn0seyJGTiI6InNoYSAyIn0seyJGTiI6Imhhc2ggY2hhaW4ifSx7IkZOIjoiY3J5cHRvZ3JhcGhpYyBoYXNoIGZ1bmN0aW9uIn0seyJGTiI6Im1lc3NhZ2UgYXV0aGVudGljYXRpb24gY29kZSJ9LHsiRk4iOiJoYXNoIGZ1bmN0aW9uIn0seyJGTiI6ImNvbXB1dGVyIHNlY3VyaXR5In0seyJGTiI6InJlYWwgdGltZSBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJTZWN1cmUgSGFzaCBTdGFuZGFyZFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjc4LFwiSW52ZXJ0ZWRJbmRleFwiOntcIkFic3RyYWN0XCI6WzBdLFwiOlwiOlsxXSxcIlRoaXNcIjpbMl0sXCJzdGFuZGFyZFwiOlszXSxcInNwZWNpZmllc1wiOls0XSxcImFcIjpbNSwxNiwyMCwyMyw0OCw2OSw3NV0sXCJTZWN1cmVcIjpbNl0sXCJIYXNoXCI6WzddLFwiQWxnb3JpdGhtXCI6WzgsMzZdLFwiKFNIQS0xKVwiOls5XSxcIndoaWNoXCI6WzEwXSxcImNhblwiOlsxMV0sXCJiZVwiOlsxMl0sXCJ1c2VkXCI6WzEzLDYwXSxcInRvXCI6WzE0XSxcImdlbmVyYXRlXCI6WzE1XSxcImNvbmRlbnNlZFwiOlsxN10sXCJyZXByZXNlbnRhdGlvblwiOlsxOF0sXCJvZlwiOlsxOSw2OF0sXCJtZXNzYWdlXCI6WzIxLDI0LDcwXSxcImNhbGxlZFwiOlsyMl0sXCJkaWdlc3QuXCI6WzI1XSxcIlRoZVwiOlsyNiw1N10sXCJTSEEtMVwiOlsyNyw1OF0sXCJpc1wiOlsyOCw1Miw1OV0sXCJyZXF1aXJlZFwiOlsyOSw1M10sXCJmb3JcIjpbMzAsNTRdLFwidXNlXCI6WzMxXSxcIndpdGhcIjpbMzJdLFwidGhlXCI6WzMzLDQxLDYzXSxcIkRpZ2l0YWxcIjpbMzQsNDJdLFwiU2lnbmF0dXJlXCI6WzM1LDQzXSxcIihEU0EpXCI6WzM3XSxcImFzXCI6WzM4XSxcInNwZWNpZmllZFwiOlszOV0sXCJpblwiOls0MCw3MV0sXCJTdGFuZGFyZFwiOls0NF0sXCIoRFNTKVwiOls0NV0sXCJhbmRcIjpbNDYsNjUsNzNdLFwid2hlbmV2ZXJcIjpbNDddLFwic2VjdXJlXCI6WzQ5XSxcImhhc2hcIjpbNTBdLFwiYWxnb3JpdGhtXCI6WzUxXSxcImZlZGVyYWxcIjpbNTVdLFwiYXBwbGljYXRpb25zLlwiOls1Nl0sXCJieVwiOls2MV0sXCJib3RoXCI6WzYyXSxcInRyYW5zbWl0dGVyXCI6WzY0XSxcImludGVuZGVkXCI6WzY2XSxcInJlY2VpdmVyXCI6WzY3XSxcImNvbXB1dGluZ1wiOls3Ml0sXCJ2ZXJpZnlpbmdcIjpbNzRdLFwiZGlnaXRhbFwiOls3Nl0sXCJzaWduYXR1cmUuXCI6Wzc3XX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmR0aWMubWlsL2R0aWMvdHIvZnVsbHRleHQvdTIvYTQwNjU0My5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL29haS5kdGljLm1pbC9vYWkvb2FpP3ZlcmI9Z2V0UmVjb3JkJm1ldGFkYXRhUHJlZml4PWh0bWwmaWRlbnRpZmllcj1BREE0MDY1NDNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3d3dy5kdGljLm1pbC9kb2NzL2NpdGF0aW9ucy9BREE0MDY1NDNcIn1dLFwiVkZOXCI6XCJcIixcIlBSXCI6WzIwOTg4MDE5NDcsMTk5NjM2MDQwNSwxNjYwNTYyNTU1LDIxMTg0MjgxOTMsMjE1NjE4Njg0OSwxNjU2NzMxNzgwLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTAzMjM5ODUzLDIxNTgwNDk4MjEsMjEwODgzNDI0NiwxNjU2Njc4NzcwLDIxMDQ2MzMxNjcsMTU0OTIyODUwMywyMTk5MzIyNTE3LDE2MDA0MzIyMjUsMjEzMTMwMDQxMywxNjUwNjc1NTA5LDIxMzEyMTI5MjAsMjQ4NDg2MDI5MiwyMDk4ODAxOTQ3LDE5OTYzNjA0MDUsMTY2MDU2MjU1NSwyMTE4NDI4MTkzLDIxNTYxODY4NDksMTY1NjczMTc4MCwyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjEwMzIzOTg1MywyMTU4MDQ5ODIxLDIxMDg4MzQyNDYsMTY1NjY3ODc3MCwyMTA0NjMzMTY3LDE1NDkyMjg1MDMsMjE5OTMyMjUxNywxNjAwNDMyMjI1LDIxMzEzMDA0MTMsMTY1MDY3NTUwOSwyMTMxMjEyOTIwLDI0ODQ4NjAyOTJdLFwiQU5GXCI6W3tcIkZOXCI6XCJKYW1lcyBILlwiLFwiTE5cIjpcIkJ1cnJvd3NcIixcIlNcIjoxfV0sXCJCVFwiOlwiYVwifSJ9LHsibG9ncHJvYiI6LTE2LjkyNCwia2VzRW50aXR5SWQiOjI3NTg3MDAsIklkIjoyMTIwNjI2Mjk0LCJUaSI6ImludGVybmV0IGluZGlyZWN0aW9uIGluZnJhc3RydWN0dXJlIiwiWSI6MjAwMiwiRCI6IjIwMDItMTAtMDEiLCJDQyI6MTEzNCwiUklkIjpbMjExODQyODE5MywyMTU4MDQ5ODIxLDIxNjMwNTkxOTAsMjE2Nzg5ODQxNCwyMDQ1MDI4MzQ4LDE2NTA2NzU1MDksMjE1MDY3NjU4NiwyMTUwMjIwOTQ0LDE1MTM3MTA0MDIsMjA3MzQ0MDQ2MCwyMTI1ODU1NzUwLDIxNTc5MTg2MTcsMjA4MzQwODQ5OCwyMTUzMzE5MTk4LDE4OTM1MDQyNzIsMjA3OTk5NDIwMywyMTE5ODM2MTg0LDE1MTc2MzM3NTMsMjE2OTI2NTc3MywyMTY1MjIyMTIxLDIzNDE5NzQzNTcsMTUyMjk1MTk3MCwyMTc5MTM5MjQ5LDE1MzI4OTk1MjgsMjA3MDEyNTQ5NiwyMTIyMjY5OTI1LDIxMDQ1MDc0MjQsMTYzODgxODQ0NSwyMTExMzQ5Mzg1LDE3ODY5MjYxODMsMjE3MDI0NjIyMCwyNDI4NTYzNTQxLDIxNjIxMjg3MTMsMTg2MzI2MTcyMSwyMDIyOTUxNzQ2LDIwOTU3Mzg0OTQsMjE0MzI5NTAzMCw3NzgxMjU5OSw4MjU3NjQ4MiwyMDA3NTY3NTUxLDIyNTA5MzMyODRdLCJBQSI6W3siQXVOIjoiaW9uIHN0b2ljYSJ9LHsiQXVOIjoiZGFuaWVsIGFka2lucyJ9LHsiQXVOIjoic2hlbGxleSB6aHVhbmcifSx7IkF1TiI6InNjb3R0IHNoZW5rZXIifSx7IkF1TiI6InNvbmVzaCBzdXJhbmEifV0sIkYiOlt7IkZOIjoiaW5kaXJlY3Rpb24ifSx7IkZOIjoiYW55Y2FzdCJ9LHsiRk4iOiJyZW5kZXp2b3VzIn0seyJGTiI6Im5ldHdvcmsgcGFja2V0In0seyJGTiI6Im11bHRpY2FzdCJ9LHsiRk4iOiJwb2ludCB0byBwb2ludCJ9LHsiRk4iOiJhcmNoaXRlY3R1cmUifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6ImNvbXB1dGVyIHNlY3VyaXR5In0seyJGTiI6ImNvbXB1dGVyIG5ldHdvcmsifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiSW50ZXJuZXQgaW5kaXJlY3Rpb24gaW5mcmFzdHJ1Y3R1cmVcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxMjQsXCJJbnZlcnRlZEluZGV4XCI6e1wiQXR0ZW1wdHNcIjpbMF0sXCJ0b1wiOlsxLDgsNTMsNzEsOTRdLFwiZ2VuZXJhbGl6ZVwiOlsyXSxcInRoZVwiOlszLDI2LDY5LDc1LDgyLDg3LDEwNiwxMjBdLFwiSW50ZXJuZXQnc1wiOls0XSxcInBvaW50LXRvLXBvaW50XCI6WzVdLFwiY29tbXVuaWNhdGlvblwiOls2LDQ1LDEwMl0sXCJhYnN0cmFjdGlvblwiOls3XSxcInByb3ZpZGVcIjpbOV0sXCJzZXJ2aWNlc1wiOlsxMF0sXCJsaWtlXCI6WzExXSxcIm11bHRpY2FzdCxcIjpbMTJdLFwiYW55Y2FzdCxcIjpbMTNdLFwiYW5kXCI6WzE0LDIxLDkxLDExNF0sXCJtb2JpbGl0eVwiOlsxNV0sXCJoYXZlXCI6WzE2LDExMl0sXCJmYWNlZFwiOlsxN10sXCJjaGFsbGVuZ2luZ1wiOlsxOF0sXCJ0ZWNobmljYWxcIjpbMTldLFwicHJvYmxlbXNcIjpbMjBdLFwiZGVwbG95bWVudFwiOlsyMiwyN10sXCJiYXJyaWVycy5cIjpbMjNdLFwiVG9cIjpbMjQsMTA0XSxcImVhc2VcIjpbMjVdLFwib2ZcIjpbMjgsNDgsNzQsNzksODQsODksMTAwLDEwOF0sXCJzdWNoXCI6WzI5XSxcInNlcnZpY2VzLFwiOlszMF0sXCJ0aGlzXCI6WzMxLDYzLDEwOV0sXCJwYXBlclwiOlszMl0sXCJwcm9wb3Nlc1wiOlszM10sXCJhblwiOlszNCw2MV0sXCJvdmVybGF5LWJhc2VkXCI6WzM1XSxcIkludGVybmV0XCI6WzM2XSxcIkluZGlyZWN0aW9uXCI6WzM3XSxcIkluZnJhc3RydWN0dXJlXCI6WzM4XSxcIihcIjpbMzldLFwiSTMpXCI6WzQwXSxcInRoYXRcIjpbNDFdLFwib2ZmZXJzXCI6WzQyXSxcImFcIjpbNDMsNTEsNTQsOTcsMTE2XSxcInJlbmRlenZvdXMtYmFzZWRcIjpbNDRdLFwiYWJzdHJhY3Rpb24uXCI6WzQ2XSxcIkluc3RlYWRcIjpbNDddLFwiZXhwbGljaXRseVwiOls0OV0sXCJzZW5kaW5nXCI6WzUwLDg1XSxcInBhY2tldFwiOls1Miw1N10sXCJkZXN0aW5hdGlvbixcIjpbNTVdLFwiZWFjaFwiOls1Nl0sXCJpc1wiOls1OCw2NV0sXCJhc3NvY2lhdGVkXCI6WzU5XSxcIndpdGhcIjpbNjBdLFwiaWRlbnRpZmllcjtcIjpbNjJdLFwiaWRlbnRpZmllclwiOls2NF0sXCJ0aGVuXCI6WzY2XSxcInVzZWRcIjpbNjddLFwiYnlcIjpbNjhdLFwicmVjZWl2ZXJcIjpbNzBdLFwib2J0YWluXCI6WzcyXSxcImRlbGl2ZXJ5XCI6WzczXSxcInBhY2tldC5cIjpbNzZdLFwiVGhpc1wiOls3N10sXCJsZXZlbFwiOls3OF0sXCJpbmRpcmVjdGlvblwiOls4MF0sXCJkZWNvdXBsZXNcIjpbODFdLFwiYWN0XCI6WzgzLDg4XSxcImZyb21cIjpbODZdLFwicmVjZWl2aW5nLFwiOls5MF0sXCJhbGxvd3NcIjpbOTJdLFwiSTNcIjpbOTNdLFwiZWZmaWNpZW50bHlcIjpbOTVdLFwic3VwcG9ydFwiOls5Nl0sXCJ3aWRlXCI6Wzk4XSxcInZhcmlldHlcIjpbOTldLFwiZnVuZGFtZW50YWxcIjpbMTAxXSxcInNlcnZpY2VzLlwiOlsxMDNdLFwiZGVtb25zdHJhdGVcIjpbMTA1XSxcImZlYXNpYmlsaXR5XCI6WzEwN10sXCJhcHByb2FjaCxcIjpbMTEwXSxcIndlXCI6WzExMV0sXCJkZXNpZ25lZFwiOlsxMTNdLFwiYnVpbHRcIjpbMTE1XSxcInByb3RvdHlwZVwiOlsxMTddLFwiYmFzZWRcIjpbMTE4XSxcIm9uXCI6WzExOV0sXCJDaG9yZFwiOlsxMjFdLFwibG9va3VwXCI6WzEyMl0sXCJwcm90b2NvbC5cIjpbMTIzXX19LFwiU1wiOlt7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9mdF9nYXRld2F5LmNmbT9pZD02MzMwMzMmdHlwZT1wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvc2lnY29tbS9zaWdjb21tMjAwMi5odG1sI1N0b2ljYUFaU1MwMlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTYzMzAzM1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTk2NDcyNS42MzMwMzNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1LzYzMzAyNS42MzMwMzNcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RvaS5hY20ub3JnLzEwLjExNDUvNjMzMDI1LjYzMzAzM1wifV0sXCJWRk5cIjpcIkFDTSBTcGVjaWFsIEludGVyZXN0IEdyb3VwIG9uIERhdGEgQ29tbXVuaWNhdGlvblwiLFwiVlNOXCI6XCJTSUdDT01NXCIsXCJWXCI6MzIsXCJJXCI6NCxcIkZQXCI6NzMsXCJMUFwiOjg2LFwiRE9JXCI6XCIxMC4xMTQ1Lzk2NDcyNS42MzMwMzNcIixcIkNDXCI6e1wiNzc4MTI1OTlcIjpbXCJFeGlzdGluZyBJUCBtdWx0aWNhc3Qgc29sdXRpb25zIFsxLCA1LCA3LCAgOCAsIDEyXSBzY2FsZSBwb29ybHkgd2l0aCB0aGUgbnVtYmVyIG9mIGdyb3VwcywgYXMgZXZlcnkgcm91dGVyIGhhcyB0byBtYWludGFpbiBzdGF0ZSBmb3IgZWFjaCBncm91cCB3aG9zZSBkaXN0cmlidXRpb24gdHJlZSBwYXNzZXMgdGhyb3VnaCB0aGUgcm91dGVyLlwiXSxcIjgyNTc2NDgyXCI6W1wibm90ZSB0aGF0IHRoZSB0ZWNobmlxdWUgb2YgdXNpbmcgcmFuZG9tIGlkZW50aWZpZXJzIGFzIHByb2JhYmlsaXN0aWMgc2VjdXJlIGNhcGFiaWxpdGllcyB3YXMgcHJldmlvdXNseSB1c2VkIGluIFsyOCwgIDM3IF0uXCJdLFwiMTUxMzcxMDQwMlwiOltcIlRvIGdldCBhcm91bmQgdGhlc2UgcHJvYmxlbXMgc2V2ZXJhbCBzb2x1dGlvbnMgaGF2ZSBiZWVuIHByb3Bvc2VkIHRvIGRlcGxveSB0aGVzZSBzZXJ2aWNlcyBhdCB0aGUgYXBwbGljYXRpb24gbGV2ZWwgWyA0ICwgMTQsIDIwXS5cIl0sXCIxNTE3NjMzNzUzXCI6W1wiTXVsdGktUHJvdG9jb2wgTGFiZWwgU3dpdGNoaW5nIChNUExTKSB3YXMgcmVjZW50bHkgcHJvcG9zZWQgdG8gc3BlZWQtdXAgdGhlIElQIHJvdXRlIGxvb2t1cCBhbmQgdG8gcGVyZm9ybSByb3V0ZSBwaW5uaW5nIFsgMSBdLlwiXSxcIjE1MzI4OTk1MjhcIjpbXCJBIHBvd2VyLWxhdyByYW5kb20gZ3JhcGggdG9wb2xvZ3kgZ2VuZXJhdGVkIHdpdGggdGhlIElORVQgdG9wb2xvZ3kgZ2VuZXJhdG9yIFsgMTYgXSB3aXRoIDUwMDAgbm9kZXMsIHdoZXJlIHRoZSBkZWxheSBvZiBlYWNoIGxpbmsgaXMgdW5pZm9ybWx5IGRpc3RyaWJ1dGVkIGluIHRoZSBpbnRlcnZhbCBbNTsgMTAwKSBtcy4gVGhlIGkzIHNlcnZlcnMgYXJlIHJhbmRvbWx5IGFzc2lnbmVkIHRvIHRoZSBuZXR3b3JrIG5vZGVzLlwiXSxcIjE2Mzg4MTg0NDVcIjpbXCJUUklBRCBbIDMgXSBhbmQgSVBOTCBbOV0gaGF2ZSBiZWVuIHJlY2VudGx5IHByb3Bvc2VkIHRvIHNvbHZlIHRoZSBJUHY0IGFkZHJlc3Mgc2NhcmNpdHkgcHJvYmxlbS5cIl0sXCIxODYzMjYxNzIxXCI6W1wiV2l0aCBhbnkgc2NoZW1lIHRoYXQgc3VwcG9ydHMgbW9iaWxpdHksIGVmZmljaWVuY3lpcyBhIG1ham9yIGNvbmNlcm4gWyAyMSBdLlwiXSxcIjE4OTM1MDQyNzJcIjpbXCJFeGlzdGluZyBJUCBtdWx0aWNhc3Qgc29sdXRpb25zIFsxLCA1LCAgNyAsIDgsIDEyXSBzY2FsZSBwb29ybHkgd2l0aCB0aGUgbnVtYmVyIG9mIGdyb3VwcywgYXMgZXZlcnkgcm91dGVyIGhhcyB0byBtYWludGFpbiBzdGF0ZSBmb3IgZWFjaCBncm91cCB3aG9zZSBkaXN0cmlidXRpb24gdHJlZSBwYXNzZXMgdGhyb3VnaCB0aGUgcm91dGVyLlwiXSxcIjIwMDc1Njc1NTFcIjpbXCJub3RlIHRoYXQgdGhlIHRlY2huaXF1ZSBvZiB1c2luZyByYW5kb20gaWRlbnRpZmllcnMgYXMgcHJvYmFiaWxpc3RpYyBzZWN1cmUgY2FwYWJpbGl0aWVzIHdhcyBwcmV2aW91c2x5IHVzZWQgaW4gWyAyOCAsIDM3XS5cIl0sXCIyMDQ1MDI4MzQ4XCI6W1wiRXN0cmluIGV0IGFsLiBoYXZlIHByb3Bvc2VkIGFuIGF0dHJpYnV0ZS1iYXNlZCBkYXRhIGNvbW11bmljYXRpb24gbWVjaGFuaXNtLCBjYWxsZWQgZGlyZWN0IGRpZmZ1c2lvbiwgdG8gZGlzc2VtaW5hdGUgZGF0YSBpbiBzZW5zb3IgbmV0d29ya3MgWyA4IF0uXCJdLFwiMjA3MDEyNTQ5NlwiOltcIkdsb2JhbCBJUC1BbnljYXN0IChHSUEpIHByb3ZpZGVzIGFuIGFyY2hpdGVjdHVyZSB0aGF0IGFkZHJlc3NlcyB0aGUgc2NhbGFiaWxpdHkgcHJvYmxlbXMgb2YgdGhlIG9yaWdpbmFsIElQIEFueWNhc3QgYnkgZGlmZmVyZW50aWF0aW5nIGJldHdlZW4gcmFyZWx5IHVzZWQgYW5kIHBvcHVsYXIgYW55Y2FzdCBncm91cHMgWyAxNyBdLlwiXSxcIjIwNzM0NDA0NjBcIjpbXCIyLiBSZXNvdXJjZSBhbGxvY2F0aW9uOiBFYWNoIHNlcnZlciB1c2VzIEZhaXIgUXVldWVpbmcgWyA3IF0gdG8gYWxsb2NhdGUgcmVzb3VyY2VzIGFtb25nc3QgdGhlIHRyaWdnZXJzIGl0IHN0b3Jlcy5cIl0sXCIyMDc5OTk0MjAzXCI6W1wiVGhlIHJlbmRlenZvdXMtYmFzZWQgYWJzdHJhY3Rpb24gaXMgc2ltaWxhciB0byB0aGUgSVAgbXVsdGljYXN0IGFic3RyYWN0aW9uIFsgNiBdLlwiXSxcIjIwOTU3Mzg0OTRcIjpbXCJBbm90aGVyIHBvc3NpYmlsaXR5IHRvIGRldGVjdCBsb29wcyBtb3JlIGVmZmljaWVudGx5IHdvdWxkIGJlIHRvIHVzZSBhIEJsb29tIGZpbHRlciB0byBlbmNvZGUgdGhlIHNldCBvZiBpMyBzZXJ2ZXJzIGFsb25nIHRoZSBwYWNrZXTigJlzIHBhdGgsIGFzIHByb3Bvc2VkIGluIHRoZSBJY2FydXMgZnJhbWV3b3JrIFsgMzQgXS5cIl0sXCIyMTA0NTA3NDI0XCI6W1wiU29tZSBhcHBsaWNhdGlvbnMgbWF5IHJlcXVpcmUgdGhpcmQgcGFydGllcyB0byBwcm9jZXNzIHRoZSBkYXRhIGJlZm9yZSBpdCByZWFjaGVzIHRoZSBkZXN0aW5hdGlvbiBbIDEwIF0uXCJdLFwiMjExMTM0OTM4NVwiOltcIlRSSUFEIFszXSBhbmQgSVBOTCBbIDkgXSBoYXZlIGJlZW4gcmVjZW50bHkgcHJvcG9zZWQgdG8gc29sdmUgdGhlIElQdjQgYWRkcmVzcyBzY2FyY2l0eSBwcm9ibGVtLlwiXSxcIjIxMTk4MzYxODRcIjpbXCJUbyBnZXQgYXJvdW5kIHRoZXNlIHByb2JsZW1zIHNldmVyYWwgc29sdXRpb25zIGhhdmUgYmVlbiBwcm9wb3NlZCB0byBkZXBsb3kgdGhlc2Ugc2VydmljZXMgYXQgdGhlIGFwcGxpY2F0aW9uIGxldmVsIFs0LCAxNCwgIDIwIF0uXCJdLFwiMjEyMjI2OTkyNVwiOltcIlRoaXMgc2hvdWxkIGNvbWUgYXMgbm8gc3VycHJpc2UsIGFzIGlkZW50aWZpZXJzIGNhbiBiZSB2aWV3ZWQgYXMgc2VtYW50aWMtbGVzcyBuYW1lcy4gRE5TIG1hcHMgaG9zdG5hbWVzIHRvIElQIGFkZHJlc3NlcyBbIDE1IF0uXCJdLFwiMjEyNTg1NTc1MFwiOltcIlRoZSBJbnRlbnRpb25hbCBOYW1pbmcgU3lzdGVtIChJTlMpIGlzIGEgcmVzb3VyY2UgZGlzY292ZXJ5IGFuZCBzZXJ2aWNlIGxvY2F0aW9uIHN5c3RlbSBmb3IgbW9iaWxlIGhvc3RzIFsgMzIgXS5cIl0sXCIyMTUwMjIwOTQ0XCI6W1wiTW9iaWxlIElQIFsxNiwgIDE3IF0gc3VmZmVycyBmcm9tIGluZWZmaWNpZW50IHJvdXRpbmcsIGFzIGVhY2ggcGFja2V0IHRvIHRoZSBtb2JpbGUgaG9zdCBpcyBmb3J3YXJkZWQgdGhyb3VnaCBhIGhvbWUgYWdlbnQgd2hpY2ggaXMgcGh5c2ljYWxseSBhdHRhY2hlZCB0byB0aGUgbW9iaWxlIGhvc3TigJkgcyBob21lIGFkZHJlc3MuXCJdLFwiMjE1MDY3NjU4NlwiOltcIkluIHRoZSBjYXNlIG9mIENob3JkLCB0aGUgbmF0dXJhbCByZXBsaWNhdGlvbiBwb2xpY3kgaXMgdG8gcmVwbGljYXRlIGEgdHJpZ2dlciBvbiB0aGUgaW1tZWRpYXRlIHN1Y2Nlc3NvciBvZiB0aGUgc2VydmVyIHJlc3BvbnNpYmxlIGZvciB0aGF0IHRyaWdnZXIgWyA1IF0uXFx1MDAxYlRoaXMgaGV1cmlzdGljIHdhcyBvcmlnaW5hbGx5IHByb3Bvc2VkIGluIFsgNSBdLlxcdTAwMWJPdGhlciBDaG9yZCByZWxhdGVkIHBlcmZvcm1hbmNlIG1ldHJpY3Mgc3VjaCBhcyB0aGUgcm91dGUgbGVuZ3RoIGFuZCBzeXN0ZW0gcm9idXN0bmVzcyBhcmUgcHJlc2VudGVkIGluIFsgNSBdLlwiXSxcIjIxNTMzMTkxOThcIjpbXCJPbmUgY291bGQgaW5zdGVhZCB1c2UgbGF0ZW5jeSBiYXNlZCBlbmNvZGluZywgbXVjaCBhcyBpbiBbIDIwIF0uXFx1MDAxYlRvIHJvdXRlIGEgcGFja2V0LCBhIHNlcnZlciBzZWxlY3RzIHRoZSBjbG9zZXN0IG5vZGUgaW4gdGVybXMgb2YgbmV0d29yayBkaXN0YW5jZSBhbW9uZ3N0ICgxKSB0aGUgZmluZ2VyIHdpdGggdGhlIGxhcmdlc3QgaWRlbnRpZmllciBwcmVjZWRpbmcgdGhlIHBhY2tldOKAmXMgd2FzIHNob3duIHRvIGFwcHJveGltYXRlIHRoZSBJbnRlcm5ldCBsYXRlbmN5IHdlbGwgWyAyMCBd4oCUb250byB0aGUgb25lLWRpbWVuc2lvbmFsIENob3JkIGlkZW50aWZpZXIgc3BhY2UuXCJdLFwiMjE1NzkxODYxN1wiOltcIlRvIGdldCBhcm91bmQgdGhlc2UgcHJvYmxlbXMgc2V2ZXJhbCBzb2x1dGlvbnMgaGF2ZSBiZWVuIHByb3Bvc2VkIHRvIGRlcGxveSB0aGVzZSBzZXJ2aWNlcyBhdCB0aGUgYXBwbGljYXRpb24gbGV2ZWwgWzQsICAxNCAsIDIwXS5cIl0sXCIyMTYzMDU5MTkwXCI6W1wiV2hpbGUgaTMgaXMgaW1wbGVtZW50ZWQgb24gdG9wIG9mIENob3JkLCBpbiBwcmluY2lwbGUgaTMgY2FuIHVzZSBhbnkgb2YgdGhlIHJlY2VudGx5IHByb3Bvc2VkIFAyUCBsb29rdXAgc3lzdGVtcyBzdWNoIGFzIENBTiBbIDIyIF0sIFBhc3RyeSBbMjNdIGFuZCBUYXBlc3RyeSBbMTJdLlxcdTAwMWJUaGlzIGFzc3VtcHRpb24gaXMgY29uc2lzdGVudCB3aXRoIHRoZSB3YXkgdGhlIGlkZW50aWZpZXJzIGFyZSBjaG9zZW4gaW4gb3RoZXIgbG9va3VwIHN5c3RlbXMgc3VjaCBhcyBDQU4gWyAyMiBdIGFuZCBQYXN0cnkgWzIzXS5cXHUwMDFiSG93ZXZlciwgb25lIGNvdWxkIGVhc2lseSBpbXBsZW1lbnQgaTMgb24gdG9wIG9mIG90aGVyIGxvb2t1cCBwcm90b2NvbHMgc3VjaCBhcyBDQU4gWyAyMiBdLCBQYXN0cnkgWzIzXSBhbmQgVGFwZXN0cnkgWzEyXS5cIl0sXCIyMTY1MjIyMTIxXCI6W1wiV2hpbGUgaTMgaXMgaW1wbGVtZW50ZWQgb24gdG9wIG9mIENob3JkLCBpbiBwcmluY2lwbGUgaTMgY2FuIHVzZSBhbnkgb2YgdGhlIHJlY2VudGx5IHByb3Bvc2VkIFAyUCBsb29rdXAgc3lzdGVtcyBzdWNoIGFzIENBTiBbMjJdLCBQYXN0cnkgWzIzXSBhbmQgVGFwZXN0cnkgWyAxMiBdLlxcdTAwMWJIb3dldmVyLCBvbmUgY291bGQgZWFzaWx5IGltcGxlbWVudCBpMyBvbiB0b3Agb2Ygb3RoZXIgbG9va3VwIHByb3RvY29scyBzdWNoIGFzIENBTiBbMjJdLCBQYXN0cnkgWzIzXSBhbmQgVGFwZXN0cnkgWyAxMiBdLlwiXSxcIjIxNjkyNjU3NzNcIjpbXCJUaGVzZSBhYnN0cmFjdGlvbnMgaGF2ZSBwcm92ZW4gZGlmZmljdWx0IHRvIGltcGxlbWVudCBzY2FsYWJseSBhdCB0aGUgSVAgbGF5ZXIgWzQsICAxMyAsIDI3XS5cIl0sXCIyMTcwMjQ2MjIwXCI6W1wiQWN0aXZlIE5ldHdvcmtzIGFpbSB0byBzdXBwb3J0IHJhcGlkIGRldmVsb3BtZW50IGFuZCBkZXBsb3ltZW50IG9mIG5ldyBuZXR3b3JrIGFwcGxpY2F0aW9ucyBieSBkb3dubG9hZGluZyBhbmQgZXhlY3V0aW5nIGN1c3RvbWl6ZWQgcHJvZ3JhbXMgaW4gdGhlIG5ldHdvcmsgWyAzMyBdLlwiXSxcIjIxNzkxMzkyNDlcIjpbXCJJZGVudGlmaWVyU3RhY2tzIChTdXBwb3J0aW5nIFNlcnZpY2UgQ29tcG9zaXRpb24pOiBTb21lIGFwcGxpY2F0aW9ucyBtYXkgcmVxdWlyZSB0aGlyZCBwYXJ0aWVzIHRvIHByb2Nlc3MgdGhlIGRhdGEgYmVmb3JlIGl0IHJlYWNoZXMgdGhlIGRlc3RpbmF0aW9uIFsgMTEgXS5cIl0sXCIyMjUwOTMzMjg0XCI6W1wiVGhlIHJlbmRlenZvdXMtYmFzZWQgY29tbXVuaWNhdGlvbiBpcyBzaW1pbGFyIGluIHNwaXJpdCB0byB0aGUgdHVwbGUgc3BhY2Ugd29yayBpbiBkaXN0cmlidXRlZCBzeXN0ZW1zIFsgMiAsIDE0LCAzNl0uXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE0NDU1MzA3OCwyMTAzNDI4MzAxLDIxNjg5MDMwOTAsMjEzOTE1MzkwNCwyMjYwMjczMzk3LDIxNTQzNDUzNTgsMjExMTM0OTM4NSwxNjcxMjE4NDI2LDI2MTA2MDM2MDYsMTU3NTcwMTEzNywyMDE0OTUyMTIxLDIxNTA2NzY1ODYsMjE0NzQ5OTA5NCwxNTM5OTk2MjQ2LDIxMTk4MzYxODQsMjA5ODMzNDQzOSwyMTE4NDI4MTkzLDIxNTgwNDk4MjEsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDIxNDQ1NTMwNzgsMjEwMzQyODMwMSwyMTY4OTAzMDkwLDIxMzkxNTM5MDQsMjI2MDI3MzM5NywyMTU0MzQ1MzU4LDIxMTEzNDkzODUsMTY3MTIxODQyNiwyNjEwNjAzNjA2LDE1NzU3MDExMzcsMjAxNDk1MjEyMSwyMTUwNjc2NTg2LDIxNDc0OTkwOTQsMTUzOTk5NjI0NiwyMTE5ODM2MTg0LDIwOTgzMzQ0MzldLFwiQU5GXCI6W3tcIkZOXCI6XCJJb25cIixcIkxOXCI6XCJTdG9pY2FcIixcIlNcIjoxfSx7XCJGTlwiOlwiRGFuaWVsXCIsXCJMTlwiOlwiQWRraW5zXCIsXCJTXCI6Mn0se1wiRk5cIjpcIlNoZWxsZXlcIixcIkxOXCI6XCJaaHVhbmdcIixcIlNcIjozfSx7XCJGTlwiOlwiU2NvdHRcIixcIkxOXCI6XCJTaGVua2VyXCIsXCJTXCI6NH0se1wiRk5cIjpcIlNvbmVzaFwiLFwiTE5cIjpcIlN1cmFuYVwiLFwiU1wiOjV9XSxcIkJWXCI6XCJhY20gc3BlY2lhbCBpbnRlcmVzdCBncm91cCBvbiBkYXRhIGNvbW11bmljYXRpb25cIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiQUNNXCJ9In0seyJsb2dwcm9iIjotMTcuNDQ3LCJrZXNFbnRpdHlJZCI6NDYwNzI5MiwiSWQiOjIxNjg4ODYxMzEsIlRpIjoiYW5hbHlzaXMgb2YgdGhlIGV2b2x1dGlvbiBvZiBwZWVyIHRvIHBlZXIgc3lzdGVtcyIsIlkiOjIwMDIsIkQiOiIyMDAyLTA3LTIxIiwiQ0MiOjU3OSwiUklkIjpbMjExODQyODE5MywyMTU4MDQ5ODIxLDIxNjMwNTkxOTAsMTY1MDY3NTUwOSwyMTA0MjEwODk0LDIxNTA2NzY1ODYsMTU4NDYzNTQ1OSwyMDIwNzY1NjUyLDIwMDA4NzYwMjMsMTY0MjAyNzM0OCw5NTQzMjE0OSwxNTI4NTQ1ODk3LDIxMzg5NzI3OTUsMTk4OTY0MTMwMSwxODg5NjgxNTU0XSwiQUEiOlt7IkF1TiI6ImRhdmlkIGxpYmVubm93ZWxsIn0seyJBdU4iOiJoYXJpIGJhbGFrcmlzaG5hbiJ9LHsiQXVOIjoiZGF2aWQgciBrYXJnZXIifV0sIkYiOlt7IkZOIjoiY29udGVudCBhZGRyZXNzYWJsZSBuZXR3b3JrIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGhhc2ggdGFibGUifSx7IkZOIjoiam9pbnMifSx7IkZOIjoicGFzdHJ5In0seyJGTiI6ImNob3JkIn0seyJGTiI6InNlY3VyZSBtdWx0aSBwYXJ0eSBjb21wdXRhdGlvbiJ9LHsiRk4iOiJwZWVyIHRvIHBlZXIifSx7IkZOIjoidXBwZXIgYW5kIGxvd2VyIGJvdW5kcyJ9LHsiRk4iOiJ0aGVvcmV0aWNhbCBjb21wdXRlciBzY2llbmNlIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkFuYWx5c2lzIG9mIHRoZSBldm9sdXRpb24gb2YgcGVlci10by1wZWVyIHN5c3RlbXNcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxMzQsXCJJbnZlcnRlZEluZGV4XCI6e1wiSW5cIjpbMF0sXCJ0aGlzXCI6WzEsMTA2XSxcInBhcGVyLFwiOlsyXSxcIndlXCI6WzNdLFwiZ2l2ZVwiOls0LDEwMF0sXCJhXCI6WzUsMjYsMzMsNjgsOTUsMTAxLDEwOSwxMjddLFwidGhlb3JldGljYWxcIjpbNl0sXCJhbmFseXNpc1wiOls3XSxcIm9mXCI6WzgsMTYsMTIxLDEzMF0sXCJwZWVyLXRvLXBlZXJcIjpbOV0sXCIoUDJQKVwiOlsxMF0sXCJuZXR3b3Jrc1wiOlsxMV0sXCJvcGVyYXRpbmdcIjpbMTJdLFwiaW5cIjpbMTMsODRdLFwidGhlXCI6WzE0LDQwLDU0LDc3LDg1LDEzMV0sXCJmYWNlXCI6WzE1XSxcImNvbmN1cnJlbnRcIjpbMTddLFwiam9pbnNcIjpbMThdLFwiYW5kXCI6WzE5LDM4LDUyLDc1LDExNF0sXCJ1bmV4cGVjdGVkXCI6WzIwXSxcImRlcGFydHVyZXMuXCI6WzIxXSxcIldlXCI6WzIyLDU2LDk5XSxcImZvY3VzXCI6WzIzXSxcIm9uXCI6WzI0LDYzLDEwNV0sXCJDaG9yZCxcIjpbMjVdLFwicmVjZW50bHlcIjpbMjddLFwiZGV2ZWxvcGVkXCI6WzI4XSxcIlAyUFwiOlsyOSw3M10sXCJzeXN0ZW1cIjpbMzAsOTJdLFwidGhhdFwiOlszMSw1OCw3NiwxMTZdLFwiaW1wbGVtZW50c1wiOlszMl0sXCJkaXN0cmlidXRlZFwiOlszNCw0N10sXCJoYXNoXCI6WzM1XSxcInRhYmxlXCI6WzM2XSxcImFic3RyYWN0aW9uLFwiOlszN10sXCJzdHVkeVwiOlszOV0sXCJwcm9jZXNzXCI6WzQxXSxcImJ5XCI6WzQyXSxcIndoaWNoXCI6WzQzLDgyXSxcIkNob3JkXCI6WzQ0XSxcIm1haW50YWluc1wiOls0NV0sXCJpdHNcIjpbNDZdLFwic3RhdGVcIjpbNDgsOTNdLFwiYXNcIjpbNDldLFwibm9kZXNcIjpbNTAsODNdLFwiam9pblwiOls1MV0sXCJsZWF2ZVwiOls1M10sXCJzeXN0ZW0uXCI6WzU1XSxcImFyZ3VlXCI6WzU3XSxcInRyYWRpdGlvbmFsXCI6WzU5XSxcInBlcmZvcm1hbmNlXCI6WzYwXSxcIm1lYXN1cmVzXCI6WzYxXSxcImJhc2VkXCI6WzYyXSxcInJ1bi10aW1lXCI6WzY0XSxcImFyZVwiOls2NV0sXCJ1bmluZm9ybWF0aXZlXCI6WzY2XSxcImZvclwiOls2NywxMDhdLFwiY29udGludWFsbHlcIjpbNzBdLFwicnVubmluZ1wiOls3MV0sXCJuZXR3b3JrLFwiOls3NF0sXCJyYXRlXCI6Wzc5LDEwNywxMjRdLFwiYXRcIjpbODFdLFwibmV0d29ya1wiOls4NiwxMTBdLFwibmVlZFwiOls4N10sXCJ0b1wiOls4OCw5MCwxMTFdLFwicGFydGljaXBhdGVcIjpbODldLFwibWFpbnRhaW5cIjpbOTFdLFwiaXNcIjpbOTQsMTI1XSxcIm1vcmVcIjpbOTZdLFwidXNlZnVsXCI6Wzk3XSxcIm1ldHJpYy5cIjpbOThdLFwiZ2VuZXJhbFwiOlsxMDJdLFwibG93ZXJcIjpbMTAzXSxcImJvdW5kXCI6WzEwNF0sXCJyZW1haW5cIjpbMTEyXSxcImNvbm5lY3RlZCxcIjpbMTEzXSxcInByb3ZlXCI6WzExNV0sXCJhblwiOlsxMTddLFwiYXBwcm9wcmlhdGVseVwiOlsxMThdLFwibW9kaWZpZWRcIjpbMTE5XSxcInZlcnNpb25cIjpbMTIwXSxcIkNob3JkJ3NcIjpbMTIyXSxcIm1haW50ZW5hbmNlXCI6WzEyM10sXCJ3aXRoaW5cIjpbMTI2XSxcImxvZ2FyaXRobWljXCI6WzEyOF0sXCJmYWN0b3JcIjpbMTI5XSxcIm9wdGltdW1cIjpbMTMyXSxcInJhdGUuXCI6WzEzM119fSxcIlNcIjpbe1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTU3MTg2M1wifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbm1zLmxjcy5taXQuZWR1L3BhcGVycy9wb2RjMjAwMi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jc2wubXR1LmVkdS9jczY0NjEvd3d3L1JlYWRpbmcvTGliZW4tTm93ZWxsMDIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wZW9wbGUuY3NhaWwubWl0LmVkdS9kbG4vcGFwZXJzL2Nob3JkLWV2b2wvZXZvbC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5pYy51bmljYW1wLmJyL35jZWxpby9wZWVyMnBlZXIvbWlzY2VsYW5lYS9hbmFseXNpcy1ldm9sdXRpb24tbGliZW4tbm93ZWxsLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbm1zLmNzYWlsLm1pdC5lZHUvcGFwZXJzL3BvZGMyMDAyLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJscC51bmktdHJpZXIuZGUvZGIvY29uZi9wb2RjL3BvZGMyMDAyLmh0bWwjTGliZW4tTm93ZWxsQkswMlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9mdF9nYXRld2F5LmNmbT9pZD01NzE4NjMmdHlwZT1wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3Bkb3MuY3NhaWwubWl0LmVkdS9jaG9yZC9wYXBlcnMvcG9kYzIwMDIucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLmFjbS5vcmcvMTAuMTE0NS81NzE4MjUuNTcxODYzXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9mdF9nYXRld2F5LmNmbT9pZD01NzE4NjMmdHlwZT1wZGYmY29sbD1wb3J0YWwmZGw9QUNNXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cuc2ljcy5zZS9+c2FtZWgvcmVzZWFyY2gvUDJQL1BPREMlMjAyMDAyL0FuYWx5c2lzJTIwb2YlMjB0aGUlMjBFdm9sdXRpb24lMjBvZiUyMFBlZXItdG8tUGVlciUyMFN5c3RlbXMvcG9kYzIwMDIucGRmXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1LzU3MTgyNS41NzE4NjNcIn1dLFwiVkZOXCI6XCJQcmluY2lwbGVzIG9mIERpc3RyaWJ1dGVkIENvbXB1dGluZ1wiLFwiVlNOXCI6XCJQT0RDXCIsXCJGUFwiOjIzMyxcIkxQXCI6MjQyLFwiRE9JXCI6XCIxMC4xMTQ1LzU3MTgyNS41NzE4NjNcIixcIkNDXCI6e1wiOTU0MzIxNDlcIjpbXCJNYW55IFAyUCByb3V0aW5nIHByb3RvY29sc+KAlGxpa2UgQ0FOIFsxMF0sIENob3JkIFsxMl0sIFBhc3RyeSBbM10sIGFuZCBUYXBlc3RyeSBbMTRd4oCUaW5kdWNlIGEgY29ubmVjdGVkIG92ZXJsYXkgbmV0d29yayBhY3Jvc3MgdGhlIEludGVybmV0LCB3aXRoIGEgcmljaCBzdHJ1Y3R1cmUgdGhhdCBlbmFibGVzIGVmZmljaWVudCBrZXkgbG9va3Vwcy5cIixcIiwgc2hvd2luZyB0aGF0IHRoZSBpZGVhbCBvdmVybGF5IGNhbiBzdGlsbCByb3V0ZSBlZmZpY2llbnRseSBldmVuIGFmdGVyIHRoZSBmYWlsdXJlIG9mIHNvbWUgZnJhY3Rpb24gb2YgdGhlIG5vZGVzIFszLCA0LCAxMl0uXCIsXCJUaGVzZSBpbmNsdWRlIENBTiBbMTBdLCBQYXN0cnkgWzNdLCBhbmQgVGFwZXN0cnkgWzYsIDE0XSAoYmFzZWQgb24gbWVzaGVzIFs5XSkuXCIsXCJPdGhlciBwcm90b2NvbHMgc3VjaCBhcyBDQU4gWzEwXSBhbmQgUGFzdHJ5IFszXSBhbGxvdyBmb3IgdGhlIHBvc3NpYmlsaXR5IG9mIHVuZXhwZWN0ZWQgZmFpbHVyZXMsIGFuZCBzaG93IHRoYXQgdGhlIHN5c3RlbSBpcyBzdGlsbCB3ZWxsLXN0cnVjdHVyZWQgYWZ0ZXIgc3VjaCBmYWlsdXJlcyBvY2N1ci5cIl0sXCIxNTI4NTQ1ODk3XCI6W1wiQ2hvcmQgaW1wbGVtZW50cyBhIGRpc3RyaWJ1dGVkIGhhc2ggdGFibGUsIGJhc2VkIG9uIGNvbnNpc3RlbnQgaGFzaGluZyBbNSwgN107IGtleXMgYXJlIG1hcHBlZCBvbnRvIG5vZGVzIGJ5IGEgaGFzaCBmdW5jdGlvbiB0aGF0IGNhbiBiZSByZXNvbHZlZCBieSBhbnkgbm9kZSBpbiB0aGUgc3lzdGVtLCB2aWEgcXVlcmllcyB0byBvdGhlciBub2Rlcy5cIixcIlByZXZpb3VzIHdvcmsgWzUsIDddIGhhcyBzaG93biB0aGF0IGNvbnNpc3RlbnQgaGFzaGluZyBkb2VzIGEgZ29vZCBqb2Igb2YgbG9hZCBiYWxhbmNpbmcga2V5cyBvbnRvIG5vZGVzLlwiXSxcIjE2NDIwMjczNDhcIjpbXCJQcmV2aW91cyBwdWJsaWNhdGlvbnMgaGF2ZSBkZXNjcmliZWQgdGhlIENob3JkIHByb3RvY29sLCB0aGUgQ29vcGVyYXRpdmUgRmlsZSBTeXN0ZW0gYnVpbHQgdXNpbmcgaXQsIGFuZCBleHBlcmltZW50YWwgcmVzdWx0cyBzaG93aW5nIHRoYXQgaXQgcGVyZm9ybXMgd2VsbCBpbiBwcmFjdGljZSBbIDEgLCAyLCAxMiwgMTNdLlwiXSxcIjE2NTA2NzU1MDlcIjpbXCJNYW55IFAyUCByb3V0aW5nIHByb3RvY29sc+KAlGxpa2UgQ0FOIFsxMF0sIENob3JkIFsxMl0sIFBhc3RyeSBbM10sIGFuZCBUYXBlc3RyeSBbMTRd4oCUaW5kdWNlIGEgY29ubmVjdGVkIG92ZXJsYXkgbmV0d29yayBhY3Jvc3MgdGhlIEludGVybmV0LCB3aXRoIGEgcmljaCBzdHJ1Y3R1cmUgdGhhdCBlbmFibGVzIGVmZmljaWVudCBrZXkgbG9va3Vwcy5cIixcIlRoZXNlIGluY2x1ZGUgQ0FOIFsxMF0sIFBhc3RyeSBbM10sIGFuZCBUYXBlc3RyeSBbNiwgMTRdIChiYXNlZCBvbiBtZXNoZXMgWzldKS5cIl0sXCIxODg5NjgxNTU0XCI6W1wiWzExXSBoYXMgYmVndW4gdG8gdGFja2xlIHRoZSBjaGFsbGVuZ2Ugb2YgcHJvdmluZyB3ZWFrZXIgZ3VhcmFudGVlcyBhZ2FpbnN0IGFuIGFkYXB0aXZlIGFkdmVyc2FyeSwgZS5cIl0sXCIxOTg5NjQxMzAxXCI6W1wiT25lIHRoZW4gY2FuIGNvbnNpZGVyIHRoZSBpc3N1ZSBvZiBmYXVsdCB0b2xlcmFuY2XigJRlLmcuLCBzaG93aW5nIHRoYXQgdGhlIGlkZWFsIG92ZXJsYXkgY2FuIHN0aWxsIHJvdXRlIGVmZmljaWVudGx5IGV2ZW4gYWZ0ZXIgdGhlIGZhaWx1cmUgb2Ygc29tZSBmcmFjdGlvbiBvZiB0aGUgbm9kZXMgWzMsICA0ICwgMTJdLlxcdTAwMWJNYW55IG9mIHRoZXNlIFAyUCBzeXN0ZW1zLCBzdWNoIGFzIHRob3NlIG9mIFBsYXh0b24gZXQgYWwuIFs5XSBhbmQgRmlhdCBhbmQgU2FpYSBbIDQgXSwgZm9jdXMgb24gbW9kZWxzIGluIHdoaWNoIG5vZGVzIGpvaW4gYW5kIGRlcGFydCBvbmx5IGluIGEgd2VsbC1iZWhhdmVkIGZhc2hpb24sIGFsbG93aW5nIG1haW50ZW5hbmNlIHRvIGhhcHBlbiBvbmx5IGF0IHRoZSB0aW1lIG9mIGFycml2YWwgYW5kIGRlcGFydHVyZS5cIl0sXCIyMDAwODc2MDIzXCI6W1wiVGhlc2UgaW5jbHVkZSBDQU4gWzEwXSwgUGFzdHJ5IFszXSwgYW5kIFRhcGVzdHJ5IFs2LCAxNF0gKGJhc2VkIG9uIG1lc2hlcyBbOV0pLlwiLFwiWzldIGFuZCBGaWF0IGFuZCBTYWlhIFs0XSwgZm9jdXMgb24gbW9kZWxzIGluIHdoaWNoIG5vZGVzIGpvaW4gYW5kIGRlcGFydCBvbmx5IGluIGEgd2VsbC1iZWhhdmVkIGZhc2hpb24sIGFsbG93aW5nIG1haW50ZW5hbmNlIHRvIGhhcHBlbiBvbmx5IGF0IHRoZSB0aW1lIG9mIGFycml2YWwgYW5kIGRlcGFydHVyZS5cIl0sXCIyMDIwNzY1NjUyXCI6W1wiQ2hvcmQgaW1wbGVtZW50cyBhIGRpc3RyaWJ1dGVkIGhhc2ggdGFibGUsIGJhc2VkIG9uIGNvbnNpc3RlbnQgaGFzaGluZyBbNSwgN107IGtleXMgYXJlIG1hcHBlZCBvbnRvIG5vZGVzIGJ5IGEgaGFzaCBmdW5jdGlvbiB0aGF0IGNhbiBiZSByZXNvbHZlZCBieSBhbnkgbm9kZSBpbiB0aGUgc3lzdGVtLCB2aWEgcXVlcmllcyB0byBvdGhlciBub2Rlcy5cIixcIlByZXZpb3VzIHdvcmsgWzUsIDddIGhhcyBzaG93biB0aGF0IGNvbnNpc3RlbnQgaGFzaGluZyBkb2VzIGEgZ29vZCBqb2Igb2YgbG9hZCBiYWxhbmNpbmcga2V5cyBvbnRvIG5vZGVzLlwiXSxcIjIxMDQyMTA4OTRcIjpbXCJUaGVzZSBpbmNsdWRlIENBTiBbMTBdLCBQYXN0cnkgWzNdLCBhbmQgVGFwZXN0cnkgWzYsIDE0XSAoYmFzZWQgb24gbWVzaGVzIFs5XSkuXCJdLFwiMjEzODk3Mjc5NVwiOltcIls4XS5cIixcIkFzIGEgc3BlY2lmaWMgZXhhbXBsZSwgY29uc2lkZXIgYSBQb2lzc29uIG1vZGVsIG9mIGFycml2YWxzIGFuZCBkZXBhcnR1cmVzIFs4XTogbm9kZXMgYXJyaXZlIGFjY29yZGluZyB0byBhIFBvaXNzb24gcHJvY2VzcyB3aXRoIHJhdGUgQSwgd2hpbGUgYSBub2RlIGluIHRoZSBzeXN0ZW0gZGVwYXJ0cyBhY2NvcmRpbmcgdG8gYW4gZXhwb25lbnRpYWwgZGlzdHJpYnV0aW9uIHdpdGggcmF0ZSBwYXJhbWV0ZXIgIyAoaS5cIl0sXCIyMTUwNjc2NTg2XCI6W1wiUHJldmlvdXMgcHVibGljYXRpb25zIGhhdmUgZGVzY3JpYmVkIHRoZSBDaG9yZCBwcm90b2NvbCwgdGhlIENvb3BlcmF0aXZlIEZpbGUgU3lzdGVtIGJ1aWx0IHVzaW5nIGl0LCBhbmQgZXhwZXJpbWVudGFsIHJlc3VsdHMgc2hvd2luZyB0aGF0IGl0IHBlcmZvcm1zIHdlbGwgaW4gcHJhY3RpY2UgWzEsIDIsIDEyLCAxM10uXCJdLFwiMjE1ODA0OTgyMVwiOltcIk1hbnkgUDJQIHJvdXRpbmcgcHJvdG9jb2xz4oCUbGlrZSBDQU4gWzEwXSwgQ2hvcmQgWzEyXSwgUGFzdHJ5IFszXSwgYW5kIFRhcGVzdHJ5IFsxNF3igJRpbmR1Y2UgYSBjb25uZWN0ZWQgb3ZlcmxheSBuZXR3b3JrIGFjcm9zcyB0aGUgSW50ZXJuZXQsIHdpdGggYSByaWNoIHN0cnVjdHVyZSB0aGF0IGVuYWJsZXMgZWZmaWNpZW50IGtleSBsb29rdXBzLlwiLFwiLCBzaG93aW5nIHRoYXQgdGhlIGlkZWFsIG92ZXJsYXkgY2FuIHN0aWxsIHJvdXRlIGVmZmljaWVudGx5IGV2ZW4gYWZ0ZXIgdGhlIGZhaWx1cmUgb2Ygc29tZSBmcmFjdGlvbiBvZiB0aGUgbm9kZXMgWzMsIDQsIDEyXS5cIixcIlNlY29uZCwgd2UgY29uc2lkZXIgdGhlIG1haW50ZW5hbmNlIHByb3RvY29sIHVzZWQgYnkgdGhlIENob3JkIFAyUCByb3V0aW5nIHByb3RvY29sIFsxMl0uXCIsXCJQcmV2aW91cyBwdWJsaWNhdGlvbnMgaGF2ZSBkZXNjcmliZWQgdGhlIENob3JkIHByb3RvY29sLCB0aGUgQ29vcGVyYXRpdmUgRmlsZSBTeXN0ZW0gYnVpbHQgdXNpbmcgaXQsIGFuZCBleHBlcmltZW50YWwgcmVzdWx0cyBzaG93aW5nIHRoYXQgaXQgcGVyZm9ybXMgd2VsbCBpbiBwcmFjdGljZSBbMSwgMiwgMTIsIDEzXS5cIixcIkluIHRoaXMgc2VjdGlvbiwgd2Ugb3V0bGluZSB0aGUgQ2hvcmQgUDJQIHN5c3RlbSwgZGV0YWlscyBvZiB3aGljaCBjYW4gYmUgZm91bmQgaW4gYW4gZWFybGllciBwYXBlciBbMTJdLlwiLFwiRXZlcnkgbm9kZSBhbHdheXMgaGFzIHNvbWUgZmluZ2VyIHBvaW50aW5nIGhhbGZ3YXkgdG8gYW55IGRlc3RpbmF0aW9uIGtleSwgc28gYSBzZXF1ZW5jZSBvZiDigJxoYWx2aW5nc+KAnSBvZiB0aGUgZGlzdGFuY2UgdGFrZSB1cyB0byB0aGUga2V5IFsxMl0uXCIsXCJQcmV2aW91cyB3b3JrIFsxMl0gaGFzIGVzdGFibGlzaGVkIGEgbnVtYmVyIG9mIGdvb2QgcHJvcGVydGllcyBvZiB0aGlzIGlkZWFsIHN0YXRlOiB0aGUgcHJvY2VkdXJlIHAgcS0gaiBrIGwgbCxtLGogaixuOG8gLlwiXSxcIjIxNjMwNTkxOTBcIjpbXCJbMTBdIG5hbWVkIHRoaXMgY29uY2VwdOKAlHByb3ZpZGVzIGEgbWFwcGluZyBvZiBrZXlzIGluIHNvbWUga2V5c3BhY2UgdG8gbWFjaGluZXMgaW4gdGhlIG5ldHdvcmsgYW5kIGEgbG9va3VwIHByb3RvY29sIHRvIGFsbG93IGFueSBzZWFyY2hlciB0byBmaW5kIHRoZSBwYXJ0aWN1bGFyIG1hY2hpbmUgcmVzcG9uc2libGUgZm9yIGFueSBrZXkuXCIsXCJNYW55IFAyUCByb3V0aW5nIHByb3RvY29sc+KAlGxpa2UgQ0FOIFsxMF0sIENob3JkIFsxMl0sIFBhc3RyeSBbM10sIGFuZCBUYXBlc3RyeSBbMTRd4oCUaW5kdWNlIGEgY29ubmVjdGVkIG92ZXJsYXkgbmV0d29yayBhY3Jvc3MgdGhlIEludGVybmV0LCB3aXRoIGEgcmljaCBzdHJ1Y3R1cmUgdGhhdCBlbmFibGVzIGVmZmljaWVudCBrZXkgbG9va3Vwcy5cIixcIlRoZXNlIGluY2x1ZGUgQ0FOIFsxMF0sIFBhc3RyeSBbM10sIGFuZCBUYXBlc3RyeSBbNiwgMTRdIChiYXNlZCBvbiBtZXNoZXMgWzldKS5cIixcIk90aGVyIHByb3RvY29scyBzdWNoIGFzIENBTiBbMTBdIGFuZCBQYXN0cnkgWzNdIGFsbG93IGZvciB0aGUgcG9zc2liaWxpdHkgb2YgdW5leHBlY3RlZCBmYWlsdXJlcywgYW5kIHNob3cgdGhhdCB0aGUgc3lzdGVtIGlzIHN0aWxsIHdlbGwtc3RydWN0dXJlZCBhZnRlciBzdWNoIGZhaWx1cmVzIG9jY3VyLlwiXX0sXCJQUlwiOlsyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDIxNjI3MzM2NzcsMjExOTI0NTEwNiwyMDU2MzYzMzUzLDIwOTY3MDY1MTIsMjEyMzQ4MjQ2MiwxNjUwNjc1NTA5LDIxNjkwNDcyMjYsMTk3MDU2NDc3OCwxNjMxNTYzMzk3LDIxNTM1Mjc5MjAsMTY1MDgwMjE4MSwyMTUwNjc2NTg2LDIxMDQyMTA4OTQsMjAwMDg3NjAyMywyMDIwNzY1NjUyLDIxNDg1NzM0NjEsMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE1ODA0OTgyMSwyMTYyNzMzNjc3LDIxMTkyNDUxMDYsMjA1NjM2MzM1MywyMDk2NzA2NTEyLDIxMjM0ODI0NjIsMTY1MDY3NTUwOSwyMTY5MDQ3MjI2LDE5NzA1NjQ3NzgsMTYzMTU2MzM5NywyMTUzNTI3OTIwLDE2NTA4MDIxODEsMjE1MDY3NjU4NiwyMTA0MjEwODk0LDIwMDA4NzYwMjMsMjAyMDc2NTY1MiwyMTQ4NTczNDYxXSxcIkFORlwiOlt7XCJGTlwiOlwiRGF2aWRcIixcIkxOXCI6XCJMaWJlbi1Ob3dlbGxcIixcIlNcIjoxfSx7XCJGTlwiOlwiSGFyaVwiLFwiTE5cIjpcIkJhbGFrcmlzaG5hblwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJEYXZpZCBSLlwiLFwiTE5cIjpcIkthcmdlclwiLFwiU1wiOjN9XSxcIkJWXCI6XCJQcm9jZWVkaW5ncyBvZiB0aGUgdHdlbnR5LWZpcnN0IGFubnVhbCBzeW1wb3NpdW0gb24gUHJpbmNpcGxlcyBvZiBkaXN0cmlidXRlZCBjb21wdXRpbmdcIixcIkJUXCI6XCJwXCIsXCJQQlwiOlwiQUNNXCJ9In0seyJsb2dwcm9iIjotMTcuNDgsImtlc0VudGl0eUlkIjo0NzYxMDAzLCJJZCI6NzQ0NDk0NzMsIlRpIjoiYSBkaXN0cmlidXRlZCBkZWNlbnRyYWxpc2VkIGluZm9ybWF0aW9uIHN0b3JhZ2UgYW5kIHJldHJpZXZhbCBzeXN0ZW0iLCJZIjoxOTk5LCJEIjoiMTk5OS0wMS0wMSIsIkNDIjoxMjgsIkFBIjpbeyJBdU4iOiJpYW4gY2xhcmtlIn1dLCJGIjpbeyJGTiI6ImluZm9ybWF0aW9uIHJlcG9zaXRvcnkifSx7IkZOIjoiaW5kZXhhdGlvbiJ9LHsiRk4iOiJpbmZvcm1hdGlvbiByZXRyaWV2YWwifSx7IkZOIjoiZGF0YWJhc2UifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJBIERpc3RyaWJ1dGVkIERlY2VudHJhbGlzZWQgSW5mb3JtYXRpb24gU3RvcmFnZSBhbmQgUmV0cmlldmFsIFN5c3RlbVwiLFwiVkZOXCI6XCJcIixcIlBSXCI6WzIxNzQ1MDc4NjksMjE2MzA1OTE5MCwyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjEwNDIxMDg5NCwxNjUwNjc1NTA5LDIzOTk2NDIwOSwyMDAwODc2MDIzLDIwMjA3NjU2NTIsMjE1ODA0OTgyMSwyMTYzNTk4NjkwLDIxMDYxMDExMjcsMjEwMzY0NzYyOCwyMTUwNjc2NTg2LDIwNjQzNjA1NDMsMjExOTI0NTEwNiwyMTIzODIwODIwLDI4NDY2NjAxODgsMTU4MDAwNDQ0MCwyMTMwODg4ODcyLDIxNzQ1MDc4NjksMjE2MzA1OTE5MCwyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjEwNDIxMDg5NCwxNjUwNjc1NTA5LDIzOTk2NDIwOSwyMDAwODc2MDIzLDIwMjA3NjU2NTIsMjE1ODA0OTgyMSwyMTYzNTk4NjkwLDIxMDYxMDExMjcsMjEwMzY0NzYyOCwyMTUwNjc2NTg2LDIwNjQzNjA1NDMsMjExOTI0NTEwNiwyMTIzODIwODIwLDI4NDY2NjAxODgsMTU4MDAwNDQ0MCwyMTMwODg4ODcyXSxcIkFORlwiOlt7XCJGTlwiOlwiSWFuXCIsXCJMTlwiOlwiQ2xhcmtlXCIsXCJTXCI6MX1dLFwiQlRcIjpcImFcIn0ifSx7ImxvZ3Byb2IiOi0xNy41MTcsImtlc0VudGl0eUlkIjo0OTM4ODMxLCJJZCI6MjA2NDM2MDU0MywiVGkiOiJhIHByb3RvdHlwZSBpbXBsZW1lbnRhdGlvbiBvZiBhcmNoaXZhbCBpbnRlcm1lbW9yeSIsIlkiOjE5OTksIkQiOiIxOTk5LTA4LTAxIiwiQ0MiOjE5MSwiUklkIjpbMjA1ODk3MjU4OSwyMDQ4ODM1NzQwLDI3NTc2MTQsMjA0OTk2MTIxMiwxNTYwNzg4NDI0LDE1OTQ2NTI5NzgsMjE2NTAyODYwNSwyMDI0NTgxNzQ3LDIxMDQwMzk3MDIsMTk3Mzc2NDQ5MywyMDI3MDYxNDYzLDE5NzM0MjY3OThdLCJBQSI6W3siQXVOIjoieXVhbiBjaGVuIn0seyJBdU4iOiJqYW4gZWRsZXIifSx7IkF1TiI6ImFuZHJldyB2IGdvbGRiZXJnIn0seyJBdU4iOiJhbGxhbiBnb3R0bGllYiJ9LHsiQXVOIjoic3VtZWV0IHNvYnRpIn0seyJBdU4iOiJwZXRlciBuIHlpYW5pbG9zIn1dLCJGIjpbeyJGTiI6ImRpZ2l0YWwgZGF0YSBzdG9yYWdlIn0seyJGTiI6ImVsZWN0cm9uaWMgcHVibGlzaGluZyJ9LHsiRk4iOiJzeXN0ZW1zIGFyY2hpdGVjdHVyZSJ9LHsiRk4iOiJpbXBsZW1lbnRhdGlvbiJ9LHsiRk4iOiJkYXRhIGFjY2VzcyJ9LHsiRk4iOiJkaWdpdGFsIGxpYnJhcnkifSx7IkZOIjoiZGlzdHJpYnV0ZWQgYWxnb3JpdGhtIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiZGF0YWJhc2UifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJBIHByb3RvdHlwZSBpbXBsZW1lbnRhdGlvbiBvZiBhcmNoaXZhbCBJbnRlcm1lbW9yeVwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjgwLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkFuXCI6WzBdLFwiQXJjaGl2YWxcIjpbMV0sXCJJbnRlcm1lbW9yeVwiOlsyLDQ0LDcwXSxcInNvbHZlc1wiOlszXSxcInRoZVwiOls0LDEzLDE2LDY2XSxcInByb2JsZW1cIjpbNV0sXCJvZlwiOls2LDE1LDI2LDM1LDY5XSxcImhpZ2hseVwiOls3XSxcInN1cnZpdmFibGVcIjpbOF0sXCJkaWdpdGFsXCI6WzldLFwiZGF0YVwiOlsxMF0sXCJzdG9yYWdlXCI6WzExXSxcImluXCI6WzEyXSxcInNwaXJpdFwiOlsxNF0sXCJJbnRlcm5ldC5cIjpbMTddLFwiSW5cIjpbMThdLFwidGhpc1wiOlsxOV0sXCJwYXBlclwiOlsyMF0sXCJ3ZVwiOlsyMV0sXCJkZXNjcmliZVwiOlsyMl0sXCJhXCI6WzIzLDQyLDU1LDc3XSxcInByb3RvdHlwZVwiOlsyNF0sXCJpbXBsZW1lbnRhdGlvblwiOlsyNV0sXCJJbnRlcm1lbW9yeSxcIjpbMjddLFwiaW5jbHVkaW5nXCI6WzI4XSxcImFuXCI6WzI5XSxcIm92ZXJhbGxcIjpbMzBdLFwic3lzdGVtXCI6WzMxLDM3XSxcImFyY2hpdGVjdHVyZVwiOlszMl0sXCJhbmRcIjpbMzMsNTMsNzFdLFwiaW1wbGVtZW50YXRpb25zXCI6WzM0XSxcImtleVwiOlszNl0sXCJjb21wb25lbnRzLlwiOlszOF0sXCJUaGVcIjpbMzldLFwicmVzdWx0XCI6WzQwXSxcImlzXCI6WzQxXSxcIndvcmtpbmdcIjpbNDNdLFwidGhhdFwiOls0NV0sXCJ0b2xlcmF0ZXNcIjpbNDZdLFwidXBcIjpbNDddLFwidG9cIjpbNDgsNjFdLFwiMTdcIjpbNDldLFwic2ltdWx0YW5lb3VzXCI6WzUwXSxcIm5vZGVcIjpbNTFdLFwiZmFpbHVyZXMsXCI6WzUyXSxcImluY2x1ZGVzXCI6WzU0XSxcIldlYlwiOls1Nl0sXCJnYXRld2F5XCI6WzU3XSxcImZvclwiOls1OF0sXCJicm93c2VyLWJhc2VkXCI6WzU5XSxcImFjY2Vzc1wiOls2MF0sXCJkYXRhLlwiOls2Ml0sXCJPdXJcIjpbNjNdLFwid29ya1wiOls2NF0sXCJkZW1vbnN0cmF0ZXNcIjpbNjVdLFwiYmFzaWNcIjpbNjddLFwiZmVhc2liaWxpdHlcIjpbNjhdLFwicmVwcmVzZW50c1wiOls3Ml0sXCJzaWduaVwiOls3M10sXCJjYW50XCI6Wzc0XSxcInByb2dyZXNzXCI6Wzc1XSxcInRvd2FyZHNcIjpbNzZdLFwiZGVwbG95YWJsZVwiOls3OF0sXCJzeXN0ZW0uXCI6Wzc5XX19LFwiU1wiOlt7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJscC51bmktdHJpZXIuZGUvZGIvY29uZi9kbC9kbDk5Lmh0bWwjQ2hlbkVHR1NZOTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1LzMxMzIzOC4zMTMyNDlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2Z0X2dhdGV3YXkuY2ZtP2lkPTMxMzI0OSZ0eXBlPXBkZiZjb2xsPXBvcnRhbCZkbD1BQ01cIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9kb2lkPTMxMzIzOC4zMTMyNDlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9ueXVzY2hvbGFycy5ueXUuZWR1L2VuL3B1YmxpY2F0aW9ucy9wcm90b3R5cGUtaW1wbGVtZW50YXRpb24tb2YtYXJjaGl2YWwtaW50ZXJtZW1vcnlcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RvaS5hY20ub3JnLzEwLjExNDUvMzEzMjM4LjMxMzI0OVwifV0sXCJWRk5cIjpcIkFDTSBpbnRlcm5hdGlvbmFsIGNvbmZlcmVuY2Ugb24gRGlnaXRhbCBsaWJyYXJpZXNcIixcIlZTTlwiOlwiRExcIixcIkZQXCI6MjgsXCJMUFwiOjM3LFwiRE9JXCI6XCIxMC4xMTQ1LzMxMzIzOC4zMTMyNDlcIixcIkNDXCI6e1wiMjc1NzYxNFwiOltcIk91ciBwcm90b3R5cGUgdXNlcyBhbiBhbGdvcml0aG0gZm9yIGVuY29kaW5nIGFuZCBkZWNvZGluZyB3aG9zZSB0aW1lIGNvbXBsZXhpdHkgaXMgcXVhZHJhdGljIGluIHRoZSBudW1iZXIgb2YgZnJhZ21lbnRzIFs1XS5cIl0sXCIxNTYwNzg4NDI0XCI6W1wiVGhlIGltcG9ydGFuY2Ugb2YgdGhpcyBpc3N1ZSBpcyBub3cgYXBwYXJlbnQgYXMgdGhlIGdlbmVyYWwgb2JqZWN0aXZlIG9mIHByZXNlcnZhdGlvbiBoYXMgcmVjZWl2ZWQgY29uc2lkZXJhYmxlIHJlY2VudCBhdHRlbnRpb24gWzYsIDExLCAyLCA5LCA3LCAxNCwgMTAsIDEzXS5cIixcIlRoZSByZXBvcnQgb2YgdGhlIHRhc2sgZm9yY2Ugb24gYXJjaGl2aW5nIG9mIGRpZ2l0YWwgaW5mb3JtYXRpb24gWzddIGlzIGFuIGltcHJlc3NpdmUgYW5kIHRob3VnaHRmdWwgcHJlc2VudGF0aW9uIG9mIGdlbmVyYWwgaXNzdWVzIGFsb25nIHdpdGggYSBwYXJ0aWN1bGFyIHZpc2lvbiBmb3IgYSBmcmFtZXdvcmstbGV2ZWwgc29sdXRpb24uXCJdLFwiMTU5NDY1Mjk3OFwiOltcIlRocm91Z2ggdGhlIHVzZSBvZiBlcmFzdXJlIHJlc2lsaWVudCBjb2RlcyBbMSwgMTIsIDRdLCBvdXIgY3VycmVudCBkZXNpZ24gZm9yIEludGVybWVtb3J5IHRvbGVyYXRlcyB0aGUgbG9zcyBvZiBhbnkgNTMwIHByb2Nlc3NvcnMgd2l0aCBlc3NlbnRpYWxseSB0aGUgc2FtZSBmYWN0b3Igb2YgNSBzcGFjZSB1c2FnZS5cIixcIlRoaXMgYmFzaWMgaWRlYSBpcyBhc3NvY2lhdGVkIHdpdGggbWFueSBuYW1lcywgYmVnaW5uaW5nIHdpdGggUmVlZC1Tb2xvbW9uIGNvZGVzIG9mIGFsZ2VicmFpYyBjb2RpbmcgdGhlb3J5IFs0XS5cIl0sXCIxOTczNzY0NDkzXCI6W1wiSW4gYWRkaXRpb24sIG90aGVyIHByb2plY3RzIHN1Y2ggYXMgWzNdIGFwcGVhciB0byBiZSBhdCBhIGZvcm1hdGl2ZSBzdGFnZS5cIl0sXCIyMDI0NTgxNzQ3XCI6W1wiVGhyb3VnaCB0aGUgdXNlIG9mIGVyYXN1cmUgcmVzaWxpZW50IGNvZGVzIFsxLCAxMiwgNF0sIG91ciBjdXJyZW50IGRlc2lnbiBmb3IgSW50ZXJtZW1vcnkgdG9sZXJhdGVzIHRoZSBsb3NzIG9mIGFueSA1MzAgcHJvY2Vzc29ycyB3aXRoIGVzc2VudGlhbGx5IHRoZSBzYW1lIGZhY3RvciBvZiA1IHNwYWNlIHVzYWdlLlwiLFwiSXQgaXMgYWxzbyBhc3NvY2lhdGVkIHdpdGggdGhlIHBocmFzZSBzZWNyZXQgc2hhcmluZyBpbiBjcnlwdG9ncmFwaGljIGNvbnRleHRzLCBhbmQgbW9zdCByZWNlbnRseSBkZXNjcmliZWQgYXMgZXJhc3VyZSByZXNpbGllbnQgY29kZXMgaW4gWzFdLCB3aGVyZSBoaWdobHkgZcOGY2llbnQgbmV3IGFsZ29yaXRobXMgYXJlIHJlcG9ydGVkIGZvciB0aGUgZW5jb2RpbmcgYW5kIGRlY29kaW5nIG9wZXJhdGlvbnMuXCJdLFwiMjAyNzA2MTQ2M1wiOltcIlRoZSBpbXBvcnRhbmNlIG9mIHRoaXMgaXNzdWUgaXMgbm93IGFwcGFyZW50IGFzIHRoZSBnZW5lcmFsIG9iamVjdGl2ZSBvZiBwcmVzZXJ2YXRpb24gaGFzIHJlY2VpdmVkIGNvbnNpZGVyYWJsZSByZWNlbnQgYXR0ZW50aW9uIFs2LCAxMSwgMiwgOSwgNywgMTQsIDEwLCAxM10uXCJdLFwiMjA0ODgzNTc0MFwiOltcIlRoZSBpbXBvcnRhbmNlIG9mIHRoaXMgaXNzdWUgaXMgbm93IGFwcGFyZW50IGFzIHRoZSBnZW5lcmFsIG9iamVjdGl2ZSBvZiBwcmVzZXJ2YXRpb24gaGFzIHJlY2VpdmVkIGNvbnNpZGVyYWJsZSByZWNlbnQgYXR0ZW50aW9uIFs2LCAxMSwgMiwgOSwgNywgMTQsIDEwLCAxM10uXCJdLFwiMjA0OTk2MTIxMlwiOltcIlRoZSBpbXBvcnRhbmNlIG9mIHRoaXMgaXNzdWUgaXMgbm93IGFwcGFyZW50IGFzIHRoZSBnZW5lcmFsIG9iamVjdGl2ZSBvZiBwcmVzZXJ2YXRpb24gaGFzIHJlY2VpdmVkIGNvbnNpZGVyYWJsZSByZWNlbnQgYXR0ZW50aW9uIFs2LCAxMSwgMiwgOSwgNywgMTQsIDEwLCAxM10uXCJdLFwiMjEwNDAzOTcwMlwiOltcIlRoZSBpbXBvcnRhbmNlIG9mIHRoaXMgaXNzdWUgaXMgbm93IGFwcGFyZW50IGFzIHRoZSBnZW5lcmFsIG9iamVjdGl2ZSBvZiBwcmVzZXJ2YXRpb24gaGFzIHJlY2VpdmVkIGNvbnNpZGVyYWJsZSByZWNlbnQgYXR0ZW50aW9uIFs2LCAxMSwgMiwgOSwgNywgMTQsIDEwLCAxM10uXCJdfSxcIlBSXCI6WzY1MzUxMDk0LDIxMDQyMTA4OTQsMjE3NDUwNzg2OSwyMTIzODIwODIwLDIxNTA2NzY1ODYsMjA1ODk3MjU4OSwyMTQ3NTA0ODMxLDIxMTg0MjgxOTMsMjEyMTEzMzE3NywyMTY1MDI4NjA1LDIxNjc4OTg0MTQsMTU4MDAwNDQ0MCwyMTU4MDQ5ODIxLDIxNjMwNTkxOTAsMjExNTU5OTk0NiwyMTQxNDIwNDUzLDIxNTY1OTE4MzYsMjE2MzU5ODY5MCwyMTI2MDg3ODMxLDE4MzY5NTU4NjUsNjUzNTEwOTQsMjEwNDIxMDg5NCwyMTc0NTA3ODY5LDIxMjM4MjA4MjAsMjE1MDY3NjU4NiwyMDU4OTcyNTg5LDIxNDc1MDQ4MzEsMjExODQyODE5MywyMTIxMTMzMTc3LDIxNjUwMjg2MDUsMjE2Nzg5ODQxNCwxNTgwMDA0NDQwLDIxNTgwNDk4MjEsMjE2MzA1OTE5MCwyMTE1NTk5OTQ2LDIxNDE0MjA0NTMsMjE1NjU5MTgzNiwyMTYzNTk4NjkwLDIxMjYwODc4MzEsMTgzNjk1NTg2NV0sXCJBTkZcIjpbe1wiRk5cIjpcIll1YW5cIixcIkxOXCI6XCJDaGVuXCIsXCJTXCI6MX0se1wiRk5cIjpcIkphblwiLFwiTE5cIjpcIkVkbGVyXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkFuZHJldyBWLlwiLFwiTE5cIjpcIkdvbGRiZXJnXCIsXCJTXCI6M30se1wiRk5cIjpcIkFsbGFuXCIsXCJMTlwiOlwiR290dGxpZWJcIixcIlNcIjo0fSx7XCJGTlwiOlwiU3VtZWV0XCIsXCJMTlwiOlwiU29idGlcIixcIlNcIjo1fSx7XCJGTlwiOlwiUGV0ZXIgTi5cIixcIkxOXCI6XCJZaWFuaWxvc1wiLFwiU1wiOjZ9XSxcIkJWXCI6XCJQcm9jZWVkaW5ncyBvZiB0aGUgZm91cnRoIEFDTSBjb25mZXJlbmNlIG9uIERpZ2l0YWwgbGlicmFyaWVzXCIsXCJCVFwiOlwicFwiLFwiUEJcIjpcIkFDTVwifSJ9LHsibG9ncHJvYiI6LTE3LjU2NSwia2VzRW50aXR5SWQiOjUxNzYwMDcsIklkIjo5NTQzMjE0OSwiVGkiOiJwYXN0IHBlcnNpc3RlbnQgYW5kIGFub255bW91cyBzdG9yYWdlIGluIGEgcGVlciB0byBwZWVyIG5ldHdvcmtpbmcgZW52aXJvbm1lbnQiLCJZIjoyMDAxLCJEIjoiMjAwMS0wMS0wMSIsIkNDIjo3MCwiUklkIjpbMjEwNDIxMDg5NCwyMTc0NTA3ODY5LDIwMDA4NzYwMjMsMjExNTU5OTk0NiwyMTYzNTk4NjkwXSwiQUEiOlt7IkF1TiI6InBldGVyIGRydXNjaGVsIn0seyJBdU4iOiJhbnQgcm93c3Ryb24ifV0sIkYiOlt7IkZOIjoicGVlciB0byBwZWVyIn0seyJGTiI6ImludGVybmV0IHByaXZhY3kifSx7IkZOIjoid29ybGQgd2lkZSB3ZWIifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJQYXN0OiBwZXJzaXN0ZW50IGFuZCBhbm9ueW1vdXMgc3RvcmFnZSBpbiBhIHBlZXItdG8tcGVlciBuZXR3b3JraW5nIGVudmlyb25tZW50XCIsXCJWRk5cIjpcIlwiLFwiUFJcIjpbMjExODQyODE5MywyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMjEwNDIxMDg5NCwyMTU4MDQ5ODIxLDIwMDA4NzYwMjMsMjE1MDY3NjU4NiwxNjUwNjc1NTA5LDIxNzQ1MDc4NjksMTYxNDkwMSwxOTQxNTAzMTc5LDIwMzQ3NjczNTQsMzM4NTI1NDUyLDE1MTkwNzIxNzcsMTkxODczNjEwNywyMDIwNzY1NjUyLDI1MDIzNTI0NzMsMjU1MTQ5ODk5NSwyNTk3NjE3MDYxLDI2MDAxNzM3OTcsMjExODQyODE5MywyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMjEwNDIxMDg5NCwyMTU4MDQ5ODIxLDIwMDA4NzYwMjMsMjE1MDY3NjU4NiwxNjUwNjc1NTA5LDIxNzQ1MDc4NjksMTYxNDkwMSwxOTQxNTAzMTc5LDIwMzQ3NjczNTQsMzM4NTI1NDUyLDE1MTkwNzIxNzcsMTkxODczNjEwNywyMDIwNzY1NjUyLDI1MDIzNTI0NzMsMjU1MTQ5ODk5NSwyNTk3NjE3MDYxLDI2MDAxNzM3OTddLFwiQU5GXCI6W3tcIkZOXCI6XCJQZXRlclwiLFwiTE5cIjpcIkRydXNjaGVsXCIsXCJTXCI6MX0se1wiRk5cIjpcIkFudFwiLFwiTE5cIjpcIlJvd3N0cm9uXCIsXCJTXCI6Mn1dLFwiQlRcIjpcImFcIn0ifSx7ImxvZ3Byb2IiOi0xNy41NjcsImtlc0VudGl0eUlkIjo1MTgzODcyLCJJZCI6MTA1NjAxNTk3LCJUaSI6InNlY3VyaXR5IGNvbnNpZGVyYXRpb25zIGZvciBwZWVyIHRvIHBlZXIgZGlzdHJpYnV0ZWQgaGFzaCB0YWJsZXMiLCJZIjoyMDAyLCJEIjoiMjAwMi0wMy0wNyIsIkNDIjo2MDgsIlJJZCI6WzIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMTY1MDY3NTUwOSwyMTUwNjc2NTg2LDIxMjM4MjA4MjAsMTU4NDYzNTQ1OSwyMTEwMTU4NzkyLDIxNjM2NzQ2NTMsMjE0MzM1MTUwMCwyMTI5NDM3ODAwXSwiQUEiOlt7IkF1TiI6ImVtaWwgc2l0In0seyJBdU4iOiJyb2JlcnQgdGFwcGFuIG1vcnJpcyJ9XSwiRiI6W3siRk4iOiJkaXN0cmlidXRlZCBoYXNoIHRhYmxlIn0seyJGTiI6Imhhc2ggdGFibGUifSx7IkZOIjoiZGVzaWduIGVsZW1lbnRzIGFuZCBwcmluY2lwbGVzIn0seyJGTiI6ImNvbXBsZXggc3lzdGVtcyJ9LHsiRk4iOiJoYXNoIGZ1bmN0aW9uIn0seyJGTiI6InBlZXIgdG8gcGVlciJ9LHsiRk4iOiJjb21wbGV4IHN5c3RlbXMifSx7IkZOIjoidGhlb3JldGljYWwgY29tcHV0ZXIgc2NpZW5jZSJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJTZWN1cml0eSBDb25zaWRlcmF0aW9ucyBmb3IgUGVlci10by1QZWVyIERpc3RyaWJ1dGVkIEhhc2ggVGFibGVzXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6ODksXCJJbnZlcnRlZEluZGV4XCI6e1wiUmVjZW50XCI6WzBdLFwicGVlci10by1wZWVyXCI6WzEsNTRdLFwicmVzZWFyY2hcIjpbMl0sXCJoYXNcIjpbM10sXCJmb2N1c2VkXCI6WzRdLFwib25cIjpbNSw1N10sXCJwcm92aWRpbmdcIjpbNl0sXCJlZmZpY2llbnRcIjpbN10sXCJoYXNoXCI6WzgsNTldLFwibG9va3VwXCI6WzksNjBdLFwic3lzdGVtc1wiOlsxMCwyMSw1NSw3MF0sXCJ0aGF0XCI6WzExLDY4XSxcImNhblwiOlsxMl0sXCJiZVwiOlsxM10sXCJ1c2VkXCI6WzE0XSxcInRvXCI6WzE1LDM3XSxcImJ1aWxkXCI6WzE2XSxcIm1vcmVcIjpbMTddLFwiY29tcGxleFwiOlsxOF0sXCJzeXN0ZW1zLlwiOlsxOSw2MV0sXCJUaGVzZVwiOlsyMF0sXCJoYXZlXCI6WzIyLDMyXSxcImdvb2RcIjpbMjNdLFwicHJvcGVydGllc1wiOlsyNF0sXCJ3aGVuXCI6WzI1XSxcInRoZWlyXCI6WzI2XSxcImFsZ29yaXRobXNcIjpbMjddLFwiYXJlXCI6WzI4LDUwXSxcImV4ZWN1dGVkXCI6WzI5XSxcImNvcnJlY3RseVwiOlszMF0sXCJidXRcIjpbMzFdLFwibm90XCI6WzMzXSxcImdlbmVyYWxseVwiOlszNF0sXCJjb25zaWRlcmVkXCI6WzM1XSxcImhvd1wiOlszNl0sXCJoYW5kbGVcIjpbMzhdLFwibWlzYmVoYXZpbmdcIjpbMzldLFwibm9kZXMuXCI6WzQwXSxcIlRoaXNcIjpbNDFdLFwicGFwZXJcIjpbNDJdLFwibG9va3NcIjpbNDNdLFwiYXRcIjpbNDRdLFwid2hhdFwiOls0NV0sXCJzb3J0c1wiOls0Nl0sXCJvZlwiOls0Nyw2Nl0sXCJzZWN1cml0eVwiOls0OF0sXCJwcm9ibGVtc1wiOls0OSw2N10sXCJpbmhlcmVudFwiOls1MV0sXCJpblwiOls1Ml0sXCJsYXJnZVwiOls1M10sXCJiYXNlZFwiOls1Nl0sXCJkaXN0cmlidXRlZFwiOls1OF0sXCJXZVwiOls2Ml0sXCJleGFtaW5lXCI6WzYzXSxcInRoZVwiOls2NF0sXCJ0eXBlc1wiOls2NV0sXCJzdWNoXCI6WzY5XSxcIm1pZ2h0XCI6WzcxXSxcImZhY2UsXCI6WzcyXSxcImRyYXdpbmdcIjpbNzNdLFwiZXhhbXBsZXNcIjpbNzRdLFwiZnJvbVwiOls3NV0sXCJleGlzdGluZ1wiOls3Nl0sXCJzeXN0ZW1zLFwiOls3N10sXCJhbmRcIjpbNzgsODVdLFwicHJvcG9zZVwiOls3OV0sXCJzb21lXCI6WzgwXSxcImRlc2lnblwiOls4MV0sXCJwcmluY2lwbGVzXCI6WzgyXSxcImZvclwiOls4M10sXCJkZXRlY3RpbmdcIjpbODRdLFwicHJldmVudGluZ1wiOls4Nl0sXCJ0aGVzZVwiOls4N10sXCJwcm9ibGVtcy5cIjpbODhdfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wZXN0aWxlbnoub3JnL35iYXVlcm0vbmFtZXMvREhUc2VjLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3Bkb3MuY3NhaWwubWl0LmVkdS9wYXBlcnMvY2hvcmQ6c2VjdXJpdHkwMi9jaG9yZDpzZWN1cml0eTAyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmVlY3MuaGFydmFyZC5lZHUvfm1lbWEvY291cnNlcy9jczI2NC9wYXBlcnMvZGh0U2VjdXJpdHktaXB0cHMyMDAyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmNvcm5lbGwuZWR1L1Blb3BsZS9lZ3MvaXB0cHNhcmNoaXZlL3d3dy5jcy5yaWNlLmVkdS9Db25mZXJlbmNlcy9JUFRQUzAyLzE3My5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3dlYi5lZWNzLnVtaWNoLmVkdS9+em1hby9lZWNzNTg5L3BhcGVycy9wMnBTZWMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vbGluay5zcHJpbmdlci5jb20vY29udGVudC9wZGYvMTAuMTAwNyUyRjMtNTQwLTQ1NzQ4LThfMjUucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZWNlLnVjLmVkdS9+b3NjYXIvcDJwYXJlYS9zZWN1cml0eS9zZWN1Mi5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvaXB0cHMvaXB0cHMyMDAyLmh0bWwjU2l0TTAyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vbGluay5zcHJpbmdlci5jb20vY2hhcHRlci8xMC4xMDA3LzMtNTQwLTQ1NzQ4LThfMjVcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3Nob2VzdHJpbmdmb3VuZGF0aW9uLm9yZy9+YmF1ZXJtL25hbWVzL0RIVHNlYy5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD02ODc4MTBcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kub3JnLzEwLjEwMDcvMy01NDAtNDU3NDgtOF8yNVwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NjQ2MzM0LjY4NzgxMFwifV0sXCJWRk5cIjpcIkludGVybmF0aW9uYWwgV29ya3Nob3Agb24gUGVlci10by1QZWVyIFN5c3RlbXNcIixcIlZTTlwiOlwiSVBUUFNcIixcIkZQXCI6MjYxLFwiTFBcIjoyNjksXCJET0lcIjpcIjEwLjEwMDcvMy01NDAtNDU3NDgtOF8yNVwiLFwiQ0NcIjp7XCIxNjUwNjc1NTA5XCI6W1wiQSBudW1iZXIgb2YgcmVjZW50IHN5c3RlbXMgYXJlIGJ1aWx0IG9uIHRvcCBvZiBwZWVydG8tcGVlciBkaXN0cmlidXRlZCBoYXNoIGxvb2t1cCBzeXN0ZW1zIFs1LCA2LCA5LCAgMTAgXS5cIl0sXCIyMTEwMTU4NzkyXCI6W1wiVGhlc2Ugc3lzdGVtcyBjYW4gYmUgdXNlZCB0byBzdG9yZSBkYXRhLCBmb3IgZXhhbXBsZSwgYXMgYSBkaXN0cmlidXRlZCBoYXNoIHRhYmxlIG9yIGZpbGUgc3lzdGVtIFsxLCA3XS4gT3RoZXIgcHJvamVjdHMgdGFrZSBhZHZhbnRhZ2Ugb2Ygb3RoZXIgYXNwZWN0cyBvZiB0aGUgbG9va3VwIHN5c3RlbSwgc3VjaCBhcyB0aGUgcHJvcGVydGllcyBvZiBsb29rdXAgcm91dGluZyBbIDggXS5cIl0sXCIyMTIzODIwODIwXCI6W1wiVGhlc2Ugc3lzdGVtcyBjYW4gYmUgdXNlZCB0byBzdG9yZSBkYXRhLCBmb3IgZXhhbXBsZSwgYXMgYSBkaXN0cmlidXRlZCBoYXNoIHRhYmxlIG9yIGZpbGUgc3lzdGVtIFsxLCAgNyBdLiBPdGhlciBwcm9qZWN0cyB0YWtlIGFkdmFudGFnZSBvZiBvdGhlciBhc3BlY3RzIG9mIHRoZSBsb29rdXAgc3lzdGVtLCBzdWNoIGFzIHRoZSBwcm9wZXJ0aWVzIG9mIGxvb2t1cCByb3V0aW5nIFs4XS5cIl0sXCIyMTI5NDM3ODAwXCI6W1wiRWFybHkgc3R1ZGllcyBoYXZlIHNob3duIHRoYXQgaW4gc29tZSBmaWxlIHNoYXJpbmcgc3lzdGVtcywgcGVlcnMgam9pbiBhbmQgbGVhdmUgdGhlIHN5c3RlbSB2ZXJ5IHJhcGlkbHkgWzRdLlwiXSxcIjIxNDMzNTE1MDBcIjpbXCJ0ZWNobmlxdWVzLCBzdWNoIGFzIHNlbGYtY2VydGlmeWluZyBwYXRoIG5hbWVzIFszXS5cIl0sXCIyMTUwNjc2NTg2XCI6W1wiVGhlc2Ugc3lzdGVtcyBjYW4gYmUgdXNlZCB0byBzdG9yZSBkYXRhLCBmb3IgZXhhbXBsZSwgYXMgYSBkaXN0cmlidXRlZCBoYXNoIHRhYmxlIG9yIGZpbGUgc3lzdGVtIFsgMSAsIDddLiBPdGhlciBwcm9qZWN0cyB0YWtlIGFkdmFudGFnZSBvZiBvdGhlciBhc3BlY3RzIG9mIHRoZSBsb29rdXAgc3lzdGVtLCBzdWNoIGFzIHRoZSBwcm9wZXJ0aWVzIG9mIGxvb2t1cCByb3V0aW5nIFs4XS5cXHUwMDFiSW4gdGhlIGNhc2Ugb2YgREhhc2ggWyAxIF0sIGEgc3RvcmFnZSBBUEkgbGF5ZXJlZCBvbiBDaG9yZCB1c2VkIGJ5IENGUywgdGhlcmUgYXJlIHR3byBpbXBvcnRhbnQgaW52YXJpYW50cy5cIl0sXCIyMTYzMDU5MTkwXCI6W1wiQSBudW1iZXIgb2YgcmVjZW50IHN5c3RlbXMgYXJlIGJ1aWx0IG9uIHRvcCBvZiBwZWVydG8tcGVlciBkaXN0cmlidXRlZCBoYXNoIGxvb2t1cCBzeXN0ZW1zIFsgNSAsIDYsIDksIDEwXS5cXHUwMDFiQ0FOIFsgNSBdLCBDaG9yZCBbOV0gYW5kIFBhc3RyeSBbNl0gYWxsIGZpdCBpbnRvIHRoaXMgZ2VuZXJhbCBmcmFtZXdvcmsuXCJdLFwiMjE2MzY3NDY1M1wiOltcIkZvciBleGFtcGxlLCB0aGUgVGFyemFuIGFub255bWl6aW5nIG5ldHdvcmsgWyAyIF0gcHJvcG9zZXMgdGhlIHVzZSBvZiBDaG9yZCBhcyBhIHdheSBvZiBkaXNjb3ZlcmluZyByYW5kb20gbm9kZXMgdG8gdXNlIGluIGR5LVwiXSxcIjIxNjc4OTg0MTRcIjpbXCJBIG51bWJlciBvZiByZWNlbnQgc3lzdGVtcyBhcmUgYnVpbHQgb24gdG9wIG9mIHBlZXJ0by1wZWVyIGRpc3RyaWJ1dGVkIGhhc2ggbG9va3VwIHN5c3RlbXMgWzUsIDYsIDksIDEwXS5cIixcIk9uIGFuIG9wZW4gbmV0d29yaywgc3VjaCBhcyB0aGUgSW50ZXJuZXQsIGl0IG1heSBzdGlsbCBiZSBwb3NzaWJsZSB0byBleGNsdWRlIHVudHJ1c3RlZCBub2RlcyB3aXRoIHRoZSBoZWxwIG9mIGEgY2VudHJhbCBjZXJ0aWZpY2F0ZS1ncmFudGluZyBhdXRob3JpdHk7IHRoaXMgc29sdXRpb24gaXMgcHJvcG9zZWQgYnkgUGFzdHJ5IFs2XS5cIixcIkNBTiBbNV0sIENob3JkIFs5XSBhbmQgUGFzdHJ5IFs2XSBhbGwgZml0IGludG8gdGhpcyBnZW5lcmFsIGZyYW1ld29yay5cIl19LFwiUFJcIjpbMjExODQyODE5MywyMTY3ODk4NDE0LDE1MjA5MTQ5NDMsMjE3MTk1NzU1OSwyMTU4MDQ5ODIxLDIxNjMwNTkxOTAsMjExOTI0NTEwNiwxNTg1ODE5NjM3LDE2NTA2NzU1MDksMjE3NDUwNzg2OSwyMDQzNTI1NjA0LDIxMjM0ODI0NjIsMjEyODY3MjU0MiwyMTUwNjc2NTg2LDIxNTY1MjM0MjcsMTU4NzIwODg1MCwxNTM2MDc2NDc4LDIxMDE4OTA2MTUsMTQ4ODE1MDQxOCwyMTYzNjc0NjUzLDIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwxNTIwOTE0OTQzLDIxNzE5NTc1NTksMjE1ODA0OTgyMSwyMTYzMDU5MTkwLDIxMTkyNDUxMDYsMTU4NTgxOTYzNywxNjUwNjc1NTA5LDIxNzQ1MDc4NjksMjA0MzUyNTYwNCwyMTIzNDgyNDYyLDIxMjg2NzI1NDIsMjE1MDY3NjU4NiwyMTU2NTIzNDI3LDE1ODcyMDg4NTAsMTUzNjA3NjQ3OCwyMTAxODkwNjE1LDE0ODgxNTA0MTgsMjE2MzY3NDY1M10sXCJBTkZcIjpbe1wiRk5cIjpcIkVtaWxcIixcIkxOXCI6XCJTaXRcIixcIlNcIjoxfSx7XCJGTlwiOlwiUm9iZXJ0IFRhcHBhblwiLFwiTE5cIjpcIk1vcnJpc1wiLFwiU1wiOjJ9XSxcIkJWXCI6XCJpbnRlcm5hdGlvbmFsIHdvcmtzaG9wIG9uIHBlZXIgdG8gcGVlciBzeXN0ZW1zXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIlNwcmluZ2VyXCJ9In0seyJsb2dwcm9iIjotMTcuNzcsImtlc0VudGl0eUlkIjo2MzM1MDI2LCJJZCI6MjEwODgyNDAwNCwiVGkiOiJjYW5vbiBpbiBnIG1ham9yIGRlc2lnbmluZyBkaHRzIHdpdGggaGllcmFyY2hpY2FsIHN0cnVjdHVyZSIsIlkiOjIwMDQsIkQiOiIyMDA0LTAxLTAxIiwiQ0MiOjI5NiwiUklkIjpbMjExODQyODE5MywyMTU4MDQ5ODIxLDIxNjMwNTkxOTAsMjE2Nzg5ODQxNCwyMTE5MjQ1MTA2LDIxNTA2NzY1ODYsMjE1NTY1OTI5MiwyMDk2NzA2NTEyLDE5NzA1NjQ3NzgsMTQ5MjU1MjUzMSwyMDkxNTc5MzAxLDIxNjUyMjIxMjEsMTU2NDg1NDQ5Niw0MDgzMDMzOSwxNTMzODgzNTM2LDIxMzA0OTM0MjYsMTY1MDgwMjE4MSwyMTQyNDE4MjUxLDE2NTgzMTAzNTFdLCJBQSI6W3siQXVOIjoicHJhc2FubmEgZ2FuZXNhbiJ9LHsiQXVOIjoicCBrcmlzaG5hIGd1bW1hZGkifSx7IkF1TiI6ImhlY3RvciBnYXJjaWFtb2xpbmEifV0sIkYiOlt7IkZOIjoia2FkZW1saWEifSx7IkZOIjoiZGlzdHJpYnV0ZWQgaGFzaCB0YWJsZSJ9LHsiRk4iOiJoYXNoIHRhYmxlIn0seyJGTiI6ImJhbmR3aWR0aCBhbGxvY2F0aW9uIn0seyJGTiI6Im11bHRpY2FzdCJ9LHsiRk4iOiJkaXN0cmlidXRlZCBkYXRhYmFzZSJ9LHsiRk4iOiJzY2FsYWJpbGl0eSJ9LHsiRk4iOiJkYXRhIHN0cnVjdHVyZSJ9LHsiRk4iOiJwYXJhbGxlbCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJDYW5vbiBpbiBHIG1ham9yOiBkZXNpZ25pbmcgREhUcyB3aXRoIGhpZXJhcmNoaWNhbCBzdHJ1Y3R1cmVcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxMzksXCJJbnZlcnRlZEluZGV4XCI6e1wiRGlzdHJpYnV0ZWRcIjpbMF0sXCJoYXNoXCI6WzFdLFwidGFibGVzXCI6WzJdLFwiaGF2ZVwiOlszXSxcImJlZW5cIjpbNF0sXCJwcm9wb3NlZFwiOls1LDEwM10sXCJhc1wiOls2XSxcImZsYXQsXCI6WzddLFwibm9uaGllcmFyY2hpY2FsXCI6WzhdLFwic3RydWN0dXJlcyxcIjpbOV0sXCJpblwiOlsxMF0sXCJjb250cmFzdFwiOlsxMV0sXCJ0b1wiOlsxMiwyMyw4MSwxMDAsMTA1XSxcIm1vc3RcIjpbMTNdLFwic2NhbGFibGVcIjpbMTRdLFwiZGlzdHJpYnV0ZWRcIjpbMTVdLFwic3lzdGVtc1wiOlsxNl0sXCJvZlwiOlsxNywzMSw1OSw4OV0sXCJ0aGVcIjpbMTgsMjksNDQsODJdLFwicGFzdC5cIjpbMTldLFwiV2VcIjpbMjAsMTEwXSxcInNob3dcIjpbMjEsMTExXSxcImhvd1wiOlsyMiwxMTJdLFwiY29uc3RydWN0XCI6WzI0LDEwNl0sXCJoaWVyYXJjaGljYWxcIjpbMjUsODcsOTNdLFwiREhUc1wiOlsyNiwxMDQsMTE1XSxcIndoaWxlXCI6WzI3XSxcInJldGFpbmluZ1wiOlsyOF0sXCJob21vZ2VuZWl0eVwiOlszMF0sXCJsb2FkXCI6WzMyXSxcImFuZFwiOlszMyw3Myw5MSwxMjAsMTM2XSxcImZ1bmN0aW9uYWxpdHlcIjpbMzRdLFwib2ZmZXJlZFwiOlszNV0sXCJieVwiOlszNiw1M10sXCJmbGF0XCI6WzM3XSxcImRlc2lnbnMuXCI6WzM4LDU2XSxcIk91clwiOlszOV0sXCJnZW5lcmljXCI6WzQwXSxcImNvbnN0cnVjdGlvbixcIjpbNDFdLFwiQ2Fub24sXCI6WzQyXSxcIm9mZmVyc1wiOls0M10sXCJzYW1lXCI6WzQ1XSxcInJvdXRpbmdcIjpbNDYsNDldLFwic3RhdGVcIjpbNDddLFwidnMuXCI6WzQ4XSxcImhvcHNcIjpbNTBdLFwidHJhZGUtb2ZmXCI6WzUxXSxcInByb3ZpZGVkXCI6WzUyXSxcInN0YW5kYXJkXCI6WzU0XSxcIkRIVFwiOls1NV0sXCJUaGVcIjpbNTddLFwiYWR2YW50YWdlc1wiOls1OF0sXCJDYW5vblwiOls2MCw5Nl0sXCJpbmNsdWRlXCI6WzYxXSxcIihidXRcIjpbNjJdLFwiYXJlXCI6WzYzXSxcIm5vdFwiOls2NF0sXCJsaW1pdGVkXCI6WzY1XSxcInRvKVwiOls2Nl0sXCIoYSlcIjpbNjddLFwiZmF1bHRcIjpbNjhdLFwiaXNvbGF0aW9uLFwiOls2OV0sXCIoYilcIjpbNzBdLFwiZWZmaWNpZW50XCI6WzcxXSxcImNhY2hpbmdcIjpbNzJdLFwiZWZmZWN0aXZlXCI6Wzc0XSxcImJhbmR3aWR0aFwiOls3NV0sXCJ1c2FnZVwiOls3Nl0sXCJmb3JcIjpbNzddLFwibXVsdGljYXN0LFwiOls3OF0sXCIoYylcIjpbNzldLFwiYWRhcHRhdGlvblwiOls4MF0sXCJ1bmRlcmx5aW5nXCI6WzgzXSxcInBoeXNpY2FsXCI6Wzg0XSxcIm5ldHdvcmssXCI6Wzg1XSxcIihkKVwiOls4Nl0sXCJzdG9yYWdlXCI6Wzg4XSxcImNvbnRlbnQsXCI6WzkwXSxcIihlKVwiOls5Ml0sXCJhY2Nlc3NcIjpbOTRdLFwiY29udHJvbC5cIjpbOTVdLFwiY2FuXCI6Wzk3LDEyM10sXCJiZVwiOls5OCwxMjRdLFwiYXBwbGllZFwiOls5OV0sXCJtYW55XCI6WzEwMV0sXCJkaWZmZXJlbnRcIjpbMTAyLDExNF0sXCJ0aGVpclwiOlsxMDcsMTI3XSxcIkNhbm9uaWNhbFwiOlsxMDgsMTI4XSxcInZlcnNpb25zLlwiOlsxMDldLFwiZm91clwiOlsxMTNdLFwiLVwiOlsxMTYsMTIyXSxcIkNob3JkLFwiOlsxMTddLFwiU3ltcGhvbnksXCI6WzExOF0sXCJDQU5cIjpbMTE5XSxcIkthZGVtbGlhXCI6WzEyMV0sXCJjb252ZXJ0ZWRcIjpbMTI1XSxcImludG9cIjpbMTI2XSxcInZlcnNpb25zXCI6WzEyOV0sXCJ0aGF0XCI6WzEzMF0sXCJ3ZVwiOlsxMzFdLFwiY2FsbFwiOlsxMzJdLFwiQ3Jlc2NlbmRvLFwiOlsxMzNdLFwiQ2Fjb3Bob255LFwiOlsxMzRdLFwiQ2FuLUNhblwiOlsxMzVdLFwiS2FuZHlcIjpbMTM3XSxcInJlc3BlY3RpdmVseS5cIjpbMTM4XX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vaWxwdWJzLnN0YW5mb3JkLmVkdTo4MDkwLzYyNi8xLzIwMDMtNzQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cubXBpLXN3cy5vcmcvfmd1bW1hZGkvcGFwZXJzL2hpZXJhcmNoaWNhbF9kaHRzLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnByaW5jZXRvbi5lZHUvY291cnNlcy9hcmNoaXZlL2ZhbGwwOC9jb3M1OTdCL3BhcGVycy9oaWVyYXJjaGljYWwtZGh0cy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jb21wLm51cy5lZHUuc2cvfmNzNjIwMy9ndWlkZWxpbmVzL3RvcGljMS9oaWVyYXJjaGljYWxfZGh0cy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5pYy51bmljYW1wLmJyL35jZWxpby9wZWVyMnBlZXIvbWlzY2VsYW5lYS9jYW5vbi1kaHQtMjAwNC5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvaWNkY3MvaWNkY3MyMDA0Lmh0bWwjR2FuZXNhbkdHMDRcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2lscHVicy5zdGFuZm9yZC5lZHU6ODA5MC83NjEvXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9pZWVleHBsb3JlLmllZWUub3JnL3hwbC9hcnRpY2xlRGV0YWlscy5qc3A/YXJudW1iZXI9MTI4MTU5MVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTk3ODAxNFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTk3ODAxNFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJwdWJzLnN0YW5mb3JkLmVkdTo4MDkwL3B1Yi8yMDA0LTJcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTk3NzQwMC45NzgwMTRcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2llZWV4cGxvcmUuaWVlZS5vcmcveHBsL2ZyZWVhYnNfYWxsLmpzcD9hcm51bWJlcj0xMjgxNTkxXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9jc2RsLmNvbXB1dGVyLm9yZy9jb21wL3Byb2NlZWRpbmdzL2ljZGNzLzIwMDQvMjA4Ni8wMC8yMDg2MDI2M2Ficy5odG1cIn1dLFwiVkZOXCI6XCJJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gRGlzdHJpYnV0ZWQgQ29tcHV0aW5nIFN5c3RlbXNcIixcIlZTTlwiOlwiSUNEQ1NcIixcIkZQXCI6MjYzLFwiTFBcIjoyNzIsXCJET0lcIjpcIjEwLjExMDkvSUNEQ1MuMjAwNC4xMjgxNTkxXCIsXCJDQ1wiOntcIjQwODMwMzM5XCI6W1wiVGhlcmUgaGF2ZSBiZWVuIG1hbnkgZGlmZmVyZW50IERpc3RyaWJ1dGVkIEhhc2ggVGFibGUgZGVzaWducyB0aGF0IGhhdmUgYmVlbiBwcm9wb3NlZCByZWNlbnRseSBbNywgMywgOSwgMTMsIDYsIDE0LCAgMTUgLCAxNiwgMTddIGFsbCBvZiB3aGljaCB1c2Ugcm91dGluZyBzdHJ1Y3R1cmVzIHRoYXQgYXJlIHZhcmlhbnRzIG9mIHRoZSBoeXBlcmN1YmUuXFx1MDAxYjEzIG1pYyBudW1iZXIgb2YgbGlua3MgWyAxNSAsIDE0XS4pIFNvbWUgb2YgdGhlc2UgbmV0d29ya3MgYWxzbyB1c2UgbG9jYWxpdHkgaGV1cmlzdGljcyBbOSwgMTgsIDEzLCA1LCAxMV0gdG8gZW5zdXJlIHRoYXQgbm9kZXMgbmVhcmJ5IG9uIHRoZSBwaHlzaWNhbCBuZXR3b3JrIGFyZSBwcmVmZXJlbnRpYWxseSBjb25uZWN0ZWQgdG8gZWFjaCBvdGhlci5cIl0sXCIxNDkyNTUyNTMxXCI6W1wiQW5vdGhlciByZWNlbnQgc3lzdGVtIHdoaWNoIHByb3ZpZGVzIHNvbWUgREhUIGZ1bmN0aW9uYWxpdHkgaXMgU2tpcE5ldCBbMTldLlwiXSxcIjE1MzM4ODM1MzZcIjpbXCJTb21lIG9mIHRoZXNlIG5ldHdvcmtzIGFsc28gdXNlIGxvY2FsaXR5IGhldXJpc3RpY3MgWzksIDE4LCAxMywgNSwgMTFdIHRvIGVuc3VyZSB0aGF0IG5vZGVzIG5lYXJieSBvbiB0aGUgcGh5c2ljYWwgbmV0d29yayBhcmUgcHJlZmVyZW50aWFsbHkgY29ubmVjdGVkIHRvIGVhY2ggb3RoZXIuXCJdLFwiMTU2NDg1NDQ5NlwiOltcIkhvd2V2ZXIsIHdlIHdpbGwgYWxzbyBkZXNjcmliZSBob3cgdG8gYWRhcHQgb3RoZXIgREhUcywgaW5jbHVkaW5nIG5vbmRldGVybWluaXN0aWMgQ2hvcmQgWzQsIDVdLCBTeW1waG9ueSBbNl0sIENBTiBbN10gYW5kIEthZGVtbGlhIFs4XSwgYSB2YXJpYW50IG9mIFBhc3RyeSBbOV0uXCIsXCJTeW1waG9ueSBbNl0gaXMgYSByYW5kb21pemVkIHZlcnNpb24gb2YgQ2hvcmQsIHdoZXJlIGVhY2ggbm9kZSBtIGNyZWF0ZXMgTyhsb2duKSBsaW5rcyAod2hlcmUgbiBpcyB0aGUgbnVtYmVyIG9mIG5vZGVzIGluIHRoZSBzeXN0ZW0pIHRvIG90aGVyIG5vZGVzLCBlYWNoIGNob3NlbiBpbmRlcGVuZGVudGx5IGF0IHJhbmRvbSwgc3VjaCB0aGF0IHRoZSBwcm9iYWJpbGl0eSBvZiBjaG9vc2luZyBhIG5vZGVtIGFzIGEgbmVpZ2hib3IgaXMgaW52ZXJzZWx5IHByb3BvcnRpb25hbCB0byB0aGUgZGlzdGFuY2UgZnJvbSBtIHRvIG0uXCIsXCJOb3RlIHRoYXQgYm90aCBTeW1waG9ueSBhbmQgQ2Fjb3Bob255IHJlcXVpcmUgdGhlIGFiaWxpdHkgdG8gZXN0aW1hdGUgdGhlIG51bWJlciBvZiBub2RlcyBpbiBhIGRvbWFpbiwgYW5kIGl0IGlzIHBvc3NpYmxlIHRvIHBlcmZvcm0gdGhpcyBlc3RpbWF0aW9uIGNoZWFwbHkgYW5kIGFjY3VyYXRlbHkgWzZdLlwiLFwiVGhpcyBtb2RpZmllZCBncmVlZHkgcHJvdG9jb2wgcmVxdWlyZXMgb25seSBPKGxvZyBuPSBsb2cgbG9nbikgaG9wcyBmb3Igcm91dGluZyBbNl0gd2hpY2gsIGluIHByYWN0aWNlLCB0cmFuc2xhdGVzIGludG8gYWJvdXQgNDAlIGZld2VyIGhvcHMgZm9yIG1vc3QgbmV0d29yayBzaXplcy5cIixcIlRoZXJlIGhhdmUgYmVlbiBtYW55IGRpZmZlcmVudCBEaXN0cmlidXRlZCBIYXNoIFRhYmxlIGRlc2lnbnMgdGhhdCBoYXZlIGJlZW4gcHJvcG9zZWQgcmVjZW50bHkgWzcsIDMsIDksIDEzLCA2LCAxNCwgMTUsIDE2LCAxN10gYWxsIG9mIHdoaWNoIHVzZSByb3V0aW5nIHN0cnVjdHVyZXMgdGhhdCBhcmUgdmFyaWFudHMgb2YgdGhlIGh5cGVyY3ViZS5cIl0sXCIxNjU4MzEwMzUxXCI6W1wiVGhlcmUgaGF2ZSBiZWVuIG1hbnkgZGlmZmVyZW50IERpc3RyaWJ1dGVkIEhhc2ggVGFibGUgZGVzaWducyB0aGF0IGhhdmUgYmVlbiBwcm9wb3NlZCByZWNlbnRseSBbNywgMywgOSwgMTMsIDYsIDE0LCAxNSwgMTYsIDE3XSBhbGwgb2Ygd2hpY2ggdXNlIHJvdXRpbmcgc3RydWN0dXJlcyB0aGF0IGFyZSB2YXJpYW50cyBvZiB0aGUgaHlwZXJjdWJlLlwiXSxcIjE5NzA1NjQ3NzhcIjpbXCJUaGVyZSBoYXZlIGJlZW4gbWFueSBkaWZmZXJlbnQgRGlzdHJpYnV0ZWQgSGFzaCBUYWJsZSBkZXNpZ25zIHRoYXQgaGF2ZSBiZWVuIHByb3Bvc2VkIHJlY2VudGx5IFs3LCAzLCA5LCAxMywgNiwgMTQsIDE1LCAxNiwgMTddIGFsbCBvZiB3aGljaCB1c2Ugcm91dGluZyBzdHJ1Y3R1cmVzIHRoYXQgYXJlIHZhcmlhbnRzIG9mIHRoZSBoeXBlcmN1YmUuXCIsXCJtaWMgbnVtYmVyIG9mIGxpbmtzIFsxNSwgMTRdLlwiXSxcIjIwOTE1NzkzMDFcIjpbXCJXaHkgaGllcmFyY2hpY2FsIGRlc2lnbj9IZXJiZXJ0IFNpbW9uLCBpbiBUaGUgQXJjaGl0ZWN0dXJlIG9mIENvbXBsZXhpdHkgWyAxIF0sIGFyZ3VlcyB0aGF0IGhpZXJhcmNoeSBlbWVyZ2VzIGluZXZpdGFibHkgaW4gYW55IGNvbXBsZXggc3lzdGVtLlwiXSxcIjIwOTY3MDY1MTJcIjpbXCJIb3dldmVyLCB3ZSB3aWxsIGFsc28gZGVzY3JpYmUgaG93IHRvIGFkYXB0IG90aGVyIERIVHMsIGluY2x1ZGluZyBub25kZXRlcm1pbmlzdGljIENob3JkIFs0LCA1XSwgU3ltcGhvbnkgWzZdLCBDQU4gWzddIGFuZCBLYWRlbWxpYSBbOF0sIGEgdmFyaWFudCBvZiBQYXN0cnkgWzldLlwiLFwiWWV0IGFub3RoZXIgdmFyaWFudCBvZiBDaG9yZCBpcyBub25kZXRlcm1pbmlzdGljIENob3JkIFs0LCA1XSwgd2hlcmUgYSBub2RlIGNob29zZXMgdG8gY29ubmVjdCB0byBhbnkgbm9kZSB3aXRoIGRpc3RhbmNlIGluIFsyLCAyKSBmb3IgZWFjaCAwIOKJpCBrIDwgTiAsIGluc3RlYWQgb2YgY29ubmVjdGluZyB0byB0aGUgY2xvc2VzdCBub2RlIHRoYXQgaXMgYXQgbGVhc3QgZGlzdGFuY2UgMiBhd2F5LlwiLFwiU29tZSBvZiB0aGVzZSBuZXR3b3JrcyBhbHNvIHVzZSBsb2NhbGl0eSBoZXVyaXN0aWNzIFs5LCAxOCwgMTMsIDUsIDExXSB0byBlbnN1cmUgdGhhdCBub2RlcyBuZWFyYnkgb24gdGhlIHBoeXNpY2FsIG5ldHdvcmsgYXJlIHByZWZlcmVudGlhbGx5IGNvbm5lY3RlZCB0byBlYWNoIG90aGVyLlwiXSxcIjIxMTkyNDUxMDZcIjpbXCJIb3dldmVyLCB3ZSB3aWxsIGFsc28gZGVzY3JpYmUgaG93IHRvIGFkYXB0IG90aGVyIERIVHMsIGluY2x1ZGluZyBub25kZXRlcm1pbmlzdGljIENob3JkIFs0LCA1XSwgU3ltcGhvbnkgWzZdLCBDQU4gWzddIGFuZCBLYWRlbWxpYSBbIDggXSwgYSB2YXJpYW50IG9mIFBhc3RyeSBbOV0uXFx1MDAxYlBhc3RyeSBbOV0gYW5kIEthZGVtbGlhIFsgOCBdIGFyZSBoeXBlcmN1YmUgdmVyc2lvbnMgb2Ygbm9uZGV0ZXJtaW5pc3RpYyBDaG9yZC5cIl0sXCIyMTMwNDkzNDI2XCI6W1wiQnV0bGVyIExhbXBzb24sIHdoZW4gZGVzY3JpYmluZyB0aGUgZGVzaWduIG9mIGEgZ2xvYmFsIG5hbWUgc3lzdGVtIFsyXSBvYnNlcnZlczog4oCcSGllcmFyY2h5IGlzIGEgZnVuZGFtZW50YWwgbWV0aG9kIGZvciBhY2NvbW1vZGF0aW5nIGdyb3d0aCBhbmQgaXNvbGF0aW5nIGZhdWx0c+KAnS5cIl0sXCIyMTQyNDE4MjUxXCI6W1wiVGhlcmUgaGF2ZSBiZWVuIG1hbnkgZGlmZmVyZW50IERpc3RyaWJ1dGVkIEhhc2ggVGFibGUgZGVzaWducyB0aGF0IGhhdmUgYmVlbiBwcm9wb3NlZCByZWNlbnRseSBbNywgMywgOSwgMTMsIDYsIDE0LCAxNSwgMTYsIDE3XSBhbGwgb2Ygd2hpY2ggdXNlIHJvdXRpbmcgc3RydWN0dXJlcyB0aGF0IGFyZSB2YXJpYW50cyBvZiB0aGUgaHlwZXJjdWJlLlwiXSxcIjIxNTA2NzY1ODZcIjpbXCJIb3dldmVyLCB3ZSB3aWxsIGFsc28gZGVzY3JpYmUgaG93IHRvIGFkYXB0IG90aGVyIERIVHMsIGluY2x1ZGluZyBub25kZXRlcm1pbmlzdGljIENob3JkIFs0LCA1XSwgU3ltcGhvbnkgWzZdLCBDQU4gWzddIGFuZCBLYWRlbWxpYSBbOF0sIGEgdmFyaWFudCBvZiBQYXN0cnkgWzldLlwiLFwiWWV0IGFub3RoZXIgdmFyaWFudCBvZiBDaG9yZCBpcyBub25kZXRlcm1pbmlzdGljIENob3JkIFs0LCA1XSwgd2hlcmUgYSBub2RlIGNob29zZXMgdG8gY29ubmVjdCB0byBhbnkgbm9kZSB3aXRoIGRpc3RhbmNlIGluIFsyLCAyKSBmb3IgZWFjaCAwIOKJpCBrIDwgTiAsIGluc3RlYWQgb2YgY29ubmVjdGluZyB0byB0aGUgY2xvc2VzdCBub2RlIHRoYXQgaXMgYXQgbGVhc3QgZGlzdGFuY2UgMiBhd2F5LlwiXSxcIjIxNTU2NTkyOTJcIjpbXCJBbGwgZXhwZXJpbWVudHMgaGVyZW9uaW4gdXNlIHRoZSBmb2xsb3dpbmcgc2V0dXA6IFdlIHVzZWQgdGhlIEdULUlUTSBbMTJdIHRvcG9sb2d5IGdlbmVyYXRvciB0byBwcm9kdWNlIGEgMjA0MC1ub2RlIGdyYXBoIHN0cnVjdHVyZSBtb2RlbGxpbmcgdGhlIGludGVyY29ubmVjdGlvbiBvZiByb3V0ZXJzIG9uIHRoZSBpbnRlcm5ldC5cIl0sXCIyMTU4MDQ5ODIxXCI6W1wiTXVjaCBvZiB0aGlzIHBhcGVyIHdpbGwgZm9jdXMgb24gQ3Jlc2NlbmRvLCB0aGUgQ2Fub25pY2FsIHZlcnNpb24gb2YgdGhlIHBvcHVsYXIgQ2hvcmQgWzNdIERIVC5cIixcIkNob3JkOiBDaG9yZCBbM10gaXMgYSBkaXN0cmlidXRlZCBoYXNoIHRhYmxlIHN0b3Jpbmcga2V5dmFsdWUgcGFpcnMuXCIsXCJUaGVyZSBoYXZlIGJlZW4gbWFueSBkaWZmZXJlbnQgRGlzdHJpYnV0ZWQgSGFzaCBUYWJsZSBkZXNpZ25zIHRoYXQgaGF2ZSBiZWVuIHByb3Bvc2VkIHJlY2VudGx5IFs3LCAzLCA5LCAxMywgNiwgMTQsIDE1LCAxNiwgMTddIGFsbCBvZiB3aGljaCB1c2Ugcm91dGluZyBzdHJ1Y3R1cmVzIHRoYXQgYXJlIHZhcmlhbnRzIG9mIHRoZSBoeXBlcmN1YmUuXCJdLFwiMjE2MzA1OTE5MFwiOltcIkhvd2V2ZXIsIHdlIHdpbGwgYWxzbyBkZXNjcmliZSBob3cgdG8gYWRhcHQgb3RoZXIgREhUcywgaW5jbHVkaW5nIG5vbmRldGVybWluaXN0aWMgQ2hvcmQgWzQsIDVdLCBTeW1waG9ueSBbNl0sIENBTiBbN10gYW5kIEthZGVtbGlhIFs4XSwgYSB2YXJpYW50IG9mIFBhc3RyeSBbOV0uXCIsXCJDQU4gWzddIHdhcyBvcmlnaW5hbGx5IHByb3Bvc2VkIGFzIGEgbmV0d29yayB3aXRoIGNvbnN0YW50IGV4cGVjdGVkIGRlZ3JlZSwgYnV0IGNhbiBiZSBnZW5lcmFsaXplZCB0byBhIGxvZ2FyaXRobWljIGRlZ3JlZSBuZXR3b3JrLlwiLFwiVGhlcmUgaGF2ZSBiZWVuIG1hbnkgZGlmZmVyZW50IERpc3RyaWJ1dGVkIEhhc2ggVGFibGUgZGVzaWducyB0aGF0IGhhdmUgYmVlbiBwcm9wb3NlZCByZWNlbnRseSBbNywgMywgOSwgMTMsIDYsIDE0LCAxNSwgMTYsIDE3XSBhbGwgb2Ygd2hpY2ggdXNlIHJvdXRpbmcgc3RydWN0dXJlcyB0aGF0IGFyZSB2YXJpYW50cyBvZiB0aGUgaHlwZXJjdWJlLlwiXSxcIjIxNjUyMjIxMjFcIjpbXCJUaGVyZSBoYXZlIGJlZW4gbWFueSBkaWZmZXJlbnQgRGlzdHJpYnV0ZWQgSGFzaCBUYWJsZSBkZXNpZ25zIHRoYXQgaGF2ZSBiZWVuIHByb3Bvc2VkIHJlY2VudGx5IFs3LCAzLCA5LCAxMywgNiwgMTQsIDE1LCAxNiwgMTddIGFsbCBvZiB3aGljaCB1c2Ugcm91dGluZyBzdHJ1Y3R1cmVzIHRoYXQgYXJlIHZhcmlhbnRzIG9mIHRoZSBoeXBlcmN1YmUuXCIsXCJTb21lIG9mIHRoZXNlIG5ldHdvcmtzIGFsc28gdXNlIGxvY2FsaXR5IGhldXJpc3RpY3MgWzksIDE4LCAxMywgNSwgMTFdIHRvIGVuc3VyZSB0aGF0IG5vZGVzIG5lYXJieSBvbiB0aGUgcGh5c2ljYWwgbmV0d29yayBhcmUgcHJlZmVyZW50aWFsbHkgY29ubmVjdGVkIHRvIGVhY2ggb3RoZXIuXCJdLFwiMjE2Nzg5ODQxNFwiOltcIkhvd2V2ZXIsIHdlIHdpbGwgYWxzbyBkZXNjcmliZSBob3cgdG8gYWRhcHQgb3RoZXIgREhUcywgaW5jbHVkaW5nIG5vbmRldGVybWluaXN0aWMgQ2hvcmQgWzQsIDVdLCBTeW1waG9ueSBbNl0sIENBTiBbN10gYW5kIEthZGVtbGlhIFs4XSwgYSB2YXJpYW50IG9mIFBhc3RyeSBbOV0uXCIsXCJQYXN0cnkgWzldIGFuZCBLYWRlbWxpYSBbOF0gYXJlIGh5cGVyY3ViZSB2ZXJzaW9ucyBvZiBub25kZXRlcm1pbmlzdGljIENob3JkLlwiLFwiVGhlcmUgaGF2ZSBiZWVuIG1hbnkgZGlmZmVyZW50IERpc3RyaWJ1dGVkIEhhc2ggVGFibGUgZGVzaWducyB0aGF0IGhhdmUgYmVlbiBwcm9wb3NlZCByZWNlbnRseSBbNywgMywgOSwgMTMsIDYsIDE0LCAxNSwgMTYsIDE3XSBhbGwgb2Ygd2hpY2ggdXNlIHJvdXRpbmcgc3RydWN0dXJlcyB0aGF0IGFyZSB2YXJpYW50cyBvZiB0aGUgaHlwZXJjdWJlLlwiLFwiKSBTb21lIG9mIHRoZXNlIG5ldHdvcmtzIGFsc28gdXNlIGxvY2FsaXR5IGhldXJpc3RpY3MgWzksIDE4LCAxMywgNSwgMTFdIHRvIGVuc3VyZSB0aGF0IG5vZGVzIG5lYXJieSBvbiB0aGUgcGh5c2ljYWwgbmV0d29yayBhcmUgcHJlZmVyZW50aWFsbHkgY29ubmVjdGVkIHRvIGVhY2ggb3RoZXIuXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDIxNTgwNDk4MjEsMjExOTI0NTEwNiwyMTI5ODMzNjQwLDIxNDMyNzY1MTksMjEyMzQ4MjQ2MiwxNDkyNTUyNTMxLDE2NTA2NzU1MDksMjEwNzgxMTg5MCwyMTA0MDIzODgzLDIxNTA5NjI2MTAsMjE2ODkwMzA5MCwxNjAxNzAyMzI4LDIxNjI3MzM2NzcsMjAxNDk1MjEyMSwxNTU1NDY0Mjk0LDIwMjA3NjU2NTIsMjA5NjcwNjUxMiwyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDIxMTkyNDUxMDYsMjEyOTgzMzY0MCwyMTQzMjc2NTE5LDIxMjM0ODI0NjIsMTQ5MjU1MjUzMSwxNjUwNjc1NTA5LDIxMDc4MTE4OTAsMjEwNDAyMzg4MywyMTUwOTYyNjEwLDIxNjg5MDMwOTAsMTYwMTcwMjMyOCwyMTYyNzMzNjc3LDIwMTQ5NTIxMjEsMTU1NTQ2NDI5NCwyMDIwNzY1NjUyLDIwOTY3MDY1MTJdLFwiQU5GXCI6W3tcIkZOXCI6XCJQcmFzYW5uYVwiLFwiTE5cIjpcIkdhbmVzYW5cIixcIlNcIjoxfSx7XCJGTlwiOlwiUC4gS3Jpc2huYVwiLFwiTE5cIjpcIkd1bW1hZGlcIixcIlNcIjoyfSx7XCJGTlwiOlwiSGVjdG9yXCIsXCJMTlwiOlwiR2FyY2lhLU1vbGluYVwiLFwiU1wiOjN9XSxcIkJWXCI6XCIyNHRoIEludGVybmF0aW9uYWwgQ29uZmVyZW5jZSBvbiBEaXN0cmlidXRlZCBDb21wdXRpbmcgU3lzdGVtcywgMjAwNC4gUHJvY2VlZGluZ3MuXCIsXCJCVFwiOlwicFwiLFwiUEJcIjpcIklFRUVcIn0ifSx7ImxvZ3Byb2IiOi0xNy44MzgsImtlc0VudGl0eUlkIjo2NzgzNjYwLCJJZCI6MTcyNTQxNDIwNiwiVGkiOiJ0aGUgZ2xvYmUgZGlzdHJpYnV0aW9uIG5ldHdvcmsiLCJZIjoyMDAwLCJEIjoiMjAwMC0wNi0xOCIsIkNDIjo3NiwiUklkIjpbMjE5NzAwMDI1MSwyMDA1MzczNzE0LDE1NzMyMzE5NDksMTUyNzc5MzQ5NiwyMTE2MTQyNDMzLDIxNzIyNjE5MjgsMTc2MDk3Mjc0LDIwOTUwOTAwOTksMjAyMDg3Mzg3Miw3MTQwNTkzNyw0MDMwNTc5NCwyMTM3MDI2Njk3LDIxMjMyNTY1MjYsOTMzMjg2NjQsMjEyNTAwNjkzNSwxNTYwMjU1MTEzLDIxMDk0NjQwMjQsMjU5MDExMTE3Nl0sIkFBIjpbeyJBdU4iOiJhcm5vIGJha2tlciJ9LHsiQXVOIjoiZSBhbWFkZSJ9LHsiQXVOIjoiZyBjIGJhbGxpbnRpam4ifSx7IkF1TiI6Imkga3V6In0seyJBdU4iOiJwYXRyaWNrIHZlcmthaWsifSx7IkF1TiI6ImkgdmFuIGRlciB3aWprIn0seyJBdU4iOiJtIHIgdmFuIHN0ZWVuIn0seyJBdU4iOiJhbmRyZXcgcyB0YW5lbmJhdW0ifV0sIkYiOlt7IkZOIjoiZmlsZSB0cmFuc2ZlciBwcm90b2NvbCJ9LHsiRk4iOiJkb21haW4gbmFtZSBzeXN0ZW0ifSx7IkZOIjoibWlkZGxld2FyZSJ9LHsiRk4iOiJhcmNoaXRlY3R1cmUifSx7IkZOIjoic29mdHdhcmUifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlRoZSBnbG9iZSBkaXN0cmlidXRpb24gbmV0d29ya1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjIwMixcIkludmVydGVkSW5kZXhcIjp7XCJUaGVcIjpbMCw0OSw1Myw3NF0sXCJnb2FsXCI6WzFdLFwib2ZcIjpbMiwxOCwzMyw2NywxMDQsMTE1LDEzNywxNzFdLFwidGhlXCI6WzMsMTYsMjcsMzEsNjMsODYsMTAyLDEwNSwxMTIsMTE2LDEyMywxMzUsMTM4LDE0MywxNzIsMTc2LDE5N10sXCJHbG9iZVwiOls0LDUwLDU0LDExNywxODldLFwicHJvamVjdFwiOls1XSxcImlzXCI6WzYsNTksMTY2XSxcInRvXCI6WzcsMzcsODIsOTEsMTIxLDE4MSwxODddLFwiZGVzaWduXCI6WzgsMzUsMTAzXSxcImFuZFwiOls5LDM2LDcwLDg1LDk0LDEyNiwxNDAsMTYyLDE3OCwxOTBdLFwiYnVpbGRcIjpbMTBdLFwiYVwiOlsxMSw0NSwxNTEsMTU1XSxcIm1pZGRsZXdhcmVcIjpbMTIsMTE4XSxcInBsYXRmb3JtXCI6WzEzXSxcInRoYXRcIjpbMTRdLFwiZmFjaWxpdGF0ZXNcIjpbMTVdLFwiZGV2ZWxvcG1lbnRcIjpbMTddLFwibGFyZ2Utc2NhbGVcIjpbMTldLFwiZGlzdHJpYnV0ZWRcIjpbMjBdLFwiYXBwbGljYXRpb25zLFwiOlsyMV0sXCJzdWNoXCI6WzIyXSxcImFzXCI6WzIzLDc5LDE1MF0sXCJ0aG9zZVwiOlsyNF0sXCJmb3VuZFwiOlsyNV0sXCJvblwiOlsyNl0sXCJJbnRlcm5ldC5cIjpbMjhdLFwiVG9cIjpbMjldLFwiZGVtb25zdHJhdGVcIjpbMzBdLFwiZmVhc2liaWxpdHlcIjpbMzJdLFwib3VyXCI6WzM0LDM5XSxcInRlc3RcIjpbMzhdLFwiaWRlYXMsXCI6WzQwXSxcIndlXCI6WzQxLDEzM10sXCJhcmVcIjpbNDIsMTE5LDEzMF0sXCJjdXJyZW50bHlcIjpbNDNdLFwiYnVpbGRpbmdcIjpbNDRdLFwibmV3XCI6WzQ2XSxcIkludGVybmV0XCI6WzQ3XSxcImFwcGxpY2F0aW9uOlwiOls0OF0sXCJEaXN0cmlidXRpb25cIjpbNTEsNTVdLFwiTmV0d29yay5cIjpbNTJdLFwiTmV0d29yayxcIjpbNTZdLFwib3JcIjpbNTddLFwiR0ROLFwiOls1OF0sXCJhblwiOls2MCw4MCwxNjldLFwiYXBwbGljYXRpb25cIjpbNjFdLFwiZm9yXCI6WzYyLDk3LDE1OCwxNzUsMTk0XSxcImVmZmljaWVudCxcIjpbNjQsMTI1XSxcIndvcmxkd2lkZVwiOls2NSwxNTZdLFwiZGlzdHJpYnV0aW9uXCI6WzY2XSxcImZyZWVcIjpbNjgsNzIsMTk1XSxcInNvZnR3YXJlXCI6WzY5LDE2MF0sXCJvdGhlclwiOls3MSwxNjNdLFwiZGF0YS5cIjpbNzNdLFwiR0ROXCI6Wzc1LDEyNCwxMzksMTc3LDE5MV0sXCJjYW5cIjpbNzYsMTQ3XSxcImJlXCI6Wzc3LDE0OF0sXCJzZWVuXCI6Wzc4XSxcImltcHJvdmVtZW50XCI6WzgxXSxcImFub255bW91c1wiOls4M10sXCJGVFBcIjpbODRdLFwiV29ybGRcIjpbODddLFwiV2lkZVwiOls4OF0sXCJXZWJcIjpbODldLFwiZHVlXCI6WzkwXSxcIml0c1wiOls5Ml0sXCJmbGV4aWJpbGl0eVwiOls5M10sXCJleHRlbnNpdmVcIjpbOTVdLFwic3VwcG9ydFwiOls5Nl0sXCJyZXBsaWNhdGlvbi5cIjpbOThdLFwiVGhpc1wiOls5OSwxNjVdLFwicGFwZXJcIjpbMTAwXSxcImRlc2NyaWJlc1wiOlsxMDFdLFwiR0ROLlwiOlsxMDZdLFwiV2VcIjpbMTA3LDE4NV0sXCJzdGFydFwiOlsxMDhdLFwiYnlcIjpbMTA5LDE2OCwyMDBdLFwiZXhwbGFpbmluZ1wiOlsxMTBdLFwiaG93XCI6WzExMSwxMjcsMTQyXSxcInJlcGxpY2F0aW9uXCI6WzExM10sXCJmYWNpbGl0aWVzXCI6WzExNCwxMjldLFwidXNlZFwiOlsxMjAsMTQ5XSxcIm1ha2VcIjpbMTIyLDE4OF0sXCJ0aGVzZVwiOlsxMjgsMTgzXSxcImltcGxlbWVudGVkLlwiOlsxMzFdLFwiTmV4dCxcIjpbMTMyXSxcInByZXNlbnRcIjpbMTM0XSxcImFyY2hpdGVjdHVyZVwiOlsxMzZdLFwiZGlzY3Vzc1wiOlsxNDFdLFwiRG9tYWluXCI6WzE0NF0sXCJOYW1lXCI6WzE0NV0sXCJTeXN0ZW1cIjpbMTQ2XSxcImZpcnN0XCI6WzE1Ml0sXCJhcHByb2FjaFwiOlsxNTNdLFwidG93YXJkc1wiOlsxNTRdLFwic2VydmljZVwiOlsxNTddLFwibmFtaW5nXCI6WzE1OV0sXCJwYWNrYWdlc1wiOlsxNjFdLFwiZW50aXRpZXMuXCI6WzE2NF0sXCJmb2xsb3dlZFwiOlsxNjddLFwiYW5hbHlzaXNcIjpbMTcwXSxcInNlY3VyaXR5XCI6WzE3M10sXCJyZXF1aXJlbWVudHNcIjpbMTc0XSxcIm1lYXN1cmVzXCI6WzE3OV0sXCJ0YWtlblwiOlsxODBdLFwic2F0aXNmeVwiOlsxODJdLFwicmVxdWlyZW1lbnRzLlwiOlsxODRdLFwiaG9wZVwiOlsxODZdLFwiaXRzZWxmXCI6WzE5Ml0sXCJhdmFpbGFibGVcIjpbMTkzXSxcInVuZGVyXCI6WzE5Nl0sXCJCU0RcIjpbMTk4XSxcImxpY2Vuc2VcIjpbMTk5XSxcIjIwMDEuXCI6WzIwMV19fSxcIlNcIjpbe1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTEyNjc3NjVcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jc2UudW5zdy5lZHUuYXUvfmlrdXovcHVibGljYXRpb25zL2ZyZWVuaXguMDAucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuc3lzbmV0LnVjc2QuZWR1L35wdmVya2Fpay9wdWJzL2dsb2JlLWZyZWVuaXgyMDAwLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3d3dy51c2VuaXgub3JnL3B1YmxpY2F0aW9ucy9saWJyYXJ5L3Byb2NlZWRpbmdzL3VzZW5peDIwMDAvZnJlZW5peC9mdWxsX3BhcGVycy9iYWtrZXIvYmFra2VyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbWVtYmVycy5jaGVsbG8ubmwvfmJhbGxpbnR5L3B1YmxpY2F0aW9ucy9mcmVlbml4LjAwLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJscC51bmktdHJpZXIuZGUvZGIvY29uZi91c2VuaXgvdXNlbml4MjAwMGYuaHRtbCNCYWtrZXJBQktWV1NUMDBcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cubmFyY2lzLm5sL3B1YmxpY2F0aW9uL1JlY29yZElEL29haSUzQXJlc2VhcmNoLnZ1Lm5sJTNBcHVibGljYXRpb25zJTJGMmE2MzdkMzctNGZlZi00MzUzLWI1OTYtZGE2YjNmZGJjZDgyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MTI2Nzc2NVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTEyNjc3NjVcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3d3dy5jcy52dS5ubC8lN0Vhc3QvcHVibGljYXRpb25zL2ZyZWVuaXgtMjAwMC5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9yZXNlYXJjaC52dS5ubC9lbi9wdWJsaWNhdGlvbnMvdGhlLWdsb2JlLWRpc3RyaWJ1dGlvbi1uZXR3b3JrXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly93d3cudXNlbml4Lm9yZy9wdWJsaWNhdGlvbnMvbGlicmFyeS9wcm9jZWVkaW5ncy91c2VuaXgyMDAwL2ZyZWVuaXgvZnVsbF9wYXBlcnMvYmFra2VyL2Jha2tlci5wZGZcIn1dLFwiVkZOXCI6XCJVU0VOSVggQW5udWFsIFRlY2huaWNhbCBDb25mZXJlbmNlXCIsXCJWU05cIjpcIlVTRU5JWCBBVENcIixcIkZQXCI6NDEsXCJMUFwiOjQxLFwiQ0NcIjp7XCIxNTI3NzkzNDk2XCI6W1wiVGhpcyBhcHByb2FjaCBpcyBjb21wYXJhYmxlIHRvIHRlY2huaXF1ZXMgYXBwbGllZCBpbiByZWZsZWN0aXZlIG9iamVjdC1vcmllbnRlZCBwcm9ncmFtbWluZyBbS2ljemFsZXMgZXQgYWwuLCAxOTkxXS5cIl0sXCIyMDk1MDkwMDk5XCI6W1wiVGhlIGdvYWwgb2YgdGhlIEdsb2JlIHByb2plY3QgaXMgdG8gZGVzaWduIGFuZCBidWlsZCBhIG1pZGRsZXdhcmUgcGxhdGZvcm0gdGhhdCBmYWNpbGl0YXRlcyB0aGUgZGV2ZWxvcG1lbnQgb2Ygd29ybGR3aWRlIGRpc3RyaWJ1dGVkIGFwcGxpY2F0aW9ucyBieSBwcm92aWRpbmcgZXh0ZW5zaXZlIHN1cHBvcnQgZm9yIGhhbmRsaW5nIGFsbCBvZiB0aGVzZSBjb21wbGV4IG5vbmZ1bmN0aW9uYWwgYXNwZWN0cyBbdmFuIFN0ZWVuIGV0IGFsLiwgMTk5OV0uXCIsXCJUaGUgZGlzdHJpYnV0ZWQgc2hhcmVkIG9iamVjdCBpcyB0aGUgdW5pZnlpbmcgY29uY2VwdCBpbiB0aGUgR2xvYmUgc3lzdGVtIFt2YW4gU3RlZW4gZXQgYWwuLCAxOTk5XS5cIl0sXCIyMTIzMjU2NTI2XCI6W1wiVGhlIEdOUyBmb3VuZCBpbiB0aGUgY3VycmVudCBHbG9iZSBtaWRkbGV3YXJlIGlzIGEgcHJvdG90eXBlIHZlcnNpb24gYmFzZWQgb24gdGhlIERvbWFpbiBOYW1lIFN5c3RlbSBbTW9ja2FwZXRyaXMsIDE5ODddLlwiXSxcIjIxMzcwMjY2OTdcIjpbXCIsIDE5OThdIG9yIENPREEgW1NhdHlhbmFyYXlhbmFuIGV0IGFsLiwgMTk5MF0uXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTc0NTA3ODY5LDIxNjMwNTkxOTAsMjE2Nzg5ODQxNCwyMTA0MjEwODk0LDIxNTA2NzY1ODYsMjA2NDM2MDU0MywxNjUwNjc1NTA5LDIwOTUwOTAwOTksNjUzNTEwOTQsMjAyMDg3Mzg3MiwyMTExOTk2NDg2LDIxMjc1NTUxNDMsMjE2NDE5MjcyMiwyMDc2MTQ0ODk0LDIxNDQ1NTMwNzgsMTk4OTM3Nzk5NCwyMDAwODc2MDIzLDIwMjA3NjU2NTIsMjExODQyODE5MywyMTU4MDQ5ODIxLDIxNzQ1MDc4NjksMjE2MzA1OTE5MCwyMTY3ODk4NDE0LDIxMDQyMTA4OTQsMjE1MDY3NjU4NiwyMDY0MzYwNTQzLDE2NTA2NzU1MDksMjA5NTA5MDA5OSw2NTM1MTA5NCwyMDIwODczODcyLDIxMTE5OTY0ODYsMjEyNzU1NTE0MywyMTY0MTkyNzIyLDIwNzYxNDQ4OTQsMjE0NDU1MzA3OCwxOTg5Mzc3OTk0LDIwMDA4NzYwMjMsMjAyMDc2NTY1Ml0sXCJBTkZcIjpbe1wiRk5cIjpcIkEuXCIsXCJMTlwiOlwiQmFra2VyXCIsXCJTXCI6MX0se1wiRk5cIjpcIkUuXCIsXCJMTlwiOlwiQW1hZGVcIixcIlNcIjoyfSx7XCJGTlwiOlwiRy5DLlwiLFwiTE5cIjpcIkJhbGxpbnRpam5cIixcIlNcIjozfSx7XCJGTlwiOlwiSS5cIixcIkxOXCI6XCJLdXpcIixcIlNcIjo0fSx7XCJGTlwiOlwiUC5cIixcIkxOXCI6XCJWZXJrYWlrXCIsXCJTXCI6NX0se1wiRk5cIjpcIkkuIHZhbiBkZXJcIixcIkxOXCI6XCJXaWprXCIsXCJTXCI6Nn0se1wiRk5cIjpcIk0uUi4gdmFuXCIsXCJMTlwiOlwiU3RlZW5cIixcIlNcIjo3fSx7XCJGTlwiOlwiQS5TLlwiLFwiTE5cIjpcIlRhbmVuYmF1bVwiLFwiU1wiOjh9XSxcIkJWXCI6XCJBVEVDICcwMCBQcm9jZWVkaW5ncyBvZiB0aGUgYW5udWFsIGNvbmZlcmVuY2Ugb24gVVNFTklYIEFubnVhbCBUZWNobmljYWwgQ29uZmVyZW5jZVwiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJVU0VOSVggQXNzb2NpYXRpb25cIn0ifSx7ImxvZ3Byb2IiOi0xNy45NSwia2VzRW50aXR5SWQiOjc1NzMzNzIsIklkIjoxNTI4NTQ1ODk3LCJUaSI6ImNvbnNpc3RlbnQgaGFzaGluZyBhbmQgcmFuZG9tIHRyZWVzIGFsZ29yaXRobXMgZm9yIGNhY2hpbmcgaW4gZGlzdHJpYnV0ZWQgbmV0d29ya3MiLCJZIjoxOTk4LCJEIjoiMTk5OC0wMS0wMSIsIkNDIjo3NSwiQUEiOlt7IkF1TiI6Imxld2luIGRhbmllbCBtIn1dLCJGIjpbeyJGTiI6ImNvbnNpc3RlbnQgaGFzaGluZyJ9LHsiRk4iOiJyYW5kb20gdHJlZSJ9LHsiRk4iOiJ0aGVvcmV0aWNhbCBjb21wdXRlciBzY2llbmNlIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkNvbnNpc3RlbnQgaGFzaGluZyBhbmQgcmFuZG9tIHRyZWVzIDogYWxnb3JpdGhtcyBmb3IgY2FjaGluZyBpbiBkaXN0cmlidXRlZCBuZXR3b3Jrc1wiLFwiU1wiOlt7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZHNwYWNlLm1pdC5lZHUvaGFuZGxlLzE3MjEuMS85OTQ3XCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kc3BhY2UubWl0LmVkdS9iaXRzdHJlYW0vMTcyMS4xLzk5NDcvMi80MDI5NTE0Mi1NSVQucGRmXCJ9XSxcIlZGTlwiOlwiXCIsXCJQUlwiOlsyMTE4NDI4MTkzLDIwMjA3NjU2NTIsMjE2MzA1OTE5MCwyMTY3ODk4NDE0LDIxNTgwNDk4MjEsMjEwNDIxMDg5NCwxNjUwNjc1NTA5LDIwMDA4NzYwMjMsMjE1MDY3NjU4NiwyMTc0NTA3ODY5LDE1NjY3NzcyMTAsMTY1MDgwMjE4MSwxOTcwNTY0Nzc4LDIxMjM4MjA4MjAsNDA4MzAzMzksOTU0MzIxNDksMTQ5NDk0NjQ1NCwxNTg0NjM1NDU5LDE5NTc1ODI1OTAsMTk4MTUzNTQwNSwyMTE4NDI4MTkzLDIwMjA3NjU2NTIsMjE2MzA1OTE5MCwyMTY3ODk4NDE0LDIxNTgwNDk4MjEsMjEwNDIxMDg5NCwxNjUwNjc1NTA5LDIwMDA4NzYwMjMsMjE1MDY3NjU4NiwyMTc0NTA3ODY5LDE1NjY3NzcyMTAsMTY1MDgwMjE4MSwxOTcwNTY0Nzc4LDIxMjM4MjA4MjAsNDA4MzAzMzksOTU0MzIxNDksMTQ5NDk0NjQ1NCwxNTg0NjM1NDU5LDE5NTc1ODI1OTAsMTk4MTUzNTQwNV0sXCJBTkZcIjpbe1wiRk5cIjpcIkRhbmllbCBNLlwiLFwiTE5cIjpcIkxld2luXCIsXCJTXCI6MX1dLFwiQlRcIjpcImFcIixcIlBCXCI6XCJNYXNzYWNodXNldHRzIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5XCJ9In0seyJsb2dwcm9iIjotMTcuOTg0LCJrZXNFbnRpdHlJZCI6NzgyNTQ2OCwiSWQiOjE0OTQ5NDY0NTQsIlRpIjoic2VydmluZyBkbnMgdXNpbmcgYSBwZWVyIHRvIHBlZXIgbG9va3VwIHNlcnZpY2UiLCJZIjoyMDAyLCJEIjoiMjAwMi0wMy0wNyIsIkNDIjoyODEsIlJJZCI6WzIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTUwNjc2NTg2LDE4MjgxNTAwMjksMjI3MjAyMzY0NiwyMTY1MDcxMzk5LDE2NzUyNjMyODYsMjEyMjI2OTkyNSwyMTAyMzMzNTYwLDIyNjEzMjExMTIsMjE1MzU0NTQ4OF0sIkFBIjpbeyJBdU4iOiJydXNzIGNveCJ9LHsiQXVOIjoiYXRoaWNoYSBtdXRoaXRhY2hhcm9lbiJ9LHsiQXVOIjoicm9iZXJ0IHRhcHBhbiBtb3JyaXMifV0sIkYiOlt7IkZOIjoiem9uZSBmaWxlIn0seyJGTiI6ImRucyB6b25lIHRyYW5zZmVyIn0seyJGTiI6Im5zdXBkYXRlIn0seyJGTiI6InJvdW5kIHJvYmluIGRucyJ9LHsiRk4iOiJkb21haW4gbmFtZSBzeXN0ZW0ifSx7IkZOIjoiZGlzdHJpYnV0ZWQgaGFzaCB0YWJsZSJ9LHsiRk4iOiJoYXNoIHRhYmxlIn0seyJGTiI6InBlZXIgdG8gcGVlciJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlNlcnZpbmcgRE5TIFVzaW5nIGEgUGVlci10by1QZWVyIExvb2t1cCBTZXJ2aWNlXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTE4LFwiSW52ZXJ0ZWRJbmRleFwiOntcIlRoZVwiOlswLDE4XSxcImN1cnJlbnRcIjpbMSw3Nl0sXCJkb21haW5cIjpbMl0sXCJuYW1lXCI6WzNdLFwic3lzdGVtXCI6WzQsNTgsODBdLFwiKEROUylcIjpbNV0sXCJjb3VwbGVzXCI6WzZdLFwib3duZXJzaGlwXCI6WzddLFwib2ZcIjpbOCwxMywyNSwzMyw1NV0sXCJkb21haW5zXCI6WzldLFwid2l0aFwiOlsxMCw3NCw5MF0sXCJ0aGVcIjpbMTEsNjcsNzVdLFwicmVzcG9uc2liaWxpdHlcIjpbMTJdLFwic2VydmluZ1wiOlsxNF0sXCJkYXRhXCI6WzE1XSxcImZvclwiOlsxNiwzN10sXCJ0aGVtLlwiOlsxN10sXCJETlNcIjpbMTksMzhdLFwic2VjdXJpdHlcIjpbMjBdLFwiZXh0ZW5zaW9uc1wiOlsyMV0sXCIoRE5TU0VDKVwiOlsyMl0sXCJhbGxvd1wiOlsyM10sXCJ2ZXJpZmljYXRvblwiOlsyNF0sXCJyZWNvcmRzXCI6WzI2XSxcIm9idGFpbmVkXCI6WzI3XSxcImJ5XCI6WzI4XSxcImFsdGVybmF0ZVwiOlsyOV0sXCJtZWFucyxcIjpbMzBdLFwib3BlbmluZ1wiOlszMV0sXCJleHBsb3JhdGlvblwiOlszMl0sXCJhbHRlcm5hdGl2ZVwiOlszNCw0NF0sXCJzdG9yYWdlXCI6WzM1XSxcInN5c3RlbXNcIjpbMzYsMTExXSxcInJlY29yZHMuXCI6WzM5XSxcIldlXCI6WzQwLDkzXSxcImV4cGxvcmVcIjpbNDFdLFwib25lXCI6WzQyXSxcInN1Y2hcIjpbNDNdLFwidXNpbmdcIjpbNDVdLFwiREhhc2gsXCI6WzQ2XSxcImFcIjpbNDddLFwicGVlci10by1wZWVyXCI6WzQ4LDExMF0sXCJkaXN0cmlidXRlZFwiOls0OSwxMTNdLFwiaGFzaFwiOls1MCwxMTRdLFwidGFibGVcIjpbNTFdLFwiYnVpbHRcIjpbNTJdLFwib25cIjpbNTNdLFwidG9wXCI6WzU0XSxcIkNob3JkLlwiOls1Nl0sXCJPdXJcIjpbNTddLFwiaW5oZXJpdHNcIjpbNTldLFwiQ2hvcmQnc1wiOls2MF0sXCJmYXVsdC10b2xlcmFuY2VcIjpbNjFdLFwiYW5kXCI6WzYyLDg1LDExMl0sXCJsb2FkXCI6WzYzXSxcImJhbGFuY2VcIjpbNjRdLFwicHJvcGVydGllcyxcIjpbNjVdLFwiYXRcIjpbNjZdLFwic2FtZVwiOls2OF0sXCJ0aW1lXCI6WzY5XSxcImVsaW1pbmF0aW5nXCI6WzcwXSxcIm1hbnlcIjpbNzFdLFwiYWRtaW5pc3RyYXRpdmVcIjpbNzJdLFwicHJvYmxlbXNcIjpbNzNdLFwiRE5TLlwiOls3Nyw5Ml0sXCJTdGlsbCxcIjpbNzhdLFwib3VyXCI6Wzc5XSxcImhhc1wiOls4MV0sXCJzaWduaWZpY2FudGx5XCI6WzgyXSxcImhpZ2hlclwiOls4M10sXCJsYXRlbmNpZXNcIjpbODRdLFwib3RoZXJcIjpbODZdLFwiZGlzYWR2YW50YWdlc1wiOls4N10sXCJpblwiOls4OCwxMDksMTE2XSxcImNvbXBhcmlzb25cIjpbODksOTZdLFwiY29udmVudGlvbmFsXCI6WzkxXSxcInVzZVwiOls5NF0sXCJ0aGlzXCI6Wzk1XSxcInRvXCI6Wzk3LDEwNl0sXCJkcmF3XCI6Wzk4XSxcImNvbmNsdXNpb25zXCI6Wzk5XSxcImFib3V0XCI6WzEwMF0sXCJnZW5lcmFsXCI6WzEwMV0sXCJpc3N1ZXNcIjpbMTAyXSxcInRoYXRcIjpbMTAzXSxcInN0aWxsXCI6WzEwNF0sXCJuZWVkXCI6WzEwNV0sXCJiZVwiOlsxMDddLFwiYWRkcmVzc2VkXCI6WzEwOF0sXCJ0YWJsZXNcIjpbMTE1XSxcInBhcnRpY3VsYXIuXCI6WzExN119fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5jb3JuZWxsLmVkdS9wZW9wbGUvZWdzL2NzNjE1LXNwcmluZzA2L21pdGRucy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5lZWNzLmhhcnZhcmQuZWR1L35tZW1hL2NvdXJzZXMvY3MyNjQvcGFwZXJzL2Rucy1jaG9yZC1pcHRwczIwMDIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vbGluay5zcHJpbmdlci5jb20vY29udGVudC9wZGYvMTAuMTAwNyUyRjMtNTQwLTQ1NzQ4LThfMTUucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wZG9zLmNzYWlsLm1pdC5lZHUvcGFwZXJzL2Nob3JkOmRuczAyL2Nob3JkOmRuczAyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vcGVzdGlsZW56Lm9yZy9+YmF1ZXJtL25hbWVzL0Nob3JkRE5TLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzZC51b2MuZ3Ivfmh5NTU0L3BhcGVycy9kbnMtY2hvcmQtaXB0cHMyMDAyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3JkLnNwcmluZ2VyLmNvbS9jb250ZW50L3BkZi8xMC4xMDA3JTJGMy01NDAtNDU3NDgtOF8xNS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvaXB0cHMvaXB0cHMyMDAyLmh0bWwjQ294TU0wMlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2xpbmsuc3ByaW5nZXIuY29tL2NoYXB0ZXIvMTAuMTAwNyUyRjMtNTQwLTQ1NzQ4LThfMTVcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3Nob2VzdHJpbmdmb3VuZGF0aW9uLm9yZy8lN0ViYXVlcm0vbmFtZXMvQ2hvcmRETlMucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9Njg3ODEyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vcmQuc3ByaW5nZXIuY29tL2NoYXB0ZXIvMTAuMTAwNyUyRjMtNTQwLTQ1NzQ4LThfMTVcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2NhdC5pbmlzdC5mci8/YU1vZGVsZT1hZmZpY2hlTiZjcHNpZHQ9MTQ4ODEzNDZcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy5zcHJpbmdlcmxpbmsuY29tL2luZGV4L2JhOGU2cDI2d2J4cThnYmMucGRmXCJ9XSxcIlZGTlwiOlwiSW50ZXJuYXRpb25hbCBXb3Jrc2hvcCBvbiBQZWVyLXRvLVBlZXIgU3lzdGVtc1wiLFwiVlNOXCI6XCJJUFRQU1wiLFwiRlBcIjoxNTUsXCJMUFwiOjE2NSxcIkRPSVwiOlwiMTAuMTAwNy8zLTU0MC00NTc0OC04XzE1XCIsXCJDQ1wiOntcIjE2NzUyNjMyODZcIjpbXCJGb3IgZXhhbXBsZSwgaXQgaXMgc3RhbmRhcmQgcHJhY3RpY2UgdG8gcmFuZG9tbHkgb3JkZXIgdGhlIHJlc3VsdHMgb2YgYSBxdWVyeSB0byBwcm92aWRlIGFwcHJveGltYXRlIGxvYWQgYmFsYW5jaW5nIFsyXS5cIl0sXCIxODI4MTUwMDI5XCI6W1wiSW4gcmVzcG9uc2UsIE1vY2thcGV0cmlzIGFuZCBvdGhlcnMgYmVnYW4gdGhlIGRlc2lnbiBhbmQgaW1wbGVtZW50YXRpb24gb2YgYSBkaXN0cmlidXRlZCBkYXRhYmFzZSB0aGF0IHdlIG5vdyBrbm93IGFzIHRoZSBJbnRlcm5ldCBkb21haW4gbmFtZSBzeXN0ZW0gKEROUykgWzgsIDldLlwiXSxcIjIxMDIzMzM1NjBcIjpbXCJbNl0gZm91bmQgdGhhdCBhcHByb3hpbWF0ZWx5IDM1JSBvZiBETlMgcXVlcmllcyBuZXZlciByZWNlaXZlIGFuIGFuc3dlciBvciByZWNlaXZlIGEgbmVnYXRpdmUgYW5zd2VyLCBhbmQgYXR0cmlidXRlZCBtYW55IG9mIHRoZXNlIGZhaWx1cmVzIHRvIGltcHJvcGVybHkgY29uZmlndXJlZCBuYW1lIHNlcnZlcnMgb3IgaW5jb3JyZWN0IG5hbWUgc2VydmVyIChOUykgcmVjb3Jkcy5cIl0sXCIyMTIyMjY5OTI1XCI6W1wiSW4gcmVzcG9uc2UsIE1vY2thcGV0cmlzIGFuZCBvdGhlcnMgYmVnYW4gdGhlIGRlc2lnbiBhbmQgaW1wbGVtZW50YXRpb24gb2YgYSBkaXN0cmlidXRlZCBkYXRhYmFzZSB0aGF0IHdlIG5vdyBrbm93IGFzIHRoZSBJbnRlcm5ldCBkb21haW4gbmFtZSBzeXN0ZW0gKEROUykgWzgsIDldLlwiLFwiTG9va2luZyBiYWNrIGF0IEROUyBpbiAxOTg4LCBNb2NrYXBldHJpcyBhbmQgRHVubGFwIFs5XSBsaXN0ZWQgd2hhdCB0aGV5IGJlbGlldmVkIHRvIGJlIHRoZSBzdXJwcmlzZXMsIHN1Y2Nlc3NlcywgYW5kIHNob3J0Y29taW5ncyBvZiB0aGUgc3lzdGVtLlwiLFwiSW4gdGhlaXIgMTk4OCByZXRyb3NwZWN0aXZlIFs5XSwgTW9ja2FwZXRyaXMgYW5kIER1bmxhcCBsaXN0ZWQg4oCcZGlzdHJpYnV0aW9uIG9mIGNvbnRyb2wgdnMuXCJdLFwiMjE1MDY3NjU4NlwiOltcIkRIYXNoIFsgMyBdLCBhIENob3JkLWJhc2VkIGRpc3RyaWJ1dGVkIGhhc2ggdGFibGUuXCJdLFwiMjE1MzU0NTQ4OFwiOltcIls0XSBmb3VuZCB0aGF0IG1vc3QgRE5TIHRyYWZmaWMgd2FzIGNhdXNlZCBieSBtaXNjb25maWd1cmF0aW9uIGFuZCBmYXVsdHkgaW1wbGVtZW50YXRpb24gb2YgdGhlIG5hbWUgc2VydmVycy5cIl0sXCIyMTU4MDQ5ODIxXCI6W1wiSW4gdGhpcyBwYXBlciwgd2UgZXhwbG9yZSBvbmUgYWx0ZXJuYXRlIHNlcnZpY2Ugc3RydWN0dXJlIGJhc2VkIG9uIENob3JkIFsxMF0sIGEgcGVlci10by1wZWVyIGxvb2t1cCBzZXJ2aWNlLlwiXSxcIjIyNzIwMjM2NDZcIjpbXCJJbiByZXNwb25zZSB0byBjb25jZXJucyBhYm91dCB0aGlzIGFuZCBvdGhlciBhdHRhY2tzLCB0aGUgRE5TIFNlY3VyaXR5IEV4dGVuc2lvbnMgWzVdIChETlNTRUMpIHdlcmUgZGV2ZWxvcGVkIGluIHRoZSBsYXRlIDE5OTBzLlwiXX0sXCJQUlwiOlsyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDIwODMxNTgwMDIsMjE1MDY3NjU4NiwyMTE5MjQ1MTA2LDE2NTA2NzU1MDksMjE2NTA3MTM5OSwyMTc0NTA3ODY5LDIxMjM4MjA4MjAsMjAwMDg3NjAyMywyMTIzNDgyNDYyLDE0OTI1NTI1MzEsMjEwNDIxMDg5NCwxNTE1NzYxMDQwLDIwMjA3NjU2NTIsMTgyODE1MDAyOSwyMTM3MjkyNTY4LDE5NzA1NjQ3NzgsMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE1ODA0OTgyMSwyMDgzMTU4MDAyLDIxNTA2NzY1ODYsMjExOTI0NTEwNiwxNjUwNjc1NTA5LDIxNjUwNzEzOTksMjE3NDUwNzg2OSwyMTIzODIwODIwLDIwMDA4NzYwMjMsMjEyMzQ4MjQ2MiwxNDkyNTUyNTMxLDIxMDQyMTA4OTQsMTUxNTc2MTA0MCwyMDIwNzY1NjUyLDE4MjgxNTAwMjksMjEzNzI5MjU2OCwxOTcwNTY0Nzc4XSxcIkFORlwiOlt7XCJGTlwiOlwiUnVzc1wiLFwiTE5cIjpcIkNveFwiLFwiU1wiOjF9LHtcIkZOXCI6XCJBdGhpY2hhXCIsXCJMTlwiOlwiTXV0aGl0YWNoYXJvZW5cIixcIlNcIjoyfSx7XCJGTlwiOlwiUm9iZXJ0IFRhcHBhblwiLFwiTE5cIjpcIk1vcnJpc1wiLFwiU1wiOjN9XSxcIkJWXCI6XCJpbnRlcm5hdGlvbmFsIHdvcmtzaG9wIG9uIHBlZXIgdG8gcGVlciBzeXN0ZW1zXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIlNwcmluZ2VyXCJ9In0seyJsb2dwcm9iIjotMTguMDcsImtlc0VudGl0eUlkIjo4NTI1MTYxLCJJZCI6MTgxNTc2OTQzNCwiVGkiOiJzcHVycmluZyBhZG9wdGlvbiBvZiBkaHRzIHdpdGggb3Blbmhhc2ggYSBwdWJsaWMgZGh0IHNlcnZpY2UiLCJZIjoyMDA0LCJEIjoiMjAwNC0wMi0yNiIsIkNDIjoxMDcsIlJJZCI6WzIxMDQyMTA4OTQsMjE1MDY3NjU4NiwyMTIzODIwODIwLDIxNTU0NDQzMTMsMjEyNzQ5NDIyMiwyMTUyMjI2NzgzLDIxMjA2MjYyOTQsMTk3NzA0Mjk3MCwxNTExMjk0MDIsMjE1Mzc1MjA2OCwxNTc3OTA0NDM4LDE1NjY3NzcyMTAsMTQ0MTEyNjMzLDE5MzQ3NTc0MjgsMTU1NTQ2NDI5NCwxNDk2MTM5MzM5LDIwMDk1NzIzNjMsMTg2NzIyNTU1MSwxNTI4OTY4NDM1LDE2MzU3MzY4Nl0sIkFBIjpbeyJBdU4iOiJicmFkIGthcnAifSx7IkF1TiI6InN5bHZpYSByYXRuYXNhbXkifSx7IkF1TiI6InNlYW4gcmhlYSJ9LHsiQXVOIjoic2NvdHQgc2hlbmtlciJ9XSwiRiI6W3siRk4iOiJwbGFuZXRsYWIifSx7IkZOIjoiZGlzdHJpYnV0ZWQgaGFzaCB0YWJsZSJ9LHsiRk4iOiJoYXNoIHRhYmxlIn0seyJGTiI6ImluZGlyZWN0aW9uIn0seyJGTiI6InRlc3RiZWQifSx7IkZOIjoiZG93bmxvYWQifSx7IkZOIjoiZmlsZSBzeXN0ZW0ifSx7IkZOIjoicGVlciB0byBwZWVyIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJkYXRhYmFzZSJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlNwdXJyaW5nIGFkb3B0aW9uIG9mIERIVHMgd2l0aCBvcGVuaGFzaCwgYSBwdWJsaWMgREhUIHNlcnZpY2VcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoyMDUsXCJJbnZlcnRlZEluZGV4XCI6e1wiVGhlXCI6WzBdLFwicGFzdFwiOlsxXSxcInRocmVlXCI6WzJdLFwieWVhcnNcIjpbM10sXCJoYXZlXCI6WzQsMjcsODRdLFwic2VlblwiOls1XSxcImludGVuc2VcIjpbNl0sXCJyZXNlYXJjaFwiOls3LDEwMCwxMjhdLFwiaW50b1wiOls4LDE0LDIwXSxcIkRpc3RyaWJ1dGVkXCI6WzldLFwiSGFzaFwiOlsxMF0sXCJUYWJsZXNcIjpbMTFdLFwiKERIVHMpOlwiOlsxMl0sXCJib3RoXCI6WzEzXSxcImFsZ29yaXRobXNcIjpbMTVdLFwiZm9yXCI6WzE2LDE2MF0sXCJidWlsZGluZ1wiOlsxNyw3MF0sXCJ0aGVtLFwiOlsxOF0sXCJhbmRcIjpbMTksNTIsMTM3LDE1MF0sXCJhcHBsaWNhdGlvbnNcIjpbMjEsMjYsNjEsOTNdLFwiYnVpbHRcIjpbMjJdLFwiYXRvcFwiOlsyM10sXCJ0aGVtLlwiOlsyNF0sXCJUaGVzZVwiOlsyNV0sXCJzcGFubmVkXCI6WzI4XSxcImFcIjpbMjksNzQsODUsMTI3LDEzMSwxNzIsMTgxLDIwM10sXCJzdHJpa2luZ2x5XCI6WzMwXSxcIndpZGVcIjpbMzFdLFwicmFuZ2UsXCI6WzMyXSxcImluY2x1ZGluZ1wiOlszM10sXCJmaWxlXCI6WzM0XSxcInN5c3RlbXNcIjpbMzVdLFwiWzHigJMzXSxcIjpbMzZdLFwiZXZlbnRcIjpbMzddLFwibm90aWZpY2F0aW9uXCI6WzM4XSxcIls0XSxcIjpbMzldLFwiY29udGVudFwiOls0MF0sXCJkaXN0cmlidXRpb25cIjpbNDFdLFwiWzVdLFwiOls0Ml0sXCJlLW1haWxcIjpbNDNdLFwiZGVsaXZlcnlcIjpbNDRdLFwiWzZdLFwiOls0NV0sXCJpbmRpcmVjdGlvblwiOls0Nl0sXCJzZXJ2aWNlc1wiOls0N10sXCJbNyw4XSxcIjpbNDhdLFwid2ViXCI6WzQ5XSxcImNhY2hlc1wiOls1MF0sXCJbOV0sXCI6WzUxXSxcInJlbGF0aW9uYWxcIjpbNTNdLFwicXVlcnlcIjpbNTRdLFwicHJvY2Vzc29yc1wiOls1NV0sXCJbMTBdLlwiOls1Nl0sXCJXaGlsZVwiOls1N10sXCJ0aGlzXCI6WzU4LDk5LDExOV0sXCJzZXRcIjpbNTldLFwib2ZcIjpbNjAsNjgsNzcsOTEsMTA3LDEyMSwxMzAsMTc1XSxcImlzXCI6WzYyLDcxXSxcImltcHJlc3NpdmVseVwiOls2M10sXCJkaXZlcnNlLFwiOls2NF0sXCJ0aGVcIjpbNjUsODksMTA1LDE1OF0sXCJ2YXN0XCI6WzY2XSxcIm1ham9yaXR5XCI6WzY3XSxcImFwcGxpY2F0aW9uXCI6WzY5LDEwOSwxODldLFwiZG9uZVwiOls3Ml0sXCJieVwiOls3Myw5NV0sXCJzbWFsbFwiOls3NV0sXCJjb21tdW5pdHlcIjpbNzYsMTA2LDEyMF0sXCJESFRcIjpbNzgsMTMyLDE0MF0sXCJyZXNlYXJjaGVycy5cIjpbNzldLFwiSWZcIjpbODBdLFwiREhUc1wiOls4MV0sXCJhcmVcIjpbODIsMTQ2XSxcInRvXCI6WzgzLDE0OCwxODAsMTkzLDIwMV0sXCJwb3NpdGl2ZVwiOls4Nl0sXCJpbXBhY3RcIjpbODddLFwib25cIjpbODhdLFwiZGVzaWduXCI6WzkwXSxcImRpc3RyaWJ1dGVkXCI6WzkyXSxcInVzZWRcIjpbOTRdLFwicmVhbFwiOls5Nl0sXCJ1c2Vyc1wiOls5N10sXCJvdXRzaWRlXCI6Wzk4XSxcImNvbW11bml0eSxcIjpbMTAxXSxcIndlXCI6WzEwMl0sXCJiZWxpZXZlXCI6WzEwM10sXCJ0aGF0XCI6WzEwNCwxNjYsMTcwXSxcIkRIVC1iYXNlZFwiOlsxMDgsMTUyXSxcImRldmVsb3BlcnNcIjpbMTEwLDEyMiwxNzcsMTkwXSxcInNob3VsZFwiOlsxMTFdLFwiYmVcIjpbMTEyXSxcImFzXCI6WzExMywxMTVdLFwiYnJvYWRcIjpbMTE0XSxcInBvc3NpYmxlLlxcclxcblxcclxcbldoeSxcIjpbMTE2XSxcInRoZW4sXCI6WzExN10sXCJoYXNcIjpbMTE4LDE3OF0sXCJyZW1haW5lZFwiOlsxMjNdLFwibmFycm93P1wiOlsxMjRdLFwiRmlyc3QsXCI6WzEyNV0sXCJrZWVwaW5nXCI6WzEyNl0sXCJwcm90b3R5cGVcIjpbMTI5XSxcInJ1bm5pbmdcIjpbMTMzXSxcImNvbnRpbnVhbGx5XCI6WzEzNF0sXCJyZXF1aXJlc1wiOlsxMzVdLFwiZWZmb3J0LFwiOlsxMzZdLFwiZXhwZXJpZW5jZVwiOlsxMzhdLFwid2l0aFwiOlsxMzldLFwiY29kZS5cIjpbMTQxXSxcIlNlY29uZCxcIjpbMTQyXSxcInNpZ25pZmljYW50XCI6WzE0M10sXCJ0ZXN0YmVkXCI6WzE0NCwxODJdLFwicmVzb3VyY2VzXCI6WzE0NV0sXCJyZXF1aXJlZFwiOlsxNDddLFwiZGVwbG95XCI6WzE0OV0sXCJ0ZXN0XCI6WzE1MV0sXCJhcHBsaWNhdGlvbnMuXCI6WzE1M10sXCJBXCI6WzE1NF0sXCJoYWNrZXJcIjpbMTU1XSxcImNhblwiOlsxNTZdLFwiZG93bmxvYWRcIjpbMTU3XSxcImNvZGVcIjpbMTU5LDE2N10sXCJDaG9yZCxcIjpbMTYxXSxcImJ1dFwiOlsxNjJdLFwic2hlXCI6WzE2M10sXCJjYW5ub3RcIjpbMTY0XSxcInJ1blwiOlsxNjVdLFwiYWxvbmU7XCI6WzE2OF0sXCJyZWNhbGxcIjpbMTY5XSxcIm9ubHlcIjpbMTcxXSxcInRpbnlcIjpbMTczXSxcImZyYWN0aW9uXCI6WzE3NF0sXCJ3b3VsZC1iZVwiOlsxNzZdLFwiYWNjZXNzXCI6WzE3OV0sXCJpbmZyYXN0cnVjdHVyZVwiOlsxODNdLFwibGlrZVwiOlsxODRdLFwiUGxhbmV0TGFiXCI6WzE4NV0sXCJbMTFdLlwiOlsxODZdLFwiQ29uc2VxdWVudGx5LFwiOlsxODddLFwibW9zdFwiOlsxODhdLFwid291bGRcIjpbMTkxXSxcInR1cm5cIjpbMTkyXSxcImFkXCI6WzE5NF0sXCJob2NcIjpbMTk1XSxcImFwcGxpY2F0aW9uLXNwZWNpZmljXCI6WzE5Nl0sXCJzb2x1dGlvbnNcIjpbMTk3XSxcInJhdGhlclwiOlsxOThdLFwidGhhblwiOlsxOTldLFwiYXR0ZW1wdFwiOlsyMDBdLFwidXNlXCI6WzIwMl0sXCJESFQuXCI6WzIwNF19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5jb3JuZWxsLmVkdS9QZW9wbGUvZWdzL2lwdHBzYXJjaGl2ZS9pcHRwczA0LmNzLnVjc2QuZWR1L3BhcGVycy9rYXJwLW9wZW5oYXNoLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LnNyaGVhLm5ldC9wYXBlcnMva2FycC1vcGVuaGFzaC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dzAuY3MudWNsLmFjLnVrL3N0YWZmL0IuS2FycC9vcGVuaGFzaC1pcHRwczIwMDQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZWVjcy5oYXJ2YXJkLmVkdS9+bWVtYS9jb3Vyc2VzL2NzMjY0L3BhcGVycy9vcGVuaGFzaC1pcHRwczIwMDQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vbGluay5zcHJpbmdlci5jb20vY29udGVudC9wZGYvMTAuMTAwNyUyRjk3OC0zLTU0MC0zMDE4My03XzE5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lmljc2kuYmVya2VsZXkuZWR1L3B1YnMvbmV0d29ya2luZy9zcHVycmluZ2Fkb3B0aW9uMDQucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cuaW5mb3JtYXRpay51bmktdHJpZXIuZGUvJTdFbGV5L2RiL2NvbmYvaXB0cHMvaXB0cHMyMDA0Lmh0bWxcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvaXB0cHMvaXB0cHMyMDA0Lmh0bWwjS2FycFJSUzA0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vcmQuc3ByaW5nZXIuY29tL2NoYXB0ZXIvMTAuMTAwNy85NzgtMy01NDAtMzAxODMtN18xOVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2xpbmsuc3ByaW5nZXIuY29tL2NoYXB0ZXIvMTAuMTAwNy85NzgtMy01NDAtMzAxODMtN18xOVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnVjbC5hYy51ay9zdGFmZi9CLkthcnAvb3Blbmhhc2gtaXB0cHMyMDA0LnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTIxNTgwNDAuMjE1ODA2NVwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MjE1ODA2NVwifV0sXCJWRk5cIjpcIkludGVybmF0aW9uYWwgV29ya3Nob3Agb24gUGVlci10by1QZWVyIFN5c3RlbXNcIixcIlZTTlwiOlwiSVBUUFNcIixcIkZQXCI6MTk1LFwiTFBcIjoyMDUsXCJET0lcIjpcIjEwLjEwMDcvOTc4LTMtNTQwLTMwMTgzLTdfMTlcIixcIkNDXCI6e1wiMTQ0MTEyNjMzXCI6W1wiVGhlc2UgYXBwbGljYXRpb25zIGhhdmUgc3Bhbm5lZCBhIHN0cmlraW5nbHkgd2lkZSByYW5nZSwgaW5jbHVkaW5nIGZpbGUgc3lzdGVtcyBbNCwgNiwgMTBdLCBldmVudCBub3RpZmljYXRpb24gWzExXSwgY29udGVudCBkaXN0cmlidXRpb24gWzJdLCBlLW1haWwgZGVsaXZlcnkgWzEyXSwgaW5kaXJlY3Rpb24gc2VydmljZXMgWzE3LCAxNl0sIHdlYiBjYWNoZXMgWzddLCBhbmQgcmVsYXRpb25hbCBxdWVyeSBwcm9jZXNzb3JzIFs5XS5cIixcIkZvciBleGFtcGxlLCBbMTddIGFuZCBbMTJdIHVzZSBhbiBvcmctc3RvcmUgYW5kIGxvY2FsIHJpbmdzIHRvIGFjaGlldmUgZmF0ZSBzaGFyaW5nLCBhbmQgWzQsIDE2XSB1c2UgbmV0d29yayBjb29yZGluYXRlcyB0byBmaW5kIGNsb3NlIGNvcGllcy5cIl0sXCIxNTExMjk0MDJcIjpbXCJUaGVzZSBhcHBsaWNhdGlvbnMgaGF2ZSBzcGFubmVkIGEgc3RyaWtpbmdseSB3aWRlIHJhbmdlLCBpbmNsdWRpbmcgZmlsZSBzeXN0ZW1zIFs0LCA2LCAxMF0sIGV2ZW50IG5vdGlmaWNhdGlvbiBbMTFdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBbMl0sIGUtbWFpbCBkZWxpdmVyeSBbMTJdLCBpbmRpcmVjdGlvbiBzZXJ2aWNlcyBbMTcsIDE2XSwgd2ViIGNhY2hlcyBbN10sIGFuZCByZWxhdGlvbmFsIHF1ZXJ5IHByb2Nlc3NvcnMgWzldLlwiXSxcIjE2MzU3MzY4NlwiOltcIkEgbmFsIGFwcHJvYWNoIHRvIHJlc291cmNlIG1hbmFnZW1lbnQgaXMgdG8gY2hhcmdlIGZvciBlYWNoIHVzZSBvZiBhIHJlc291cmNlIGFzIGhhcyBiZWVuIHByZXZpb3VzbHkgcHJvcG9zZWQgWzksICAxNiBdLCBidXQgdXNpbmcgY29tcHV0YXRpb25hbCBwdXp6bGVzIGluc3RlYWQgb2YgbWljcm9wYXltZW50cyBhcyBjdXJyZW5jeS5cIl0sXCIxNDk2MTM5MzM5XCI6W1wiQSBuYWwgYXBwcm9hY2ggdG8gcmVzb3VyY2UgbWFuYWdlbWVudCBpcyB0byBjaGFyZ2UgZm9yIGVhY2ggdXNlIG9mIGEgcmVzb3VyY2UgYXMgaGFzIGJlZW4gcHJldmlvdXNseSBwcm9wb3NlZCBbIDkgLCAxNl0sIGJ1dCB1c2luZyBjb21wdXRhdGlvbmFsIHB1enpsZXMgaW5zdGVhZCBvZiBtaWNyb3BheW1lbnRzIGFzIGN1cnJlbmN5LlwiXSxcIjE1Mjg5Njg0MzVcIjpbXCJUaGVzZSBhcHBsaWNhdGlvbnMgaGF2ZSBzcGFubmVkIGEgc3RyaWtpbmdseSB3aWRlIHJhbmdlLCBpbmNsdWRpbmcgbGUgc3lzdGVtcyBbNSwgNywgMTFdLCBldmVudCBub3RpY2F0aW9uIFsxMl0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIFs0XSwgZS1tYWlsIGRlbGl2ZXJ5IFsxM10sIGluZGlyZWN0aW9uIHNlcnZpY2VzIFsgMSAsIDE3XSwgd2ViIGNhY2hlcyBbOF0sIGFuZCByZWxhdGlvbmFsIHF1ZXJ5IHByb2Nlc3NvcnMgWzEwXS5cXHUwMDFiRm9yIGV4YW1wbGUsIFsgMSBdIGFuZCBbMTNdIHVzZSBhbiBvcmctc3RvcmUgYW5kIGxvY2FsIHJpbmdzIHRvIGFjaGlldmUgZmF0ZSBzaGFyaW5nLCBhbmQgWzUsIDE3XSB1c2UgbmV0d29yayBjb29yZGluYXRlcyB0byBuZCBjbG9zZSBjb3BpZXMuXCJdLFwiMTU1NTQ2NDI5NFwiOltcIlRoZXNlIGFwcGxpY2F0aW9ucyBoYXZlIHNwYW5uZWQgYSBzdHJpa2luZ2x5IHdpZGUgcmFuZ2UsIGluY2x1ZGluZyBsZSBzeXN0ZW1zIFs1LCA3LCAxMV0sIGV2ZW50IG5vdGljYXRpb24gWzEyXSwgY29udGVudCBkaXN0cmlidXRpb24gWzRdLCBlLW1haWwgZGVsaXZlcnkgWzEzXSwgaW5kaXJlY3Rpb24gc2VydmljZXMgWzEsIDE3XSwgd2ViIGNhY2hlcyBbIDggXSwgYW5kIHJlbGF0aW9uYWwgcXVlcnkgcHJvY2Vzc29ycyBbMTBdLlwiXSxcIjE1NjY3NzcyMTBcIjpbXCJXZSBpbWFnaW5lIHVzaW5nIHNpbXBsZSByZXBsaWNhdGlvbiAoZS5nLiwgYXQgayBzdWNjZXNzb3Igbm9kZXMpIGZvciBhdmFpbGFiaWxpdHkgYW5kIGJvcnJvd2luZyBmcm9tIHRoZSBudW1lcm91cyBwcm9wb3NhbHMgaW4gdGhlIGxpdGVyYXR1cmUgZm9yIGNhY2hpbmcgYW5kIGxvYWQgYmFsYW5jaW5nIHNjaGVtZXMgWzExLCAgMTUgLCAxN10uXCJdLFwiMTU3NzkwNDQzOFwiOltcIls0LCAxMCwgMTFdKSBhcmUgYnVpbHQgdXNpbmcgYSBpYnVuZGxlZGkgbW9kZWwsIHdoZXJlIHRoZSBhcHBsaWNhdGlvbiBpcyBhYmxlIHRvIHJlYWQgdGhlIGxvY2FsIERIVCBzdGF0ZSBhbmQgcmVjZWl2ZSB1cGNhbGxzIGZyb20gdGhlIERIVCAoYXMgaW4gWyA2IF0pLCBlaXRoZXIgYnkgYmVpbmcgbGlua2VkIGludG8gdGhlIHNhbWUgcHJvY2VzcyBhcyB0aGUgREhUIGNvZGUgb3IgdGhyb3VnaCBsb2NhbCBSUENcXHUwMDFiVGhpcyBmdW5jdGlvbmFsaXR5IGlzIGVmZmVjdGl2ZWx5IHRoZSBzYW1lIGFzIHRoYXQgb2YgdGhlIGxvb2t1cCgpIGludGVyZmFjZSByc3QgcHJvcG9zZWQgaW4gdGhlIENob3JkIHBhcGVyIGFuZCBhZG9wdGVkIGJ5IHRoZSBhdXRob3JzIGluIFsgNiBdIGFzIHRoZSBLQlIgb3IgS2V5LUJhc2VkIFJvdXRpbmcgaW50ZXJmYWNlLCB3aXRoIG9uZSBpbXBvcnRhbnQgZGlmZmVyZW5jZTogb3VyIGxvb2t1cCgpIG1hcHMgYXBwbGljYXRpb24ga2V5cyB0byBhcmJpdHJhcnkgYXBwbGljYXRpb24gaG9zdHMsIHJhdGhlciB0aGFuIHRvIHRoZSBob3N0cyB0aGF0IHJ1biB0aGUgREhULlwiXSxcIjE4NjcyMjU1NTFcIjpbXCJUaGVzZSBhcHBsaWNhdGlvbnMgaGF2ZSBzcGFubmVkIGEgc3RyaWtpbmdseSB3aWRlIHJhbmdlLCBpbmNsdWRpbmcgbGUgc3lzdGVtcyBbNSwgNywgMTFdLCBldmVudCBub3RpY2F0aW9uIFsxMl0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIFs0XSwgZS1tYWlsIGRlbGl2ZXJ5IFsgMTMgXSwgaW5kaXJlY3Rpb24gc2VydmljZXMgWzEsIDE3XSwgd2ViIGNhY2hlcyBbOF0sIGFuZCByZWxhdGlvbmFsIHF1ZXJ5IHByb2Nlc3NvcnMgWzEwXS5cXHUwMDFiRm9yIGV4YW1wbGUsIFsxXSBhbmQgWyAxMyBdIHVzZSBhbiBvcmctc3RvcmUgYW5kIGxvY2FsIHJpbmdzIHRvIGFjaGlldmUgZmF0ZSBzaGFyaW5nLCBhbmQgWzUsIDE3XSB1c2UgbmV0d29yayBjb29yZGluYXRlcyB0byBuZCBjbG9zZSBjb3BpZXMuXCJdLFwiMTkzNDc1NzQyOFwiOltcIlRoZXNlIGFwcGxpY2F0aW9ucyBoYXZlIHNwYW5uZWQgYSBzdHJpa2luZ2x5IHdpZGUgcmFuZ2UsIGluY2x1ZGluZyBsZSBzeXN0ZW1zIFs1LCA3LCAxMV0sIGV2ZW50IG5vdGljYXRpb24gWyAxMiBdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBbNF0sIGUtbWFpbCBkZWxpdmVyeSBbMTNdLCBpbmRpcmVjdGlvbiBzZXJ2aWNlcyBbMSwgMTddLCB3ZWIgY2FjaGVzIFs4XSwgYW5kIHJlbGF0aW9uYWwgcXVlcnkgcHJvY2Vzc29ycyBbMTBdLlwiXSxcIjE5NzcwNDI5NzBcIjpbXCJUaGVzZSBhcHBsaWNhdGlvbnMgaGF2ZSBzcGFubmVkIGEgc3RyaWtpbmdseSB3aWRlIHJhbmdlLCBpbmNsdWRpbmcgZmlsZSBzeXN0ZW1zIFs0LCA2LCAxMF0sIGV2ZW50IG5vdGlmaWNhdGlvbiBbMTFdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBbMl0sIGUtbWFpbCBkZWxpdmVyeSBbMTJdLCBpbmRpcmVjdGlvbiBzZXJ2aWNlcyBbMTcsIDE2XSwgd2ViIGNhY2hlcyBbN10sIGFuZCByZWxhdGlvbmFsIHF1ZXJ5IHByb2Nlc3NvcnMgWzldLlwiLFwiWzIsIDksIDEwXSkgYXJlIGJ1aWx0IHVzaW5nIGEg4oCcYnVuZGxlZOKAnSBtb2RlbCwgd2hlcmUgdGhlIGFwcGxpY2F0aW9uIGlzIGFibGUgdG8gcmVhZCB0aGUgbG9jYWwgREhUIHN0YXRlIGFuZCByZWNlaXZlIHVwY2FsbHMgZnJvbSB0aGUgREhUIChhcyBpbiBbNV0pLCBlaXRoZXIgYnkgYmVpbmcgbGlua2VkIGludG8gdGhlIHNhbWUgcHJvY2VzcyBhc1wiLFwiTm90ZSBob3dldmVyLCB0aGF0IHVubGlrZSBzY2hlbWVzIGxpa2UgU2NyaWJlIFsyXSwgdGhlIGFib3ZlIHNvbHV0aW9uIG5lZWQgbm90IHJlc3VsdCBpbiB0cmVlcyBvcHRpbWl6ZWQgZm9yIGxvdyBsYXRlbmN5LlwiXSxcIjIwMDk1NzIzNjNcIjpbXCI0Tm90ZSB0aGF0IFJlRGlSIHNvbHZlcyBhIHZlcnkgZGlmZmVyZW50IHByb2JsZW0gdGhhbiBib290c3RyYXBwaW5nIG11bHRpcGxlIGFwcGxpY2F0aW9uLXNwZWNpZmljIERIVHMgZnJvbSBhIHNpbmdsZSBESFQgWzNdOyB3ZSBwcm9wb3NlIGEgc2luZ2xlIERIVCBzaGFyZWQgYnkgbXVsdGlwbGUgYXBwbGljYXRpb25zLlwiXSxcIjIxMDQyMTA4OTRcIjpbXCJUaGVzZSBhcHBsaWNhdGlvbnMgaGF2ZSBzcGFubmVkIGEgc3RyaWtpbmdseSB3aWRlIHJhbmdlLCBpbmNsdWRpbmcgbGUgc3lzdGVtcyBbNSwgNywgIDExIF0sIGV2ZW50IG5vdGljYXRpb24gWzEyXSwgY29udGVudCBkaXN0cmlidXRpb24gWzRdLCBlLW1haWwgZGVsaXZlcnkgWzEzXSwgaW5kaXJlY3Rpb24gc2VydmljZXMgWzEsIDE3XSwgd2ViIGNhY2hlcyBbOF0sIGFuZCByZWxhdGlvbmFsIHF1ZXJ5IHByb2Nlc3NvcnMgWzEwXS5cXHUwMDFiWzQsIDEwLCAgMTEgXSkgYXJlIGJ1aWx0IHVzaW5nIGEgaWJ1bmRsZWRpIG1vZGVsLCB3aGVyZSB0aGUgYXBwbGljYXRpb24gaXMgYWJsZSB0byByZWFkIHRoZSBsb2NhbCBESFQgc3RhdGUgYW5kIHJlY2VpdmUgdXBjYWxscyBmcm9tIHRoZSBESFQgKGFzIGluIFs2XSksIGVpdGhlciBieSBiZWluZyBsaW5rZWQgaW50byB0aGUgc2FtZSBwcm9jZXNzIGFzIHRoZSBESFQgY29kZSBvciB0aHJvdWdoIGxvY2FsIFJQQ1xcdTAwMWJFeGlzdGluZywgbGlicmFyeS1iYXNlZCBESFQgYXBwbGljYXRpb25zIFsgMTEgLCAxMCwgMTcsIDddIGNvLWxvY2F0ZSBhcHBsaWNhdGlvbi1zcGVjaWMgZnVuY3Rpb25hbGl0eSB3aXRoIHRoZSBESFQuXFx1MDAxYldlIGltYWdpbmUgdXNpbmcgc2ltcGxlIHJlcGxpY2F0aW9uIChlLmcuLCBhdCBrIHN1Y2Nlc3NvciBub2RlcykgZm9yIGF2YWlsYWJpbGl0eSBhbmQgYm9ycm93aW5nIGZyb20gdGhlIG51bWVyb3VzIHByb3Bvc2FscyBpbiB0aGUgbGl0ZXJhdHVyZSBmb3IgY2FjaGluZyBhbmQgbG9hZCBiYWxhbmNpbmcgc2NoZW1lcyBbIDExICwgMTUsIDE3XS5cIl0sXCIyMTIwNjI2Mjk0XCI6W1wiVGhlc2UgYXBwbGljYXRpb25zIGhhdmUgc3Bhbm5lZCBhIHN0cmlraW5nbHkgd2lkZSByYW5nZSwgaW5jbHVkaW5nIGxlIHN5c3RlbXMgWzUsIDcsIDExXSwgZXZlbnQgbm90aWNhdGlvbiBbMTJdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBbNF0sIGUtbWFpbCBkZWxpdmVyeSBbMTNdLCBpbmRpcmVjdGlvbiBzZXJ2aWNlcyBbMSwgIDE3IF0sIHdlYiBjYWNoZXMgWzhdLCBhbmQgcmVsYXRpb25hbCBxdWVyeSBwcm9jZXNzb3JzIFsxMF0uXFx1MDAxYkV4aXN0aW5nLCBsaWJyYXJ5LWJhc2VkIERIVCBhcHBsaWNhdGlvbnMgWzExLCAxMCwgIDE3ICwgN10gY28tbG9jYXRlIGFwcGxpY2F0aW9uLXNwZWNpYyBmdW5jdGlvbmFsaXR5IHdpdGggdGhlIERIVC5cXHUwMDFiRm9yIGV4YW1wbGUsIFsxXSBhbmQgWzEzXSB1c2UgYW4gb3JnLXN0b3JlIGFuZCBsb2NhbCByaW5ncyB0byBhY2hpZXZlIGZhdGUgc2hhcmluZywgYW5kIFs1LCAgMTcgXSB1c2UgbmV0d29yayBjb29yZGluYXRlcyB0byBuZCBjbG9zZSBjb3BpZXMuXFx1MDAxYldlIGltYWdpbmUgdXNpbmcgc2ltcGxlIHJlcGxpY2F0aW9uIChlLmcuLCBhdCBrIHN1Y2Nlc3NvciBub2RlcykgZm9yIGF2YWlsYWJpbGl0eSBhbmQgYm9ycm93aW5nIGZyb20gdGhlIG51bWVyb3VzIHByb3Bvc2FscyBpbiB0aGUgbGl0ZXJhdHVyZSBmb3IgY2FjaGluZyBhbmQgbG9hZCBiYWxhbmNpbmcgc2NoZW1lcyBbMTEsIDE1LCAgMTcgXS5cIl0sXCIyMTIzODIwODIwXCI6W1wiVGhlc2UgYXBwbGljYXRpb25zIGhhdmUgc3Bhbm5lZCBhIHN0cmlraW5nbHkgd2lkZSByYW5nZSwgaW5jbHVkaW5nIGxlIHN5c3RlbXMgWzUsICA3ICwgMTFdLCBldmVudCBub3RpY2F0aW9uIFsxMl0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIFs0XSwgZS1tYWlsIGRlbGl2ZXJ5IFsxM10sIGluZGlyZWN0aW9uIHNlcnZpY2VzIFsxLCAxN10sIHdlYiBjYWNoZXMgWzhdLCBhbmQgcmVsYXRpb25hbCBxdWVyeSBwcm9jZXNzb3JzIFsxMF0uXFx1MDAxYkV4aXN0aW5nLCBsaWJyYXJ5LWJhc2VkIERIVCBhcHBsaWNhdGlvbnMgWzExLCAxMCwgMTcsICA3IF0gY28tbG9jYXRlIGFwcGxpY2F0aW9uLXNwZWNpYyBmdW5jdGlvbmFsaXR5IHdpdGggdGhlIERIVC5cIl0sXCIyMTUwNjc2NTg2XCI6W1wiVGhlc2UgYXBwbGljYXRpb25zIGhhdmUgc3Bhbm5lZCBhIHN0cmlraW5nbHkgd2lkZSByYW5nZSwgaW5jbHVkaW5nIGxlIHN5c3RlbXMgWyA1ICwgNywgMTFdLCBldmVudCBub3RpY2F0aW9uIFsxMl0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIFs0XSwgZS1tYWlsIGRlbGl2ZXJ5IFsxM10sIGluZGlyZWN0aW9uIHNlcnZpY2VzIFsxLCAxN10sIHdlYiBjYWNoZXMgWzhdLCBhbmQgcmVsYXRpb25hbCBxdWVyeSBwcm9jZXNzb3JzIFsxMF0uXFx1MDAxYkZvciBleGFtcGxlLCBbMV0gYW5kIFsxM10gdXNlIGFuIG9yZy1zdG9yZSBhbmQgbG9jYWwgcmluZ3MgdG8gYWNoaWV2ZSBmYXRlIHNoYXJpbmcsIGFuZCBbIDUgLCAxN10gdXNlIG5ldHdvcmsgY29vcmRpbmF0ZXMgdG8gbmQgY2xvc2UgY29waWVzLlwiXSxcIjIxNTM3NTIwNjhcIjpbXCJUaGVzZSBhcHBsaWNhdGlvbnMgaGF2ZSBzcGFubmVkIGEgc3RyaWtpbmdseSB3aWRlIHJhbmdlLCBpbmNsdWRpbmcgbGUgc3lzdGVtcyBbNSwgNywgMTFdLCBldmVudCBub3RpY2F0aW9uIFsxMl0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIFs0XSwgZS1tYWlsIGRlbGl2ZXJ5IFsxM10sIGluZGlyZWN0aW9uIHNlcnZpY2VzIFsxLCAxN10sIHdlYiBjYWNoZXMgWzhdLCBhbmQgcmVsYXRpb25hbCBxdWVyeSBwcm9jZXNzb3JzIFsgMTAgXS5cXHUwMDFiWzQsICAxMCAsIDExXSkgYXJlIGJ1aWx0IHVzaW5nIGEgaWJ1bmRsZWRpIG1vZGVsLCB3aGVyZSB0aGUgYXBwbGljYXRpb24gaXMgYWJsZSB0byByZWFkIHRoZSBsb2NhbCBESFQgc3RhdGUgYW5kIHJlY2VpdmUgdXBjYWxscyBmcm9tIHRoZSBESFQgKGFzIGluIFs2XSksIGVpdGhlciBieSBiZWluZyBsaW5rZWQgaW50byB0aGUgc2FtZSBwcm9jZXNzIGFzIHRoZSBESFQgY29kZSBvciB0aHJvdWdoIGxvY2FsIFJQQ1xcdTAwMWJFeGlzdGluZywgbGlicmFyeS1iYXNlZCBESFQgYXBwbGljYXRpb25zIFsxMSwgIDEwICwgMTcsIDddIGNvLWxvY2F0ZSBhcHBsaWNhdGlvbi1zcGVjaWMgZnVuY3Rpb25hbGl0eSB3aXRoIHRoZSBESFQuXFx1MDAxYkxpa2V3aXNlLCB0byBleGVjdXRlIGEgam9pbiBvcGVyYXRpb24gaW4gUElFUiBbIDEwIF0sIGEgREhUIGhvc3QgaXRlcmF0ZXMgb3ZlciBhbGwgdGhlIChrZXksIHZhbHVlKSBwYWlycyBpbiBpdHMgbG9jYWwgc3RvcmUsIGFuZCByZWhhc2hlcyB0aGVtIGJ5IGEgcG9ydGlvbiBvZiB0aGVpciB2YWx1ZSBlbGRzLlwiXSxcIjIxNTU0NDQzMTNcIjpbXCJBIGhhY2tlciBjYW4gZG93bmxvYWQgdGhlIGNvZGUgZm9yIENob3JkLCBidXQgc2hlIGNhbm5vdCBydW4gdGhhdCBjb2RlIGFsb25lOyByZWNhbGwgdGhhdCBvbmx5IGEgdGlueSBmcmFjdGlvbiBvZiB3b3VsZC1iZSBkZXZlbG9wZXJzIGhhcyBhY2Nlc3MgdG8gYSB0ZXN0YmVkIGluZnJhc3RydWN0dXJlIGxpa2UgUGxhbmV0TGFiIFsxM10uXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDIxMjM0ODI0NjIsMjE1ODA0OTgyMSwyMTE5MjQ1MTA2LDIxMDQyMTA4OTQsMjE1MjIyNjc4MywyMTIzODIwODIwLDIxNTA2NzY1ODYsMTUxMTI5NDAyLDIwMDA4NzYwMjMsMjA5NjUzODQxMCwyMTU2NjQ0NTAxLDIxNjI3MzM2NzcsMTU3NzkwNDQzOCwxOTcwNTY0Nzc4LDIwMjA3NjU2NTIsMjEzMjA1MTk5OSwyMTQzMzM5ODE3LDIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDIxMjM0ODI0NjIsMjE1ODA0OTgyMSwyMTE5MjQ1MTA2LDIxMDQyMTA4OTQsMjE1MjIyNjc4MywyMTIzODIwODIwLDIxNTA2NzY1ODYsMTUxMTI5NDAyLDIwMDA4NzYwMjMsMjA5NjUzODQxMCwyMTU2NjQ0NTAxLDIxNjI3MzM2NzcsMTU3NzkwNDQzOCwxOTcwNTY0Nzc4LDIwMjA3NjU2NTIsMjEzMjA1MTk5OSwyMTQzMzM5ODE3XSxcIkFORlwiOlt7XCJGTlwiOlwiQnJhZFwiLFwiTE5cIjpcIkthcnBcIixcIlNcIjoxfSx7XCJGTlwiOlwiU3lsdmlhXCIsXCJMTlwiOlwiUmF0bmFzYW15XCIsXCJTXCI6Mn0se1wiRk5cIjpcIlNlYW4gQy5cIixcIkxOXCI6XCJSaGVhXCIsXCJTXCI6M30se1wiRk5cIjpcIlNjb3R0XCIsXCJMTlwiOlwiU2hlbmtlclwiLFwiU1wiOjR9XSxcIkJWXCI6XCJpbnRlcm5hdGlvbmFsIHdvcmtzaG9wIG9uIHBlZXIgdG8gcGVlciBzeXN0ZW1zXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIlNwcmluZ2VyXCJ9In0seyJsb2dwcm9iIjotMTguMDc5LCJrZXNFbnRpdHlJZCI6ODU5OTI3MiwiSWQiOjIxMjc1NTUxNDMsIlRpIjoiYWxnb3JpdGhtaWMgZGVzaWduIG9mIHRoZSBnbG9iZSB3aWRlIGFyZWEgbG9jYXRpb24gc2VydmljZSIsIlkiOjE5OTgsIkQiOiIxOTk4LTA1LTAxIiwiQ0MiOjY4LCJSSWQiOlsyMjYzMTI0NjA3LDE2NDQ4ODI2MzksMjA4NDA2OTU1MiwyMTA2NTI5MjMyLDIxNjQ5ODk1NzYsMjEwNjAzNTA2MSwxODI4MTUwMDI5LDE1MTA5NDA5NzksMjExNjQzNjg4NCwyMTIwNTAwMDU0LDE5OTI3NTc0MzgsMjEyMTEzNDM0MiwyMTE1MjIzOTg0LDIwMjA4NzM4NzIsMjEyMzkyMjEzMCwyNjIxNDc1MzQ4LDIxMzA0OTM0MjYsMjEyMjQxMzk5MywyMDM0NTU5NjI5LDIxMjM4Mzc5MDksMTc4MDc1NTU5LDE5NjgxODgwMDIsMTk5Njg3OTY2NiwxNTA2NTg1NTc0LDIxMjMzMDY4OTksMTUwMDc1MTk5MiwyMTA4NDc2Njk5LDE4MDQ2OTY3NjEsMjEyNDY2MzcwMiwyMTY1ODY4MDI5LDE5MTM2MjQ1NjQsMjE2NDk1MDc4MCw4MDI3NTE5MSwxMzIwMzc4MjEsMjA5NjU4MDYzNSwxNDg5ODE2MDY4XSwiQUEiOlt7IkF1TiI6Im0gciB2YW4gc3RlZW4ifSx7IkF1TiI6ImZyYW56IGogaGF1Y2sifSx7IkF1TiI6ImcgYyBiYWxsaW50aWpuIn0seyJBdU4iOiJhbmRyZXcgcyB0YW5lbmJhdW0ifV0sIkYiOlt7IkZOIjoib2JqZWN0IG9yaWVudGVkIGRlc2lnbiJ9LHsiRk4iOiJzeXN0ZW1zIGFyY2hpdGVjdHVyZSJ9LHsiRk4iOiJwb2ludGVyIn0seyJGTiI6InNlYXJjaCB0cmVlIn0seyJGTiI6ImRpc3RyaWJ1dGVkIG9iamVjdCJ9LHsiRk4iOiJzb2Z0d2FyZSBhZ2VudCJ9LHsiRk4iOiJtb2JpbGUgY29tcHV0aW5nIn0seyJGTiI6Im9iamVjdCBvcmllbnRlZCBwcm9ncmFtbWluZyJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJBbGdvcml0aG1pYyBEZXNpZ24gb2YgdGhlIEdsb2JlIFdpZGUtQXJlYSBMb2NhdGlvbiBTZXJ2aWNlXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTIyLFwiSW52ZXJ0ZWRJbmRleFwiOntcIldlXCI6WzBdLFwiZGVzY3JpYmVcIjpbMV0sXCJ0aGVcIjpbMiwyMiw5MSw5NSwxMTBdLFwiYWxnb3JpdGhtaWNcIjpbM10sXCJkZXNpZ25cIjpbNCw3Ml0sXCJvZlwiOls1LDI5LDU4LDYyLDk0LDExMl0sXCJhXCI6WzYsMjcsNzYsMTA2XSxcIndvcmxkd2lkZVwiOls3LDc3XSxcImxvY2F0aW9uXCI6WzgsNTNdLFwic2VydmljZVwiOls5LDU0XSxcImZvclwiOlsxMCw0NF0sXCJkaXN0cmlidXRlZFwiOlsxMSwxNCw3OF0sXCJvYmplY3RzLlwiOlsxMl0sXCJBXCI6WzEzXSxcIm9iamVjdFwiOlsxNV0sXCJjYW5cIjpbMTYsMTE3XSxcInJlc2lkZVwiOlsxN10sXCJhdFwiOlsxOCwyMSw4Nl0sXCJtdWx0aXBsZVwiOlsxOV0sXCJsb2NhdGlvbnNcIjpbMjBdLFwic2FtZVwiOlsyM10sXCJ0aW1lLFwiOlsyNF0sXCJhbmRcIjpbMjVdLFwib2ZmZXJzXCI6WzI2XSxcInNldFwiOlsyOCw2MV0sXCJhZGRyZXNzZXNcIjpbMzAsODNdLFwidG9cIjpbMzEsMzUsMTA1XSxcImFsbG93XCI6WzMyXSxcImNsaWVudFwiOlszM10sXCJwcm9jZXNzZXNcIjpbMzRdLFwiY29udGFjdFwiOlszNiw2M10sXCJpdC5cIjpbMzddLFwiT2JqZWN0c1wiOlszOF0sXCJtYXlcIjpbMzldLFwiYmVcIjpbNDAsMTE4XSxcImhpZ2hseVwiOls0MSwxMjBdLFwibW9iaWxlXCI6WzQyXSxcImxpa2UsXCI6WzQzXSxcImV4YW1wbGUsXCI6WzQ1XSxcInNvZnR3YXJlXCI6WzQ2XSxcImFnZW50c1wiOls0N10sXCJvclwiOls0OF0sXCJXZWJcIjpbNDldLFwiYXBwbGV0cy5cIjpbNTBdLFwiVGhlXCI6WzUxXSxcInByb3Bvc2VkXCI6WzUyXSxcInN1cHBvcnRzXCI6WzU1XSxcInJlZ3VsYXJcIjpbNTZdLFwidXBkYXRlc1wiOls1N10sXCJhblwiOls1OSw5OV0sXCJvYmplY3Qnc1wiOls2MCwxMDBdLFwiYWRkcmVzc2VzLFwiOls2NF0sXCJhc1wiOls2NSw2N10sXCJ3ZWxsXCI6WzY2XSxcImVmZmljaWVudFwiOls2OF0sXCJsb29rLXVwXCI6WzY5LDExNV0sXCJvcGVyYXRpb25zLlwiOls3MF0sXCJPdXJcIjpbNzFdLFwiaXNcIjpbNzNdLFwiYmFzZWRcIjpbNzRdLFwib25cIjpbNzUsOTBdLFwic2VhcmNoXCI6Wzc5XSxcInRyZWVcIjpbODBdLFwiaW5cIjpbODFdLFwid2hpY2hcIjpbODJdLFwiYXJlXCI6Wzg0XSxcInN0b3JlZFwiOls4NV0sXCJkaWZmZXJlbnRcIjpbODddLFwibGV2ZWxzLFwiOls4OF0sXCJkZXBlbmRpbmdcIjpbODldLFwibWlncmF0aW9uXCI6WzkyXSxcInBhdHRlcm5cIjpbOTNdLFwib2JqZWN0LlwiOls5Nl0sXCJCeVwiOls5N10sXCJleHBsb2l0aW5nXCI6Wzk4XSxcInJlbGF0aXZlXCI6WzEwMV0sXCJzdGFiaWxpdHlcIjpbMTAyXSxcIndpdGhcIjpbMTAzLDEwOV0sXCJyZXNwZWN0XCI6WzEwNF0sXCJyZWdpb24sXCI6WzEwN10sXCJjb21iaW5lZFwiOlsxMDhdLFwidXNlXCI6WzExMV0sXCJwb2ludGVyXCI6WzExM10sXCJjYWNoZXMsXCI6WzExNF0sXCJvcGVyYXRpb25zXCI6WzExNl0sXCJtYWRlXCI6WzExOV0sXCJlZmZpY2llbnQuXCI6WzEyMV19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy12cy5pbmZvcm1hdGlrLnVuaS11bG0uZGUvYmliLzE5OTgvYWxnb3JpdGhtaWMtZGVzaWduLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbWVtYmVycy5jaGVsbG8ubmwvfmJhbGxpbnR5L3B1YmxpY2F0aW9ucy9jb21wam91cm5hbC45OC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2RhcmUudWJ2dS52dS5ubC9iaXRzdHJlYW0vaGFuZGxlLzE4NzEvMTI4MTQvY29tcGpvdXJuYWwuOTgucGRmO3NlcXVlbmNlPTFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2NqL2NqNDEuaHRtbCNTdGVlbkhCVDk4XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3c0LmluZm9ybWF0aWsudW5pLWVybGFuZ2VuLmRlL35memhhdWNrL1B1Yi9Eb2MvMTk5OC1jb21wam91ci5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cubmFyY2lzLm5sL3B1YmxpY2F0aW9uL1JlY29yZElEL29haSUzQWRhcmUudWJ2dS52dS5ubCUzQTE4NzElMkYxMjgxNFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMDkzL2NvbWpubC80MS41LjI5N1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2FjYWRlbWljLm91cC5jb20vY29tam5sL2FydGljbGUtbG9va3VwL2RvaS8xMC4xMDkzL2NvbWpubC80MS41LjI5N1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGFyZS51YnZ1LnZ1Lm5sL2hhbmRsZS8xODcxLzEyODE0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vcmVzZWFyY2gudnUubmwvZW4vcHVibGljYXRpb25zL2FsZ29yaXRobWljLWRlc2lnbi1vZi10aGUtZ2xvYmUtd2lkZS1hcmVhLWxvY2F0aW9uLXNlcnZpY2VcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RhcmUudWJ2dS52dS5ubC9iaXRzdHJlYW0vMTg3MS8xMjgxNC8xL2NvbXBqb3VybmFsLjk4LnBkZlwifV0sXCJWRk5cIjpcIlRoZSBDb21wdXRlciBKb3VybmFsXCIsXCJWXCI6NDEsXCJJXCI6NSxcIkZQXCI6Mjk3LFwiTFBcIjozMTAsXCJET0lcIjpcIjEwLjEwOTMvY29tam5sLzQxLjUuMjk3XCIsXCJDQ1wiOntcIjgwMjc1MTkxXCI6W1wiNTAwIERpcmVjdG9yeSBTZXJ2aWNlIFsxM10uXCJdLFwiMTMyMDM3ODIxXCI6W1wiV2UgaGF2ZSByZWNlbnRseSBjb21wbGV0ZWQgdGhlIGRlc2lnbiBvZiBzdWNoIGEgZmFjaWxpdHksIHdoaWNoIHdlIGNhbGwgYSBsb2NhdGlvbiBzZXJ2aWNlLCBhcyBwYXJ0IG9mIHRoZSBHbG9iZSBwcm9qZWN0IFsxNSwgMTZdLlwiLFwiQSBjb250YWN0IGFkZHJlc3MgZGVzY3JpYmVzIHdoZXJlIGFuZCBob3cgYW4gb2JqZWN0IGNhbiBiZSByZWFjaGVkIFsxNV0uXCJdLFwiMTQ4OTgxNjA2OFwiOltcIkhvdyB0aGVzZSBzZW1hbnRpY3MgYXJlIGltcGxlbWVudGVkIGlzIGRlc2NyaWJlZCBpbiBbMjFdLlwiXSxcIjE1MDA3NTE5OTJcIjpbXCJXZSBoYXZlIHJlY2VudGx5IGNvbXBsZXRlZCB0aGUgZGVzaWduIG9mIHN1Y2ggYSBmYWNpbGl0eSwgd2hpY2ggd2UgY2FsbCBhIGxvY2F0aW9uIHNlcnZpY2UsIGFzIHBhcnQgb2YgdGhlIEdsb2JlIHByb2plY3QgWzE1LCAgMTYgXS4xIFRoZSBHbG9iZSBsb2NhdGlvbiBzZXJ2aWNlIGlzIGRlc2lnbmVkXCJdLFwiMTUwNjU4NTU3NFwiOltcIkluIHRoaXMgc2Vuc2UsIHZpZXcgc2VyaWVzIGFyZSBjb21wYXJhYmxlIHRvIHNlbmRlcmJhc2VkIG1lc3NhZ2UgbG9nZ2luZyB1c2VkIGZvciByZWNvdmVyeSBmcm9tIG5vZGUgYW5kIG5ldHdvcmsgZmFpbHVyZXMgYXMgZXhwbGFpbmVkIGluIFsyOV0uXCJdLFwiMTUxMDk0MDk3OVwiOltcIls4XS5cIl0sXCIxNjQ0ODgyNjM5XCI6W1wiWzhdLiBGaW5hbGx5LCB3aXRoIHRoZSBpbnRyb2R1Y3Rpb24gb2YgSmF2YSwgbW9iaWxlIGNvZGUgd2lsbCBmb3JtIGFuIGltcG9ydGFudCBjb21wb25lbnQgb2YgbWFueSBmdXR1cmUgV2ViLWJhc2VkIGFwcGxpY2F0aW9ucyBbIDkgLCAxMF0uXCJdLFwiMTgwNDY5Njc2MVwiOltcIkEgc2VlbWluZ2x5IHByb21pc2luZyBhcHByb2FjaCB0aGF0IGhhcyBiZWVuIGFkdm9jYXRlZCBmb3IgbGFyZ2Utc2NhbGUgc3lzdGVtcyBhcmUgU1NQIGNoYWlucyBbIDMyIF0uXCJdLFwiMTgyODE1MDAyOVwiOltcIlN1Y2ggZmFjaWxpdGllcyBhcmUgbm9ybWFsbHkgb2ZmZXJlZCBieSB3aWRlLWFyZWEgbmFtaW5nIHN5c3RlbXMgc3VjaCBhcyB0aGUgSW50ZXJuZXTigJlzIERvbWFpbiBOYW1lIFN5c3RlbSAoRE5TKSBbOV0sIERFQ+KAmXMgR2xvYmFsIE5hbWUgU2VydmljZSAoR05TKSBbMTBdLCBhbmQgdGhlIFguXCIsXCJGb3IgZXhhbXBsZSwgYmVjYXVzZSBvYmplY3QgaGFuZGxlcyBkbyBub3QgY2hhbmdlLCBhbiBpbXBsZW1lbnRhdGlvbiBjYW4gbWFrZSBlZmZlY3RpdmUgdXNlIG9mIGNhY2hpbmcgbmFtZXRvLWhhbmRsZSBiaW5kaW5ncywgYW5hbG9nb3VzIHRvIHRoZSBhcHByb2FjaCBmb2xsb3dlZCBpbiBETlMgWzldLlwiXSxcIjE5MTM2MjQ1NjRcIjpbXCJBIFNHVUlEIGlzIGEgdHJ1ZSBvYmplY3QgaWRlbnRpZmllciBbMTldOlwiXSxcIjE5NjgxODgwMDJcIjpbXCJbMzBdIHByb3Bvc2UgdG8gc2VsZWN0aXZlbHkgcmVwbGljYXRlIHVzZXIgcHJvZmlsZXMuXCJdLFwiMTk5Mjc1NzQzOFwiOltcIkFwcGxpY2F0aW9ucyBtdXN0IHRoZXJlZm9yZSB0YWtlIGludG8gYWNjb3VudCB0aGF0IGEgdXNlciB3aWxsIGhhdmUgdG8gYmUgbG9jYXRlZCBmaXJzdCBpbiBvcmRlciB0byBkZWxpdmVyIGFueSBtZXNzYWdlcyBbMSwgMl0uXCJdLFwiMTk5Njg3OTY2NlwiOltcIkF3ZXJidWNoIGFuZCBQZWxlZyBbMjddIHByb3Bvc2UgYSBzb2x1dGlvbiBpbiB3aGljaCBhIG1vdmluZyBvYmplY3QgbGVhdmVzIGEgZm9yd2FyZGluZyBwb2ludGVyIHdoaWNoIGlzIHJlbW92ZWQgb25seSBhZnRlciBhIGNvbnNpZGVyYWJsZSBkaXN0YW5jZSBoYXMgYmVlbiB0cmF2ZWxlZC5cIl0sXCIyMDIwODczODcyXCI6W1wiQW4gb3ZlcnZpZXcgb2Ygb3VyIGFwcHJvYWNoIGNhbiBhbHNvIGJlIGZvdW5kIGluIFsxN10uXCJdLFwiMjAzNDU1OTYyOVwiOltcIkFub3RoZXIgZXhhbXBsZSBvZiBzb2Z0d2FyZSBtb2JpbGl0eSBpcyB0aGUgYWN0aXZlIHRyYW5zZmVyIG9mIFdlYiBwYWdlcyB0byByZXBsaWNhdGlvbiBzZXJ2ZXJzIGluIHRoZSBwcm94aW1pdHkgb2YgY2xpZW50cyBbNiwgN10uXCJdLFwiMjA4NDA2OTU1MlwiOltcIkZvciBleGFtcGxlLCB0byBzdXBwb3J0IHViaXF1aXRvdXMgY29tcHV0aW5nLCBpdCB3aWxsIGJlIG5lY2Vzc2FyeSB0byBtb3ZlIGEgdXNlcuKAmXMgcGVyc29uYWwgZW52aXJvbm1lbnQgZnJvbSBvbmUgbG9jYXRpb24gdG8gYW5vdGhlciBbNV0uXCJdLFwiMjA5NjU4MDYzNVwiOltcIkxpa2V3aXNlLCB0aGUgbW9iaWxlIHVzZXIgd2lsbCBwb3NzaWJseSBhbHNvIGhhdmUgdG8gZmluZCBsb2NhbCwgbm9ubW9iaWxlIHJlc291cmNlcyBhdCB0aGUgbG9jYXRpb24gaGUgb3Igc2hlIGlzIGN1cnJlbnRseSByZXNpZGluZyAoZS5nLiwgYSBsb2NhbCBsYXNlciBwcmludGVyKSBbIDIgXS5cIl0sXCIyMTA2MDM1MDYxXCI6W1wiUmVtb3RlIEludm9jYXRpb25zLiBPdXIgYWxnb3JpdGhtcyBhcmUgYmFzZWQgb24gYW4gUlBDIG1lY2hhbmlzbSBbIDE3IF0sIGJ5IHdoaWNoIGEgbm9kZSBpbnZva2VzIGFuIG9wZXJhdGlvbiBhdCBpdHMgcGFyZW50LCBhbmQgc3Vic2VxdWVudGx5IGJsb2NrcyB1bnRpbCBhIHJlcGx5IGlzIHJlY2VpdmVkLlwiXSxcIjIxMDY1MjkyMzJcIjpbXCJbNl0uIEZpbmFsbHksIHdpdGggdGhlIGludHJvZHVjdGlvbiBvZiBKYXZhLCBtb2JpbGUgY29kZSB3aWxsIGZvcm0gYW4gaW1wb3J0YW50IGNvbXBvbmVudCBvZiBtYW55IGZ1dHVyZSBXZWItYmFzZWQgYXBwbGljYXRpb25zIFsgNyAsIDhdLlwiXSxcIjIxMDg0NzY2OTlcIjpbXCJbMjldLlwiXSxcIjIxMTUyMjM5ODRcIjpbXCJPdXIgbWVjaGFuaXNtIHJlc2VtYmxlcyBxdWV1ZWQgUlBDcyBhcyB1c2VkIGluIHRoZSBSb3ZlciB0b29sa2l0IFszMV0sIGV4Y2VwdCB0aGF0IHdlIG1haW50YWluIHRoZSBvcmRlcmluZyBvZiBpbnZvY2F0aW9ucy5cIl0sXCIyMTE2NDM2ODg0XCI6W1wiQXBwbGljYXRpb25zIG11c3QgdGhlcmVmb3JlIHRha2UgaW50byBhY2NvdW50IHRoYXQgYSB1c2VyIHdpbGwgaGF2ZSB0byBiZSBsb2NhdGVkIGZpcnN0IGluIG9yZGVyIHRvIGRlbGl2ZXIgYW55IG1lc3NhZ2VzIFsxXS5cIl0sXCIyMTIwNTAwMDU0XCI6W1wiQW5vdGhlciBleGFtcGxlIG9mIHNvZnR3YXJlIG1vYmlsaXR5IGlzIHRoZSBhY3RpdmUgdHJhbnNmZXIgb2YgV2ViIHBhZ2VzIHRvIHJlcGxpY2F0aW9uIHNlcnZlcnMgaW4gdGhlIHByb3hpbWl0eSBvZiBjbGllbnRzIFs2LCA3XS5cIl0sXCIyMTIxMTM0MzQyXCI6W1wiSW4gRW1lcmFsZCwgbW9iaWxlIG9iamVjdHMgYXJlIHRyYWNrZWQgdGhyb3VnaCBjaGFpbnMgb2YgZm9yd2FyZGluZyBwb2ludGVycywgY29tYmluZWQgd2l0aCB0ZWNobmlxdWVzIGZvciBzaG9ydGVuaW5nIGxvbmcgY2hhaW5zLCBhbmQgYSBicm9hZGNhc3QgZmFjaWxpdHkgd2hlbiBhbGwgZWxzZSBmYWlscyBbMzNdLlwiXSxcIjIxMjI0MTM5OTNcIjpbXCJBIHN0cmFpZ2h0Zm9yd2FyZCBzb2x1dGlvbiB3aXRob3V0IGFueSBjYWNoaW5nIGZhY2lsaXRpZXMgYW5kIGluIHdoaWNoIGFkZHJlc3NlcyBhcmUgYWx3YXlzIHN0b3JlZCBpbiBsZWFmIG5vZGVzIGlzIGRlc2NyaWJlZCBpbiBbMjZdLlwiXSxcIjIxMjMzMDY4OTlcIjpbXCJbNl0uIEZpbmFsbHksIHdpdGggdGhlIGludHJvZHVjdGlvbiBvZiBKYXZhLCBtb2JpbGUgY29kZSB3aWxsIGZvcm0gYW4gaW1wb3J0YW50IGNvbXBvbmVudCBvZiBtYW55IGZ1dHVyZSBXZWItYmFzZWQgYXBwbGljYXRpb25zIFs3LCAgOCBdLlwiXSxcIjIxMjM4Mzc5MDlcIjpbXCJTZWNvbmQsIG1vc3QgbmFtaW5nIHN5c3RlbXMgZGlzdHJpYnV0ZSB0aGUgbmFtZSBzcGFjZSBhY3Jvc3MgZGlmZmVyZW50IGdsb2JhbGx5IGRpc3RyaWJ1dGVkIG5hbWluZyBhdXRob3JpdGllcywgYW5kIHN1YnNlcXVlbnRseSB1c2UgbG9jYXRpb25kZXBlbmRlbnQgbmFtZXMgWzEyXS5cIl0sXCIyMTIzOTIyMTMwXCI6W1wiTmFtaW5nIHNlcnZpY2VzIGNhbiBiZSB1c2VkIGZvciBmaW5kaW5nIGluZm9ybWF0aW9uIGJhc2VkIG9uIHRoZSBtZWFuaW5nIG9mIGEgbmFtZSwgYXMgaXMgb2Z0ZW4gdXNlZCBmb3IgSW50ZXJuZXQgcmVzb3VyY2UgZGlzY292ZXJ5IHNlcnZpY2VzIFsyM10uXCJdLFwiMjEyNDY2MzcwMlwiOltcIkFuIGFsdGVybmF0aXZlIGFwcHJvYWNoIHRvIGhhbmRsZSB3b3JsZHdpZGUgZGlzdHJpYnV0ZWQgc3lzdGVtcyBpcyB0aGUgbG9jYXRpb24gaW5kZXBlbmRlbnQgaW52b2NhdGlvbiAoTElJKSBbMzFdLlwiXSxcIjIxMzA0OTM0MjZcIjpbXCJTdWNoIGZhY2lsaXRpZXMgYXJlIG5vcm1hbGx5IG9mZmVyZWQgYnkgd2lkZS1hcmVhIG5hbWluZyBzeXN0ZW1zIHN1Y2ggYXMgdGhlIEludGVybmV04oCZcyBEb21haW4gTmFtZSBTeXN0ZW0gKEROUykgWzldLCBERUPigJlzIEdsb2JhbCBOYW1lIFNlcnZpY2UgKEdOUykgWzEwXSwgYW5kIHRoZSBYLlwiXSxcIjIxNjQ5NTA3ODBcIjpbXCJUaGUgcHJpbmNpcGxlIGhhcyBiZWVuIGFwcGxpZWQgdG8gYSBzeXN0ZW0gY2FsbGVkIFNoYWRvd3MgWzMzXS5cIl0sXCIyMTY0OTg5NTc2XCI6W1wiVG8gYXNzZXNzIHRoZSBjb3JyZWN0bmVzcyBvZiBvdXIgYWxnb3JpdGhtcywgd2UgaW5pdGlhbGx5IGV4cHJlc3NlZCBvdXIgdXBkYXRlIGFuZCBsb29rLXVwIG9wZXJhdGlvbnMgaW4gdGhlIHByb3RvY29sIHZlcmlmaWNhdGlvbiBsYW5ndWFnZSBQcm9tZWxhIFsyMl0sIGFuZCBjb25kdWN0ZWQgYSBudW1iZXIgb2Ygc3RhdGUgc3BhY2Ugc2VhcmNoZXMuXCJdLFwiMjE2NTg2ODAyOVwiOltcIkphaW4gWzI4XSB1c2VzIGFuIGFwcHJvYWNoIHRvIGNhY2hpbmcgdGhhdCBpcyBzb21ld2hhdCBzaW1pbGFyIHRvIG91cnMuXCJdLFwiMjI2MzEyNDYwN1wiOltcIlRoaXMgaXMsIGZvciBleGFtcGxlLCB0aGUgd2F5IHRoYXQgbW9iaWxlIElQIHdvcmtzIFsyNV0uXCJdLFwiMjYyMTQ3NTM0OFwiOltcIkl0IGNvbnRhaW5zIGEgU2VydmljZS1pbmRlcGVuZGVudCBHbG9iYWwgVW5pcXVlIElkZW50aWZpZXIgKFNHVUlEKSB3aGljaCBpcyBzaW1pbGFyIHRvIGEgVW5pdmVyc2FsIFVuaXF1ZSBJZGVudGlmaWVyIGluIERDRSBbMThdLlwiXX0sXCJQUlwiOlsyMDIwODczODcyLDIwOTUwOTAwOTksMjEyMTEzNDM0MiwxOTk2ODc5NjY2LDIxNTgwNDk4MjEsMjAwMDg3NjAyMywyMTE4NDI4MTkzLDYxODQ2ODM4NCwxNzI1NDE0MjA2LDE4MjgxNTAwMjksMjA5ODQ2NTM1MiwyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMTUxMTQ0MjM2NywxNTE1NTI0NDcxLDE1Mjc5NjE2ODMsMTY1MDY3NTUwOSwyMTA0MjEwODk0LDIxMzA0OTM0MjYsMjEzMjY2MDc1OCwyMDIwODczODcyLDIwOTUwOTAwOTksMjEyMTEzNDM0MiwxOTk2ODc5NjY2LDIxNTgwNDk4MjEsMjAwMDg3NjAyMywyMTE4NDI4MTkzLDYxODQ2ODM4NCwxNzI1NDE0MjA2LDE4MjgxNTAwMjksMjA5ODQ2NTM1MiwyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMTUxMTQ0MjM2NywxNTE1NTI0NDcxLDE1Mjc5NjE2ODMsMTY1MDY3NTUwOSwyMTA0MjEwODk0LDIxMzA0OTM0MjYsMjEzMjY2MDc1OF0sXCJBTkZcIjpbe1wiRk5cIjpcIk0uUi4gdmFuXCIsXCJMTlwiOlwiU3RlZW5cIixcIlNcIjoxfSx7XCJGTlwiOlwiRi5KLlwiLFwiTE5cIjpcIkhhdWNrXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkcuXCIsXCJMTlwiOlwiQmFsbGludGlqblwiLFwiU1wiOjN9LHtcIkZOXCI6XCJBLlMuXCIsXCJMTlwiOlwiVGFuZW5iYXVtXCIsXCJTXCI6NH1dLFwiQlZcIjpcIlRoZSBDb21wdXRlciBKb3VybmFsXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIk94Zm9yZCBVbml2ZXJzaXR5IFByZXNzXCJ9In0seyJsb2dwcm9iIjotMTguMTAxLCJrZXNFbnRpdHlJZCI6ODc4MjQyOCwiSWQiOjIwNTIyMDc4MzQsIlRpIjoidW5pdmVyc2FsIGNsYXNzZXMgb2YgaGFzaCBmdW5jdGlvbnMiLCJZIjoxOTc5LCJEIjoiMTk3OS0wNC0wMSIsIkNDIjozMDQyLCJSSWQiOlsxNjU1OTkwNDMxLDI3NTI4NTM4MzUsMTk2NDA1MzI2NiwxNjAwNzk1ODUwLDIwODc5NjYzNDAsMjA3MDQ4ODQxNiwyMDI3MDg1NTY2LDE1Njg3NTQxODUsMjExNDE0MTExMCwxOTcwODI0NTc0XSwiQUEiOlt7IkF1TiI6ImogbGF3cmVuY2UgY2FydGVyIn0seyJBdU4iOiJtYXJrIG4gd2VnbWFuIn1dLCJGIjpbeyJGTiI6InByaW1hcnkgY2x1c3RlcmluZyJ9LHsiRk4iOiJzd2lmZnQifSx7IkZOIjoiaGFzaCBidXN0ZXIifSx7IkZOIjoicm9sbGluZyBoYXNoIn0seyJGTiI6Im1kYyAyIn0seyJGTiI6ImRvdWJsZSBoYXNoaW5nIn0seyJGTiI6Imhhc2ggY2hhaW4ifSx7IkZOIjoiaGFzaCBmdW5jdGlvbiJ9LHsiRk4iOiJkaXNjcmV0ZSBtYXRoZW1hdGljcyJ9LHsiRk4iOiJtYXRoZW1hdGljcyJ9XSwiRSI6IntcIkROXCI6XCJVbml2ZXJzYWwgY2xhc3NlcyBvZiBoYXNoIGZ1bmN0aW9uc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjEzOCxcIkludmVydGVkSW5kZXhcIjp7XCJBYnN0cmFjdFwiOlswXSxcIlRoaXNcIjpbM10sXCJwYXBlclwiOls0XSxcImdpdmVzXCI6WzVdLFwiYW5cIjpbNl0sXCJpbnB1dFwiOls4LDc5LDEyN10sXCJpbmRlcGVuZGVudFwiOls5XSxcImF2ZXJhZ2VcIjpbMTFdLFwibGluZWFyXCI6WzEyLDU4XSxcInRpbWVcIjpbMTMsNDRdLFwiYWxnb3JpdGhtXCI6WzE0LDIyLDc2XSxcImZvclwiOlsxNSw3Nyw4N10sXCJzdG9yYWdlXCI6WzE2LDExN10sXCJhbmRcIjpbMTcsNTQsMTE4XSxcInJldHJpZXZhbFwiOlsxOCwxMTldLFwib25cIjpbMTksMTMyXSxcImtleXMuXCI6WzIwXSxcIlRoZVwiOlsyMSw2NSwxMTBdLFwibWFrZXNcIjpbMjNdLFwiYVwiOlsyNCwzMV0sXCJyYW5kb21cIjpbMjVdLFwiY2hvaWNlXCI6WzI2XSxcIm9mXCI6WzI3LDM0LDQwLDYyLDY3LDEwMSwxMTYsMTI1LDEzNV0sXCJoYXNoXCI6WzI4LDM1LDkwLDEwMl0sXCJmdW5jdGlvblwiOlsyOSw5MV0sXCJmcm9tXCI6WzMwXSxcInN1aXRhYmxlXCI6WzMyLDk5XSxcImNsYXNzXCI6WzMzXSxcImZ1bmN0aW9ucy5cIjpbMzZdLFwiR2l2ZW5cIjpbMzddLFwiYW55XCI6WzM4LDc4LDg4XSxcInNlcXVlbmNlXCI6WzM5XSxcImlucHV0c1wiOls0MV0sXCJ0aGVcIjpbNDIsNTAsNjAsNjMsNzAsNzUsODQsMTE0LDEyMywxMjYsMTMzXSxcImV4cGVjdGVkXCI6WzQzXSxcIihhdmVyYWdpbmdcIjpbNDVdLFwib3ZlclwiOls0Nl0sXCJhbGxcIjpbNDddLFwiZnVuY3Rpb25zXCI6WzQ4LDEwM10sXCJpblwiOls0OSw1OV0sXCJjbGFzcylcIjpbNTFdLFwidG9cIjpbNTIsNjksODMsMTEyXSxcInN0b3JlXCI6WzUzXSxcInJldHJpZXZlXCI6WzU1XSxcImVsZW1lbnRzXCI6WzU2XSxcImlzXCI6WzU3LDgwXSxcImxlbmd0aFwiOls2MV0sXCJzZXF1ZW5jZS5cIjpbNjRdLFwibnVtYmVyXCI6WzY2XSxcInJlZmVyZW5jZXNcIjpbNjhdLFwiZGF0YVwiOls3MV0sXCJiYXNlXCI6WzcyXSxcInJlcXVpcmVkXCI6WzczXSxcImJ5XCI6Wzc0XSxcImV4dHJlbWVseVwiOls4MV0sXCJjbG9zZVwiOls4Ml0sXCJ0aGVvcmV0aWNhbFwiOls4NV0sXCJtaW5pbXVtXCI6Wzg2XSxcInBvc3NpYmxlXCI6Wzg5XSxcIndpdGhcIjpbOTJdLFwicmFuZG9tbHlcIjpbOTNdLFwiZGlzdHJpYnV0ZWRcIjpbOTRdLFwiaW5wdXRzLlwiOls5NV0sXCJXZVwiOls5Nl0sXCJwcmVzZW50XCI6Wzk3XSxcInRocmVlXCI6Wzk4XSxcImNsYXNzZXNcIjpbMTAwXSxcIndoaWNoXCI6WzEwNF0sXCJhbHNvXCI6WzEwNV0sXCJjYW5cIjpbMTA2XSxcImJlXCI6WzEwN10sXCJldmFsdWF0ZWRcIjpbMTA4XSxcInJhcGlkbHkuXCI6WzEwOV0sXCJhYmlsaXR5XCI6WzExMV0sXCJhbmFseXplXCI6WzExM10sXCJjb3N0XCI6WzExNV0sXCJ3aXRob3V0XCI6WzEyMF0sXCJ3b3JyeWluZ1wiOlsxMjFdLFwiYWJvdXRcIjpbMTIyXSxcImRpc3RyaWJ1dGlvblwiOlsxMjRdLFwiYWxsb3dzXCI6WzEyOF0sXCJhc1wiOlsxMjldLFwiY29yb2xsYXJpZXNcIjpbMTMwXSxcImltcHJvdmVtZW50c1wiOlsxMzFdLFwiYm91bmRzXCI6WzEzNF0sXCJzZXZlcmFsXCI6WzEzNl0sXCJhbGdvcml0aG1zLlwiOlsxMzddfX0sXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LnNjaWVuY2VkaXJlY3QuY29tL3NjaWVuY2UvYXJ0aWNsZS9waWkvMDAyMjAwMDA3OTkwMDQ0OFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJscC51bmktdHJpZXIuZGUvZGIvam91cm5hbHMvamNzcy9qY3NzMTguaHRtbCNDYXJ0ZXJXNzlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kub3JnLzEwLjEwMTYvMDAyMi0wMDAwKDc5KTkwMDQ0LThcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpLzAwMjIwMDAwNzk5MDA0NDhcIn1dLFwiVkZOXCI6XCJKb3VybmFsIG9mIENvbXB1dGVyIGFuZCBTeXN0ZW0gU2NpZW5jZXNcIixcIlZcIjoxOCxcIklcIjoyLFwiRlBcIjoxNDMsXCJMUFwiOjE1NCxcIkRPSVwiOlwiMTAuMTAxNi8wMDIyLTAwMDAoNzkpOTAwNDQtOFwiLFwiUFJcIjpbMTk4NTYyMzAwOSwyMTU0MzAwMjc4LDE5ODE2NzA3MjksMjE2NTYyMTUyMywxNTExMTg2MjM4LDIwMTU4ODA1OTAsMjAxNTE3OTEyNiwyMTIzODQ1Mzg0LDIxNTYxODY4NDksMjAwNzY2MTEzNCwxNTc4NjI3NDU5LDIwNDM3Njk5NjEsMjEwNjgzMzkxOCwyNzUyODg1NDkyLDIwNjQ0MjM3ODcsMjEwOTM5NDkzMiwxOTk2MzYwNDA1LDIxNDQwMDc2NTcsMjA2MDQ3NDE1MywyMTA4Nzc3ODY0LDE5ODU2MjMwMDksMjE1NDMwMDI3OCwxOTgxNjcwNzI5LDIxNjU2MjE1MjMsMTUxMTE4NjIzOCwyMDE1ODgwNTkwLDIwMTUxNzkxMjYsMjEyMzg0NTM4NCwyMTU2MTg2ODQ5LDIwMDc2NjExMzQsMTU3ODYyNzQ1OSwyMDQzNzY5OTYxLDIxMDY4MzM5MTgsMjc1Mjg4NTQ5MiwyMDY0NDIzNzg3LDIxMDkzOTQ5MzIsMTk5NjM2MDQwNSwyMTQ0MDA3NjU3LDIwNjA0NzQxNTMsMjEwODc3Nzg2NF0sXCJBTkZcIjpbe1wiRk5cIjpcIkouTGF3cmVuY2VcIixcIkxOXCI6XCJDYXJ0ZXJcIixcIlNcIjoxfSx7XCJGTlwiOlwiTWFyayBOLlwiLFwiTE5cIjpcIldlZ21hblwiLFwiU1wiOjJ9XSxcIkJWXCI6XCJKb3VybmFsIG9mIENvbXB1dGVyIGFuZCBTeXN0ZW0gU2NpZW5jZXNcIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiQWNhZGVtaWMgUHJlc3NcIn0ifSx7ImxvZ3Byb2IiOi0xOC4xNjQsImtlc0VudGl0eUlkIjo5MzU1MzMyLCJJZCI6MjE3MDc1NjAyOCwiVGkiOiJ0b3dhcmRzIGdsb2JhbCBuZXR3b3JrIHBvc2l0aW9uaW5nIiwiWSI6MjAwMSwiRCI6IjIwMDEtMTEtMDEiLCJDQyI6MTg4LCJSSWQiOlsyMDAwMjYxOTExLDIxNzEwNzQ5ODBdLCJBQSI6W3siQXVOIjoidCBzIGV1Z2VuZSBuZyJ9LHsiQXVOIjoiaHVpIHpoYW5nIn1dLCJGIjpbeyJGTiI6Imdsb2JhbCBuZXR3b3JrIHBvc2l0aW9uaW5nIn0seyJGTiI6Im5ldHdvcmsgbWFwcGluZyJ9LHsiRk4iOiJ0cmFjZXJvdXRlIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJUb3dhcmRzIGdsb2JhbCBuZXR3b3JrIHBvc2l0aW9uaW5nXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6NjEsXCJJbnZlcnRlZEluZGV4XCI6e1wiV2VcIjpbMF0sXCJwcm9wb3NlXCI6WzFdLFwiYVwiOlsyLDIxXSxcIm5ld1wiOlszXSxcImFwcHJvYWNoXCI6WzQsMTZdLFwidG9cIjpbNSwyOV0sXCJwcmVkaWN0XCI6WzYsNTZdLFwiSW50ZXJuZXRcIjpbNywxOSw0MCw1OF0sXCJuZXR3b3JrXCI6WzgsNTldLFwiZGlzdGFuY2VcIjpbOV0sXCJjYWxsZWRcIjpbMTBdLFwiR2xvYmFsXCI6WzExXSxcIk5ldHdvcmtcIjpbMTJdLFwiUG9zaXRpb25pbmdcIjpbMTNdLFwiKEdOUCkuXCI6WzE0XSxcIlRoaXNcIjpbMTVdLFwibW9kZWxzXCI6WzE3XSxcInRoZVwiOlsxOCwzMSwzNiw0NSw1MCw1N10sXCJhc1wiOlsyMF0sXCJnZW9tZXRyaWNcIjpbMjIsMjcsNDZdLFwic3BhY2VcIjpbMjNdLFwiYW5kXCI6WzI0XSxcImRpc3RyaWJ1dGVkbHlcIjpbMjVdLFwiY29tcHV0ZXNcIjpbMjZdLFwiY29vcmRpbmF0ZXNcIjpbMjgsNTNdLFwiY2hhcmFjdGVyaXplXCI6WzMwXSxcInBvc2l0aW9uc1wiOlszMl0sXCJvZlwiOlszM10sXCJob3N0c1wiOlszNCw1Ml0sXCJpblwiOlszNV0sXCJJbnRlcm5ldC5cIjpbMzddLFwiQnlcIjpbMzhdLFwiY29uZHVjdGluZ1wiOlszOV0sXCJleHBlcmltZW50cyxcIjpbNDFdLFwid2VcIjpbNDJdLFwic2hvd1wiOls0M10sXCJ0aGF0XCI6WzQ0XSxcImRpc3RhbmNlc1wiOls0N10sXCJpbXBsaWVkXCI6WzQ4XSxcImJ5XCI6WzQ5XSxcIkdOUFwiOls1MV0sXCJjYW5cIjpbNTRdLFwiYWNjdXJhdGVseVwiOls1NV0sXCJkaXN0YW5jZXMuXCI6WzYwXX19LFwiU1wiOlt7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/ZG9pZD01MDUyMDIuNTA1MjA2XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cuaW5mb3JtYXRpay51bmktdHJpZXIuZGUvfmxleS9kYi9jb25mL2ltdy9pbXcyMDAxLmh0bWxcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvaW13L2ltdzIwMDEuaHRtbCNOZ1owMVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NTA1MjA2XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLmFjbS5vcmcvMTAuMTE0NS81MDUyMDIuNTA1MjA2XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cuY29tcC5udXMuZWR1LnNnL35ibGVvbmcvZ2VvZ3JhcGhpYy9yZWxhdGVkL25nMDFnbnAucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NTA1MjAyLjUwNTIwNlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZG9pLmFjbS5vcmcvMTAuMTE0NS81MDUyMDIuNTA1MjA2XCJ9XSxcIlZGTlwiOlwiQUNNIFNwZWNpYWwgSW50ZXJlc3QgR3JvdXAgb24gRGF0YSBDb21tdW5pY2F0aW9uXCIsXCJWU05cIjpcIlNJR0NPTU1cIixcIkZQXCI6MjUsXCJMUFwiOjI5LFwiRE9JXCI6XCIxMC4xMTQ1LzUwNTIwMi41MDUyMDZcIixcIlBSXCI6WzIxMTg0MjgxOTMsMjEzMjA1MTk5OSwyMTYzMDU5MTkwLDIxNTMzMTkxOTgsMjE0ODY0NzI4MSwyMTY3ODk4NDE0LDIxMzcwMzM0NjUsMTY1MDY3NTUwOSwyMTU4MDQ5ODIxLDcxMTg1OTUzLDIxMDQyMTA4OTQsMjE1OTY5MjA5MywxOTk2NDk3NTA5LDIxNTU2NTkyOTIsMjAyMDc2NTY1MiwyMTI5ODA3NzQ2LDIwNTYxMzgwMTQsMjE1NzkxODYxNywyMDAwMjYxOTExLDIwMDkyMTcwNjAsMjExODQyODE5MywyMTMyMDUxOTk5LDIxNjMwNTkxOTAsMjE1MzMxOTE5OCwyMTQ4NjQ3MjgxLDIxNjc4OTg0MTQsMjEzNzAzMzQ2NSwxNjUwNjc1NTA5LDIxNTgwNDk4MjEsNzExODU5NTMsMjEwNDIxMDg5NCwyMTU5NjkyMDkzLDE5OTY0OTc1MDksMjE1NTY1OTI5MiwyMDIwNzY1NjUyLDIxMjk4MDc3NDYsMjA1NjEzODAxNCwyMTU3OTE4NjE3LDIwMDAyNjE5MTEsMjAwOTIxNzA2MF0sXCJBTkZcIjpbe1wiRk5cIjpcIlQuIFMuIEV1Z2VuZVwiLFwiTE5cIjpcIk5nXCIsXCJTXCI6MX0se1wiRk5cIjpcIkh1aVwiLFwiTE5cIjpcIlpoYW5nXCIsXCJTXCI6Mn1dLFwiQlZcIjpcIlByb2NlZWRpbmdzIG9mIHRoZSAxc3QgQUNNIFNJR0NPTU0gV29ya3Nob3Agb24gSW50ZXJuZXQgbWVhc3VyZW1lbnRcIixcIkJUXCI6XCJwXCIsXCJQQlwiOlwiQUNNXCJ9In0seyJsb2dwcm9iIjotMTguMjcsImtlc0VudGl0eUlkIjoxMDM5NDYwMSwiSWQiOjIxMjIyNjk5MjUsIlRpIjoiZGV2ZWxvcG1lbnQgb2YgdGhlIGRvbWFpbiBuYW1lIHN5c3RlbSIsIlkiOjE5ODgsIkQiOiIxOTg4LTA4LTAxIiwiQ0MiOjU2OCwiUklkIjpbMjExMTQyNzI3MSwxODI4MTUwMDI5LDIwNDM2NzEzMjksMTk4NzIyMTk5NywyMDA5MzEyNTQyLDIyOTU0OTgwMDcsMTc5MTA0OTkzNCw1Nzc0MjMxNiwxOTAwODc3MzE5LDE2NTc4Mjg2OTIsNjc0MjM5NTksMjYxMzM4NjI1Myw2NDUxNjg2LDE1OTQxNDQ5MDZdLCJBQSI6W3siQXVOIjoicGF1bCB2IG1vY2thcGV0cmlzIn0seyJBdU4iOiJrZXZpbiBqIGR1bmxhcCJ9XSwiRiI6W3siRk4iOiJyb290IG5hbWUgc2VydmVyIn0seyJGTiI6ImRhdGFncmFtIn0seyJGTiI6ImRvbWFpbiBuYW1lIHN5c3RlbSJ9LHsiRk4iOiJuYW1lIHNlcnZlciJ9LHsiRk4iOiJpbXBsZW1lbnRhdGlvbiJ9LHsiRk4iOiJoaWVyYXJjaHkifSx7IkZOIjoiaW5mb3JtYXRpb24gc3lzdGVtIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJjb21wdXRlciBzZWN1cml0eSJ9LHsiRk4iOiJ3b3JsZCB3aWRlIHdlYiJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkRldmVsb3BtZW50IG9mIHRoZSBEb21haW4gTmFtZSBTeXN0ZW1cIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjo4NCxcIkludmVydGVkSW5kZXhcIjp7XCJUaGVcIjpbMF0sXCJEb21haW5cIjpbMV0sXCJOYW1lXCI6WzJdLFwiU3lzdGVtXCI6WzNdLFwiKEROUylcIjpbNF0sXCJwcm92aWRlc1wiOls1XSxcIm5hbWVcIjpbNiwxOF0sXCJzZXJ2aWNlXCI6WzddLFwiZm9yXCI6WzhdLFwidGhlXCI6WzksMTYsNDgsNTEsNTUsNjAsNjZdLFwiREFSUEFcIjpbMTBdLFwiSW50ZXJuZXQuXCI6WzExXSxcIkl0XCI6WzEyXSxcImlzXCI6WzEzXSxcIm9uZVwiOlsxNF0sXCJvZlwiOlsxNSwyOCwzOCw1NCw2Ml0sXCJsYXJnZXN0XCI6WzE3XSxcInNlcnZpY2VzXCI6WzE5XSxcImluXCI6WzIwLDU3XSxcIm9wZXJhdGlvblwiOlsyMV0sXCJ0b2RheSxcIjpbMjJdLFwic2VydmVzXCI6WzIzXSxcImFcIjpbMjQsMzVdLFwiaGlnaGx5XCI6WzI1XSxcImRpdmVyc2VcIjpbMjZdLFwiY29tbXVuaXR5XCI6WzI3XSxcImhvc3RzLFwiOlsyOV0sXCJ1c2VycyxcIjpbMzBdLFwiYW5kXCI6WzMxLDMzLDQxLDY5LDc1LDc3XSxcIm5ldHdvcmtzLFwiOlszMl0sXCJ1c2VzXCI6WzM0XSxcInVuaXF1ZVwiOlszNl0sXCJjb21iaW5hdGlvblwiOlszN10sXCJoaWVyYXJjaGllcyxcIjpbMzldLFwiY2FjaGluZyxcIjpbNDBdLFwiZGF0YWdyYW1cIjpbNDJdLFwiYWNjZXNzLlwiOls0M10sXCJUaGlzXCI6WzQ1XSxcInBhcGVyXCI6WzQ2XSxcImV4YW1pbmVzXCI6WzQ3XSxcImlkZWFzXCI6WzQ5LDY0XSxcImJlaGluZFwiOls1MF0sXCJpbml0aWFsXCI6WzUyXSxcImRlc2lnblwiOls1M10sXCJETlNcIjpbNTZdLFwiMTk4MyxcIjpbNThdLFwiZGlzY3Vzc2VzXCI6WzU5XSxcImV2b2x1dGlvblwiOls2MV0sXCJ0aGVzZVwiOls2M10sXCJpbnRvXCI6WzY1XSxcImN1cnJlbnRcIjpbNjddLFwiaW1wbGVtZW50YXRpb25zXCI6WzY4XSxcInVzYWdlcyxcIjpbNzBdLFwibm90ZXNcIjpbNzFdLFwiY29uc3BpY3VvdXNcIjpbNzJdLFwic3VycHJpc2VzLFwiOls3M10sXCJzdWNjZXNzZXNcIjpbNzRdLFwic2hvcnRjb21pbmdzLFwiOls3Nl0sXCJhdHRlbXB0c1wiOls3OF0sXCJ0b1wiOls3OV0sXCJwcmVkaWN0XCI6WzgwXSxcIml0c1wiOls4MV0sXCJmdXR1cmVcIjpbODJdLFwiZXZvbHV0aW9uLlwiOls4M119fSxcIlNcIjpbe1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy53d3ctdXNlcnMuaXRsYWJzLnVtbi5lZHUvY2xhc3Nlcy9mYWxsLTIwMDgvY3NjaTgyMTEvcmVhZGluZ3MvZG5zLW1vY2thcGV0cmlzLnBkZlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MjA1NDU5XCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jY3Iuc2lnY29tbS5vcmcvYXJjaGl2ZS8xOTk1L2phbjk1L2Njci05NTAxLW1vY2thcGV0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmNvcm5lbGwuZWR1L2NvdXJzZXMvY3M2MTUvMjAwMmZhLzYxNS9tb2NrYXBldHJpcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cuY3Muc3dhcnRobW9yZS5lZHUvfm5ld2hhbGwvcmVhZGluZ3MvZG5zLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbm1zLmxjcy5taXQuZWR1LzY4MjktcGFwZXJzL2Rucy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5ydXRnZXJzLmVkdS9+YmFkcmkvNTUyZGlyL3BhcGVycy9ETlMvcDExMi1tb2NrYXBldHJpcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2JucmcuZWVjcy5iZXJrZWxleS5lZHUvfnJhbmR5L0NvdXJzZXMvQ1MyNjguRjA4L3BhcGVycy8zMV9kbnMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wYWdlcy5jcy53aXNjLmVkdS9+YWtlbGxhL0NTNzQwL1MwOC83NDAtUGFwZXJzL01EODgucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9qcGtjLmZ1ZGFuLmVkdS5jbi9waWN0dXJlL2FydGljbGUvMTAxLzlhLzhkLzRlZDgwNWFlNDZlOGExNzdmN2Y5MzUzOWM0NmYvZTliODZmYzUtNWY5YS00NGE4LWI4ZDEtMGMzNzgyMjg2M2VmLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lm5ld3MuY3Mubnl1LmVkdS9+amlueWFuZy9mYTA3L3BhcGVycy9kbnMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MudXRhaC5lZHUvfnJldHJhYy9jczc5NjAvbW9ja3BldHJpcy1kbnMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY211LmVkdS9+c3JpbmkvMTUtNzQ0L3BhcGVycy9kbnMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MucHJpbmNldG9uLmVkdS9jb3Vyc2VzL2FyY2hpdmUvZmFsbDE0L2NvczU2MS9wYXBlcnMvRE5TODgucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly96b28uY3MueWFsZS5lZHUvY2xhc3Nlcy9jczQyNi8yMDEyL2JpYi9tb2NrYXBldHJpczg4ZGV2ZWxvcG1lbnQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9zdXJhai5sdW1zLmVkdS5way9+Y3M1ODJzMDUvcGFwZXJzLzAzX2Rucy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy50b3JvbnRvLmVkdS9zeXNsYWIvY291cnNlcy9jc2MyMjMxLzA1YXUvcGFwZXJzL2Rucy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2luZm9sYWIuc3RhbmZvcmQuZWR1L35tYW5rdS9xdWFscy96cGFwZXJzLzg4LWRucy5wZGYuZ3pcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5lZWNnLnRvcm9udG8uZWR1L35qYWNvYnNlbi9taWU0NTYvcmVhZGVyL21vY2thcGV0cmlzODhkZXZlbG9wbWVudC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5lZWNnLnV0b3JvbnRvLmNhL35qYWNvYnNlbi9taWU0NTYvcmVhZGVyL21vY2thcGV0cmlzODhkZXZlbG9wbWVudC5wZGZcIn1dLFwiVkZOXCI6XCJBQ00gU3BlY2lhbCBJbnRlcmVzdCBHcm91cCBvbiBEYXRhIENvbW11bmljYXRpb25cIixcIlZTTlwiOlwiU0lHQ09NTVwiLFwiVlwiOjI1LFwiSVwiOjEsXCJGUFwiOjEyMyxcIkxQXCI6MTMzLFwiRE9JXCI6XCIxMC4xMTQ1LzIwNTQ0Ny4yMDU0NTlcIixcIkNDXCI6e1wiMTc5MTA0OTkzNFwiOltcIkFmdGVyIG11Y2ggZGViYXRlLCB0aGUgTVggZGF0YSB0eXBlIGFuZCBzeXN0ZW0gW1JGQyA5NzRdIGRlZmluZWQgYSBzdGFuZGFyZCBtZXRob2QgZm9yIHJvdXRpbmcgbWFpbCwgYmFzZWQgb24gdGhlIERPTUFJTiBwYXJ0IG9yIGEgTE9DQUwtUEFSVEBET01BSU4gbWFpbCBhZGRyZXNzLlwiXSxcIjE5MDA4NzczMTlcIjpbXCJbUkZDIDEwMzFdIGNhdGFsb2dzIGEgZG96ZW4gaW1wbGVtZW50YXRpb25zIG9yIHBvcnRzLCByYW5naW5nIGZyb20gdGhlIHViaXF1aXRvdXMgc3VwcG9ydCBwcm92aWRlZCBhcyBwYXJ0IG9mIEJlcmtlbGV5IFVOSVgsIHRocm91Z2ggaW1wbGVtZW50YXRpb25zIGZvciBJQk0tUENzLCBNYWNpbnRvc2hlcywgTElTUCBtYWNoaW5lcywgYW5kIGZ1enpiYWxsc1wiXSxcIjI2MTMzODYyNTNcIjpbXCJBbiBhZG1pbmlzdHJhdGl2ZSBkZWNpc2lvbiBbUkZDIDkyMF0gd2FzIG1hZGUgdG8gbWFrZSB0aGUgdG9wIGxldmVscyBjb3JyZXNwb25kIHRvIGNvdW50cnkgY29kZXMgb3IgYnJvYWQgb3JnYW5pemF0aW9uIHR5cGVzIChmb3IgZXhhbXBsZSBFRFUgZm9yIGVkdWNhdGlvbmFsLCBNSUwgZm9yIG1pbGl0YXJ5LCBVSyBmb3IgR3JlYXQgQnJpdGFpbikuXCJdfSxcIlBSXCI6WzIxMTg0MjgxOTMsMTgyODE1MDAyOSwyMTY3ODk4NDE0LDIxMTE0MjcyNzEsMjE2MzA1OTE5MCwyMTU4MDQ5ODIxLDIxNjUwNzEzOTksMjAyMDc2NTY1MiwxNTI3OTYxNjgzLDIxMjU4NTU3NTAsMjA0MzY3MTMyOSwyMDc5OTk0MjAzLDE1MzM4MTM5MzksMjA0NDUzNDM1OCwyMTE3Njk3MDA1LDIxMDQyMTA4OTQsMjE1MzU0NTQ4OCwxOTg5MTYzMDA2LDIwMTI2NDM5NTUsMTUyNDgzMjE5NCwyMTE4NDI4MTkzLDE4MjgxNTAwMjksMjE2Nzg5ODQxNCwyMTExNDI3MjcxLDIxNjMwNTkxOTAsMjE1ODA0OTgyMSwyMTY1MDcxMzk5LDIwMjA3NjU2NTIsMTUyNzk2MTY4MywyMTI1ODU1NzUwLDIwNDM2NzEzMjksMjA3OTk5NDIwMywxNTMzODEzOTM5LDIwNDQ1MzQzNTgsMjExNzY5NzAwNSwyMTA0MjEwODk0LDIxNTM1NDU0ODgsMTk4OTE2MzAwNiwyMDEyNjQzOTU1LDE1MjQ4MzIxOTRdLFwiQU5GXCI6W3tcIkZOXCI6XCJQYXVsIFYuXCIsXCJMTlwiOlwiTW9ja2FwZXRyaXNcIixcIlNcIjoxfSx7XCJGTlwiOlwiS2V2aW4gSi5cIixcIkxOXCI6XCJEdW5sYXBcIixcIlNcIjoyfV0sXCJCVlwiOlwiYWNtIHNwZWNpYWwgaW50ZXJlc3QgZ3JvdXAgb24gZGF0YSBjb21tdW5pY2F0aW9uXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIkFDTVwifSJ9LHsibG9ncHJvYiI6LTE4LjMwNCwia2VzRW50aXR5SWQiOjEwNzM2MDQ3LCJJZCI6MTc5OTMzODQyOSwiVGkiOiJvYnNlcnZhdGlvbnMgb24gdGhlIGR5bmFtaWMgZXZvbHV0aW9uIG9mIHBlZXIgdG8gcGVlciBuZXR3b3JrcyIsIlkiOjIwMDIsIkQiOiIyMDAyLTAzLTA3IiwiQ0MiOjExMywiUklkIjpbMjExODQyODE5MywyMTU4MDQ5ODIxLDIxNjMwNTkxOTAsMjE2Nzg5ODQxNCwxNjUwNjc1NTA5LDE1ODQ2MzU0NTksMjE2ODg4NjEzMSwyMTM4OTcyNzk1LDE5ODk2NDEzMDEsMjE2MzA2NzI0OCwxODg5NjgxNTU0XSwiQUEiOlt7IkF1TiI6ImRhdmlkIGxpYmVubm93ZWxsIn0seyJBdU4iOiJoYXJpIGJhbGFrcmlzaG5hbiJ9LHsiQXVOIjoiZGF2aWQgciBrYXJnZXIifV0sIkYiOlt7IkZOIjoiY2hvcmQifSx7IkZOIjoibG9nYXJpdGhtIn0seyJGTiI6InBlZXIgdG8gcGVlciJ9LHsiRk4iOiJpbml0aWFsIHZhbHVlIHByb2JsZW0ifSx7IkZOIjoicmVzb3VyY2UgbWFuYWdlbWVudCJ9LHsiRk4iOiJiYW5kd2lkdGgifSx7IkZOIjoidXBwZXIgYW5kIGxvd2VyIGJvdW5kcyJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJPYnNlcnZhdGlvbnMgb24gdGhlIER5bmFtaWMgRXZvbHV0aW9uIG9mIFBlZXItdG8tUGVlciBOZXR3b3Jrc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjEzMyxcIkludmVydGVkSW5kZXhcIjp7XCJBXCI6WzBdLFwiZnVuZGFtZW50YWxcIjpbMV0sXCJ0aGVvcmV0aWNhbFwiOlsyXSxcImNoYWxsZW5nZVwiOlszXSxcImluXCI6WzQsNTBdLFwicGVlci10by1wZWVyXCI6WzUsODddLFwic3lzdGVtc1wiOls2XSxcImlzXCI6WzcsMTAyXSxcInByb3ZpbmdcIjpbOF0sXCJzdGF0ZW1lbnRzXCI6WzldLFwiYWJvdXRcIjpbMTBdLFwidGhlXCI6WzExLDE0LDI0LDQzLDU0LDYxLDcxLDg1LDEwNl0sXCJldm9sdXRpb25cIjpbMTJdLFwib2ZcIjpbMTNdLFwic3lzdGVtXCI6WzE1LDI1LDU1XSxcIndoaWxlXCI6WzE2XSxcIm5vZGVzXCI6WzE3LDQ3LDY1XSxcImFyZVwiOlsxOCwzN10sXCJjb250aW51b3VzbHlcIjpbMTldLFwiam9pbmluZ1wiOlsyMF0sXCJhbmRcIjpbMjEsNjksMTAwLDExN10sXCJsZWF2aW5nLlwiOlsyMl0sXCJCZWNhdXNlXCI6WzIzXSxcIndpbGxcIjpbMjZdLFwib3BlcmF0ZVwiOlsyN10sXCJmb3JcIjpbMjhdLFwiYW5cIjpbMjksMTE5LDEyOV0sXCJpbmZpbml0ZVwiOlszMF0sXCJ0aW1lLFwiOlszMV0sXCJwZXJmb3JtYW5jZVwiOlszMl0sXCJtZWFzdXJlc1wiOlszM10sXCJiYXNlZFwiOlszNF0sXCJvblwiOlszNSw2MF0sXCJydW50aW1lXCI6WzM2XSxcInVuaW5mb3JtYXRpdmU7XCI6WzM4XSxcImluc3RlYWQsXCI6WzM5XSxcIndlXCI6WzQwLDc2LDgzXSxcIm11c3RcIjpbNDFdLFwic3R1ZHlcIjpbNDJdLFwicmF0ZVwiOls0NCw2Ml0sXCJhdFwiOls0NSw2M10sXCJ3aGljaFwiOls0Niw2NF0sXCJjb25zdW1lXCI6WzQ4XSxcInJlc291cmNlc1wiOls0OV0sXCJvcmRlclwiOls1MV0sXCJ0b1wiOls1Miw2Nyw5NSwxMjNdLFwibWFpbnRhaW5cIjpbNTNdLFwic3RhdGUuVGhpc1wiOls1Nl0sXCJcXFwibWFpbnRlbmFuY2VcIjpbNTddLFwiYmFuZHdpZHRoXFxcIlwiOls1OF0sXCJkZXBlbmRzXCI6WzU5XSxcInRlbmRcIjpbNjZdLFwiZW50ZXJcIjpbNjhdLFwibGVhdmVcIjpbNzBdLFwic3lzdGVtLlwiOls3Ml0sXCJJblwiOls3M10sXCJ0aGlzXCI6Wzc0LDc4XSxcInBhcGVyLFwiOls3NV0sXCJmb3JtYWxpemVcIjpbNzddLFwiZGVwZW5kZW5jZS5cIjpbNzldLFwiSGF2aW5nXCI6WzgwXSxcImRvbmVcIjpbODFdLFwic28sXCI6WzgyXSxcImFuYWx5emVcIjpbODQsMTE4XSxcIkNob3JkXCI6Wzg2XSxcInByb3RvY29sLlwiOls4OF0sXCJXZVwiOls4OSwxMTRdLFwic2hvd1wiOls5MF0sXCJ0aGF0XCI6WzkxLDEyMV0sXCJDaG9yZCdzXCI6WzkyXSxcIm1haW50ZW5hbmNlXCI6WzkzXSxcImJhbmR3aWR0aFwiOls5NF0sXCJoYW5kbGVcIjpbOTZdLFwiY29uY3VycmVudFwiOls5N10sXCJub2RlXCI6Wzk4XSxcImFycml2YWxzXCI6Wzk5XSxcImRlcGFydHVyZXNcIjpbMTAxXSxcIm5lYXJcIjpbMTAzXSxcIm9wdGltYWwsXCI6WzEwNF0sXCJleGNlZWRpbmdcIjpbMTA1XSxcImxvd2VyXCI6WzEwN10sXCJib3VuZFwiOlsxMDhdLFwiYnlcIjpbMTA5XSxcIm9ubHlcIjpbMTEwXSxcImFcIjpbMTExLDEyNF0sXCJsb2dhcml0aG1pY1wiOlsxMTJdLFwiZmFjdG9yLlwiOlsxMTNdLFwiYWxzb1wiOlsxMTVdLFwib3V0bGluZVwiOlsxMTZdLFwiYWxnb3JpdGhtXCI6WzEyMF0sXCJjb252ZXJnZXNcIjpbMTIyXSxcImNvcnJlY3RcIjpbMTI1XSxcInJvdXRpbmdcIjpbMTI2XSxcInN0YXRlXCI6WzEyN10sXCJmcm9tXCI6WzEyOF0sXCJhcmJpdHJhcnlcIjpbMTMwXSxcImluaXRpYWxcIjpbMTMxXSxcImNvbmRpdGlvbi5cIjpbMTMyXX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmNvcm5lbGwuZWR1L3Blb3BsZS9lZ3MvaXB0cHNhcmNoaXZlL3d3dy5jcy5yaWNlLmVkdS9Db25mZXJlbmNlcy9JUFRQUzAyLzE4Ny5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9jb250ZW50L3BkZi8xMC4xMDA3JTJGMy01NDAtNDU3NDgtOF8yLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vcGVvcGxlLmNzYWlsLm1pdC5lZHUvZGxuL3BhcGVycy9pcHRwcy1ldm9sL2V2b2wucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9jb25mL2lwdHBzL2lwdHBzMjAwMi5odG1sI0xpYmVuLU5vd2VsbEJLMDJcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9jaGFwdGVyLzEwLjEwMDclMkYzLTU0MC00NTc0OC04XzJcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9wZG9zLmNzYWlsLm1pdC5lZHUvY2hvcmQvcGFwZXJzL2lwdHBzLWV2b2wucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NjQ2MzM0LjY4NzgxN1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTY4NzgxN1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMDA3LzMtNTQwLTQ1NzQ4LThfMlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3JkLnNwcmluZ2VyLmNvbS9jb250ZW50L3BkZi8xMC4xMDA3JTJGMy01NDAtNDU3NDgtOF8yLnBkZlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NjQ2MzM0LjY4NzgxN1wifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vbGluay5zcHJpbmdlci5jb20vMTAuMTAwNyUyRjMtNTQwLTQ1NzQ4LThfMlwifV0sXCJWRk5cIjpcIkludGVybmF0aW9uYWwgV29ya3Nob3Agb24gUGVlci10by1QZWVyIFN5c3RlbXNcIixcIlZTTlwiOlwiSVBUUFNcIixcIkZQXCI6MjIsXCJMUFwiOjMzLFwiRE9JXCI6XCIxMC4xMDA3LzMtNTQwLTQ1NzQ4LThfMlwiLFwiQ0NcIjp7XCIxNjUwNjc1NTA5XCI6W1wiLCBbMSwgMywgNCwgNSwgNl0uXCJdLFwiMTg4OTY4MTU1NFwiOltcIlJlY2VudGx5LCBTYWlhIGV0IGFsLiBbIDYgXSBoYXZlIGV4cGxvcmVkIHRoZSB1c2Ugb2YgYSBidXR0ZXJmbHkgbmV0d29yayBpbiBhIFAyUCBzZXR0aW5nLlxcdTAwMWJUaGlzIGNvbnRyYXN0cyB3aXRoIHRoZSBzdHJvbmdlciBub3Rpb24gb2YgYWR2ZXJzYXJpYWwgZmFpbHVyZXMgb2YgU2FpYSBldCBhbC4gWyA2IF3igJRvdXIgbW9kZWwgaGFuZGxlcyBhbiBhZHZlcnNhcnkgb2JsaXZpb3VzIHRvIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIENob3JkIG92ZXJsYXksIHdoaWxlIHRoZWlyIG5ldHdvcmsgaXMgcm9idXN0IGFnYWluc3QgYW4gb21uaXNjaWVudCBhZHZlcnNhcnkuXCJdLFwiMTk4OTY0MTMwMVwiOltcIlRoZXNlIGFuYWx5c2VzLCBob3dldmVyLCBhc3N1bWUgdGhhdCB0aGUgc3lzdGVtIGJlZ2lucyBpbiBhbiBpZGVhbCBzdGFydGluZyBzdGF0ZSwgYW5kIGRvIG5vdCBzaG93IGhvdyB0aGUgc3lzdGVtIHJldHVybnMgdG8gdGhpcyBpZGVhbCBzdGF0ZSBhZnRlciB0aGUgZmFpbHVyZXM7IHRodXMsIGFjY3VtdWxhdGlvbiBvZiBmYWlsdXJlcyBvdmVyIHRpbWUgZXZlbnR1YWxseSBkaXNydXB0cyB0aGUgc3lzdGVtLiAoU2VlLCBlLmcuLCBbIDEgLCAzLCA0LCA1LCA2XS4pXCJdLFwiMjE2MzA1OTE5MFwiOltcIlRoZXNlIGFuYWx5c2VzLCBob3dldmVyLCBhc3N1bWUgdGhhdCB0aGUgc3lzdGVtIGJlZ2lucyBpbiBhbiBpZGVhbCBzdGFydGluZyBzdGF0ZSwgYW5kIGRvIG5vdCBzaG93IGhvdyB0aGUgc3lzdGVtIHJldHVybnMgdG8gdGhpcyBpZGVhbCBzdGF0ZSBhZnRlciB0aGUgZmFpbHVyZXM7IHRodXMsIGFjY3VtdWxhdGlvbiBvZiBmYWlsdXJlcyBvdmVyIHRpbWUgZXZlbnR1YWxseSBkaXNydXB0cyB0aGUgc3lzdGVtLiAoU2VlLCBlLmcuLCBbMSwgIDMgLCA0LCA1LCA2XS4pXCJdLFwiMjE2MzA2NzI0OFwiOltcIlBlcmhhcHMgdGhlIGNsb3Nlc3QgdG8gb3VyIGV2b2x1dGlvbmFyeSBhbmFseXNpcyBpcyB0aGUgcmVjZW50IHdvcmsgb2YgUGFuZHVyYW5nYW4gZXQgYWwuIFsgMiBdLCB3aG8gc3R1ZHkgYSBjZW50cmFsaXplZCwgZmxvb2RpbmctYmFzZWQgUDJQIHByb3RvY29sLlxcdTAwMWJGb3IgZXhhbXBsZSwgY29uc2lkZXIgYSBQb2lzc29uIG1vZGVsIG9mIGFycml2YWxzL2RlcGFydHVyZXMgWyAyIF06IG5vZGVzIGFycml2ZSBhY2NvcmRpbmcgdG8gYSBQb2lzc29uIHByb2Nlc3Mgd2l0aCByYXRlICwgd2hpbGUgZWFjaCBub2RlIGluIHRoZSBzeXN0ZW0gZGVwYXJ0cyBpbmRlcGVuZGVudGx5IGFjY29yZGluZyB0byBhbiBleHBvbmVudGlhbCBkaXN0cmlidXRpb24gd2l0aCByYXRlIHBhcmFtZXRlciAoaS5lLiwgZXhwZWN0ZWQgbm9kZSBsaWZldGltZSBpcyApLiBJZiB0aGVyZSBhcmUgbm9kZXMgaW4gdGhlIHN5c3RlbSBhdCB0aW1lICwgdGhlbiB0aGUgZXhwZWN0ZWQgZG91YmxpbmcgdGltZSBpcyBhbmQgdGhlIGV4cGVjdGVkIGhhbHZpbmcgdGltZSBpcyAuIChUaGUgcHJvYmFiaWxpdHkgdGhhdCBhIG5vZGUgZmFpbHMgaW4gdGltZSBpcyA7IHNldHRpbmcgLi4uXCJdLFwiMjE2ODg4NjEzMVwiOltcIlRoaXMgbm90ZSBzdW1tYXJpemVzIHdvcmsgd2hpY2ggaXMgcmVwb3J0ZWQgaW4gZnVsbCBpbiBbIDEgXS5cXHUwMDFib24gY3ljbGUgOj0gZmFsc2U7IHByZWRlY2Vzc29yIDo9IG5pbDsgcyA6PSBuIO+/vSAuZmluZCBzdWNjZXNzb3IgKG4pOyB3aGlsZSAowqwgcy5vbiBjeWNsZSkgZG8gcyA6PSBzLmZpbmQgc3VjY2Vzc29yIChuIO+/vSApOyBzdWNjZXNzb3IgWzBdIDo9IHM7IHN1Y2Nlc3NvciBbIDEgXSA6PSBzOyBuLnN0YWJpbGl6ZSgpIHUgOj0gc3VjY2Vzc29yIFswXS5maW5kIHN1Y2Nlc3NvciAobik7IG9uIGN5Y2xlIDo9ICh1ID0gbik7IGlmIChzdWNjZXNzb3IgWzBdID0gc3VjY2Vzc29yIFsxXSBhbmQgdSDiiIggKG4sc3VjY2Vzc29yIFsxXSkpIHN1Y2Nlc3NvciBbMV0gOj0gdTsgZm9yIChpIDo9IDAsIDEpIHVwZGF0ZSBhbmQgbm90aWZ5KGkpO1xcdTAwMWJvbiBjeWNsZSA6PSBmYWxzZTsgcHJlZGVjZXNzb3IgOj0gbmlsOyBzIDo9IG4g77+9IC5maW5kIHN1Y2Nlc3NvciAobik7IHdoaWxlICjCrCBzLm9uIGN5Y2xlKSBkbyBzIDo9IHMuZmluZCBzdWNjZXNzb3IgKG4g77+9ICk7IHN1Y2Nlc3NvciBbMF0gOj0gczsgc3VjY2Vzc29yIFsxXSA6PSBzOyBuLnN0YWJpbGl6ZSgpIHUgOj0gc3VjY2Vzc29yIFswXS5maW5kIHN1Y2Nlc3NvciAobik7IG9uIGN5Y2xlIDo9ICh1ID0gbik7IGlmIChzdWNjZXNzb3IgWzBdID0gc3VjY2Vzc29yIFsgMSBdIGFuZCB1IOKIiCAobixzdWNjZXNzb3IgWzFdKSkgc3VjY2Vzc29yIFsxXSA6PSB1OyBmb3IgKGkgOj0gMCwgMSkgdXBkYXRlIGFuZCBub3RpZnkoaSk7XFx1MDAxYm9uIGN5Y2xlIDo9IGZhbHNlOyBwcmVkZWNlc3NvciA6PSBuaWw7IHMgOj0gbiDvv70gLmZpbmQgc3VjY2Vzc29yIChuKTsgd2hpbGUgKMKsIHMub24gY3ljbGUpIGRvIHMgOj0gcy5maW5kIHN1Y2Nlc3NvciAobiDvv70gKTsgc3VjY2Vzc29yIFswXSA6PSBzOyBzdWNjZXNzb3IgWzFdIDo9IHM7IG4uc3RhYmlsaXplKCkgdSA6PSBzdWNjZXNzb3IgWzBdLmZpbmQgc3VjY2Vzc29yIChuKTsgb24gY3ljbGUgOj0gKHUgPSBuKTsgaWYgKHN1Y2Nlc3NvciBbMF0gPSBzdWNjZXNzb3IgWzFdIGFuZCB1IOKIiCAobixzdWNjZXNzb3IgWyAxIF0pKSBzdWNjZXNzb3IgWzFdIDo9IHU7IGZvciAoaSA6PSAwLCAxKSB1cGRhdGUgYW5kIG5vdGlmeShpKTtcXHUwMDFib24gY3ljbGUgOj0gZmFsc2U7IHByZWRlY2Vzc29yIDo9IG5pbDsgcyA6PSBuIO+/vSAuZmluZCBzdWNjZXNzb3IgKG4pOyB3aGlsZSAowqwgcy5vbiBjeWNsZSkgZG8gcyA6PSBzLmZpbmQgc3VjY2Vzc29yIChuIO+/vSApOyBzdWNjZXNzb3IgWzBdIDo9IHM7IHN1Y2Nlc3NvciBbMV0gOj0gczsgbi5zdGFiaWxpemUoKSB1IDo9IHN1Y2Nlc3NvciBbMF0uZmluZCBzdWNjZXNzb3IgKG4pOyBvbiBjeWNsZSA6PSAodSA9IG4pOyBpZiAoc3VjY2Vzc29yIFswXSA9IHN1Y2Nlc3NvciBbMV0gYW5kIHUg4oiIIChuLHN1Y2Nlc3NvciBbMV0pKSBzdWNjZXNzb3IgWyAxIF0gOj0gdTsgZm9yIChpIDo9IDAsIDEpIHVwZGF0ZSBhbmQgbm90aWZ5KGkpO1wiXX0sXCJQUlwiOlsyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE1ODA0OTgyMSwyMTYzMDU5MTkwLDIxNTA2NzY1ODYsMjE2MjczMzY3NywyMDU2MzYzMzUzLDE2NTA2NzU1MDksMjA5NjcwNjUxMiwyMTY4ODg2MTMxLDIxMTkyNDUxMDYsMTA1NjAxNTk3LDE1Njg4NDkzMDAsMTU2NDg1NDQ5NiwxOTcwNTY0Nzc4LDIwMjA3NjU2NTIsMjA5NjUzODQxMCwxNDkyNTUyNTMxLDE1MjMyMTQxMzIsMTU2NDk3NjQ1NCwyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjE1ODA0OTgyMSwyMTYzMDU5MTkwLDIxNTA2NzY1ODYsMjE2MjczMzY3NywyMDU2MzYzMzUzLDE2NTA2NzU1MDksMjA5NjcwNjUxMiwyMTY4ODg2MTMxLDIxMTkyNDUxMDYsMTA1NjAxNTk3LDE1Njg4NDkzMDAsMTU2NDg1NDQ5NiwxOTcwNTY0Nzc4LDIwMjA3NjU2NTIsMjA5NjUzODQxMCwxNDkyNTUyNTMxLDE1MjMyMTQxMzIsMTU2NDk3NjQ1NF0sXCJBTkZcIjpbe1wiRk5cIjpcIkRhdmlkXCIsXCJMTlwiOlwiTGliZW4tTm93ZWxsXCIsXCJTXCI6MX0se1wiRk5cIjpcIkhhcmlcIixcIkxOXCI6XCJCYWxha3Jpc2huYW5cIixcIlNcIjoyfSx7XCJGTlwiOlwiRGF2aWQgUi5cIixcIkxOXCI6XCJLYXJnZXJcIixcIlNcIjozfV0sXCJCVlwiOlwiaW50ZXJuYXRpb25hbCB3b3Jrc2hvcCBvbiBwZWVyIHRvIHBlZXIgc3lzdGVtc1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJTcHJpbmdlclwifSJ9LHsibG9ncHJvYiI6LTE4LjM4Mywia2VzRW50aXR5SWQiOjExNjAxMTQ4LCJJZCI6NjUzNTEwOTQsIlRpIjoicHJvdG90eXBlIGltcGxlbWVudGF0aW9uIG9mIGFyY2hpdmFsIGludGVybWVtb3J5IiwiWSI6MTk5NiwiRCI6IjE5OTYtMDEtMDEiLCJDQyI6MTQ5LCJBQSI6W3siQXVOIjoieWl3ZW4gY2hlbiJ9LHsiQXVOIjoiamFuIGVkbGVyIn0seyJBdU4iOiJhbmRyZXcgdiBnb2xkYmVyZyJ9LHsiQXVOIjoiYXNzYWYgZ290dGxpZWIifSx7IkF1TiI6InN1bWVldCBzb2J0aSJ9LHsiQXVOIjoicGV0ZXIgbiB5aWFuaWxvcyJ9XSwiRiI6W3siRk4iOiJkYXRhIG1pbmluZyJ9LHsiRk4iOiJkYXRhYmFzZSJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlByb3RvdHlwZSBpbXBsZW1lbnRhdGlvbiBvZiBhcmNoaXZhbCBpbnRlcm1lbW9yeVwiLFwiVkZOXCI6XCJJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gRGF0YSBFbmdpbmVlcmluZ1wiLFwiVlNOXCI6XCJJQ0RFXCIsXCJQUlwiOlsyMDY0MzYwNTQzLDIxMDQyMTA4OTQsMjEyMzgyMDgyMCwyMTUwNjc2NTg2LDIwNTg5NzI1ODksMjE3NDUwNzg2OSwyMTQ3NTA0ODMxLDIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTIxMTMzMTc3LDIxNjUwMjg2MDUsMjE1ODA0OTgyMSwyMTI0Mjg4MTQ2LDIxMTU1OTk5NDYsMjE2MzA1OTE5MCwyMTQxNDIwNDUzLDIxNTY1OTE4MzYsMjEyNjA4NzgzMSwxNTgwMDA0NDQwLDE4MzY5NTU4NjUsMjA2NDM2MDU0MywyMTA0MjEwODk0LDIxMjM4MjA4MjAsMjE1MDY3NjU4NiwyMDU4OTcyNTg5LDIxNzQ1MDc4NjksMjE0NzUwNDgzMSwyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjEyMTEzMzE3NywyMTY1MDI4NjA1LDIxNTgwNDk4MjEsMjEyNDI4ODE0NiwyMTE1NTk5OTQ2LDIxNjMwNTkxOTAsMjE0MTQyMDQ1MywyMTU2NTkxODM2LDIxMjYwODc4MzEsMTU4MDAwNDQ0MCwxODM2OTU1ODY1XSxcIkFORlwiOlt7XCJGTlwiOlwiWWktV2VuXCIsXCJMTlwiOlwiQ2hlblwiLFwiU1wiOjF9LHtcIkZOXCI6XCJKYW5cIixcIkxOXCI6XCJFZGxlclwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJBbmRyZXcgVi5cIixcIkxOXCI6XCJHb2xkYmVyZ1wiLFwiU1wiOjN9LHtcIkZOXCI6XCJBc3NhZlwiLFwiTE5cIjpcIkdvdHRsaWViXCIsXCJTXCI6NH0se1wiRk5cIjpcIlN1bWVldFwiLFwiTE5cIjpcIlNvYnRpXCIsXCJTXCI6NX0se1wiRk5cIjpcIlBldGVyXCIsXCJMTlwiOlwiWWlhbmlsb3NcIixcIlNcIjo2fV0sXCJCVlwiOlwiSUNERVwiLFwiQlRcIjpcInBcIn0ifSx7ImxvZ3Byb2IiOi0xOC40MDgsImtlc0VudGl0eUlkIjoxMTkyOTM5OCwiSWQiOjIwMzU2OTkxNSwiVGkiOiJzZXJ2aW5nIGRucyB1c2luZyBjaG9yZCIsIlkiOjIwMDIsIkQiOiIyMDAyLTAxLTAxIiwiQ0MiOjY4LCJBQSI6W3siQXVOIjoicnVzcyBjb3gifSx7IkF1TiI6ImF0aGljaGEgbXV0aGl0YWNoYXJvZW4ifSx7IkF1TiI6InJvYmVydCB0YXBwYW4gbW9ycmlzIn1dLCJGIjpbeyJGTiI6ImNob3JkIn0seyJGTiI6ImNvbXB1dGVyIG5ldHdvcmsifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiU2VydmluZyBkbnMgdXNpbmcgY2hvcmRcIixcIlZGTlwiOlwiSW50ZXJuYXRpb25hbCBXb3Jrc2hvcCBvbiBQZWVyLXRvLVBlZXIgU3lzdGVtc1wiLFwiVlNOXCI6XCJJUFRQU1wiLFwiUFJcIjpbMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE1MDY3NjU4NiwyMTU4MDQ5ODIxLDIxMDQyMTA4OTQsMjExOTI0NTEwNiwyMTIwNjI2Mjk0LDE2NTA2NzU1MDksMjAwMDg3NjAyMywyMTIzODIwODIwLDIxNjI3MzM2NzcsMjA5NjcwNjUxMiwyMTIzNDgyNDYyLDIxNzEwNjY0MDYsMjAyMDc2NTY1MiwyMDU2MzYzMzUzLDIwODMxNTgwMDIsMjEyMTUzMTY5MSwyMTUyNzIzMzc2LDIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDIxNTA2NzY1ODYsMjE1ODA0OTgyMSwyMTA0MjEwODk0LDIxMTkyNDUxMDYsMjEyMDYyNjI5NCwxNjUwNjc1NTA5LDIwMDA4NzYwMjMsMjEyMzgyMDgyMCwyMTYyNzMzNjc3LDIwOTY3MDY1MTIsMjEyMzQ4MjQ2MiwyMTcxMDY2NDA2LDIwMjA3NjU2NTIsMjA1NjM2MzM1MywyMDgzMTU4MDAyLDIxMjE1MzE2OTEsMjE1MjcyMzM3Nl0sXCJBTkZcIjpbe1wiRk5cIjpcIlJ1c3NcIixcIkxOXCI6XCJDb3hcIixcIlNcIjoxfSx7XCJGTlwiOlwiQXRoaWNoYVwiLFwiTE5cIjpcIk11dGhpdGFjaGFyb2VuXCIsXCJTXCI6Mn0se1wiRk5cIjpcIlJvYmVydFwiLFwiTE5cIjpcIk1vcnJpc1wiLFwiU1wiOjN9XSxcIkJWXCI6XCJJUFRQU1wiLFwiQlRcIjpcInBcIn0ifSx7ImxvZ3Byb2IiOi0xOC40NzEsImtlc0VudGl0eUlkIjoxMjY0NzMxNCwiSWQiOjE1OTc5Njc1NDQsIlRpIjoiY29uY2hvcmQgY29vcGVyYXRpdmUgc2RzaSBjZXJ0aWZpY2F0ZSBzdG9yYWdlIGFuZCBuYW1lIHJlc29sdXRpb24iLCJZIjoyMDAyLCJEIjoiMjAwMi0wMy0wNyIsIkNDIjo3NCwiUklkIjpbMjExODQyODE5MywyMTU4MDQ5ODIxLDIxNjMwNTkxOTAsMjE2Nzg5ODQxNCwxNjUwNjc1NTA5LDIxMDQyMTA4OTQsMjE1MDY3NjU4NiwxNTg0NjM1NDU5LDIwMjA3NjU2NTIsMjE3MDQ5NjI0MCwyMDQ0NTM0MzU4LDIxMzUzMDA2MzksMTk1NzU4MjU5MCwyMTA1NDcwNzQ4LDIxNjUwNzEzOTksMTgxOTAxMDMyNiwxNDk0OTQ2NDU0LDE4NTkxMzE5ODksMjAzNTY5OTE1LDIxMjQyNjA0MTksMjEwMjMzMzU2MCwyMTAxOTE1MzkxLDIxNDU5OTk1NDQsMjI2MTMyMTExMiwyMTUwODQ3NTEwLDI0NTMwOTc0NiwxNTkyMTc4MzY3LDI2MTM3MzUzMDcsMTY2NDQwMDM2OCwyMTMwNjU2NDIyLDE5NjY2NzE2MSwxNTg4ODY4MDk5XSwiQUEiOlt7IkF1TiI6InNhbWVlciBham1hbmkifSx7IkF1TiI6ImR3YWluZSBlIGNsYXJrZSJ9LHsiQXVOIjoiY2h1YW5naHVlIG1vaCJ9LHsiQXVOIjoic3RldmVuIHJpY2htYW4ifV0sIkYiOlt7IkZOIjoibWVya2xlIHRyZWUifSx7IkZOIjoicHVibGljIGtleSBpbmZyYXN0cnVjdHVyZSJ9LHsiRk4iOiJkaXN0cmlidXRlZCBoYXNoIHRhYmxlIn0seyJGTiI6ImRlbGVnYXRlIn0seyJGTiI6ImNlcnRpZmljYXRlIn0seyJGTiI6InBlZXIgdG8gcGVlciJ9LHsiRk4iOiJsb2FkIGJhbGFuY2luZyJ9LHsiRk4iOiJkYXRhIHN0cnVjdHVyZSJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiZGF0YWJhc2UifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJDb25DaG9yZDogQ29vcGVyYXRpdmUgU0RTSSBDZXJ0aWZpY2F0ZSBTdG9yYWdlIGFuZCBOYW1lIFJlc29sdXRpb25cIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjo5NCxcIkludmVydGVkSW5kZXhcIjp7XCJXZVwiOlswLDU2XSxcInByZXNlbnRcIjpbMSw3MF0sXCJDb25DaG9yZCxcIjpbMl0sXCJhXCI6WzMsMTAsMzddLFwibGFyZ2Utc2NhbGVcIjpbNF0sXCJjZXJ0aWZpY2F0ZVwiOls1XSxcImRpc3RyaWJ1dGlvblwiOls2XSxcInN5c3RlbVwiOls3XSxcImJ1aWx0XCI6WzhdLFwib25cIjpbOV0sXCJwZWVyLXRvLXBlZXJcIjpbMTFdLFwiZGlzdHJpYnV0ZWRcIjpbMTIsNzRdLFwiaGFzaFwiOlsxM10sXCJ0YWJsZS5cIjpbMTRdLFwiQ29uQ2hvcmRcIjpbMTUsNjFdLFwicHJvdmlkZXNcIjpbMTZdLFwibG9hZC1iYWxhbmNlZFwiOlsxN10sXCJzdG9yYWdlXCI6WzE4XSxcIndoaWxlXCI6WzE5XSxcImVsaW1pbmF0aW5nXCI6WzIwXSxcIm1hbnlcIjpbMjFdLFwib2ZcIjpbMjIsMjZdLFwidGhlXCI6WzIzLDU4XSxcImFkbWluaXN0cmF0aXZlXCI6WzI0XSxcImRpZmZpY3VsdGllc1wiOlsyNV0sXCJ0cmFkaXRpb25hbCxcIjpbMjddLFwiaGllcmFyY2hpY2FsXCI6WzI4XSxcInNlcnZlclwiOlsyOV0sXCJhcmNoaXRlY3R1cmVzLkNvbkNob3JkXCI6WzMwXSxcImlzXCI6WzMxXSxcInNwZWNpZmljYWxseVwiOlszMl0sXCJkZXNpZ25lZFwiOlszM10sXCJ0b1wiOlszNCw0NSw1Myw2NCw3N10sXCJzdXBwb3J0XCI6WzM1LDY1XSxcIlNEU0ksXCI6WzM2XSxcImZ1bGx5LWRlY2VudHJhbGl6ZWRcIjpbMzhdLFwicHVibGljXCI6WzM5XSxcImtleVwiOls0MF0sXCJpbmZyYXN0cnVjdHVyZVwiOls0MV0sXCJ0aGF0XCI6WzQyLDgyXSxcImFsbG93c1wiOls0M10sXCJwcmluY2lwYWxzXCI6WzQ0XSxcImRlZmluZVwiOls0Nl0sXCJsb2NhbFwiOls0N10sXCJuYW1lc1wiOls0OF0sXCJhbmRcIjpbNDksNjgsNzMsODddLFwibGlua1wiOls1MF0sXCJ0aGVpclwiOls1MV0sXCJuYW1lc3BhY2VzXCI6WzUyXSxcImRlbGVnYXRlXCI6WzU0XSxcInRydXN0LlwiOls1NV0sXCJkaXNjdXNzXCI6WzU3XSxcInBhcnRpY3VsYXJcIjpbNTldLFwiY2hhbGxlbmdlc1wiOls2MF0sXCJtdXN0XCI6WzYyXSxcImFkZHJlc3NcIjpbNjMsNzhdLFwiU0RTSVwiOls2Niw5MV0sXCJlZmZpY2llbnRseSxcIjpbNjddLFwid2VcIjpbNjldLFwibm92ZWxcIjpbNzFdLFwiYWxnb3JpdGhtc1wiOls3Ml0sXCJkYXRhXCI6Wzc1XSxcInN0cnVjdHVyZXNcIjpbNzZdLFwidGhlbS5cIjpbNzldLFwiRXhwZXJpbWVudHNcIjpbODBdLFwic2hvd1wiOls4MV0sXCJvdXJcIjpbODNdLFwidGVjaG5pcXVlc1wiOls4NF0sXCJhcmVcIjpbODVdLFwiZWZmZWN0aXZlXCI6Wzg2XSxcInByYWN0aWNhbFwiOls4OF0sXCJmb3JcIjpbODldLFwibGFyZ2VcIjpbOTBdLFwibmFtZVwiOls5Ml0sXCJoaWVyYXJjaGllcy5cIjpbOTNdfX0sXCJTXCI6W3tcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9keC5kb2kub3JnLzEwLjEwMDcvMy01NDAtNDU3NDgtOF8xNFwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmVlY3MuaGFydmFyZC5lZHUvfm1lbWEvY291cnNlcy9jczI2NC9wYXBlcnMvbG5jczI0MjkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY29ybmVsbC5lZHUvcGVvcGxlL2Vncy9pcHRwc2FyY2hpdmUvd3d3LmNzLnJpY2UuZWR1L0NvbmZlcmVuY2VzL0lQVFBTMDIvMTE5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vcG1nLmxjcy5taXQuZWR1L35ham1hbmkvcGFwZXJzL2lwdHBzMDIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cucG1nLmNzYWlsLm1pdC5lZHUvfmFqbWFuaS9wYXBlcnMvbG5jczI0MjkucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9jb25mL2lwdHBzL2lwdHBzMjAwMi5odG1sI0FqbWFuaUNNUjAyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vbGluay5zcHJpbmdlci5jb20vY29udGVudC9wZGYvMTAuMTAwNyUyRjMtNTQwLTQ1NzQ4LThfMTQucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vcmQuc3ByaW5nZXIuY29tL2NvbnRlbnQvcGRmLzEwLjEwMDclMkYzLTU0MC00NTc0OC04XzE0LnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTY4NzkzOVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTY4NzkzOVwifV0sXCJWRk5cIjpcIkludGVybmF0aW9uYWwgV29ya3Nob3Agb24gUGVlci10by1QZWVyIFN5c3RlbXNcIixcIlZTTlwiOlwiSVBUUFNcIixcIkZQXCI6MTQxLFwiTFBcIjoxNTQsXCJET0lcIjpcIjEwLjEwMDcvMy01NDAtNDU3NDgtOF8xNFwiLFwiQ0NcIjp7XCIyMDM1Njk5MTVcIjpbXCJBIGxhcmdlIGZyYWN0aW9uIG9mIEROUyB0cmFjIGlzIGNhdXNlZCBieSBcXFxcbWlzY29uZ3VyYXRpb24gYW5kIGZhdWx0eSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgbmFtZSBzZXJ2ZXJzXFxcIiBbIDUgXS5cIl0sXCIxNDk0OTQ2NDU0XCI6W1wiRm9sbG93aW5nIHRoZSBtZXRob2RvbG9neSBpbiBbIDUgXSwgd2UgZXN0aW1hdGUgdGhlIGxhdGVuY3kgb2YgZWFjaCByZXNvbHV0aW9uIGFzIHRoZSBzdW0gb2YgdGhlIGxhdGVuY2llcyBvZiBpdHMgQ2hvcmQgbG9va3VwcywgZWFjaCBvZiB3aGljaCBpcyB0aGUgc3VtIG9mIHRoZSBsYXRlbmNpZXMgb2YgaXRzIGhvcHMuXCJdLFwiMTU4ODg2ODA5OVwiOltcIlByZXZpb3VzIHdvcmsgWyAxICwgMTVdIHByb3Bvc2VzIGFsZ29yaXRobXMgZm9yIHJlc29sdmluZyBTRFNJIG5hbWVzIHVzaW5nIGEgZGlzdHJpYnV0ZWQgc2V0IG9mIGNlcnRpY2F0ZXMsIGJ1dCBkb2VzIG5vdCBhZGRyZXNzIHRoZSBwcmFjdGljYWwgY2hhbGxlbmdlcyBvZiBzdG9yaW5nIGFuZCBsb2NhdGluZyB0aG9zZSBjZXJ0aWNhdGVzLlwiXSxcIjE1OTIxNzgzNjdcIjpbXCJMaSBldCBhbC4gWyAxNSBdIHByb3Bvc2UgdGhhdCBtZW1iZXJzaGlwIGNoZWNraW5nIGNhbiBhZGFwdCBiZXR3ZWVuIGlzc3VlcnRvLXN1YmplY3QgYW5kIHN1YmplY3QtdG8taXNzdWVyIHNlYXJjaGVzIHRvIGF2b2lkIGxhcmdlIGJyYW5jaGluZyBmYWN0b3JzIGluIHRoZSBjZXJ0aWNhdGUgZ3JhcGguXFx1MDAxYlByZXZpb3VzIHdvcmsgWzEsICAxNSBdIHByb3Bvc2VzIGFsZ29yaXRobXMgZm9yIHJlc29sdmluZyBTRFNJIG5hbWVzIHVzaW5nIGEgZGlzdHJpYnV0ZWQgc2V0IG9mIGNlcnRpY2F0ZXMsIGJ1dCBkb2VzIG5vdCBhZGRyZXNzIHRoZSBwcmFjdGljYWwgY2hhbGxlbmdlcyBvZiBzdG9yaW5nIGFuZCBsb2NhdGluZyB0aG9zZSBjZXJ0aWNhdGVzLlwiXSxcIjE4MTkwMTAzMjZcIjpbXCJTRFNJIChTaW1wbGUgRGlzdHJpYnV0ZWQgU2VjdXJpdHkgSW5mcmFzdHJ1Y3R1cmUpIFsgMTkgXSBpcyBhIHByb3Bvc2VkIHB1YmxpYyBrZXkgaW5mcmFzdHJ1Y3R1cmUgdGhhdCBpcyBtb3JlIHBvd2VyZnVsIGFuZCBleGlibGUgdGhhbiBleGlzdGluZyBzeXN0ZW1zIGxpa2UgRE5TLUVYVCBbN10gYW5kIFguNTA5IFsxN10uXCJdLFwiMTg1OTEzMTk4OVwiOltcIlByaW5jaXBhbHMgZGVuZSBsb2NhbCBuYW1lcyB3aXRoIHR3byBraW5kcyBvZiBjcnlwdG9ncmFwaGljYWxseS1zaWduZWQgY2VydGljYXRlczogcmVkdWNpbmcgYW5kIG5vbi1yZWR1Y2luZyBbIDQgXS5cIl0sXCIxOTU3NTgyNTkwXCI6W1wiUGVlci10by1wZWVyIHN5c3RlbXMgWzYsICA4IF0gY29uZ3VyZSB0aGVtc2VsdmVzIHRvIHByb3ZpZGUgaW1tZW5zZSBzdG9yYWdlIGNhcGFjaXR5LCBoaWdoIHJlbGlhYmlsaXR5LCBiYWxhbmNlZCBsb2FkLCBhbmQgZWNpZW4gdCBsb29rdXBzLlwiXSxcIjIwMjA3NjU2NTJcIjpbXCJDb25DaG9yZCBsb2NhdGVzIGluZm9ybWF0aW9uIG9uIHNlcnZlcnMgdXNpbmcgQ2hvcmQgWzI5XSwgYSBkaXN0cmlidXRlZCBsb29rdXAgc3lzdGVtMiBiYXNlZCBvbiBjb25zaXN0ZW50IGhhc2hpbmcgWyAxNyBdLlwiXSxcIjIwNDQ1MzQzNThcIjpbXCJSZWNlbnQgc3lzdGVtcyBoYXZlIHNob3duIHRoZSBiZW5ldHMgdGhhdCBjYW4gYmUgcmVhcGVkIGZyb20gdmFyeWluZyB0aGUgbGV2ZWwgb2YgdXBkYXRlIGlzb2xhdGlvbiBhbmQgY29uc2lzdGVuY3kgdG8gc3VpdCBhcHBsaWNhdGlvbiBuZWVkcyBbIDEzICwgMjddLlwiXSxcIjIxMDE5MTUzOTFcIjpbXCJSZWNlbnQgc3lzdGVtcyBoYXZlIHNob3duIHRoZSBiZW5ldHMgdGhhdCBjYW4gYmUgcmVhcGVkIGZyb20gdmFyeWluZyB0aGUgbGV2ZWwgb2YgdXBkYXRlIGlzb2xhdGlvbiBhbmQgY29uc2lzdGVuY3kgdG8gc3VpdCBhcHBsaWNhdGlvbiBuZWVkcyBbMTMsICAyNyBdLlwiXSxcIjIxMDIzMzM1NjBcIjpbXCJXZSBldmFsdWF0ZSB0aGUgZWVjdGl2IGVuZXNzIG9mIG5hbWUgcmVzb2x1dGlvbiBzaGFyaW5nIHVzaW5nIGEgdHJhY2Ugb2YgMzAsMDAwIEROUyByZXF1ZXN0cyBjYXB0dXJlZCBhdCBNSVTigJlzIExhYm9yYXRvcnkgZm9yIENvbXB1dGVyIFNjaWVuY2UgWyAxNCBdLlxcdTAwMWJUaGlzIGlzIG5vdCBwYXJ0aWN1bGFybHkgc3VycHJpc2luZywgYXMgcHJleCBjYWNoaW5nIGlzIGFuYWxvZ291cyB0byBOUyByZWNvcmQgY2FjaGluZyBpbiBETlMgKHNob3duIHRvIGJlIHBhcnRpY3VsYXJseSBlZWN0aXYgZSBpbiBbIDE0IF0pLlwiXSxcIjIxMDQyMTA4OTRcIjpbXCJTZXZlcmFsIHBlZXItdG8tcGVlciBzdG9yYWdlIHN5c3RlbXMgaGF2ZSBiZWVuIHByb3Bvc2VkIHJlY2VudGx5IFs2LCA5LCAgMTggXSwgYnV0IG5vbmUgbWF0Y2ggZXhhY3RseSB3aXRoIENvbkNob3Jk4oCZcyBuZWVkcy5cXHUwMDFiT2NlYW5TdG9yZSBbIDE4IF0gcHJvdmlkZXMgcmVsaWFibGUgcGVlci10by1wZWVyIHN0b3JhZ2Ugd2l0aCBzdHJvbmcgY29uc2lzdGVuY3k7IGl0cyBndWFyYW50ZWVzIGV4Y2VlZCBDb25DaG9yZOKAmXMgbmVlZHMgYW5kIHJlcXVpcmUgaGlnaCBvdmVyaGVhZC5cIl0sXCIyMTI0MjYwNDE5XCI6W1wiUUNNIGFuZCBpdHMgc3VjY2Vzc29yLCBTRDMgWyAxMyBdLCB1c2UgYXV0aG9yaXRhdGl2ZSBzZXJ2ZXJzIHRvIGltcGxlbWVudCBkaXN0cmlidXRlZCByZXNvbHV0aW9uIG9mIFNEU0ktbGlrZSBuYW1lcyBhbmQgcmVseSBvbiBlbWJlZGRlZCBVUklzIG9yIElQcyB0byBtYXAgcHJpbmNpcGFscyB0byBzZXJ2ZXJzLlwiXSxcIjIxMzA2NTY0MjJcIjpbXCJTRFNJIGhhcyBiZWVuIGV4cGxvcmVkIGV4dGVuc2l2ZWx5IGJ5IHRoZSB0aGVvcnkgY29tbXVuaXR5IFsxLCA0LCAxNSwgIDE5IF0uXCJdLFwiMjEzNTMwMDYzOVwiOltcIlBHUCBbIDI0IF0gc3VwcG9ydHMgdXNlci1hdXRob3JpemVkIG5hbWVzIGFuZCB3ZWJzIG9mIHRydXN0LCBidXQgbm90IGxpbmtlZCBuYW1lc3BhY2VzIG9yIG5hbWVkIGdyb3Vwcy5cIl0sXCIyMTUwNjc2NTg2XCI6W1wiUGVlci10by1wZWVyIHN5c3RlbXMgWyA2ICwgOF0gY29uZ3VyZSB0aGVtc2VsdmVzIHRvIHByb3ZpZGUgaW1tZW5zZSBzdG9yYWdlIGNhcGFjaXR5LCBoaWdoIHJlbGlhYmlsaXR5LCBiYWxhbmNlZCBsb2FkLCBhbmQgZWNpZW4gdCBsb29rdXBzLlxcdTAwMWJDb25DaG9yZCB1c2VzIHRoZSBDaG9yZCBbMjJdIGxvb2t1cCBzeXN0ZW0sIHdpdGggc3RvcmFnZSBhbmQgY2FjaGluZyB0ZWNobmlxdWVzIGJhc2VkIG9uIHRoZSBDb29wZXJhdGl2ZSBGaWxlIFN5c3RlbSAoQ0ZTKSBbIDYgXS5cXHUwMDFiV2UgbWlnaHQgY29uc2lkZXIgdXNpbmcgQ0ZTLXN0eWxlIE1lcmtsZSB0cmVlcyB0byBkaXN0cmlidXRlIGxhcmdlIGRhdGEgc2V0cyBbIDYgXSwgYnV0IHN1Y2ggZGF0YSBzdHJ1Y3R1cmVzIGRvIG5vdCBzdXBwb3J0IGNvbmN1cnJlbnQgbW9kaWNhdGlvbiBieSBtdWx0aXBsZSBjbGllbnRzLlwiXSxcIjIxNjMwNTkxOTBcIjpbXCIyIENvbkNob3JkIGNvdWxkIGFsc28gdXNlIENBTiBbIDE4IF0sIFBhc3RyeVsyMF0sIG9yIFRhcGVzdHJ5WzIzXS5cIl0sXCIyMTcwNDk2MjQwXCI6W1wiUG9saWN5LU1ha2VyIFsgMyBdIGFuZCBLZXlub3RlIFsyXSBzdXBwb3J0IG1vcmUgZ2VuZXJhbCBwb2xpY2llcyB0aGFuIFNEU0ksIGJ1dCB0aGV5IGRvIG5vdCBzcGVjaWZ5IGEgd2F5IHRvIGxvY2F0ZSB0aGUgY2VydGljYXRlcyBuZWVkZWQgdG8gc2F0aXNmeSBhIHBhcnRpY3VsYXIgcG9saWN5LlwiXX0sXCJQUlwiOlsyMTY3ODk4NDE0LDIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTIzODIwODIwLDIxNTA2NzY1ODYsMTg1OTEzMTk4OSwyMDAwODc2MDIzLDIxMDQxMTI4NDksMjE2MzA1OTE5MCwyMTc0NTA3ODY5LDE0OTQ5NDY0NTQsMTk1Mzg4MjYxOSwyMTUzODU2MzE1LDIxNzA1NzMwMTIsMTY1MDY3NTUwOSwxNjUxNzUwMDQxLDE4NzEwNTUyNDMsMTk1NzU4MjU5MCwyMDcxOTU4NjU1LDIxMTAxNTg3OTIsMjE2Nzg5ODQxNCwyMTE4NDI4MTkzLDIxNTgwNDk4MjEsMjEyMzgyMDgyMCwyMTUwNjc2NTg2LDE4NTkxMzE5ODksMjAwMDg3NjAyMywyMTA0MTEyODQ5LDIxNjMwNTkxOTAsMjE3NDUwNzg2OSwxNDk0OTQ2NDU0LDE5NTM4ODI2MTksMjE1Mzg1NjMxNSwyMTcwNTczMDEyLDE2NTA2NzU1MDksMTY1MTc1MDA0MSwxODcxMDU1MjQzLDE5NTc1ODI1OTAsMjA3MTk1ODY1NSwyMTEwMTU4NzkyXSxcIkFORlwiOlt7XCJGTlwiOlwiU2FtZWVyXCIsXCJMTlwiOlwiQWptYW5pXCIsXCJTXCI6MX0se1wiRk5cIjpcIkR3YWluZSBFLlwiLFwiTE5cIjpcIkNsYXJrZVwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJDaHVhbmctSHVlXCIsXCJMTlwiOlwiTW9oXCIsXCJTXCI6M30se1wiRk5cIjpcIlN0ZXZlblwiLFwiTE5cIjpcIlJpY2htYW5cIixcIlNcIjo0fV0sXCJCVlwiOlwiaW50ZXJuYXRpb25hbCB3b3Jrc2hvcCBvbiBwZWVyIHRvIHBlZXIgc3lzdGVtc1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJTcHJpbmdlclwifSJ9LHsibG9ncHJvYiI6LTE4LjcwOSwia2VzRW50aXR5SWQiOjE2MDE2NjUyLCJJZCI6MjIyNzg5NTA3OSwiVGkiOiJhIGNvb3BlcmF0aXZlIGZpbGUgc3lzdGVtIiwiWSI6MjAwMSwiRCI6IjIwMDEtMDEtMDEiLCJDQyI6MTUsIlJJZCI6WzIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTY3ODk4NDE0LDE2NTA2NzU1MDksMjEwNDIxMDg5NCwyMDU2MzYzMzUzLDIxNzQ1MDc4NjksMjE0NDU1MzA3OCwxNjYzNDkzNjQ5LDIxMjM4MjA4MjAsMjAyMDc2NTY1MiwxOTc4ODg0NzU1LDIwMDA4NzYwMjMsMTUyNzk2MTY4MywxNTgwMDA0NDQwLDIxNTc3NDAwMjAsMjA1ODk3MjU4OSwyMTAzNjQ3NjI4LDc0NDQ5NDczLDIxMDQxMTI4NDksMjE1NjQzNTU0OSwxNTI4NTQ1ODk3LDMxOTkxNzUwNiwxNTc1MzA0NTM5LDIwMjg5Mjg5MjIsMTU2OTM5MDg5NiwyMDMzNTQyNjcsMjAyNDYyNzc4MiwxNDM5MjE3NjZdLCJBQSI6W3siQXVOIjoiZGFiZWsgZnJhbmsifV0sIkYiOlt7IkZOIjoic2VsZiBjZXJ0aWZ5aW5nIGZpbGUgc3lzdGVtIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGhhc2ggdGFibGUifSx7IkZOIjoiZmlsZSBzeXN0ZW0ifSx7IkZOIjoicGVlciB0byBwZWVyIn0seyJGTiI6ImxvYWQgYmFsYW5jaW5nIn0seyJGTiI6ImNvbXB1dGVyIGRhdGEgc3RvcmFnZSJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiZGF0YWJhc2UifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJBIGNvb3BlcmF0aXZlIGZpbGUgc3lzdGVtXCIsXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kc3BhY2UubWl0LmVkdS9oYW5kbGUvMTcyMS4xLzg2ODExP3Nob3c9ZnVsbFwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZHNwYWNlLm1pdC5lZHUvYml0c3RyZWFtLzE3MjEuMS84NjgxMS8yLzUxMzMyOTQ1LU1JVC5wZGZcIn1dLFwiVkZOXCI6XCJcIixcIlBSXCI6WzIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMTY1MDY3NTUwOSwyMzg1NzY1NTU3LDIxNjkwMTQ0MzQsMjEyMzgyMDgyMCwxOTczMzE0NDcwLDIzODE4NTU4OTEsMjEzMjE4MDk5MSwyODM2OTYwNDEwLDI1Mzg0Mjk5MzAsODY1OTMxMTExLDE5ODI3NDYzMzAsMjUzNzQ0MzE3OCwxOTg3MjIxMDY0LDIxNTk0NzkwMDUsMjE2Nzg5MDU2MiwyMTE3NTI4ODExLDIxMTg0MjgxOTMsMjE1ODA0OTgyMSwyMTYzMDU5MTkwLDIxNjc4OTg0MTQsMTY1MDY3NTUwOSwyMzg1NzY1NTU3LDIxNjkwMTQ0MzQsMjEyMzgyMDgyMCwxOTczMzE0NDcwLDIzODE4NTU4OTEsMjEzMjE4MDk5MSwyODM2OTYwNDEwLDI1Mzg0Mjk5MzAsODY1OTMxMTExLDE5ODI3NDYzMzAsMjUzNzQ0MzE3OCwxOTg3MjIxMDY0LDIxNTk0NzkwMDUsMjE2Nzg5MDU2MiwyMTE3NTI4ODExXSxcIkFORlwiOlt7XCJGTlwiOlwiRnJhbmtcIixcIkxOXCI6XCJEYWJla1wiLFwiU1wiOjF9XSxcIkJUXCI6XCJhXCIsXCJQQlwiOlwiTWFzc2FjaHVzZXR0cyBJbnN0aXR1dGUgb2YgVGVjaG5vbG9neVwifSJ9XX0=
    http_version: 
  recorded_at: Thu, 15 Nov 2018 16:35:20 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Id,Ti,AA.AuN,Y,D,F.FN,E,RId&count=50&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '491705'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Fri, 16 Nov 2018 15:43:23 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 16 Nov 2018 15:43:22 GMT
- request:
    method: get
    uri: http://api.semanticscholar.org/v1/paper/10.1109/TNET.2002.808407
    body:
      encoding: UTF-8
      string: ''
    headers:
      Accept:
      - application/json
      Connection:
      - close
      Host:
      - api.semanticscholar.org
      User-Agent:
      - http.rb/3.3.0
  response:
    status:
      code: 200
      message: OK
    headers:
      Access-Control-Allow-Origin:
      - "*"
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Nov 2018 15:43:25 GMT
      Server:
      - nginx/1.12.1
      Content-Length:
      - '685456'
      Connection:
      - Close
    body:
      encoding: ASCII-8BIT
      string: '{"arxivId":null,"authors":[{"authorId":"1716557","name":"Ion Stoica","url":"https://www.semanticscholar.org/author/1716557"},{"authorId":"2099495","name":"Robert
        Tappan Morris","url":"https://www.semanticscholar.org/author/2099495"},{"authorId":"2668437","name":"David
        Liben-Nowell","url":"https://www.semanticscholar.org/author/2668437"},{"authorId":"1743286","name":"David
        R. Karger","url":"https://www.semanticscholar.org/author/1743286"},{"authorId":"1681493","name":"M.
        Frans Kaashoek","url":"https://www.semanticscholar.org/author/1681493"},{"authorId":"1720563","name":"Frank
        Dabek","url":"https://www.semanticscholar.org/author/1720563"},{"authorId":"1712771","name":"Hari
        Balakrishnan","url":"https://www.semanticscholar.org/author/1712771"}],"citationVelocity":55,"citations":[{"arxivId":null,"authors":[{"authorId":"3122063","name":"Michael
        J. Freedman","url":"https://www.semanticscholar.org/author/3122063"},{"authorId":"1920780","name":"Karthik
        Lakshminarayanan","url":"https://www.semanticscholar.org/author/1920780"},{"authorId":"2506126","name":"David
        Mazi\u00e8res","url":"https://www.semanticscholar.org/author/2506126"}],"doi":null,"isInfluential":false,"paperId":"134decd1c4f284be6d0259f208df74514c76e85c","title":"OASIS:
        Anycast for Any Service","url":"https://www.semanticscholar.org/paper/134decd1c4f284be6d0259f208df74514c76e85c","venue":"NSDI","year":2006},{"arxivId":null,"authors":[{"authorId":"2293563","name":"Matthew
        J. Rutherford","url":"https://www.semanticscholar.org/author/2293563"},{"authorId":"1807579","name":"Antonio
        Carzaniga","url":"https://www.semanticscholar.org/author/1807579"},{"authorId":"1724083","name":"Alexander
        L. Wolf","url":"https://www.semanticscholar.org/author/1724083"}],"doi":"10.1109/TSE.2008.33","isInfluential":false,"paperId":"36407e766ea999ccea9d5e350f4e1813f0618029","title":"Evaluating
        Test Suites and Adequacy Criteria Using Simulation-Based Models of Distributed
        Systems","url":"https://www.semanticscholar.org/paper/36407e766ea999ccea9d5e350f4e1813f0618029","venue":"IEEE
        Transactions on Software Engineering","year":2008},{"arxivId":null,"authors":[{"authorId":null,"name":"SUBY
        MARIA JACOB","url":null}],"doi":null,"isInfluential":false,"paperId":"1cf892c0884c8d5c35d973272466444b3e94f8fe","title":"Efficient
        Load Balancing in Peer-to-peer Systems Using Virtual Servers","url":"https://www.semanticscholar.org/paper/1cf892c0884c8d5c35d973272466444b3e94f8fe","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":null,"name":"Dr.
        S. Janakiraman","url":null}],"doi":null,"isInfluential":false,"paperId":"f7c626600ff053d9070d79591e0e551ad81b41eb","title":"Fashionable
        and Effectual Collective Area Setup in Node-to-Node Message","url":"https://www.semanticscholar.org/paper/f7c626600ff053d9070d79591e0e551ad81b41eb","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"34777450","name":"Spyros
        Voulgaris","url":"https://www.semanticscholar.org/author/34777450"},{"authorId":"1723641","name":"M\u00e1rk
        Jelasity","url":"https://www.semanticscholar.org/author/1723641"},{"authorId":"2571410","name":"Maarten
        van Steen","url":"https://www.semanticscholar.org/author/2571410"}],"doi":"10.1007/978-3-540-25840-7_6","isInfluential":false,"paperId":"240e3d36cd210a10f3468d5793e9913cf2197d64","title":"A
        Robust and Scalable Peer-to-Peer Gossiping Protocol","url":"https://www.semanticscholar.org/paper/240e3d36cd210a10f3468d5793e9913cf2197d64","venue":"AP2PC","year":2003},{"arxivId":null,"authors":[{"authorId":"2590470","name":"Won
        Jong Jeon","url":"https://www.semanticscholar.org/author/2590470"}],"doi":null,"isInfluential":false,"paperId":"0aede160867be5fdbd9e348b4f1f14738bebc5cb","title":"Optimization
        Strategies for Qos-sensitive Vod Service Delivery in Cooperative Environments","url":"https://www.semanticscholar.org/paper/0aede160867be5fdbd9e348b4f1f14738bebc5cb","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"38561978","name":"Tao
        Guo","url":"https://www.semanticscholar.org/author/38561978"},{"authorId":"50177289","name":"Xu
        Zhou","url":"https://www.semanticscholar.org/author/50177289"},{"authorId":"1711948","name":"Hui
        Tang","url":"https://www.semanticscholar.org/author/1711948"},{"authorId":"2103838","name":"Zexu
        Wu","url":"https://www.semanticscholar.org/author/2103838"}],"doi":null,"isInfluential":false,"paperId":"2380ce17037949f656eda6c60389a6d1e188c399","title":"A
        Peer Selection Algorithm with Consideration of Both Network Topology Information
        and Node Capability in P2P Network","url":"https://www.semanticscholar.org/paper/2380ce17037949f656eda6c60389a6d1e188c399","venue":"2010
        International Conference on Intelligent Computation Technology and Automation","year":2010},{"arxivId":null,"authors":[{"authorId":"9496434","name":"S.
        Suthir","url":"https://www.semanticscholar.org/author/9496434"},{"authorId":"46336687","name":"Siva
        Janakiraman","url":"https://www.semanticscholar.org/author/46336687"}],"doi":null,"isInfluential":false,"paperId":"de55df8f9876afa19c47e8a2469af2c21a5ec0de","title":"Contemporary
        and efficient shared area network in Peer-to-Peer Communication","url":"https://www.semanticscholar.org/paper/de55df8f9876afa19c47e8a2469af2c21a5ec0de","venue":"2012
        International Conference on Radar, Communication and Computing (ICRCC)","year":2012},{"arxivId":null,"authors":[{"authorId":null,"name":"rkki
        Harjulaa","url":null},{"authorId":null,"name":"Andrei Gurtovb","url":null},{"authorId":null,"name":"Timo
        Koskelad","url":null},{"authorId":null,"name":"Timo Ojalad","url":null},{"authorId":null,"name":"Mika
        Ylianttilaa","url":null}],"doi":null,"isInfluential":false,"paperId":"cfcac430e40f145c3f0807afd95bd3c5979d4a87","title":"nergy-aware
        load monitoring for improving battery life of mobile eer-to-peer nodes","url":"https://www.semanticscholar.org/paper/cfcac430e40f145c3f0807afd95bd3c5979d4a87","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"1942437","name":"Juncheng
        Huang","url":"https://www.semanticscholar.org/author/1942437"},{"authorId":"1767916","name":"Xiuqi
        Li","url":"https://www.semanticscholar.org/author/1767916"},{"authorId":"49388033","name":"Jie
        Wu","url":"https://www.semanticscholar.org/author/49388033"}],"doi":"10.1109/AINA.2007.8","isInfluential":false,"paperId":"e30c2cdd2e2754eccb38bced816a60f1ad821363","title":"A
        Class-Based Search System in Unstructured P2P Networks","url":"https://www.semanticscholar.org/paper/e30c2cdd2e2754eccb38bced816a60f1ad821363","venue":"21st
        International Conference on Advanced Information Networking and Applications
        (AINA ''07)","year":2007},{"arxivId":null,"authors":[{"authorId":"1891472","name":"Stefano
        Arteconi","url":"https://www.semanticscholar.org/author/1891472"}],"doi":null,"isInfluential":false,"paperId":"85b1e4a6e42d27031975a0559f885b443b7ea8eb","title":"Evolutionary
        methods for self-organizing cooperation in peer-to-peer networks","url":"https://www.semanticscholar.org/paper/85b1e4a6e42d27031975a0559f885b443b7ea8eb","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"},{"authorId":"1715494","name":"Raouf
        Boutaba","url":"https://www.semanticscholar.org/author/1715494"}],"doi":"10.1145/1514070.1514081","isInfluential":true,"paperId":"0803a4cc23679f82df167e7a43d673a9d6bf18e9","title":"Plexus:
        A Scalable Peer-to-Peer Protocol Enabling Efficient Subset Search","url":"https://www.semanticscholar.org/paper/0803a4cc23679f82df167e7a43d673a9d6bf18e9","venue":"IEEE/ACM
        Transactions on Networking","year":2009},{"arxivId":null,"authors":[{"authorId":"35110341","name":"Alireza
        Goudarzi Nemati","url":"https://www.semanticscholar.org/author/35110341"},{"authorId":"1686798","name":"Tomoya
        Enokido","url":"https://www.semanticscholar.org/author/1686798"},{"authorId":"1682893","name":"Makoto
        Takizawa","url":"https://www.semanticscholar.org/author/1682893"}],"doi":"10.1007/978-3-540-85693-1_14","isInfluential":false,"paperId":"25c5af9cd7156d9f985ca76f576614b73d56e314","title":"A
        Multi-Source Streaming Model for Mobile Peer-to-Peer (P2P) Overlay Networks","url":"https://www.semanticscholar.org/paper/25c5af9cd7156d9f985ca76f576614b73d56e314","venue":"2008
        The 28th International Conference on Distributed Computing Systems Workshops","year":2008},{"arxivId":null,"authors":[{"authorId":"2585380","name":"Luong
        Quy Tho","url":"https://www.semanticscholar.org/author/2585380"},{"authorId":"39855157","name":"Ha
        Quoc Trung","url":"https://www.semanticscholar.org/author/39855157"}],"doi":"10.1145/2542050.2542090","isInfluential":false,"paperId":"5796e0331cc71a12289e000872fa5a9003dcf44a","title":"P2P
        shared-caching model: using P2P to improve client-server application performance","url":"https://www.semanticscholar.org/paper/5796e0331cc71a12289e000872fa5a9003dcf44a","venue":"SoICT","year":2013},{"arxivId":null,"authors":[{"authorId":"1808982","name":"Georgios
        Exarchakos","url":"https://www.semanticscholar.org/author/1808982"},{"authorId":"1805514","name":"Nick
        Antonopoulos","url":"https://www.semanticscholar.org/author/1805514"},{"authorId":"38057896","name":"James
        Salter","url":"https://www.semanticscholar.org/author/38057896"}],"doi":"10.1108/10662240710730461","isInfluential":true,"paperId":"5ca0327f0bbea0e6d2e980010eb0eec9bbc8dbe5","title":"G-ROME:
        semantic-driven capacity sharing among P2P networks","url":"https://www.semanticscholar.org/paper/5ca0327f0bbea0e6d2e980010eb0eec9bbc8dbe5","venue":"Internet
        Research","year":2007},{"arxivId":null,"authors":[{"authorId":"1701288","name":"Yufeng
        Wang","url":"https://www.semanticscholar.org/author/1701288"},{"authorId":"48569526","name":"Xiangming
        Li","url":"https://www.semanticscholar.org/author/48569526"},{"authorId":"1732279","name":"Qun
        Jin","url":"https://www.semanticscholar.org/author/1732279"},{"authorId":"1695160","name":"Jianhua
        Ma","url":"https://www.semanticscholar.org/author/1695160"}],"doi":"10.1109/UIC-ATC.2012.158","isInfluential":false,"paperId":"96b434224f90ac83e39370e6fb7903dc85a49b17","title":"AB-Chord:
        An Efficient Approach for Resource Location in Structured P2P Networks","url":"https://www.semanticscholar.org/paper/96b434224f90ac83e39370e6fb7903dc85a49b17","venue":"2012
        9th International Conference on Ubiquitous Intelligence and Computing and
        9th International Conference on Autonomic and Trusted Computing","year":2012},{"arxivId":null,"authors":[{"authorId":"2353933","name":"Guido
        Urdaneta","url":"https://www.semanticscholar.org/author/2353933"},{"authorId":"2900810","name":"Guillaume
        Pierre","url":"https://www.semanticscholar.org/author/2900810"},{"authorId":"2571410","name":"Maarten
        van Steen","url":"https://www.semanticscholar.org/author/2571410"}],"doi":null,"isInfluential":false,"paperId":"7b7ea649fef9b18e103f6af80fbfb12a1265744e","title":"A
        Decentralized Wiki Engine for Collaborative Wikipedia Hosting","url":"https://www.semanticscholar.org/paper/7b7ea649fef9b18e103f6af80fbfb12a1265744e","venue":"WEBIST","year":2007},{"arxivId":null,"authors":[{"authorId":"20467457","name":"Vitor
        Barbosa C. Souza","url":"https://www.semanticscholar.org/author/20467457"},{"authorId":"21699580","name":"Xavi
        Masip-Bruin","url":"https://www.semanticscholar.org/author/21699580"},{"authorId":"2078453","name":"Eva
        Mar\u00edn-Tordera","url":"https://www.semanticscholar.org/author/2078453"},{"authorId":"2028623","name":"Wilson
        Ram\u00edrez","url":"https://www.semanticscholar.org/author/2028623"},{"authorId":"2539771","name":"Sergio
        S\u00e1nchez-L\u00f3pez","url":"https://www.semanticscholar.org/author/2539771"}],"doi":null,"isInfluential":true,"paperId":"4e59f67af46a9ade8f3b8dbcc02ad175f2b4b4f4","title":"Towards
        the scalability of a service-oriented PCE architecture for IoT scenarios","url":"https://www.semanticscholar.org/paper/4e59f67af46a9ade8f3b8dbcc02ad175f2b4b4f4","venue":"2015
        20th European Conference on Networks and Optical Communications - (NOC)","year":2015},{"arxivId":null,"authors":[{"authorId":null,"name":"Kedem","url":null},{"authorId":"1794452","name":"Daniel
        C. Sturman","url":"https://www.semanticscholar.org/author/1794452"}],"doi":null,"isInfluential":false,"paperId":"79c86d30cf26c7abcfa51ac70f756ceeb181391f","title":"Distribution
        of Route-Impacting Control Information in a Publish / Subscribe System with
        Delivery Guarantees by","url":"https://www.semanticscholar.org/paper/79c86d30cf26c7abcfa51ac70f756ceeb181391f","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"1729141","name":"Hanh
        Le","url":"https://www.semanticscholar.org/author/1729141"},{"authorId":"1709615","name":"Doan
        B. Hoang","url":"https://www.semanticscholar.org/author/1709615"},{"authorId":"2042654","name":"Andrew
        James Simmonds","url":"https://www.semanticscholar.org/author/2042654"}],"doi":"10.1109/ICC.2005.1494607","isInfluential":false,"paperId":"a4789d38cdfa461858c0ba01d0eca3b2d26def3b","title":"A
        self-organising model for topology-aware overlay formation","url":"https://www.semanticscholar.org/paper/a4789d38cdfa461858c0ba01d0eca3b2d26def3b","venue":"IEEE
        International Conference on Communications, 2005. ICC 2005. 2005","year":2005},{"arxivId":null,"authors":[{"authorId":"2293563","name":"Matthew
        J. Rutherford","url":"https://www.semanticscholar.org/author/2293563"}],"doi":null,"isInfluential":false,"paperId":"06164c3f4131f21bf9d4c6baa0f98b5012712c8a","title":"Adequate
        System-Level Testing of Distributed Systems","url":"https://www.semanticscholar.org/paper/06164c3f4131f21bf9d4c6baa0f98b5012712c8a","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"35209532","name":"Mohammad
        Reza Selim","url":"https://www.semanticscholar.org/author/35209532"},{"authorId":"1686125","name":"Yuichi
        Goto","url":"https://www.semanticscholar.org/author/1686125"},{"authorId":"1722402","name":"Jingde
        Cheng","url":"https://www.semanticscholar.org/author/1722402"}],"doi":"10.1109/SSIRI.2008.51","isInfluential":false,"paperId":"9362f3b0b3c70a7d462f2647f1178908d1342c76","title":"Ensuring
        Reliability and Availability of Soft System Bus","url":"https://www.semanticscholar.org/paper/9362f3b0b3c70a7d462f2647f1178908d1342c76","venue":"2008
        Second International Conference on Secure System Integration and Reliability
        Improvement","year":2008},{"arxivId":null,"authors":[{"authorId":"48167160","name":"Mohammad
        A. Khan","url":"https://www.semanticscholar.org/author/48167160"},{"authorId":"2163538","name":"Laurent
        Yeh","url":"https://www.semanticscholar.org/author/2163538"},{"authorId":"1734676","name":"Karine
        Zeitouni","url":"https://www.semanticscholar.org/author/1734676"},{"authorId":"1690806","name":"Cristian
        Borcea","url":"https://www.semanticscholar.org/author/1690806"}],"doi":"10.1007/s12083-016-0450-7","isInfluential":true,"paperId":"5796ff6ff0f1882a5a61828dd70c4ed562d02a18","title":"MobiStore:
        A system for efficient mobile P2P data sharing","url":"https://www.semanticscholar.org/paper/5796ff6ff0f1882a5a61828dd70c4ed562d02a18","venue":"Peer-to-Peer
        Networking and Applications","year":2017},{"arxivId":null,"authors":[{"authorId":"50125435","name":"Siddhartha
        Annapureddy","url":"https://www.semanticscholar.org/author/50125435"},{"authorId":"3122063","name":"Michael
        J. Freedman","url":"https://www.semanticscholar.org/author/3122063"},{"authorId":"2506126","name":"David
        Mazi\u00e8res","url":"https://www.semanticscholar.org/author/2506126"}],"doi":null,"isInfluential":true,"paperId":"0332fccafab1171c649ec4ba9be4ab9a469a6b13","title":"Shark:
        Scaling File Servers via Cooperative Caching","url":"https://www.semanticscholar.org/paper/0332fccafab1171c649ec4ba9be4ab9a469a6b13","venue":"NSDI","year":2005},{"arxivId":null,"authors":[{"authorId":"1908353","name":"Yiming
        Zhang","url":"https://www.semanticscholar.org/author/1908353"},{"authorId":"7828826","name":"Xicheng
        Lu","url":"https://www.semanticscholar.org/author/7828826"},{"authorId":"1718853","name":"Dongsheng
        Li","url":"https://www.semanticscholar.org/author/1718853"}],"doi":"10.1007/s11432-010-0034-8","isInfluential":false,"paperId":"9f98189160ec99fde5bdfb4ef5ea4154fdba7f74","title":"Embedded
        DHT overlays in virtual computing environments","url":"https://www.semanticscholar.org/paper/9f98189160ec99fde5bdfb4ef5ea4154fdba7f74","venue":"Science
        China Information Sciences","year":2010},{"arxivId":null,"authors":[{"authorId":"1813870","name":"Ivan
        Seskar","url":"https://www.semanticscholar.org/author/1813870"},{"authorId":"21583682","name":"Kiran
        Nagaraja","url":"https://www.semanticscholar.org/author/21583682"},{"authorId":"26636742","name":"Samuel
        C. Nelson","url":"https://www.semanticscholar.org/author/26636742"},{"authorId":"1690964","name":"Dipankar
        Raychaudhuri","url":"https://www.semanticscholar.org/author/1690964"}],"doi":"10.1145/2089016.2089017","isInfluential":false,"paperId":"0a2727ead92607d7e3d805443485ba042b40158c","title":"MobilityFirst
        future internet architecture project","url":"https://www.semanticscholar.org/paper/0a2727ead92607d7e3d805443485ba042b40158c","venue":"AINTEC","year":2011},{"arxivId":null,"authors":[{"authorId":"1851167","name":"Chow-Sing
        Lin","url":"https://www.semanticscholar.org/author/1851167"},{"authorId":"3124007","name":"Jhe-Wei
        Lin","url":"https://www.semanticscholar.org/author/3124007"}],"doi":"10.1007/s11042-014-2341-3","isInfluential":false,"paperId":"663fee26579a8b187c24302501363e79cdb5693b","title":"Service
        availability of a peer with dynamic buffering for multiple description coded
        videos on multi-source streaming networks","url":"https://www.semanticscholar.org/paper/663fee26579a8b187c24302501363e79cdb5693b","venue":"Multimedia
        Tools and Applications","year":2014},{"arxivId":null,"authors":[{"authorId":"1926839","name":"Diko
        Ko","url":"https://www.semanticscholar.org/author/1926839"},{"authorId":"2377986","name":"Kideok
        Cho","url":"https://www.semanticscholar.org/author/2377986"},{"authorId":"3108786","name":"Munyoung
        Lee","url":"https://www.semanticscholar.org/author/3108786"},{"authorId":"49717989","name":"Hyunchul
        Kim","url":"https://www.semanticscholar.org/author/49717989"},{"authorId":"1688374","name":"Ted
        Taekyoung Kwon","url":"https://www.semanticscholar.org/author/1688374"},{"authorId":"1729048","name":"Yanghee
        Choi","url":"https://www.semanticscholar.org/author/1729048"}],"doi":"10.1145/1853079.1853086","isInfluential":false,"paperId":"e1cf34e02c26aac03640fc900d96d734fad67f76","title":"Decentralized
        and autonomous content overlay networking (DACON) with WiFi access points","url":"https://www.semanticscholar.org/paper/e1cf34e02c26aac03640fc900d96d734fad67f76","venue":"CFI","year":2010},{"arxivId":null,"authors":[{"authorId":"38427436","name":"Eugen
        Feller","url":"https://www.semanticscholar.org/author/38427436"}],"doi":null,"isInfluential":false,"paperId":"01dd3e5ed075daaa643ca2af3df325358b464230","title":"Autonomic
        and Energy-Efficient Management of Large-Scale Virtualized Data Centers. (Gestion
        autonome et \u00e9conomique en \u00e9nergie des grands centres de donn\u00e9es
        virtualis\u00e9s)","url":"https://www.semanticscholar.org/paper/01dd3e5ed075daaa643ca2af3df325358b464230","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"39063556","name":"Qi
        Zhong","url":"https://www.semanticscholar.org/author/39063556"},{"authorId":"1679472","name":"Iosif
        Lazaridis","url":"https://www.semanticscholar.org/author/1679472"},{"authorId":"1803905","name":"Mayur
        Deshpande","url":"https://www.semanticscholar.org/author/1803905"},{"authorId":"49673312","name":"Chen
        Li","url":"https://www.semanticscholar.org/author/49673312"},{"authorId":"1686199","name":"Sharad
        Mehrotra","url":"https://www.semanticscholar.org/author/1686199"},{"authorId":"38818938","name":"Hal
        S. Stern","url":"https://www.semanticscholar.org/author/38818938"}],"doi":null,"isInfluential":false,"paperId":"531fe054e5140f553465738137fa5d946f58f89d","title":"Supporting
        Approximate Similarity Queries with Quality Guarantees in P2P Systems","url":"https://www.semanticscholar.org/paper/531fe054e5140f553465738137fa5d946f58f89d","venue":"COMAD","year":2006},{"arxivId":null,"authors":[{"authorId":"30593235","name":"Xiao-xiang
        Luo","url":"https://www.semanticscholar.org/author/30593235"},{"authorId":"30868122","name":"Mei-na
        Song","url":"https://www.semanticscholar.org/author/30868122"},{"authorId":"9305105","name":"Jun-de
        Song","url":"https://www.semanticscholar.org/author/9305105"}],"doi":null,"isInfluential":false,"paperId":"cdf049144926d0050d67bdddeb43c1d0aea055b4","title":"P2P
        based service platform for E-education","url":"https://www.semanticscholar.org/paper/cdf049144926d0050d67bdddeb43c1d0aea055b4","venue":"2009
        IEEE International Symposium on IT in Medicine & Education","year":2009},{"arxivId":null,"authors":[{"authorId":"2498193","name":"Lada-On
        Lertsuwanakul","url":"https://www.semanticscholar.org/author/2498193"},{"authorId":"9210973","name":"Sopida
        Tuammee","url":"https://www.semanticscholar.org/author/9210973"},{"authorId":"48367393","name":"H.
        Unger","url":"https://www.semanticscholar.org/author/48367393"}],"doi":null,"isInfluential":false,"paperId":"08ae2e72f8b0d25fd4c149b531583371e16f7669","title":"Routing
        with Temperature Field in Mesh Overlay Network","url":"https://www.semanticscholar.org/paper/08ae2e72f8b0d25fd4c149b531583371e16f7669","venue":"2010
        Ninth International Conference on Networks","year":2010},{"arxivId":null,"authors":[{"authorId":"50296462","name":"Tianxiao
        Ma","url":"https://www.semanticscholar.org/author/50296462"},{"authorId":"34335356","name":"Jun
        Huang","url":"https://www.semanticscholar.org/author/34335356"},{"authorId":"49553221","name":"Gang
        Wu","url":"https://www.semanticscholar.org/author/49553221"}],"doi":null,"isInfluential":false,"paperId":"382e6e48936fc320e970635b02644aa20828ec99","title":"An
        Architecture and Supporting Environment of Service-Oriented Computing Based-on
        Context Awareness","url":"https://www.semanticscholar.org/paper/382e6e48936fc320e970635b02644aa20828ec99","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"2532380","name":"Abdul
        Khalique Shaikh","url":"https://www.semanticscholar.org/author/2532380"},{"authorId":"2107088","name":"Saadat
        M. Alhashmi","url":"https://www.semanticscholar.org/author/2107088"},{"authorId":"3243800","name":"Rajendran
        Parthiban","url":"https://www.semanticscholar.org/author/3243800"}],"doi":null,"isInfluential":true,"paperId":"0d07b3b88bdd46d29dd5ed3ddd25d2c36d81c743","title":"A
        Novel Optimization Model Based on the Unification of Proximity and Semantic
        Similarity in Grid Computing Authors","url":"https://www.semanticscholar.org/paper/0d07b3b88bdd46d29dd5ed3ddd25d2c36d81c743","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"2041269","name":"Hojjat
        Jafarpour","url":"https://www.semanticscholar.org/author/2041269"},{"authorId":"1686199","name":"Sharad
        Mehrotra","url":"https://www.semanticscholar.org/author/1686199"},{"authorId":"1732742","name":"Nalini
        Venkatasubramanian","url":"https://www.semanticscholar.org/author/1732742"}],"doi":"10.1109/NCA.2008.51","isInfluential":false,"paperId":"24bb63d20b30f645c5a02cdb854c942b6cb11b8b","title":"A
        Fast and Robust Content-based Publish/Subscribe Architecture","url":"https://www.semanticscholar.org/paper/24bb63d20b30f645c5a02cdb854c942b6cb11b8b","venue":"2008
        Seventh IEEE International Symposium on Network Computing and Applications","year":2008},{"arxivId":null,"authors":[{"authorId":"48065491","name":"Jeroen
        Famaey","url":"https://www.semanticscholar.org/author/48065491"},{"authorId":"1715957","name":"Filip
        De Turck","url":"https://www.semanticscholar.org/author/1715957"}],"doi":"10.1002/nem.1813","isInfluential":true,"paperId":"6694d5448e08099ac93e189af9f8793e91397136","title":"Federated
        management of the Future Internet: status and challenges","url":"https://www.semanticscholar.org/paper/6694d5448e08099ac93e189af9f8793e91397136","venue":"Int.
        Journal of Network Management","year":2012},{"arxivId":null,"authors":[{"authorId":"1749419","name":"Marc
        S\u00e1nchez Artigas","url":"https://www.semanticscholar.org/author/1749419"},{"authorId":"1695568","name":"Pedro
        Garc\u00eda L\u00f3pez","url":"https://www.semanticscholar.org/author/1695568"},{"authorId":"1742526","name":"Antonio
        F. G\u00f3mez-Skarmeta","url":"https://www.semanticscholar.org/author/1742526"}],"doi":"10.1109/ISCC.2008.4625618","isInfluential":false,"paperId":"59f876bb2262614b83eb799922f108a4972cb31f","title":"Bypass:
        Providing secure DHT routing through bypassing malicious peers","url":"https://www.semanticscholar.org/paper/59f876bb2262614b83eb799922f108a4972cb31f","venue":"2008
        IEEE Symposium on Computers and Communications","year":2008},{"arxivId":null,"authors":[{"authorId":"1748684","name":"Josef
        Kittler","url":"https://www.semanticscholar.org/author/1748684"},{"authorId":"1715227","name":"Alfred
        Kobsa","url":"https://www.semanticscholar.org/author/1715227"},{"authorId":"1693267","name":"Moni
        Naor","url":"https://www.semanticscholar.org/author/1693267"}],"doi":"10.1007/978-3-642-29740-3","isInfluential":false,"paperId":"7ce78b22dcdf7d145058113fb181a5e07362f123","title":"Euro-Par
        2011: Parallel Processing Workshops","url":"https://www.semanticscholar.org/paper/7ce78b22dcdf7d145058113fb181a5e07362f123","venue":"Lecture
        Notes in Computer Science","year":2011},{"arxivId":null,"authors":[{"authorId":"1825552","name":"Taoufik
        Yeferny","url":"https://www.semanticscholar.org/author/1825552"},{"authorId":"2987735","name":"Khedija
        Arour","url":"https://www.semanticscholar.org/author/2987735"},{"authorId":"1695916","name":"Amel
        Bouzeghoub","url":"https://www.semanticscholar.org/author/1695916"}],"doi":null,"isInfluential":false,"paperId":"f07540d383d086bc48228ec12bc76e4dee51d195","title":"An
        Efficient Learning Query Routing Method for Unstructured P 2 P Systems","url":"https://www.semanticscholar.org/paper/f07540d383d086bc48228ec12bc76e4dee51d195","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"3185678","name":"Maysam
        Yabandeh","url":"https://www.semanticscholar.org/author/3185678"},{"authorId":"1958305","name":"Abhishek
        Anand","url":"https://www.semanticscholar.org/author/1958305"},{"authorId":"1709876","name":"Marco
        Canini","url":"https://www.semanticscholar.org/author/1709876"},{"authorId":"1736741","name":"Dejan
        Kostic","url":"https://www.semanticscholar.org/author/1736741"}],"doi":null,"isInfluential":true,"paperId":"7072c3165128ff5484ef77d586eae885d13f68a5","title":"Almost-Invariants
        : From Bugs in Distributed Systems to Invariants EPFL Technical Report NSL-REPORT-2009-007","url":"https://www.semanticscholar.org/paper/7072c3165128ff5484ef77d586eae885d13f68a5","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"3412803","name":"Rebeca
        Schroeder Freitas","url":"https://www.semanticscholar.org/author/3412803"}],"doi":null,"isInfluential":false,"paperId":"789e6e3f0369c652fa0ed7e2e20895924dcca0db","title":"Uma
        abordagem para o particionamento de dados na nuvem baseada em rela\u00e7\u00f5es
        de afinidade em grafos","url":"https://www.semanticscholar.org/paper/789e6e3f0369c652fa0ed7e2e20895924dcca0db","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"2662695","name":"Christian
        Lochert","url":"https://www.semanticscholar.org/author/2662695"},{"authorId":"1773337","name":"Jedrzej
        Rybicki","url":"https://www.semanticscholar.org/author/1773337"},{"authorId":"1776439","name":"Bj\u00f6rn
        Scheuermann","url":"https://www.semanticscholar.org/author/1776439"},{"authorId":"1751862","name":"Martin
        Mauve","url":"https://www.semanticscholar.org/author/1751862"}],"doi":"10.1524/itit.2008.0490","isInfluential":true,"paperId":"bfcc07c8a566b1c848b674474f7b277de596f126","title":"Scalable
        Data Dissemination for Inter-Vehicle-Communication: Aggregation versus Peer-to-Peer
        (Skalierbare Informationsverbreitung f\u00fcr die Fahrzeug-Fahrzeug-Kommunikation:
        Aggregation versus Peer-to-Peer)","url":"https://www.semanticscholar.org/paper/bfcc07c8a566b1c848b674474f7b277de596f126","venue":"it
        - Information Technology","year":2008},{"arxivId":null,"authors":[{"authorId":"1745880","name":"Stefan
        Siersdorfer","url":"https://www.semanticscholar.org/author/1745880"},{"authorId":"1704989","name":"Sergej
        Sizov","url":"https://www.semanticscholar.org/author/1704989"}],"doi":"10.1145/1402256.1402261","isInfluential":true,"paperId":"127b72feb0badd817e3d432c877b78134d9003cf","title":"Meta
        methods for model sharing in personal information systems","url":"https://www.semanticscholar.org/paper/127b72feb0badd817e3d432c877b78134d9003cf","venue":"ACM
        Trans. Inf. Syst.","year":2008},{"arxivId":null,"authors":[{"authorId":"1690964","name":"Dipankar
        Raychaudhuri","url":"https://www.semanticscholar.org/author/1690964"},{"authorId":"21583682","name":"Kiran
        Nagaraja","url":"https://www.semanticscholar.org/author/21583682"},{"authorId":"1727749","name":"Arun
        Venkataramani","url":"https://www.semanticscholar.org/author/1727749"}],"doi":"10.1145/2412096.2412098","isInfluential":false,"paperId":"256d2e36f5463229a9f1fe648b4da09fcf8fd161","title":"MobilityFirst:
        a robust and trustworthy mobility-centric architecture for the future internet","url":"https://www.semanticscholar.org/paper/256d2e36f5463229a9f1fe648b4da09fcf8fd161","venue":"Mobile
        Computing and Communications Review","year":2012},{"arxivId":null,"authors":[{"authorId":"2858705","name":"Juan
        \u00c1lvaro Mu\u00f1oz Naranjo","url":"https://www.semanticscholar.org/author/2858705"},{"authorId":"2691895","name":"Fernando
        Cores","url":"https://www.semanticscholar.org/author/2691895"},{"authorId":"1775423","name":"Leocadio
        G. Casado","url":"https://www.semanticscholar.org/author/1775423"},{"authorId":"2240918","name":"Fernando
        Guirado","url":"https://www.semanticscholar.org/author/2240918"}],"doi":"10.1007/s11227-012-0842-2","isInfluential":false,"paperId":"59e6b9ab907eedbbf3f0fc424f6b0bfae5ae1fa6","title":"Fully
        distributed authentication with locality exploitation for the CoDiP2P peer-to-peer
        computing platform","url":"https://www.semanticscholar.org/paper/59e6b9ab907eedbbf3f0fc424f6b0bfae5ae1fa6","venue":"The
        Journal of Supercomputing","year":2012},{"arxivId":null,"authors":[{"authorId":"37376558","name":"Rohit
        Gupta","url":"https://www.semanticscholar.org/author/37376558"},{"authorId":"1683734","name":"Arun
        K. Somani","url":"https://www.semanticscholar.org/author/1683734"}],"doi":null,"isInfluential":false,"paperId":"917f29e0cb794deb1ac1dbf03dc143576b4b75c9","title":"CompuP
        2 P : An Architecture for Sharing of Computing Resources In Peer-to-Peer Networks
        With Selfish Nodes","url":"https://www.semanticscholar.org/paper/917f29e0cb794deb1ac1dbf03dc143576b4b75c9","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"1802237","name":"Keivan
        Ronasi","url":"https://www.semanticscholar.org/author/1802237"},{"authorId":"1681418","name":"Mohammad
        Hamed Firooz","url":"https://www.semanticscholar.org/author/1681418"},{"authorId":"1753497","name":"Mohammad
        Reza Pakravan","url":"https://www.semanticscholar.org/author/1753497"},{"authorId":"1739360","name":"Alireza
        Nasiri Avanaki","url":"https://www.semanticscholar.org/author/1739360"}],"doi":"10.1109/ICDCSW.2007.21","isInfluential":false,"paperId":"1c5404fc5ad0591eccdfb35ed008df896dcf4743","title":"An
        Enhanced Random-walk Method for Content Locating in P2P Networks","url":"https://www.semanticscholar.org/paper/1c5404fc5ad0591eccdfb35ed008df896dcf4743","venue":"27th
        International Conference on Distributed Computing Systems Workshops (ICDCSW''07)","year":2007},{"arxivId":null,"authors":[{"authorId":"35920747","name":"Sergio
        Marti","url":"https://www.semanticscholar.org/author/35920747"},{"authorId":"1695250","name":"Hector
        Garcia-Molina","url":"https://www.semanticscholar.org/author/1695250"}],"doi":null,"isInfluential":false,"paperId":"8d251f73327fdab422011c76264d080c64a36108","title":"Taxonomy
        of trust : Categorizing P 2 P reputation systems q","url":"https://www.semanticscholar.org/paper/8d251f73327fdab422011c76264d080c64a36108","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"2416282","name":"Emmanuelle
        Anceaume","url":"https://www.semanticscholar.org/author/2416282"},{"authorId":"1701175","name":"Yann
        Busnel","url":"https://www.semanticscholar.org/author/1701175"},{"authorId":"1777382","name":"S\u00e9bastien
        Gambs","url":"https://www.semanticscholar.org/author/1777382"}],"doi":"10.1007/978-3-642-45269-7_5","isInfluential":false,"paperId":"595bd3b20c7ca3dabb185613213c5e9bbc917f36","title":"On
        the Power of the Adversary to Solve the Node Sampling Problem","url":"https://www.semanticscholar.org/paper/595bd3b20c7ca3dabb185613213c5e9bbc917f36","venue":"Trans.
        Large-Scale Data- and Knowledge-Centered Systems","year":2013},{"arxivId":null,"authors":[{"authorId":"8962431","name":"Justin
        M. Wozniak","url":"https://www.semanticscholar.org/author/8962431"},{"authorId":"1715965","name":"Paul
        Brenner","url":"https://www.semanticscholar.org/author/1715965"},{"authorId":"1686699","name":"Douglas
        Thain","url":"https://www.semanticscholar.org/author/1686699"},{"authorId":"1686453","name":"Aaron
        Striegel","url":"https://www.semanticscholar.org/author/1686453"},{"authorId":"2141087","name":"Jes\u00fas
        A. Izaguirre","url":"https://www.semanticscholar.org/author/2141087"}],"doi":"10.1109/HPDC.2005.1520959","isInfluential":false,"paperId":"288792895507d9f1748ac7d1f8ae1607c92970eb","title":"Generosity
        and gluttony in GEMS: grid enabled molecular simulations","url":"https://www.semanticscholar.org/paper/288792895507d9f1748ac7d1f8ae1607c92970eb","venue":"HPDC-14.
        Proceedings. 14th IEEE International Symposium on High Performance Distributed
        Computing, 2005.","year":2005},{"arxivId":null,"authors":[{"authorId":"2438489","name":"Ennan
        Zhai","url":"https://www.semanticscholar.org/author/2438489"},{"authorId":"2042672","name":"Ruichuan
        Chen","url":"https://www.semanticscholar.org/author/2042672"},{"authorId":"2131231","name":"Eng
        Keong Lua","url":"https://www.semanticscholar.org/author/2131231"},{"authorId":"48570762","name":"Long
        Zhang","url":"https://www.semanticscholar.org/author/48570762"},{"authorId":"7218844","name":"Huiping
        Sun","url":"https://www.semanticscholar.org/author/7218844"},{"authorId":"2045601","name":"Zhuhua
        Cai","url":"https://www.semanticscholar.org/author/2045601"},{"authorId":"1722504","name":"Sihan
        Qing","url":"https://www.semanticscholar.org/author/1722504"},{"authorId":"2368825","name":"Zhong
        Chen","url":"https://www.semanticscholar.org/author/2368825"}],"doi":"10.1109/GLOCOM.2009.5425801","isInfluential":false,"paperId":"9d0902126a239ef1e1d4f4933b140a2b6bbf1fbe","title":"SpamResist:
        Making Peer-to-Peer Tagging Systems Robust to Spam","url":"https://www.semanticscholar.org/paper/9d0902126a239ef1e1d4f4933b140a2b6bbf1fbe","venue":"GLOBECOM
        2009 - 2009 IEEE Global Telecommunications Conference","year":2009},{"arxivId":null,"authors":[{"authorId":"41124763","name":"S.
        Siva Ramaiah","url":"https://www.semanticscholar.org/author/41124763"},{"authorId":null,"name":"P.
        Hemanthkumar","url":null},{"authorId":"36608948","name":"Nithin Krishna","url":"https://www.semanticscholar.org/author/36608948"}],"doi":null,"isInfluential":false,"paperId":"e4cac5bf67c667c0af412a520742da93434edc90","title":"A
        Performance Analysis of Searching Algorithm in Distributed System","url":"https://www.semanticscholar.org/paper/e4cac5bf67c667c0af412a520742da93434edc90","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1740390","name":"Duc
        A. Tran","url":"https://www.semanticscholar.org/author/1740390"},{"authorId":"50765319","name":"K.
        Nguyen","url":"https://www.semanticscholar.org/author/50765319"}],"doi":"10.1109/IPDPS.2008.4536393","isInfluential":false,"paperId":"ef2276a98d9299985b6829742f3e2230f94c3690","title":"Multidimensional
        information retrieval in peer-to-peer networks","url":"https://www.semanticscholar.org/paper/ef2276a98d9299985b6829742f3e2230f94c3690","venue":"2008
        IEEE International Symposium on Parallel and Distributed Processing","year":2008},{"arxivId":null,"authors":[{"authorId":"1722262","name":"George
        Danezis","url":"https://www.semanticscholar.org/author/1722262"},{"authorId":"2030711","name":"Prateek
        Mittal","url":"https://www.semanticscholar.org/author/2030711"}],"doi":null,"isInfluential":false,"paperId":"653fbfbad9d565dd5e5e0d48b6bb32dd02e8f157","title":"SybilInfer:
        Detecting Sybil Nodes using Social Networks","url":"https://www.semanticscholar.org/paper/653fbfbad9d565dd5e5e0d48b6bb32dd02e8f157","venue":"NDSS","year":2009},{"arxivId":null,"authors":[{"authorId":"36923974","name":"Abdalkarim
        Awad","url":"https://www.semanticscholar.org/author/36923974"},{"authorId":"35829321","name":"Christoph
        Sommer","url":"https://www.semanticscholar.org/author/35829321"},{"authorId":"1758569","name":"Reinhard
        German","url":"https://www.semanticscholar.org/author/1758569"},{"authorId":"1725013","name":"Falko
        Dressler","url":"https://www.semanticscholar.org/author/1725013"}],"doi":"10.1109/MAHSS.2008.4660079","isInfluential":false,"paperId":"e6e929e2249db1eb2dcfe67d75642fbbe576bb4a","title":"Virtual
        Cord Protocol (VCP): A flexible DHT-like routing service for sensor networks","url":"https://www.semanticscholar.org/paper/e6e929e2249db1eb2dcfe67d75642fbbe576bb4a","venue":"2008
        5th IEEE International Conference on Mobile Ad Hoc and Sensor Systems","year":2008},{"arxivId":null,"authors":[{"authorId":"3235066","name":"Quang
        Le-Dang","url":"https://www.semanticscholar.org/author/3235066"},{"authorId":"3334823","name":"Jennifer
        McManis","url":"https://www.semanticscholar.org/author/3334823"},{"authorId":"1742225","name":"Gabriel-Miro
        Muntean","url":"https://www.semanticscholar.org/author/1742225"}],"doi":"10.1007/s11276-014-0871-2","isInfluential":false,"paperId":"e6a4465a557790c932d6854de7f928cd4ec0e6b8","title":"A
        location coordinate-based video delivery scheme over wireless mesh networks","url":"https://www.semanticscholar.org/paper/e6a4465a557790c932d6854de7f928cd4ec0e6b8","venue":"Wireless
        Networks","year":2015},{"arxivId":null,"authors":[{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"},{"authorId":"1715494","name":"Raouf
        Boutaba","url":"https://www.semanticscholar.org/author/1715494"}],"doi":"10.1109/JSAC.2007.070108","isInfluential":false,"paperId":"6455f6217cc58353e64d759a6c701aa39404d113","title":"Distributed
        pattern matching: a key to flexible and efficient P2P search","url":"https://www.semanticscholar.org/paper/6455f6217cc58353e64d759a6c701aa39404d113","venue":"IEEE
        Journal on Selected Areas in Communications","year":2007},{"arxivId":null,"authors":[{"authorId":"8782469","name":"Imen
        Riabi","url":"https://www.semanticscholar.org/author/8782469"},{"authorId":"1809801","name":"Le\u00efla
        Azouz Sa\u00efdane","url":"https://www.semanticscholar.org/author/1809801"},{"authorId":"2035797","name":"Hella
        Kaffel Ben Ayed","url":"https://www.semanticscholar.org/author/2035797"}],"doi":"10.23919/PEMWN.2017.8308029","isInfluential":false,"paperId":"87af76224f9eed2a4ca2c86ebdd93a3463cf6eb2","title":"A
        proposal of a distributed access control over Fog computing: The ITS use case","url":"https://www.semanticscholar.org/paper/87af76224f9eed2a4ca2c86ebdd93a3463cf6eb2","venue":"2017
        International Conference on Performance Evaluation and Modeling in Wired and
        Wireless Networks (PEMWN)","year":2017},{"arxivId":null,"authors":[{"authorId":"2342059","name":"Jui-Chi
        Liang","url":"https://www.semanticscholar.org/author/2342059"},{"authorId":"1706719","name":"Jyh-Cheng
        Chen","url":"https://www.semanticscholar.org/author/1706719"},{"authorId":"49104921","name":"Tao
        Zhang","url":"https://www.semanticscholar.org/author/49104921"}],"doi":"10.1007/s11276-010-0289-4","isInfluential":true,"paperId":"f9904f9188b7995fc94795d4ca5c64b60ca034e7","title":"An
        adaptive low-overhead resource discovery protocol for mobile ad-hoc networks","url":"https://www.semanticscholar.org/paper/f9904f9188b7995fc94795d4ca5c64b60ca034e7","venue":"Wireless
        Networks","year":2011},{"arxivId":null,"authors":[{"authorId":"31418658","name":"Nai
        wen Liu","url":"https://www.semanticscholar.org/author/31418658"},{"authorId":"40513797","name":"Fang
        ai Liu","url":"https://www.semanticscholar.org/author/40513797"}],"doi":"10.1109/ISCSCT.2008.61","isInfluential":false,"paperId":"1de1c06545a9b37ecc2563286c14161be1454dca","title":"A
        RP(k)-Based Educational Resource Grid and Resource Awareness Model","url":"https://www.semanticscholar.org/paper/1de1c06545a9b37ecc2563286c14161be1454dca","venue":"2008
        International Symposium on Computer Science and Computational Technology","year":2008},{"arxivId":null,"authors":[{"authorId":"3257509","name":"Huayou
        Si","url":"https://www.semanticscholar.org/author/3257509"},{"authorId":"47827643","name":"Yun
        Zhao","url":"https://www.semanticscholar.org/author/47827643"}],"doi":null,"isInfluential":true,"paperId":"af13b168d91eb451b38c31238ea528e4dbb11cf0","title":"A
        Structured P2P-based Approach to Semantic Web Services Publication and Discovery","url":"https://www.semanticscholar.org/paper/af13b168d91eb451b38c31238ea528e4dbb11cf0","venue":"JSW","year":2014},{"arxivId":null,"authors":[{"authorId":"2653407","name":"Prince
        Mahajan","url":"https://www.semanticscholar.org/author/2653407"},{"authorId":"1965352","name":"Srinath
        T. V. Setty","url":"https://www.semanticscholar.org/author/1965352"},{"authorId":"2909533","name":"Sangmin
        Lee","url":"https://www.semanticscholar.org/author/2909533"},{"authorId":"32961575","name":"Allen
        Clement","url":"https://www.semanticscholar.org/author/32961575"},{"authorId":"2445753","name":"Lorenzo
        Alvisi","url":"https://www.semanticscholar.org/author/2445753"},{"authorId":"1705749","name":"Michael
        Dahlin","url":"https://www.semanticscholar.org/author/1705749"},{"authorId":"1756078","name":"Michael
        Walfish","url":"https://www.semanticscholar.org/author/1756078"}],"doi":"10.1145/2063509.2063512","isInfluential":false,"paperId":"0effdedc361c5c610f3de7635ada78e338a4e1f8","title":"Depot:
        Cloud Storage with Minimal Trust","url":"https://www.semanticscholar.org/paper/0effdedc361c5c610f3de7635ada78e338a4e1f8","venue":"OSDI","year":2010},{"arxivId":null,"authors":[{"authorId":"2012679","name":"Gurmeet
        Singh Manku","url":"https://www.semanticscholar.org/author/2012679"},{"authorId":"2719402","name":"Joe
        Sawada","url":"https://www.semanticscholar.org/author/2719402"}],"doi":"10.1007/11561071_40","isInfluential":true,"paperId":"839a0d5590aa5130aa9dc008ab8cb8ac26faf40a","title":"A
        Loopless Gray Code for Minimal Signed-Binary Representations","url":"https://www.semanticscholar.org/paper/839a0d5590aa5130aa9dc008ab8cb8ac26faf40a","venue":"ESA","year":2005},{"arxivId":null,"authors":[{"authorId":"1684443","name":"Bhuvan
        Urgaonkar","url":"https://www.semanticscholar.org/author/1684443"},{"authorId":"49217762","name":"Bo
        Zhao","url":"https://www.semanticscholar.org/author/49217762"}],"doi":null,"isInfluential":true,"paperId":"e1b5280dc408ae5b0c1058b9b6200e175df29e9d","title":"The
        Survey on Content Addressable Storage","url":"https://www.semanticscholar.org/paper/e1b5280dc408ae5b0c1058b9b6200e175df29e9d","venue":"","year":2007},{"arxivId":"0711.3949","authors":[{"authorId":"47695782","name":"Lei
        Ni","url":"https://www.semanticscholar.org/author/47695782"},{"authorId":"1678182","name":"Aaron
        Harwood","url":"https://www.semanticscholar.org/author/1678182"}],"doi":"10.1109/PDCAT.2008.53","isInfluential":false,"paperId":"090e3111c1e4cd657df06f52eab910aa32817947","title":"An
        Adaptive Checkpointing Scheme for Peer-to-Peer Based Volunteer Computing Work
        Flows","url":"https://www.semanticscholar.org/paper/090e3111c1e4cd657df06f52eab910aa32817947","venue":"2008
        Ninth International Conference on Parallel and Distributed Computing, Applications
        and Technologies","year":2008},{"arxivId":null,"authors":[{"authorId":"2002442","name":"Farag
        Azzedin","url":"https://www.semanticscholar.org/author/2002442"}],"doi":"10.1109/CTS.2013.6567222","isInfluential":true,"paperId":"a38d994977d34bc28070827e05b018bb3328214f","title":"Towards
        a scalable HDFS architecture","url":"https://www.semanticscholar.org/paper/a38d994977d34bc28070827e05b018bb3328214f","venue":"2013
        International Conference on Collaboration Technologies and Systems (CTS)","year":2013},{"arxivId":null,"authors":[{"authorId":"1753174","name":"Jeremy
        Stribling","url":"https://www.semanticscholar.org/author/1753174"}],"doi":null,"isInfluential":false,"paperId":"08be4b5b335aff54998b14dad9bf60332885468a","title":"Flexible,
        wide-area storage for distributed systems using semantic cues","url":"https://www.semanticscholar.org/paper/08be4b5b335aff54998b14dad9bf60332885468a","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"35121931","name":"Gahyun
        Park","url":"https://www.semanticscholar.org/author/35121931"},{"authorId":"1895536","name":"Minseok
        Kwon","url":"https://www.semanticscholar.org/author/1895536"}],"doi":"10.1109/IWQoS.2010.5542755","isInfluential":false,"paperId":"3c07e5390a8eaf3a7de56136a4195c756e91d13e","title":"Distributed
        tries for load balancing in peer-to-peer systems","url":"https://www.semanticscholar.org/paper/3c07e5390a8eaf3a7de56136a4195c756e91d13e","venue":"2010
        IEEE 18th International Workshop on Quality of Service (IWQoS)","year":2010},{"arxivId":null,"authors":[{"authorId":"34783286","name":"David
        A. Bryan","url":"https://www.semanticscholar.org/author/34783286"},{"authorId":"2065500","name":"Bruce
        Lowekamp","url":"https://www.semanticscholar.org/author/2065500"},{"authorId":"3079784","name":"Marcia
        Zangrilli","url":"https://www.semanticscholar.org/author/3079784"}],"doi":"10.1109/IPDPS.2008.4536200","isInfluential":false,"paperId":"3ca9c70c0c35f92f57c8cbd9ca92923ce6f188d6","title":"The
        design of a versatile, secure P2PSIP communications architecture for the public
        internet","url":"https://www.semanticscholar.org/paper/3ca9c70c0c35f92f57c8cbd9ca92923ce6f188d6","venue":"2008
        IEEE International Symposium on Parallel and Distributed Processing","year":2008},{"arxivId":null,"authors":[{"authorId":"8840351","name":"D.
        Pooja Janakiram","url":"https://www.semanticscholar.org/author/8840351"},{"authorId":"1720285","name":"Fausto
        Giunchiglia","url":"https://www.semanticscholar.org/author/1720285"},{"authorId":"2961794","name":"Harisankar
        Haridas","url":"https://www.semanticscholar.org/author/2961794"},{"authorId":"3335772","name":"Uladzimir
        Kharkevich","url":"https://www.semanticscholar.org/author/3335772"}],"doi":null,"isInfluential":false,"paperId":"e35a50469f2516db568acfe5bf6d1c8f9531f39c","title":"Two-Layered
        Architecture for Peer-to-Peer Concept Search","url":"https://www.semanticscholar.org/paper/e35a50469f2516db568acfe5bf6d1c8f9531f39c","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"46869494","name":"Tim
        Nelson","url":"https://www.semanticscholar.org/author/46869494"},{"authorId":"22462186","name":"Natasha
        Danas","url":"https://www.semanticscholar.org/author/22462186"},{"authorId":"2064187","name":"Daniel
        J. Dougherty","url":"https://www.semanticscholar.org/author/2064187"},{"authorId":"1724479","name":"Shriram
        Krishnamurthi","url":"https://www.semanticscholar.org/author/1724479"}],"doi":"10.1145/3106237.3106272","isInfluential":false,"paperId":"f3098ae35bea5e1415ef91baea5bf9d51f640988","title":"The
        power of \"why\" and \"why not\": enriching scenario exploration with provenance","url":"https://www.semanticscholar.org/paper/f3098ae35bea5e1415ef91baea5bf9d51f640988","venue":"ESEC/SIGSOFT
        FSE","year":2017},{"arxivId":null,"authors":[{"authorId":"27573489","name":"Jouni
        M\u00e4enp\u00e4\u00e4","url":"https://www.semanticscholar.org/author/27573489"},{"authorId":"3277963","name":"Gonzalo
        Camarillo","url":"https://www.semanticscholar.org/author/3277963"}],"doi":"10.1109/IPDPS.2009.5160949","isInfluential":false,"paperId":"e32acafa815da75643522567c70a2df946df5ead","title":"Study
        on maintenance operations in a chord-based Peer-to-Peer session initiation
        protocol overlay network","url":"https://www.semanticscholar.org/paper/e32acafa815da75643522567c70a2df946df5ead","venue":"2009
        IEEE International Symposium on Parallel & Distributed Processing","year":2009},{"arxivId":null,"authors":[{"authorId":"2314971","name":"Thomas
        Reidemeister","url":"https://www.semanticscholar.org/author/2314971"},{"authorId":"49906290","name":"Klemens
        B\u00f6hm","url":"https://www.semanticscholar.org/author/49906290"},{"authorId":"1747453","name":"Erik
        Buchmann","url":"https://www.semanticscholar.org/author/1747453"},{"authorId":"32771457","name":"Paul
        A. S. Ward","url":"https://www.semanticscholar.org/author/32771457"}],"doi":null,"isInfluential":false,"paperId":"a35e806ba214f90d40501f1231977bab31d23f6d","title":"Man-inthe-Middle
        Attacks in Distributed Hash-Tables","url":"https://www.semanticscholar.org/paper/a35e806ba214f90d40501f1231977bab31d23f6d","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"3183310","name":"Stefania
        Costache","url":"https://www.semanticscholar.org/author/3183310"},{"authorId":"2019559","name":"Thomas
        Ropars","url":"https://www.semanticscholar.org/author/2019559"},{"authorId":"1760074","name":"Christine
        Morin","url":"https://www.semanticscholar.org/author/1760074"}],"doi":"10.1109/SRDS.2010.34","isInfluential":false,"paperId":"22dba8da3d84f776d0abcfc0dc370d1090a54fd9","title":"Semias:
        Self-Healing Active Replication on Top of a Structured Peer-to-Peer Overlay","url":"https://www.semanticscholar.org/paper/22dba8da3d84f776d0abcfc0dc370d1090a54fd9","venue":"2010
        29th IEEE Symposium on Reliable Distributed Systems","year":2010},{"arxivId":null,"authors":[{"authorId":"3229837","name":"Sergey
        Legtchenko","url":"https://www.semanticscholar.org/author/3229837"},{"authorId":"2102057","name":"S\u00e9bastien
        Monnet","url":"https://www.semanticscholar.org/author/2102057"},{"authorId":"1798389","name":"Pierre
        Sens","url":"https://www.semanticscholar.org/author/1798389"},{"authorId":"1715488","name":"Gilles
        Muller","url":"https://www.semanticscholar.org/author/1715488"}],"doi":"10.1007/978-3-642-05118-0_34","isInfluential":true,"paperId":"09fcb0dbcac3eef2b25cfd0e4a41d10cf540a116","title":"Churn-Resilient
        Replication Strategy for Peer-to-Peer Distributed Hash-Tables","url":"https://www.semanticscholar.org/paper/09fcb0dbcac3eef2b25cfd0e4a41d10cf540a116","venue":"SSS","year":2009},{"arxivId":null,"authors":[{"authorId":"38745395","name":"Janne
        Julkunen","url":"https://www.semanticscholar.org/author/38745395"}],"doi":null,"isInfluential":false,"paperId":"fd3b845b031a7ee5f1427e3695fce312748c285f","title":"Department
        of Electrical and Information Engineering Degree Program in Information Engineering
        Feasibility of Convergent P2p and Web Service Architecture","url":"https://www.semanticscholar.org/paper/fd3b845b031a7ee5f1427e3695fce312748c285f","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"1883004","name":"Marcin
        Bienkowski","url":"https://www.semanticscholar.org/author/1883004"},{"authorId":"1726087","name":"Andr\u00e9
        Brinkmann","url":"https://www.semanticscholar.org/author/1726087"},{"authorId":"2455910","name":"Miroslaw
        Korzeniowski","url":"https://www.semanticscholar.org/author/2455910"}],"doi":"10.1007/978-3-540-92221-6_13","isInfluential":false,"paperId":"6a988139a5f28e0a5edcaf5cce0c908e5f40b0b2","title":"Degree
        3 Suffices: A Large-Scale Overlay for P2P Networks","url":"https://www.semanticscholar.org/paper/6a988139a5f28e0a5edcaf5cce0c908e5f40b0b2","venue":"OPODIS","year":2008},{"arxivId":null,"authors":[{"authorId":"1804913","name":"Moreno
        Marzolla","url":"https://www.semanticscholar.org/author/1804913"},{"authorId":"1715724","name":"Matteo
        Mordacchini","url":"https://www.semanticscholar.org/author/1715724"},{"authorId":"1702082","name":"Salvatore
        Orlando","url":"https://www.semanticscholar.org/author/1702082"}],"doi":"10.1109/DEXA.2006.16","isInfluential":false,"paperId":"fcd55358263445ca9a9e1f42cfc1fe30fdbfd50b","title":"A
        P2P Resource Discovery System Based on a Forest of Trees","url":"https://www.semanticscholar.org/paper/fcd55358263445ca9a9e1f42cfc1fe30fdbfd50b","venue":"17th
        International Workshop on Database and Expert Systems Applications (DEXA''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"41129181","name":"Y.
        Mohamadi Begum","url":"https://www.semanticscholar.org/author/41129181"},{"authorId":"1685983","name":"M.
        A. Maluk Mohamed","url":"https://www.semanticscholar.org/author/1685983"}],"doi":"10.1109/ITNG.2010.157","isInfluential":false,"paperId":"ef48c7abdf5c63dcd2c45c2efac4f67c4903fc0b","title":"A
        DHT-Based Process Migration Policy for Mobile Clusters","url":"https://www.semanticscholar.org/paper/ef48c7abdf5c63dcd2c45c2efac4f67c4903fc0b","venue":"2010
        Seventh International Conference on Information Technology: New Generations","year":2010},{"arxivId":null,"authors":[{"authorId":"47849800","name":"Yoshio
        Nakajima","url":"https://www.semanticscholar.org/author/47849800"},{"authorId":"50643844","name":"Kenichi
        Watanabe","url":"https://www.semanticscholar.org/author/50643844"},{"authorId":"1762721","name":"Naohiro
        Hayashibara","url":"https://www.semanticscholar.org/author/1762721"},{"authorId":"1682893","name":"Makoto
        Takizawa","url":"https://www.semanticscholar.org/author/1682893"},{"authorId":"1686798","name":"Tomoya
        Enokido","url":"https://www.semanticscholar.org/author/1686798"},{"authorId":"1713731","name":"S.
        Misbah Deen","url":"https://www.semanticscholar.org/author/1713731"}],"doi":"10.1109/ARES.2006.116","isInfluential":false,"paperId":"316527f73e7105bb8caced6c46e1f8519d17aed3","title":"Satisfiability
        and trustworthiness of peers in peer-to-peer overlay networks","url":"https://www.semanticscholar.org/paper/316527f73e7105bb8caced6c46e1f8519d17aed3","venue":"First
        International Conference on Availability, Reliability and Security (ARES''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"2708656","name":"Yun-Shuai
        Yu","url":"https://www.semanticscholar.org/author/2708656"},{"authorId":"9211891","name":"Lun-Yuan
        Chang","url":"https://www.semanticscholar.org/author/9211891"},{"authorId":"1716912","name":"Ce-Kuen
        Shieh","url":"https://www.semanticscholar.org/author/1716912"}],"doi":null,"isInfluential":true,"paperId":"479653d68e70b7edd4899941eda75c3d14456013","title":"Increasing
        service availability for resource constrained nodes in peer-to-peer communication
        systems","url":"https://www.semanticscholar.org/paper/479653d68e70b7edd4899941eda75c3d14456013","venue":"2010
        International Computer Symposium (ICS2010)","year":2010},{"arxivId":null,"authors":[{"authorId":"6774321","name":"Urs
        Feller","url":"https://www.semanticscholar.org/author/6774321"}],"doi":null,"isInfluential":false,"paperId":"65d2fbfa35db5a00ebfc3065c4861b925ebbebeb","title":"Ip
        Multicast Using Quality of Service Enabled Overlay Networks Inauguraldissertation
        Der Philosophisch-naturwissenschaftlichen Fakult\u00e4t Der Universit\u00e4t
        Bern Vorgelegt Von Ip Multicast Using Quality of Service Enabled Overlay Networks
        Inauguraldissertation Der Philosophisch-naturwissenschaftlichen Fa","url":"https://www.semanticscholar.org/paper/65d2fbfa35db5a00ebfc3065c4861b925ebbebeb","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"34225785","name":"Yao-Jen
        Chang","url":"https://www.semanticscholar.org/author/34225785"},{"authorId":"6710313","name":"Ting
        Liang Shih","url":"https://www.semanticscholar.org/author/6710313"}],"doi":"10.1109/ISWPC.2008.4556271","isInfluential":false,"paperId":"3947f75acd7e47fc66cc20e8e26ffffb4f9e52ed","title":"Intersection
        location service and performance comparison of three location service algorithms
        for vehicular ad hoc networks in city environments","url":"https://www.semanticscholar.org/paper/3947f75acd7e47fc66cc20e8e26ffffb4f9e52ed","venue":"2008
        3rd International Symposium on Wireless Pervasive Computing","year":2008},{"arxivId":null,"authors":[{"authorId":"2846833","name":"Apostolos
        Malatras","url":"https://www.semanticscholar.org/author/2846833"}],"doi":"10.1016/j.jnca.2015.04.014","isInfluential":false,"paperId":"f9293e6bb15d7a35f47df2def1f3d6e3d06b8ca3","title":"State-of-the-art
        survey on P2P overlay networks in pervasive computing environments","url":"https://www.semanticscholar.org/paper/f9293e6bb15d7a35f47df2def1f3d6e3d06b8ca3","venue":"J.
        Network and Computer Applications","year":2015},{"arxivId":null,"authors":[{"authorId":"2044612","name":"Dibyanshu
        Jaiswal","url":"https://www.semanticscholar.org/author/2044612"},{"authorId":"2465588","name":"Sujoy
        Mistry","url":"https://www.semanticscholar.org/author/2465588"},{"authorId":"37840630","name":"Arijit
        Mukherjee","url":"https://www.semanticscholar.org/author/37840630"},{"authorId":"1695724","name":"Nandini
        Mukherjee","url":"https://www.semanticscholar.org/author/1695724"}],"doi":null,"isInfluential":true,"paperId":"f0b91f42b2a737bbec0e1dfdf7aaa7d3f71b4df9","title":"A
        Chord-based Architecture for Efficient Dynamic Service Provisioning over Distributed
        Resources","url":"https://www.semanticscholar.org/paper/f0b91f42b2a737bbec0e1dfdf7aaa7d3f71b4df9","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"47849800","name":"Yoshio
        Nakajima","url":"https://www.semanticscholar.org/author/47849800"},{"authorId":"35110341","name":"Alireza
        Goudarzi Nemati","url":"https://www.semanticscholar.org/author/35110341"},{"authorId":"1686798","name":"Tomoya
        Enokido","url":"https://www.semanticscholar.org/author/1686798"},{"authorId":"1682893","name":"Makoto
        Takizawa","url":"https://www.semanticscholar.org/author/1682893"}],"doi":"10.1109/WAINA.2008.229","isInfluential":false,"paperId":"bed6b666642c5a998d3eeee1f463e27b62ee121d","title":"Trustworthiness
        and Confidence of Peers in Peer-to-Peer (P2P) Network","url":"https://www.semanticscholar.org/paper/bed6b666642c5a998d3eeee1f463e27b62ee121d","venue":"22nd
        International Conference on Advanced Information Networking and Applications
        - Workshops (aina workshops 2008)","year":2008},{"arxivId":null,"authors":[{"authorId":"1687168","name":"Ahmed
        Sobeih","url":"https://www.semanticscholar.org/author/1687168"},{"authorId":"1713112","name":"William
        Yurcik","url":"https://www.semanticscholar.org/author/1713112"},{"authorId":"1704715","name":"Jennifer
        C. Hou","url":"https://www.semanticscholar.org/author/1704715"}],"doi":"10.1109/MASCOT.2004.1348299","isInfluential":false,"paperId":"d404bcc9f6077b2cf24b94563a4b96bc540dc284","title":"VRing:
        a case for building application-layer multicast rings (rather than trees)","url":"https://www.semanticscholar.org/paper/d404bcc9f6077b2cf24b94563a4b96bc540dc284","venue":"The
        IEEE Computer Society''s 12th Annual International Symposium on Modeling,
        Analysis, and Simulation of Computer and Telecommunications Systems, 2004.
        (MASCOTS 2004). Proceedings.","year":2004},{"arxivId":null,"authors":[{"authorId":"1692658","name":"Yu
        Peng","url":"https://www.semanticscholar.org/author/1692658"},{"authorId":"31420298","name":"Mao
        Yang","url":"https://www.semanticscholar.org/author/31420298"},{"authorId":"34889832","name":"Yafei
        Dai","url":"https://www.semanticscholar.org/author/34889832"}],"doi":"10.1109/GCCW.2006.22","isInfluential":false,"paperId":"baffa0c3962c2542db9762be400869e3f361ba02","title":"Analyze
        the Impact of User Search Behavior on DHT-based P2P File Sharing System","url":"https://www.semanticscholar.org/paper/baffa0c3962c2542db9762be400869e3f361ba02","venue":"2006
        Fifth International Conference on Grid and Cooperative Computing Workshops","year":2006},{"arxivId":null,"authors":[{"authorId":"1795625","name":"Ingmar
        Baumgart","url":"https://www.semanticscholar.org/author/1795625"},{"authorId":"34819903","name":"Sebastian
        Mies","url":"https://www.semanticscholar.org/author/34819903"}],"doi":"10.1109/ICPADS.2007.4447808","isInfluential":true,"paperId":"02190db89bf2d898817aa600c3edca6ded294de0","title":"S/Kademlia:
        A practicable approach towards secure key-based routing","url":"https://www.semanticscholar.org/paper/02190db89bf2d898817aa600c3edca6ded294de0","venue":"2007
        International Conference on Parallel and Distributed Systems","year":2007},{"arxivId":null,"authors":[{"authorId":"2180364","name":"Yongcai
        Tao","url":"https://www.semanticscholar.org/author/2180364"},{"authorId":"41151701","name":"Hai
        Jin","url":"https://www.semanticscholar.org/author/41151701"},{"authorId":"1685757","name":"Song
        Wu","url":"https://www.semanticscholar.org/author/1685757"},{"authorId":"1678835","name":"Xuanhua
        Shi","url":"https://www.semanticscholar.org/author/1678835"}],"doi":"10.1016/j.future.2009.06.001","isInfluential":true,"paperId":"03d9f9e235224f1b4621c7787967fdb3318189f5","title":"Scalable
        DHT- and ontology-based information service for large-scale grids","url":"https://www.semanticscholar.org/paper/03d9f9e235224f1b4621c7787967fdb3318189f5","venue":"Future
        Generation Comp. Syst.","year":2010},{"arxivId":null,"authors":[{"authorId":"1794288","name":"Anxiao
        Jiang","url":"https://www.semanticscholar.org/author/1794288"}],"doi":null,"isInfluential":false,"paperId":"c1733623b7c980d3c6e0fb8c2022c0b27355d174","title":"Optimized
        Network Data Storage and Topology Control","url":"https://www.semanticscholar.org/paper/c1733623b7c980d3c6e0fb8c2022c0b27355d174","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"1957774","name":"John
        Risson","url":"https://www.semanticscholar.org/author/1957774"},{"authorId":"1678182","name":"Aaron
        Harwood","url":"https://www.semanticscholar.org/author/1678182"},{"authorId":"2009990","name":"Tim
        Moors","url":"https://www.semanticscholar.org/author/2009990"}],"doi":"10.1109/ISCC.2006.152","isInfluential":false,"paperId":"2a5fb4668fe387c31f1f87a93c67fb2205c2b4cc","title":"Stable
        High-Capacity One-Hop Distributed Hash Tables","url":"https://www.semanticscholar.org/paper/2a5fb4668fe387c31f1f87a93c67fb2205c2b4cc","venue":"11th
        IEEE Symposium on Computers and Communications (ISCC''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"16109324","name":"R.R.
        Rout","url":"https://www.semanticscholar.org/author/16109324"},{"authorId":"1716613","name":"Krishna
        Kant","url":"https://www.semanticscholar.org/author/1716613"}],"doi":null,"isInfluential":false,"paperId":"b37679a44e64ebf88dd4f6d53be89d30e38400a7","title":"Reduction
        of look up latency in location-aware clusters of large-scale P2P overlay networks","url":"https://www.semanticscholar.org/paper/b37679a44e64ebf88dd4f6d53be89d30e38400a7","venue":"TENCON
        2008 - 2008 IEEE Region 10 Conference","year":2008},{"arxivId":null,"authors":[{"authorId":"32155247","name":"Tarciana
        Silva","url":"https://www.semanticscholar.org/author/32155247"},{"authorId":"23529626","name":"Carlos
        Kamienski","url":"https://www.semanticscholar.org/author/23529626"},{"authorId":"34759257","name":"Stenio
        F. L. Fernandes","url":"https://www.semanticscholar.org/author/34759257"},{"authorId":"7286889","name":"Djamel
        Fawzi Hadj Sadok","url":"https://www.semanticscholar.org/author/7286889"}],"doi":"10.1007/s12083-014-0277-z","isInfluential":true,"paperId":"2d9de90e38518cb734baec6929b062c6b865d36d","title":"A
        flexible DHT-based directory service for information management","url":"https://www.semanticscholar.org/paper/2d9de90e38518cb734baec6929b062c6b865d36d","venue":"Peer-to-Peer
        Networking and Applications","year":2015},{"arxivId":null,"authors":[{"authorId":"37376558","name":"Rohit
        Gupta","url":"https://www.semanticscholar.org/author/37376558"},{"authorId":"3315998","name":"Souvik
        Ray","url":"https://www.semanticscholar.org/author/3315998"},{"authorId":"1683734","name":"Arun
        K. Somani","url":"https://www.semanticscholar.org/author/1683734"},{"authorId":"3747964","name":"Zhao
        Zhang","url":"https://www.semanticscholar.org/author/3747964"}],"doi":null,"isInfluential":false,"paperId":"e85343c350cc87d7d0fa5e442f16bc408c291fd1","title":"Utilizing
        node''s selfishness for providing complete anonymity in peer-to-peer based
        grids","url":"https://www.semanticscholar.org/paper/e85343c350cc87d7d0fa5e442f16bc408c291fd1","venue":"Multiagent
        and Grid Systems","year":2006},{"arxivId":null,"authors":[{"authorId":"1678585","name":"Xianghan
        Zheng","url":"https://www.semanticscholar.org/author/1678585"},{"authorId":"1741731","name":"Vladimir
        A. Oleshchuk","url":"https://www.semanticscholar.org/author/1741731"}],"doi":null,"isInfluential":false,"paperId":"c0044656b144a457ba44175068690c79218d771f","title":"Improvement
        of Chord Overlay for P2psip-based Communication Systems","url":"https://www.semanticscholar.org/paper/c0044656b144a457ba44175068690c79218d771f","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"1696196","name":"Pamela
        Zave","url":"https://www.semanticscholar.org/author/1696196"}],"doi":null,"isInfluential":false,"paperId":"40a1f2e8dc5b17b8a06bf56607e89c4108589356","title":"How
        to Make Chord Correct (Using a Stable Base)","url":"https://www.semanticscholar.org/paper/40a1f2e8dc5b17b8a06bf56607e89c4108589356","venue":"ArXiv","year":2015},{"arxivId":null,"authors":[{"authorId":"39597206","name":"Jie
        Wang","url":"https://www.semanticscholar.org/author/39597206"},{"authorId":"48567112","name":"Zhijun
        Yu","url":"https://www.semanticscholar.org/author/48567112"}],"doi":null,"isInfluential":true,"paperId":"07ed61f17a5ec7193637dc23e7c1b92d10348c89","title":"A
        New Variation of Chord with Novel Improvement on Lookup Locality","url":"https://www.semanticscholar.org/paper/07ed61f17a5ec7193637dc23e7c1b92d10348c89","venue":"GCA","year":2006},{"arxivId":null,"authors":[{"authorId":"2087767","name":"Antonio
        Tenorio-Fornes","url":"https://www.semanticscholar.org/author/2087767"},{"authorId":"37381680","name":"Samer
        Hassan","url":"https://www.semanticscholar.org/author/37381680"},{"authorId":"1798868","name":"Juan
        Pav\u00f3n","url":"https://www.semanticscholar.org/author/1798868"}],"doi":"10.1145/3211933.3211937","isInfluential":false,"paperId":"0c8679ff5917281a225a1781488d489130c14d91","title":"Open
        Peer-to-Peer Systems over Blockchain and IPFS: an Agent Oriented Framework","url":"https://www.semanticscholar.org/paper/0c8679ff5917281a225a1781488d489130c14d91","venue":"CRYBLOCK@MobiSys","year":2018},{"arxivId":null,"authors":[{"authorId":"36983576","name":"Chien-Ming
        Cheng","url":"https://www.semanticscholar.org/author/36983576"},{"authorId":"1726661","name":"Shiao-Li
        Tsao","url":"https://www.semanticscholar.org/author/1726661"}],"doi":"10.1109/TVT.2014.2329015","isInfluential":true,"paperId":"a725309ce9cb09be680025491f39e84236b19a8f","title":"Adaptive
        Lookup Protocol for Two-Tier VANET/P2P Information Retrieval Services","url":"https://www.semanticscholar.org/paper/a725309ce9cb09be680025491f39e84236b19a8f","venue":"IEEE
        Transactions on Vehicular Technology","year":2015},{"arxivId":null,"authors":[{"authorId":"1705508","name":"Gennaro
        Cordasco","url":"https://www.semanticscholar.org/author/1705508"},{"authorId":"2742371","name":"Luisa
        Gargano","url":"https://www.semanticscholar.org/author/2742371"},{"authorId":"47088834","name":"Molly
        Hammar","url":"https://www.semanticscholar.org/author/47088834"},{"authorId":"40571580","name":"Alberto
        Negro","url":"https://www.semanticscholar.org/author/40571580"},{"authorId":"1786473","name":"Vittorio
        Scarano","url":"https://www.semanticscholar.org/author/1786473"}],"doi":null,"isInfluential":true,"paperId":"c891d73d55623adc32bb9290081fb78843c00ef4","title":"Non-uniform
        deterministic routing on F-Chord(/spl alpha/)","url":"https://www.semanticscholar.org/paper/c891d73d55623adc32bb9290081fb78843c00ef4","venue":"2004
        International Workshop on Hot Topics in Peer-to-Peer Systems","year":2004},{"arxivId":"0709.4048","authors":[{"authorId":"2721383","name":"P.
        Oscar Boykin","url":"https://www.semanticscholar.org/author/2721383"},{"authorId":"1956136","name":"Jesse
        S. A. Bridgewater","url":"https://www.semanticscholar.org/author/1956136"},{"authorId":"32226161","name":"Joseph
        S. Kong","url":"https://www.semanticscholar.org/author/32226161"},{"authorId":"1796823","name":"Kamen
        M. Lozev","url":"https://www.semanticscholar.org/author/1796823"},{"authorId":"34892917","name":"Behnam
        Attaran Rezaei","url":"https://www.semanticscholar.org/author/34892917"},{"authorId":"1686063","name":"Vwani
        P. Roychowdhury","url":"https://www.semanticscholar.org/author/1686063"}],"doi":null,"isInfluential":false,"paperId":"c679c28e68ec27878b20a66434b4b5423f288339","title":"A
        Symphony Conducted by Brunet","url":"https://www.semanticscholar.org/paper/c679c28e68ec27878b20a66434b4b5423f288339","venue":"ArXiv","year":2007},{"arxivId":null,"authors":[{"authorId":"3164759","name":"Jiazhen
        Zhou","url":"https://www.semanticscholar.org/author/3164759"},{"authorId":"2551229","name":"Apostolos
        Papathanassiou","url":"https://www.semanticscholar.org/author/2551229"},{"authorId":"1713958","name":"Yi
        Qian","url":"https://www.semanticscholar.org/author/1713958"}],"doi":"10.1109/JSAC.2013.SUP.0513008","isInfluential":false,"paperId":"b564c6ff88e1dd33f6ddff5806e08b5f5f48a9d6","title":"A
        Scalable Vehicular Network Architecture for Traffic Information Sharing","url":"https://www.semanticscholar.org/paper/b564c6ff88e1dd33f6ddff5806e08b5f5f48a9d6","venue":"IEEE
        Journal on Selected Areas in Communications","year":2013},{"arxivId":null,"authors":[{"authorId":"38801776","name":"Bo
        Yang","url":"https://www.semanticscholar.org/author/38801776"},{"authorId":"1725194","name":"Ali
        R. Hurson","url":"https://www.semanticscholar.org/author/1725194"},{"authorId":"38238878","name":"Yu
        Jiao","url":"https://www.semanticscholar.org/author/38238878"},{"authorId":"1771895","name":"Thomas
        E. Potok","url":"https://www.semanticscholar.org/author/1771895"}],"doi":"10.1109/WOWMOM.2006.76","isInfluential":false,"paperId":"59f5b1b6219f1c014c8c14125db92138d2ec7d0d","title":"Multimedia
        correlation analysis in unstructured peer-to-peer networks","url":"https://www.semanticscholar.org/paper/59f5b1b6219f1c014c8c14125db92138d2ec7d0d","venue":"2006
        International Symposium on a World of Wireless, Mobile and Multimedia Networks(WoWMoM''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"}],"doi":"10.1109/ICPP.2008.52","isInfluential":true,"paperId":"e0852b2a9912adb1feb67c682073bc9580df0d12","title":"GeWave:
        Geographically-Aware Wave for File Consistency Maintenance in P2P Systems","url":"https://www.semanticscholar.org/paper/e0852b2a9912adb1feb67c682073bc9580df0d12","venue":"2008
        37th International Conference on Parallel Processing","year":2008},{"arxivId":null,"authors":[{"authorId":"2966274","name":"Fangai
        Liu","url":"https://www.semanticscholar.org/author/2966274"},{"authorId":"39321499","name":"Tianlai
        Li","url":"https://www.semanticscholar.org/author/39321499"},{"authorId":"1875457","name":"Changming
        Xing","url":"https://www.semanticscholar.org/author/1875457"}],"doi":"10.1007/s12083-014-0253-7","isInfluential":false,"paperId":"c30f682beaef1c802c16b4c4861d75f4205a277b","title":"A
        hierarchical HRRP(k) network and its application","url":"https://www.semanticscholar.org/paper/c30f682beaef1c802c16b4c4861d75f4205a277b","venue":"Peer-to-Peer
        Networking and Applications","year":2015},{"arxivId":null,"authors":[{"authorId":"2106027","name":"Valerio
        Schiavoni","url":"https://www.semanticscholar.org/author/2106027"}],"doi":null,"isInfluential":true,"paperId":"b1608bd83e3c6b229c9fbb137d3ee9b27b688a65","title":"Topology-aware
        protocols , tools and applications for large-scale distributed systems par","url":"https://www.semanticscholar.org/paper/b1608bd83e3c6b229c9fbb137d3ee9b27b688a65","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1777413","name":"Jos\u00e9
        Ignacio Alvarez-Hamelin","url":"https://www.semanticscholar.org/author/1777413"},{"authorId":"1825335","name":"Aline
        Carneiro Viana","url":"https://www.semanticscholar.org/author/1825335"},{"authorId":"40630845","name":"M.
        D. De Amorim","url":"https://www.semanticscholar.org/author/40630845"}],"doi":null,"isInfluential":false,"paperId":"1fba36467a8b50243435d456c3c364a112fbdec5","title":"DHT-based
        Functionalities Using Hypercubes","url":"https://www.semanticscholar.org/paper/1fba36467a8b50243435d456c3c364a112fbdec5","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"50339301","name":"K.
        Yonekawa","url":"https://www.semanticscholar.org/author/50339301"},{"authorId":"50412330","name":"Satomi
        Ishida","url":"https://www.semanticscholar.org/author/50412330"},{"authorId":"48690845","name":"Mari
        Suzuki","url":"https://www.semanticscholar.org/author/48690845"},{"authorId":"1723962","name":"Hiroyuki
        Morikawa","url":"https://www.semanticscholar.org/author/1723962"}],"doi":null,"isInfluential":false,"paperId":"038170cb5678a900c2bd1b70b8ce471bd9ca17c6","title":"The
        design and implementation of power service discovery system in distributed
        generation environment","url":"https://www.semanticscholar.org/paper/038170cb5678a900c2bd1b70b8ce471bd9ca17c6","venue":"2012
        International Conference on Renewable Energy Research and Applications (ICRERA)","year":2012},{"arxivId":null,"authors":[{"authorId":"2931341","name":"Richard
        W. Skowyra","url":"https://www.semanticscholar.org/author/2931341"},{"authorId":"1743586","name":"Sharon
        Goldberg","url":"https://www.semanticscholar.org/author/1743586"}],"doi":null,"isInfluential":false,"paperId":"20788213e8087d92990a66b4b7f32f0aacdd9192","title":"The
        Zenith attack : vulnerabilities and countermeasures","url":"https://www.semanticscholar.org/paper/20788213e8087d92990a66b4b7f32f0aacdd9192","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"1717075","name":"Maristella
        Agosti","url":"https://www.semanticscholar.org/author/1717075"},{"authorId":"2838038","name":"Ludger
        Bischofs","url":"https://www.semanticscholar.org/author/2838038"},{"authorId":"3276859","name":"Leonardo
        Candela","url":"https://www.semanticscholar.org/author/3276859"},{"authorId":"1773869","name":"Donatella
        Castelli","url":"https://www.semanticscholar.org/author/1773869"},{"authorId":"1836315","name":"Nicola
        Ferro","url":"https://www.semanticscholar.org/author/1836315"},{"authorId":"1712950","name":"Wilhelm
        Hasselbring","url":"https://www.semanticscholar.org/author/1712950"},{"authorId":"3089230","name":"Nektarios
        Moumoutzis","url":"https://www.semanticscholar.org/author/3089230"},{"authorId":"1806643","name":"Heiko
        Schuldt","url":"https://www.semanticscholar.org/author/1806643"},{"authorId":"1751591","name":"Gerhard
        Weikum","url":"https://www.semanticscholar.org/author/1751591"},{"authorId":"49300543","name":"M.
        Wurz","url":"https://www.semanticscholar.org/author/49300543"},{"authorId":"1701332","name":"Pavel
        Zezula","url":"https://www.semanticscholar.org/author/1701332"}],"doi":null,"isInfluential":true,"paperId":"94fe6d4cee922bd31ced9680af6ff3a738fe9207","title":"DELOS
        WP 1 Survey","url":"https://www.semanticscholar.org/paper/94fe6d4cee922bd31ced9680af6ff3a738fe9207","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"2942027","name":"Stephen
        Mkandawire","url":"https://www.semanticscholar.org/author/2942027"}],"doi":null,"isInfluential":true,"paperId":"1c68e02ac35cd80ddbc6bda92d9c5912be274531","title":"Improving
        Backup and Restore Performance for Deduplication-based Cloud Backup Services","url":"https://www.semanticscholar.org/paper/1c68e02ac35cd80ddbc6bda92d9c5912be274531","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"3122063","name":"Michael
        J. Freedman","url":"https://www.semanticscholar.org/author/3122063"},{"authorId":"2506126","name":"David
        Mazi\u00e8res","url":"https://www.semanticscholar.org/author/2506126"}],"doi":"10.1007/978-3-540-45172-3_4","isInfluential":false,"paperId":"0b388c6c95d48c38ce0fbb8a4edc90bb5192cd7e","title":"Sloppy
        Hashing and Self-Organizing Clusters","url":"https://www.semanticscholar.org/paper/0b388c6c95d48c38ce0fbb8a4edc90bb5192cd7e","venue":"IPTPS","year":2003},{"arxivId":null,"authors":[{"authorId":"40029726","name":"Jiang
        Zhou","url":"https://www.semanticscholar.org/author/40029726"},{"authorId":"46520743","name":"Wei
        Xie","url":"https://www.semanticscholar.org/author/46520743"},{"authorId":"39864624","name":"Jason
        Noble","url":"https://www.semanticscholar.org/author/39864624"},{"authorId":"3450143","name":"Kace
        Echo","url":"https://www.semanticscholar.org/author/3450143"},{"authorId":"12650108","name":"Yong
        P Chen","url":"https://www.semanticscholar.org/author/12650108"}],"doi":"10.1109/NAS.2016.7549423","isInfluential":false,"paperId":"cc651540cf5550597e674af095fe0e38eed6de76","title":"SUORA:
        A Scalable and Uniform Data Distribution Algorithm for Heterogeneous Storage
        Systems","url":"https://www.semanticscholar.org/paper/cc651540cf5550597e674af095fe0e38eed6de76","venue":"2016
        IEEE International Conference on Networking, Architecture and Storage (NAS)","year":2016},{"arxivId":null,"authors":[{"authorId":"2459687","name":"Javier
        Diaz Montes","url":"https://www.semanticscholar.org/author/2459687"},{"authorId":"1709070","name":"Ivan
        Rodero","url":"https://www.semanticscholar.org/author/1709070"},{"authorId":"3247864","name":"Mengsong
        Zou","url":"https://www.semanticscholar.org/author/3247864"},{"authorId":"1750983","name":"Manish
        Parashar","url":"https://www.semanticscholar.org/author/1750983"}],"doi":"10.1007/978-1-4939-1905-5_9","isInfluential":false,"paperId":"661fe3c21846e8ff1516b8ab432b363316362c1d","title":"Federating
        Advanced Cyberinfrastructures with Autonomic Capabilities","url":"https://www.semanticscholar.org/paper/661fe3c21846e8ff1516b8ab432b363316362c1d","venue":"Cloud
        Computing for Data-Intensive Applications","year":2014},{"arxivId":null,"authors":[{"authorId":null,"name":"MAMA
        S AHER","url":null},{"authorId":null,"name":"M. L ALITHA","url":null},{"authorId":null,"name":"G.
        V EERANJANEYULU","url":null}],"doi":null,"isInfluential":false,"paperId":"050b1a6d0aea066606964afb2f8dbcbe9427f696","title":"A
        P 2 P Proximity-Aware Interest-Clustered File Sharing System U","url":"https://www.semanticscholar.org/paper/050b1a6d0aea066606964afb2f8dbcbe9427f696","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"2353558","name":"Jaafar
        Gaber","url":"https://www.semanticscholar.org/author/2353558"},{"authorId":"2171456","name":"Mohamed
        Bakhouya","url":"https://www.semanticscholar.org/author/2171456"}],"doi":"10.1007/978-3-540-79705-0_6","isInfluential":false,"paperId":"29ec847e22619fe007db553202d6982cc170f1f2","title":"Mobile
        Agent-Based Approach for Resource Discovery in Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/29ec847e22619fe007db553202d6982cc170f1f2","venue":"AP2PC","year":2006},{"arxivId":null,"authors":[{"authorId":"1757054","name":"Giovanni
        Chiola","url":"https://www.semanticscholar.org/author/1757054"},{"authorId":"1705508","name":"Gennaro
        Cordasco","url":"https://www.semanticscholar.org/author/1705508"},{"authorId":"2742371","name":"Luisa
        Gargano","url":"https://www.semanticscholar.org/author/2742371"},{"authorId":"2960609","name":"Mikael
        Hammar","url":"https://www.semanticscholar.org/author/2960609"},{"authorId":"40571580","name":"Alberto
        Negro","url":"https://www.semanticscholar.org/author/40571580"},{"authorId":"1786473","name":"Vittorio
        Scarano","url":"https://www.semanticscholar.org/author/1786473"}],"doi":"10.1007/s00224-007-9074-x","isInfluential":false,"paperId":"692650c20ba248d5632c550dbbfb12e277131b7a","title":"Degree-Optimal
        Routing for P2P Systems","url":"https://www.semanticscholar.org/paper/692650c20ba248d5632c550dbbfb12e277131b7a","venue":"Theory
        of Computing Systems","year":2007},{"arxivId":null,"authors":[{"authorId":"31418658","name":"Nai
        wen Liu","url":"https://www.semanticscholar.org/author/31418658"},{"authorId":"40513797","name":"Fang
        ai Liu","url":"https://www.semanticscholar.org/author/40513797"}],"doi":"10.1109/CSSE.2008.66","isInfluential":false,"paperId":"11cc552131c00e4a6ae5349796e087134546caf0","title":"Search
        and Replication in a Hybrid Topology Architecture Based on RP(k)","url":"https://www.semanticscholar.org/paper/11cc552131c00e4a6ae5349796e087134546caf0","venue":"2008
        International Conference on Computer Science and Software Engineering","year":2008},{"arxivId":null,"authors":[{"authorId":"1696934","name":"Roberto
        Baldoni","url":"https://www.semanticscholar.org/author/1696934"},{"authorId":"2949587","name":"Roberto
        Beraldi","url":"https://www.semanticscholar.org/author/2949587"},{"authorId":"1775963","name":"Leonardo
        Querzoni","url":"https://www.semanticscholar.org/author/1775963"},{"authorId":"2553735","name":"Antonino
        Virgillito","url":"https://www.semanticscholar.org/author/2553735"}],"doi":"10.1093/comjnl/bxm002","isInfluential":false,"paperId":"55eeccbe5985671800a48bd96a6db4579791169f","title":"Efficient
        Publish/Subscribe Through a Self-Organizing Broker Overlay and its Application
        to SIENA","url":"https://www.semanticscholar.org/paper/55eeccbe5985671800a48bd96a6db4579791169f","venue":"Comput.
        J.","year":2007},{"arxivId":null,"authors":[{"authorId":null,"name":"Ilie","url":null},{"authorId":"1711137","name":"David
        Erman","url":"https://www.semanticscholar.org/author/1711137"}],"doi":null,"isInfluential":false,"paperId":"97daf546da66d7ee6ad1ef68c1bce541691d2280","title":"No
        . 2007 : 02 Peer \u2013 to \u2013 peer Traffic Measurements Dragos","url":"https://www.semanticscholar.org/paper/97daf546da66d7ee6ad1ef68c1bce541691d2280","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"46477225","name":"Haitao
        Wu","url":"https://www.semanticscholar.org/author/46477225"},{"authorId":"40165896","name":"Kun
        Tan","url":"https://www.semanticscholar.org/author/40165896"},{"authorId":"19219781","name":"Qian
        Zhang","url":"https://www.semanticscholar.org/author/19219781"},{"authorId":"38209808","name":"Wenwu
        Zhu","url":"https://www.semanticscholar.org/author/38209808"},{"authorId":"1807418","name":"Christian
        Huitema","url":"https://www.semanticscholar.org/author/1807418"}],"doi":null,"isInfluential":false,"paperId":"9010452ec0745353600cb5d5dca5bc342d986523","title":"End-to-End
        Mobility Support in IPv 6 Using Peer-to-Peer Technologies Chuanxiong","url":"https://www.semanticscholar.org/paper/9010452ec0745353600cb5d5dca5bc342d986523","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"48738356","name":"Guo-Ying
        Wang","url":"https://www.semanticscholar.org/author/48738356"},{"authorId":"46907439","name":"Zheng
        Hua","url":"https://www.semanticscholar.org/author/46907439"}],"doi":null,"isInfluential":true,"paperId":"aacd87e8fcc3707bdc4a4254c18bafb93ac3c255","title":"Flexible
        Sharing in Dht-based P 2 P Networks Using Metadata of Resource 1","url":"https://www.semanticscholar.org/paper/aacd87e8fcc3707bdc4a4254c18bafb93ac3c255","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"1720285","name":"Fausto
        Giunchiglia","url":"https://www.semanticscholar.org/author/1720285"},{"authorId":"3335772","name":"Uladzimir
        Kharkevich","url":"https://www.semanticscholar.org/author/3335772"},{"authorId":"7638904","name":"Sheak
        Rashed Haider Noori","url":"https://www.semanticscholar.org/author/7638904"}],"doi":null,"isInfluential":false,"paperId":"194a295924b4f55a32cc256cd3b63b8054a657b1","title":"P
        2 P Concept Search : Some Preliminary Results \u2217","url":"https://www.semanticscholar.org/paper/194a295924b4f55a32cc256cd3b63b8054a657b1","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"2653281","name":"Alessio
        Pace","url":"https://www.semanticscholar.org/author/2653281"}],"doi":null,"isInfluential":false,"paperId":"f352c008c53c1bc981436172ff667081815d8b5f","title":"Quelques
        d\u00e9fis pos\u00e9s par l''utilisation de protocoles de Gossip dans l''Internet.
        (Gossiping in the wild - Tackling practical problems faced by gossip protocols
        when deployed on the Internet)","url":"https://www.semanticscholar.org/paper/f352c008c53c1bc981436172ff667081815d8b5f","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"2394290","name":"Ge-Ming
        Chiu","url":"https://www.semanticscholar.org/author/2394290"},{"authorId":"1713287","name":"Li-Hsing
        Yen","url":"https://www.semanticscholar.org/author/1713287"},{"authorId":"40367223","name":"Tai-Lin
        Chin","url":"https://www.semanticscholar.org/author/40367223"}],"doi":"10.1109/TC.2010.231","isInfluential":false,"paperId":"78eae54f71037f31b3dc58943c46d182f31ba514","title":"Optimal
        Storage Placement for Tree-Structured Networks with Heterogeneous Channel
        Costs","url":"https://www.semanticscholar.org/paper/78eae54f71037f31b3dc58943c46d182f31ba514","venue":"IEEE
        Transactions on Computers","year":2011},{"arxivId":null,"authors":[{"authorId":"39272504","name":"Mile
        Arnedo","url":"https://www.semanticscholar.org/author/39272504"},{"authorId":"47326722","name":"Mar\u00eda-Del-Pilar
        Villamil","url":"https://www.semanticscholar.org/author/47326722"},{"authorId":"36778683","name":"Ricardo
        Villanueva","url":"https://www.semanticscholar.org/author/36778683"},{"authorId":"1753697","name":"Harold
        E. Castro","url":"https://www.semanticscholar.org/author/1753697"},{"authorId":"1751915","name":"Laurent
        d''Orazio","url":"https://www.semanticscholar.org/author/1751915"}],"doi":"10.1007/978-3-642-15108-8_5","isInfluential":false,"paperId":"f7365792848b224c67044b80f86b765be7920af4","title":"A
        Catalog-Based Caching Strategy for Structured P2P Systems","url":"https://www.semanticscholar.org/paper/f7365792848b224c67044b80f86b765be7920af4","venue":"Globe","year":2010},{"arxivId":null,"authors":[{"authorId":"2273899","name":"Juan
        Pedro Mu\u00f1oz-Gea","url":"https://www.semanticscholar.org/author/2273899"},{"authorId":"1945204","name":"Josemaria
        Malgosa-Sanahuja","url":"https://www.semanticscholar.org/author/1945204"},{"authorId":"2301331","name":"Pilar
        Manzanares-Lopez","url":"https://www.semanticscholar.org/author/2301331"},{"authorId":"5475203","name":"Juan
        Carlos S\u00e1nchez-Aarnoutse","url":"https://www.semanticscholar.org/author/5475203"},{"authorId":"2036807","name":"Antonio
        M. Martinez-Rojo","url":"https://www.semanticscholar.org/author/2036807"}],"doi":null,"isInfluential":false,"paperId":"0086c3f78b9b04751de06c4057490637116fc488","title":"Simulation
        of a P2P Application Using OverSim","url":"https://www.semanticscholar.org/paper/0086c3f78b9b04751de06c4057490637116fc488","venue":"2009
        First International Conference on Advances in Future Internet","year":2009},{"arxivId":null,"authors":[{"authorId":"1753489","name":"Zhongmei
        Yao","url":"https://www.semanticscholar.org/author/1753489"},{"authorId":"34983248","name":"Daren
        B. H. Cline","url":"https://www.semanticscholar.org/author/34983248"},{"authorId":"1737609","name":"Dmitri
        Loguinov","url":"https://www.semanticscholar.org/author/1737609"}],"doi":"10.1145/1925019.1925027","isInfluential":false,"paperId":"44dfc485fb543404b3ce71c3b330ed89fb281e07","title":"In-degree
        dynamics of large-scale P2P systems","url":"https://www.semanticscholar.org/paper/44dfc485fb543404b3ce71c3b330ed89fb281e07","venue":"SIGMETRICS
        Performance Evaluation Review","year":2010},{"arxivId":null,"authors":[{"authorId":"1740390","name":"Duc
        A. Tran","url":"https://www.semanticscholar.org/author/1740390"},{"authorId":"40647709","name":"Thinh
        P. Nguyen","url":"https://www.semanticscholar.org/author/40647709"}],"doi":"10.1016/j.comcom.2007.08.007","isInfluential":false,"paperId":"3fc3808cfcd26dec3b5b121289129c55f518a8b5","title":"Hierarchical
        multidimensional search in peer-to-peer networks","url":"https://www.semanticscholar.org/paper/3fc3808cfcd26dec3b5b121289129c55f518a8b5","venue":"Computer
        Communications","year":2008},{"arxivId":null,"authors":[{"authorId":"3324413","name":"Yan
        Shvartzshnaider","url":"https://www.semanticscholar.org/author/3324413"},{"authorId":"33857940","name":"Maximilian
        Ott","url":"https://www.semanticscholar.org/author/33857940"},{"authorId":"14839412","name":"David
        Levy","url":"https://www.semanticscholar.org/author/14839412"}],"doi":"10.1145/2034640.2034648","isInfluential":true,"paperId":"4965e38cf906d4f5c2e38496514a6e0325206644","title":"Towards
        a Kademlia DHT-based n-tuple store","url":"https://www.semanticscholar.org/paper/4965e38cf906d4f5c2e38496514a6e0325206644","venue":"TADDS","year":2011},{"arxivId":null,"authors":[{"authorId":"2171456","name":"Mohamed
        Bakhouya","url":"https://www.semanticscholar.org/author/2171456"},{"authorId":"2353558","name":"Jaafar
        Gaber","url":"https://www.semanticscholar.org/author/2353558"}],"doi":"10.1007/s11280-009-0079-z","isInfluential":false,"paperId":"84cbded9c8ffaf6b84d5fb592d42bd6d729e10c0","title":"A
        Query Routing Approach Based on Users\u2019 Satisfaction for Resource Discovery
        in Service-Oriented Networks","url":"https://www.semanticscholar.org/paper/84cbded9c8ffaf6b84d5fb592d42bd6d729e10c0","venue":"World
        Wide Web","year":2009},{"arxivId":null,"authors":[{"authorId":"2193573","name":"Niels
        Sluijs","url":"https://www.semanticscholar.org/author/2193573"},{"authorId":"2533827","name":"Tim
        Wauters","url":"https://www.semanticscholar.org/author/2533827"},{"authorId":"1963527","name":"Bart
        De Vleeschauwer","url":"https://www.semanticscholar.org/author/1963527"},{"authorId":"1715957","name":"Filip
        De Turck","url":"https://www.semanticscholar.org/author/1715957"},{"authorId":"1733741","name":"Bart
        Dhoedt","url":"https://www.semanticscholar.org/author/1733741"},{"authorId":"1742060","name":"Piet
        Demeester","url":"https://www.semanticscholar.org/author/1742060"}],"doi":"10.1109/AP2PS.2009.11","isInfluential":true,"paperId":"28f5aa4b5e3688f37cd45d3f22d25579e1591b78","title":"Caching
        Strategy for Scalable Lookup of Personal Content","url":"https://www.semanticscholar.org/paper/28f5aa4b5e3688f37cd45d3f22d25579e1591b78","venue":"2009
        First International Conference on Advances in P2P Systems","year":2009},{"arxivId":null,"authors":[{"authorId":"1707332","name":"Guanhong
        Pei","url":"https://www.semanticscholar.org/author/1707332"},{"authorId":"1729107","name":"Binoy
        Ravindran","url":"https://www.semanticscholar.org/author/1729107"},{"authorId":"1768689","name":"E.
        Douglas Jensen","url":"https://www.semanticscholar.org/author/1768689"}],"doi":"10.1145/2019583.2019586","isInfluential":false,"paperId":"079019852271ebf9542981c9986e038863f068b4","title":"Self-organizing
        and self-reconfigurable event routing in ad hoc networks with causal dependency
        awareness","url":"https://www.semanticscholar.org/paper/079019852271ebf9542981c9986e038863f068b4","venue":"TAAS","year":2011},{"arxivId":null,"authors":[{"authorId":"39735488","name":"Ravin
        Ahuja","url":"https://www.semanticscholar.org/author/39735488"},{"authorId":"3279689","name":"Asok
        De","url":"https://www.semanticscholar.org/author/3279689"},{"authorId":"1780748","name":"Goldie
        Gabrani","url":"https://www.semanticscholar.org/author/1780748"}],"doi":"10.1109/ICCSA.2010.61","isInfluential":false,"paperId":"1a3a9afd37e983fab5302f51ab62f9b563e45053","title":"An
        Economy Based Storage Grid Federation with a Decentralized Scheduling Technique","url":"https://www.semanticscholar.org/paper/1a3a9afd37e983fab5302f51ab62f9b563e45053","venue":"2010
        International Conference on Computational Science and Its Applications","year":2010},{"arxivId":null,"authors":[{"authorId":"1681450","name":"Hung-Chang
        Hsiao","url":"https://www.semanticscholar.org/author/1681450"},{"authorId":"34262794","name":"Hao
        Liao","url":"https://www.semanticscholar.org/author/34262794"},{"authorId":"2634849","name":"Ssu-Ta
        Chen","url":"https://www.semanticscholar.org/author/2634849"},{"authorId":"7776674","name":"Kuo-Chan
        Huang","url":"https://www.semanticscholar.org/author/7776674"}],"doi":"10.1109/TPDS.2010.105","isInfluential":true,"paperId":"71d44616d7aa8d621cacdb8543ff8c78688b44d5","title":"Load
        Balance with Imperfect Information in Structured Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/71d44616d7aa8d621cacdb8543ff8c78688b44d5","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2011},{"arxivId":null,"authors":[{"authorId":"2961794","name":"Harisankar
        Haridas","url":"https://www.semanticscholar.org/author/2961794"},{"authorId":"1941698","name":"D.
        Janaki Ram","url":"https://www.semanticscholar.org/author/1941698"}],"doi":"10.1007/s12083-014-0322-y","isInfluential":true,"paperId":"8b971f24c66e49545c6fe57d0fe660dfe2a82e9f","title":"CAPS:
        A cloud-assisted approach to handle spikes in peer-to-peer web search","url":"https://www.semanticscholar.org/paper/8b971f24c66e49545c6fe57d0fe660dfe2a82e9f","venue":"Peer-to-Peer
        Networking and Applications","year":2016},{"arxivId":null,"authors":[{"authorId":"32437480","name":"B.
        Gnanamozhi","url":"https://www.semanticscholar.org/author/32437480"},{"authorId":"2337412","name":"N.
        Bhalaji","url":"https://www.semanticscholar.org/author/2337412"}],"doi":null,"isInfluential":true,"paperId":"d2c2af4c832da99c8765bd4e3d324c343a1e98b9","title":"Deployment
        of overlay networks in IoT applications","url":"https://www.semanticscholar.org/paper/d2c2af4c832da99c8765bd4e3d324c343a1e98b9","venue":"2017
        International conference of Electronics, Communication and Aerospace Technology
        (ICECA)","year":2017},{"arxivId":null,"authors":[{"authorId":"1781300","name":"Hai
        Zhuge","url":"https://www.semanticscholar.org/author/1781300"},{"authorId":"2087579","name":"Xue
        Chen","url":"https://www.semanticscholar.org/author/2087579"},{"authorId":"49816760","name":"Xiaoping
        Sun","url":"https://www.semanticscholar.org/author/49816760"}],"doi":"10.1002/cpe.1033","isInfluential":false,"paperId":"8f3a3162d3181a90791e4eda83d7e9b00b307787","title":"Trust-based
        probabilistic search with the view model of peer-to-peer networks","url":"https://www.semanticscholar.org/paper/8f3a3162d3181a90791e4eda83d7e9b00b307787","venue":"Concurrency
        and Computation: Practice and Experience","year":2006},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"2656336","name":"Guoxin
        Liu","url":"https://www.semanticscholar.org/author/2656336"},{"authorId":"38495294","name":"Harrison
        Chandler","url":"https://www.semanticscholar.org/author/38495294"}],"doi":null,"isInfluential":true,"paperId":"37c3d4c1902ef198e1e09b5a5b5a8ce048317f9b","title":"Swarm
        Intelligence based File Replication and Consistency Maintenance in Structured
        P 2 P File Sharing Systems","url":"https://www.semanticscholar.org/paper/37c3d4c1902ef198e1e09b5a5b5a8ce048317f9b","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"47054837","name":"Jianbing
        Zhu","url":"https://www.semanticscholar.org/author/47054837"},{"authorId":"48876473","name":"Takeshi
        Tsuchiya","url":"https://www.semanticscholar.org/author/48876473"},{"authorId":"1752108","name":"Kei''ichi
        Koyanagi","url":"https://www.semanticscholar.org/author/1752108"}],"doi":"10.1109/CEC-EEE.2007.77","isInfluential":false,"paperId":"a1116fcdc42cb7918a461badd5a24141e1b8058a","title":"Peer-to-peer
        Collaborative Application-Level Multicast","url":"https://www.semanticscholar.org/paper/a1116fcdc42cb7918a461badd5a24141e1b8058a","venue":"The
        9th IEEE International Conference on E-Commerce Technology and The 4th IEEE
        International Conference on Enterprise Computing, E-Commerce and E-Services
        (CEC-EEE 2007)","year":2007},{"arxivId":null,"authors":[{"authorId":"2004672","name":"Eiko
        Yoneki","url":"https://www.semanticscholar.org/author/2004672"}],"doi":null,"isInfluential":false,"paperId":"5a6e19feca12067b47b740cc758f85c8b31ce1c6","title":"ECCO
        : data centric asynchronous communication","url":"https://www.semanticscholar.org/paper/5a6e19feca12067b47b740cc758f85c8b31ce1c6","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"1695576","name":"Joseph
        M. Hellerstein","url":"https://www.semanticscholar.org/author/1695576"},{"authorId":"3269316","name":"Tyson
        Condie","url":"https://www.semanticscholar.org/author/3269316"},{"authorId":"1738210","name":"Minos
        N. Garofalakis","url":"https://www.semanticscholar.org/author/1738210"},{"authorId":"35206168","name":"Boon
        Thau Loo","url":"https://www.semanticscholar.org/author/35206168"},{"authorId":"2286904","name":"Petros
        Maniatis","url":"https://www.semanticscholar.org/author/2286904"},{"authorId":"1734886","name":"Timothy
        Roscoe","url":"https://www.semanticscholar.org/author/1734886"},{"authorId":"2703784","name":"Nina
        Taft","url":"https://www.semanticscholar.org/author/2703784"}],"doi":null,"isInfluential":false,"paperId":"1a403ac5e3c4a017ed3df7bbf76f6f8c06eff288","title":"Public
        Health for the Internet ( \u03c6 ) Towards A New Grand Challenge for Information
        Management","url":"https://www.semanticscholar.org/paper/1a403ac5e3c4a017ed3df7bbf76f6f8c06eff288","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"1869391","name":"Daniel
        Stutzbach","url":"https://www.semanticscholar.org/author/1869391"},{"authorId":"2207332","name":"Reza
        Rejaie","url":"https://www.semanticscholar.org/author/2207332"},{"authorId":"1705906","name":"Nick
        G. Duffield","url":"https://www.semanticscholar.org/author/1705906"},{"authorId":"35049639","name":"Subhabrata
        Sen","url":"https://www.semanticscholar.org/author/35049639"},{"authorId":"1744426","name":"Walter
        Willinger","url":"https://www.semanticscholar.org/author/1744426"}],"doi":"10.1145/1177080.1177084","isInfluential":false,"paperId":"0d8621223ef4dcb9e5f1c967714bc59836bbf562","title":"On
        Unbiased Sampling for Unstructured Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/0d8621223ef4dcb9e5f1c967714bc59836bbf562","venue":"IEEE/ACM
        Transactions on Networking","year":2006},{"arxivId":null,"authors":[{"authorId":"1851167","name":"Chow-Sing
        Lin","url":"https://www.semanticscholar.org/author/1851167"},{"authorId":"3124007","name":"Jhe-Wei
        Lin","url":"https://www.semanticscholar.org/author/3124007"}],"doi":"10.1109/PDCAT.2013.32","isInfluential":false,"paperId":"e07347b7505c0719c6b405353472002b8fd496d1","title":"Service
        Availability for Various Forwarded Descriptions with Dynamic Buffering on
        Peer-to-Peer Streaming Networks","url":"https://www.semanticscholar.org/paper/e07347b7505c0719c6b405353472002b8fd496d1","venue":"2013
        International Conference on Parallel and Distributed Computing, Applications
        and Technologies","year":2013},{"arxivId":null,"authors":[{"authorId":"33982620","name":"Oscar
        Bravo","url":"https://www.semanticscholar.org/author/33982620"},{"authorId":"3246813","name":"Ant\u00f3nio
        Costa","url":"https://www.semanticscholar.org/author/3246813"},{"authorId":"1728677","name":"Maria
        Jo\u00e3o Nicolau","url":"https://www.semanticscholar.org/author/1728677"}],"doi":null,"isInfluential":false,"paperId":"14b2bd9c94b38fb7c1547c1122a94f9557eed69e","title":"Design
        and implementation of a hierarchical SIP-based peer-to-peer network","url":"https://www.semanticscholar.org/paper/14b2bd9c94b38fb7c1547c1122a94f9557eed69e","venue":"SoftCOM
        2012, 20th International Conference on Software, Telecommunications and Computer
        Networks","year":2012},{"arxivId":"1606.07876","authors":[{"authorId":"1746877","name":"Michele
        Amoretti","url":"https://www.semanticscholar.org/author/1746877"},{"authorId":"1748366","name":"Francesco
        Zanichelli","url":"https://www.semanticscholar.org/author/1748366"}],"doi":"10.1007/s12083-017-0551-y","isInfluential":false,"paperId":"ae1d9849f55e8913e7b30b224c802b97a7913488","title":"P2P-PL:
        A Pattern Language to Design Efficient and Robust Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/ae1d9849f55e8913e7b30b224c802b97a7913488","venue":"Peer-to-Peer
        Networking and Applications","year":2018},{"arxivId":null,"authors":[{"authorId":"2607093","name":"Daze
        Wang","url":"https://www.semanticscholar.org/author/2607093"},{"authorId":"2176396","name":"Quincy
        Chi Kwan Tse","url":"https://www.semanticscholar.org/author/2176396"},{"authorId":"46432938","name":"Ying
        Zhou","url":"https://www.semanticscholar.org/author/46432938"}],"doi":"10.1007/s10115-009-0270-7","isInfluential":false,"paperId":"bc62dc6bfd047549d63503a907f6fa7d426c7014","title":"A
        decentralized search engine for dynamic Web communities","url":"https://www.semanticscholar.org/paper/bc62dc6bfd047549d63503a907f6fa7d426c7014","venue":"Knowledge
        and Information Systems","year":2009},{"arxivId":null,"authors":[{"authorId":"2363492","name":"Isa\u00edas
        Martinez-Yelmo","url":"https://www.semanticscholar.org/author/2363492"},{"authorId":"6140312","name":"Rub\u00e9n
        Cuevas Rum\u00edn","url":"https://www.semanticscholar.org/author/6140312"},{"authorId":"34348446","name":"Carmen
        Guerrero","url":"https://www.semanticscholar.org/author/34348446"},{"authorId":"1749658","name":"Andreas
        Mauthe","url":"https://www.semanticscholar.org/author/1749658"}],"doi":"10.1109/PDP.2008.79","isInfluential":false,"paperId":"ab81333da89ddec983f72a1778512f5dc2e50ff8","title":"Routing
        Performance in a Hierarchical DHT-based Overlay Network","url":"https://www.semanticscholar.org/paper/ab81333da89ddec983f72a1778512f5dc2e50ff8","venue":"16th
        Euromicro Conference on Parallel, Distributed and Network-Based Processing
        (PDP 2008)","year":2008},{"arxivId":null,"authors":[{"authorId":"3365039","name":"K.
        L. S. Soujanya","url":"https://www.semanticscholar.org/author/3365039"},{"authorId":"2872435","name":"T.
        Swapna","url":"https://www.semanticscholar.org/author/2872435"},{"authorId":null,"name":"Dr.
        P. Raja Prakash Rao","url":null}],"doi":null,"isInfluential":true,"paperId":"44fef95b62438b3a96fc8131ee9d66ea78c6cb35","title":"Structured
        Peer-to-Peer Systems using Load Balancing with Imperfect Information","url":"https://www.semanticscholar.org/paper/44fef95b62438b3a96fc8131ee9d66ea78c6cb35","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"2681380","name":"Simone
        Cirani","url":"https://www.semanticscholar.org/author/2681380"},{"authorId":"1685596","name":"Luca
        Veltri","url":"https://www.semanticscholar.org/author/1685596"}],"doi":null,"isInfluential":true,"paperId":"dac3e0cea0fec187c7dc4b5a8bf83afb2f9e3fc0","title":"Implementation
        of a framework for a DHT-based Distributed Location Service","url":"https://www.semanticscholar.org/paper/dac3e0cea0fec187c7dc4b5a8bf83afb2f9e3fc0","venue":"2008
        16th International Conference on Software, Telecommunications and Computer
        Networks","year":2008},{"arxivId":null,"authors":[{"authorId":"49030327","name":"Takumi
        Okazaki","url":"https://www.semanticscholar.org/author/49030327"}],"doi":null,"isInfluential":false,"paperId":"38c479a5868331f27209863184eb47a0bff4c433","title":"Retrieving
        subset of result before completing top-k query","url":"https://www.semanticscholar.org/paper/38c479a5868331f27209863184eb47a0bff4c433","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"3518448","name":"John
        Jungpa Park","url":"https://www.semanticscholar.org/author/3518448"}],"doi":null,"isInfluential":false,"paperId":"05a5fd08fb118930074ded759613af5fc9455226","title":"Secure
        Internet Channeling Agent for Searching and Delivering Media Content","url":"https://www.semanticscholar.org/paper/05a5fd08fb118930074ded759613af5fc9455226","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"50713267","name":"Alan
        Brown","url":"https://www.semanticscholar.org/author/50713267"}],"doi":null,"isInfluential":true,"paperId":"33eeae32304595e9cd07bf8312990808a519b2c6","title":"Department
        of Computing Science and Mathematics University of Stirling Efficient Service
        Discovery In Wide Area Networks","url":"https://www.semanticscholar.org/paper/33eeae32304595e9cd07bf8312990808a519b2c6","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"12150302","name":"R.
        Lakshmana Rao","url":"https://www.semanticscholar.org/author/12150302"}],"doi":null,"isInfluential":false,"paperId":"e6e5c289b469ff72e0d303872da93a5f3e592df4","title":"A
        Proximity Knowledge on Passion Clustered P 2 p Distributed File System","url":"https://www.semanticscholar.org/paper/e6e5c289b469ff72e0d303872da93a5f3e592df4","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"39348287","name":"Leonardo
        Mariani","url":"https://www.semanticscholar.org/author/39348287"}],"doi":"10.1109/SAINT.2005.30","isInfluential":false,"paperId":"2b8430dacbb835d342a2bce0598d1bc678fe2d93","title":"Fault-tolerant
        routing for P2P systems with unstructured topology","url":"https://www.semanticscholar.org/paper/2b8430dacbb835d342a2bce0598d1bc678fe2d93","venue":"The
        2005 Symposium on Applications and the Internet","year":2005},{"arxivId":null,"authors":[{"authorId":"1733314","name":"Fei
        Peng","url":"https://www.semanticscholar.org/author/1733314"},{"authorId":"2846833","name":"Apostolos
        Malatras","url":"https://www.semanticscholar.org/author/2846833"},{"authorId":"1705631","name":"Mich\u00e8le
        Courant","url":"https://www.semanticscholar.org/author/1705631"},{"authorId":"2760106","name":"B\u00e9at
        Hirsbrunner","url":"https://www.semanticscholar.org/author/2760106"}],"doi":null,"isInfluential":false,"paperId":"5a3240b7b1165f929eba651ea9e81432db299678","title":"Topology
        Management in Heterogeneous P 2 P Overlay Networks","url":"https://www.semanticscholar.org/paper/5a3240b7b1165f929eba651ea9e81432db299678","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"20154699","name":"Derek
        Gordon Murray","url":"https://www.semanticscholar.org/author/20154699"}],"doi":null,"isInfluential":false,"paperId":"5f52a841c93054e63e1cab45fd5a71d777996411","title":"A
        distributed execution engine supporting data-dependent control flow","url":"https://www.semanticscholar.org/paper/5f52a841c93054e63e1cab45fd5a71d777996411","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":null,"name":"Paul
        Zijlmans pzijlma","url":null}],"doi":null,"isInfluential":false,"paperId":"d45d21cf0555812bb7d2fd1ef642370cddf8bdfb","title":"Decrepol
        : A Decentralized Replication Policy for Web Documents","url":"https://www.semanticscholar.org/paper/d45d21cf0555812bb7d2fd1ef642370cddf8bdfb","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"14418638","name":"David
        Kotz Robert Gray Apratim Purakayastha Sean Smith C Folt","url":"https://www.semanticscholar.org/author/14418638"}],"doi":null,"isInfluential":false,"paperId":"9d6c8b02d98cf8ad1b91c838e94fe77ecb1caf48","title":"Dean
        of Graduate Studies","url":"https://www.semanticscholar.org/paper/9d6c8b02d98cf8ad1b91c838e94fe77ecb1caf48","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"1743425","name":"Gang
        Yin","url":"https://www.semanticscholar.org/author/1743425"},{"authorId":"7581953","name":"Dian-xi
        Shi","url":"https://www.semanticscholar.org/author/7581953"},{"authorId":"1694557","name":"Huaimin
        Wang","url":"https://www.semanticscholar.org/author/1694557"},{"authorId":"1911580","name":"Min
        Guo","url":"https://www.semanticscholar.org/author/1911580"}],"doi":"10.1109/CSE.2009.330","isInfluential":true,"paperId":"2aff3f014d3ceff6845260f8f5bc9c1ba12a88fb","title":"RepCom:
        Towards Reputation Composition over Peer-to-Peer Communities","url":"https://www.semanticscholar.org/paper/2aff3f014d3ceff6845260f8f5bc9c1ba12a88fb","venue":"2009
        International Conference on Computational Science and Engineering","year":2009},{"arxivId":null,"authors":[{"authorId":"1733770","name":"Emil
        Sit","url":"https://www.semanticscholar.org/author/1733770"},{"authorId":"2099495","name":"Robert
        Tappan Morris","url":"https://www.semanticscholar.org/author/2099495"},{"authorId":"1681493","name":"M.
        Frans Kaashoek","url":"https://www.semanticscholar.org/author/1681493"}],"doi":null,"isInfluential":false,"paperId":"95efd1cc4118c414e188ea203203d16db567659c","title":"UsenetDHT:
        A Low-Overhead Design for Usenet","url":"https://www.semanticscholar.org/paper/95efd1cc4118c414e188ea203203d16db567659c","venue":"NSDI","year":2008},{"arxivId":null,"authors":[{"authorId":"1696196","name":"Pamela
        Zave","url":"https://www.semanticscholar.org/author/1696196"}],"doi":"10.1145/2185376.2185383","isInfluential":false,"paperId":"034a0ea624561648966f0a70b70f92574b11946f","title":"Using
        lightweight modeling to understand chord","url":"https://www.semanticscholar.org/paper/034a0ea624561648966f0a70b70f92574b11946f","venue":"Computer
        Communication Review","year":2012},{"arxivId":null,"authors":[{"authorId":"1708848","name":"Salman
        Baset","url":"https://www.semanticscholar.org/author/1708848"},{"authorId":"1734558","name":"Vijay
        K. Gurbani","url":"https://www.semanticscholar.org/author/1734558"},{"authorId":"2043681","name":"Alan
        B. Johnston","url":"https://www.semanticscholar.org/author/2043681"},{"authorId":"39753885","name":"Hadriel
        Kaplan","url":"https://www.semanticscholar.org/author/39753885"},{"authorId":"39531547","name":"Brian
        R Rosen","url":"https://www.semanticscholar.org/author/39531547"},{"authorId":"28469833","name":"Jonathan
        D. Rosenberg","url":"https://www.semanticscholar.org/author/28469833"}],"doi":"10.4304/jcm.7.2.89-105","isInfluential":false,"paperId":"f1700e226fcbd5c9dba7a4dbfeec9610a8944c07","title":"The
        Session Initiation Protocol (SIP): An Evolutionary Study","url":"https://www.semanticscholar.org/paper/f1700e226fcbd5c9dba7a4dbfeec9610a8944c07","venue":"JCM","year":2012},{"arxivId":null,"authors":[{"authorId":"38348772","name":"Jinho
        Hwang","url":"https://www.semanticscholar.org/author/38348772"},{"authorId":"2297346","name":"Timothy
        Wood","url":"https://www.semanticscholar.org/author/2297346"}],"doi":null,"isInfluential":false,"paperId":"6eb2acba39e719ad29439296837e39ce40a04312","title":"Adaptive
        Performance-Aware Distributed Memory Caching","url":"https://www.semanticscholar.org/paper/6eb2acba39e719ad29439296837e39ce40a04312","venue":"ICAC","year":2013},{"arxivId":null,"authors":[{"authorId":"2883709","name":"Dan
        R. K. Ports","url":"https://www.semanticscholar.org/author/2883709"},{"authorId":"3098834","name":"Austin
        T. Clements","url":"https://www.semanticscholar.org/author/3098834"},{"authorId":"2306249","name":"Irene
        Zhang","url":"https://www.semanticscholar.org/author/2306249"},{"authorId":"2033016","name":"Samuel
        Madden","url":"https://www.semanticscholar.org/author/2033016"},{"authorId":"1720373","name":"Barbara
        Liskov","url":"https://www.semanticscholar.org/author/1720373"}],"doi":null,"isInfluential":false,"paperId":"0672911fe69b0cf0ff4e194215db0c4f605aafe0","title":"Transactional
        Consistency and Automatic Management in an Application Data Cache","url":"https://www.semanticscholar.org/paper/0672911fe69b0cf0ff4e194215db0c4f605aafe0","venue":"OSDI","year":2010},{"arxivId":null,"authors":[{"authorId":"2363492","name":"Isa\u00edas
        Martinez-Yelmo","url":"https://www.semanticscholar.org/author/2363492"},{"authorId":"49623164","name":"Rub\u00e9n
        Cuevas","url":"https://www.semanticscholar.org/author/49623164"},{"authorId":"34348446","name":"Carmen
        Guerrero","url":"https://www.semanticscholar.org/author/34348446"}],"doi":null,"isInfluential":false,"paperId":"7a73c8e5d91b7c9401e0180d30a4ab13c7e3dffb","title":"Analysis
        of searching mechanisms in hierarchical p 2 p based overlay networks","url":"https://www.semanticscholar.org/paper/7a73c8e5d91b7c9401e0180d30a4ab13c7e3dffb","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"40291384","name":"Dongyu
        Qiu","url":"https://www.semanticscholar.org/author/40291384"},{"authorId":"1682223","name":"R.
        Srikant","url":"https://www.semanticscholar.org/author/1682223"}],"doi":"10.1145/1015467.1015508","isInfluential":false,"paperId":"255dea00c7dd932b8f534e535a99e4665529729b","title":"Modeling
        and performance analysis of BitTorrent-like peer-to-peer networks","url":"https://www.semanticscholar.org/paper/255dea00c7dd932b8f534e535a99e4665529729b","venue":"SIGCOMM","year":2004},{"arxivId":null,"authors":[{"authorId":"50032031","name":"Yi
        Ma","url":"https://www.semanticscholar.org/author/50032031"},{"authorId":"1747573","name":"Zhenhua
        Tan","url":"https://www.semanticscholar.org/author/1747573"},{"authorId":"1744084","name":"Guiran
        Chang","url":"https://www.semanticscholar.org/author/1744084"},{"authorId":"2304167","name":"Xiaoxing
        Gao","url":"https://www.semanticscholar.org/author/2304167"}],"doi":"10.1109/HIS.2009.193","isInfluential":false,"paperId":"5e750bb26322c85f1c4b9c9bbdec6d18a84633d1","title":"A
        P2P Network Topology Optimized Algorithm Based on Minimum Maximum K-Means
        Principle","url":"https://www.semanticscholar.org/paper/5e750bb26322c85f1c4b9c9bbdec6d18a84633d1","venue":"2009
        Ninth International Conference on Hybrid Intelligent Systems","year":2009},{"arxivId":null,"authors":[{"authorId":"1737114","name":"Hermann
        de Meer","url":"https://www.semanticscholar.org/author/1737114"},{"authorId":null,"name":"Andreas
        Simb\u00fcrger","url":null},{"authorId":"2370834","name":"Katarzyna Matusik","url":"https://www.semanticscholar.org/author/2370834"},{"authorId":null,"name":"Sebastian
        Schinkin","url":null},{"authorId":"49412371","name":"Benjamin Thiel","url":"https://www.semanticscholar.org/author/49412371"},{"authorId":"2019787","name":"Michael
        Schrank","url":"https://www.semanticscholar.org/author/2019787"},{"authorId":null,"name":"Jakob
        Gamurar","url":null},{"authorId":null,"name":"Franz Stattenberger","url":null},{"authorId":"32429574","name":"Christian
        Hick","url":"https://www.semanticscholar.org/author/32429574"}],"doi":null,"isInfluential":false,"paperId":"733b5c2e78094101d19a42c327f6602b34e51784","title":"Proseminar
        Peer-to-Peer Networking","url":"https://www.semanticscholar.org/paper/733b5c2e78094101d19a42c327f6602b34e51784","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"2431360","name":"John
        Korah","url":"https://www.semanticscholar.org/author/2431360"}],"doi":null,"isInfluential":false,"paperId":"48d9a583f0b8019dffbcc4ddb7b6c9ab6cb54f1d","title":"Issues
        of Real Time Information Retrieval in Large, Dynamic and Heterogeneous Search
        Spaces","url":"https://www.semanticscholar.org/paper/48d9a583f0b8019dffbcc4ddb7b6c9ab6cb54f1d","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"2071250","name":"Lichun
        Li","url":"https://www.semanticscholar.org/author/2071250"},{"authorId":"1792246","name":"Chunhong
        Zhang","url":"https://www.semanticscholar.org/author/1792246"},{"authorId":"1711589","name":"Yao
        Wang","url":"https://www.semanticscholar.org/author/1711589"},{"authorId":"1747536","name":"Yang
        Ji","url":"https://www.semanticscholar.org/author/1747536"}],"doi":"10.1109/GLOCOM.2008.ECP.341","isInfluential":false,"paperId":"f565465630abb9bcdf44f8423deb12b27e66833e","title":"Reliable
        and Scalable DHT-Based SIP Server Farm","url":"https://www.semanticscholar.org/paper/f565465630abb9bcdf44f8423deb12b27e66833e","venue":"IEEE
        GLOBECOM 2008 - 2008 IEEE Global Telecommunications Conference","year":2008},{"arxivId":"cs/0409001","authors":[{"authorId":"2399108","name":"Alexandre
        O. Stauffer","url":"https://www.semanticscholar.org/author/2399108"},{"authorId":"1685359","name":"Valmir
        Carneiro Barbosa","url":"https://www.semanticscholar.org/author/1685359"}],"doi":"10.1109/TNET.2007.892877","isInfluential":false,"paperId":"17892f700bf0835a21120075f76d08154ee80319","title":"Probabilistic
        Heuristics for Disseminating Information in Networks","url":"https://www.semanticscholar.org/paper/17892f700bf0835a21120075f76d08154ee80319","venue":"IEEE/ACM
        Transactions on Networking","year":2007},{"arxivId":null,"authors":[{"authorId":"4200313","name":"Jiyoung
        Song","url":"https://www.semanticscholar.org/author/4200313"},{"authorId":"1875514","name":"Sungyong
        Park","url":"https://www.semanticscholar.org/author/1875514"},{"authorId":"3165524","name":"Jihoon
        Yang","url":"https://www.semanticscholar.org/author/3165524"}],"doi":"10.1007/978-3-540-30501-9_152","isInfluential":false,"paperId":"a820931c8ca1e61031bb38ead343cc203529bc50","title":"An
        Adaptive Proximity Route Selection Scheme in DHT-Based Peer to Peer Systems","url":"https://www.semanticscholar.org/paper/a820931c8ca1e61031bb38ead343cc203529bc50","venue":"PDCAT","year":2004},{"arxivId":null,"authors":[{"authorId":"1751940","name":"Haraldur
        D. Thorvaldsson","url":"https://www.semanticscholar.org/author/1751940"},{"authorId":"1770161","name":"Kenneth
        J. Goldman","url":"https://www.semanticscholar.org/author/1770161"}],"doi":null,"isInfluential":false,"paperId":"d3d1b3572a2b613a444961ae4a1c1902e466f334","title":"Architecture
        and Execution Model for a Survivable Workflow Transaction Infrastructure","url":"https://www.semanticscholar.org/paper/d3d1b3572a2b613a444961ae4a1c1902e466f334","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"3031441","name":"George
        Giakkoupis","url":"https://www.semanticscholar.org/author/3031441"},{"authorId":"2387538","name":"Vassos
        Hadzilacos","url":"https://www.semanticscholar.org/author/2387538"}],"doi":"10.1145/1281100.1281117","isInfluential":false,"paperId":"5b32786fb5a48231136c05e86898fd72b6dad82c","title":"On
        the complexity of greedy routing in ring-based peer-to-peer networks","url":"https://www.semanticscholar.org/paper/5b32786fb5a48231136c05e86898fd72b6dad82c","venue":"PODC","year":2007},{"arxivId":null,"authors":[{"authorId":"1719293","name":"Mesaac
        Makpangou","url":"https://www.semanticscholar.org/author/1719293"},{"authorId":"31610571","name":"Bassirou
        Ngom","url":"https://www.semanticscholar.org/author/31610571"},{"authorId":"2874616","name":"Samba
        Ndiaye","url":"https://www.semanticscholar.org/author/2874616"}],"doi":null,"isInfluential":false,"paperId":"e85f2b83dc01983b4357e16dc43c40dcacc307f8","title":"Friticores
        : A RSS Feed Monitoring and Dissemination System","url":"https://www.semanticscholar.org/paper/e85f2b83dc01983b4357e16dc43c40dcacc307f8","venue":"","year":2017},{"arxivId":null,"authors":[{"authorId":"1751546","name":"Javier
        Celaya","url":"https://www.semanticscholar.org/author/1751546"},{"authorId":"1794630","name":"Unai
        Arronategui","url":"https://www.semanticscholar.org/author/1794630"}],"doi":"10.1007/11847366_25","isInfluential":false,"paperId":"1d60e607513721cf73723cca0ffd145d4e3472e5","title":"Scalable
        Architecture for Allocation of Idle CPUs in a P2P Network","url":"https://www.semanticscholar.org/paper/1d60e607513721cf73723cca0ffd145d4e3472e5","venue":"HPCC","year":2006},{"arxivId":null,"authors":[{"authorId":"2030711","name":"Prateek
        Mittal","url":"https://www.semanticscholar.org/author/2030711"},{"authorId":"1681179","name":"Nikita
        Borisov","url":"https://www.semanticscholar.org/author/1681179"}],"doi":"10.1145/1653662.1653683","isInfluential":true,"paperId":"2c724a3ac61a1f5bd2a26d537c3d8b2aadaef40b","title":"ShadowWalker:
        peer-to-peer anonymous communication using redundant structured topologies","url":"https://www.semanticscholar.org/paper/2c724a3ac61a1f5bd2a26d537c3d8b2aadaef40b","venue":"ACM
        Conference on Computer and Communications Security","year":2009},{"arxivId":null,"authors":[{"authorId":"48458409","name":"Ze
        Li","url":"https://www.semanticscholar.org/author/48458409"},{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"36775862","name":"Karan
        Sapra","url":"https://www.semanticscholar.org/author/36775862"}],"doi":"10.1109/ICPP.2012.20","isInfluential":true,"paperId":"e37d7018091335614a6cc2d4e557977ddac61cc2","title":"Collusion
        Detection in Reputation Systems for Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/e37d7018091335614a6cc2d4e557977ddac61cc2","venue":"2012
        41st International Conference on Parallel Processing","year":2012},{"arxivId":null,"authors":[{"authorId":"40448767","name":"Linchen
        Yu","url":"https://www.semanticscholar.org/author/40448767"}],"doi":"10.1109/TrustCom.2012.183","isInfluential":false,"paperId":"1450ddd5f33838366b8d86aa264568a2c5dbd0b6","title":"Improving
        Query for P2P SIP VoIP","url":"https://www.semanticscholar.org/paper/1450ddd5f33838366b8d86aa264568a2c5dbd0b6","venue":"2012
        IEEE 11th International Conference on Trust, Security and Privacy in Computing
        and Communications","year":2012},{"arxivId":null,"authors":[{"authorId":"8840351","name":"D.
        Pooja Janakiram","url":"https://www.semanticscholar.org/author/8840351"}],"doi":null,"isInfluential":true,"paperId":"83dfd7213c09459ce762a44d20aa13207affb636","title":"SyMon
        : A practical approach to defend large structured P 2 P systems against Sybil
        Attack","url":"https://www.semanticscholar.org/paper/83dfd7213c09459ce762a44d20aa13207affb636","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"30598630","name":"Zhang
        Tai","url":"https://www.semanticscholar.org/author/30598630"},{"authorId":"38486296","name":"Wang
        Sheng","url":"https://www.semanticscholar.org/author/38486296"},{"authorId":"48982183","name":"Liao
        Dan","url":"https://www.semanticscholar.org/author/48982183"}],"doi":null,"isInfluential":false,"paperId":"0de360f832a054ca7a1cdc70270688b5ab29965d","title":"LISP-PCHORD:
        An enhanced pointer-based DHT to support LISP","url":"https://www.semanticscholar.org/paper/0de360f832a054ca7a1cdc70270688b5ab29965d","venue":"China
        Communications","year":2013},{"arxivId":null,"authors":[{"authorId":null,"name":"Simon
        Ed\u00e4nge","url":null}],"doi":null,"isInfluential":true,"paperId":"390c633afd8b2ed1908fcb18a75ea13069f8dc3c","title":"An
        Implementation and Performance Evaluation of a Peer-to-Peer Chat System","url":"https://www.semanticscholar.org/paper/390c633afd8b2ed1908fcb18a75ea13069f8dc3c","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"1856020","name":"Kazuyuki
        Shudo","url":"https://www.semanticscholar.org/author/1856020"}],"doi":"10.1109/ISCC.2017.8024566","isInfluential":true,"paperId":"2b63e0e429be156179e6255dde81d74001f4db2f","title":"Message
        bundling on structured overlays","url":"https://www.semanticscholar.org/paper/2b63e0e429be156179e6255dde81d74001f4db2f","venue":"2017
        IEEE Symposium on Computers and Communications (ISCC)","year":2017},{"arxivId":null,"authors":[{"authorId":"7396712","name":"Deguo
        Yang","url":"https://www.semanticscholar.org/author/7396712"},{"authorId":"48016941","name":"Hui
        Wang","url":"https://www.semanticscholar.org/author/48016941"},{"authorId":"3042735","name":"Yuhui
        Zhao","url":"https://www.semanticscholar.org/author/3042735"},{"authorId":"48146634","name":"Yuan
        Gao","url":"https://www.semanticscholar.org/author/48146634"}],"doi":null,"isInfluential":true,"paperId":"4e86327adbf7f4cfb12e64d46efc6cf3e070c079","title":"A
        Real-time Streaming Media File Sharing Mechanism Based on P2P and SIP","url":"https://www.semanticscholar.org/paper/4e86327adbf7f4cfb12e64d46efc6cf3e070c079","venue":"2006
        First International Symposium on Pervasive Computing and Applications","year":2006},{"arxivId":null,"authors":[{"authorId":null,"name":"Chahita
        Taank","url":null},{"authorId":"40695496","name":"R. Bharati","url":"https://www.semanticscholar.org/author/40695496"}],"doi":null,"isInfluential":false,"paperId":"29ab4f3bd32dd3a41e510c0cb23819c6251ae41d","title":"Load
        Balancing Algorithm for DHT Based Structured Peer to Peer System","url":"https://www.semanticscholar.org/paper/29ab4f3bd32dd3a41e510c0cb23819c6251ae41d","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"2622212","name":"Yinzhe
        Yu","url":"https://www.semanticscholar.org/author/2622212"}],"doi":null,"isInfluential":false,"paperId":"0a517ef95a1a28edff53d3583b85eb0697cd55c0","title":"Efficient
        and Scalable Lookup Services in Large Scale P 2 P and Mobile Ad Hoc Networks","url":"https://www.semanticscholar.org/paper/0a517ef95a1a28edff53d3583b85eb0697cd55c0","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"1694014","name":"Guojun
        Wang","url":"https://www.semanticscholar.org/author/1694014"},{"authorId":"1780398","name":"Jiannong
        Cao","url":"https://www.semanticscholar.org/author/1780398"},{"authorId":"2620467","name":"Lifan
        Zhang","url":"https://www.semanticscholar.org/author/2620467"},{"authorId":"31680520","name":"Keith
        C. C. Chan","url":"https://www.semanticscholar.org/author/31680520"},{"authorId":"49388033","name":"Jie
        Wu","url":"https://www.semanticscholar.org/author/49388033"}],"doi":"10.1109/IPDPS.2005.53","isInfluential":false,"paperId":"7d86ef245bf3952813522233ee6f0d79bac56310","title":"A
        novel QoS multicast model in mobile ad hoc networks","url":"https://www.semanticscholar.org/paper/7d86ef245bf3952813522233ee6f0d79bac56310","venue":"19th
        IEEE International Parallel and Distributed Processing Symposium","year":2005},{"arxivId":null,"authors":[{"authorId":"1762339","name":"Joud
        Khoury","url":"https://www.semanticscholar.org/author/1762339"},{"authorId":"1742851","name":"Chaouki
        T. Abdallah","url":"https://www.semanticscholar.org/author/1742851"}],"doi":null,"isInfluential":false,"paperId":"4bdd516ce8245af86d4c56be1be94e684dd4836a","title":"Identifier-Based
        Discovery Mechanism Design in Large-Scale Networks","url":"https://www.semanticscholar.org/paper/4bdd516ce8245af86d4c56be1be94e684dd4836a","venue":"2009
        IEEE International Conference on Communications Workshops","year":2009},{"arxivId":null,"authors":[{"authorId":"3042551","name":"Qiong
        Zhang","url":"https://www.semanticscholar.org/author/3042551"},{"authorId":"1699148","name":"Neal
        Charbonneau","url":"https://www.semanticscholar.org/author/1699148"},{"authorId":"9087286","name":"Vinod
        Vokkarane","url":"https://www.semanticscholar.org/author/9087286"},{"authorId":"1741553","name":"Jason
        P. Jue","url":"https://www.semanticscholar.org/author/1741553"}],"doi":"10.1007/s11107-011-0329-8","isInfluential":false,"paperId":"07ff133731352bbdb26bd43b608fe95d1b615127","title":"TCP
        over optical burst-switched networks with controlled burst retransmission","url":"https://www.semanticscholar.org/paper/07ff133731352bbdb26bd43b608fe95d1b615127","venue":"Photonic
        Network Communications","year":2011},{"arxivId":null,"authors":[{"authorId":"2044876","name":"Qiuming
        Luo","url":"https://www.semanticscholar.org/author/2044876"},{"authorId":"39841204","name":"Yun
        Li","url":"https://www.semanticscholar.org/author/39841204"},{"authorId":"7495516","name":"Wentao
        Dong","url":"https://www.semanticscholar.org/author/7495516"},{"authorId":"2119837","name":"Xiaohui
        Lin","url":"https://www.semanticscholar.org/author/2119837"}],"doi":null,"isInfluential":false,"paperId":"44937f77db753c3126e9a79acac9c50d7930d0b1","title":"Performance
        analysis for noncontiguous I/O using multiple I/O, data sieving and list I/O
        in peer-to-peer parallel computing","url":"https://www.semanticscholar.org/paper/44937f77db753c3126e9a79acac9c50d7930d0b1","venue":"2010
        2nd International Conference on Computer Engineering and Technology","year":2010},{"arxivId":null,"authors":[{"authorId":"1696934","name":"Roberto
        Baldoni","url":"https://www.semanticscholar.org/author/1696934"},{"authorId":"1970469","name":"Silvia
        Bonomi","url":"https://www.semanticscholar.org/author/1970469"},{"authorId":"34580614","name":"Amir
        Soltani","url":"https://www.semanticscholar.org/author/34580614"}],"doi":null,"isInfluential":false,"paperId":"e56e1dde3b6f742cf18ac5593c06709abed7ae8d","title":"Regular
        Registers in Dynamic Distributed Systems with Byzantine Processes : Bounds
        and Performance Analysis","url":"https://www.semanticscholar.org/paper/e56e1dde3b6f742cf18ac5593c06709abed7ae8d","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"1720126","name":"Ciprian
        Dobre","url":"https://www.semanticscholar.org/author/1720126"}],"doi":null,"isInfluential":true,"paperId":"ce81a3910203629fd8eea7977534ad82cff15afd","title":"A
        Cluster-enhanced Fault Tolerant Peer-to-peer System","url":"https://www.semanticscholar.org/paper/ce81a3910203629fd8eea7977534ad82cff15afd","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"1696196","name":"Pamela
        Zave","url":"https://www.semanticscholar.org/author/1696196"}],"doi":null,"isInfluential":false,"paperId":"f756bcfc998fc3128ee7d69b5425188b5b1b8a4b","title":"Lightweight
        Verification of Network Protocols : The Case of Chord","url":"https://www.semanticscholar.org/paper/f756bcfc998fc3128ee7d69b5425188b5b1b8a4b","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"2028623","name":"Wilson
        Ram\u00edrez","url":"https://www.semanticscholar.org/author/2028623"},{"authorId":"1736092","name":"Xavier
        Masip-Bruin","url":"https://www.semanticscholar.org/author/1736092"},{"authorId":"2294712","name":"Marcelo
        Yannuzzi","url":"https://www.semanticscholar.org/author/2294712"},{"authorId":"1878778","name":"Ren\u00e9
        Serral-Graci\u00e0","url":"https://www.semanticscholar.org/author/1878778"},{"authorId":"17717164","name":"Anny
        Mart\u00ednez","url":"https://www.semanticscholar.org/author/17717164"},{"authorId":"48197103","name":"M.
        S. Siddiqui","url":"https://www.semanticscholar.org/author/48197103"}],"doi":"10.1016/j.bjp.2013.12.006","isInfluential":true,"paperId":"c8acbd804e23697250a100a638f5b8a0c5e6724d","title":"A
        survey and taxonomy of ID/Locator Split Architectures","url":"https://www.semanticscholar.org/paper/c8acbd804e23697250a100a638f5b8a0c5e6724d","venue":"Computer
        Networks","year":2014},{"arxivId":null,"authors":[{"authorId":"34146824","name":"Jeffrey
        Green","url":"https://www.semanticscholar.org/author/34146824"}],"doi":null,"isInfluential":true,"paperId":"e949e048290b163c388255e2e2e88690d80261b0","title":"Optimal
        Routing in Bidirectional Variants of Chord","url":"https://www.semanticscholar.org/paper/e949e048290b163c388255e2e2e88690d80261b0","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"47906756","name":"Yan
        Wang","url":"https://www.semanticscholar.org/author/47906756"},{"authorId":"34985964","name":"Xiaofeng
        Qiu","url":"https://www.semanticscholar.org/author/34985964"},{"authorId":"1792246","name":"Chunhong
        Zhang","url":"https://www.semanticscholar.org/author/1792246"},{"authorId":"1763176","name":"Wei
        Mi","url":"https://www.semanticscholar.org/author/1763176"},{"authorId":"2071250","name":"Lichun
        Li","url":"https://www.semanticscholar.org/author/2071250"},{"authorId":"46984130","name":"Yang
        Ji","url":"https://www.semanticscholar.org/author/46984130"}],"doi":null,"isInfluential":true,"paperId":"43c7e94af4fcbf5f6a1f825a46953a52cf5e03ea","title":"Effective
        Data Replication in Heterogeneous Structured P2P Networks","url":"https://www.semanticscholar.org/paper/43c7e94af4fcbf5f6a1f825a46953a52cf5e03ea","venue":"2009
        5th International Conference on Wireless Communications, Networking and Mobile
        Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"2534723","name":"Thomas
        Clouser","url":"https://www.semanticscholar.org/author/2534723"},{"authorId":"1712607","name":"Mikhail
        Nesterenko","url":"https://www.semanticscholar.org/author/1712607"},{"authorId":"1751016","name":"Christian
        Scheideler","url":"https://www.semanticscholar.org/author/1751016"}],"doi":"10.1007/978-3-540-89335-6_12","isInfluential":false,"paperId":"60a4602ad69930c2c670e3846d2db0a74e6fa93e","title":"Tiara:
        A Self-stabilizing Deterministic Skip List","url":"https://www.semanticscholar.org/paper/60a4602ad69930c2c670e3846d2db0a74e6fa93e","venue":"SSS","year":2008},{"arxivId":null,"authors":[{"authorId":"2474146","name":"Christof
        Squarr","url":"https://www.semanticscholar.org/author/2474146"},{"authorId":"2947947","name":"Jens
        Bruhn","url":"https://www.semanticscholar.org/author/2947947"},{"authorId":"1716142","name":"Guido
        Wirtz","url":"https://www.semanticscholar.org/author/1716142"}],"doi":"10.1109/AICCSA.2006.205063","isInfluential":false,"paperId":"4adbc846dfa05323559f97289430558cd1be5953","title":"Adaptive
        Search in a Semi-Structured Peer-to-Peer System","url":"https://www.semanticscholar.org/paper/4adbc846dfa05323559f97289430558cd1be5953","venue":"IEEE
        International Conference on Computer Systems and Applications, 2006.","year":2006},{"arxivId":null,"authors":[{"authorId":"1712281","name":"Khaled
        A. S. Abdel-Ghaffar","url":"https://www.semanticscholar.org/author/1712281"},{"authorId":"1709353","name":"Amr
        El Abbadi","url":"https://www.semanticscholar.org/author/1709353"}],"doi":"10.1109/TKDE.2006.149","isInfluential":false,"paperId":"5d9fbdeff3dbf16aeee56180552864dbbb4dddc6","title":"The
        Optimality of Allocation Methods for Bounded Disagreement Search Queries:
        The Possible and the Impossible","url":"https://www.semanticscholar.org/paper/5d9fbdeff3dbf16aeee56180552864dbbb4dddc6","venue":"IEEE
        Transactions on Knowledge and Data Engineering","year":2006},{"arxivId":"1006.4543","authors":[{"authorId":"2024795","name":"R.
        Anusuya","url":"https://www.semanticscholar.org/author/2024795"},{"authorId":"46791477","name":"V.
        Kavitha","url":"https://www.semanticscholar.org/author/46791477"},{"authorId":"2363256","name":"E.
        Golden Julie","url":"https://www.semanticscholar.org/author/2363256"}],"doi":null,"isInfluential":false,"paperId":"f1efc818b58e40d7c859c965274ad48b2b1f4fbe","title":"Enhancing
        and Analyzing Search performance in Unstructured Peer to Peer Networks Using
        Enhanced Guided search protocol (EGSP)","url":"https://www.semanticscholar.org/paper/f1efc818b58e40d7c859c965274ad48b2b1f4fbe","venue":"ArXiv","year":2010},{"arxivId":null,"authors":[{"authorId":"1746877","name":"Michele
        Amoretti","url":"https://www.semanticscholar.org/author/1746877"}],"doi":"10.1007/s10710-013-9182-0","isInfluential":false,"paperId":"818e72a3a379ff0211a466610e53e7e1943358ae","title":"Introducing
        artificial evolution into peer-to-peer networks with the distributed remodeling
        framework","url":"https://www.semanticscholar.org/paper/818e72a3a379ff0211a466610e53e7e1943358ae","venue":"Genetic
        Programming and Evolvable Machines","year":2013},{"arxivId":null,"authors":[{"authorId":"1710379","name":"Azzedine
        Boukerche","url":"https://www.semanticscholar.org/author/1710379"},{"authorId":"1719492","name":"Regina
        Borges de Araujo","url":"https://www.semanticscholar.org/author/1719492"},{"authorId":"1749554","name":"Anis
        Zarrad","url":"https://www.semanticscholar.org/author/1749554"}],"doi":"10.1109/ICC.2009.5305954","isInfluential":false,"paperId":"329a71430e4b9540bfd2953589026edd1f4e100f","title":"A
        Dynamic Ultrapeers Selection Policy for Collaborative Virtual Environments
        over Mobile Ad Hoc Networks","url":"https://www.semanticscholar.org/paper/329a71430e4b9540bfd2953589026edd1f4e100f","venue":"2009
        IEEE International Conference on Communications","year":2009},{"arxivId":null,"authors":[{"authorId":"2486986","name":"Xiangyu
        Liu","url":"https://www.semanticscholar.org/author/2486986"},{"authorId":"1716059","name":"Maozhen
        Li","url":"https://www.semanticscholar.org/author/1716059"},{"authorId":"2745095","name":"Hao
        Qi","url":"https://www.semanticscholar.org/author/2745095"},{"authorId":"37731559","name":"Yang
        Liu","url":"https://www.semanticscholar.org/author/37731559"},{"authorId":"49293331","name":"Zelong
        Liu","url":"https://www.semanticscholar.org/author/49293331"}],"doi":null,"isInfluential":true,"paperId":"cb1dc04a65c3feefa23fa5f4cba2ddf4429b9f32","title":"A
        Peer-to-Peer Network for Bibliographic Information Retrieval","url":"https://www.semanticscholar.org/paper/cb1dc04a65c3feefa23fa5f4cba2ddf4429b9f32","venue":"2009
        Sixth International Conference on Fuzzy Systems and Knowledge Discovery","year":2009},{"arxivId":null,"authors":[{"authorId":"3333445","name":"Magdalena
        Punceva","url":"https://www.semanticscholar.org/author/3333445"},{"authorId":"1709070","name":"Ivan
        Rodero","url":"https://www.semanticscholar.org/author/1709070"},{"authorId":"1750983","name":"Manish
        Parashar","url":"https://www.semanticscholar.org/author/1750983"},{"authorId":"1751264","name":"Omer
        F. Rana","url":"https://www.semanticscholar.org/author/1751264"},{"authorId":"48585368","name":"Ioan
        Petri","url":"https://www.semanticscholar.org/author/48585368"}],"doi":"10.1109/WETICE.2012.68","isInfluential":false,"paperId":"4f6e30332967cf3294369d3d22bf1331801b09aa","title":"Incentivising
        Resource Sharing in Social Clouds","url":"https://www.semanticscholar.org/paper/4f6e30332967cf3294369d3d22bf1331801b09aa","venue":"2012
        IEEE 21st International Workshop on Enabling Technologies: Infrastructure
        for Collaborative Enterprises","year":2012},{"arxivId":null,"authors":[{"authorId":"2125263","name":"Akiko
        Manada","url":"https://www.semanticscholar.org/author/2125263"},{"authorId":"2690392","name":"Hiroyoshi
        Morita","url":"https://www.semanticscholar.org/author/2690392"}],"doi":null,"isInfluential":false,"paperId":"3b5e9e3a11c187cff7a0a3e3251edb190996d3f7","title":"On
        some properties of distributed line graphs","url":"https://www.semanticscholar.org/paper/3b5e9e3a11c187cff7a0a3e3251edb190996d3f7","venue":"2014
        International Symposium on Information Theory and its Applications","year":2014},{"arxivId":null,"authors":[{"authorId":"1908353","name":"Yiming
        Zhang","url":"https://www.semanticscholar.org/author/1908353"},{"authorId":"1718853","name":"Dongsheng
        Li","url":"https://www.semanticscholar.org/author/1718853"},{"authorId":"39152478","name":"Chuanxiong
        Guo","url":"https://www.semanticscholar.org/author/39152478"},{"authorId":"46477225","name":"Haitao
        Wu","url":"https://www.semanticscholar.org/author/46477225"},{"authorId":"2142901","name":"Yongqiang
        Xiong","url":"https://www.semanticscholar.org/author/2142901"},{"authorId":"7828826","name":"Xicheng
        Lu","url":"https://www.semanticscholar.org/author/7828826"}],"doi":"10.1109/TNET.2017.2669215","isInfluential":false,"paperId":"a99dbbf6fa6546a21d451c06a2a878b1791f0da6","title":"CubicRing:
        Exploiting Network Proximity for Distributed In-Memory Key-Value Store","url":"https://www.semanticscholar.org/paper/a99dbbf6fa6546a21d451c06a2a878b1791f0da6","venue":"IEEE/ACM
        Transactions on Networking","year":2017},{"arxivId":null,"authors":[{"authorId":null,"name":"Madhuri
        D. Dhayarkar","url":null},{"authorId":"32720108","name":"Ram B. Joshi","url":"https://www.semanticscholar.org/author/32720108"}],"doi":null,"isInfluential":false,"paperId":"d49e5454b61341e008fae42e3a1273525284cbad","title":"A
        Secure Approach for Privacy-Preserving in Information Brokering System using
        Query Forwarding","url":"https://www.semanticscholar.org/paper/d49e5454b61341e008fae42e3a1273525284cbad","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"9518906","name":"Wiem
        Ben Rhaiem","url":"https://www.semanticscholar.org/author/9518906"},{"authorId":"50466716","name":"Wassef
        Louati","url":"https://www.semanticscholar.org/author/50466716"},{"authorId":"1711563","name":"Djamal
        Zeghlache","url":"https://www.semanticscholar.org/author/1711563"}],"doi":null,"isInfluential":false,"paperId":"102c1164d2127e012a2caa10a9d8c7af4deccc3b","title":"mhDHT:
        A scalable DHT-based name resolution system for the Future Internet","url":"https://www.semanticscholar.org/paper/102c1164d2127e012a2caa10a9d8c7af4deccc3b","venue":"2012
        Third International Conference on The Network of the Future (NOF)","year":2012},{"arxivId":null,"authors":[{"authorId":"16432067","name":"Joonhyun
        Bae","url":"https://www.semanticscholar.org/author/16432067"},{"authorId":"47090317","name":"Seunghun
        Lee","url":"https://www.semanticscholar.org/author/47090317"},{"authorId":"1756753","name":"Sangwook
        Kim","url":"https://www.semanticscholar.org/author/1756753"}],"doi":null,"isInfluential":true,"paperId":"714dd0acdd24f23c03d63b5ac113f6cd33c64c8e","title":"VegaNet:
        A peer-to-peer overlay network for mobile social applications","url":"https://www.semanticscholar.org/paper/714dd0acdd24f23c03d63b5ac113f6cd33c64c8e","venue":"2009
        IEEE 13th International Symposium on Consumer Electronics","year":2009},{"arxivId":null,"authors":[{"authorId":"6900802","name":"Ricardo
        Matos","url":"https://www.semanticscholar.org/author/6900802"},{"authorId":"1782400","name":"Susana
        Sargento","url":"https://www.semanticscholar.org/author/1782400"}],"doi":null,"isInfluential":false,"paperId":"8f41a5161b487c07c2c60fd2635783768d4e4200","title":"Data
        communications over context-based WMNs: Delay performance evaluation","url":"https://www.semanticscholar.org/paper/8f41a5161b487c07c2c60fd2635783768d4e4200","venue":"2010
        IEEE/IFIP Network Operations and Management Symposium Workshops","year":2010},{"arxivId":null,"authors":[{"authorId":"49467176","name":"Guangzhi
        Ma","url":"https://www.semanticscholar.org/author/49467176"},{"authorId":"1691412","name":"Yansheng
        Lu","url":"https://www.semanticscholar.org/author/1691412"},{"authorId":"2455441","name":"Enmin
        Song","url":"https://www.semanticscholar.org/author/2455441"},{"authorId":"1726357","name":"Wei
        Zhang","url":"https://www.semanticscholar.org/author/1726357"}],"doi":"10.1109/CSIE.2009.468","isInfluential":false,"paperId":"f103918153805fc0b84bb71e365b9cd82b3ad758","title":"Introducing
        Gene Clusters into a P2P Based TSP Solving Algorithm","url":"https://www.semanticscholar.org/paper/f103918153805fc0b84bb71e365b9cd82b3ad758","venue":"2009
        WRI World Congress on Computer Science and Information Engineering","year":2009},{"arxivId":null,"authors":[{"authorId":"37613610","name":"Long
        Cheng","url":"https://www.semanticscholar.org/author/37613610"},{"authorId":"1680354","name":"Spyros
        Kotoulas","url":"https://www.semanticscholar.org/author/1680354"},{"authorId":"48500298","name":"Tomas
        E. Ward","url":"https://www.semanticscholar.org/author/48500298"},{"authorId":"33812288","name":"Georgios
        Theodoropoulos","url":"https://www.semanticscholar.org/author/33812288"}],"doi":"10.1109/HiPC.2014.7116909","isInfluential":false,"paperId":"8fc098190163a4fc5f178ee1b354e282dd00c396","title":"Design
        and evaluation of parallel hashing over large-scale data","url":"https://www.semanticscholar.org/paper/8fc098190163a4fc5f178ee1b354e282dd00c396","venue":"2014
        21st International Conference on High Performance Computing (HiPC)","year":2014},{"arxivId":null,"authors":[{"authorId":"31513789","name":"Michael
        Z. Lee","url":"https://www.semanticscholar.org/author/31513789"},{"authorId":"34045729","name":"Alan
        M. Dunn","url":"https://www.semanticscholar.org/author/34045729"},{"authorId":"2620997","name":"Jonathan
        Katz","url":"https://www.semanticscholar.org/author/2620997"},{"authorId":"1715120","name":"Brent
        Waters","url":"https://www.semanticscholar.org/author/1715120"},{"authorId":"1683338","name":"Emmett
        Witchel","url":"https://www.semanticscholar.org/author/1683338"}],"doi":"10.1109/SP.2013.29","isInfluential":true,"paperId":"14281fbe97400cc0d51b9b36cfd82c32a4a7e31b","title":"Anon-Pass:
        Practical Anonymous Subscriptions","url":"https://www.semanticscholar.org/paper/14281fbe97400cc0d51b9b36cfd82c32a4a7e31b","venue":"IEEE
        Security & Privacy","year":2013},{"arxivId":null,"authors":[{"authorId":"33324835","name":"Judith
        Winter","url":"https://www.semanticscholar.org/author/33324835"},{"authorId":"1749745","name":"Oswald
        Drobnik","url":"https://www.semanticscholar.org/author/1749745"}],"doi":"10.1145/1316874.1316878","isInfluential":false,"paperId":"e04e8a497b997cf3f072b16e6d9ca3c1b12741db","title":"An
        architecture for xml information retrieval in a peer-to-peer environment","url":"https://www.semanticscholar.org/paper/e04e8a497b997cf3f072b16e6d9ca3c1b12741db","venue":"PIKM","year":2007},{"arxivId":null,"authors":[{"authorId":"1716059","name":"Maozhen
        Li","url":"https://www.semanticscholar.org/author/1716059"},{"authorId":"1784236","name":"Man
        Qi","url":"https://www.semanticscholar.org/author/1784236"}],"doi":"10.1007/s12083-009-0036-8","isInfluential":false,"paperId":"481afb85e99cbe76c0e05893962b42b9200ee4db","title":"Facilitating
        resource discovery in grid environments with peer-to-peer structured tuple
        spaces","url":"https://www.semanticscholar.org/paper/481afb85e99cbe76c0e05893962b42b9200ee4db","venue":"Peer-to-Peer
        Networking and Applications","year":2009},{"arxivId":null,"authors":[{"authorId":"47203268","name":"Wei
        Wu","url":"https://www.semanticscholar.org/author/47203268"},{"authorId":"2815365","name":"Jim
        Womack","url":"https://www.semanticscholar.org/author/2815365"},{"authorId":"1798477","name":"Xinhua
        Ling","url":"https://www.semanticscholar.org/author/1798477"}],"doi":"10.1109/IPDPSW.2010.5470936","isInfluential":true,"paperId":"a0d2f527c061c92cb3681ace3f7b9a498f54cfc7","title":"Mobile-friendly
        Peer-to-Peer client routing using out-of-band signaling","url":"https://www.semanticscholar.org/paper/a0d2f527c061c92cb3681ace3f7b9a498f54cfc7","venue":"2010
        IEEE International Symposium on Parallel & Distributed Processing, Workshops
        and Phd Forum (IPDPSW)","year":2010},{"arxivId":null,"authors":[{"authorId":"1808595","name":"Emanuele
        Carlini","url":"https://www.semanticscholar.org/author/1808595"},{"authorId":"28053030","name":"Laura
        Ricci","url":"https://www.semanticscholar.org/author/28053030"},{"authorId":"1737279","name":"Massimo
        Coppola","url":"https://www.semanticscholar.org/author/1737279"}],"doi":"10.1016/j.future.2012.09.004","isInfluential":true,"paperId":"a4bb04c6f1ea1e522646e87e25b056fecf695c45","title":"Flexible
        load distribution for hybrid distributed virtual environments","url":"https://www.semanticscholar.org/paper/a4bb04c6f1ea1e522646e87e25b056fecf695c45","venue":"Future
        Generation Comp. Syst.","year":2013},{"arxivId":null,"authors":[{"authorId":"2077337","name":"Lintao
        Liu","url":"https://www.semanticscholar.org/author/2077337"},{"authorId":"2591044","name":"Kyung
        Dong Ryu","url":"https://www.semanticscholar.org/author/2591044"},{"authorId":"1753922","name":"Kang-Won
        Lee","url":"https://www.semanticscholar.org/author/1753922"}],"doi":"10.1109/CCGrid.2004.1336577","isInfluential":false,"paperId":"3d56f963fb427545dba76e8d3dc6e9a0520ca7cd","title":"Keyword
        fusion to support efficient keyword-based search in peer-to-peer file sharing","url":"https://www.semanticscholar.org/paper/3d56f963fb427545dba76e8d3dc6e9a0520ca7cd","venue":"IEEE
        International Symposium on Cluster Computing and the Grid, 2004. CCGrid 2004.","year":2004},{"arxivId":null,"authors":[{"authorId":"2243851","name":"Shanshan
        Song","url":"https://www.semanticscholar.org/author/2243851"},{"authorId":"1680273","name":"Kai
        Hwang","url":"https://www.semanticscholar.org/author/1680273"},{"authorId":"1741539","name":"Yu-Kwong
        Kwok","url":"https://www.semanticscholar.org/author/1741539"}],"doi":"10.1007/s10723-005-5465-x","isInfluential":false,"paperId":"34709381255c509051e83cb1934a0797e36e57a1","title":"Trusted
        Grid Computing with Security Binding and Trust Integration","url":"https://www.semanticscholar.org/paper/34709381255c509051e83cb1934a0797e36e57a1","venue":"Journal
        of Grid Computing","year":2005},{"arxivId":null,"authors":[{"authorId":"2127203","name":"Lakshmish
        Ramaswamy","url":"https://www.semanticscholar.org/author/2127203"},{"authorId":"13210918","name":"Victor
        Lawson","url":"https://www.semanticscholar.org/author/13210918"},{"authorId":"2364459","name":"Siva
        Venkat Gogineni","url":"https://www.semanticscholar.org/author/2364459"}],"doi":"10.1109/BigData.Congress.2013.21","isInfluential":false,"paperId":"67d02ab1e8cea75fe27bb1917e344b615c76fd07","title":"Towards
        a Quality-centric Big Data Architecture for Federated Sensor Services","url":"https://www.semanticscholar.org/paper/67d02ab1e8cea75fe27bb1917e344b615c76fd07","venue":"2013
        IEEE International Congress on Big Data","year":2013},{"arxivId":null,"authors":[{"authorId":"49149130","name":"George
        H. L. Fletcher","url":"https://www.semanticscholar.org/author/49149130"},{"authorId":"40395745","name":"Hardik
        A. Sheth","url":"https://www.semanticscholar.org/author/40395745"},{"authorId":"1700149","name":"Katy
        B\u00f6rner","url":"https://www.semanticscholar.org/author/1700149"}],"doi":"10.1007/11574781_2","isInfluential":true,"paperId":"89c49970f8fea903b3c0006f01845c7aae84491a","title":"Unstructured
        Peer-to-Peer Networks: Topological Properties and Search Performance","url":"https://www.semanticscholar.org/paper/89c49970f8fea903b3c0006f01845c7aae84491a","venue":"AP2PC","year":2004},{"arxivId":null,"authors":[{"authorId":"1723999","name":"Dag
        Johansen","url":"https://www.semanticscholar.org/author/1723999"},{"authorId":"3042216","name":"H\u00e5vard
        D. Johansen","url":"https://www.semanticscholar.org/author/3042216"}],"doi":"10.1109/ICAS.2008.43","isInfluential":false,"paperId":"3ebf0651ec641970cc6640179aa97f7bd413bdfe","title":"The
        Dynamic Enterprise Bus","url":"https://www.semanticscholar.org/paper/3ebf0651ec641970cc6640179aa97f7bd413bdfe","venue":"Fourth
        International Conference on Autonomic and Autonomous Systems (ICAS''08)","year":2008},{"arxivId":null,"authors":[{"authorId":"2174353","name":"David
        Wolinsky","url":"https://www.semanticscholar.org/author/2174353"},{"authorId":"2793216","name":"Kyungyong
        Lee","url":"https://www.semanticscholar.org/author/2793216"},{"authorId":"2721383","name":"P.
        Oscar Boykin","url":"https://www.semanticscholar.org/author/2721383"},{"authorId":"1680675","name":"Renato
        J. O. Figueiredo","url":"https://www.semanticscholar.org/author/1680675"}],"doi":null,"isInfluential":false,"paperId":"24e2a42f1d0cd36a77f8c3682083207f981a245a","title":"On
        the design of autonomic, decentralized VPNs","url":"https://www.semanticscholar.org/paper/24e2a42f1d0cd36a77f8c3682083207f981a245a","venue":"6th
        International Conference on Collaborative Computing: Networking, Applications
        and Worksharing (CollaborateCom 2010)","year":2010},{"arxivId":null,"authors":[{"authorId":"1729141","name":"Hanh
        Le","url":"https://www.semanticscholar.org/author/1729141"},{"authorId":"1709615","name":"Doan
        B. Hoang","url":"https://www.semanticscholar.org/author/1709615"},{"authorId":"47051698","name":"Andrew
        Simmonds","url":"https://www.semanticscholar.org/author/47051698"}],"doi":null,"isInfluential":false,"paperId":"d632db397cca66fac6a7ceab6e8d5b55456fac60","title":"Geo-LPM-An
        Efficient Scheme for Locating Nodes in the Internet","url":"https://www.semanticscholar.org/paper/d632db397cca66fac6a7ceab6e8d5b55456fac60","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"1795621","name":"Matthew
        Caesar","url":"https://www.semanticscholar.org/author/1795621"},{"authorId":"3269316","name":"Tyson
        Condie","url":"https://www.semanticscholar.org/author/3269316"},{"authorId":"2713437","name":"Jayanthkumar
        Kannan","url":"https://www.semanticscholar.org/author/2713437"},{"authorId":"1920780","name":"Karthik
        Lakshminarayanan","url":"https://www.semanticscholar.org/author/1920780"},{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"}],"doi":"10.1145/1159913.1159955","isInfluential":false,"paperId":"a6e0396f321fa3564aa6092ac8000d3a4444b2af","title":"ROFL:
        routing on flat labels","url":"https://www.semanticscholar.org/paper/a6e0396f321fa3564aa6092ac8000d3a4444b2af","venue":"SIGCOMM","year":2006},{"arxivId":null,"authors":[{"authorId":"1796182","name":"Zhijie
        Jerry Shi","url":"https://www.semanticscholar.org/author/1796182"},{"authorId":"46270169","name":"Bing
        Wang","url":"https://www.semanticscholar.org/author/46270169"},{"authorId":"38765114","name":"Fan
        Zhang","url":"https://www.semanticscholar.org/author/38765114"}],"doi":null,"isInfluential":false,"paperId":"6f6519bc66af38d677875ca913bfe7e05b5a851c","title":"Chapter
        1 CBKE : Chord-based Key Establishment Schemes for Wireless Sensor Networks","url":"https://www.semanticscholar.org/paper/6f6519bc66af38d677875ca913bfe7e05b5a851c","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"40378358","name":"Hui-Hung
        Chien","url":"https://www.semanticscholar.org/author/40378358"},{"authorId":"2514474","name":"Jian-Ming
        Chang","url":"https://www.semanticscholar.org/author/2514474"},{"authorId":"9245035","name":"Hsiang-Te
        Liu","url":"https://www.semanticscholar.org/author/9245035"},{"authorId":"1742169","name":"Han-Chieh
        Chao","url":"https://www.semanticscholar.org/author/1742169"}],"doi":null,"isInfluential":false,"paperId":"6a4e43bd48d9e92a04fd4e1e42bc6092add8ed07","title":"Design
        a Novel Scheme for Dual-Stack Cloud File Service Discovery Based on Distributed
        Hash Table","url":"https://www.semanticscholar.org/paper/6a4e43bd48d9e92a04fd4e1e42bc6092add8ed07","venue":"2010
        5th International Conference on Future Information Technology","year":2010},{"arxivId":null,"authors":[{"authorId":"1795625","name":"Ingmar
        Baumgart","url":"https://www.semanticscholar.org/author/1795625"},{"authorId":"2488947","name":"Bernhard
        Heep","url":"https://www.semanticscholar.org/author/2488947"},{"authorId":"40460990","name":"Stephan
        Krause","url":"https://www.semanticscholar.org/author/40460990"}],"doi":null,"isInfluential":true,"paperId":"7795878247ba1e0389a07304aecca509dcd74ad7","title":"OverSim:
        A Flexible Overlay Network Simulation Framework","url":"https://www.semanticscholar.org/paper/7795878247ba1e0389a07304aecca509dcd74ad7","venue":"2007
        IEEE Global Internet Symposium","year":2007},{"arxivId":null,"authors":[{"authorId":"2313198","name":"Girish
        Suryanarayana","url":"https://www.semanticscholar.org/author/2313198"},{"authorId":"1711409","name":"Richard
        N. Taylor","url":"https://www.semanticscholar.org/author/1711409"}],"doi":null,"isInfluential":false,"paperId":"571090d7bacc1234c4a4c2e895d3174ccc26273f","title":"A
        Survey of Trust Management and Resource Discovery Technologies in Peer-to-Peer
        Applications","url":"https://www.semanticscholar.org/paper/571090d7bacc1234c4a4c2e895d3174ccc26273f","venue":"","year":2002},{"arxivId":null,"authors":[{"authorId":"2840798","name":"Djelloul
        Boukhelef","url":"https://www.semanticscholar.org/author/2840798"},{"authorId":"1687013","name":"Hiroyuki
        Kitagawa","url":"https://www.semanticscholar.org/author/1687013"}],"doi":null,"isInfluential":false,"paperId":"61a1193ead4047ba1d4cf76af96d5f60f50b7e16","title":"Efficient
        Management of Multidimensional Data in Structured Peer-to-peer Overlays","url":"https://www.semanticscholar.org/paper/61a1193ead4047ba1d4cf76af96d5f60f50b7e16","venue":"VLDB
        PhD Workshop","year":2009},{"arxivId":null,"authors":[{"authorId":"8962431","name":"Justin
        M. Wozniak","url":"https://www.semanticscholar.org/author/8962431"},{"authorId":"1692762","name":"Robert
        Latham","url":"https://www.semanticscholar.org/author/1692762"},{"authorId":"3079452","name":"Sam
        Lang","url":"https://www.semanticscholar.org/author/3079452"},{"authorId":"12408860","name":"Seung
        Woo Son","url":"https://www.semanticscholar.org/author/12408860"},{"authorId":"47552034","name":"Robert
        H. Ross","url":"https://www.semanticscholar.org/author/47552034"}],"doi":null,"isInfluential":false,"paperId":"80021c2005f5ef76dd697bd486d021b5640b305e","title":"C-MPI
        : A DHT Implementation for Grid and HPC Environments","url":"https://www.semanticscholar.org/paper/80021c2005f5ef76dd697bd486d021b5640b305e","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"2075383","name":"Jinu
        Kurian","url":"https://www.semanticscholar.org/author/2075383"},{"authorId":"1748086","name":"Kamil
        Sara\u00e7","url":"https://www.semanticscholar.org/author/1748086"}],"doi":"10.1145/1824795.1824800","isInfluential":true,"paperId":"4fc4d05229ff1adcaa35539fb89b757a3e3cf680","title":"A
        survey on the design, applications, and enhancements of application-layer
        overlay networks","url":"https://www.semanticscholar.org/paper/4fc4d05229ff1adcaa35539fb89b757a3e3cf680","venue":"ACM
        Comput. Surv.","year":2010},{"arxivId":null,"authors":[{"authorId":"1771543","name":"Bow-Nan
        Cheng","url":"https://www.semanticscholar.org/author/1771543"},{"authorId":"1710226","name":"Murat
        Yuksel","url":"https://www.semanticscholar.org/author/1710226"},{"authorId":"1694760","name":"Shivkumar
        Kalyanaraman","url":"https://www.semanticscholar.org/author/1694760"}],"doi":"10.1109/P2P.2009.5284516","isInfluential":false,"paperId":"33ffc88faeb86778897beb3665e52d1b2dfbca22","title":"Virtual
        Direction Routing for overlay networks","url":"https://www.semanticscholar.org/paper/33ffc88faeb86778897beb3665e52d1b2dfbca22","venue":"2009
        IEEE Ninth International Conference on Peer-to-Peer Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"1823005","name":"Sven
        Kaffille","url":"https://www.semanticscholar.org/author/1823005"},{"authorId":"3095311","name":"Karsten
        Loesing","url":"https://www.semanticscholar.org/author/3095311"},{"authorId":"1716142","name":"Guido
        Wirtz","url":"https://www.semanticscholar.org/author/1716142"}],"doi":null,"isInfluential":true,"paperId":"9ddae676b3777d9c920dcc2c6a888a03bc467323","title":"Distributed
        Service Discovery with Guarantees in Peer-to-Peer Networks using Distributed
        Hashtables","url":"https://www.semanticscholar.org/paper/9ddae676b3777d9c920dcc2c6a888a03bc467323","venue":"PDPTA","year":2005},{"arxivId":null,"authors":[{"authorId":"7994025","name":"Bita
        Mortazavi","url":"https://www.semanticscholar.org/author/7994025"},{"authorId":"1809899","name":"George
        Kesidis","url":"https://www.semanticscholar.org/author/1809899"}],"doi":null,"isInfluential":false,"paperId":"dfe7f1f263b046e5438fda9d432870e663b9a9c6","title":"A
        model of a reputation system for incentive engineering","url":"https://www.semanticscholar.org/paper/dfe7f1f263b046e5438fda9d432870e663b9a9c6","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"1719551","name":"Cheng-Zhong
        Xu","url":"https://www.semanticscholar.org/author/1719551"}],"doi":"10.1109/ICDCS.2006.35","isInfluential":false,"paperId":"52aeb73eea170dc18b7f9e5f541cbd3289bff8c2","title":"Elastic
        Routing Table with Provable Performance for Congestion Control in DHT Networks","url":"https://www.semanticscholar.org/paper/52aeb73eea170dc18b7f9e5f541cbd3289bff8c2","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2006},{"arxivId":null,"authors":[{"authorId":"35920747","name":"Sergio
        Marti","url":"https://www.semanticscholar.org/author/35920747"}],"doi":null,"isInfluential":false,"paperId":"c16b76c591f911672daf785aa5f601baff4b2ce6","title":"Trust
        and Reputation in Peer-to-peer Networks a Dissertation Submitted to the Department
        of Computer Science and the Committee on Graduate Studies of Stanford University
        in Partial Fulfillment of the Requirements for the Degree of Doctor of Philosophy","url":"https://www.semanticscholar.org/paper/c16b76c591f911672daf785aa5f601baff4b2ce6","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"48607669","name":"Yue
        Wu","url":"https://www.semanticscholar.org/author/48607669"},{"authorId":"1699658","name":"Siyi
        Wang","url":"https://www.semanticscholar.org/author/1699658"},{"authorId":"2825989","name":"Wuling
        Liu","url":"https://www.semanticscholar.org/author/2825989"},{"authorId":"1847584","name":"Weisi
        Guo","url":"https://www.semanticscholar.org/author/1847584"},{"authorId":"1680129","name":"Xiaoli
        Chu","url":"https://www.semanticscholar.org/author/1680129"}],"doi":"10.1109/TWC.2016.2594225","isInfluential":false,"paperId":"1bf285fc5b656ab44f2f774912c70ef4bf4925ad","title":"Iunius:
        A Cross-Layer Peer-to-Peer System With Device-to-Device Communications","url":"https://www.semanticscholar.org/paper/1bf285fc5b656ab44f2f774912c70ef4bf4925ad","venue":"IEEE
        Transactions on Wireless Communications","year":2016},{"arxivId":null,"authors":[{"authorId":"2802763","name":"Anup
        Patnaik","url":"https://www.semanticscholar.org/author/2802763"},{"authorId":"2498944","name":"Lalit
        Kumar Awasthi","url":"https://www.semanticscholar.org/author/2498944"},{"authorId":"1788291","name":"Kamlesh
        Dutta","url":"https://www.semanticscholar.org/author/1788291"}],"doi":null,"isInfluential":false,"paperId":"f55700b369f7e5f25cbdecabb47a9d5938577566","title":"An
        Overview of Workflow Management on Mobile Agent Technology","url":"https://www.semanticscholar.org/paper/f55700b369f7e5f25cbdecabb47a9d5938577566","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"2605043","name":"Flavio
        D. Garcia","url":"https://www.semanticscholar.org/author/2605043"}],"doi":null,"isInfluential":false,"paperId":"26f3a612af4ecebe09a5654f57711f9b1ef7190b","title":"Formal
        and Computational Cryptography : Protocols , Hashes and Commitments","url":"https://www.semanticscholar.org/paper/26f3a612af4ecebe09a5654f57711f9b1ef7190b","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"3095311","name":"Karsten
        Loesing","url":"https://www.semanticscholar.org/author/3095311"}],"doi":null,"isInfluential":false,"paperId":"a8369392447c083d2be1b74753f68f87811c72f5","title":"Privacy-enhancing
        technologies for private services","url":"https://www.semanticscholar.org/paper/a8369392447c083d2be1b74753f68f87811c72f5","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"46317036","name":"Yun
        Ji Zhao","url":"https://www.semanticscholar.org/author/46317036"},{"authorId":"3257509","name":"Huayou
        Si","url":"https://www.semanticscholar.org/author/3257509"},{"authorId":"1791039","name":"Hengnian
        Qi","url":"https://www.semanticscholar.org/author/1791039"},{"authorId":"2070890","name":"Yulin
        Ni","url":"https://www.semanticscholar.org/author/2070890"}],"doi":null,"isInfluential":false,"paperId":"a8bbec136850c4ad23d4f8c8813abd075df1350d","title":"An
        Approach to Distributed Ontology Publication and Its Application in SWS Discovery
        Based on P2P","url":"https://www.semanticscholar.org/paper/a8bbec136850c4ad23d4f8c8813abd075df1350d","venue":"2010
        International Conference on Internet Technology and Applications","year":2010},{"arxivId":null,"authors":[{"authorId":"2635333","name":"Zhenhua
        Sun","url":"https://www.semanticscholar.org/author/2635333"}],"doi":null,"isInfluential":false,"paperId":"d611ff7457af288407f20838492f713a4d05687d","title":"First
        Report on Future NGI Control Architectures and NGI Services","url":"https://www.semanticscholar.org/paper/d611ff7457af288407f20838492f713a4d05687d","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"47657840","name":"Andrew
        M Campbell","url":"https://www.semanticscholar.org/author/47657840"},{"authorId":"2483279","name":"Robert
        L. Scot Drysdale","url":"https://www.semanticscholar.org/author/2483279"},{"authorId":"27959948","name":"Robert
        S. Gray","url":"https://www.semanticscholar.org/author/27959948"},{"authorId":"40145687","name":"Scot
        Drysdale","url":"https://www.semanticscholar.org/author/40145687"}],"doi":null,"isInfluential":false,"paperId":"804c3e197eef19373f570c503ced41136a3bc206","title":"Mesh-Mon:
        a Monitoring and Management System for Wireless Mesh Networks","url":"https://www.semanticscholar.org/paper/804c3e197eef19373f570c503ced41136a3bc206","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"1928753","name":"Changping
        Wang","url":"https://www.semanticscholar.org/author/1928753"},{"authorId":"6010052","name":"Jianzhong
        Li","url":"https://www.semanticscholar.org/author/6010052"},{"authorId":"1752823","name":"Shengfei
        Shi","url":"https://www.semanticscholar.org/author/1752823"}],"doi":"10.1007/978-3-540-24679-4_69","isInfluential":false,"paperId":"7ed35b8f186b95c77758d9918ccb281af068b15c","title":"An
        Approach to Content-Based Approximate Query Processing in Peer-to-Peer Data
        Systems","url":"https://www.semanticscholar.org/paper/7ed35b8f186b95c77758d9918ccb281af068b15c","venue":"GCC","year":2003},{"arxivId":"1703.03607","authors":[{"authorId":"2692598","name":"Mahdi
        MollaMotalebi","url":"https://www.semanticscholar.org/author/2692598"},{"authorId":"2204980","name":"Raheleh
        Maghami","url":"https://www.semanticscholar.org/author/2204980"},{"authorId":"1875157","name":"Abdul
        Samad Ismail","url":"https://www.semanticscholar.org/author/1875157"},{"authorId":"3045034","name":"Alireza
        Poshtkohi","url":"https://www.semanticscholar.org/author/3045034"}],"doi":"10.1080/01969722.2014.972100","isInfluential":false,"paperId":"a70ee593b202a37b63a54974c36cf46864a39b9a","title":"The
        Efficiency Challenges of Resource Discovery in Grid Environments","url":"https://www.semanticscholar.org/paper/a70ee593b202a37b63a54974c36cf46864a39b9a","venue":"Cybernetics
        and Systems","year":2014},{"arxivId":null,"authors":[{"authorId":"3277872","name":"Gabriel
        Ghinita","url":"https://www.semanticscholar.org/author/3277872"},{"authorId":"2000187","name":"Panos
        Kalnis","url":"https://www.semanticscholar.org/author/2000187"},{"authorId":"1688897","name":"Spiros
        Skiadopoulos","url":"https://www.semanticscholar.org/author/1688897"}],"doi":"10.1007/978-3-540-73540-3_13","isInfluential":true,"paperId":"3b3708ec1b0ee6da5340a40aafda07c2fc7522e4","title":"MobiHide:
        A Mobilea Peer-to-Peer System for Anonymous Location-Based Queries","url":"https://www.semanticscholar.org/paper/3b3708ec1b0ee6da5340a40aafda07c2fc7522e4","venue":"SSTD","year":2007},{"arxivId":null,"authors":[{"authorId":"50982755","name":"Lirong
        Lin","url":"https://www.semanticscholar.org/author/50982755"},{"authorId":"35161103","name":"Keiichi
        Koyanagi","url":"https://www.semanticscholar.org/author/35161103"},{"authorId":"48876473","name":"Takeshi
        Tsuchiya","url":"https://www.semanticscholar.org/author/48876473"},{"authorId":"2988760","name":"Tadashi
        Miyosawa","url":"https://www.semanticscholar.org/author/2988760"},{"authorId":"2986853","name":"Hiroo
        Hirose","url":"https://www.semanticscholar.org/author/2986853"}],"doi":null,"isInfluential":false,"paperId":"f7000d8594563b094b95c48379127b107e7fed76","title":"Improving
        routing load balance on Chord","url":"https://www.semanticscholar.org/paper/f7000d8594563b094b95c48379127b107e7fed76","venue":"16th
        International Conference on Advanced Communication Technology","year":2014},{"arxivId":null,"authors":[{"authorId":"2670063","name":"Kaoutar
        Hafdi","url":"https://www.semanticscholar.org/author/2670063"},{"authorId":"2381677","name":"Abdelaziz
        Kriouile","url":"https://www.semanticscholar.org/author/2381677"}],"doi":"10.1109/ICAC.2015.63","isInfluential":false,"paperId":"3d7a040967ef3e673253b75ca06c2027ae9c9b2a","title":"Designing
        ReDy Distributed Systems","url":"https://www.semanticscholar.org/paper/3d7a040967ef3e673253b75ca06c2027ae9c9b2a","venue":"2015
        IEEE International Conference on Autonomic Computing","year":2015},{"arxivId":null,"authors":[{"authorId":"47644416","name":"Marcel
        C. de Castro","url":"https://www.semanticscholar.org/author/47644416"}],"doi":null,"isInfluential":false,"paperId":"36912a63454683fc4ddb7a199d0ac79c895c58e6","title":"Enhancing
        P 2 P Systems over Wireless Mesh Networks","url":"https://www.semanticscholar.org/paper/36912a63454683fc4ddb7a199d0ac79c895c58e6","venue":"","year":2011},{"arxivId":"1106.5299","authors":[{"authorId":"1720126","name":"Ciprian
        Dobre","url":"https://www.semanticscholar.org/author/1720126"},{"authorId":"1690772","name":"Florin
        Pop","url":"https://www.semanticscholar.org/author/1690772"},{"authorId":"1733437","name":"Valentin
        Cristea","url":"https://www.semanticscholar.org/author/1733437"}],"doi":null,"isInfluential":false,"paperId":"e5d44e93cdcd476b71802d80e81e9f98912af33a","title":"DistHash:
        A robust P2P DHT-based system for replicated objects","url":"https://www.semanticscholar.org/paper/e5d44e93cdcd476b71802d80e81e9f98912af33a","venue":"ArXiv","year":2011},{"arxivId":null,"authors":[{"authorId":"1805514","name":"Nick
        Antonopoulos","url":"https://www.semanticscholar.org/author/1805514"},{"authorId":"38057896","name":"James
        Salter","url":"https://www.semanticscholar.org/author/38057896"}],"doi":"10.1108/10662240410566926","isInfluential":false,"paperId":"1b45c119936b36ff519f3887af60ee0c26e7e55f","title":"Efficient
        resource discovery in grids and P2P networks","url":"https://www.semanticscholar.org/paper/1b45c119936b36ff519f3887af60ee0c26e7e55f","venue":"Internet
        Research","year":2004},{"arxivId":null,"authors":[{"authorId":"2330486","name":"Zhonghong
        Ou","url":"https://www.semanticscholar.org/author/2330486"},{"authorId":"2533670","name":"Erkki
        Harjula","url":"https://www.semanticscholar.org/author/2533670"},{"authorId":"2189768","name":"Otso
        Kassinen","url":"https://www.semanticscholar.org/author/2189768"},{"authorId":"1727678","name":"Mika
        Ylianttila","url":"https://www.semanticscholar.org/author/1727678"}],"doi":"10.1016/j.comnet.2009.09.022","isInfluential":true,"paperId":"63e56b9ba7f7bcf4a210be2d9793e063527876cb","title":"Performance
        evaluation of a Kademlia-based communication-oriented P2P system under churn","url":"https://www.semanticscholar.org/paper/63e56b9ba7f7bcf4a210be2d9793e063527876cb","venue":"Computer
        Networks","year":2010},{"arxivId":null,"authors":[{"authorId":"1787172","name":"P
        Deepak","url":"https://www.semanticscholar.org/author/1787172"},{"authorId":"3259313","name":"Rajesh
        R. C. Bikram","url":"https://www.semanticscholar.org/author/3259313"},{"authorId":"9087286","name":"Vinod
        Vokkarane","url":"https://www.semanticscholar.org/author/9087286"}],"doi":"10.1109/ICCCN.2008.ECP.66","isInfluential":false,"paperId":"79b70b67913faa8b108f4798ae9d647f1f58ebaf","title":"TCP
        Over Optical Burst Switching (OBS): To Split or Not To Split?","url":"https://www.semanticscholar.org/paper/79b70b67913faa8b108f4798ae9d647f1f58ebaf","venue":"2008
        Proceedings of 17th International Conference on Computer Communications and
        Networks","year":2008},{"arxivId":null,"authors":[{"authorId":"2231054","name":"Wen-Chung
        Shih","url":"https://www.semanticscholar.org/author/2231054"},{"authorId":"1695708","name":"Shian-Shyong
        Tseng","url":"https://www.semanticscholar.org/author/1695708"},{"authorId":"1707188","name":"Chao-Tung
        Yang","url":"https://www.semanticscholar.org/author/1707188"}],"doi":null,"isInfluential":false,"paperId":"bb749d3d4aabb4978e853b87e431ab9c82bd1abe","title":"Due
        Time Setting for Peer-to-Peer Retrieval of Teaching Material in Cloud Computing
        Environments","url":"https://www.semanticscholar.org/paper/bb749d3d4aabb4978e853b87e431ab9c82bd1abe","venue":"2011
        International Conference on Information Science and Applications","year":2011},{"arxivId":null,"authors":[{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"},{"authorId":"2367393","name":"Noura
        Limam","url":"https://www.semanticscholar.org/author/2367393"},{"authorId":"1819743","name":"Jin
        Xiao","url":"https://www.semanticscholar.org/author/1819743"},{"authorId":"1806716","name":"Youssef
        Iraqi","url":"https://www.semanticscholar.org/author/1806716"},{"authorId":"1715494","name":"Raouf
        Boutaba","url":"https://www.semanticscholar.org/author/1715494"}],"doi":null,"isInfluential":false,"paperId":"a8c715cd0c5f9d012decd37bbeec4490fac4ddb1","title":"I
        E E E C O M M U N I C a T I O N S Resource and Service Discovery in Large-scale
        Multi-domain Networks 1553-877x Description of Criteria Fault Tolerance","url":"https://www.semanticscholar.org/paper/a8c715cd0c5f9d012decd37bbeec4490fac4ddb1","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"47180788","name":"Tiago
        Jorge","url":"https://www.semanticscholar.org/author/47180788"},{"authorId":"2887942","name":"Francisco
        Maia","url":"https://www.semanticscholar.org/author/2887942"},{"authorId":"31748631","name":"Miguel
        Matos","url":"https://www.semanticscholar.org/author/31748631"},{"authorId":"32837952","name":"Jos\u00e9
        Orlando Pereira","url":"https://www.semanticscholar.org/author/32837952"},{"authorId":"1679234","name":"Rui
        Oliveira","url":"https://www.semanticscholar.org/author/1679234"}],"doi":"10.1007/978-3-319-19129-4_10","isInfluential":false,"paperId":"0b0c09ffc333937c568f836c0760ff8c27079d42","title":"Practical
        Evaluation of Large Scale Applications","url":"https://www.semanticscholar.org/paper/0b0c09ffc333937c568f836c0760ff8c27079d42","venue":"DAIS","year":2015},{"arxivId":null,"authors":[{"authorId":"1761299","name":"Jan
        Seedorf","url":"https://www.semanticscholar.org/author/1761299"}],"doi":"10.1109/MNET.2006.1705882","isInfluential":false,"paperId":"1cfd3d641a31850f7b32e5eaf41314c217018070","title":"Security
        challenges for peer-to-peer SIP","url":"https://www.semanticscholar.org/paper/1cfd3d641a31850f7b32e5eaf41314c217018070","venue":"IEEE
        Network","year":2006},{"arxivId":null,"authors":[{"authorId":"3416337","name":"Anthony
        Foulonneau","url":"https://www.semanticscholar.org/author/3416337"},{"authorId":"48024507","name":"Jerome
        Bidet","url":"https://www.semanticscholar.org/author/48024507"},{"authorId":"9361354","name":"Philippe
        Raipin","url":"https://www.semanticscholar.org/author/9361354"}],"doi":null,"isInfluential":false,"paperId":"7d749cf245e2410ac3f264708d47dc8c6570e362","title":"Clostera:
        Cloud Storage Enabler for Richmedia Applications","url":"https://www.semanticscholar.org/paper/7d749cf245e2410ac3f264708d47dc8c6570e362","venue":"2010
        14th International Conference on Intelligence in Next Generation Networks","year":2010},{"arxivId":null,"authors":[{"authorId":"38765114","name":"Fan
        Zhang","url":"https://www.semanticscholar.org/author/38765114"},{"authorId":"1796182","name":"Zhijie
        Jerry Shi","url":"https://www.semanticscholar.org/author/1796182"},{"authorId":"31752339","name":"Bing
        Wang","url":"https://www.semanticscholar.org/author/31752339"}],"doi":"10.1109/ITNG.2008.184","isInfluential":false,"paperId":"0eb8d206f52596bd81f496fbf6c748aeda52dbb5","title":"Chord-Based
        Key Establishment Schemes for Sensor Networks","url":"https://www.semanticscholar.org/paper/0eb8d206f52596bd81f496fbf6c748aeda52dbb5","venue":"Fifth
        International Conference on Information Technology: New Generations (itng
        2008)","year":2008},{"arxivId":null,"authors":[{"authorId":"1803961","name":"Chi-Yi
        Lin","url":"https://www.semanticscholar.org/author/1803961"},{"authorId":"2943537","name":"Jhih-Kai
        Liao","url":"https://www.semanticscholar.org/author/2943537"}],"doi":"10.1504/IJWGS.2014.064933","isInfluential":false,"paperId":"811f0a08bc5dcecfc8545308ac4dfd7b22ca9d0c","title":"A
        job-oriented load-distribution scheme for cost-effective NameNode service
        in HDFS","url":"https://www.semanticscholar.org/paper/811f0a08bc5dcecfc8545308ac4dfd7b22ca9d0c","venue":"IJWGS","year":2014},{"arxivId":null,"authors":[{"authorId":"8401694","name":"Silvia
        Marzal","url":"https://www.semanticscholar.org/author/8401694"},{"authorId":null,"name":"Raul
        Gonz","url":null},{"authorId":"46227079","name":"R. Salas-Puente","url":"https://www.semanticscholar.org/author/46227079"},{"authorId":"2175400","name":"Emilio
        Figueres","url":"https://www.semanticscholar.org/author/2175400"},{"authorId":null,"name":"Gabriel
        Garcer","url":null}],"doi":null,"isInfluential":false,"paperId":"0644359d81ffcb5b01a186b4f0e5d5e5962c7882","title":"A
        Novel Locality Algorithm and Peer-to-Peer Communication Infrastructure for
        Optimizing Network Performance in Smart Microgrids","url":"https://www.semanticscholar.org/paper/0644359d81ffcb5b01a186b4f0e5d5e5962c7882","venue":"","year":2017},{"arxivId":null,"authors":[{"authorId":"1718853","name":"Dongsheng
        Li","url":"https://www.semanticscholar.org/author/1718853"},{"authorId":"7828826","name":"Xicheng
        Lu","url":"https://www.semanticscholar.org/author/7828826"},{"authorId":"2698559","name":"Baosheng
        Wang","url":"https://www.semanticscholar.org/author/2698559"},{"authorId":"39363506","name":"Jinshu
        Su","url":"https://www.semanticscholar.org/author/39363506"},{"authorId":"1780398","name":"Jiannong
        Cao","url":"https://www.semanticscholar.org/author/1780398"},{"authorId":"31680520","name":"Keith
        C. C. Chan","url":"https://www.semanticscholar.org/author/31680520"},{"authorId":"1714454","name":"Hong
        Va Leong","url":"https://www.semanticscholar.org/author/1714454"}],"doi":"10.1109/ICDCS.2006.26","isInfluential":true,"paperId":"8a0f90fdd7427cbd1dc91d76b5ddf2253b7cb10c","title":"Delay-Bounded
        Range Queries in DHT-based Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/8a0f90fdd7427cbd1dc91d76b5ddf2253b7cb10c","venue":"26th
        IEEE International Conference on Distributed Computing Systems (ICDCS''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"2908244","name":"Srinivas
        R. Kashyap","url":"https://www.semanticscholar.org/author/2908244"}],"doi":null,"isInfluential":true,"paperId":"6714168d80b16069573b49d8cf7ef58f2939a5c6","title":"Algorithms
        for data placement, reconfiguration and monitoring in storage networks","url":"https://www.semanticscholar.org/paper/6714168d80b16069573b49d8cf7ef58f2939a5c6","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"2076228","name":"G\u00e1bor
        Vincze","url":"https://www.semanticscholar.org/author/2076228"},{"authorId":"3007009","name":"Zolt\u00e1n
        Nov\u00e1k","url":"https://www.semanticscholar.org/author/3007009"},{"authorId":"2201225","name":"Zolt\u00e1n
        Pap","url":"https://www.semanticscholar.org/author/2201225"},{"authorId":"2474853","name":"Rolland
        Vida","url":"https://www.semanticscholar.org/author/2474853"}],"doi":"10.1109/CCGRID.2008.35","isInfluential":true,"paperId":"1c6d7e740d3b17708580577074cef5dede6fae7d","title":"RESERV:
        A Distributed, Load Balanced Information System for Grid Applications","url":"https://www.semanticscholar.org/paper/1c6d7e740d3b17708580577074cef5dede6fae7d","venue":"2008
        Eighth IEEE International Symposium on Cluster Computing and the Grid (CCGRID)","year":2008},{"arxivId":null,"authors":[{"authorId":"48458409","name":"Ze
        Li","url":"https://www.semanticscholar.org/author/48458409"},{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"}],"doi":"10.1109/ICNP.2012.6459983","isInfluential":false,"paperId":"e0babfb787aeb56ff94f5e93a151d16e774a0011","title":"Social-P2P:
        Social network-based P2P file sharing system","url":"https://www.semanticscholar.org/paper/e0babfb787aeb56ff94f5e93a151d16e774a0011","venue":"2012
        20th IEEE International Conference on Network Protocols (ICNP)","year":2012},{"arxivId":null,"authors":[{"authorId":"3128221","name":"Zakwan
        Al-Arnaout","url":"https://www.semanticscholar.org/author/3128221"},{"authorId":"48889507","name":"Qiang
        Fu","url":"https://www.semanticscholar.org/author/48889507"},{"authorId":"40073871","name":"Marcus
        Frean","url":"https://www.semanticscholar.org/author/40073871"}],"doi":"10.1109/PIMRC.2014.7136514","isInfluential":false,"paperId":"0c62d89b63cf123d557c7619f297560ffd89ca47","title":"An
        efficient replica placement heuristic for community WMNs","url":"https://www.semanticscholar.org/paper/0c62d89b63cf123d557c7619f297560ffd89ca47","venue":"2014
        IEEE 25th Annual International Symposium on Personal, Indoor, and Mobile Radio
        Communication (PIMRC)","year":2014},{"arxivId":null,"authors":[{"authorId":"48147627","name":"Hiroshi
        Yamamoto","url":"https://www.semanticscholar.org/author/48147627"},{"authorId":"50416678","name":"Katsuyuki
        Yamazaki","url":"https://www.semanticscholar.org/author/50416678"}],"doi":null,"isInfluential":true,"paperId":"95f286c66847b8eeeb3599e5b9ff13b8dfd80638","title":"Decentralized
        live video broadcasting system using location-aware P2P network technology","url":"https://www.semanticscholar.org/paper/95f286c66847b8eeeb3599e5b9ff13b8dfd80638","venue":"2011
        IEEE Consumer Communications and Networking Conference (CCNC)","year":2011},{"arxivId":null,"authors":[{"authorId":"1745566","name":"Wanlei
        Zhou","url":"https://www.semanticscholar.org/author/1745566"},{"authorId":"5370498","name":"John
        Casey","url":"https://www.semanticscholar.org/author/5370498"}],"doi":"10.1109/HPCC.2008.164","isInfluential":false,"paperId":"33278b034808b232fa255aec01451a64e6d73c76","title":"Reducing
        Cache Lookup and Publish Overhead through Locality Awareness in P2P Web Caching","url":"https://www.semanticscholar.org/paper/33278b034808b232fa255aec01451a64e6d73c76","venue":"2008
        10th IEEE International Conference on High Performance Computing and Communications","year":2008},{"arxivId":null,"authors":[{"authorId":"1733113","name":"Takeo
        Kanade","url":"https://www.semanticscholar.org/author/1733113"},{"authorId":"1748684","name":"Josef
        Kittler","url":"https://www.semanticscholar.org/author/1748684"},{"authorId":"1693267","name":"Moni
        Naor","url":"https://www.semanticscholar.org/author/1693267"}],"doi":"10.1007/b100919","isInfluential":true,"paperId":"aae5f33d36845eec41a1f31e9ba40f85bae3854d","title":"Web
        Services","url":"https://www.semanticscholar.org/paper/aae5f33d36845eec41a1f31e9ba40f85bae3854d","venue":"Lecture
        Notes in Computer Science","year":2004},{"arxivId":null,"authors":[{"authorId":"2614582","name":"Ayumu
        Kubota","url":"https://www.semanticscholar.org/author/2614582"},{"authorId":"35261945","name":"Yutaka
        Miyake","url":"https://www.semanticscholar.org/author/35261945"}],"doi":"10.1109/ICC.2009.5199375","isInfluential":false,"paperId":"86b3666383a8a62b4ecc4f51def3a43d8dfe3342","title":"Public
        Key-Based Rendezvous Infrastructure for Secure and Flexible Private Networking","url":"https://www.semanticscholar.org/paper/86b3666383a8a62b4ecc4f51def3a43d8dfe3342","venue":"2009
        IEEE International Conference on Communications","year":2009},{"arxivId":null,"authors":[{"authorId":"49842646","name":"Benjamin
        Fabian","url":"https://www.semanticscholar.org/author/49842646"}],"doi":null,"isInfluential":false,"paperId":"9546b34da2a6f62eedfa8de321a38cbfb56a67f1","title":"Implementing
        Secure P 2 PONS","url":"https://www.semanticscholar.org/paper/9546b34da2a6f62eedfa8de321a38cbfb56a67f1","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"38607331","name":"Weixiong
        Rao","url":"https://www.semanticscholar.org/author/38607331"},{"authorId":"37833805","name":"Lei
        Chen","url":"https://www.semanticscholar.org/author/37833805"},{"authorId":"1699363","name":"Ada
        Wai-Chee Fu","url":"https://www.semanticscholar.org/author/1699363"}],"doi":"10.1007/s00778-011-0224-z","isInfluential":false,"paperId":"1958cc37302c4b787afae4acff55bd7b67a3bfd1","title":"STAIRS:
        Towards efficient full-text filtering and dissemination in DHT environments","url":"https://www.semanticscholar.org/paper/1958cc37302c4b787afae4acff55bd7b67a3bfd1","venue":"The
        VLDB Journal","year":2009},{"arxivId":null,"authors":[{"authorId":"2370755","name":"Atsushi
        Takeda","url":"https://www.semanticscholar.org/author/2370755"},{"authorId":"1743987","name":"Debasish
        Chakraborty","url":"https://www.semanticscholar.org/author/1743987"},{"authorId":"1939901","name":"Gen
        Kitagata","url":"https://www.semanticscholar.org/author/1939901"},{"authorId":"1710984","name":"Kazuo
        Hashimoto","url":"https://www.semanticscholar.org/author/1710984"},{"authorId":"1742884","name":"Norio
        Shiratori","url":"https://www.semanticscholar.org/author/1742884"}],"doi":"10.2197/ipsjjip.17.59","isInfluential":false,"paperId":"0dd19472b581b84082d8d4916788990da564292b","title":"Proposal
        and Performance Evaluation of Hash-based Authentication for P2P Network","url":"https://www.semanticscholar.org/paper/0dd19472b581b84082d8d4916788990da564292b","venue":"JIP","year":2009},{"arxivId":null,"authors":[{"authorId":"1705508","name":"Gennaro
        Cordasco","url":"https://www.semanticscholar.org/author/1705508"},{"authorId":"1983213","name":"Rosario
        De Chiara","url":"https://www.semanticscholar.org/author/1983213"},{"authorId":"2862655","name":"Ugo
        Erra","url":"https://www.semanticscholar.org/author/2862655"},{"authorId":"1786473","name":"Vittorio
        Scarano","url":"https://www.semanticscholar.org/author/1786473"}],"doi":"10.1109/ICUMT.2009.5345386","isInfluential":false,"paperId":"01dcee5a0cc5c0abfc32a618a4c11bc1ddc700db","title":"Some
        considerations on the design of a P2P infrastructure for massive simulations","url":"https://www.semanticscholar.org/paper/01dcee5a0cc5c0abfc32a618a4c11bc1ddc700db","venue":"2009
        International Conference on Ultra Modern Telecommunications & Workshops","year":2009},{"arxivId":null,"authors":[{"authorId":"10781503","name":"Hou
        Yunjing","url":"https://www.semanticscholar.org/author/10781503"},{"authorId":"9434257","name":"Li
        Yuhong","url":"https://www.semanticscholar.org/author/9434257"},{"authorId":"50014790","name":"Yu
        Liang","url":"https://www.semanticscholar.org/author/50014790"}],"doi":null,"isInfluential":false,"paperId":"d92522147465a53a83a5a42499fe8f221a617201","title":"A
        Novel Mobility Management Mechanism Based on Destination Address Overwritten
        and ID/Locator Separation","url":"https://www.semanticscholar.org/paper/d92522147465a53a83a5a42499fe8f221a617201","venue":"2011
        Fifth International Conference on Innovative Mobile and Internet Services
        in Ubiquitous Computing","year":2011},{"arxivId":null,"authors":[{"authorId":"2330486","name":"Zhonghong
        Ou","url":"https://www.semanticscholar.org/author/2330486"},{"authorId":"2533670","name":"Erkki
        Harjula","url":"https://www.semanticscholar.org/author/2533670"},{"authorId":"1727678","name":"Mika
        Ylianttila","url":"https://www.semanticscholar.org/author/1727678"}],"doi":"10.1109/PIMRC.2009.5450134","isInfluential":false,"paperId":"bee7f10d77c8e5c30cdcd0f5b45f2ce36ae1d42e","title":"Effects
        of different churn models on the performance of structured peer-to-peer networks","url":"https://www.semanticscholar.org/paper/bee7f10d77c8e5c30cdcd0f5b45f2ce36ae1d42e","venue":"2009
        IEEE 20th International Symposium on Personal, Indoor and Mobile Radio Communications","year":2009},{"arxivId":null,"authors":[{"authorId":"1698909","name":"Nilanjan
        Banerjee","url":"https://www.semanticscholar.org/author/1698909"},{"authorId":"1706881","name":"Arup
        Acharya","url":"https://www.semanticscholar.org/author/1706881"},{"authorId":"1734537","name":"Sajal
        K. Das","url":"https://www.semanticscholar.org/author/1734537"}],"doi":"10.1007/s11276-006-9200-8","isInfluential":true,"paperId":"eddcec2bcb9360ef201539dbd406c22759753343","title":"Enabling
        SIP-based sessions in ad hoc networks","url":"https://www.semanticscholar.org/paper/eddcec2bcb9360ef201539dbd406c22759753343","venue":"Wireless
        Networks","year":2007},{"arxivId":null,"authors":[{"authorId":"35920747","name":"Sergio
        Marti","url":"https://www.semanticscholar.org/author/35920747"},{"authorId":"38753928","name":"Prasanna
        Ganesan","url":"https://www.semanticscholar.org/author/38753928"},{"authorId":"1695250","name":"Hector
        Garcia-Molina","url":"https://www.semanticscholar.org/author/1695250"}],"doi":"10.1007/978-3-540-30192-9_42","isInfluential":false,"paperId":"28b39c5e3c14d02710908b3012d9c8ea7f8aa372","title":"SPROUT:
        P2P Routing with Social Networks","url":"https://www.semanticscholar.org/paper/28b39c5e3c14d02710908b3012d9c8ea7f8aa372","venue":"EDBT
        Workshops","year":2004},{"arxivId":null,"authors":[{"authorId":"1751546","name":"Javier
        Celaya","url":"https://www.semanticscholar.org/author/1751546"},{"authorId":"1794630","name":"Unai
        Arronategui","url":"https://www.semanticscholar.org/author/1794630"}],"doi":"10.1016/j.future.2012.12.009","isInfluential":true,"paperId":"036bfff33f47cd9705bb9a7b342d27c3d774844b","title":"A
        task routing approach to large-scale scheduling","url":"https://www.semanticscholar.org/paper/036bfff33f47cd9705bb9a7b342d27c3d774844b","venue":"Future
        Generation Comp. Syst.","year":2013},{"arxivId":null,"authors":[{"authorId":"1942519","name":"Zack
        J. Butler","url":"https://www.semanticscholar.org/author/1942519"},{"authorId":"1895536","name":"Minseok
        Kwon","url":"https://www.semanticscholar.org/author/1895536"},{"authorId":"47125979","name":"R.K.
        Raj","url":"https://www.semanticscholar.org/author/47125979"}],"doi":null,"isInfluential":false,"paperId":"236b2ed52264189771a910d60c9ce572288916f1","title":"Work
        in progress - using a mobile robots laboratory to teach advanced computing
        concepts","url":"https://www.semanticscholar.org/paper/236b2ed52264189771a910d60c9ce572288916f1","venue":"2008
        38th Annual Frontiers in Education Conference","year":2008},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"}],"doi":null,"isInfluential":false,"paperId":"324564758ca3e639c167bfd865c416324f1d7e83","title":"Load
        Balancing in Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/324564758ca3e639c167bfd865c416324f1d7e83","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"3082075","name":"Suleyman
        Uludag","url":"https://www.semanticscholar.org/author/3082075"},{"authorId":"1706796","name":"Sherali
        Zeadally","url":"https://www.semanticscholar.org/author/1706796"},{"authorId":"3192003","name":"Mohamad
        Badra","url":"https://www.semanticscholar.org/author/3192003"}],"doi":null,"isInfluential":false,"paperId":"19b2ad6ed0873ef837cedd2f62cc829593b526e7","title":"Techniques
        , Taxonomy , and Challenges of Privacy Protection in the Smart Grid","url":"https://www.semanticscholar.org/paper/19b2ad6ed0873ef837cedd2f62cc829593b526e7","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"3283254","name":"Adriano
        Fiorese","url":"https://www.semanticscholar.org/author/3283254"},{"authorId":"36771098","name":"Paulo
        Sim\u00f5es","url":"https://www.semanticscholar.org/author/36771098"},{"authorId":"1687051","name":"Fernando
        Boavida","url":"https://www.semanticscholar.org/author/1687051"}],"doi":null,"isInfluential":false,"paperId":"6cc03c53512cc3f0e1e1c4dc1ac0d564712d927a","title":"On
        the Dimensioning of an Aggregation Service for P2P Service Overlay Networks","url":"https://www.semanticscholar.org/paper/6cc03c53512cc3f0e1e1c4dc1ac0d564712d927a","venue":"AIMS","year":2011},{"arxivId":null,"authors":[{"authorId":"1722366","name":"Rajiv
        Ranjan","url":"https://www.semanticscholar.org/author/1722366"},{"authorId":"1678182","name":"Aaron
        Harwood","url":"https://www.semanticscholar.org/author/1678182"}],"doi":null,"isInfluential":true,"paperId":"e198dc7a3a46263d32897f04305b120706cfe302","title":"Grid
        Federation : An Economy Based , Scalable Distributed Resource Management System
        for Large-Scale Resource Coupling","url":"https://www.semanticscholar.org/paper/e198dc7a3a46263d32897f04305b120706cfe302","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"3074777","name":"Tulika
        Mishra","url":"https://www.semanticscholar.org/author/3074777"},{"authorId":"39101643","name":"Deepak
        Garg","url":"https://www.semanticscholar.org/author/39101643"},{"authorId":"1846780","name":"Manoj
        Madhava Gore","url":"https://www.semanticscholar.org/author/1846780"}],"doi":"10.1109/WAINA.2011.87","isInfluential":true,"paperId":"bd501911b3d5d408e39372164aa344ba8497219a","title":"A
        Publish/Subscribe Communication Infrastructure for VANET Applications","url":"https://www.semanticscholar.org/paper/bd501911b3d5d408e39372164aa344ba8497219a","venue":"2011
        IEEE Workshops of International Conference on Advanced Information Networking
        and Applications","year":2011},{"arxivId":null,"authors":[{"authorId":"1730832","name":"Ha\u00efdar
        Safa","url":"https://www.semanticscholar.org/author/1730832"},{"authorId":"1761623","name":"Wassim
        El-Hajj","url":"https://www.semanticscholar.org/author/1761623"},{"authorId":"34884946","name":"Fatima
        K. Abu Salem","url":"https://www.semanticscholar.org/author/34884946"},{"authorId":"1909624","name":"Marwa
        Moutaweh","url":"https://www.semanticscholar.org/author/1909624"}],"doi":"10.1109/IWCMC.2015.7289207","isInfluential":false,"paperId":"797c264b0fa307284abcb06bcb6a2a7939d747ad","title":"Using
        K-nearest neighbor algorithm to reduce false negatives in P2P secure routing
        protocols","url":"https://www.semanticscholar.org/paper/797c264b0fa307284abcb06bcb6a2a7939d747ad","venue":"2015
        International Wireless Communications and Mobile Computing Conference (IWCMC)","year":2015},{"arxivId":null,"authors":[{"authorId":"1760312","name":"Federica
        Paganelli","url":"https://www.semanticscholar.org/author/1760312"},{"authorId":"1769691","name":"David
        Parlanti","url":"https://www.semanticscholar.org/author/1769691"}],"doi":"10.1155/2012/107041","isInfluential":false,"paperId":"fe831a5484eedf903e5ebd534101fc91b49ccc36","title":"A
        DHT-Based Discovery Service for the Internet of Things","url":"https://www.semanticscholar.org/paper/fe831a5484eedf903e5ebd534101fc91b49ccc36","venue":"Journal
        Comp. Netw. and Communic.","year":2012},{"arxivId":null,"authors":[{"authorId":"38813833","name":"Jouni
        Maenpaa","url":"https://www.semanticscholar.org/author/38813833"},{"authorId":"50595518","name":"Gonzalo
        Camarillo","url":"https://www.semanticscholar.org/author/50595518"}],"doi":null,"isInfluential":true,"paperId":"d2dafd3019e541ac4614e824f19faa6913dbbb34","title":"Analysis
        of Delays in a Peer-to-Peer Session Initiation Protocol Overlay Network","url":"https://www.semanticscholar.org/paper/d2dafd3019e541ac4614e824f19faa6913dbbb34","venue":"2010
        7th IEEE Consumer Communications and Networking Conference","year":2010},{"arxivId":null,"authors":[{"authorId":"1837263","name":"Andrea
        Ceccanti","url":"https://www.semanticscholar.org/author/1837263"},{"authorId":"1876498","name":"Gian
        Paolo Jesi","url":"https://www.semanticscholar.org/author/1876498"}],"doi":"10.1109/ICAS-ICNS.2005.30","isInfluential":false,"paperId":"1640b51851f76152c75e3caca5c089c9fc473d0a","title":"Building
        Latency-aware Overlay Topologies with QuickPee","url":"https://www.semanticscholar.org/paper/1640b51851f76152c75e3caca5c089c9fc473d0a","venue":"Joint
        International Conference on Autonomic and Autonomous Systems and International
        Conference on Networking and Services - (icas-isns''05)","year":2005},{"arxivId":null,"authors":[{"authorId":"46269136","name":"Yong
        Xie","url":"https://www.semanticscholar.org/author/46269136"}],"doi":"10.4304/jmm.8.5.527-533","isInfluential":false,"paperId":"160b73404aaac588e67650cb15d187ce9309567f","title":"Improved
        Gaussian Mixture Model in Video Motion Detection","url":"https://www.semanticscholar.org/paper/160b73404aaac588e67650cb15d187ce9309567f","venue":"Journal
        of Multimedia","year":2013},{"arxivId":null,"authors":[{"authorId":"2750020","name":"HyunYong
        Lee","url":"https://www.semanticscholar.org/author/2750020"},{"authorId":"1738341","name":"JongWon
        Kim","url":"https://www.semanticscholar.org/author/1738341"}],"doi":"10.1109/TCE.2007.4429232","isInfluential":false,"paperId":"759d263cd9e66063f42af87bc6af9cd4d335066b","title":"An
        Approach for Content Sharing among UPnP Devices in Different Home Networks","url":"https://www.semanticscholar.org/paper/759d263cd9e66063f42af87bc6af9cd4d335066b","venue":"IEEE
        Transactions on Consumer Electronics","year":2007},{"arxivId":null,"authors":[{"authorId":"9233749","name":"Wu
        Hengkui","url":"https://www.semanticscholar.org/author/9233749"},{"authorId":"47693297","name":"Lin
        Fuhong","url":"https://www.semanticscholar.org/author/47693297"},{"authorId":"9120212","name":"Zhang
        Hongke","url":"https://www.semanticscholar.org/author/9120212"}],"doi":null,"isInfluential":false,"paperId":"e1b381b9d701950b6ee5b4884897eda6c94ae796","title":"Reducing
        maintenance overhead via heterogeneity in Skip Graphs","url":"https://www.semanticscholar.org/paper/e1b381b9d701950b6ee5b4884897eda6c94ae796","venue":"2009
        2nd IEEE International Conference on Broadband Network & Multimedia Technology","year":2009},{"arxivId":null,"authors":[{"authorId":"49029424","name":"Kumaresh
        Krishnan","url":"https://www.semanticscholar.org/author/49029424"},{"authorId":"1699728","name":"Yan
        Bai","url":"https://www.semanticscholar.org/author/1699728"}],"doi":null,"isInfluential":false,"paperId":"71200841f1f6408a7621c1a4a55c95fa66460195","title":"A
        Low-cost Four-degree-of-freedom Motion-platform for Ship-borne Free Space
        Laser Communication","url":"https://www.semanticscholar.org/paper/71200841f1f6408a7621c1a4a55c95fa66460195","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"31724343","name":"Chad
        Yoshikawa","url":"https://www.semanticscholar.org/author/31724343"},{"authorId":"2293758","name":"Brent
        N. Chun","url":"https://www.semanticscholar.org/author/2293758"},{"authorId":"1718754","name":"Amin
        Vahdat","url":"https://www.semanticscholar.org/author/1718754"},{"authorId":"1782436","name":"Fred
        S. Annexstein","url":"https://www.semanticscholar.org/author/1782436"},{"authorId":"35070537","name":"Kenneth
        A. Berman","url":"https://www.semanticscholar.org/author/35070537"}],"doi":"10.1145/1133572.1133584","isInfluential":true,"paperId":"0312a0e27daf75ce14fbd890c8fdb9ea49694e71","title":"The
        lonely NATed node","url":"https://www.semanticscholar.org/paper/0312a0e27daf75ce14fbd890c8fdb9ea49694e71","venue":"ACM
        SIGOPS European Workshop","year":2004},{"arxivId":null,"authors":[{"authorId":"3318916","name":"Melvin
        Koh","url":"https://www.semanticscholar.org/author/3318916"},{"authorId":"33276926","name":"Jie
        Song","url":"https://www.semanticscholar.org/author/33276926"},{"authorId":"1943039","name":"Liang
        Peng","url":"https://www.semanticscholar.org/author/1943039"},{"authorId":"1808531","name":"Simon
        See","url":"https://www.semanticscholar.org/author/1808531"}],"doi":"10.1109/CCGRID.2006.166","isInfluential":true,"paperId":"ee4697f689b7da1e6e30911fad01faa9c3b9d277","title":"Service
        Registry Discovery using GridSearch P2P Framework","url":"https://www.semanticscholar.org/paper/ee4697f689b7da1e6e30911fad01faa9c3b9d277","venue":"Sixth
        IEEE International Symposium on Cluster Computing and the Grid (CCGRID''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"1804913","name":"Moreno
        Marzolla","url":"https://www.semanticscholar.org/author/1804913"},{"authorId":"1715724","name":"Matteo
        Mordacchini","url":"https://www.semanticscholar.org/author/1715724"},{"authorId":"1702082","name":"Salvatore
        Orlando","url":"https://www.semanticscholar.org/author/1702082"}],"doi":"10.1109/PDP.2006.68","isInfluential":false,"paperId":"0dd6582095006782c050ebfd9fb58782124f2436","title":"Tree
        vector indexes: efficient range queries for dynamic content on peer-to-peer
        networks","url":"https://www.semanticscholar.org/paper/0dd6582095006782c050ebfd9fb58782124f2436","venue":"14th
        Euromicro International Conference on Parallel, Distributed, and Network-Based
        Processing (PDP''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"2496504","name":"Afzal
        Mawji","url":"https://www.semanticscholar.org/author/2496504"},{"authorId":"1751872","name":"Hossam
        S. Hassanein","url":"https://www.semanticscholar.org/author/1751872"}],"doi":"10.1109/WOWMOM.2010.5534905","isInfluential":false,"paperId":"f22ed8552532054b9dc138a6fca5a712b6d033d5","title":"P2P
        overlay topology control in MANETs","url":"https://www.semanticscholar.org/paper/f22ed8552532054b9dc138a6fca5a712b6d033d5","venue":"2010
        IEEE International Symposium on \"A World of Wireless, Mobile and Multimedia
        Networks\" (WoWMoM)","year":2010},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"1680273","name":"Kai
        Hwang","url":"https://www.semanticscholar.org/author/1680273"}],"doi":"10.1109/ICDCS.2009.38","isInfluential":false,"paperId":"64e39cca575b46f80764660e6f8df4c49369f373","title":"Locality-Preserving
        Clustering and Discovery of Wide-Area Grid Resources","url":"https://www.semanticscholar.org/paper/64e39cca575b46f80764660e6f8df4c49369f373","venue":"2009
        29th IEEE International Conference on Distributed Computing Systems","year":2009},{"arxivId":null,"authors":[{"authorId":"2496504","name":"Afzal
        Mawji","url":"https://www.semanticscholar.org/author/2496504"}],"doi":null,"isInfluential":false,"paperId":"4eb9492e690ead5dda52c1f19c4dc408c26f35f6","title":"A
        Framework for Peer-to-Peer Computing in Mobile Ad Hoc Networks","url":"https://www.semanticscholar.org/paper/4eb9492e690ead5dda52c1f19c4dc408c26f35f6","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"2658080","name":"Mahmood
        Fathy","url":"https://www.semanticscholar.org/author/2658080"},{"authorId":"1719313","name":"Kaamran
        Raahemifar","url":"https://www.semanticscholar.org/author/1719313"},{"authorId":"2238283","name":"Hamideh
        Babaei","url":"https://www.semanticscholar.org/author/2238283"},{"authorId":"2631610","name":"Morteza
        Romoozi","url":"https://www.semanticscholar.org/author/2631610"},{"authorId":"1982877","name":"Reza
        Berangi","url":"https://www.semanticscholar.org/author/1982877"}],"doi":"10.1016/j.procs.2012.06.082","isInfluential":false,"paperId":"e94ab2f66ecc1d254da6d6d2ec25d830b3b34aa0","title":"Impact
        of Mobility on Performance of P2P Content Discovery Protocols Over MANET","url":"https://www.semanticscholar.org/paper/e94ab2f66ecc1d254da6d6d2ec25d830b3b34aa0","venue":"ANT/MobiWIS","year":2012},{"arxivId":null,"authors":[{"authorId":"34412776","name":"Takuma
        Oide","url":"https://www.semanticscholar.org/author/34412776"},{"authorId":"2370755","name":"Atsushi
        Takeda","url":"https://www.semanticscholar.org/author/2370755"},{"authorId":"1702816","name":"Takuo
        Suganuma","url":"https://www.semanticscholar.org/author/1702816"},{"authorId":"1691389","name":"Akiko
        Takahashi","url":"https://www.semanticscholar.org/author/1691389"}],"doi":"10.1109/COMPSACW.2013.64","isInfluential":true,"paperId":"47701cafc54f1695f2cbdc1b3620ef93624b782a","title":"Implementation
        and Evaluation of the Well-Distribution Algorithm for an Overlay Network","url":"https://www.semanticscholar.org/paper/47701cafc54f1695f2cbdc1b3620ef93624b782a","venue":"2013
        IEEE 37th Annual Computer Software and Applications Conference Workshops","year":2013},{"arxivId":null,"authors":[{"authorId":"2255485","name":"Jan
        Sacha","url":"https://www.semanticscholar.org/author/2255485"}],"doi":null,"isInfluential":false,"paperId":"e981b0e14808a9c66c42295c9f73347f665889b3","title":"Exploiting
        Heterogeneity in Peer-to-Peer Systems Using Gradient Topologies","url":"https://www.semanticscholar.org/paper/e981b0e14808a9c66c42295c9f73347f665889b3","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"3122063","name":"Michael
        J. Freedman","url":"https://www.semanticscholar.org/author/3122063"},{"authorId":"2534985","name":"Eric
        Freudenthal","url":"https://www.semanticscholar.org/author/2534985"},{"authorId":"2506126","name":"David
        Mazi\u00e8res","url":"https://www.semanticscholar.org/author/2506126"}],"doi":null,"isInfluential":false,"paperId":"0dcb204b43875857966a4b4a0ea5de7e9de0ea72","title":"Democratizing
        Content Publication with Coral","url":"https://www.semanticscholar.org/paper/0dcb204b43875857966a4b4a0ea5de7e9de0ea72","venue":"NSDI","year":2004},{"arxivId":null,"authors":[{"authorId":"1705508","name":"Gennaro
        Cordasco","url":"https://www.semanticscholar.org/author/1705508"},{"authorId":"1786473","name":"Vittorio
        Scarano","url":"https://www.semanticscholar.org/author/1786473"},{"authorId":"17841148","name":"Cristiano
        Vitolo","url":"https://www.semanticscholar.org/author/17841148"}],"doi":"10.1145/1013367.1013436","isInfluential":true,"paperId":"113a209a5221cc8ab2f1e010e17bffc8112c2724","title":"Architecture
        of a p2p distributed adaptive directory","url":"https://www.semanticscholar.org/paper/113a209a5221cc8ab2f1e010e17bffc8112c2724","venue":"WWW","year":2004},{"arxivId":null,"authors":[{"authorId":"2368876","name":"Luiz
        Rodolpho Monnerat","url":"https://www.semanticscholar.org/author/2368876"},{"authorId":"1764900","name":"Cl\u00e1udio
        L. Amorim","url":"https://www.semanticscholar.org/author/1764900"}],"doi":"10.1109/IPDPS.2006.1639278","isInfluential":true,"paperId":"1e03a7278fcbc6999cdbdcc7be60fe25e8d64bef","title":"D1HT:
        a distributed one hop hash table","url":"https://www.semanticscholar.org/paper/1e03a7278fcbc6999cdbdcc7be60fe25e8d64bef","venue":"Proceedings
        20th IEEE International Parallel & Distributed Processing Symposium","year":2006},{"arxivId":null,"authors":[{"authorId":"2067818","name":"R.
        Saravanan","url":"https://www.semanticscholar.org/author/2067818"},{"authorId":"2258972","name":"M
        Shamily Rathan M. Tech","url":"https://www.semanticscholar.org/author/2258972"}],"doi":null,"isInfluential":false,"paperId":"5e34f5e2e34a7bdbb59bfe60c90a81aca0edd5a4","title":"Processing
        of Query in Peer to Peer Networks","url":"https://www.semanticscholar.org/paper/5e34f5e2e34a7bdbb59bfe60c90a81aca0edd5a4","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"40058405","name":"Yingjie
        Li","url":"https://www.semanticscholar.org/author/40058405"},{"authorId":"22134418","name":"Ming
        T. Liu","url":"https://www.semanticscholar.org/author/22134418"}],"doi":"10.1007/978-3-540-30582-8_52","isInfluential":false,"paperId":"e2e9764f315afebb9552f1a4ea886cd1b12730b3","title":"SDSR:
        A Scalable Data Storage and Retrieval Service for Wireless Ad Hoc Networks","url":"https://www.semanticscholar.org/paper/e2e9764f315afebb9552f1a4ea886cd1b12730b3","venue":"ICOIN","year":2005},{"arxivId":null,"authors":[{"authorId":"2799760","name":"Sven
        Herschel","url":"https://www.semanticscholar.org/author/2799760"}],"doi":null,"isInfluential":false,"paperId":"aa6ecea9b16e230cdc21116c0f46b24d7b4e4004","title":"Anfragenbasierte
        Datenreplikation in Peer-to-Peer-Netzen","url":"https://www.semanticscholar.org/paper/aa6ecea9b16e230cdc21116c0f46b24d7b4e4004","venue":"Grundlagen
        von Datenbanken","year":2004},{"arxivId":null,"authors":[{"authorId":"2656336","name":"Guoxin
        Liu","url":"https://www.semanticscholar.org/author/2656336"},{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"}],"doi":"10.1109/TPDS.2016.2618864","isInfluential":false,"paperId":"03d958da3bf5c5ce96914dcae7b1c58ffed76397","title":"iASK:
        A Distributed Q&A System Incorporating Social Community and Global Collective
        Intelligence","url":"https://www.semanticscholar.org/paper/03d958da3bf5c5ce96914dcae7b1c58ffed76397","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2015},{"arxivId":null,"authors":[],"doi":null,"isInfluential":false,"paperId":"9e74deda2d15b4d3ae561aa5aa2bcfea0fed598e","title":"Authentication
        on the Edge : Distributed Authentication for a","url":"https://www.semanticscholar.org/paper/9e74deda2d15b4d3ae561aa5aa2bcfea0fed598e","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"1700197","name":"Bharat
        Komatireddy","url":"https://www.semanticscholar.org/author/1700197"},{"authorId":"1699148","name":"Neal
        Charbonneau","url":"https://www.semanticscholar.org/author/1699148"},{"authorId":"9087286","name":"Vinod
        Vokkarane","url":"https://www.semanticscholar.org/author/9087286"}],"doi":"10.1007/s11107-009-0205-y","isInfluential":false,"paperId":"78560adc3171e0b5f5f3fe7c5fcdbddcabe3f9b0","title":"Source-ordering
        for improved TCP performance over load-balanced optical burst-switched (OBS)
        networks","url":"https://www.semanticscholar.org/paper/78560adc3171e0b5f5f3fe7c5fcdbddcabe3f9b0","venue":"Photonic
        Network Communications","year":2007},{"arxivId":null,"authors":[{"authorId":"2807735","name":"Ryo
        Nishide","url":"https://www.semanticscholar.org/author/2807735"},{"authorId":"1800698","name":"Masaaki
        Ohnishi","url":"https://www.semanticscholar.org/author/1800698"},{"authorId":"10859820","name":"Shinji
        Tsuboi","url":"https://www.semanticscholar.org/author/10859820"},{"authorId":"1794841","name":"Shinichi
        Ueshima","url":"https://www.semanticscholar.org/author/1794841"}],"doi":"10.1109/ICPADS.2007.4447814","isInfluential":false,"paperId":"c131658a49a8942a2569aaf56f2c7924057ca233","title":"P2P-based
        geometric computation method for extracting ROI from ubiquitous video cameras","url":"https://www.semanticscholar.org/paper/c131658a49a8942a2569aaf56f2c7924057ca233","venue":"2007
        International Conference on Parallel and Distributed Systems","year":2007},{"arxivId":null,"authors":[{"authorId":"39627164","name":"Marco
        Hentschel","url":"https://www.semanticscholar.org/author/39627164"},{"authorId":"1716059","name":"Maozhen
        Li","url":"https://www.semanticscholar.org/author/1716059"},{"authorId":"1886373","name":"Mahesh
        Ponraj","url":"https://www.semanticscholar.org/author/1886373"},{"authorId":"1784236","name":"Man
        Qi","url":"https://www.semanticscholar.org/author/1784236"}],"doi":"10.1109/CCGRID.2009.57","isInfluential":false,"paperId":"6333ffd258a1cf55678edb0e19eff1e98de5e2b4","title":"Distributed
        Indexing for Resource Discovery in P2P Networks","url":"https://www.semanticscholar.org/paper/6333ffd258a1cf55678edb0e19eff1e98de5e2b4","venue":"2009
        9th IEEE/ACM International Symposium on Cluster Computing and the Grid","year":2009},{"arxivId":null,"authors":[{"authorId":"2044612","name":"Dibyanshu
        Jaiswal","url":"https://www.semanticscholar.org/author/2044612"},{"authorId":"2465588","name":"Sujoy
        Mistry","url":"https://www.semanticscholar.org/author/2465588"},{"authorId":"37840630","name":"Arijit
        Mukherjee","url":"https://www.semanticscholar.org/author/37840630"},{"authorId":"1695724","name":"Nandini
        Mukherjee","url":"https://www.semanticscholar.org/author/1695724"}],"doi":"10.1109/SITIS.2013.51","isInfluential":false,"paperId":"abe7a7b2afca02cb89c44e844f4115abee257357","title":"Efficient
        Dynamic Service Provisioning over Distributed Resources Using Chord","url":"https://www.semanticscholar.org/paper/abe7a7b2afca02cb89c44e844f4115abee257357","venue":"2013
        International Conference on Signal-Image Technology & Internet-Based Systems","year":2013},{"arxivId":null,"authors":[{"authorId":"39071178","name":"Russell
        Power","url":"https://www.semanticscholar.org/author/39071178"},{"authorId":"46276184","name":"Jinyang
        Li","url":"https://www.semanticscholar.org/author/46276184"}],"doi":null,"isInfluential":false,"paperId":"624ab00ed715888d15e42246cb3c87fd13123082","title":"Piccolo:
        Building Fast, Distributed Programs with Partitioned Tables","url":"https://www.semanticscholar.org/paper/624ab00ed715888d15e42246cb3c87fd13123082","venue":"OSDI","year":2010},{"arxivId":null,"authors":[{"authorId":"49204680","name":"Santosh
        Kulkarni","url":"https://www.semanticscholar.org/author/49204680"},{"authorId":"39874795","name":"Scott
        Douglas","url":"https://www.semanticscholar.org/author/39874795"},{"authorId":"20677598","name":"David
        Churchill","url":"https://www.semanticscholar.org/author/20677598"}],"doi":"10.1016/j.comnet.2010.05.015","isInfluential":false,"paperId":"0539d4382580ca52264aa75465e9ea0ef1a6c71a","title":"Badumna:
        A decentralised network engine for virtual environments","url":"https://www.semanticscholar.org/paper/0539d4382580ca52264aa75465e9ea0ef1a6c71a","venue":"Computer
        Networks","year":2010},{"arxivId":null,"authors":[{"authorId":"1723107","name":"Cheong-Ghil
        Kim","url":"https://www.semanticscholar.org/author/1723107"},{"authorId":"47181830","name":"Dong
        Wook Kim","url":"https://www.semanticscholar.org/author/47181830"},{"authorId":"2176510","name":"Choong
        Pyo Hong","url":"https://www.semanticscholar.org/author/2176510"},{"authorId":"1686632","name":"Shin-Dug
        Kim","url":"https://www.semanticscholar.org/author/1686632"}],"doi":"10.1109/HPCS.2010.5547056","isInfluential":false,"paperId":"037bbf1b0f1ec6d36e002be16b0c77e69466b14e","title":"An
        enhanced virtual object management scheme for personalized ubiquitous computing
        services at peer-to-peer","url":"https://www.semanticscholar.org/paper/037bbf1b0f1ec6d36e002be16b0c77e69466b14e","venue":"2010
        International Conference on High Performance Computing & Simulation","year":2010},{"arxivId":null,"authors":[{"authorId":"1751653","name":"Youki
        Kadobayashi","url":"https://www.semanticscholar.org/author/1751653"}],"doi":"10.1109/SAINTW.2004.1268686","isInfluential":false,"paperId":"38974cb63b705d1db68225989f948916ab43eb3f","title":"Achieving
        heterogeneity and fairness in Kademlia","url":"https://www.semanticscholar.org/paper/38974cb63b705d1db68225989f948916ab43eb3f","venue":"2004
        International Symposium on Applications and the Internet Workshops. 2004 Workshops.","year":2004},{"arxivId":null,"authors":[{"authorId":"3237897","name":"Chris
        Lesniewski-Laas","url":"https://www.semanticscholar.org/author/3237897"}],"doi":"10.1145/1435497.1435501","isInfluential":false,"paperId":"68c4209d6ef916327ca1923f7761c34ce3769ac3","title":"A
        Sybil-proof one-hop DHT","url":"https://www.semanticscholar.org/paper/68c4209d6ef916327ca1923f7761c34ce3769ac3","venue":"SNS","year":2008},{"arxivId":"1203.2668","authors":[{"authorId":"3338871","name":"Qiyan
        Wang","url":"https://www.semanticscholar.org/author/3338871"},{"authorId":"1681179","name":"Nikita
        Borisov","url":"https://www.semanticscholar.org/author/1681179"}],"doi":"10.1109/ICDCS.2012.78","isInfluential":true,"paperId":"2c704d8c1039ac8596a4b72257a5e8582dc8d005","title":"Octopus:
        A Secure and Anonymous DHT Lookup","url":"https://www.semanticscholar.org/paper/2c704d8c1039ac8596a4b72257a5e8582dc8d005","venue":"2012
        IEEE 32nd International Conference on Distributed Computing Systems","year":2012},{"arxivId":null,"authors":[{"authorId":"49681252","name":"Lei
        Wang","url":"https://www.semanticscholar.org/author/49681252"},{"authorId":"1682980","name":"Yong
        Ren","url":"https://www.semanticscholar.org/author/1682980"},{"authorId":"49417698","name":"Yue
        Wang","url":"https://www.semanticscholar.org/author/49417698"},{"authorId":"46685422","name":"Jian
        Yuan","url":"https://www.semanticscholar.org/author/46685422"},{"authorId":"1760750","name":"Shiji
        Song","url":"https://www.semanticscholar.org/author/1760750"},{"authorId":"38455898","name":"Xiuming
        Shan","url":"https://www.semanticscholar.org/author/38455898"}],"doi":"10.1109/CSIE.2009.874","isInfluential":false,"paperId":"c3edc2b1f24873b5c47636b93f2456eb6f220f2d","title":"Traffic
        Localizing Strategy for Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/c3edc2b1f24873b5c47636b93f2456eb6f220f2d","venue":"2009
        WRI World Congress on Computer Science and Information Engineering","year":2009},{"arxivId":null,"authors":[{"authorId":"5981431","name":"Hyunjoo
        Kim","url":"https://www.semanticscholar.org/author/5981431"},{"authorId":"48105200","name":"Manish
        Parashar","url":"https://www.semanticscholar.org/author/48105200"},{"authorId":"1742414","name":"David
        J. Foran","url":"https://www.semanticscholar.org/author/1742414"},{"authorId":"49576071","name":"Lin
        Yang","url":"https://www.semanticscholar.org/author/49576071"}],"doi":null,"isInfluential":false,"paperId":"f7508a787b7cb9d49707848ac05ed3c057607a3b","title":"Investigating
        the Use of Cloudbursts for High-Throughput Medical Image Registration.","url":"https://www.semanticscholar.org/paper/f7508a787b7cb9d49707848ac05ed3c057607a3b","venue":"Proceedings
        of the ... IEEE/ACM International Conference on Grid Computing. IEEE/ACM International
        Conference on Grid Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"2019799","name":"Thomas
        Cerqueus","url":"https://www.semanticscholar.org/author/2019799"}],"doi":null,"isInfluential":false,"paperId":"ce01fd68dc7c64fac8e8f8ec0ec9e0231f99f984","title":"Contributions
        au probl\u00e8me d''h\u00e9t\u00e9rog\u00e9n\u00e9it\u00e9 s\u00e9mantique
        dans les syst\u00e8mes pair-\u00e0-pair : application \u00e0 la recherche
        d''information. (Contributions to the problem of semantic heterogeneity in
        peer-to-peer systems: application to information retrieval)","url":"https://www.semanticscholar.org/paper/ce01fd68dc7c64fac8e8f8ec0ec9e0231f99f984","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"1710888","name":"Runfang
        Zhou","url":"https://www.semanticscholar.org/author/1710888"},{"authorId":"1680273","name":"Kai
        Hwang","url":"https://www.semanticscholar.org/author/1680273"}],"doi":"10.1109/TPDS.2007.1021","isInfluential":false,"paperId":"703364e9e1e04071fbb9c685e11a74b4e7c363b8","title":"PowerTrust:
        A Robust and Scalable Reputation System for Trusted Peer-to-Peer Computing","url":"https://www.semanticscholar.org/paper/703364e9e1e04071fbb9c685e11a74b4e7c363b8","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2007},{"arxivId":null,"authors":[{"authorId":"40447892","name":"Aizhong
        Lin","url":"https://www.semanticscholar.org/author/40447892"},{"authorId":"1769951","name":"Piyush
        Maheshwari","url":"https://www.semanticscholar.org/author/1769951"}],"doi":"10.1007/11589990_43","isInfluential":true,"paperId":"4313b046d5bf282423a4ce1a1fbb3c59236ca373","title":"Agent-Based
        Middleware for Web Service Dynamic Integration on Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/4313b046d5bf282423a4ce1a1fbb3c59236ca373","venue":"Australian
        Conference on Artificial Intelligence","year":2005},{"arxivId":null,"authors":[{"authorId":"2384553","name":"H.
        A. Ali","url":"https://www.semanticscholar.org/author/2384553"},{"authorId":"2068054","name":"Mohammed
        F. A. Ahmed","url":"https://www.semanticscholar.org/author/2068054"}],"doi":null,"isInfluential":true,"paperId":"c574508b18006b0ef57360377ad4df808a0faba4","title":"HPRDG:
        A scalable framework hypercube-P2P-based for resource discovery in computational
        Grid","url":"https://www.semanticscholar.org/paper/c574508b18006b0ef57360377ad4df808a0faba4","venue":"2012
        22nd International Conference on Computer Theory and Applications (ICCTA)","year":2012},{"arxivId":null,"authors":[{"authorId":"1722716","name":"Gianluigi
        Folino","url":"https://www.semanticscholar.org/author/1722716"},{"authorId":"1708290","name":"Francesco
        Sergio Pisani","url":"https://www.semanticscholar.org/author/1708290"},{"authorId":"1767138","name":"Paolo
        Trunfio","url":"https://www.semanticscholar.org/author/1767138"}],"doi":"10.1109/HPCSim.2014.6903724","isInfluential":false,"paperId":"033e9eeb79645e78024b9f1861e2bf164aa58a26","title":"Efficient
        discovery of data mining services over DHT-based overlays","url":"https://www.semanticscholar.org/paper/033e9eeb79645e78024b9f1861e2bf164aa58a26","venue":"2014
        International Conference on High Performance Computing & Simulation (HPCS)","year":2014},{"arxivId":null,"authors":[{"authorId":"9783915","name":"Matthew
        C. Caesar","url":"https://www.semanticscholar.org/author/9783915"}],"doi":null,"isInfluential":true,"paperId":"e3bfbfe9e8e51b605c9933fd3893f60b76cf1e67","title":"Identity-based
        routing","url":"https://www.semanticscholar.org/paper/e3bfbfe9e8e51b605c9933fd3893f60b76cf1e67","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"1761299","name":"Jan
        Seedorf","url":"https://www.semanticscholar.org/author/1761299"}],"doi":"10.1007/978-3-642-05437-2_10","isInfluential":false,"paperId":"9a33cc39d7c4b1fdc2f6c7d55e211c27b7aff482","title":"Security
        Issues for P2P-Based Voice- and Video-Streaming Applications","url":"https://www.semanticscholar.org/paper/9a33cc39d7c4b1fdc2f6c7d55e211c27b7aff482","venue":"iNetSeC","year":2009},{"arxivId":null,"authors":[{"authorId":"3316695","name":"Rasib
        Khan","url":"https://www.semanticscholar.org/author/3316695"},{"authorId":null,"name":"Ragib
        Hasan SECRETLab","url":null}],"doi":null,"isInfluential":false,"paperId":"dfef55e88b4801835792651bd4a4e527807f6d71","title":"SecP
        2 PSIP : A Distributed Overlay Architecture for Secure P 2 PSIP","url":"https://www.semanticscholar.org/paper/dfef55e88b4801835792651bd4a4e527807f6d71","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"2096527","name":"Gang
        Wang","url":"https://www.semanticscholar.org/author/2096527"},{"authorId":"1792246","name":"Chunhong
        Zhang","url":"https://www.semanticscholar.org/author/1792246"},{"authorId":"34985964","name":"Xiaofeng
        Qiu","url":"https://www.semanticscholar.org/author/34985964"},{"authorId":"7801828","name":"Zhimin
        Zeng","url":"https://www.semanticscholar.org/author/7801828"}],"doi":"10.1007/s11042-011-0952-5","isInfluential":false,"paperId":"75aa6f507862bf0a8bd01f799a8567f10ea1253b","title":"An
        efficient relay node selection scheme to improve the performance of P2P-based
        VoIP applications in Chinese internet","url":"https://www.semanticscholar.org/paper/75aa6f507862bf0a8bd01f799a8567f10ea1253b","venue":"Multimedia
        Tools and Applications","year":2011},{"arxivId":null,"authors":[{"authorId":"46395033","name":"Yuehua
        Wang","url":"https://www.semanticscholar.org/author/46395033"},{"authorId":"1685610","name":"Ling
        Liu","url":"https://www.semanticscholar.org/author/1685610"},{"authorId":"1682055","name":"Calton
        Pu","url":"https://www.semanticscholar.org/author/1682055"},{"authorId":"17294285","name":"Gong
        Zhang","url":"https://www.semanticscholar.org/author/17294285"}],"doi":null,"isInfluential":true,"paperId":"6e8760f086961cab34d4b8fb5703401d722fc58b","title":"An
        utility-driven routing scheme for scaling multicast applications","url":"https://www.semanticscholar.org/paper/6e8760f086961cab34d4b8fb5703401d722fc58b","venue":"6th
        International Conference on Collaborative Computing: Networking, Applications
        and Worksharing (CollaborateCom 2010)","year":2010},{"arxivId":null,"authors":[{"authorId":"1721908","name":"Eleni
        Koutrouli","url":"https://www.semanticscholar.org/author/1721908"},{"authorId":"1684727","name":"Aphrodite
        Tsalgatidou","url":"https://www.semanticscholar.org/author/1684727"}],"doi":"10.1109/PDP.2011.68","isInfluential":false,"paperId":"9092c0c50e1838eb9c9e1e3f32ab936354d12254","title":"Credibility
        Enhanced Reputation Mechanism for Distributed E-communities","url":"https://www.semanticscholar.org/paper/9092c0c50e1838eb9c9e1e3f32ab936354d12254","venue":"2011
        19th International Euromicro Conference on Parallel, Distributed and Network-Based
        Processing","year":2011},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"}],"doi":"10.1109/P2P.2009.5284540","isInfluential":false,"paperId":"8df8f1b336ea92d298657652f77f8c7b8c4b3bc9","title":"Efficient
        and effective file replication in structured P2P file sharing systems","url":"https://www.semanticscholar.org/paper/8df8f1b336ea92d298657652f77f8c7b8c4b3bc9","venue":"2009
        IEEE Ninth International Conference on Peer-to-Peer Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"8991545","name":"Tomoaki
        Tsuchikawa","url":"https://www.semanticscholar.org/author/8991545"},{"authorId":"1736493","name":"Bhed
        Bahadur Bista","url":"https://www.semanticscholar.org/author/1736493"},{"authorId":"1752481","name":"Toyoo
        Takata","url":"https://www.semanticscholar.org/author/1752481"}],"doi":null,"isInfluential":false,"paperId":"1ea5457f05eb9cecdb07b3a432ea940ce260a391","title":"A
        proposal of distributed management scheme of content key information for pure
        P2P networks","url":"https://www.semanticscholar.org/paper/1ea5457f05eb9cecdb07b3a432ea940ce260a391","venue":"2014
        International Symposium on Information Theory and its Applications","year":2014},{"arxivId":null,"authors":[{"authorId":"34372081","name":"Leonardo
        B. Oliveira","url":"https://www.semanticscholar.org/author/34372081"},{"authorId":"29952459","name":"Brazil","url":"https://www.semanticscholar.org/author/29952459"},{"authorId":"2720499","name":"Isabela
        G. Siqueira","url":"https://www.semanticscholar.org/author/2720499"},{"authorId":"1705194","name":"Daniel
        F. Macedo","url":"https://www.semanticscholar.org/author/1705194"},{"authorId":"3774714","name":"France","url":"https://www.semanticscholar.org/author/3774714"},{"authorId":"47335206","name":"Jos\u00e9
        Miguel Caeiro Nogueira","url":"https://www.semanticscholar.org/author/47335206"},{"authorId":"1757448","name":"Antonio
        Alfredo Ferreira Loureiro","url":"https://www.semanticscholar.org/author/1757448"}],"doi":null,"isInfluential":true,"paperId":"f58011f584c85bcaf555bce8bf14eaf2fe431d41","title":"P
        2 P over MANETs : Application and Network Layers \u2019 Routing Assessment","url":"https://www.semanticscholar.org/paper/f58011f584c85bcaf555bce8bf14eaf2fe431d41","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"6900802","name":"Ricardo
        Matos","url":"https://www.semanticscholar.org/author/6900802"},{"authorId":"1782400","name":"Susana
        Sargento","url":"https://www.semanticscholar.org/author/1782400"},{"authorId":"2350432","name":"Karin
        Anna Hummel","url":"https://www.semanticscholar.org/author/2350432"},{"authorId":"17579394","name":"Andrea
        Hess","url":"https://www.semanticscholar.org/author/17579394"},{"authorId":"3118537","name":"Kurt
        Tutschku","url":"https://www.semanticscholar.org/author/3118537"},{"authorId":"1737114","name":"Hermann
        de Meer","url":"https://www.semanticscholar.org/author/1737114"}],"doi":"10.1007/s11235-011-9434-3","isInfluential":false,"paperId":"3d1fc05759df44192195488ebd61f7f315dd8b5b","title":"Context-based
        wireless mesh networks: a case for network virtualization","url":"https://www.semanticscholar.org/paper/3d1fc05759df44192195488ebd61f7f315dd8b5b","venue":"Telecommunication
        Systems","year":2012},{"arxivId":null,"authors":[{"authorId":"8760348","name":"Kouhei
        Ootani","url":"https://www.semanticscholar.org/author/8760348"},{"authorId":"7483434","name":"Satoshi
        Fujita","url":"https://www.semanticscholar.org/author/7483434"}],"doi":"10.1109/CANDAR.2016.0060","isInfluential":false,"paperId":"6e4220891ca08d58b395ffa907dbf634721c74fa","title":"Polling-Based
        P2P File Sharing with High Success Rate and Low Communication Cost","url":"https://www.semanticscholar.org/paper/6e4220891ca08d58b395ffa907dbf634721c74fa","venue":"2016
        Fourth International Symposium on Computing and Networking (CANDAR)","year":2016},{"arxivId":null,"authors":[{"authorId":"3457258","name":"Wenjun
        Xiao","url":"https://www.semanticscholar.org/author/3457258"},{"authorId":"40053584","name":"Hao
        Liu","url":"https://www.semanticscholar.org/author/40053584"},{"authorId":"47482767","name":"Weidong
        Chen","url":"https://www.semanticscholar.org/author/47482767"}],"doi":null,"isInfluential":true,"paperId":"7eec341a8f403cb23ed2f52bfac0151233354ecf","title":"CHypercube:
        A Novel P2P Overlay Network","url":"https://www.semanticscholar.org/paper/7eec341a8f403cb23ed2f52bfac0151233354ecf","venue":"2009
        Second International Symposium on Electronic Commerce and Security","year":2009},{"arxivId":null,"authors":[{"authorId":"2655989","name":"Marco
        Slot","url":"https://www.semanticscholar.org/author/2655989"},{"authorId":"1687186","name":"Vinny
        Cahill","url":"https://www.semanticscholar.org/author/1687186"}],"doi":"10.1109/VNC.2011.6117134","isInfluential":false,"paperId":"8b70327af246a49daf5151c73fe5bfb6bba4ec91","title":"End-to-end
        acknowledgement of geocast in vehicular networks","url":"https://www.semanticscholar.org/paper/8b70327af246a49daf5151c73fe5bfb6bba4ec91","venue":"2011
        IEEE Vehicular Networking Conference (VNC)","year":2011},{"arxivId":null,"authors":[{"authorId":"1734558","name":"Vijay
        K. Gurbani","url":"https://www.semanticscholar.org/author/1734558"},{"authorId":"36598147","name":"Dean
        Willis","url":"https://www.semanticscholar.org/author/36598147"},{"authorId":"3016553","name":"Fran\u00e7ois
        Audet","url":"https://www.semanticscholar.org/author/3016553"}],"doi":"10.1109/ICC.2007.201","isInfluential":true,"paperId":"31d17e0b466dc6fcd1ba787ff2da0e06f101a441","title":"Cryptographically
        Transparent Session Initiation Protocol (SIP) Proxies","url":"https://www.semanticscholar.org/paper/31d17e0b466dc6fcd1ba787ff2da0e06f101a441","venue":"2007
        IEEE International Conference on Communications","year":2007},{"arxivId":null,"authors":[{"authorId":"3339999","name":"Nizamuddin
        Channa","url":"https://www.semanticscholar.org/author/3339999"},{"authorId":"1773299","name":"Shanping
        Li","url":"https://www.semanticscholar.org/author/1773299"},{"authorId":"46810708","name":"Wei
        Shi","url":"https://www.semanticscholar.org/author/46810708"},{"authorId":"48560818","name":"Gang
        Peng","url":"https://www.semanticscholar.org/author/48560818"}],"doi":null,"isInfluential":false,"paperId":"de68a34982bd76b511d5b202596b3e7fcc3ef40c","title":"A
        CAN-based P2P infrastructure for semantic Web services publishing and discovery","url":"https://www.semanticscholar.org/paper/de68a34982bd76b511d5b202596b3e7fcc3ef40c","venue":"2005
        1st IEEE and IFIP International Conference in Central Asia on Internet","year":2005},{"arxivId":null,"authors":[{"authorId":"2467564","name":"Xiaohui
        Yang","url":"https://www.semanticscholar.org/author/2467564"},{"authorId":"1709571","name":"Angelos
        Stavrou","url":"https://www.semanticscholar.org/author/1709571"},{"authorId":"1757168","name":"Ram
        Dantu","url":"https://www.semanticscholar.org/author/1757168"},{"authorId":"1739759","name":"Duminda
        Wijesekera","url":"https://www.semanticscholar.org/author/1739759"}],"doi":"10.1007/978-3-642-29336-8_8","isInfluential":false,"paperId":"2bee226993f78141f37c991f596789c3ddefac8d","title":"Small
        World VoIP","url":"https://www.semanticscholar.org/paper/2bee226993f78141f37c991f596789c3ddefac8d","venue":"MobiCASE","year":2010},{"arxivId":"1006.4900","authors":[{"authorId":"38314769","name":"R.
        Seth Terashima","url":"https://www.semanticscholar.org/author/38314769"},{"authorId":"1699091","name":"James
        D. Fix","url":"https://www.semanticscholar.org/author/1699091"}],"doi":null,"isInfluential":false,"paperId":"c28f53b30fb75a7fcbf41835e03531135dfbac80","title":"Optimal
        Degree Distributions for Uniform Small World Rings","url":"https://www.semanticscholar.org/paper/c28f53b30fb75a7fcbf41835e03531135dfbac80","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"1703337","name":"Milad
        Shokouhi","url":"https://www.semanticscholar.org/author/1703337"},{"authorId":"50755883","name":"L.
        Si","url":"https://www.semanticscholar.org/author/50755883"}],"doi":"10.1007/978-0-387-39940-9_2631","isInfluential":false,"paperId":"f99ca3a9432f6a4beddf822578d1c41100396e84","title":"Federated
        Search","url":"https://www.semanticscholar.org/paper/f99ca3a9432f6a4beddf822578d1c41100396e84","venue":"Encyclopedia
        of Database Systems","year":2009},{"arxivId":null,"authors":[{"authorId":"2397729","name":"Bohao
        Feng","url":"https://www.semanticscholar.org/author/2397729"},{"authorId":"2245430","name":"Huachun
        Zhou","url":"https://www.semanticscholar.org/author/2245430"},{"authorId":"47514955","name":"Qi
        Xu","url":"https://www.semanticscholar.org/author/47514955"}],"doi":"10.1186/s13638-016-0715-0","isInfluential":false,"paperId":"022c17110cb9923ea591be7e381f891dcfbbc25d","title":"Mobility
        support in Named Data Networking: a survey","url":"https://www.semanticscholar.org/paper/022c17110cb9923ea591be7e381f891dcfbbc25d","venue":"EURASIP
        J. Wireless Comm. and Networking","year":2016},{"arxivId":null,"authors":[{"authorId":"2880713","name":"Koen
        Vanthournout","url":"https://www.semanticscholar.org/author/2880713"},{"authorId":"1678258","name":"Geert
        Deconinck","url":"https://www.semanticscholar.org/author/1678258"},{"authorId":"35207394","name":"Ronnie
        Belmans","url":"https://www.semanticscholar.org/author/35207394"}],"doi":"10.1007/978-3-540-27866-5_144","isInfluential":false,"paperId":"39b4264e37887dce087ec2fe4a0ae00ce3d36fc5","title":"A
        Small World Overlay Network for Resource Discovery","url":"https://www.semanticscholar.org/paper/39b4264e37887dce087ec2fe4a0ae00ce3d36fc5","venue":"Euro-Par","year":2004},{"arxivId":null,"authors":[{"authorId":"26382519","name":"Ying
        Cai","url":"https://www.semanticscholar.org/author/26382519"},{"authorId":"21665093","name":"Ashwin
        Natarajan","url":"https://www.semanticscholar.org/author/21665093"},{"authorId":"1759229","name":"Johnny
        S. Wong","url":"https://www.semanticscholar.org/author/1759229"}],"doi":"10.1109/GLOCOM.2005.1577722","isInfluential":false,"paperId":"1aa35e4ba4f6270505c73129db6b22a131316f84","title":"Shaking
        service requests in peer-to-peer video systems","url":"https://www.semanticscholar.org/paper/1aa35e4ba4f6270505c73129db6b22a131316f84","venue":"GLOBECOM
        ''05. IEEE Global Telecommunications Conference, 2005.","year":2005},{"arxivId":null,"authors":[{"authorId":"32199197","name":"Ren\u00e9
        Brunner","url":"https://www.semanticscholar.org/author/32199197"}],"doi":null,"isInfluential":false,"paperId":"c5da03ca717d82bd0c293cbb968c4044656b4bca","title":"A
        performance evaluation of the Kad-protocol","url":"https://www.semanticscholar.org/paper/c5da03ca717d82bd0c293cbb968c4044656b4bca","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"2515577","name":"Ralph
        Lange","url":"https://www.semanticscholar.org/author/2515577"},{"authorId":"1777822","name":"Frank
        D\u00fcrr","url":"https://www.semanticscholar.org/author/1777822"},{"authorId":"1700118","name":"Kurt
        Rothermel","url":"https://www.semanticscholar.org/author/1700118"}],"doi":"10.1145/1866480.1866514","isInfluential":true,"paperId":"80ea372154aa8b74d15fec469881800b162d8ba9","title":"Indexing
        source descriptions based on defined classes","url":"https://www.semanticscholar.org/paper/80ea372154aa8b74d15fec469881800b162d8ba9","venue":"IDEAS","year":2010},{"arxivId":null,"authors":[{"authorId":"1737359","name":"Cecilia
        Hern\u00e1ndez","url":"https://www.semanticscholar.org/author/1737359"},{"authorId":"10317733","name":"M.
        Andrea Rodr\u00edguez","url":"https://www.semanticscholar.org/author/10317733"},{"authorId":"1743311","name":"Mauricio
        Mar\u00edn","url":"https://www.semanticscholar.org/author/1743311"}],"doi":"10.1007/978-3-540-78568-2_58","isInfluential":true,"paperId":"86e44da8dbde0fb81d1c9a1363f7a9ecd6134d8b","title":"A
        P2P Meta-index for Spatio-temporal Moving Object Databases","url":"https://www.semanticscholar.org/paper/86e44da8dbde0fb81d1c9a1363f7a9ecd6134d8b","venue":"DASFAA","year":2008},{"arxivId":null,"authors":[{"authorId":"40375569","name":"George
        Exarchakos","url":"https://www.semanticscholar.org/author/40375569"},{"authorId":"38057896","name":"James
        Salter","url":"https://www.semanticscholar.org/author/38057896"},{"authorId":"1805514","name":"Nick
        Antonopoulos","url":"https://www.semanticscholar.org/author/1805514"}],"doi":null,"isInfluential":false,"paperId":"8eee0c7b488b50ffeee1b88065fea05609b75857","title":"Semantic
        Cooperation and Node Sharing Among P 2 P Networks","url":"https://www.semanticscholar.org/paper/8eee0c7b488b50ffeee1b88065fea05609b75857","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"2293563","name":"Matthew
        J. Rutherford","url":"https://www.semanticscholar.org/author/2293563"},{"authorId":"1807579","name":"Antonio
        Carzaniga","url":"https://www.semanticscholar.org/author/1807579"},{"authorId":"1724083","name":"Alexander
        L. Wolf","url":"https://www.semanticscholar.org/author/1724083"}],"doi":"10.1145/1181775.1181804","isInfluential":false,"paperId":"be099b54e58e9eb9810d46028e23437b370d12c3","title":"Simulation-based
        test adequacy criteria for distributed systems","url":"https://www.semanticscholar.org/paper/be099b54e58e9eb9810d46028e23437b370d12c3","venue":"SIGSOFT
        FSE","year":2006},{"arxivId":null,"authors":[{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"},{"authorId":"1748626","name":"Md.
        Faizul Bari","url":"https://www.semanticscholar.org/author/1748626"},{"authorId":"3318756","name":"Md.
        Rakibul Haque","url":"https://www.semanticscholar.org/author/3318756"},{"authorId":"1715494","name":"Raouf
        Boutaba","url":"https://www.semanticscholar.org/author/1715494"},{"authorId":"2050381","name":"Bertrand
        Mathieu","url":"https://www.semanticscholar.org/author/2050381"}],"doi":"10.1109/CNSM.2014.7014168","isInfluential":false,"paperId":"2385be1dcc1a6c9f960cb0f2db2619be0e0b3f58","title":"DEWS:
        A decentralized engine for Web search","url":"https://www.semanticscholar.org/paper/2385be1dcc1a6c9f960cb0f2db2619be0e0b3f58","venue":"10th
        International Conference on Network and Service Management (CNSM) and Workshop","year":2014},{"arxivId":null,"authors":[{"authorId":"1776746","name":"John
        Milton","url":"https://www.semanticscholar.org/author/1776746"},{"authorId":"49318719","name":"John
        Locke","url":"https://www.semanticscholar.org/author/49318719"},{"authorId":"47344276","name":"Daniel
        Defoe","url":"https://www.semanticscholar.org/author/47344276"},{"authorId":"47465581","name":"J.
        Rousseau","url":"https://www.semanticscholar.org/author/47465581"},{"authorId":"46177496","name":"Blaise
        Pascal","url":"https://www.semanticscholar.org/author/46177496"},{"authorId":"40556782","name":"Giovanni
        Casanova","url":"https://www.semanticscholar.org/author/40556782"},{"authorId":"12807096","name":"J
        Y Sartre","url":"https://www.semanticscholar.org/author/12807096"},{"authorId":"9150308","name":"Victor
        Hugo","url":"https://www.semanticscholar.org/author/9150308"},{"authorId":null,"name":"Honore
        de Balzac","url":null},{"authorId":"48155790","name":"A. Dumas","url":"https://www.semanticscholar.org/author/48155790"},{"authorId":null,"name":"Gustave
        Flaubert","url":null}],"doi":null,"isInfluential":false,"paperId":"726f03e75f8a830f514aac3c8b1c019f1ed4fe80","title":"Censorship
        Resistant Peer-to-Peer Networks Amos Fiat \u2217","url":"https://www.semanticscholar.org/paper/726f03e75f8a830f514aac3c8b1c019f1ed4fe80","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"47323219","name":"Raphael
        Y. de Camargo","url":"https://www.semanticscholar.org/author/47323219"},{"authorId":"1720007","name":"Fabio
        Kon","url":"https://www.semanticscholar.org/author/1720007"}],"doi":"10.1145/1169100.1169103","isInfluential":true,"paperId":"128c69723d96871be54b92c123ade7f6dff23523","title":"Distributed
        data storage for opportunistic grids","url":"https://www.semanticscholar.org/paper/128c69723d96871be54b92c123ade7f6dff23523","venue":"MDS
        ''06","year":2006},{"arxivId":null,"authors":[{"authorId":"2071250","name":"Lichun
        Li","url":"https://www.semanticscholar.org/author/2071250"},{"authorId":"1747536","name":"Yang
        Ji","url":"https://www.semanticscholar.org/author/1747536"},{"authorId":"47274513","name":"Tao
        Ma","url":"https://www.semanticscholar.org/author/47274513"},{"authorId":"2146575","name":"Lanzhi
        Gu","url":"https://www.semanticscholar.org/author/2146575"},{"authorId":"1792246","name":"Chunhong
        Zhang","url":"https://www.semanticscholar.org/author/1792246"}],"doi":"10.1109/ICPADS.2008.92","isInfluential":true,"paperId":"5552c34b0b02eff6a3e9790d78c0a150a3b87059","title":"Locality-Aware
        Peer-to-Peer SIP","url":"https://www.semanticscholar.org/paper/5552c34b0b02eff6a3e9790d78c0a150a3b87059","venue":"2008
        14th IEEE International Conference on Parallel and Distributed Systems","year":2008},{"arxivId":null,"authors":[{"authorId":"1746089","name":"Yaxiong
        Zhao","url":"https://www.semanticscholar.org/author/1746089"},{"authorId":"49388033","name":"Jie
        Wu","url":"https://www.semanticscholar.org/author/49388033"},{"authorId":"32051712","name":"Cong
        Liu","url":"https://www.semanticscholar.org/author/32051712"},{"authorId":"2057267","name":"Mingming
        Lu","url":"https://www.semanticscholar.org/author/2057267"}],"doi":"10.1109/WCNC.2013.6555348","isInfluential":true,"paperId":"0a025ce154e896d7fe07aca64067bdde32237b51","title":"A
        hierarchical naming system for scalable content distribution in large networks","url":"https://www.semanticscholar.org/paper/0a025ce154e896d7fe07aca64067bdde32237b51","venue":"2013
        IEEE Wireless Communications and Networking Conference (WCNC)","year":2013},{"arxivId":null,"authors":[{"authorId":"9406342","name":"Zhang
        Jianzhe","url":"https://www.semanticscholar.org/author/9406342"}],"doi":null,"isInfluential":false,"paperId":"dca145502964f5b2f6ea33632182e28d54036151","title":"Advanced
        routing algorithm based on Cycloid model for P2P network","url":"https://www.semanticscholar.org/paper/dca145502964f5b2f6ea33632182e28d54036151","venue":"2011
        IEEE 3rd International Conference on Communication Software and Networks","year":2011},{"arxivId":null,"authors":[{"authorId":"3201343","name":"George
        Tsatsanifos","url":"https://www.semanticscholar.org/author/3201343"},{"authorId":"1760642","name":"Dimitris
        Sacharidis","url":"https://www.semanticscholar.org/author/1760642"},{"authorId":"1692933","name":"Timos
        K. Sellis","url":"https://www.semanticscholar.org/author/1692933"}],"doi":"10.1007/978-3-642-22922-0_11","isInfluential":false,"paperId":"bce285bc35aac2d08f2a4d1ce494c4a93d643542","title":"MIDAS:
        Multi-attribute Indexing for Distributed Architecture Systems","url":"https://www.semanticscholar.org/paper/bce285bc35aac2d08f2a4d1ce494c4a93d643542","venue":"SSTD","year":2011},{"arxivId":null,"authors":[{"authorId":"1695073","name":"Ajoy
        Kumar Datta","url":"https://www.semanticscholar.org/author/1695073"},{"authorId":"2466392","name":"Maria
        Gradinariu Potop-Butucaru","url":"https://www.semanticscholar.org/author/2466392"},{"authorId":"2553735","name":"Antonino
        Virgillito","url":"https://www.semanticscholar.org/author/2553735"}],"doi":"10.1109/ISORC.2006.30","isInfluential":false,"paperId":"8d44bd347ee8cd2105be576bd842240023e7e2f6","title":"Deterministic
        delta-Connected Overlay for Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/8d44bd347ee8cd2105be576bd842240023e7e2f6","venue":"ISORC","year":2006},{"arxivId":null,"authors":[{"authorId":"14193845","name":"James
        J. Martin","url":"https://www.semanticscholar.org/author/14193845"},{"authorId":"1797882","name":"James
        Westall","url":"https://www.semanticscholar.org/author/1797882"}],"doi":"10.1109/BROADNETS.2007.4550464","isInfluential":false,"paperId":"2ecd151fe1c4705f2e95518787d9d011b69d9ee0","title":"Assessing
        the impact of BitTorrent on DOCSIS networks","url":"https://www.semanticscholar.org/paper/2ecd151fe1c4705f2e95518787d9d011b69d9ee0","venue":"2007
        Fourth International Conference on Broadband Communications, Networks and
        Systems (BROADNETS ''07)","year":2007},{"arxivId":null,"authors":[{"authorId":"2293563","name":"Matthew
        J. Rutherford","url":"https://www.semanticscholar.org/author/2293563"},{"authorId":"1807579","name":"Antonio
        Carzaniga","url":"https://www.semanticscholar.org/author/1807579"},{"authorId":"1724083","name":"Alexander
        L. Wolf","url":"https://www.semanticscholar.org/author/1724083"}],"doi":null,"isInfluential":false,"paperId":"31812129ab69bbeb324342a4d439225fc0f4520d","title":"Simulation-Based
        Testing of Distributed Systems","url":"https://www.semanticscholar.org/paper/31812129ab69bbeb324342a4d439225fc0f4520d","venue":"","year":2006},{"arxivId":"1608.00726","authors":[{"authorId":"1925421","name":"Dianne
        Foreback","url":"https://www.semanticscholar.org/author/1925421"},{"authorId":"1712607","name":"Mikhail
        Nesterenko","url":"https://www.semanticscholar.org/author/1712607"},{"authorId":"1707640","name":"S\u00e9bastien
        Tixeuil","url":"https://www.semanticscholar.org/author/1707640"}],"doi":null,"isInfluential":false,"paperId":"0bb0047e9d2ee704c0b5f763e8ef1b1ed491d00a","title":"Infinite
        Unlimited Churn","url":"https://www.semanticscholar.org/paper/0bb0047e9d2ee704c0b5f763e8ef1b1ed491d00a","venue":"ArXiv","year":2016},{"arxivId":null,"authors":[{"authorId":"1730832","name":"Ha\u00efdar
        Safa","url":"https://www.semanticscholar.org/author/1730832"},{"authorId":"1761623","name":"Wassim
        El-Hajj","url":"https://www.semanticscholar.org/author/1761623"},{"authorId":"1909624","name":"Marwa
        Moutaweh","url":"https://www.semanticscholar.org/author/1909624"}],"doi":"10.1109/AINA.2014.101","isInfluential":false,"paperId":"dc2f4a31ccbcda798ef7a7a43e13df26beee905a","title":"Trust
        Aware System for P2P Routing Protocols","url":"https://www.semanticscholar.org/paper/dc2f4a31ccbcda798ef7a7a43e13df26beee905a","venue":"2014
        IEEE 28th International Conference on Advanced Information Networking and
        Applications","year":2014},{"arxivId":null,"authors":[{"authorId":"2957303","name":"M.
        Parimala","url":"https://www.semanticscholar.org/author/2957303"},{"authorId":null,"name":"M.
        Jhansi","url":null},{"authorId":"32983968","name":"K. Swarupa Rani","url":"https://www.semanticscholar.org/author/32983968"}],"doi":null,"isInfluential":false,"paperId":"595f051c0acbbb0fcd8bc590d48e060a6a539fc3","title":"Churn
        Model review of Semantic Overlay Networks in P 2 P","url":"https://www.semanticscholar.org/paper/595f051c0acbbb0fcd8bc590d48e060a6a539fc3","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"1731715","name":"Olivier
        Beaumont","url":"https://www.semanticscholar.org/author/1731715"},{"authorId":"2173457","name":"Laurent
        Bobelin","url":"https://www.semanticscholar.org/author/2173457"},{"authorId":"1707417","name":"Henri
        Casanova","url":"https://www.semanticscholar.org/author/1707417"},{"authorId":"2915106","name":"Pierre-Nicolas
        Clauss","url":"https://www.semanticscholar.org/author/2915106"},{"authorId":"3285369","name":"Bruno
        Donassolo","url":"https://www.semanticscholar.org/author/3285369"},{"authorId":"2380259","name":"Lionel
        Eyraud-Dubois","url":"https://www.semanticscholar.org/author/2380259"},{"authorId":"1745492","name":"St\u00e9phane
        Genaud","url":"https://www.semanticscholar.org/author/1745492"},{"authorId":"1719340","name":"Sascha
        Hunold","url":"https://www.semanticscholar.org/author/1719340"},{"authorId":"1998583","name":"Arnaud
        Legrand","url":"https://www.semanticscholar.org/author/1998583"},{"authorId":"1756289","name":"Martin
        Quinson","url":"https://www.semanticscholar.org/author/1756289"},{"authorId":"50751733","name":"Cristian
        Rosa","url":"https://www.semanticscholar.org/author/50751733"},{"authorId":"3043413","name":"Lucas
        Mello Schnorr","url":"https://www.semanticscholar.org/author/3043413"},{"authorId":"2685728","name":"Mark
        Stillwell","url":"https://www.semanticscholar.org/author/2685728"},{"authorId":"35531371","name":"Fr\u00e9d\u00e9ric
        Suter","url":"https://www.semanticscholar.org/author/35531371"},{"authorId":"3042377","name":"Christophe
        Thiery","url":"https://www.semanticscholar.org/author/3042377"},{"authorId":"39336218","name":"Pedro
        Velho","url":"https://www.semanticscholar.org/author/39336218"},{"authorId":"1722027","name":"Jean-Marc
        Vincent","url":"https://www.semanticscholar.org/author/1722027"},{"authorId":"2682258","name":"Young
        J. Won","url":"https://www.semanticscholar.org/author/2682258"}],"doi":null,"isInfluential":false,"paperId":"0a84ec96ed3ebed0dda2406e05c835d3d327ef6a","title":"Towards
        Scalable , Accurate , and Usable Simulations of Distributed Applications and
        Systems","url":"https://www.semanticscholar.org/paper/0a84ec96ed3ebed0dda2406e05c835d3d327ef6a","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":null,"name":"G.
        Ilanchezhiapandian","url":null},{"authorId":"2528956","name":"S. Khader","url":"https://www.semanticscholar.org/author/2528956"}],"doi":null,"isInfluential":false,"paperId":"ae89a4fac3c484a915a4816156967f784cd7ab1e","title":"Design
        of DAODV MANET Routing Protocol","url":"https://www.semanticscholar.org/paper/ae89a4fac3c484a915a4816156967f784cd7ab1e","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"1903275","name":"Ming-Chen
        Chung","url":"https://www.semanticscholar.org/author/1903275"},{"authorId":"1701732","name":"Gyu
        Myoung Lee","url":"https://www.semanticscholar.org/author/1701732"},{"authorId":"1737867","name":"No\u00ebl
        Crespi","url":"https://www.semanticscholar.org/author/1737867"},{"authorId":"1910186","name":"Chien-Chao
        Tseng","url":"https://www.semanticscholar.org/author/1910186"}],"doi":"10.1109/GreenCom.2012.30","isInfluential":false,"paperId":"d1d2678f5be1bdaa13784c029d4ecb28c9b072e9","title":"RFID
        Object Tracking with IP Compatibility for the Internet of Things","url":"https://www.semanticscholar.org/paper/d1d2678f5be1bdaa13784c029d4ecb28c9b072e9","venue":"2012
        IEEE International Conference on Green Computing and Communications","year":2012},{"arxivId":null,"authors":[{"authorId":"2237748","name":"Samer
        Al-Kiswany","url":"https://www.semanticscholar.org/author/2237748"},{"authorId":"2806362","name":"Suli
        Yang","url":"https://www.semanticscholar.org/author/2806362"},{"authorId":"1743175","name":"Andrea
        C. Arpaci-Dusseau","url":"https://www.semanticscholar.org/author/1743175"},{"authorId":"1703415","name":"Remzi
        H. Arpaci-Dusseau","url":"https://www.semanticscholar.org/author/1703415"}],"doi":"10.1145/3078597.3078612","isInfluential":true,"paperId":"1138145ea2a489b67084b066b965629f5562b6d8","title":"NICE:
        Network-Integrated Cluster-Efficient Storage","url":"https://www.semanticscholar.org/paper/1138145ea2a489b67084b066b965629f5562b6d8","venue":"HPDC","year":2017},{"arxivId":null,"authors":[{"authorId":"1702217","name":"Dennis
        Geels","url":"https://www.semanticscholar.org/author/1702217"},{"authorId":"3182861","name":"Gautam
        Altekar","url":"https://www.semanticscholar.org/author/3182861"},{"authorId":"2286904","name":"Petros
        Maniatis","url":"https://www.semanticscholar.org/author/2286904"},{"authorId":"1734886","name":"Timothy
        Roscoe","url":"https://www.semanticscholar.org/author/1734886"},{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"}],"doi":null,"isInfluential":false,"paperId":"4a4b9bf1fd9d3dbeb3e0188e38c0f46fe85c376c","title":"Friday:
        Global Comprehension for Distributed Replay","url":"https://www.semanticscholar.org/paper/4a4b9bf1fd9d3dbeb3e0188e38c0f46fe85c376c","venue":"NSDI","year":2007},{"arxivId":null,"authors":[{"authorId":"40942386","name":"M.
        Singh","url":"https://www.semanticscholar.org/author/40942386"},{"authorId":"40070600","name":"Xiaochun
        Cheng","url":"https://www.semanticscholar.org/author/40070600"},{"authorId":"31874971","name":"Roman
        Belavkin","url":"https://www.semanticscholar.org/author/31874971"}],"doi":"10.1080/18756891.2013.856257","isInfluential":false,"paperId":"a1cbc86b83cc0193076fc8cb1bb0b6c118dbe40f","title":"Local
        Semantic Indexing for Resource Discovery on Overlay Network Using Mobile Agents","url":"https://www.semanticscholar.org/paper/a1cbc86b83cc0193076fc8cb1bb0b6c118dbe40f","venue":"Int.
        J. Comput. Intell. Syst.","year":2014},{"arxivId":null,"authors":[{"authorId":"2236867","name":"Chung-Wei
        Hang","url":"https://www.semanticscholar.org/author/2236867"}],"doi":null,"isInfluential":false,"paperId":"992b43d8eb2142d2c2247d91f2c41dc1471dddb2","title":"A
        Decentralized Multi-agent Service Lookup Mechanism : Cooperation and Communication
        without Center Agents in RoboCup Rescue","url":"https://www.semanticscholar.org/paper/992b43d8eb2142d2c2247d91f2c41dc1471dddb2","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"3122063","name":"Michael
        J. Freedman","url":"https://www.semanticscholar.org/author/3122063"}],"doi":null,"isInfluential":false,"paperId":"2f57f5aa940bd000c45e12431e258dc6d5de9acd","title":"Experiences
        with CoralCDN: A Five-Year Operational View","url":"https://www.semanticscholar.org/paper/2f57f5aa940bd000c45e12431e258dc6d5de9acd","venue":"NSDI","year":2010},{"arxivId":null,"authors":[{"authorId":"1756289","name":"Martin
        Quinson","url":"https://www.semanticscholar.org/author/1756289"},{"authorId":"31711731","name":"Cristian
        Daniel Rosa","url":"https://www.semanticscholar.org/author/31711731"},{"authorId":"3042377","name":"Christophe
        Thiery","url":"https://www.semanticscholar.org/author/3042377"}],"doi":"10.1109/CCGrid.2012.115","isInfluential":true,"paperId":"10318e01894b51d7efc25810812815725ec690ba","title":"Parallel
        Simulation of Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/10318e01894b51d7efc25810812815725ec690ba","venue":"2012
        12th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing
        (ccgrid 2012)","year":2012},{"arxivId":null,"authors":[{"authorId":"48369087","name":"Albert
        Yu","url":"https://www.semanticscholar.org/author/48369087"}],"doi":null,"isInfluential":false,"paperId":"f3221ec7074722e125fe9f0f12b5fee22a431254","title":"Algorithms
        for continuous queries: A geometric approach","url":"https://www.semanticscholar.org/paper/f3221ec7074722e125fe9f0f12b5fee22a431254","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"47113208","name":"Wei
        Li","url":"https://www.semanticscholar.org/author/47113208"},{"authorId":"8513698","name":"William
        Guo","url":"https://www.semanticscholar.org/author/8513698"},{"authorId":"3123263","name":"Eugenie
        Franzinelli","url":"https://www.semanticscholar.org/author/3123263"}],"doi":"10.1109/ICPPW.2015.34","isInfluential":false,"paperId":"ae1125051d88b5378d7e416f30a49e3bba55b14b","title":"Achieving
        Dynamic Workload Balancing for P2P Volunteer Computing","url":"https://www.semanticscholar.org/paper/ae1125051d88b5378d7e416f30a49e3bba55b14b","venue":"2015
        44th International Conference on Parallel Processing Workshops","year":2015},{"arxivId":null,"authors":[{"authorId":"47128213","name":"Shen
        Lin","url":"https://www.semanticscholar.org/author/47128213"},{"authorId":"2150557","name":"Fran\u00e7ois
        Ta\u00efani","url":"https://www.semanticscholar.org/author/2150557"},{"authorId":"1700173","name":"Gordon
        S. Blair","url":"https://www.semanticscholar.org/author/1700173"}],"doi":"10.1007/978-3-642-02164-0_1","isInfluential":true,"paperId":"5ce7e22ab7c232d46f0df01fb46b0997bf2fdafb","title":"Exploiting
        Synergies between Coexisting Overlays","url":"https://www.semanticscholar.org/paper/5ce7e22ab7c232d46f0df01fb46b0997bf2fdafb","venue":"DAIS","year":2009},{"arxivId":null,"authors":[{"authorId":"1762688","name":"Stephan
        Schosser","url":"https://www.semanticscholar.org/author/1762688"},{"authorId":"1750020","name":"Klemens
        B\u00f6hm","url":"https://www.semanticscholar.org/author/1750020"},{"authorId":"46646830","name":"Bodo
        Vogt","url":"https://www.semanticscholar.org/author/46646830"}],"doi":"10.1109/WIIAT.2008.9","isInfluential":true,"paperId":"189d115f48f053c886ddf95be1c7dce9c92f4a67","title":"Competition
        vs. Fairness \u2013 Analyzing Structured Networks by Means of User Experiments","url":"https://www.semanticscholar.org/paper/189d115f48f053c886ddf95be1c7dce9c92f4a67","venue":"2008
        IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent
        Agent Technology","year":2008},{"arxivId":null,"authors":[{"authorId":"51110311","name":"Christian
        Zimmer","url":"https://www.semanticscholar.org/author/51110311"}],"doi":null,"isInfluential":false,"paperId":"efae83f2c5f03d72e2d67c4c7538088af04488f8","title":"Approximate
        information filtering in structured peer-to-peer networks","url":"https://www.semanticscholar.org/paper/efae83f2c5f03d72e2d67c4c7538088af04488f8","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"1738725","name":"Haryadi
        S. Gunawi","url":"https://www.semanticscholar.org/author/1738725"},{"authorId":"1743175","name":"Andrea
        C. Arpaci-Dusseau","url":"https://www.semanticscholar.org/author/1743175"}],"doi":null,"isInfluential":true,"paperId":"56951329a78f56fe7371ea7242381f8f4e39adb0","title":"Towards
        Reliable Storage Systems","url":"https://www.semanticscholar.org/paper/56951329a78f56fe7371ea7242381f8f4e39adb0","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"39451763","name":"Bidyut
        Gupta","url":"https://www.semanticscholar.org/author/39451763"},{"authorId":"5607403","name":"Nick
        Rahimi","url":"https://www.semanticscholar.org/author/5607403"},{"authorId":"1795658","name":"Henry
        Hexmoor","url":"https://www.semanticscholar.org/author/1795658"},{"authorId":"51385178","name":"Koushik
        Maddali","url":"https://www.semanticscholar.org/author/51385178"}],"doi":null,"isInfluential":false,"paperId":"7e8517862a51d59e086039ae9e676a40c64af338","title":"Design
        of a New Hierarchical Structured Peer-to-Peer Network Based On Chinese Remainder
        Theorem","url":"https://www.semanticscholar.org/paper/7e8517862a51d59e086039ae9e676a40c64af338","venue":"","year":2018},{"arxivId":null,"authors":[{"authorId":"50172047","name":"Xu
        Wu","url":"https://www.semanticscholar.org/author/50172047"}],"doi":"10.1007/s12083-011-0103-9","isInfluential":true,"paperId":"10729bff002584d918623c120dd6bc81e1a35237","title":"A
        distributed trust management model for mobile P2P networks","url":"https://www.semanticscholar.org/paper/10729bff002584d918623c120dd6bc81e1a35237","venue":"Peer-to-Peer
        Networking and Applications","year":2012},{"arxivId":null,"authors":[{"authorId":"36294183","name":"Benjamin
        Schiller","url":"https://www.semanticscholar.org/author/36294183"},{"authorId":"1759908","name":"Stefanie
        Roos","url":"https://www.semanticscholar.org/author/1759908"},{"authorId":"1813247","name":"Andreas
        H\u00f6fer","url":"https://www.semanticscholar.org/author/1813247"},{"authorId":"1730027","name":"Thorsten
        Strufe","url":"https://www.semanticscholar.org/author/1730027"}],"doi":"10.1109/SRDSW.2011.19","isInfluential":false,"paperId":"d945ad6e8a7aa3c45ed242bca8bb72e5daec6ba4","title":"Attack
        Resistant Network Embeddings for Darknets","url":"https://www.semanticscholar.org/paper/d945ad6e8a7aa3c45ed242bca8bb72e5daec6ba4","venue":"2011
        IEEE 30th Symposium on Reliable Distributed Systems Workshops","year":2011},{"arxivId":null,"authors":[{"authorId":"34777450","name":"Spyros
        Voulgaris","url":"https://www.semanticscholar.org/author/34777450"},{"authorId":"2633361","name":"Etienne
        Rivi\u00e8re","url":"https://www.semanticscholar.org/author/2633361"},{"authorId":"1723331","name":"Anne-Marie
        Kermarrec","url":"https://www.semanticscholar.org/author/1723331"},{"authorId":"2571410","name":"Maarten
        van Steen","url":"https://www.semanticscholar.org/author/2571410"}],"doi":null,"isInfluential":false,"paperId":"47c1cc8bd86e6e8b94757fdd92edbd8424c9e4f0","title":"Sub-2-Sub:
        Self-Organizing Content-Based Publish Subscribe for Dynamic Large Scale Collaborative
        Networks","url":"https://www.semanticscholar.org/paper/47c1cc8bd86e6e8b94757fdd92edbd8424c9e4f0","venue":"IPTPS","year":2006},{"arxivId":null,"authors":[{"authorId":"21286142","name":"Yoshitaka
        Nakamura","url":"https://www.semanticscholar.org/author/21286142"},{"authorId":"1740195","name":"Hirozumi
        Yamaguchi","url":"https://www.semanticscholar.org/author/1740195"},{"authorId":"2732233","name":"Akihito
        Hiromori","url":"https://www.semanticscholar.org/author/2732233"},{"authorId":null,"name":"Keiichi
        Ya","url":null},{"authorId":"3168246","name":"Kenichi Taniguchi","url":"https://www.semanticscholar.org/author/3168246"},{"authorId":"1765230","name":"Keiichi
        Yasumoto","url":"https://www.semanticscholar.org/author/1765230"},{"authorId":"1692953","name":"Teruo
        Higashino","url":"https://www.semanticscholar.org/author/1692953"},{"authorId":"2556837","name":"Tomoya
        Kitani","url":"https://www.semanticscholar.org/author/2556837"},{"authorId":"1726979","name":"Akira
        Kimura","url":"https://www.semanticscholar.org/author/1726979"},{"authorId":"2505943","name":"Akio
        Nakata","url":"https://www.semanticscholar.org/author/2505943"}],"doi":null,"isInfluential":false,"paperId":"c993c9c3fb48fafb535da92b60cfa4a0aed44cd3","title":"List
        of Publications","url":"https://www.semanticscholar.org/paper/c993c9c3fb48fafb535da92b60cfa4a0aed44cd3","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"1733162","name":"Dingyi
        Han","url":"https://www.semanticscholar.org/author/1733162"},{"authorId":"48798960","name":"Ting
        Shen","url":"https://www.semanticscholar.org/author/48798960"},{"authorId":"35954160","name":"Shicong
        Meng","url":"https://www.semanticscholar.org/author/35954160"},{"authorId":"1811427","name":"Yong
        Yu","url":"https://www.semanticscholar.org/author/1811427"}],"doi":"10.1109/P2P.2006.14","isInfluential":true,"paperId":"a7336bdc6f71ba7d204addb3aa629d22a96f7010","title":"Cuckoo
        Ring: BalancingWorkload for Locality Sensitive Hash","url":"https://www.semanticscholar.org/paper/a7336bdc6f71ba7d204addb3aa629d22a96f7010","venue":"Sixth
        IEEE International Conference on Peer-to-Peer Computing (P2P''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"40228008","name":"Daniel
        L\u00e1zaro Iglesias","url":"https://www.semanticscholar.org/author/40228008"},{"authorId":"8022439","name":"Joan
        Manuel Marqu\u00e8s","url":"https://www.semanticscholar.org/author/8022439"},{"authorId":"1885413","name":"Josep
        Jorba","url":"https://www.semanticscholar.org/author/1885413"},{"authorId":"3307777","name":"Xavier
        Vilajosana","url":"https://www.semanticscholar.org/author/3307777"}],"doi":"10.1145/2501654.2501668","isInfluential":false,"paperId":"e74fb0267e2189e639caa845dfecb0685098219e","title":"Decentralized
        resource discovery mechanisms for distributed computing in peer-to-peer environments","url":"https://www.semanticscholar.org/paper/e74fb0267e2189e639caa845dfecb0685098219e","venue":"ACM
        Comput. Surv.","year":2013},{"arxivId":null,"authors":[{"authorId":"1970469","name":"Silvia
        Bonomi","url":"https://www.semanticscholar.org/author/1970469"}],"doi":null,"isInfluential":false,"paperId":"1f3f1c8da3fb6ccd7b7b4f4c54f0e183d9601e16","title":"Core-based
        Reconfiguration for Reliable Overlay Networks","url":"https://www.semanticscholar.org/paper/1f3f1c8da3fb6ccd7b7b4f4c54f0e183d9601e16","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"2181445","name":"H.
        M. N. Dilum Bandara","url":"https://www.semanticscholar.org/author/2181445"}],"doi":null,"isInfluential":false,"paperId":"5431a78ccd87c7517c0dec9aa7aff97a9c2eb2f0","title":"SYSTEMS
        USING RESOURCE AGGREGATION AND CACHING : A MULTI-ATTRIBUTE RESOURCE AND QUERY
        AWARE APPROACH Submitted","url":"https://www.semanticscholar.org/paper/5431a78ccd87c7517c0dec9aa7aff97a9c2eb2f0","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"1979600","name":"Kristj\u00e1n
        Valur J\u00f3nsson","url":"https://www.semanticscholar.org/author/1979600"}],"doi":null,"isInfluential":false,"paperId":"8d65084aff0d2b89395069ee0730083d1d142843","title":"The
        Security Properties of In-Network Aggregation","url":"https://www.semanticscholar.org/paper/8d65084aff0d2b89395069ee0730083d1d142843","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"49632148","name":"Warren
        Kenny","url":"https://www.semanticscholar.org/author/49632148"},{"authorId":"40563215","name":"Stefan
        Hagen Weber","url":"https://www.semanticscholar.org/author/40563215"}],"doi":"10.1145/1554233.1554245","isInfluential":false,"paperId":"d9391c68db545bab4e1db6af96d71094c654b0ad","title":"APSALAR:
        ad hoc protocol for service-aligned location aware routing","url":"https://www.semanticscholar.org/paper/d9391c68db545bab4e1db6af96d71094c654b0ad","venue":"CAMS
        ''09","year":2009},{"arxivId":null,"authors":[{"authorId":"3201343","name":"George
        Tsatsanifos","url":"https://www.semanticscholar.org/author/3201343"},{"authorId":"2815044","name":"Vasilis
        Samoladas","url":"https://www.semanticscholar.org/author/2815044"}],"doi":"10.1007/s00607-012-0199-7","isInfluential":false,"paperId":"84f3eacc1182f640b7ff3a3074cab5b771a3cf8d","title":"A
        novel robust on-line protocol for load-balancing in structured peer-to-peer
        systems","url":"https://www.semanticscholar.org/paper/84f3eacc1182f640b7ff3a3074cab5b771a3cf8d","venue":"Computing","year":2012},{"arxivId":null,"authors":[{"authorId":"2032583","name":"Zhenzhou
        Zhu","url":"https://www.semanticscholar.org/author/2032583"},{"authorId":"2000187","name":"Panos
        Kalnis","url":"https://www.semanticscholar.org/author/2000187"},{"authorId":"1794395","name":"Spiridon
        Bakiras","url":"https://www.semanticscholar.org/author/1794395"}],"doi":"10.1109/TPDS.2007.70732","isInfluential":false,"paperId":"49616f2eaa1910e9892f5cc163812a9a28e74b15","title":"DCMP:
        A Distributed Cycle Minimization Protocol for Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/49616f2eaa1910e9892f5cc163812a9a28e74b15","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2008},{"arxivId":null,"authors":[{"authorId":"1700297","name":"Yi
        Ma","url":"https://www.semanticscholar.org/author/1700297"},{"authorId":"1744084","name":"Guiran
        Chang","url":"https://www.semanticscholar.org/author/1744084"},{"authorId":"1747573","name":"Zhenhua
        Tan","url":"https://www.semanticscholar.org/author/1747573"},{"authorId":"39202184","name":"Xueyi
        Wang","url":"https://www.semanticscholar.org/author/39202184"}],"doi":null,"isInfluential":false,"paperId":"99ab761a107025b77ece61dcf04ad98b98663bfa","title":"A
        P2P Overlay Network Routing Algorithm Based on Hierarchy Agglomerative Clustering
        Topology","url":"https://www.semanticscholar.org/paper/99ab761a107025b77ece61dcf04ad98b98663bfa","venue":"2010
        Fourth International Conference on Genetic and Evolutionary Computing","year":2010},{"arxivId":null,"authors":[{"authorId":"46761645","name":"Vinod
        Muthusamy","url":"https://www.semanticscholar.org/author/46761645"},{"authorId":"1738552","name":"Hans-Arno
        Jacobsen","url":"https://www.semanticscholar.org/author/1738552"}],"doi":"10.1109/TNET.2013.2282159","isInfluential":false,"paperId":"03666eccab351b9d82f5d158d2e2275114b6d6ce","title":"Infrastructure-Free
        Content-Based Publish/Subscribe","url":"https://www.semanticscholar.org/paper/03666eccab351b9d82f5d158d2e2275114b6d6ce","venue":"IEEE/ACM
        Transactions on Networking","year":2014},{"arxivId":null,"authors":[{"authorId":"35234103","name":"Adrian
        Popescu","url":"https://www.semanticscholar.org/author/35234103"}],"doi":null,"isInfluential":false,"paperId":"2a98d728c538ba45098183847c8b2c6cfa1b2649","title":"Routing
        on Overlay Networks : Developments and Challenges","url":"https://www.semanticscholar.org/paper/2a98d728c538ba45098183847c8b2c6cfa1b2649","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"1761299","name":"Jan
        Seedorf","url":"https://www.semanticscholar.org/author/1761299"}],"doi":null,"isInfluential":false,"paperId":"bebe4d46867774f6ba46670548f9bd4c66b0ad24","title":"Using
        Cryptographically Generated SIP-URIs to Protect the Integrity of Content in
        P 2 PSIP Jan Seedorf Security in Distributed Systems ( SVS )","url":"https://www.semanticscholar.org/paper/bebe4d46867774f6ba46670548f9bd4c66b0ad24","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"47113208","name":"Wei
        Li","url":"https://www.semanticscholar.org/author/47113208"},{"authorId":"8513698","name":"William
        Guo","url":"https://www.semanticscholar.org/author/8513698"}],"doi":"10.1007/978-981-10-6385-5_14","isInfluential":false,"paperId":"eaf3f2871601a3b70e6dab14fa7ac77fdcd67512","title":"The
        Scalability of Volunteer Computing for MapReduce Big Data Applications","url":"https://www.semanticscholar.org/paper/eaf3f2871601a3b70e6dab14fa7ac77fdcd67512","venue":"ICPCSEE","year":2017},{"arxivId":null,"authors":[{"authorId":"2405554","name":"Dehui
        Liu","url":"https://www.semanticscholar.org/author/2405554"},{"authorId":"47590951","name":"Feng
        Chen","url":"https://www.semanticscholar.org/author/47590951"},{"authorId":"1743425","name":"Gang
        Yin","url":"https://www.semanticscholar.org/author/1743425"},{"authorId":"49528833","name":"HuaiMing
        Wang","url":"https://www.semanticscholar.org/author/49528833"},{"authorId":"2670473","name":"Peng
        Zou","url":"https://www.semanticscholar.org/author/2670473"}],"doi":null,"isInfluential":false,"paperId":"6a5d6cd56f96c61330ee239fcf0a0e731f73cbc3","title":"Maintain
        history information in DHT based P2P system under churn","url":"https://www.semanticscholar.org/paper/6a5d6cd56f96c61330ee239fcf0a0e731f73cbc3","venue":"2010
        2nd International Conference on Future Computer and Communication","year":2010},{"arxivId":null,"authors":[{"authorId":"39483700","name":"Vibhore
        Kumar","url":"https://www.semanticscholar.org/author/39483700"}],"doi":null,"isInfluential":false,"paperId":"866fac2e9e8af164cbdee5ff682a5094e2ab3a6a","title":"Enabling
        scalable self-management for enterprise-scale systems","url":"https://www.semanticscholar.org/paper/866fac2e9e8af164cbdee5ff682a5094e2ab3a6a","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"2431136","name":"Paul
        Grace","url":"https://www.semanticscholar.org/author/2431136"},{"authorId":"49030221","name":"Y\u00e9rom-David
        Bromberg","url":"https://www.semanticscholar.org/author/49030221"},{"authorId":"2367871","name":"Laurent
        R\u00e9veill\u00e8re","url":"https://www.semanticscholar.org/author/2367871"},{"authorId":"1700173","name":"Gordon
        S. Blair","url":"https://www.semanticscholar.org/author/1700173"}],"doi":"10.1007/978-3-642-35170-9_12","isInfluential":false,"paperId":"946d6782ff2dd22cfcb04bc9eb244bbe8e1b6974","title":"OverStar:
        An Open Approach to End-to-End Middleware Services in Systems of Systems","url":"https://www.semanticscholar.org/paper/946d6782ff2dd22cfcb04bc9eb244bbe8e1b6974","venue":"Middleware","year":2012},{"arxivId":null,"authors":[{"authorId":"48340129","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/48340129"},{"authorId":"48458409","name":"Ze
        Li","url":"https://www.semanticscholar.org/author/48458409"},{"authorId":"48064265","name":"Linlin
        Yang","url":"https://www.semanticscholar.org/author/48064265"}],"doi":"10.1145/1540373.1540382","isInfluential":true,"paperId":"1fa5c7a66cf8d160e170d81701e96f57f6e293fc","title":"A
        distributed cyber-based information distillation and control architecture
        for wireless healthcare systems","url":"https://www.semanticscholar.org/paper/1fa5c7a66cf8d160e170d81701e96f57f6e293fc","venue":"WiMD
        ''09","year":2009},{"arxivId":null,"authors":[{"authorId":"3316717","name":"Marko
        Obrovac","url":"https://www.semanticscholar.org/author/3316717"},{"authorId":"29776932","name":"C\u00e9dric
        Tedeschi","url":"https://www.semanticscholar.org/author/29776932"}],"doi":"10.1109/IPDPSW.2012.73","isInfluential":true,"paperId":"e1332870d111836350f53919ca6ce3e4cb9598a4","title":"When
        Distributed Hash Tables Meet Chemical Programming for Autonomic Computing","url":"https://www.semanticscholar.org/paper/e1332870d111836350f53919ca6ce3e4cb9598a4","venue":"2012
        IEEE 26th International Parallel and Distributed Processing Symposium Workshops
        & PhD Forum","year":2012},{"arxivId":null,"authors":[{"authorId":"1720736","name":"Hanna
        Kavalionak","url":"https://www.semanticscholar.org/author/1720736"},{"authorId":"1808595","name":"Emanuele
        Carlini","url":"https://www.semanticscholar.org/author/1808595"},{"authorId":"28053030","name":"Laura
        Ricci","url":"https://www.semanticscholar.org/author/28053030"},{"authorId":"1705316","name":"Alberto
        Montresor","url":"https://www.semanticscholar.org/author/1705316"},{"authorId":"1737279","name":"Massimo
        Coppola","url":"https://www.semanticscholar.org/author/1737279"}],"doi":"10.1007/s12083-013-0232-4","isInfluential":false,"paperId":"8ffe9150ce6308b884cb9247ddacc3a00eb648f5","title":"Integrating
        peer-to-peer and cloud computing for massively multiuser online games","url":"https://www.semanticscholar.org/paper/8ffe9150ce6308b884cb9247ddacc3a00eb648f5","venue":"Peer-to-Peer
        Networking and Applications","year":2015},{"arxivId":null,"authors":[{"authorId":"1687168","name":"Ahmed
        Sobeih","url":"https://www.semanticscholar.org/author/1687168"},{"authorId":"1713112","name":"William
        Yurcik","url":"https://www.semanticscholar.org/author/1713112"}],"doi":null,"isInfluential":false,"paperId":"4b7d39886470d2b3094d788e01c3984caa3bebfd","title":"A
        Survey of Ring-Building Network Protocols Suitable for Command and Control
        Group Communications","url":"https://www.semanticscholar.org/paper/4b7d39886470d2b3094d788e01c3984caa3bebfd","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"1806068","name":"Dipyaman
        Banerjee","url":"https://www.semanticscholar.org/author/1806068"},{"authorId":"2878693","name":"Sabyasachi
        Saha","url":"https://www.semanticscholar.org/author/2878693"},{"authorId":"1678868","name":"Sandip
        Sen","url":"https://www.semanticscholar.org/author/1678868"},{"authorId":"34787658","name":"Prithviraj
        Dasgupta","url":"https://www.semanticscholar.org/author/34787658"}],"doi":"10.1145/1082473.1082603","isInfluential":false,"paperId":"cc6d0a657311bc6cd5a2abe35945bb929ec62117","title":"Reciprocal
        resource sharing in P2P environments","url":"https://www.semanticscholar.org/paper/cc6d0a657311bc6cd5a2abe35945bb929ec62117","venue":"AAMAS","year":2005},{"arxivId":null,"authors":[{"authorId":"1684284","name":"Willem
        Fontijn","url":"https://www.semanticscholar.org/author/1684284"},{"authorId":"1687211","name":"Peter
        A. Boncz","url":"https://www.semanticscholar.org/author/1687211"}],"doi":"10.1109/PERCOMW.2004.1276932","isInfluential":true,"paperId":"014d53aa1795a4e229037afe328ae014e5e2c18f","title":"AmbientDB:
        P2P data management middleware for ambient intelligence","url":"https://www.semanticscholar.org/paper/014d53aa1795a4e229037afe328ae014e5e2c18f","venue":"IEEE
        Annual Conference on Pervasive Computing and Communications Workshops, 2004.
        Proceedings of the Second","year":2004},{"arxivId":null,"authors":[{"authorId":"21704229","name":"Roberto
        Quilez","url":"https://www.semanticscholar.org/author/21704229"},{"authorId":"1801854","name":"Nathalie
        Mitton","url":"https://www.semanticscholar.org/author/1801854"},{"authorId":"2132320","name":"Marcelo
        Dias de Amorim","url":"https://www.semanticscholar.org/author/2132320"},{"authorId":"2396606","name":"Nicolas
        Pauvre","url":"https://www.semanticscholar.org/author/2396606"}],"doi":"10.1109/WCNCW.2012.6215481","isInfluential":true,"paperId":"6cd48ecdb955ed26ae777e518e4f70492283181d","title":"Prototyping
        a multi-root ONS","url":"https://www.semanticscholar.org/paper/6cd48ecdb955ed26ae777e518e4f70492283181d","venue":"2012
        IEEE Wireless Communications and Networking Conference Workshops (WCNCW)","year":2012},{"arxivId":null,"authors":[{"authorId":"3192072","name":"Abd
        Al-Basset Al-Mamou","url":"https://www.semanticscholar.org/author/3192072"},{"authorId":"1724389","name":"Houda
        Labiod","url":"https://www.semanticscholar.org/author/1724389"}],"doi":"10.1109/IPC.2007.109","isInfluential":false,"paperId":"8a82225d733ed2fb1c1ff0e06150f6e281654f3c","title":"ScatterPastry:
        An Overlay Routing Using a DHT over Wireless Sensor Networks","url":"https://www.semanticscholar.org/paper/8a82225d733ed2fb1c1ff0e06150f6e281654f3c","venue":"The
        2007 International Conference on Intelligent Pervasive Computing (IPC 2007)","year":2007},{"arxivId":null,"authors":[{"authorId":"2118221","name":"Imre
        Kel\u00e9nyi","url":"https://www.semanticscholar.org/author/2118221"},{"authorId":"1898204","name":"J.K.
        Nurminen","url":"https://www.semanticscholar.org/author/1898204"}],"doi":null,"isInfluential":false,"paperId":"7e1f9a37c8bebb5e002f85c7a8f8a7573e9c5ded","title":"Optimizing
        Energy Consumption of Mobile Nodes in Heterogeneous Kademlia-Based Distributed
        Hash Tables","url":"https://www.semanticscholar.org/paper/7e1f9a37c8bebb5e002f85c7a8f8a7573e9c5ded","venue":"2008
        The Second International Conference on Next Generation Mobile Applications,
        Services, and Technologies","year":2008},{"arxivId":null,"authors":[{"authorId":"1904204","name":"V.
        Mani","url":"https://www.semanticscholar.org/author/1904204"},{"authorId":null,"name":"S.
        Gowsika","url":null}],"doi":null,"isInfluential":false,"paperId":"b95e8a84510fee56db077b5a503986016b44da6d","title":"Survey
        on Cost Effective Replication in Locality Aware Interest Cluster Peer to Peer
        File Sharing System","url":"https://www.semanticscholar.org/paper/b95e8a84510fee56db077b5a503986016b44da6d","venue":"","year":2017},{"arxivId":"1404.7688","authors":[{"authorId":"8267407","name":"Matteo
        Dell''Amico","url":"https://www.semanticscholar.org/author/8267407"},{"authorId":"3138895","name":"Maurizio
        Filippone","url":"https://www.semanticscholar.org/author/3138895"},{"authorId":"1715270","name":"Pietro
        Michiardi","url":"https://www.semanticscholar.org/author/1715270"},{"authorId":"1790707","name":"Yves
        Roudier","url":"https://www.semanticscholar.org/author/1790707"}],"doi":"10.1109/TNET.2014.2321430","isInfluential":true,"paperId":"0b2edf0b06c9ab8372b22a748ce7b7ba5dc5a91d","title":"On
        User Availability Prediction and Network Applications","url":"https://www.semanticscholar.org/paper/0b2edf0b06c9ab8372b22a748ce7b7ba5dc5a91d","venue":"IEEE/ACM
        Transactions on Networking","year":2015},{"arxivId":null,"authors":[{"authorId":"31890678","name":"Guido
        Marchetto","url":"https://www.semanticscholar.org/author/31890678"},{"authorId":"1861193","name":"Luigi
        Ciminiera","url":"https://www.semanticscholar.org/author/1861193"},{"authorId":"3261889","name":"Marco
        Papa Manzillo","url":"https://www.semanticscholar.org/author/3261889"},{"authorId":"1711093","name":"Fulvio
        Risso","url":"https://www.semanticscholar.org/author/1711093"},{"authorId":"2690170","name":"Livio
        Torrero","url":"https://www.semanticscholar.org/author/2690170"}],"doi":"10.1109/TNSM.2011.012111.00013","isInfluential":false,"paperId":"49c5ebff6be126f2124eaf8e19145b1c2d6f0e31","title":"Locating
        Equivalent Servants over P2P Networks","url":"https://www.semanticscholar.org/paper/49c5ebff6be126f2124eaf8e19145b1c2d6f0e31","venue":"IEEE
        Transactions on Network and Service Management","year":2011},{"arxivId":null,"authors":[{"authorId":"9112618","name":"Jochen
        Haemmerle","url":"https://www.semanticscholar.org/author/9112618"}],"doi":null,"isInfluential":false,"paperId":"7375dbd76410d86acaf92f484ab1162c87c3fc20","title":"WSRF
        im Ad Hoc Grid -Literature Review-","url":"https://www.semanticscholar.org/paper/7375dbd76410d86acaf92f484ab1162c87c3fc20","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"1792246","name":"Chunhong
        Zhang","url":"https://www.semanticscholar.org/author/1792246"},{"authorId":"9226642","name":"Juwei
        Shi","url":"https://www.semanticscholar.org/author/9226642"},{"authorId":"26508198","name":"Lichun
        Li","url":"https://www.semanticscholar.org/author/26508198"},{"authorId":"2413528","name":"Wenjie
        Lin","url":"https://www.semanticscholar.org/author/2413528"},{"authorId":"35973146","name":"Yao
        Wang","url":"https://www.semanticscholar.org/author/35973146"},{"authorId":"2146575","name":"Lanzhi
        Gu","url":"https://www.semanticscholar.org/author/2146575"},{"authorId":"1747536","name":"Yang
        Ji","url":"https://www.semanticscholar.org/author/1747536"},{"authorId":"1683334","name":"Zhiyong
        Feng","url":"https://www.semanticscholar.org/author/1683334"}],"doi":null,"isInfluential":true,"paperId":"cc9faf5c5121423854875c284d13a43e124ae0e4","title":"Signaling
        Latency Analysis of Peer-to-Peer SIP Systems","url":"https://www.semanticscholar.org/paper/cc9faf5c5121423854875c284d13a43e124ae0e4","venue":"2008
        5th IEEE Consumer Communications and Networking Conference","year":2008},{"arxivId":null,"authors":[{"authorId":"1682407","name":"Katja
        Hose","url":"https://www.semanticscholar.org/author/1682407"},{"authorId":"1727566","name":"Ralf
        Schenkel","url":"https://www.semanticscholar.org/author/1727566"},{"authorId":"39105129","name":"Martin
        Theobald","url":"https://www.semanticscholar.org/author/39105129"},{"authorId":"1751591","name":"Gerhard
        Weikum","url":"https://www.semanticscholar.org/author/1751591"}],"doi":"10.1007/978-3-642-23032-5_4","isInfluential":false,"paperId":"8a954e977c63da5f0823b3559e8ff7156e402e76","title":"Database
        Foundations for Scalable RDF Processing","url":"https://www.semanticscholar.org/paper/8a954e977c63da5f0823b3559e8ff7156e402e76","venue":"Reasoning
        Web","year":2011},{"arxivId":null,"authors":[{"authorId":"1681450","name":"Hung-Chang
        Hsiao","url":"https://www.semanticscholar.org/author/1681450"},{"authorId":"3346277","name":"Hsueh-Yi
        Chung","url":"https://www.semanticscholar.org/author/3346277"},{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"2831286","name":"Yu-Chang
        Chao","url":"https://www.semanticscholar.org/author/2831286"}],"doi":"10.1109/TPDS.2012.196","isInfluential":true,"paperId":"90f437bc382915c072cc0f2e7145336630fdadb8","title":"Load
        Rebalancing for Distributed File Systems in Clouds","url":"https://www.semanticscholar.org/paper/90f437bc382915c072cc0f2e7145336630fdadb8","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2013},{"arxivId":null,"authors":[{"authorId":"2767486","name":"Christos
        Tsiaras","url":"https://www.semanticscholar.org/author/2767486"},{"authorId":"2299311","name":"Martin
        Waldburger","url":"https://www.semanticscholar.org/author/2299311"},{"authorId":"4333908","name":"Guilherme
        Sperb Machado","url":"https://www.semanticscholar.org/author/4333908"},{"authorId":"1732576","name":"Andrei
        Vancea","url":"https://www.semanticscholar.org/author/1732576"},{"authorId":"9304846","name":"Burkhard
        Stiller","url":"https://www.semanticscholar.org/author/9304846"}],"doi":"10.1007/978-3-642-32808-4_14","isInfluential":false,"paperId":"2088ece97740cc57894b7a9abf481c271b686c81","title":"The
        Design of a Single Funding Point Charging Architecture","url":"https://www.semanticscholar.org/paper/2088ece97740cc57894b7a9abf481c271b686c81","venue":"EUNICE","year":2012},{"arxivId":null,"authors":[{"authorId":"40473701","name":"Matthias
        Scheidegger","url":"https://www.semanticscholar.org/author/40473701"},{"authorId":"1680089","name":"Torsten
        Braun","url":"https://www.semanticscholar.org/author/1680089"},{"authorId":"1873083","name":"Florian
        Baumgartner","url":"https://www.semanticscholar.org/author/1873083"}],"doi":"10.1109/ICC.2006.254778","isInfluential":false,"paperId":"8fd3acc64da67e694b529750e71c27af4e7e5828","title":"Endpoint
        Cluster Identification for End-to-End Distance Estimation","url":"https://www.semanticscholar.org/paper/8fd3acc64da67e694b529750e71c27af4e7e5828","venue":"2006
        IEEE International Conference on Communications","year":2006},{"arxivId":null,"authors":[{"authorId":"2505105","name":"Spencer
        Sevilla","url":"https://www.semanticscholar.org/author/2505105"},{"authorId":"1691287","name":"Priya
        Mahadevan","url":"https://www.semanticscholar.org/author/1691287"},{"authorId":"1691680","name":"J.
        J. Garcia-Luna-Aceves","url":"https://www.semanticscholar.org/author/1691680"}],"doi":"10.1016/j.comcom.2014.09.005","isInfluential":true,"paperId":"09fcccb1ab72ed766ec1b4202afc52df0be6c1d8","title":"FERN:
        A unifying framework for name resolution across heterogeneous architectures","url":"https://www.semanticscholar.org/paper/09fcccb1ab72ed766ec1b4202afc52df0be6c1d8","venue":"2013
        IFIP Networking Conference","year":2013},{"arxivId":null,"authors":[{"authorId":"2135218","name":"Kimihiro
        Mizutani","url":"https://www.semanticscholar.org/author/2135218"},{"authorId":"32505307","name":"Toru
        Mano","url":"https://www.semanticscholar.org/author/32505307"},{"authorId":"2230780","name":"Osamu
        Akashi","url":"https://www.semanticscholar.org/author/2230780"},{"authorId":"1682572","name":"Kensuke
        Fukuda","url":"https://www.semanticscholar.org/author/1682572"}],"doi":"10.1109/GLOCOM.2012.6503524","isInfluential":false,"paperId":"e29974e8a06ee8b1c8ad8b099ec2c17eefa6f06a","title":"Efficient
        query bundling mechanism in a DHT network","url":"https://www.semanticscholar.org/paper/e29974e8a06ee8b1c8ad8b099ec2c17eefa6f06a","venue":"2012
        IEEE Global Communications Conference (GLOBECOM)","year":2012},{"arxivId":null,"authors":[{"authorId":"2416282","name":"Emmanuelle
        Anceaume","url":"https://www.semanticscholar.org/author/2416282"},{"authorId":"1701175","name":"Yann
        Busnel","url":"https://www.semanticscholar.org/author/1701175"},{"authorId":"1973150","name":"Paul
        Lajoie-Mazenc","url":"https://www.semanticscholar.org/author/1973150"},{"authorId":"2292661","name":"G\u00e9raldine
        Texier","url":"https://www.semanticscholar.org/author/2292661"}],"doi":"10.1109/NCA.2015.19","isInfluential":false,"paperId":"9afb482544ef8991e5120871862c7e216c3f2f53","title":"Reputation
        for Inter-Domain QoS Routing","url":"https://www.semanticscholar.org/paper/9afb482544ef8991e5120871862c7e216c3f2f53","venue":"2015
        IEEE 14th International Symposium on Network Computing and Applications","year":2015},{"arxivId":null,"authors":[{"authorId":"2555685","name":"Bogdan
        Nicolae","url":"https://www.semanticscholar.org/author/2555685"},{"authorId":"1779139","name":"Gabriel
        Antoniu","url":"https://www.semanticscholar.org/author/1779139"},{"authorId":"1718313","name":"Luc
        Boug\u00e9","url":"https://www.semanticscholar.org/author/1718313"},{"authorId":"1745585","name":"Diana
        Moise","url":"https://www.semanticscholar.org/author/1745585"},{"authorId":"2573681","name":"Alexandra
        Carpen-Amarie","url":"https://www.semanticscholar.org/author/2573681"}],"doi":"10.1016/j.jpdc.2010.08.004","isInfluential":false,"paperId":"75e3b00fe158ffced55b3dcf299907ff811120ab","title":"BlobSeer:
        Next-generation data management for large scale infrastructures","url":"https://www.semanticscholar.org/paper/75e3b00fe158ffced55b3dcf299907ff811120ab","venue":"J.
        Parallel Distrib. Comput.","year":2011},{"arxivId":null,"authors":[{"authorId":"1761299","name":"Jan
        Seedorf","url":"https://www.semanticscholar.org/author/1761299"},{"authorId":"2093388","name":"Frank
        Ruwolt","url":"https://www.semanticscholar.org/author/2093388"},{"authorId":"2149292","name":"Martin
        Stiemerling","url":"https://www.semanticscholar.org/author/2149292"},{"authorId":"1751472","name":"Saverio
        Niccolini","url":"https://www.semanticscholar.org/author/1751472"}],"doi":"10.1109/GLOCOM.2008.ECP.422","isInfluential":true,"paperId":"0661ec4de6141549b30d966255cfb5709a1c08de","title":"Evaluating
        P2PSIP under Attack: An Emulative Study","url":"https://www.semanticscholar.org/paper/0661ec4de6141549b30d966255cfb5709a1c08de","venue":"IEEE
        GLOBECOM 2008 - 2008 IEEE Global Telecommunications Conference","year":2008},{"arxivId":null,"authors":[{"authorId":null,"name":"Griffin
        Potrock","url":null}],"doi":null,"isInfluential":false,"paperId":"8d11538e865707246206e289289b1f82b5daeef3","title":"An
        Internet-Spanning Content Distribution Mechanism for IoT by","url":"https://www.semanticscholar.org/paper/8d11538e865707246206e289289b1f82b5daeef3","venue":"","year":2018},{"arxivId":null,"authors":[{"authorId":"1908053","name":"Zupeng
        Li","url":"https://www.semanticscholar.org/author/1908053"},{"authorId":"2299667","name":"Xiaochuan
        Yin","url":"https://www.semanticscholar.org/author/2299667"},{"authorId":"3042571","name":"Peiyang
        Yao","url":"https://www.semanticscholar.org/author/3042571"},{"authorId":"3037028","name":"Jinnan
        Huang","url":"https://www.semanticscholar.org/author/3037028"}],"doi":"10.1109/IMSCCS.2006.233","isInfluential":false,"paperId":"803dcaec71c457785ca996fbaf30a778ee27958e","title":"Implementation
        of P2P Computing in Design of MANET Routing Protocol","url":"https://www.semanticscholar.org/paper/803dcaec71c457785ca996fbaf30a778ee27958e","venue":"First
        International Multi-Symposiums on Computer and Computational Sciences (IMSCCS''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"1691519","name":"Dario
        Rossi","url":"https://www.semanticscholar.org/author/1691519"},{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"}],"doi":"10.1109/GLOCOM.2005.1577763","isInfluential":false,"paperId":"4a7e12b1663db77b0f9e5f01d2d593936d42f4e3","title":"Gambling
        heuristic on a chord ring","url":"https://www.semanticscholar.org/paper/4a7e12b1663db77b0f9e5f01d2d593936d42f4e3","venue":"GLOBECOM
        ''05. IEEE Global Telecommunications Conference, 2005.","year":2005},{"arxivId":null,"authors":[{"authorId":"1762470","name":"Ailixier
        Aikebaier","url":"https://www.semanticscholar.org/author/1762470"},{"authorId":"1731202","name":"Valbona
        Barolli","url":"https://www.semanticscholar.org/author/1731202"},{"authorId":"1686798","name":"Tomoya
        Enokido","url":"https://www.semanticscholar.org/author/1686798"},{"authorId":"1682893","name":"Makoto
        Takizawa","url":"https://www.semanticscholar.org/author/1682893"}],"doi":"10.1109/ICDCSW.2009.85","isInfluential":false,"paperId":"03cac880c8680f8c60920d9a8a956b14b5c75b45","title":"Trustworthy
        Cooperation among Peers","url":"https://www.semanticscholar.org/paper/03cac880c8680f8c60920d9a8a956b14b5c75b45","venue":"2009
        29th IEEE International Conference on Distributed Computing Systems Workshops","year":2009},{"arxivId":null,"authors":[{"authorId":"1722366","name":"Rajiv
        Ranjan","url":"https://www.semanticscholar.org/author/1722366"},{"authorId":"1678182","name":"Aaron
        Harwood","url":"https://www.semanticscholar.org/author/1678182"},{"authorId":"1709598","name":"Rajkumar
        Buyya","url":"https://www.semanticscholar.org/author/1709598"}],"doi":null,"isInfluential":false,"paperId":"e23c848c9ff36504fcd11bf9f565b9e7fddd004a","title":"A
        Study on Peer-to-Peer Based Discovery of Grid Resource Information","url":"https://www.semanticscholar.org/paper/e23c848c9ff36504fcd11bf9f565b9e7fddd004a","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"2330486","name":"Zhonghong
        Ou","url":"https://www.semanticscholar.org/author/2330486"},{"authorId":"1709431","name":"Jiehan
        Zhou","url":"https://www.semanticscholar.org/author/1709431"},{"authorId":"2533670","name":"Erkki
        Harjula","url":"https://www.semanticscholar.org/author/2533670"},{"authorId":"1727678","name":"Mika
        Ylianttila","url":"https://www.semanticscholar.org/author/1727678"}],"doi":null,"isInfluential":false,"paperId":"19446b05777785eba02325b071d566414e30a0f4","title":"Truncated
        Pyramid Peer-to-Peer Architecture with Vertical Tunneling Model","url":"https://www.semanticscholar.org/paper/19446b05777785eba02325b071d566414e30a0f4","venue":"2009
        6th IEEE Consumer Communications and Networking Conference","year":2009},{"arxivId":"1605.02619","authors":[{"authorId":"2041244","name":"Daniel
        R. Figueiredo","url":"https://www.semanticscholar.org/author/2041244"},{"authorId":"1729729","name":"Michele
        Garetto","url":"https://www.semanticscholar.org/author/1729729"}],"doi":"10.1109/TNSE.2016.2618063","isInfluential":false,"paperId":"26ab31c880c07eb39a49d86a0d93a4f71c0e41ac","title":"On
        the Emergence of Shortest Paths by Reinforced Random Walks","url":"https://www.semanticscholar.org/paper/26ab31c880c07eb39a49d86a0d93a4f71c0e41ac","venue":"IEEE
        Transactions on Network Science and Engineering","year":2017},{"arxivId":null,"authors":[{"authorId":"2132320","name":"Marcelo
        Dias de Amorim","url":"https://www.semanticscholar.org/author/2132320"}],"doi":null,"isInfluential":false,"paperId":"42587eb2a7155a637bad8492b77392ddcb09f311","title":"Mobile
        multi-hop wireless networks : Conceptual and practical concerns","url":"https://www.semanticscholar.org/paper/42587eb2a7155a637bad8492b77392ddcb09f311","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"1688606","name":"Olaf
        G\u00f6rlitz","url":"https://www.semanticscholar.org/author/1688606"},{"authorId":"1704989","name":"Sergej
        Sizov","url":"https://www.semanticscholar.org/author/1704989"},{"authorId":"1752093","name":"Steffen
        Staab","url":"https://www.semanticscholar.org/author/1752093"}],"doi":"10.1007/978-3-540-68234-9_63","isInfluential":false,"paperId":"155a9866c705527c9145882dc8e431147225131e","title":"Tagster
        - Tagging-Based Distributed Content Sharing","url":"https://www.semanticscholar.org/paper/155a9866c705527c9145882dc8e431147225131e","venue":"ESWC","year":2008},{"arxivId":null,"authors":[{"authorId":"50066620","name":"Andrew
        Ka Ho Leung","url":"https://www.semanticscholar.org/author/50066620"},{"authorId":"1741539","name":"Yu-Kwong
        Kwok","url":"https://www.semanticscholar.org/author/1741539"}],"doi":"10.1007/11599463_98","isInfluential":false,"paperId":"bcb4727c0d30af2c934ae2bc48f3dabede978960","title":"An
        Efficient and Practical Greedy Algorithm for Server-Peer Selection in Wireless
        Peer-to-Peer File Sharing Networks","url":"https://www.semanticscholar.org/paper/bcb4727c0d30af2c934ae2bc48f3dabede978960","venue":"MSN","year":2005},{"arxivId":"1610.01140","authors":[{"authorId":"1696196","name":"Pamela
        Zave","url":"https://www.semanticscholar.org/author/1696196"}],"doi":"10.1109/TSE.2017.2655056","isInfluential":true,"paperId":"b6f6e9b461dacc714a702346ae2bd0787586156d","title":"Reasoning
        About Identifier Spaces: How to Make Chord Correct","url":"https://www.semanticscholar.org/paper/b6f6e9b461dacc714a702346ae2bd0787586156d","venue":"IEEE
        Transactions on Software Engineering","year":2017},{"arxivId":null,"authors":[{"authorId":"2399720","name":"Takehiro
        Miyao","url":"https://www.semanticscholar.org/author/2399720"},{"authorId":"2014515","name":"Hiroya
        Nagao","url":"https://www.semanticscholar.org/author/2014515"},{"authorId":"1856020","name":"Kazuyuki
        Shudo","url":"https://www.semanticscholar.org/author/1856020"}],"doi":"10.1109/ISCC.2014.6912614","isInfluential":false,"paperId":"a5e2a2286152631985c9447905c29f7b3ed5015a","title":"A
        structured overlay for non-uniform node identifier distribution based on flexible
        routing tables","url":"https://www.semanticscholar.org/paper/a5e2a2286152631985c9447905c29f7b3ed5015a","venue":"2014
        IEEE Symposium on Computers and Communications (ISCC)","year":2014},{"arxivId":null,"authors":[{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"}],"doi":null,"isInfluential":true,"paperId":"4e28fb99203ca6108b13051c1a0cc1e14e26fef6","title":"Efficient
        and Flexible Search in Large Scale Distributed Systems","url":"https://www.semanticscholar.org/paper/4e28fb99203ca6108b13051c1a0cc1e14e26fef6","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"9179557","name":"Ch.
        Mounika","url":"https://www.semanticscholar.org/author/9179557"},{"authorId":null,"name":"L.
        RamaDevi","url":null},{"authorId":"3873787","name":"Pappinissery K Nikhila","url":"https://www.semanticscholar.org/author/3873787"}],"doi":null,"isInfluential":false,"paperId":"4badc6e7819b07dccb407a460ff6d286af411dbe","title":"Simple
        Load Rebalancing For Distributed Hash Tables In Cloud","url":"https://www.semanticscholar.org/paper/4badc6e7819b07dccb407a460ff6d286af411dbe","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":null,"name":"Chaitanya
        Vinay Hazarey","url":null}],"doi":null,"isInfluential":false,"paperId":"f8086c8c73714961a20ea923be4d274936b4dcd0","title":"Unlearning
        the Traditional File Systems Model , Applying Peer to Peer Techniques for
        Information Management","url":"https://www.semanticscholar.org/paper/f8086c8c73714961a20ea923be4d274936b4dcd0","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"1746089","name":"Yaxiong
        Zhao","url":"https://www.semanticscholar.org/author/1746089"},{"authorId":"49388033","name":"Jie
        Wu","url":"https://www.semanticscholar.org/author/49388033"}],"doi":"10.1016/j.jpdc.2012.12.014","isInfluential":true,"paperId":"c4a687d0980f1cee0c5c7f500a7ca896f436350b","title":"Building
        a reliable and high-performance content-based publish/subscribe system","url":"https://www.semanticscholar.org/paper/c4a687d0980f1cee0c5c7f500a7ca896f436350b","venue":"J.
        Parallel Distrib. Comput.","year":2013},{"arxivId":null,"authors":[{"authorId":"39076756","name":"Gang
        Chen","url":"https://www.semanticscholar.org/author/39076756"},{"authorId":"2753282","name":"Hoang
        Tam Vo","url":"https://www.semanticscholar.org/author/2753282"},{"authorId":"1765710","name":"Sai
        Wu","url":"https://www.semanticscholar.org/author/1765710"},{"authorId":"1693070","name":"Beng
        Chin Ooi","url":"https://www.semanticscholar.org/author/1693070"},{"authorId":"1705151","name":"M.
        Tamer \u00d6zsu","url":"https://www.semanticscholar.org/author/1705151"}],"doi":null,"isInfluential":true,"paperId":"5aa0a09206fd047e74435b83bbf324b1ea17b86c","title":"A
        Framework for Supporting DBMS-like Indexes in the Cloud","url":"https://www.semanticscholar.org/paper/5aa0a09206fd047e74435b83bbf324b1ea17b86c","venue":"PVLDB","year":2011},{"arxivId":null,"authors":[{"authorId":"1806039","name":"Jenq-Shiou
        Leu","url":"https://www.semanticscholar.org/author/1806039"},{"authorId":"1810267","name":"Cheng-Wei
        Tsai","url":"https://www.semanticscholar.org/author/1810267"},{"authorId":"2367366","name":"Wei-Hsiang
        Lin","url":"https://www.semanticscholar.org/author/2367366"}],"doi":"10.1016/j.comnet.2010.10.014","isInfluential":false,"paperId":"b0f4482debcaff4234302602a0d0de62337420d3","title":"Resource
        searching in an unstructured P2P network based on Cloning Random Walker assisted
        by Dominating Set","url":"https://www.semanticscholar.org/paper/b0f4482debcaff4234302602a0d0de62337420d3","venue":"Computer
        Networks","year":2011},{"arxivId":null,"authors":[{"authorId":"4693097","name":"Cuong
        Pham","url":"https://www.semanticscholar.org/author/4693097"},{"authorId":"47190894","name":"Feng
        Zhang","url":"https://www.semanticscholar.org/author/47190894"},{"authorId":"1740390","name":"Duc
        A. Tran","url":"https://www.semanticscholar.org/author/1740390"}],"doi":"10.1109/ICCCN.2011.6006016","isInfluential":true,"paperId":"22d93ae056b1a216590f7b5a8c817264a8af9e50","title":"Maintenance-Efficient
        Erasure Coding for Distributed Archival Storage","url":"https://www.semanticscholar.org/paper/22d93ae056b1a216590f7b5a8c817264a8af9e50","venue":"2011
        Proceedings of 20th International Conference on Computer Communications and
        Networks (ICCCN)","year":2011},{"arxivId":null,"authors":[{"authorId":"3235066","name":"Quang
        Le-Dang","url":"https://www.semanticscholar.org/author/3235066"},{"authorId":"3334823","name":"Jennifer
        McManis","url":"https://www.semanticscholar.org/author/3334823"},{"authorId":"1742225","name":"Gabriel-Miro
        Muntean","url":"https://www.semanticscholar.org/author/1742225"}],"doi":"10.1109/BMSB.2013.6621732","isInfluential":false,"paperId":"b42101ad2488db1fdce820a9b88f907187f5e5b0","title":"User
        location-aware video delivery over Wireless Mesh Networks","url":"https://www.semanticscholar.org/paper/b42101ad2488db1fdce820a9b88f907187f5e5b0","venue":"2013
        IEEE International Symposium on Broadband Multimedia Systems and Broadcasting
        (BMSB)","year":2013},{"arxivId":null,"authors":[{"authorId":"2600662","name":"Feiyu
        Lin","url":"https://www.semanticscholar.org/author/2600662"},{"authorId":"2560399","name":"Christopher
        Henricsson","url":"https://www.semanticscholar.org/author/2560399"},{"authorId":"2524941","name":"Syed
        Muhammad Abbas","url":"https://www.semanticscholar.org/author/2524941"},{"authorId":"1694534","name":"Kurt
        Sandkuhl","url":"https://www.semanticscholar.org/author/1694534"}],"doi":"10.1109/CSE.2009.247","isInfluential":false,"paperId":"43f52753e823dc22d5ac5e39b13022ef408a09f7","title":"HyperCircle:
        An Efficient Broadcast Protocol for Super-Peer P2P Networks","url":"https://www.semanticscholar.org/paper/43f52753e823dc22d5ac5e39b13022ef408a09f7","venue":"2009
        International Conference on Computational Science and Engineering","year":2009},{"arxivId":null,"authors":[{"authorId":null,"name":"Shaik
        Nagoor Meeravali","url":null},{"authorId":"30808569","name":"Ravuri Daniel","url":"https://www.semanticscholar.org/author/30808569"},{"authorId":null,"name":"CH.
        Srinivasa Reddy","url":null}],"doi":null,"isInfluential":false,"paperId":"c0646180344fa21e674d55d410834ef097e7d330","title":"Design
        and Implementation of Performance Guaranteed Symmetric Load Balancing Algorithm","url":"https://www.semanticscholar.org/paper/c0646180344fa21e674d55d410834ef097e7d330","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1705508","name":"Gennaro
        Cordasco","url":"https://www.semanticscholar.org/author/1705508"},{"authorId":"40571580","name":"Alberto
        Negro","url":"https://www.semanticscholar.org/author/40571580"},{"authorId":"47194599","name":"Alessandra
        Sala","url":"https://www.semanticscholar.org/author/47194599"},{"authorId":"1786473","name":"Vittorio
        Scarano","url":"https://www.semanticscholar.org/author/1786473"}],"doi":"10.1109/IPDPS.2007.370659","isInfluential":false,"paperId":"0d5d0ce1bd914d349a63b8af1e0c6aec74a85987","title":"PON:
        Exploiting Proximity on Overlay Networks","url":"https://www.semanticscholar.org/paper/0d5d0ce1bd914d349a63b8af1e0c6aec74a85987","venue":"2007
        IEEE International Parallel and Distributed Processing Symposium","year":2007},{"arxivId":null,"authors":[{"authorId":"16273568","name":"James
        Leifer","url":"https://www.semanticscholar.org/author/16273568"},{"authorId":"1712829","name":"Uwe
        Nestmann","url":"https://www.semanticscholar.org/author/1712829"},{"authorId":"3118128","name":"Andrei
        Serjantov","url":"https://www.semanticscholar.org/author/3118128"},{"authorId":"2995861","name":"Keith
        Wansbrough","url":"https://www.semanticscholar.org/author/2995861"}],"doi":null,"isInfluential":false,"paperId":"77998f9415c523a1b4345398a6bbbcdcd3f79131","title":"Required
        foundations for peer-to-peer systems","url":"https://www.semanticscholar.org/paper/77998f9415c523a1b4345398a6bbbcdcd3f79131","venue":"","year":2003},{"arxivId":null,"authors":[{"authorId":"1765710","name":"Sai
        Wu","url":"https://www.semanticscholar.org/author/1765710"},{"authorId":"39483700","name":"Vibhore
        Kumar","url":"https://www.semanticscholar.org/author/39483700"},{"authorId":"9082182","name":"Kun-Lung
        Wu","url":"https://www.semanticscholar.org/author/9082182"},{"authorId":"1693070","name":"Beng
        Chin Ooi","url":"https://www.semanticscholar.org/author/1693070"}],"doi":"10.1145/2335484.2335515","isInfluential":false,"paperId":"86e930997d6cfb656d4afe45615d5fef53414e99","title":"Parallelizing
        stateful operators in a distributed stream processing system: how, should
        you and how much?","url":"https://www.semanticscholar.org/paper/86e930997d6cfb656d4afe45615d5fef53414e99","venue":"DEBS","year":2012},{"arxivId":null,"authors":[{"authorId":"2247076","name":"Jarno
        Rajahalme","url":"https://www.semanticscholar.org/author/2247076"},{"authorId":"3252958","name":"Mikko
        S\u00e4rel\u00e4","url":"https://www.semanticscholar.org/author/3252958"},{"authorId":"2695924","name":"Kari
        Visala","url":"https://www.semanticscholar.org/author/2695924"},{"authorId":"1799336","name":"Janne
        Riihij\u00e4rvi","url":"https://www.semanticscholar.org/author/1799336"}],"doi":"10.1016/j.comnet.2010.12.014","isInfluential":true,"paperId":"f8d1d4ca89053ff2a400215d9f20874415b16dd8","title":"On
        name-based inter-domain routing","url":"https://www.semanticscholar.org/paper/f8d1d4ca89053ff2a400215d9f20874415b16dd8","venue":"Computer
        Networks","year":2011},{"arxivId":null,"authors":[{"authorId":"2766794","name":"Tomoya
        Kawakami","url":"https://www.semanticscholar.org/author/2766794"},{"authorId":"2761997","name":"Yoshimasa
        Ishi","url":"https://www.semanticscholar.org/author/2761997"},{"authorId":"2261468","name":"Tomoki
        Yoshihisa","url":"https://www.semanticscholar.org/author/2261468"},{"authorId":"39550577","name":"Yuuichi
        Teranishi","url":"https://www.semanticscholar.org/author/39550577"}],"doi":null,"isInfluential":true,"paperId":"6c9a33ac400f7baaf5b5ba9a6208b89cec02e6e4","title":"A
        Churn Resilience Technique on P2P Sensor Data Stream Delivery System Using
        Distributed Hashing","url":"https://www.semanticscholar.org/paper/6c9a33ac400f7baaf5b5ba9a6208b89cec02e6e4","venue":"Informatica","year":2015},{"arxivId":null,"authors":[{"authorId":"15988049","name":"Michael
        K Gibson","url":"https://www.semanticscholar.org/author/15988049"},{"authorId":"7963794","name":"Wamberto
        Weber Vasconcelos","url":"https://www.semanticscholar.org/author/7963794"}],"doi":"10.1016/j.procs.2015.05.106","isInfluential":false,"paperId":"3096e2dd1d2e9ac5f28c85a4fe7f45528715bfc0","title":"Effects
        of Knowledge Base Quality on Peer-to-peer Information Propagation","url":"https://www.semanticscholar.org/paper/3096e2dd1d2e9ac5f28c85a4fe7f45528715bfc0","venue":"ANT/SEIT","year":2015},{"arxivId":null,"authors":[{"authorId":"37906023","name":"Shou-Chih
        Lo","url":"https://www.semanticscholar.org/author/37906023"},{"authorId":"7409690","name":"Yi-Ting
        Chiu","url":"https://www.semanticscholar.org/author/7409690"}],"doi":"10.1093/ietisy/e91-d.5.1504","isInfluential":true,"paperId":"29401fd9939427cd70086935f998b7dcb2716630","title":"Design
        of Content-Based Publish/Subscribe Systems over Structured Overlay Networks","url":"https://www.semanticscholar.org/paper/29401fd9939427cd70086935f998b7dcb2716630","venue":"IEICE
        Transactions","year":2008},{"arxivId":null,"authors":[{"authorId":"1782301","name":"Risto
        Honkanen","url":"https://www.semanticscholar.org/author/1782301"},{"authorId":"31797373","name":"Juha-Pekka
        Liimatainen","url":"https://www.semanticscholar.org/author/31797373"}],"doi":"10.1007/978-3-540-75444-2_51","isInfluential":false,"paperId":"372b194d50379595ff824067ac7a1ed7e19d314b","title":"Systolic
        Routing in an Optical Ring with Logarithmic Shortcuts","url":"https://www.semanticscholar.org/paper/372b194d50379595ff824067ac7a1ed7e19d314b","venue":"HPCC","year":2007},{"arxivId":null,"authors":[{"authorId":"1740390","name":"Duc
        A. Tran","url":"https://www.semanticscholar.org/author/1740390"},{"authorId":"4693097","name":"Cuong
        Pham","url":"https://www.semanticscholar.org/author/4693097"}],"doi":"10.1016/j.comnet.2010.02.003","isInfluential":false,"paperId":"7937e5de11fcd4f1975fe5f8fb46f554f0f42300","title":"Enabling
        content-based publish/subscribe services in cooperative P2P networks","url":"https://www.semanticscholar.org/paper/7937e5de11fcd4f1975fe5f8fb46f554f0f42300","venue":"Computer
        Networks","year":2010},{"arxivId":null,"authors":[{"authorId":"1687168","name":"Ahmed
        Sobeih","url":"https://www.semanticscholar.org/author/1687168"},{"authorId":"1713112","name":"William
        Yurcik","url":"https://www.semanticscholar.org/author/1713112"},{"authorId":"1704715","name":"Jennifer
        C. Hou","url":"https://www.semanticscholar.org/author/1704715"}],"doi":null,"isInfluential":false,"paperId":"430534dd16bbebd0bb3da71007ae94835719266e","title":"VRing
        : A Ring-based Application-Layer Multicast Protocol","url":"https://www.semanticscholar.org/paper/430534dd16bbebd0bb3da71007ae94835719266e","venue":"","year":2004},{"arxivId":null,"authors":[],"doi":null,"isInfluential":true,"paperId":"7baaa30226934860b25e10903f3bcd321b9d017d","title":"Octopus
        : Anonymous and Secure DHT Lookup","url":"https://www.semanticscholar.org/paper/7baaa30226934860b25e10903f3bcd321b9d017d","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"2173367","name":"Indrajit
        Bhattacharya","url":"https://www.semanticscholar.org/author/2173367"},{"authorId":"2908244","name":"Srinivas
        R. Kashyap","url":"https://www.semanticscholar.org/author/2908244"},{"authorId":"37759044","name":"Srinivasan
        Parthasarathy","url":"https://www.semanticscholar.org/author/37759044"}],"doi":"10.1109/ICDCS.2005.74","isInfluential":true,"paperId":"40071dd796d69bc91df45f4cf23e0d51afb81b14","title":"Similarity
        Searching in Peer-to-Peer Databases","url":"https://www.semanticscholar.org/paper/40071dd796d69bc91df45f4cf23e0d51afb81b14","venue":"25th
        IEEE International Conference on Distributed Computing Systems (ICDCS''05)","year":2005},{"arxivId":null,"authors":[{"authorId":"2925953","name":"Moustafa
        AbdelBaky","url":"https://www.semanticscholar.org/author/2925953"},{"authorId":"5981431","name":"Hyunjoo
        Kim","url":"https://www.semanticscholar.org/author/5981431"},{"authorId":"1709070","name":"Ivan
        Rodero","url":"https://www.semanticscholar.org/author/1709070"},{"authorId":"1750983","name":"Manish
        Parashar","url":"https://www.semanticscholar.org/author/1750983"}],"doi":"10.1109/CLOUD.2012.150","isInfluential":false,"paperId":"a6eedff94ddc9aae0f932bee4c3d6454eaa386a5","title":"Accelerating
        MapReduce Analytics Using CometCloud","url":"https://www.semanticscholar.org/paper/a6eedff94ddc9aae0f932bee4c3d6454eaa386a5","venue":"2012
        IEEE Fifth International Conference on Cloud Computing","year":2012},{"arxivId":null,"authors":[{"authorId":"50369627","name":"Deric
        Lima","url":"https://www.semanticscholar.org/author/50369627"},{"authorId":"2972852","name":"Breno
        Moura","url":"https://www.semanticscholar.org/author/2972852"},{"authorId":"2806536","name":"Gabriel
        S. S. de Oliveira","url":"https://www.semanticscholar.org/author/2806536"},{"authorId":"1789311","name":"Edward
        de Oliveira Ribeiro","url":"https://www.semanticscholar.org/author/1789311"},{"authorId":"1805284","name":"Alet\u00e9ia
        Patr\u00edcia Favacho de Ara\u00fajo","url":"https://www.semanticscholar.org/author/1805284"},{"authorId":"1714727","name":"Maristela
        Holanda","url":"https://www.semanticscholar.org/author/1714727"},{"authorId":"2309430","name":"Roberto
        C. Togawa","url":"https://www.semanticscholar.org/author/2309430"},{"authorId":"37132172","name":"Maria
        Emilia Telles Walter","url":"https://www.semanticscholar.org/author/37132172"}],"doi":"10.1109/CCGrid.2014.102","isInfluential":false,"paperId":"7fc778f5ff9f0b188c7d78e6a221e406dfb3b7eb","title":"A
        Storage Policy for a Hybrid Federated Cloud platform: A Case Study for Bioinformatics","url":"https://www.semanticscholar.org/paper/7fc778f5ff9f0b188c7d78e6a221e406dfb3b7eb","venue":"2014
        14th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing","year":2014},{"arxivId":null,"authors":[{"authorId":"1808595","name":"Emanuele
        Carlini","url":"https://www.semanticscholar.org/author/1808595"},{"authorId":"1737279","name":"Massimo
        Coppola","url":"https://www.semanticscholar.org/author/1737279"},{"authorId":"28053030","name":"Laura
        Ricci","url":"https://www.semanticscholar.org/author/28053030"}],"doi":"10.1109/NETGAMES.2010.5679660","isInfluential":true,"paperId":"02a4bf97033cb67708e3a3102ac096a042c2b7a4","title":"Integration
        of P2P and Clouds to support Massively Multiuser Virtual Environments","url":"https://www.semanticscholar.org/paper/02a4bf97033cb67708e3a3102ac096a042c2b7a4","venue":"2010
        9th Annual Workshop on Network and Systems Support for Games","year":2010},{"arxivId":null,"authors":[{"authorId":"46487390","name":"Amit
        Banerjee","url":"https://www.semanticscholar.org/author/46487390"},{"authorId":"1718490","name":"Chung-Ta
        King","url":"https://www.semanticscholar.org/author/1718490"}],"doi":"10.1109/MOBHOC.2006.278567","isInfluential":false,"paperId":"d2ef52f4a68c6f95214266e798dd10a9bf83f091","title":"Building
        Ring-Like Overlays on Wireless Ad Hoc and Sensor Networks","url":"https://www.semanticscholar.org/paper/d2ef52f4a68c6f95214266e798dd10a9bf83f091","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2006},{"arxivId":null,"authors":[{"authorId":"41129181","name":"Y.
        Mohamadi Begum","url":"https://www.semanticscholar.org/author/41129181"},{"authorId":"1685983","name":"M.
        A. Maluk Mohamed","url":"https://www.semanticscholar.org/author/1685983"}],"doi":null,"isInfluential":false,"paperId":"8820489efb821421a8a94edf595c70697d0fba7b","title":"Handling
        Disconnections in LTE Network-based Mobile Grid","url":"https://www.semanticscholar.org/paper/8820489efb821421a8a94edf595c70697d0fba7b","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"1683444","name":"Lubos
        Matl","url":"https://www.semanticscholar.org/author/1683444"},{"authorId":"31447119","name":"Tom\u00e1s
        Cern\u00fd","url":"https://www.semanticscholar.org/author/31447119"},{"authorId":"1682740","name":"Michael
        J. Donahoo","url":"https://www.semanticscholar.org/author/1682740"}],"doi":"10.1145/2695664.2695903","isInfluential":false,"paperId":"f8888b2d8f0bf8461b420d329eca6be7ef007b92","title":"Effective
        manycast messaging for Kademlia network","url":"https://www.semanticscholar.org/paper/f8888b2d8f0bf8461b420d329eca6be7ef007b92","venue":"SAC","year":2015},{"arxivId":null,"authors":[{"authorId":"49343425","name":"Ke
        Xu","url":"https://www.semanticscholar.org/author/49343425"},{"authorId":"1701530","name":"Meina
        Song","url":"https://www.semanticscholar.org/author/1701530"},{"authorId":"1804427","name":"Junde
        Song","url":"https://www.semanticscholar.org/author/1804427"}],"doi":"10.1007/s10586-009-0112-0","isInfluential":true,"paperId":"7eb52b4b9a9380de7636e59503cab68583f22ad2","title":"An
        improved P2P lookup protocol model","url":"https://www.semanticscholar.org/paper/7eb52b4b9a9380de7636e59503cab68583f22ad2","venue":"Cluster
        Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"1920780","name":"Karthik
        Lakshminarayanan","url":"https://www.semanticscholar.org/author/1920780"},{"authorId":"39157636","name":"Daniel
        Adkins","url":"https://www.semanticscholar.org/author/39157636"},{"authorId":"1688974","name":"Adrian
        Perrig","url":"https://www.semanticscholar.org/author/1688974"},{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"}],"doi":"10.1145/1399562.1399567","isInfluential":false,"paperId":"43ad41a53aea320b6acba1d02900adafea81cce6","title":"Securing
        User-Controlled Routing Infrastructures","url":"https://www.semanticscholar.org/paper/43ad41a53aea320b6acba1d02900adafea81cce6","venue":"IEEE/ACM
        Transactions on Networking","year":2008},{"arxivId":null,"authors":[{"authorId":"46514285","name":"A.
        Datta","url":"https://www.semanticscholar.org/author/46514285"}],"doi":null,"isInfluential":false,"paperId":"36f08be0d098e5d5f0d05cbb2b2a5dc1e2b6ce28","title":"SoJa:
        Collaborative reference management using a decentralized social information
        system","url":"https://www.semanticscholar.org/paper/36f08be0d098e5d5f0d05cbb2b2a5dc1e2b6ce28","venue":"6th
        International Conference on Collaborative Computing: Networking, Applications
        and Worksharing (CollaborateCom 2010)","year":2010},{"arxivId":null,"authors":[{"authorId":"2293563","name":"Matthew
        J. Rutherford","url":"https://www.semanticscholar.org/author/2293563"},{"authorId":"1807579","name":"Antonio
        Carzaniga","url":"https://www.semanticscholar.org/author/1807579"},{"authorId":"1724083","name":"Alexander
        L. Wolf","url":"https://www.semanticscholar.org/author/1724083"}],"doi":null,"isInfluential":false,"paperId":"f9108e2bb7e5b78f1b4cb145efb0d8c63bfe7373","title":"Winter
        1-1-2006 Simulation-Based Testing of Distributed Systems ; CU-CS-1004-06","url":"https://www.semanticscholar.org/paper/f9108e2bb7e5b78f1b4cb145efb0d8c63bfe7373","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"1680273","name":"Kai
        Hwang","url":"https://www.semanticscholar.org/author/1680273"}],"doi":"10.1109/TC.2011.62","isInfluential":true,"paperId":"5fd5fff586384755faa42c75e6f8ae7397f6c333","title":"Locality-Preserving
        Clustering and Discovery of Resources in Wide-Area Distributed Computational
        Grids","url":"https://www.semanticscholar.org/paper/5fd5fff586384755faa42c75e6f8ae7397f6c333","venue":"IEEE
        Transactions on Computers","year":2012},{"arxivId":null,"authors":[{"authorId":"2532380","name":"Abdul
        Khalique Shaikh","url":"https://www.semanticscholar.org/author/2532380"},{"authorId":"2107088","name":"Saadat
        M. Alhashmi","url":"https://www.semanticscholar.org/author/2107088"},{"authorId":"3243800","name":"Rajendran
        Parthiban","url":"https://www.semanticscholar.org/author/3243800"}],"doi":"10.1142/S0219649216500209","isInfluential":true,"paperId":"c5d69299950b270bd71435ffa82c49ce0bde9f37","title":"A
        Proximity and Semantic-Aware Optimisation Model for Sub-Domain-Based Decentralised
        Resource Discovery in Grid Computing","url":"https://www.semanticscholar.org/paper/c5d69299950b270bd71435ffa82c49ce0bde9f37","venue":"JIKM","year":2016},{"arxivId":null,"authors":[{"authorId":"2051050","name":"Victor
        Kardeby","url":"https://www.semanticscholar.org/author/2051050"},{"authorId":"2038175","name":"Ulf
        Jennehag","url":"https://www.semanticscholar.org/author/2038175"},{"authorId":"1717389","name":"Mikael
        Gidlund","url":"https://www.semanticscholar.org/author/1717389"}],"doi":"10.4304/jnw.10.7.420-430","isInfluential":true,"paperId":"a6293a7b7e8b3f60df57e229cb68aa842f772af5","title":"Overlay
        Enhanced Mobility for the Internet of Things","url":"https://www.semanticscholar.org/paper/a6293a7b7e8b3f60df57e229cb68aa842f772af5","venue":"JNW","year":2015},{"arxivId":null,"authors":[{"authorId":"2231347","name":"Kwangwook
        Shin","url":"https://www.semanticscholar.org/author/2231347"},{"authorId":"1918078","name":"Seunghak
        Lee","url":"https://www.semanticscholar.org/author/1918078"},{"authorId":"3025390","name":"Geunhwi
        Lim","url":"https://www.semanticscholar.org/author/3025390"},{"authorId":"1710056","name":"Hyunsoo
        Yoon","url":"https://www.semanticscholar.org/author/1710056"}],"doi":"10.1093/ietcom/e90-b.7.1651","isInfluential":false,"paperId":"5646c74d166136133242123eaa834e4d8dadabdc","title":"A
        Proximity-Based Self-Organizing Hierarchical Overlay Framework for Distributed
        Hash Tables","url":"https://www.semanticscholar.org/paper/5646c74d166136133242123eaa834e4d8dadabdc","venue":"IEICE
        Transactions","year":2007},{"arxivId":null,"authors":[{"authorId":null,"name":"Muhamed
        Sukkar","url":null}],"doi":null,"isInfluential":false,"paperId":"e29783aff9a76893308bc7d7dcd1b8456ff50e99","title":"Design
        and Implementation of a Service Discovery and Recommendation Architecture","url":"https://www.semanticscholar.org/paper/e29783aff9a76893308bc7d7dcd1b8456ff50e99","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"1710888","name":"Runfang
        Zhou","url":"https://www.semanticscholar.org/author/1710888"},{"authorId":"1680273","name":"Kai
        Hwang","url":"https://www.semanticscholar.org/author/1680273"}],"doi":null,"isInfluential":false,"paperId":"414f8c5073691ce236b9286b2852a30e446c7862","title":"Trust-Preserving
        Overlays for Fast Reputation Aggregation in Peer-to-Peer Grid Systems \u2217","url":"https://www.semanticscholar.org/paper/414f8c5073691ce236b9286b2852a30e446c7862","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"49410899","name":"Nan
        Zhang","url":"https://www.semanticscholar.org/author/49410899"}],"doi":null,"isInfluential":false,"paperId":"6b437e9f36cd6cc782619f25c193d33d6a09ee50","title":"Techno-economic
        analysis of Internet content delivery","url":"https://www.semanticscholar.org/paper/6b437e9f36cd6cc782619f25c193d33d6a09ee50","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"34626969","name":"Anwitaman
        Datta","url":"https://www.semanticscholar.org/author/34626969"},{"authorId":"1700254","name":"Sonja
        Buchegger","url":"https://www.semanticscholar.org/author/1700254"},{"authorId":"2008193","name":"Le-Hung
        Vu","url":"https://www.semanticscholar.org/author/2008193"},{"authorId":"1730027","name":"Thorsten
        Strufe","url":"https://www.semanticscholar.org/author/1730027"},{"authorId":"1780581","name":"Krzysztof
        Rzadca","url":"https://www.semanticscholar.org/author/1780581"}],"doi":"10.1007/978-1-4419-7142-5_17","isInfluential":false,"paperId":"0473653964be4ea1a68313f38d80ff9a62849186","title":"Decentralized
        Online Social Networks","url":"https://www.semanticscholar.org/paper/0473653964be4ea1a68313f38d80ff9a62849186","venue":"Handbook
        of Social Network Technologies","year":2010},{"arxivId":null,"authors":[{"authorId":"2209975","name":"Claudio
        Gennaro","url":"https://www.semanticscholar.org/author/2209975"},{"authorId":"1715724","name":"Matteo
        Mordacchini","url":"https://www.semanticscholar.org/author/1715724"},{"authorId":"1702082","name":"Salvatore
        Orlando","url":"https://www.semanticscholar.org/author/1702082"},{"authorId":"3187322","name":"Fausto
        Rabitti","url":"https://www.semanticscholar.org/author/3187322"}],"doi":null,"isInfluential":false,"paperId":"d28db283c6fe1b33368a41148879553b440a3213","title":"A
        Scalable Distributed Data Structure for Multi-Feature Similarity Search","url":"https://www.semanticscholar.org/paper/d28db283c6fe1b33368a41148879553b440a3213","venue":"SEBD","year":2008},{"arxivId":null,"authors":[{"authorId":null,"name":"QIU
        Tong-Qing","url":null},{"authorId":"46218286","name":"Chen Gui-hai","url":"https://www.semanticscholar.org/author/46218286"}],"doi":null,"isInfluential":false,"paperId":"9800eda9176115e94611791277327c1a71336519","title":"A
        Generic Approach to Making P 2 P Overlay Network Topology-Aware","url":"https://www.semanticscholar.org/paper/9800eda9176115e94611791277327c1a71336519","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"2370755","name":"Atsushi
        Takeda","url":"https://www.semanticscholar.org/author/2370755"},{"authorId":"34412776","name":"Takuma
        Oide","url":"https://www.semanticscholar.org/author/34412776"},{"authorId":"1691389","name":"Akiko
        Takahashi","url":"https://www.semanticscholar.org/author/1691389"},{"authorId":"1702816","name":"Takuo
        Suganuma","url":"https://www.semanticscholar.org/author/1702816"}],"doi":"10.1109/BWCCA.2014.94","isInfluential":false,"paperId":"a4e0f1f233891d7984a7077e1462d704687363f2","title":"Scalable
        and Accurate Data Aggregation Mechanism on Structured P2P Network","url":"https://www.semanticscholar.org/paper/a4e0f1f233891d7984a7077e1462d704687363f2","venue":"2014
        Ninth International Conference on Broadband and Wireless Computing, Communication
        and Applications","year":2014},{"arxivId":null,"authors":[{"authorId":"1685160","name":"Carmela
        Comito","url":"https://www.semanticscholar.org/author/1685160"},{"authorId":"1746249","name":"Simon
        Patarin","url":"https://www.semanticscholar.org/author/1746249"},{"authorId":"1760683","name":"Domenico
        Talia","url":"https://www.semanticscholar.org/author/1760683"}],"doi":"10.1109/ISCC.2006.19","isInfluential":true,"paperId":"bb2303c93a329f77d00b0769f91685c05e97a757","title":"A
        Semantic Overlay Network for P2P Schema-Based Data Integration","url":"https://www.semanticscholar.org/paper/bb2303c93a329f77d00b0769f91685c05e97a757","venue":"11th
        IEEE Symposium on Computers and Communications (ISCC''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"3338871","name":"Qiyan
        Wang","url":"https://www.semanticscholar.org/author/3338871"},{"authorId":"2030711","name":"Prateek
        Mittal","url":"https://www.semanticscholar.org/author/2030711"},{"authorId":"1681179","name":"Nikita
        Borisov","url":"https://www.semanticscholar.org/author/1681179"}],"doi":"10.1145/1866307.1866343","isInfluential":true,"paperId":"45ed102636fbe93f646bd31f58828bb0206214a5","title":"In
        search of an anonymous and secure lookup: attacks on structured peer-to-peer
        anonymous communication systems","url":"https://www.semanticscholar.org/paper/45ed102636fbe93f646bd31f58828bb0206214a5","venue":"ACM
        Conference on Computer and Communications Security","year":2010},{"arxivId":null,"authors":[{"authorId":"40053584","name":"Hao
        Liu","url":"https://www.semanticscholar.org/author/40053584"},{"authorId":"9277729","name":"Lian-Ming
        Zhang","url":"https://www.semanticscholar.org/author/9277729"},{"authorId":"1682373","name":"Bing
        Zeng","url":"https://www.semanticscholar.org/author/1682373"}],"doi":null,"isInfluential":true,"paperId":"f01dc38569392b3cc3108977f0e0cde1e509c879","title":"GroupNET:
        A Novel P2P Grouping Network Based on Cayley Graph","url":"https://www.semanticscholar.org/paper/f01dc38569392b3cc3108977f0e0cde1e509c879","venue":"2009
        Asia-Pacific Conference on Information Processing","year":2009},{"arxivId":null,"authors":[{"authorId":"30315161","name":"Murali
        Krishna Ramanathan","url":"https://www.semanticscholar.org/author/30315161"},{"authorId":"40238585","name":"Ronaldo
        A. Ferreira","url":"https://www.semanticscholar.org/author/40238585"},{"authorId":"1691677","name":"Suresh
        Jagannathan","url":"https://www.semanticscholar.org/author/1691677"},{"authorId":"1732163","name":"Ananth
        Grama","url":"https://www.semanticscholar.org/author/1732163"},{"authorId":"9348090","name":"Wojciech
        Szpankowski","url":"https://www.semanticscholar.org/author/9348090"}],"doi":"10.1007/s00446-007-0022-4","isInfluential":false,"paperId":"3d6e0812c7f53ff0a92c2f3a0f56e3fe54cf15ab","title":"Randomized
        leader election","url":"https://www.semanticscholar.org/paper/3d6e0812c7f53ff0a92c2f3a0f56e3fe54cf15ab","venue":"Distributed
        Computing","year":2007},{"arxivId":null,"authors":[{"authorId":"1992954","name":"Xu
        Hou Jie","url":"https://www.semanticscholar.org/author/1992954"},{"authorId":"2017810","name":"Sun
        Jian","url":"https://www.semanticscholar.org/author/2017810"},{"authorId":"39662357","name":"Yan
        Long Jing","url":"https://www.semanticscholar.org/author/39662357"},{"authorId":"3278259","name":"Zhao
        Hui Ping","url":"https://www.semanticscholar.org/author/3278259"}],"doi":null,"isInfluential":false,"paperId":"fc870ed36a6921ab7d5057db6a6cb75adf550c71","title":"An
        efficient trust model for fault-tolerant and intrusion-tolerant mechanism
        of P2P network","url":"https://www.semanticscholar.org/paper/fc870ed36a6921ab7d5057db6a6cb75adf550c71","venue":"2012
        International Conference on Computational Problem-Solving (ICCP)","year":2012},{"arxivId":null,"authors":[{"authorId":"1800234","name":"Hugo
        Saldanha","url":"https://www.semanticscholar.org/author/1800234"},{"authorId":"1789311","name":"Edward
        de Oliveira Ribeiro","url":"https://www.semanticscholar.org/author/1789311"},{"authorId":"31763891","name":"C.
        A. L. Borges","url":"https://www.semanticscholar.org/author/31763891"},{"authorId":"1805284","name":"Alet\u00e9ia
        Patr\u00edcia Favacho de Ara\u00fajo","url":"https://www.semanticscholar.org/author/1805284"},{"authorId":"35291981","name":"Ricardo
        Gallon","url":"https://www.semanticscholar.org/author/35291981"},{"authorId":"1714727","name":"Maristela
        Holanda","url":"https://www.semanticscholar.org/author/1714727"},{"authorId":"37132172","name":"Maria
        Emilia Telles Walter","url":"https://www.semanticscholar.org/author/37132172"},{"authorId":"2309430","name":"Roberto
        C. Togawa","url":"https://www.semanticscholar.org/author/2309430"},{"authorId":"1747863","name":"Jo\u00e3o
        Carlos Setubal","url":"https://www.semanticscholar.org/author/1747863"}],"doi":null,"isInfluential":true,"paperId":"a80888363f2a83837929c642b8c3ac1891fead33","title":"Towards
        a Hybrid Federated Cloud Platform to Efficiently Execute Bioinformatics Workflows","url":"https://www.semanticscholar.org/paper/a80888363f2a83837929c642b8c3ac1891fead33","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1901151","name":"Rami
        Suleiman Alkhawaldeh","url":"https://www.semanticscholar.org/author/1901151"}],"doi":null,"isInfluential":false,"paperId":"88bd7eba63bb736cd596223dff1b0391d31605ac","title":"Query
        routing in cooperative semi-structured peer-to-peer information retrieval
        networks","url":"https://www.semanticscholar.org/paper/88bd7eba63bb736cd596223dff1b0391d31605ac","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"48458409","name":"Ze
        Li","url":"https://www.semanticscholar.org/author/48458409"},{"authorId":"50053966","name":"Kang
        Chen","url":"https://www.semanticscholar.org/author/50053966"}],"doi":"10.1109/TPDS.2014.2359020","isInfluential":false,"paperId":"6c00d878f7fe62f054d3ea8a17121341f5cc6e7d","title":"Social-P2P:
        An Online Social Network Based P2P File Sharing System","url":"https://www.semanticscholar.org/paper/6c00d878f7fe62f054d3ea8a17121341f5cc6e7d","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2015},{"arxivId":null,"authors":[{"authorId":"9274978","name":"Zhao
        Jingling","url":"https://www.semanticscholar.org/author/9274978"},{"authorId":"9216119","name":"Xiao
        Yonggang","url":"https://www.semanticscholar.org/author/9216119"},{"authorId":"2567686","name":"Liao
        Qing","url":"https://www.semanticscholar.org/author/2567686"}],"doi":null,"isInfluential":false,"paperId":"5f8d5c3ef424e5326799028c2b7dfa923615404e","title":"HTC-Chord:
        An improved Chord model based on topic-cluster and hierarchic layer","url":"https://www.semanticscholar.org/paper/5f8d5c3ef424e5326799028c2b7dfa923615404e","venue":"2009
        2nd IEEE International Conference on Broadband Network & Multimedia Technology","year":2009},{"arxivId":null,"authors":[{"authorId":"2507445","name":"Tulika
        Pandey","url":"https://www.semanticscholar.org/author/2507445"},{"authorId":"39101643","name":"Deepak
        Garg","url":"https://www.semanticscholar.org/author/39101643"},{"authorId":"50207792","name":"M.
        M. Gore","url":"https://www.semanticscholar.org/author/50207792"}],"doi":"10.1155/2014/136365","isInfluential":true,"paperId":"8ec060ab926bd8d758a89130805ff5cf9bf9b1d9","title":"Structured
        P2P Overlay of Mobile Brokers for Realizing Publish/Subscribe Communication
        in VANET","url":"https://www.semanticscholar.org/paper/8ec060ab926bd8d758a89130805ff5cf9bf9b1d9","venue":"TheScientificWorldJournal","year":2014},{"arxivId":null,"authors":[{"authorId":"34783286","name":"David
        A. Bryan","url":"https://www.semanticscholar.org/author/34783286"},{"authorId":"2065500","name":"Bruce
        Lowekamp","url":"https://www.semanticscholar.org/author/2065500"}],"doi":null,"isInfluential":false,"paperId":"1d1029324df904ba400ed2446765f790bcffdf54","title":"Innovations
        in Peer-to-Peer Communications","url":"https://www.semanticscholar.org/paper/1d1029324df904ba400ed2446765f790bcffdf54","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"1705508","name":"Gennaro
        Cordasco","url":"https://www.semanticscholar.org/author/1705508"},{"authorId":"35201900","name":"Francesca
        Della Corte","url":"https://www.semanticscholar.org/author/35201900"},{"authorId":"40571580","name":"Alberto
        Negro","url":"https://www.semanticscholar.org/author/40571580"},{"authorId":"47194599","name":"Alessandra
        Sala","url":"https://www.semanticscholar.org/author/47194599"},{"authorId":"1786473","name":"Vittorio
        Scarano","url":"https://www.semanticscholar.org/author/1786473"}],"doi":"10.1109/IPDPS.2009.5160951","isInfluential":false,"paperId":"416e5331e3bfc24a1832dcfbb1e28cd06562cce7","title":"Relaxed-2-Chord:
        Efficiency, flexibility and provable stretch","url":"https://www.semanticscholar.org/paper/416e5331e3bfc24a1832dcfbb1e28cd06562cce7","venue":"2009
        IEEE International Symposium on Parallel & Distributed Processing","year":2009},{"arxivId":null,"authors":[{"authorId":"48585368","name":"Ioan
        Petri","url":"https://www.semanticscholar.org/author/48585368"},{"authorId":"47540645","name":"Tom
        Beach","url":"https://www.semanticscholar.org/author/47540645"},{"authorId":"3247864","name":"Mengsong
        Zou","url":"https://www.semanticscholar.org/author/3247864"},{"authorId":"5878415","name":"Javier
        Diaz-Montes","url":"https://www.semanticscholar.org/author/5878415"},{"authorId":"5274223","name":"Omer
        Farooq Rana","url":"https://www.semanticscholar.org/author/5274223"},{"authorId":"1750983","name":"Manish
        Parashar","url":"https://www.semanticscholar.org/author/1750983"}],"doi":null,"isInfluential":false,"paperId":"42bc711d2d07ffecd69408c29208281906f1046d","title":"Outsourcing
        tasks in CometCloud-based federated systems","url":"https://www.semanticscholar.org/paper/42bc711d2d07ffecd69408c29208281906f1046d","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"40180826","name":"Lor\u00e1nd
        Jakab","url":"https://www.semanticscholar.org/author/40180826"},{"authorId":"1723108","name":"Albert
        Cabellos-Aparicio","url":"https://www.semanticscholar.org/author/1723108"},{"authorId":"2196855","name":"Florin
        Coras","url":"https://www.semanticscholar.org/author/2196855"},{"authorId":"1790230","name":"Damien
        Saucez","url":"https://www.semanticscholar.org/author/1790230"},{"authorId":"2367181","name":"Olivier
        Bonaventure","url":"https://www.semanticscholar.org/author/2367181"}],"doi":"10.1109/JSAC.2010.101011","isInfluential":true,"paperId":"65f19ce3345a88fb1f2b7ea3d558e77a315d3324","title":"LISP-TREE:
        A DNS Hierarchy to Support the LISP Mapping System","url":"https://www.semanticscholar.org/paper/65f19ce3345a88fb1f2b7ea3d558e77a315d3324","venue":"IEEE
        Journal on Selected Areas in Communications","year":2010},{"arxivId":null,"authors":[{"authorId":"1777373","name":"Idit
        Keidar","url":"https://www.semanticscholar.org/author/1777373"}],"doi":null,"isInfluential":false,"paperId":"714e60636e5f703573b610ff44d02032d183a75a","title":"ACM
        SIGACT News Distributed Computing Column 30 On Distributed Computing Principles
        in Systems Research","url":"https://www.semanticscholar.org/paper/714e60636e5f703573b610ff44d02032d183a75a","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"2413296","name":"Virag
        Shah","url":"https://www.semanticscholar.org/author/2413296"},{"authorId":"1757522","name":"Gustavo
        de Veciana","url":"https://www.semanticscholar.org/author/1757522"},{"authorId":"1809899","name":"George
        Kesidis","url":"https://www.semanticscholar.org/author/1809899"}],"doi":"10.1109/TNET.2015.2509967","isInfluential":false,"paperId":"22e506425fc155b52853deaee03f17f6021d63c5","title":"A
        Stable Approach for Routing Queries in Unstructured P2P Networks","url":"https://www.semanticscholar.org/paper/22e506425fc155b52853deaee03f17f6021d63c5","venue":"IEEE/ACM
        Transactions on Networking","year":2016},{"arxivId":null,"authors":[{"authorId":"2854394","name":"Tallat
        M. Shafaat","url":"https://www.semanticscholar.org/author/2854394"},{"authorId":"39942964","name":"Monika
        Moser","url":"https://www.semanticscholar.org/author/39942964"},{"authorId":"38565890","name":"Ali
        Ghodsi","url":"https://www.semanticscholar.org/author/38565890"},{"authorId":"2189661","name":"Thorsten
        Sch\u00fctt","url":"https://www.semanticscholar.org/author/2189661"},{"authorId":"1694607","name":"Seif
        Haridi","url":"https://www.semanticscholar.org/author/1694607"},{"authorId":"1748699","name":"Alexander
        Reinefeld","url":"https://www.semanticscholar.org/author/1748699"}],"doi":"10.1007/978-0-387-09457-1_21","isInfluential":true,"paperId":"d1d8defa93459c5ff34ae02b2a338112e0897824","title":"On
        Consistency Of Data In Structured Overlay Networks","url":"https://www.semanticscholar.org/paper/d1d8defa93459c5ff34ae02b2a338112e0897824","venue":"CoreGRID
        Integration Workshop","year":2008},{"arxivId":null,"authors":[{"authorId":"1918288","name":"Markus
        Junginger","url":"https://www.semanticscholar.org/author/1918288"},{"authorId":"1787659","name":"Yugyung
        Lee","url":"https://www.semanticscholar.org/author/1787659"}],"doi":"10.1109/MNET.2004.1265832","isInfluential":false,"paperId":"8560de2bc9bde266ce4a75c85fa08b6e3f28b51f","title":"A
        self-organizing publish/subscribe middleware for dynamic peer-to-peer networks","url":"https://www.semanticscholar.org/paper/8560de2bc9bde266ce4a75c85fa08b6e3f28b51f","venue":"IEEE
        Network","year":2004},{"arxivId":null,"authors":[{"authorId":"2181445","name":"H.
        M. N. Dilum Bandara","url":"https://www.semanticscholar.org/author/2181445"},{"authorId":"1685097","name":"Anura
        P. Jayasumana","url":"https://www.semanticscholar.org/author/1685097"}],"doi":"10.1145/2729139","isInfluential":false,"paperId":"43f746e5ffa070dac82a3d917f609ff690a0e437","title":"P2P-Based,
        Multi-Attribute Resource Discovery under Real-World Resources and Queries","url":"https://www.semanticscholar.org/paper/43f746e5ffa070dac82a3d917f609ff690a0e437","venue":"ACM
        Trans. Internet Techn.","year":2015},{"arxivId":null,"authors":[{"authorId":"1795625","name":"Ingmar
        Baumgart","url":"https://www.semanticscholar.org/author/1795625"},{"authorId":"2488947","name":"Bernhard
        Heep","url":"https://www.semanticscholar.org/author/2488947"},{"authorId":"3330346","name":"Christian
        H\u00fcbsch","url":"https://www.semanticscholar.org/author/3330346"},{"authorId":"2246648","name":"Amos
        Brocco","url":"https://www.semanticscholar.org/author/2246648"}],"doi":"10.1109/INFCOMW.2012.6193490","isInfluential":false,"paperId":"a5c7f642d4eca630d239bc62994b0c7b3ef2119e","title":"OverArch:
        A common architecture for structured and unstructured overlay networks","url":"https://www.semanticscholar.org/paper/a5c7f642d4eca630d239bc62994b0c7b3ef2119e","venue":"2012
        Proceedings IEEE INFOCOM Workshops","year":2012},{"arxivId":null,"authors":[{"authorId":"1682465","name":"Ching-Hsien
        Hsu","url":"https://www.semanticscholar.org/author/1682465"},{"authorId":"40156011","name":"Chih-Hsun
        Chou","url":"https://www.semanticscholar.org/author/40156011"},{"authorId":"2718999","name":"Chi-Guey
        Hsu","url":"https://www.semanticscholar.org/author/2718999"},{"authorId":"2775176","name":"Shih-Chang
        Chen","url":"https://www.semanticscholar.org/author/2775176"}],"doi":"10.1109/GPC.WORKSHOPS.2008.67","isInfluential":false,"paperId":"219a5741867437a82e618e830608467a68942e81","title":"On
        Improving Message Passing in Unstructured Peer-to-Peer Overlay Networks","url":"https://www.semanticscholar.org/paper/219a5741867437a82e618e830608467a68942e81","venue":"2008
        The 3rd International Conference on Grid and Pervasive Computing - Workshops","year":2008},{"arxivId":null,"authors":[{"authorId":"1771679","name":"Yong
        Sun","url":"https://www.semanticscholar.org/author/1771679"},{"authorId":"1738738","name":"Xiangming
        Wen","url":"https://www.semanticscholar.org/author/1738738"}],"doi":null,"isInfluential":false,"paperId":"97229fbc38e46ead0f9e9c9af4cb2ab6ac5465e1","title":"An
        Efficient Membership Management Scheme for Gossip-Based Overlay Multicast","url":"https://www.semanticscholar.org/paper/97229fbc38e46ead0f9e9c9af4cb2ab6ac5465e1","venue":"2008
        10th International Conference on Advanced Communication Technology","year":2008},{"arxivId":null,"authors":[{"authorId":"40547184","name":"Greig
        Paul","url":"https://www.semanticscholar.org/author/40547184"},{"authorId":"2380996","name":"Pierre-Louis
        Dubouilh","url":"https://www.semanticscholar.org/author/2380996"},{"authorId":"4956130","name":"James
        Irvine","url":"https://www.semanticscholar.org/author/4956130"}],"doi":"10.1109/VTCFall.2015.7391073","isInfluential":false,"paperId":"993e05b26d035044f3c2b50458a8f95e06e625ef","title":"Performance
        Challenges of Decentralised Services","url":"https://www.semanticscholar.org/paper/993e05b26d035044f3c2b50458a8f95e06e625ef","venue":"2015
        IEEE 82nd Vehicular Technology Conference (VTC2015-Fall)","year":2015},{"arxivId":null,"authors":[{"authorId":"48895345","name":"Shruti
        Vimal","url":"https://www.semanticscholar.org/author/48895345"},{"authorId":null,"name":"Dr.
        S. K. Srivatsa","url":null},{"authorId":"2021212","name":"V. Vijayalakshmi","url":"https://www.semanticscholar.org/author/2021212"}],"doi":null,"isInfluential":false,"paperId":"e863e47060ee00a85ad9db26bd84a7a351257777","title":"A
        Random Walker Cloning Method Based Searching in Peer to Peer ( P 2 p ) Network","url":"https://www.semanticscholar.org/paper/e863e47060ee00a85ad9db26bd84a7a351257777","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"4915689","name":"Andr\u00e9
        Dufour","url":"https://www.semanticscholar.org/author/4915689"},{"authorId":"1769058","name":"Ljiljana
        Trajkovic","url":"https://www.semanticscholar.org/author/1769058"}],"doi":"10.1145/1185373.1185413","isInfluential":false,"paperId":"59aef0494af68369fc926e6fc1e7c22254b4d2ae","title":"Improving
        Gnutella network performance using synthetic coordinates","url":"https://www.semanticscholar.org/paper/59aef0494af68369fc926e6fc1e7c22254b4d2ae","venue":"QSHINE","year":2006},{"arxivId":null,"authors":[{"authorId":"10674914","name":"C.
        Athanasios","url":"https://www.semanticscholar.org/author/10674914"},{"authorId":"10719690","name":"E.
        Nikolaos","url":"https://www.semanticscholar.org/author/10719690"},{"authorId":"2936273","name":"Doukakis
        Spyros","url":"https://www.semanticscholar.org/author/2936273"},{"authorId":"3546723","name":"K.
        Odysseas","url":"https://www.semanticscholar.org/author/3546723"}],"doi":null,"isInfluential":false,"paperId":"4f9758c6b6ce682fa59b6990034133162566a756","title":"P2P-InfoReflect:
        Dynamic Locality-Aware and Multi-balanced Overlay for Network Dependent Applications
        and Services","url":"https://www.semanticscholar.org/paper/4f9758c6b6ce682fa59b6990034133162566a756","venue":"2008
        10th IEEE International Conference on High Performance Computing and Communications","year":2008},{"arxivId":null,"authors":[{"authorId":null,"name":"ASEM","url":null},{"authorId":null,"name":"HARMA","url":null},{"authorId":null,"name":"AIMUND","url":null},{"authorId":"50124254","name":"Ge","url":"https://www.semanticscholar.org/author/50124254"}],"doi":null,"isInfluential":false,"paperId":"0bee49f1367586292ce599761d80a7a74e4369c9","title":"E-Chord
        : Keyword-Based Search Algorithm Based on DHT in Mediation Architecture","url":"https://www.semanticscholar.org/paper/0bee49f1367586292ce599761d80a7a74e4369c9","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"1749419","name":"Marc
        S\u00e1nchez Artigas","url":"https://www.semanticscholar.org/author/1749419"},{"authorId":"1695568","name":"Pedro
        Garc\u00eda L\u00f3pez","url":"https://www.semanticscholar.org/author/1695568"}],"doi":"10.1109/P2P.2009.5284546","isInfluential":true,"paperId":"e11cc7815bfc67a9e65ebea92000d0a87628acb4","title":"On
        routing in Distributed Hash Tables: Is reputation a shelter from malicious
        behavior and churn?","url":"https://www.semanticscholar.org/paper/e11cc7815bfc67a9e65ebea92000d0a87628acb4","venue":"2009
        IEEE Ninth International Conference on Peer-to-Peer Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"3184699","name":"Georgios
        Karopoulos","url":"https://www.semanticscholar.org/author/3184699"},{"authorId":"1734906","name":"Christos
        Xenakis","url":"https://www.semanticscholar.org/author/1734906"},{"authorId":"3010570","name":"Stefano
        Tennina","url":"https://www.semanticscholar.org/author/3010570"},{"authorId":"25136660","name":"Stefanos
        Evangelopoulos","url":"https://www.semanticscholar.org/author/25136660"}],"doi":"10.1109/CAMAD.2017.8031643","isInfluential":true,"paperId":"291ce9faef6743a91ce78fbf2ae50043294f5270","title":"Towards
        trusted metering in the smart grid","url":"https://www.semanticscholar.org/paper/291ce9faef6743a91ce78fbf2ae50043294f5270","venue":"2017
        IEEE 22nd International Workshop on Computer Aided Modeling and Design of
        Communication Links and Networks (CAMAD)","year":2017},{"arxivId":null,"authors":[{"authorId":"1765710","name":"Sai
        Wu","url":"https://www.semanticscholar.org/author/1765710"},{"authorId":"2343326","name":"Shouxu
        Jiang","url":"https://www.semanticscholar.org/author/2343326"},{"authorId":"1693070","name":"Beng
        Chin Ooi","url":"https://www.semanticscholar.org/author/1693070"},{"authorId":"1688848","name":"Kian-Lee
        Tan","url":"https://www.semanticscholar.org/author/1688848"}],"doi":"10.14778/1687627.1687678","isInfluential":true,"paperId":"d1b18f601a3123d5b76ea0f3b6dc63a5ec620c52","title":"Distributed
        Online Aggregation","url":"https://www.semanticscholar.org/paper/d1b18f601a3123d5b76ea0f3b6dc63a5ec620c52","venue":"PVLDB","year":2009},{"arxivId":null,"authors":[{"authorId":"2883709","name":"Dan
        R. K. Ports","url":"https://www.semanticscholar.org/author/2883709"}],"doi":null,"isInfluential":true,"paperId":"3581f417177c6154c74cfe770abdadea38e6e777","title":"Application-level
        caching with transactional consistency","url":"https://www.semanticscholar.org/paper/3581f417177c6154c74cfe770abdadea38e6e777","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"39237071","name":"Qiang
        Wang","url":"https://www.semanticscholar.org/author/39237071"},{"authorId":"1705151","name":"M.
        Tamer \u00d6zsu","url":"https://www.semanticscholar.org/author/1705151"}],"doi":null,"isInfluential":true,"paperId":"4c9bf5f29ef9ab6d6bd977ad81dbf883d773b67f","title":"A
        Data Locating Mechanism for Distributed XML Data over P 2 P Networks \u2217","url":"https://www.semanticscholar.org/paper/4c9bf5f29ef9ab6d6bd977ad81dbf883d773b67f","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"39289711","name":"Alexandre
        G. Lages","url":"https://www.semanticscholar.org/author/39289711"},{"authorId":"1748015","name":"Fl\u00e1via
        Coimbra Delicato","url":"https://www.semanticscholar.org/author/1748015"},{"authorId":"35085754","name":"G.
        K. Vianna","url":"https://www.semanticscholar.org/author/35085754"},{"authorId":"1723249","name":"Luci
        Pirmez","url":"https://www.semanticscholar.org/author/1723249"}],"doi":"10.1109/ICON.2006.302642","isInfluential":false,"paperId":"e811d3301e81b984470f8d52f514482a04f11425","title":"A
        Service-Oriented Fuzzy Reputation System to Increase the Security of a Broadband
        Wireless Metropolitan Network","url":"https://www.semanticscholar.org/paper/e811d3301e81b984470f8d52f514482a04f11425","venue":"2006
        14th IEEE International Conference on Networks","year":2006},{"arxivId":null,"authors":[{"authorId":"2102057","name":"S\u00e9bastien
        Monnet","url":"https://www.semanticscholar.org/author/2102057"}],"doi":null,"isInfluential":false,"paperId":"c3c69afe9381ec393bbd8924aad60433656bf937","title":"Contributions
        \u00e0 la r\u00e9plication de donn\u00e9es dans les syst\u00e8mes distribu\u00e9s
        \u00e0 grande \u00e9chelle. (Contributions to data replication in large-scale
        distributed systems)","url":"https://www.semanticscholar.org/paper/c3c69afe9381ec393bbd8924aad60433656bf937","venue":"","year":2015},{"arxivId":"1809.04923","authors":[{"authorId":"19250372","name":"Till
        Knollmann","url":"https://www.semanticscholar.org/author/19250372"},{"authorId":"1751016","name":"Christian
        Scheideler","url":"https://www.semanticscholar.org/author/1751016"}],"doi":null,"isInfluential":false,"paperId":"fc865ab08a3328d77e9839f7ac56308052f20625","title":"A
        Self-Stabilizing Hashed Patricia Trie","url":"https://www.semanticscholar.org/paper/fc865ab08a3328d77e9839f7ac56308052f20625","venue":"ArXiv","year":2018},{"arxivId":null,"authors":[{"authorId":"9113126","name":"C.T.
        Yeoh","url":"https://www.semanticscholar.org/author/9113126"},{"authorId":"35069388","name":"E.
        Kendall","url":"https://www.semanticscholar.org/author/35069388"},{"authorId":"47701197","name":"A.
        I. Khan","url":"https://www.semanticscholar.org/author/47701197"}],"doi":null,"isInfluential":false,"paperId":"9d7b7eb701e28415ed6149fcef410e2991474541","title":"An
        agent based approach to discovery and formation of the serverless core network","url":"https://www.semanticscholar.org/paper/9d7b7eb701e28415ed6149fcef410e2991474541","venue":"2005
        13th IEEE International Conference on Networks Jointly held with the 2005
        IEEE 7th Malaysia International Conf on Communic","year":2005},{"arxivId":null,"authors":[{"authorId":"1998583","name":"Arnaud
        Legrand","url":"https://www.semanticscholar.org/author/1998583"}],"doi":null,"isInfluential":false,"paperId":"9a901387baa0b290e42f808393af7786a50eb69d","title":"Scheduling
        for Large Scale Distributed Computing Systems: Approaches and Performance
        Evaluation Issues","url":"https://www.semanticscholar.org/paper/9a901387baa0b290e42f808393af7786a50eb69d","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"35220795","name":"Markus
        Tauber","url":"https://www.semanticscholar.org/author/35220795"},{"authorId":"1707787","name":"Graham
        N. C. Kirby","url":"https://www.semanticscholar.org/author/1707787"},{"authorId":"1740687","name":"Alan
        Dearle","url":"https://www.semanticscholar.org/author/1740687"}],"doi":"10.1109/SASOW.2010.40","isInfluential":false,"paperId":"c0b42e702c83fd3f493c325e53edee0dfb6416c8","title":"Self-Adaptation
        Applied to Peer-Set Maintenance in Chord via a Generic Autonomic Management
        Framework","url":"https://www.semanticscholar.org/paper/c0b42e702c83fd3f493c325e53edee0dfb6416c8","venue":"2010
        Fourth IEEE International Conference on Self-Adaptive and Self-Organizing
        Systems Workshop","year":2010},{"arxivId":null,"authors":[{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"},{"authorId":"1748626","name":"Md.
        Faizul Bari","url":"https://www.semanticscholar.org/author/1748626"},{"authorId":"1715494","name":"Raouf
        Boutaba","url":"https://www.semanticscholar.org/author/1715494"},{"authorId":"2338485","name":"Shihabur
        Rahman Chowdhury","url":"https://www.semanticscholar.org/author/2338485"},{"authorId":"2050381","name":"Bertrand
        Mathieu","url":"https://www.semanticscholar.org/author/2050381"},{"authorId":"2849080","name":"Alexander
        Pokluda","url":"https://www.semanticscholar.org/author/2849080"},{"authorId":"1759787","name":"David
        R. Cheriton","url":"https://www.semanticscholar.org/author/1759787"}],"doi":null,"isInfluential":false,"paperId":"981d0fbb4556be920a98aabe3663f01f9ce1f756","title":"pWeb
        : A P 2 P Web Hosting Framework","url":"https://www.semanticscholar.org/paper/981d0fbb4556be920a98aabe3663f01f9ce1f756","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"35209532","name":"Mohammad
        Reza Selim","url":"https://www.semanticscholar.org/author/35209532"},{"authorId":"49468242","name":"Takumi
        Endo","url":"https://www.semanticscholar.org/author/49468242"},{"authorId":"1686125","name":"Yuichi
        Goto","url":"https://www.semanticscholar.org/author/1686125"},{"authorId":"1722402","name":"Jingde
        Cheng","url":"https://www.semanticscholar.org/author/1722402"}],"doi":"10.1145/1366804.1366904","isInfluential":true,"paperId":"12d954696cc5f61a511ce067e973185ad5262df9","title":"Distributed
        hash table based design of Soft System Buses","url":"https://www.semanticscholar.org/paper/12d954696cc5f61a511ce067e973185ad5262df9","venue":"Infoscale","year":2007},{"arxivId":null,"authors":[{"authorId":"3073955","name":"Stephen
        Naicken","url":"https://www.semanticscholar.org/author/3073955"},{"authorId":"28067601","name":"B.
        Livingston","url":"https://www.semanticscholar.org/author/28067601"},{"authorId":"40365944","name":"Anirban
        Basu","url":"https://www.semanticscholar.org/author/40365944"},{"authorId":"1943098","name":"S.
        Rodhetbhai","url":"https://www.semanticscholar.org/author/1943098"},{"authorId":"1780634","name":"Ian
        Wakeman","url":"https://www.semanticscholar.org/author/1780634"},{"authorId":"5909757","name":"Dan
        Chalmers","url":"https://www.semanticscholar.org/author/5909757"}],"doi":"10.1145/1232919.1232932","isInfluential":true,"paperId":"5f05bdecda952e862bab0231c8566b0104adf739","title":"The
        state of peer-to-peer simulators and simulations","url":"https://www.semanticscholar.org/paper/5f05bdecda952e862bab0231c8566b0104adf739","venue":"Computer
        Communication Review","year":2007},{"arxivId":null,"authors":[{"authorId":"48458409","name":"Ze
        Li","url":"https://www.semanticscholar.org/author/48458409"},{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"}],"doi":"10.1109/INFCOM.2011.5935316","isInfluential":false,"paperId":"0ae26a73f3de91a979b9fcfc82d976fd3b6683b7","title":"A
        hierarchical account-aided Reputation Management system for large-scale MANETs","url":"https://www.semanticscholar.org/paper/0ae26a73f3de91a979b9fcfc82d976fd3b6683b7","venue":"2011
        Proceedings IEEE INFOCOM","year":2011},{"arxivId":null,"authors":[{"authorId":"2854394","name":"Tallat
        M. Shafaat","url":"https://www.semanticscholar.org/author/2854394"}],"doi":null,"isInfluential":true,"paperId":"b9ca0a16b11eeb25295d1fe00db0e3d3107065f5","title":"Dealing
        with Network Partitions and Mergers in Structured Overlay Networks","url":"https://www.semanticscholar.org/paper/b9ca0a16b11eeb25295d1fe00db0e3d3107065f5","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"},{"authorId":"1715494","name":"Raouf
        Boutaba","url":"https://www.semanticscholar.org/author/1715494"},{"authorId":"1759787","name":"David
        R. Cheriton","url":"https://www.semanticscholar.org/author/1759787"}],"doi":null,"isInfluential":true,"paperId":"f9bec3e5eb7b2dbecb5cba4eedcc40854c9c0cc4","title":"A
        Scalable Peer-to-peer Protocol Enabling Efficient and Flexible Search","url":"https://www.semanticscholar.org/paper/f9bec3e5eb7b2dbecb5cba4eedcc40854c9c0cc4","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"49843463","name":"G.
        Perera","url":"https://www.semanticscholar.org/author/49843463"},{"authorId":"1744363","name":"Kenneth
        J. Christensen","url":"https://www.semanticscholar.org/author/1744363"},{"authorId":"1770868","name":"Allen
        Roginsky","url":"https://www.semanticscholar.org/author/1770868"}],"doi":"10.1109/PCCC.2005.1460539","isInfluential":false,"paperId":"36f2bbadb5db625f3d35eacf888dc73b9c18b2ee","title":"Targeted
        search: reducing the time and cost for searching for objects in multiple-server
        networks","url":"https://www.semanticscholar.org/paper/36f2bbadb5db625f3d35eacf888dc73b9c18b2ee","venue":"PCCC
        2005. 24th IEEE International Performance, Computing, and Communications Conference,
        2005.","year":2005},{"arxivId":null,"authors":[{"authorId":"1942437","name":"Juncheng
        Huang","url":"https://www.semanticscholar.org/author/1942437"},{"authorId":"1767916","name":"Xiuqi
        Li","url":"https://www.semanticscholar.org/author/1767916"},{"authorId":"49388033","name":"Jie
        Wu","url":"https://www.semanticscholar.org/author/49388033"}],"doi":"10.1007/s11390-011-1190-z","isInfluential":false,"paperId":"be53b9f2224b6ba7a6a7eddcfe16e862bce4ff8e","title":"A
        Semantic Searching Scheme in Heterogeneous Unstructured P2P Networks","url":"https://www.semanticscholar.org/paper/be53b9f2224b6ba7a6a7eddcfe16e862bce4ff8e","venue":"Journal
        of Computer Science and Technology","year":2011},{"arxivId":null,"authors":[{"authorId":"3277963","name":"Gonzalo
        Camarillo","url":"https://www.semanticscholar.org/author/3277963"},{"authorId":"38813833","name":"Jouni
        Maenpaa","url":"https://www.semanticscholar.org/author/38813833"},{"authorId":"33619182","name":"Ari
        Keranen","url":"https://www.semanticscholar.org/author/33619182"},{"authorId":"2200172","name":"Veera
        Andersson","url":"https://www.semanticscholar.org/author/2200172"}],"doi":null,"isInfluential":false,"paperId":"74578ff171f4a1303051f879cd336e206634af0d","title":"Reducing
        delays related to NAT traversal in P2PSIP session establishments","url":"https://www.semanticscholar.org/paper/74578ff171f4a1303051f879cd336e206634af0d","venue":"2011
        IEEE Consumer Communications and Networking Conference (CCNC)","year":2011},{"arxivId":null,"authors":[{"authorId":null,"name":"Patrick
        Hinnelund","url":null}],"doi":null,"isInfluential":false,"paperId":"0c3a243fef622f7fccc22f13e0840deff27fd054","title":"Autonomic
        Computing \u2013 a method for automated systems management Systems management
        using distributed local control","url":"https://www.semanticscholar.org/paper/0c3a243fef622f7fccc22f13e0840deff27fd054","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"5855278","name":"Jeff
        Rose","url":"https://www.semanticscholar.org/author/5855278"},{"authorId":"49354487","name":"Cyrus
        P. Hall","url":"https://www.semanticscholar.org/author/49354487"},{"authorId":"1807579","name":"Antonio
        Carzaniga","url":"https://www.semanticscholar.org/author/1807579"}],"doi":"10.1109/IPDPS.2007.370655","isInfluential":true,"paperId":"15fc374e66fa8942f057fc379e4f09d3f924245f","title":"Spinneret:
        A Log Random Substrate for P2P Networks","url":"https://www.semanticscholar.org/paper/15fc374e66fa8942f057fc379e4f09d3f924245f","venue":"2007
        IEEE International Parallel and Distributed Processing Symposium","year":2007},{"arxivId":null,"authors":[{"authorId":"46871423","name":"Alberto
        Miranda","url":"https://www.semanticscholar.org/author/46871423"},{"authorId":"20767178","name":"Sascha
        Effert","url":"https://www.semanticscholar.org/author/20767178"},{"authorId":"40394423","name":"Yangwook
        Kang","url":"https://www.semanticscholar.org/author/40394423"},{"authorId":"1695221","name":"Ethan
        L. Miller","url":"https://www.semanticscholar.org/author/1695221"},{"authorId":"39953348","name":"Ivan
        Popov","url":"https://www.semanticscholar.org/author/39953348"},{"authorId":"1726087","name":"Andr\u00e9
        Brinkmann","url":"https://www.semanticscholar.org/author/1726087"},{"authorId":"2637580","name":"Tom
        Friedetzky","url":"https://www.semanticscholar.org/author/2637580"},{"authorId":"1715619","name":"Toni
        Cortes","url":"https://www.semanticscholar.org/author/1715619"}],"doi":"10.1145/2632230","isInfluential":false,"paperId":"17a99d41fcbe3c62f0bedd9373da44db12e314d8","title":"Random
        Slicing: Efficient and Scalable Data Placement for Large-Scale Storage Systems","url":"https://www.semanticscholar.org/paper/17a99d41fcbe3c62f0bedd9373da44db12e314d8","venue":"TOS","year":2014},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"1719551","name":"Cheng-Zhong
        Xu","url":"https://www.semanticscholar.org/author/1719551"}],"doi":"10.1109/TPDS.2007.1040","isInfluential":false,"paperId":"078b80c69441a2706bb435abb3840eb4c253438e","title":"Locality-Aware
        and Churn-Resilient Load-Balancing Algorithms in Structured Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/078b80c69441a2706bb435abb3840eb4c253438e","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2007},{"arxivId":null,"authors":[{"authorId":"3185678","name":"Maysam
        Yabandeh","url":"https://www.semanticscholar.org/author/3185678"},{"authorId":"2708299","name":"Nikola
        Knezevic","url":"https://www.semanticscholar.org/author/2708299"},{"authorId":"1736741","name":"Dejan
        Kostic","url":"https://www.semanticscholar.org/author/1736741"},{"authorId":"1799286","name":"Viktor
        Kuncak","url":"https://www.semanticscholar.org/author/1799286"}],"doi":"10.1145/1731060.1731062","isInfluential":true,"paperId":"3741d459138c0bc1a3eff051091e6704112f0e4d","title":"CrystalBall:
        Predicting and Preventing Inconsistencies in Deployed Distributed Systems","url":"https://www.semanticscholar.org/paper/3741d459138c0bc1a3eff051091e6704112f0e4d","venue":"NSDI","year":2009},{"arxivId":null,"authors":[{"authorId":"1696934","name":"Roberto
        Baldoni","url":"https://www.semanticscholar.org/author/1696934"},{"authorId":"2203677","name":"Marco
        Platania","url":"https://www.semanticscholar.org/author/2203677"},{"authorId":"1775963","name":"Leonardo
        Querzoni","url":"https://www.semanticscholar.org/author/1775963"},{"authorId":"2349184","name":"Sirio
        Scipioni","url":"https://www.semanticscholar.org/author/2349184"}],"doi":"10.1109/ISPDC.2010.25","isInfluential":false,"paperId":"73075a75eaa85eec7583a546af75203af986f291","title":"Practical
        Uniform Peer Sampling under Churn","url":"https://www.semanticscholar.org/paper/73075a75eaa85eec7583a546af75203af986f291","venue":"2010
        Ninth International Symposium on Parallel and Distributed Computing","year":2010},{"arxivId":null,"authors":[{"authorId":"2091612","name":"Stelios
        Sotiriadis","url":"https://www.semanticscholar.org/author/2091612"},{"authorId":"1711673","name":"Nik
        Bessis","url":"https://www.semanticscholar.org/author/1711673"},{"authorId":"1805514","name":"Nick
        Antonopoulos","url":"https://www.semanticscholar.org/author/1805514"}],"doi":"10.1109/CISIS.2011.80","isInfluential":false,"paperId":"787253b8a25299751f2e8f3ace824430ae3ab732","title":"Using
        Self-led Critical Friend Topology Based on P2P Chord Algorithm for Node Localization
        within Cloud Communities","url":"https://www.semanticscholar.org/paper/787253b8a25299751f2e8f3ace824430ae3ab732","venue":"2011
        International Conference on Complex, Intelligent, and Software Intensive Systems","year":2011},{"arxivId":null,"authors":[{"authorId":"2840798","name":"Djelloul
        Boukhelef","url":"https://www.semanticscholar.org/author/2840798"},{"authorId":"1687013","name":"Hiroyuki
        Kitagawa","url":"https://www.semanticscholar.org/author/1687013"}],"doi":null,"isInfluential":true,"paperId":"8b67880d4b7c77c0c2066f9794ec71e5665ca528","title":"Multidimensional
        Range Query Processing in Structured P 2 P Overlays","url":"https://www.semanticscholar.org/paper/8b67880d4b7c77c0c2066f9794ec71e5665ca528","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"47294272","name":"Zhen
        Zhang","url":"https://www.semanticscholar.org/author/47294272"}],"doi":null,"isInfluential":false,"paperId":"fd42d9b70772d0122018188e3d6c8d290539d667","title":"Approach
        to Construct Cluster in Unstructured P2P Networks Based on Small-World Theory","url":"https://www.semanticscholar.org/paper/fd42d9b70772d0122018188e3d6c8d290539d667","venue":"2010
        Third International Symposium on Information Processing","year":2010},{"arxivId":null,"authors":[{"authorId":"46803239","name":"Changho
        Choi","url":"https://www.semanticscholar.org/author/46803239"},{"authorId":"1708494","name":"Zhi-Li
        Zhang","url":"https://www.semanticscholar.org/author/1708494"}],"doi":null,"isInfluential":true,"paperId":"9928f609d10212be5f7dda28d173c7d7c6886208","title":"Vault
        : A SecureBinding Service","url":"https://www.semanticscholar.org/paper/9928f609d10212be5f7dda28d173c7d7c6886208","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"3481808","name":"Tsuyoshi
        Itokawa","url":"https://www.semanticscholar.org/author/3481808"},{"authorId":"49010398","name":"Teruaki
        Kitasuka","url":"https://www.semanticscholar.org/author/49010398"},{"authorId":"1945185","name":"Masayoshi
        Aritsugi","url":"https://www.semanticscholar.org/author/1945185"}],"doi":null,"isInfluential":true,"paperId":"8a0a062639e600ba95c76d692d0cd76a8a45da53","title":"Estimation
        Algorithms of Popular Objects on Distributed Hash Table Using Local Lookup
        Logs","url":"https://www.semanticscholar.org/paper/8a0a062639e600ba95c76d692d0cd76a8a45da53","venue":"2009
        2nd International Conference on Computer Science and its Applications","year":2009},{"arxivId":null,"authors":[{"authorId":"39451763","name":"Bidyut
        Gupta","url":"https://www.semanticscholar.org/author/39451763"},{"authorId":"5607403","name":"Nick
        Rahimi","url":"https://www.semanticscholar.org/author/5607403"},{"authorId":"1712959","name":"Shahram
        Rahimi","url":"https://www.semanticscholar.org/author/1712959"},{"authorId":"3422001","name":"Ashraf
        Alyanbaawi","url":"https://www.semanticscholar.org/author/3422001"}],"doi":"10.1109/INDIN.2017.8104899","isInfluential":false,"paperId":"e6a74beb62d69360d6c1b70137b621976207faae","title":"Efficient
        data lookup in non-DHT based low diameter structured P2P network","url":"https://www.semanticscholar.org/paper/e6a74beb62d69360d6c1b70137b621976207faae","venue":"2017
        IEEE 15th International Conference on Industrial Informatics (INDIN)","year":2017},{"arxivId":null,"authors":[{"authorId":"3089702","name":"Zied
        Trifa","url":"https://www.semanticscholar.org/author/3089702"},{"authorId":"1940052","name":"Maher
        Khemakhem","url":"https://www.semanticscholar.org/author/1940052"}],"doi":null,"isInfluential":true,"paperId":"b16cc269f6fb7612a90b4595af6f600ecd35c90f","title":"Taxonomy
        of Structured P 2 P Overlay Networks Security Attacks","url":"https://www.semanticscholar.org/paper/b16cc269f6fb7612a90b4595af6f600ecd35c90f","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"3269316","name":"Tyson
        Condie","url":"https://www.semanticscholar.org/author/3269316"},{"authorId":"2399805","name":"Varun
        Kacholia","url":"https://www.semanticscholar.org/author/2399805"},{"authorId":"2228175","name":"Sriram
        Sank","url":"https://www.semanticscholar.org/author/2228175"},{"authorId":"1695576","name":"Joseph
        M. Hellerstein","url":"https://www.semanticscholar.org/author/1695576"},{"authorId":"2286904","name":"Petros
        Maniatis","url":"https://www.semanticscholar.org/author/2286904"}],"doi":null,"isInfluential":false,"paperId":"1960c2fd3a0ed7d2c81f9bece8e0b8b9909e6ae2","title":"Induced
        Churn as Shelter from Routing-Table Poisoning","url":"https://www.semanticscholar.org/paper/1960c2fd3a0ed7d2c81f9bece8e0b8b9909e6ae2","venue":"NDSS","year":2006},{"arxivId":null,"authors":[{"authorId":"1710888","name":"Runfang
        Zhou","url":"https://www.semanticscholar.org/author/1710888"},{"authorId":"1680273","name":"Kai
        Hwang","url":"https://www.semanticscholar.org/author/1680273"}],"doi":"10.1109/IPDPS.2006.1639268","isInfluential":true,"paperId":"3e1089ddbaad8c891c633852f0e85693ffc87026","title":"Trust
        overlay networks for global reputation aggregation in P2P grid computing","url":"https://www.semanticscholar.org/paper/3e1089ddbaad8c891c633852f0e85693ffc87026","venue":"Proceedings
        20th IEEE International Parallel & Distributed Processing Symposium","year":2006},{"arxivId":null,"authors":[{"authorId":"3093584","name":"Shiguo
        Wang","url":"https://www.semanticscholar.org/author/3093584"},{"authorId":"1693858","name":"Hong
        Ji","url":"https://www.semanticscholar.org/author/1693858"},{"authorId":"50024256","name":"Yi
        Li","url":"https://www.semanticscholar.org/author/50024256"}],"doi":null,"isInfluential":false,"paperId":"719897df966edd9b6ef63edcb569770fb1c3d744","title":"BF-Chord:
        An Improved Lookup Protocol to Chord Based on Bloom Filter for Wireless P2P","url":"https://www.semanticscholar.org/paper/719897df966edd9b6ef63edcb569770fb1c3d744","venue":"2009
        5th International Conference on Wireless Communications, Networking and Mobile
        Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"3303860","name":"Youngmi
        Jin","url":"https://www.semanticscholar.org/author/3303860"},{"authorId":"1809899","name":"George
        Kesidis","url":"https://www.semanticscholar.org/author/1809899"},{"authorId":null,"name":"EE
        FatihKocak","url":null}],"doi":null,"isInfluential":false,"paperId":"2c963e4f5c1cfba657819c55671c48b305222046","title":"Peer-to-peer
        caching systems with selfish peers : A spectral approach","url":"https://www.semanticscholar.org/paper/2c963e4f5c1cfba657819c55671c48b305222046","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"1688606","name":"Olaf
        G\u00f6rlitz","url":"https://www.semanticscholar.org/author/1688606"}],"doi":null,"isInfluential":false,"paperId":"7ab06d8df96025396c14189d2b2e95149b18b465","title":"Distributed
        query processing for federated RDF data management","url":"https://www.semanticscholar.org/paper/7ab06d8df96025396c14189d2b2e95149b18b465","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"2529570","name":"Marguerite
        Fay\u00e7al","url":"https://www.semanticscholar.org/author/2529570"},{"authorId":"2718710","name":"Ahmed
        Serhrouchni","url":"https://www.semanticscholar.org/author/2718710"}],"doi":null,"isInfluential":true,"paperId":"6bdeac73b500571fd7ff7fc492f7bdc5628e760c","title":"An
        efficient management technique for Peer-to-Peer networks","url":"https://www.semanticscholar.org/paper/6bdeac73b500571fd7ff7fc492f7bdc5628e760c","venue":"2008
        16th International Conference on Software, Telecommunications and Computer
        Networks","year":2008},{"arxivId":null,"authors":[{"authorId":"40161613","name":"Gang
        Chen","url":"https://www.semanticscholar.org/author/40161613"},{"authorId":"1731397","name":"Abdolhossein
        Sarrafzadeh","url":"https://www.semanticscholar.org/author/1731397"},{"authorId":"2798142","name":"Chor
        Ping Low","url":"https://www.semanticscholar.org/author/2798142"},{"authorId":"48570713","name":"Liang
        Zhang","url":"https://www.semanticscholar.org/author/48570713"}],"doi":"10.1145/1867713.1867716","isInfluential":false,"paperId":"5f3d92db36620a22aaa3ea55c0f97274053445c9","title":"A
        self-organization mechanism based on cross-entropy method for P2P-like applications","url":"https://www.semanticscholar.org/paper/5f3d92db36620a22aaa3ea55c0f97274053445c9","venue":"TAAS","year":2010},{"arxivId":null,"authors":[{"authorId":"1749323","name":"Younghyun
        Kim","url":"https://www.semanticscholar.org/author/1749323"},{"authorId":"2239405","name":"Haneul
        Ko","url":"https://www.semanticscholar.org/author/2239405"},{"authorId":"1681082","name":"Sangheon
        Pack","url":"https://www.semanticscholar.org/author/1681082"},{"authorId":"1969629","name":"Jong-Hyouk
        Lee","url":"https://www.semanticscholar.org/author/1969629"}],"doi":"10.1109/GLOCOMW.2012.6477728","isInfluential":true,"paperId":"69ec176aa6720b3279aa5e611dde360f7b2a17c9","title":"Comparative
        study of centralized mobility management and distributed mobility management
        on ID/locator separation architectures","url":"https://www.semanticscholar.org/paper/69ec176aa6720b3279aa5e611dde360f7b2a17c9","venue":"2012
        IEEE Globecom Workshops","year":2012},{"arxivId":null,"authors":[{"authorId":"3257509","name":"Huayou
        Si","url":"https://www.semanticscholar.org/author/3257509"},{"authorId":"2368825","name":"Zhong
        Chen","url":"https://www.semanticscholar.org/author/2368825"},{"authorId":"1773439","name":"Yong
        Deng","url":"https://www.semanticscholar.org/author/1773439"},{"authorId":"47785144","name":"Lian
        Yu","url":"https://www.semanticscholar.org/author/47785144"}],"doi":"10.1007/s11761-011-0097-4","isInfluential":true,"paperId":"7dc1618e1592d07f84b605012d903e61e6a670c4","title":"Semantic
        web services publication and OCT-based discovery in structured P2P network","url":"https://www.semanticscholar.org/paper/7dc1618e1592d07f84b605012d903e61e6a670c4","venue":"Service
        Oriented Computing and Applications","year":2011},{"arxivId":null,"authors":[{"authorId":"3089702","name":"Zied
        Trifa","url":"https://www.semanticscholar.org/author/3089702"},{"authorId":"1940052","name":"Maher
        Khemakhem","url":"https://www.semanticscholar.org/author/1940052"}],"doi":"10.1007/s12083-015-0340-4","isInfluential":false,"paperId":"1b7949130f5005055a4d28dd4926ee1f5ffc8c85","title":"A
        novel replication technique to attenuate churn effects","url":"https://www.semanticscholar.org/paper/1b7949130f5005055a4d28dd4926ee1f5ffc8c85","venue":"Peer-to-Peer
        Networking and Applications","year":2016},{"arxivId":null,"authors":[{"authorId":"8152388","name":"Jinwon
        Lee","url":"https://www.semanticscholar.org/author/8152388"},{"authorId":"2488962","name":"Hyonik
        Lee","url":"https://www.semanticscholar.org/author/2488962"},{"authorId":"3028172","name":"Seungwoo
        Kang","url":"https://www.semanticscholar.org/author/3028172"},{"authorId":"37331563","name":"Su
        Myeon Kim","url":"https://www.semanticscholar.org/author/37331563"},{"authorId":"1789470","name":"Junehwa
        Song","url":"https://www.semanticscholar.org/author/1789470"}],"doi":"10.1016/j.comnet.2006.07.005","isInfluential":false,"paperId":"5984116b466fc8658f33c34157348cbb9a238dae","title":"CISS:
        An efficient object clustering framework for DHT-based peer-to-peer applications","url":"https://www.semanticscholar.org/paper/5984116b466fc8658f33c34157348cbb9a238dae","venue":"Computer
        Networks","year":2007},{"arxivId":null,"authors":[{"authorId":"2367532","name":"Stavros
        Harizopoulos","url":"https://www.semanticscholar.org/author/2367532"},{"authorId":"2254232","name":"Daniel
        J. Abadi","url":"https://www.semanticscholar.org/author/2254232"},{"authorId":"2033016","name":"Samuel
        Madden","url":"https://www.semanticscholar.org/author/2033016"},{"authorId":"1695715","name":"Michael
        Stonebraker","url":"https://www.semanticscholar.org/author/1695715"}],"doi":"10.1145/1376616.1376713","isInfluential":false,"paperId":"8c8b44029fbdac1572ae47b8eaab3929c9987098","title":"OLTP
        through the looking glass, and what we found there","url":"https://www.semanticscholar.org/paper/8c8b44029fbdac1572ae47b8eaab3929c9987098","venue":"SIGMOD
        Conference","year":2008},{"arxivId":null,"authors":[{"authorId":"1695203","name":"Shuling
        Wang","url":"https://www.semanticscholar.org/author/1695203"},{"authorId":"1724926","name":"Shoubao
        Yang","url":"https://www.semanticscholar.org/author/1724926"},{"authorId":"2597240","name":"Liangmin
        Guo","url":"https://www.semanticscholar.org/author/2597240"}],"doi":"10.1109/CMC.2011.31","isInfluential":false,"paperId":"fe5750e9a9ace8e2e197b5dbfaadb1b08cad1aac","title":"LiChord:
        A Linear Code Based Structured P2P for Approximate Match","url":"https://www.semanticscholar.org/paper/fe5750e9a9ace8e2e197b5dbfaadb1b08cad1aac","venue":"2011
        Third International Conference on Communications and Mobile Computing","year":2011},{"arxivId":null,"authors":[{"authorId":"2413528","name":"Wenjie
        Lin","url":"https://www.semanticscholar.org/author/2413528"},{"authorId":"9226642","name":"Juwei
        Shi","url":"https://www.semanticscholar.org/author/9226642"},{"authorId":"1698061","name":"Hui
        Tian","url":"https://www.semanticscholar.org/author/1698061"},{"authorId":"34493839","name":"Qimei
        Cui","url":"https://www.semanticscholar.org/author/34493839"}],"doi":"10.1109/WCNC.2008.562","isInfluential":false,"paperId":"eb0d6f85947928bb425599fee1f37ae65f64dc90","title":"Robust
        and Scalable Mobility Support for Real-Time Applications","url":"https://www.semanticscholar.org/paper/eb0d6f85947928bb425599fee1f37ae65f64dc90","venue":"2008
        IEEE Wireless Communications and Networking Conference","year":2008},{"arxivId":null,"authors":[{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"},{"authorId":"1715494","name":"Raouf
        Boutaba","url":"https://www.semanticscholar.org/author/1715494"}],"doi":"10.1109/SURV.2011.040410.00097","isInfluential":true,"paperId":"c0b199b65ffeb49242e84add5dcde7c5c751f0b1","title":"A
        Survey of Distributed Search Techniques in Large Scale Distributed Systems","url":"https://www.semanticscholar.org/paper/c0b199b65ffeb49242e84add5dcde7c5c751f0b1","venue":"IEEE
        Communications Surveys & Tutorials","year":2011},{"arxivId":null,"authors":[{"authorId":"46879291","name":"Gang
        Chen","url":"https://www.semanticscholar.org/author/46879291"},{"authorId":"38429669","name":"Ke
        Chen","url":"https://www.semanticscholar.org/author/38429669"},{"authorId":"48219927","name":"Dawei
        Jiang","url":"https://www.semanticscholar.org/author/48219927"},{"authorId":"1693070","name":"Beng
        Chin Ooi","url":"https://www.semanticscholar.org/author/1693070"},{"authorId":"39600449","name":"Lei
        Shi","url":"https://www.semanticscholar.org/author/39600449"},{"authorId":null,"name":"Hoang
        Tam","url":null}],"doi":null,"isInfluential":true,"paperId":"d2a19ea04b703970f095aa4f3a2793d515c57f34","title":"Scalable
        Data Processing","url":"https://www.semanticscholar.org/paper/d2a19ea04b703970f095aa4f3a2793d515c57f34","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"1869391","name":"Daniel
        Stutzbach","url":"https://www.semanticscholar.org/author/1869391"},{"authorId":"2207332","name":"Reza
        Rejaie","url":"https://www.semanticscholar.org/author/2207332"},{"authorId":"35049639","name":"Subhabrata
        Sen","url":"https://www.semanticscholar.org/author/35049639"}],"doi":"10.1145/1373990.1373992","isInfluential":false,"paperId":"2e4277a9b40f092fdf81c531a8b82a4a3326bc1c","title":"Characterizing
        Unstructured Overlay Topologies in Modern P2P File-Sharing Systems","url":"https://www.semanticscholar.org/paper/2e4277a9b40f092fdf81c531a8b82a4a3326bc1c","venue":"IEEE/ACM
        Transactions on Networking","year":2005},{"arxivId":null,"authors":[{"authorId":"1710984","name":"Kazuo
        Hashimoto","url":"https://www.semanticscholar.org/author/1710984"},{"authorId":"1939901","name":"Gen
        Kitagata","url":"https://www.semanticscholar.org/author/1939901"},{"authorId":"1740723","name":"Hideyuki
        Takahashi","url":"https://www.semanticscholar.org/author/1740723"},{"authorId":"2370755","name":"Atsushi
        Takeda","url":"https://www.semanticscholar.org/author/2370755"},{"authorId":"1743987","name":"Debasish
        Chakraborty","url":"https://www.semanticscholar.org/author/1743987"},{"authorId":"1742884","name":"Norio
        Shiratori","url":"https://www.semanticscholar.org/author/1742884"}],"doi":"10.1109/ISADS.2011.65","isInfluential":true,"paperId":"54558655d1409eece52a1f976d335eec00d35706","title":"Socio-familiar
        Personalized Service and Its Application -- Towards a New Network Software
        for Next Generation Ubiquitous Service","url":"https://www.semanticscholar.org/paper/54558655d1409eece52a1f976d335eec00d35706","venue":"2011
        Tenth International Symposium on Autonomous Decentralized Systems","year":2011},{"arxivId":null,"authors":[{"authorId":"3269316","name":"Tyson
        Condie","url":"https://www.semanticscholar.org/author/3269316"}],"doi":null,"isInfluential":false,"paperId":"063e70d2c4d90016a9e36aed5ff6e73b30c54d00","title":"Declarative
        Systems","url":"https://www.semanticscholar.org/paper/063e70d2c4d90016a9e36aed5ff6e73b30c54d00","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"3270478","name":"Yichao
        Jin","url":"https://www.semanticscholar.org/author/3270478"},{"authorId":"40096128","name":"Yonggang
        Wen","url":"https://www.semanticscholar.org/author/40096128"}],"doi":"10.1109/GLOCOM.2012.6503431","isInfluential":false,"paperId":"b63b6fb111c9ffe292e505070e34d29bc45c0fbe","title":"Content
        routing and lookup schemes using global bloom filter for content-delivery-as-a-service","url":"https://www.semanticscholar.org/paper/b63b6fb111c9ffe292e505070e34d29bc45c0fbe","venue":"2012
        IEEE Global Communications Conference (GLOBECOM)","year":2012},{"arxivId":null,"authors":[{"authorId":"2028147","name":"Petra
        Berenbrink","url":"https://www.semanticscholar.org/author/2028147"},{"authorId":"1726087","name":"Andr\u00e9
        Brinkmann","url":"https://www.semanticscholar.org/author/1726087"},{"authorId":"2637580","name":"Tom
        Friedetzky","url":"https://www.semanticscholar.org/author/2637580"},{"authorId":"1744528","name":"Dirk
        Meister","url":"https://www.semanticscholar.org/author/1744528"},{"authorId":"2107074","name":"Lars
        Nagel","url":"https://www.semanticscholar.org/author/2107074"}],"doi":"10.1109/IPDPSW.2013.148","isInfluential":false,"paperId":"022015d831e06ee8cccc415fb6e6355a0b11e59a","title":"Distributing
        Storage in Cloud Environments","url":"https://www.semanticscholar.org/paper/022015d831e06ee8cccc415fb6e6355a0b11e59a","venue":"2013
        IEEE International Symposium on Parallel & Distributed Processing, Workshops
        and Phd Forum","year":2013},{"arxivId":"0804.0743","authors":[{"authorId":"1686449","name":"Laurent
        Viennot","url":"https://www.semanticscholar.org/author/1686449"},{"authorId":"2542175","name":"Yacine
        Boufkhad","url":"https://www.semanticscholar.org/author/2542175"},{"authorId":"1969729","name":"Fabien
        Mathieu","url":"https://www.semanticscholar.org/author/1969729"},{"authorId":"1742016","name":"Fabien
        de Montgolfier","url":"https://www.semanticscholar.org/author/1742016"},{"authorId":"1768263","name":"Diego
        Perino","url":"https://www.semanticscholar.org/author/1768263"}],"doi":null,"isInfluential":false,"paperId":"28bb4f1e2022e0ac802f224f73261484f2830278","title":"Scalable
        Distributed Video-on-Demand: Theoretical Bounds and Practical Algorithms","url":"https://www.semanticscholar.org/paper/28bb4f1e2022e0ac802f224f73261484f2830278","venue":"ArXiv","year":2008},{"arxivId":null,"authors":[{"authorId":"38057896","name":"James
        Salter","url":"https://www.semanticscholar.org/author/38057896"},{"authorId":"1805514","name":"Nick
        Antonopoulos","url":"https://www.semanticscholar.org/author/1805514"}],"doi":"10.1016/j.future.2006.07.014","isInfluential":true,"paperId":"a13e2ae5026a63efff80d06d057f71fed7c1658d","title":"An
        optimized two-tier P2P architecture for contextualized keyword searches","url":"https://www.semanticscholar.org/paper/a13e2ae5026a63efff80d06d057f71fed7c1658d","venue":"Future
        Generation Comp. Syst.","year":2007},{"arxivId":null,"authors":[{"authorId":"1996505","name":"Benjamin
        Fabian","url":"https://www.semanticscholar.org/author/1996505"},{"authorId":"2799529","name":"Tatiana
        Ermakova","url":"https://www.semanticscholar.org/author/2799529"},{"authorId":"30885205","name":"Cristian
        M\u00fcller","url":"https://www.semanticscholar.org/author/30885205"}],"doi":"10.1109/TII.2011.2166783","isInfluential":false,"paperId":"cae2da2abd31bc9b8fa3780f060e51ca94e8d650","title":"SHARDIS:
        A Privacy-Enhanced Discovery Service for RFID-Based Product Information","url":"https://www.semanticscholar.org/paper/cae2da2abd31bc9b8fa3780f060e51ca94e8d650","venue":"IEEE
        Transactions on Industrial Informatics","year":2012},{"arxivId":null,"authors":[{"authorId":"49131198","name":"Robert
        Morris","url":"https://www.semanticscholar.org/author/49131198"},{"authorId":"2668437","name":"David
        Liben-Nowell","url":"https://www.semanticscholar.org/author/2668437"},{"authorId":"1743286","name":"David
        R. Karger","url":"https://www.semanticscholar.org/author/1743286"},{"authorId":"1681493","name":"M.
        Frans Kaashoek","url":"https://www.semanticscholar.org/author/1681493"},{"authorId":"1720563","name":"Frank
        Dabek","url":"https://www.semanticscholar.org/author/1720563"}],"doi":null,"isInfluential":false,"paperId":"ac998826ffa4becf854e15887f97e5ea59a5301b","title":"Processing
        of Query in Peer to Peer Networks","url":"https://www.semanticscholar.org/paper/ac998826ffa4becf854e15887f97e5ea59a5301b","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"40701017","name":"Nicolas
        Hidalgo","url":"https://www.semanticscholar.org/author/40701017"},{"authorId":"1806183","name":"Luciana
        Arantes","url":"https://www.semanticscholar.org/author/1806183"},{"authorId":"1798389","name":"Pierre
        Sens","url":"https://www.semanticscholar.org/author/1798389"},{"authorId":"1997152","name":"Xavier
        Bonnaire","url":"https://www.semanticscholar.org/author/1997152"}],"doi":null,"isInfluential":false,"paperId":"febc9c802575befff00f951042971ad26f6d2e9a","title":"A
        Tabu-Based Cache to Improve Range Queries on Prefix Trees","url":"https://www.semanticscholar.org/paper/febc9c802575befff00f951042971ad26f6d2e9a","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"1742121","name":"Hongbin
        Luo","url":"https://www.semanticscholar.org/author/1742121"},{"authorId":"40259922","name":"Hongke
        Zhang","url":"https://www.semanticscholar.org/author/40259922"},{"authorId":"3598400","name":"Victor
        C. M. Leung","url":"https://www.semanticscholar.org/author/3598400"}],"doi":null,"isInfluential":false,"paperId":"3b45c2ca2124c6391b025ac0c13742de71410f3a","title":"An
        Approach for Scalable Proxy Mobile IPv6","url":"https://www.semanticscholar.org/paper/3b45c2ca2124c6391b025ac0c13742de71410f3a","venue":"2010
        7th IEEE Consumer Communications and Networking Conference","year":2010},{"arxivId":null,"authors":[{"authorId":"1728841","name":"Chyouhwa
        Chen","url":"https://www.semanticscholar.org/author/1728841"},{"authorId":"38469642","name":"Ching-Bang
        Yao","url":"https://www.semanticscholar.org/author/38469642"},{"authorId":"1942864","name":"So-Ming
        Liang","url":"https://www.semanticscholar.org/author/1942864"}],"doi":"10.1109/ISPA.2008.42","isInfluential":false,"paperId":"47af3da5e6a78c2a40843e377e021711213287c6","title":"Towards
        Practical Virtual Server-Based Load Balancing for Distributed Hash Tables","url":"https://www.semanticscholar.org/paper/47af3da5e6a78c2a40843e377e021711213287c6","venue":"2008
        IEEE International Symposium on Parallel and Distributed Processing with Applications","year":2008},{"arxivId":null,"authors":[{"authorId":"40192589","name":"Niteesh
        Kumar","url":"https://www.semanticscholar.org/author/40192589"},{"authorId":"1692664","name":"Sukumar
        Nandi","url":"https://www.semanticscholar.org/author/1692664"}],"doi":"10.1109/ICACCI.2013.6637277","isInfluential":false,"paperId":"e2c2af7fb607df205f99915fae25e1dee3e1b191","title":"DisTree:
        A scheme for DHT","url":"https://www.semanticscholar.org/paper/e2c2af7fb607df205f99915fae25e1dee3e1b191","venue":"2013
        International Conference on Advances in Computing, Communications and Informatics
        (ICACCI)","year":2013},{"arxivId":null,"authors":[{"authorId":"2766794","name":"Tomoya
        Kawakami","url":"https://www.semanticscholar.org/author/2766794"},{"authorId":"2761997","name":"Yoshimasa
        Ishi","url":"https://www.semanticscholar.org/author/2761997"},{"authorId":"2261468","name":"Tomoki
        Yoshihisa","url":"https://www.semanticscholar.org/author/2261468"},{"authorId":"39550577","name":"Yuuichi
        Teranishi","url":"https://www.semanticscholar.org/author/39550577"}],"doi":"10.1109/3PGCIC.2014.114","isInfluential":false,"paperId":"2f7c937f188aa5c204fb4fc4ed37e81c429b7511","title":"A
        Study of Robustness Enhancement Technique on P2P Sensor Data Stream Delivery
        System Using Distributed Hashing","url":"https://www.semanticscholar.org/paper/2f7c937f188aa5c204fb4fc4ed37e81c429b7511","venue":"2014
        Ninth International Conference on P2P, Parallel, Grid, Cloud and Internet
        Computing","year":2014},{"arxivId":null,"authors":[{"authorId":"49698016","name":"A.
        Swapna","url":"https://www.semanticscholar.org/author/49698016"},{"authorId":"39138777","name":"M.
        Krishna Reddy","url":"https://www.semanticscholar.org/author/39138777"}],"doi":null,"isInfluential":false,"paperId":"b5d528c1608b2bc08f158ace008f303928d8080b","title":"An
        Effective Search in Unstructured Peer-to-Peer Overlay Networks","url":"https://www.semanticscholar.org/paper/b5d528c1608b2bc08f158ace008f303928d8080b","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"50643844","name":"Kenichi
        Watanabe","url":"https://www.semanticscholar.org/author/50643844"},{"authorId":"1686798","name":"Tomoya
        Enokido","url":"https://www.semanticscholar.org/author/1686798"},{"authorId":"1682893","name":"Makoto
        Takizawa","url":"https://www.semanticscholar.org/author/1682893"},{"authorId":"1698613","name":"K.
        H. Kim","url":"https://www.semanticscholar.org/author/1698613"}],"doi":"10.1109/AINA.2005.134","isInfluential":false,"paperId":"04a92421345e59fb1824e727dd240b56b8bffd01","title":"Charge-based
        flooding algorithm for detecting multimedia objects in peer-to-peer overlay
        networks","url":"https://www.semanticscholar.org/paper/04a92421345e59fb1824e727dd240b56b8bffd01","venue":"19th
        International Conference on Advanced Information Networking and Applications
        (AINA''05) Volume 1 (AINA papers)","year":2005},{"arxivId":null,"authors":[{"authorId":"1925421","name":"Dianne
        Foreback","url":"https://www.semanticscholar.org/author/1925421"},{"authorId":"35057553","name":"Andreas
        Koutsopoulos","url":"https://www.semanticscholar.org/author/35057553"},{"authorId":"1712607","name":"Mikhail
        Nesterenko","url":"https://www.semanticscholar.org/author/1712607"},{"authorId":"1751016","name":"Christian
        Scheideler","url":"https://www.semanticscholar.org/author/1751016"},{"authorId":"3139332","name":"Thim
        Strothmann","url":"https://www.semanticscholar.org/author/3139332"}],"doi":null,"isInfluential":false,"paperId":"898687bbeae5b5f4092b21990ca136adde89b2c8","title":"Stabilizing
        Finite Churn in Peer-to-Peer Networks ?","url":"https://www.semanticscholar.org/paper/898687bbeae5b5f4092b21990ca136adde89b2c8","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"2571410","name":"Maarten
        van Steen","url":"https://www.semanticscholar.org/author/2571410"}],"doi":null,"isInfluential":false,"paperId":"9dbae30f8253791138e6c1031c5b7e4c7b321185","title":"Graph
        Theory and Complex Networks","url":"https://www.semanticscholar.org/paper/9dbae30f8253791138e6c1031c5b7e4c7b321185","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"2262977","name":"Giuseppe
        Rizzo","url":"https://www.semanticscholar.org/author/2262977"},{"authorId":"8424612","name":"Federico
        Di Gregorio","url":"https://www.semanticscholar.org/author/8424612"}],"doi":null,"isInfluential":false,"paperId":"c223ed83496026f178392a6e9eb731cb9e426efd","title":"Politecnico
        di Torino Porto Institutional Repository [ Proceeding ] A Peer-to-Peer Architecture
        For Distributed And Reliable RDF","url":"https://www.semanticscholar.org/paper/c223ed83496026f178392a6e9eb731cb9e426efd","venue":"","year":2018},{"arxivId":null,"authors":[{"authorId":"1727535","name":"Yosi
        Mass","url":"https://www.semanticscholar.org/author/1727535"},{"authorId":"1714472","name":"Yehoshua
        Sagiv","url":"https://www.semanticscholar.org/author/1714472"},{"authorId":"2851078","name":"Michal
        Shmueli-Scheuer","url":"https://www.semanticscholar.org/author/2851078"}],"doi":"10.1145/1935826.1935860","isInfluential":false,"paperId":"12e38663f695da6b636f41af52af7169956619d7","title":"KMV-peer:
        a robust and adaptive peer-selection algorithm","url":"https://www.semanticscholar.org/paper/12e38663f695da6b636f41af52af7169956619d7","venue":"WSDM","year":2011},{"arxivId":null,"authors":[{"authorId":"2533670","name":"Erkki
        Harjula","url":"https://www.semanticscholar.org/author/2533670"},{"authorId":"1852930","name":"Timo
        Koskela","url":"https://www.semanticscholar.org/author/1852930"},{"authorId":"1727678","name":"Mika
        Ylianttila","url":"https://www.semanticscholar.org/author/1727678"}],"doi":"10.1109/WCNC.2011.5779469","isInfluential":false,"paperId":"c3263d5f8f94e756ad14fca042973511c96e8d6b","title":"Comparing
        the performance and efficiency of two popular DHTs in interpersonal communication","url":"https://www.semanticscholar.org/paper/c3263d5f8f94e756ad14fca042973511c96e8d6b","venue":"2011
        IEEE Wireless Communications and Networking Conference","year":2011},{"arxivId":null,"authors":[{"authorId":"3738364","name":"Wenyuan
        Wang","url":"https://www.semanticscholar.org/author/3738364"},{"authorId":"47294008","name":"Zheng
        Zhang","url":"https://www.semanticscholar.org/author/47294008"}],"doi":"10.1145/2382756.2382772","isInfluential":true,"paperId":"0dcacdb4f540758bcf57fdfab44d3e9fa22d3ded","title":"Balanced
        partition scheme for distributed caching systems to solve load imbalance problems","url":"https://www.semanticscholar.org/paper/0dcacdb4f540758bcf57fdfab44d3e9fa22d3ded","venue":"ACM
        SIGSOFT Software Engineering Notes","year":2012},{"arxivId":null,"authors":[{"authorId":"39629715","name":"Vincent
        Leroy","url":"https://www.semanticscholar.org/author/39629715"}],"doi":null,"isInfluential":false,"paperId":"07a3239b2878ddf049e55a5073bef1ebda3a00f6","title":"Distributing
        Social Applications","url":"https://www.semanticscholar.org/paper/07a3239b2878ddf049e55a5073bef1ebda3a00f6","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"1687400","name":"Gustavo
        Alonso","url":"https://www.semanticscholar.org/author/1687400"},{"authorId":null,"name":"Prof","url":null},{"authorId":"1705257","name":"Stefano
        Ceri","url":"https://www.semanticscholar.org/author/1705257"},{"authorId":"3120866","name":"Marcel
        Gr\u00fcter","url":"https://www.semanticscholar.org/author/3120866"},{"authorId":null,"name":"Pe-Dro
        Pablo","url":null},{"authorId":null,"name":"Gomez Portilla","url":null},{"authorId":null,"name":"Andi
        Hao Zhou","url":null},{"authorId":"3234395","name":"Reto Schaeppi","url":"https://www.semanticscholar.org/author/3234395"},{"authorId":"50674886","name":"Christian
        Rupp","url":"https://www.semanticscholar.org/author/50674886"},{"authorId":"33591383","name":"Markus
        Haller","url":"https://www.semanticscholar.org/author/33591383"},{"authorId":null,"name":"Antonio
        Caliano","url":null},{"authorId":null,"name":"Axel Wathne","url":null},{"authorId":null,"name":"Jared
        Schirm Particularly","url":null},{"authorId":"2576245","name":"A. Bur","url":"https://www.semanticscholar.org/author/2576245"},{"authorId":null,"name":"Nicholas
        Born","url":null},{"authorId":"33301966","name":"Philip Werner Frey","url":"https://www.semanticscholar.org/author/33301966"},{"authorId":null,"name":"Patrick","url":null}],"doi":null,"isInfluential":false,"paperId":"dee02a2eb016bcc6becda4c60b873f06ef2fd3dc","title":"A
        Flexible System for Visual Service Composition","url":"https://www.semanticscholar.org/paper/dee02a2eb016bcc6becda4c60b873f06ef2fd3dc","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":null,"name":"Radha
        G. Dobale","url":null}],"doi":null,"isInfluential":false,"paperId":"420f85c96cea783f647bede4369cb76a08969e97","title":"Load
        Balancing in Cloud Ms","url":"https://www.semanticscholar.org/paper/420f85c96cea783f647bede4369cb76a08969e97","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"29893756","name":"Ngozi
        Silas","url":"https://www.semanticscholar.org/author/29893756"},{"authorId":"1689551","name":"Thomas
        Kunz","url":"https://www.semanticscholar.org/author/1689551"},{"authorId":"1750809","name":"Babak
        Esfandiari","url":"https://www.semanticscholar.org/author/1750809"}],"doi":null,"isInfluential":false,"paperId":"1d46f524f545010f32d579b1db1c3d8de6ffda41","title":"Evaluating
        chord over a hierarchical MANET","url":"https://www.semanticscholar.org/paper/1d46f524f545010f32d579b1db1c3d8de6ffda41","venue":"2017
        8th IEEE Annual Information Technology, Electronics and Mobile Communication
        Conference (IEMCON)","year":2017},{"arxivId":null,"authors":[{"authorId":"2697087","name":"Chuan-Feng
        Chiu","url":"https://www.semanticscholar.org/author/2697087"},{"authorId":"3300815","name":"Steen
        J. Hsu","url":"https://www.semanticscholar.org/author/3300815"},{"authorId":"38397259","name":"Sen-Ren
        Jan","url":"https://www.semanticscholar.org/author/38397259"}],"doi":null,"isInfluential":false,"paperId":"18d38c20505ac17ec8c78f19fc1b3015c3265f07","title":"An
        Intelligent Home Environment based on Service Planning over Peer-to-Peer Overlay
        Network","url":"https://www.semanticscholar.org/paper/18d38c20505ac17ec8c78f19fc1b3015c3265f07","venue":"JSW","year":2008},{"arxivId":null,"authors":[{"authorId":"36552590","name":"S.
        Prince Mary","url":"https://www.semanticscholar.org/author/36552590"},{"authorId":"50503289","name":"G.
        Sheela Rani","url":"https://www.semanticscholar.org/author/50503289"}],"doi":null,"isInfluential":false,"paperId":"dc455ad0a65ef2527df84c21700c6d8243698a27","title":"Survey
        on Novel Load Rebalancing for Distributed File Systems","url":"https://www.semanticscholar.org/paper/dc455ad0a65ef2527df84c21700c6d8243698a27","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"27573489","name":"Jouni
        M\u00e4enp\u00e4\u00e4","url":"https://www.semanticscholar.org/author/27573489"},{"authorId":"2916124","name":"Jaime
        Jimenez Bolonio","url":"https://www.semanticscholar.org/author/2916124"}],"doi":"10.1109/WCNC.2010.5506653","isInfluential":false,"paperId":"4d1a90c94a805555cc119915ff18f1f400b98703","title":"Performance
        of REsource LOcation and Discovery (RELOAD) on Mobile Phones","url":"https://www.semanticscholar.org/paper/4d1a90c94a805555cc119915ff18f1f400b98703","venue":"2010
        IEEE Wireless Communication and Networking Conference","year":2010},{"arxivId":null,"authors":[{"authorId":"1712771","name":"Hari
        Balakrishnan","url":"https://www.semanticscholar.org/author/1712771"},{"authorId":"1920780","name":"Karthik
        Lakshminarayanan","url":"https://www.semanticscholar.org/author/1920780"},{"authorId":"1699297","name":"Sylvia
        Ratnasamy","url":"https://www.semanticscholar.org/author/1699297"},{"authorId":"1753148","name":"Scott
        Shenker","url":"https://www.semanticscholar.org/author/1753148"},{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"},{"authorId":"1756078","name":"Michael
        Walfish","url":"https://www.semanticscholar.org/author/1756078"}],"doi":"10.1145/1015467.1015505","isInfluential":false,"paperId":"0d579708c77a490de0e132876f8632362797b511","title":"A
        layered naming architecture for the internet","url":"https://www.semanticscholar.org/paper/0d579708c77a490de0e132876f8632362797b511","venue":"SIGCOMM","year":2004},{"arxivId":null,"authors":[{"authorId":"3346277","name":"Hsueh-Yi
        Chung","url":"https://www.semanticscholar.org/author/3346277"},{"authorId":"2172801","name":"Che-Wei
        Chang","url":"https://www.semanticscholar.org/author/2172801"},{"authorId":"1681450","name":"Hung-Chang
        Hsiao","url":"https://www.semanticscholar.org/author/1681450"},{"authorId":"2831286","name":"Yu-Chang
        Chao","url":"https://www.semanticscholar.org/author/2831286"}],"doi":"10.1109/CLUSTER.2012.31","isInfluential":true,"paperId":"c84fc57764fcb22ab43e87a569b8a426d99df0a1","title":"The
        Load Rebalancing Problem in Distributed File Systems","url":"https://www.semanticscholar.org/paper/c84fc57764fcb22ab43e87a569b8a426d99df0a1","venue":"2012
        IEEE International Conference on Cluster Computing","year":2012},{"arxivId":null,"authors":[{"authorId":"38711739","name":"Mehdi
        Mani","url":"https://www.semanticscholar.org/author/38711739"},{"authorId":"2054506","name":"Winston
        Khoon Guan Seah","url":"https://www.semanticscholar.org/author/2054506"},{"authorId":"1737867","name":"No\u00ebl
        Crespi","url":"https://www.semanticscholar.org/author/1737867"},{"authorId":"2633697","name":"Reza
        Farahbakhsh","url":"https://www.semanticscholar.org/author/2633697"}],"doi":"10.1007/s12083-012-0144-8","isInfluential":true,"paperId":"d247d9f6f6533e4d1597a1a2a73c0e836cbe8159","title":"P2P
        IP Telephony over wireless ad-hoc networks - A smart approach on super node
        admission","url":"https://www.semanticscholar.org/paper/d247d9f6f6533e4d1597a1a2a73c0e836cbe8159","venue":"Peer-to-Peer
        Networking and Applications","year":2012},{"arxivId":null,"authors":[{"authorId":"2115393","name":"Xiao-Jin
        Ren","url":"https://www.semanticscholar.org/author/2115393"},{"authorId":"48424419","name":"Zhi-Min
        Gu","url":"https://www.semanticscholar.org/author/48424419"},{"authorId":"30674222","name":"Xiao-Guang
        Ding","url":"https://www.semanticscholar.org/author/30674222"},{"authorId":"31233823","name":"Zhao-Lei
        Duan","url":"https://www.semanticscholar.org/author/31233823"}],"doi":null,"isInfluential":false,"paperId":"15e80c4f90da7462889344453706fc9e09e0417c","title":"Effectively
        Decreasing the Maintenance Overhead of Highly Dynamic Chord System","url":"https://www.semanticscholar.org/paper/15e80c4f90da7462889344453706fc9e09e0417c","venue":"2008
        10th International Conference on Advanced Communication Technology","year":2008},{"arxivId":null,"authors":[{"authorId":"46395033","name":"Yuehua
        Wang","url":"https://www.semanticscholar.org/author/46395033"},{"authorId":"1685610","name":"Ling
        Liu","url":"https://www.semanticscholar.org/author/1685610"},{"authorId":"1682055","name":"Calton
        Pu","url":"https://www.semanticscholar.org/author/1682055"}],"doi":"10.1007/s11036-011-0348-9","isInfluential":true,"paperId":"8ab13c2b561f7c7c45a4f6f8314552668db01706","title":"Scaling
        Group Communication Services with Self-adaptive and Utility-driven Message
        Routing","url":"https://www.semanticscholar.org/paper/8ab13c2b561f7c7c45a4f6f8314552668db01706","venue":"MONET","year":2012},{"arxivId":null,"authors":[{"authorId":"1802864","name":"Hyoungshick
        Kim","url":"https://www.semanticscholar.org/author/1802864"},{"authorId":"2381794","name":"Ross
        J. Anderson","url":"https://www.semanticscholar.org/author/2381794"}],"doi":"10.1109/JSYST.2012.2221851","isInfluential":false,"paperId":"742a589e36755c5335530372df7d74fa9b6dfae5","title":"An
        Experimental Evaluation of Robustness of Networks","url":"https://www.semanticscholar.org/paper/742a589e36755c5335530372df7d74fa9b6dfae5","venue":"IEEE
        Systems Journal","year":2013},{"arxivId":null,"authors":[{"authorId":"2558608","name":"Xucheng
        Luo","url":"https://www.semanticscholar.org/author/2558608"},{"authorId":"7477697","name":"Zhiguang
        Qin","url":"https://www.semanticscholar.org/author/7477697"},{"authorId":"2044550","name":"Ji
        Geng","url":"https://www.semanticscholar.org/author/2044550"},{"authorId":"46740709","name":"Chunjiang
        Wu","url":"https://www.semanticscholar.org/author/46740709"}],"doi":null,"isInfluential":true,"paperId":"6086f990b6554e43604ed1f1a671f77575aaf298","title":"P2PFAIR:
        Fair Exchange in P2P Sharing System without Dedicated TTP","url":"https://www.semanticscholar.org/paper/6086f990b6554e43604ed1f1a671f77575aaf298","venue":"2006
        First International Conference on Communications and Networking in China","year":2006},{"arxivId":null,"authors":[{"authorId":"1802864","name":"Hyoungshick
        Kim","url":"https://www.semanticscholar.org/author/1802864"},{"authorId":"1809148","name":"Jae
        Hoon Jeong","url":"https://www.semanticscholar.org/author/1809148"}],"doi":"10.1016/j.comnet.2011.07.009","isInfluential":false,"paperId":"01512c7c1959c5be4abf322cd2c0d62105bb1f80","title":"RAD:
        Recipient-anonymous data delivery based on public routing proxies","url":"https://www.semanticscholar.org/paper/01512c7c1959c5be4abf322cd2c0d62105bb1f80","venue":"Computer
        Networks","year":2011},{"arxivId":null,"authors":[{"authorId":"1846129","name":"Fabrizio
        Falchi","url":"https://www.semanticscholar.org/author/1846129"},{"authorId":"2209975","name":"Claudio
        Gennaro","url":"https://www.semanticscholar.org/author/2209975"},{"authorId":"3187322","name":"Fausto
        Rabitti","url":"https://www.semanticscholar.org/author/3187322"},{"authorId":"1701332","name":"Pavel
        Zezula","url":"https://www.semanticscholar.org/author/1701332"}],"doi":"10.1145/1366804.1366910","isInfluential":true,"paperId":"7c6af64fefa5a4daf62ac4fde7fbe9803d9d850d","title":"A
        distributed incremental nearest neighbor algorithm","url":"https://www.semanticscholar.org/paper/7c6af64fefa5a4daf62ac4fde7fbe9803d9d850d","venue":"Infoscale","year":2007},{"arxivId":null,"authors":[{"authorId":"1740390","name":"Duc
        A. Tran","url":"https://www.semanticscholar.org/author/1740390"},{"authorId":"40647709","name":"Thinh
        P. Nguyen","url":"https://www.semanticscholar.org/author/40647709"}],"doi":"10.1109/COLCOM.2007.4553856","isInfluential":true,"paperId":"32ace502521da7f5b980c66090bc7bd571bdadf3","title":"A
        random projection approach to subscription covering detection in publish/subscribe
        systems","url":"https://www.semanticscholar.org/paper/32ace502521da7f5b980c66090bc7bd571bdadf3","venue":"2007
        International Conference on Collaborative Computing: Networking, Applications
        and Worksharing (CollaborateCom 2007)","year":2007},{"arxivId":null,"authors":[{"authorId":"39033094","name":"Changjun
        Jiang","url":"https://www.semanticscholar.org/author/39033094"},{"authorId":"34368858","name":"Zhijun
        Ding","url":"https://www.semanticscholar.org/author/34368858"},{"authorId":"2721319","name":"Pengwei
        Wang","url":"https://www.semanticscholar.org/author/2721319"},{"authorId":"48728848","name":"Haichun
        Sun","url":"https://www.semanticscholar.org/author/48728848"},{"authorId":"46373665","name":"Bo
        Yuan","url":"https://www.semanticscholar.org/author/46373665"},{"authorId":"49990459","name":"Yuan
        He","url":"https://www.semanticscholar.org/author/49990459"},{"authorId":"1759982","name":"ChunGang
        Yan","url":"https://www.semanticscholar.org/author/1759982"},{"authorId":"47665957","name":"Hongzhong
        Chen","url":"https://www.semanticscholar.org/author/47665957"}],"doi":"10.1109/SOCA.2013.49","isInfluential":false,"paperId":"a86fced8d268a7dd32d895735c7864155604a31e","title":"An
        Indexing Network Model for Information Services and Its Applications","url":"https://www.semanticscholar.org/paper/a86fced8d268a7dd32d895735c7864155604a31e","venue":"2013
        IEEE 6th International Conference on Service-Oriented Computing and Applications","year":2013},{"arxivId":null,"authors":[{"authorId":"2553718","name":"Sergej
        Zerr","url":"https://www.semanticscholar.org/author/2553718"},{"authorId":"3251613","name":"Odysseas
        Papapetrou","url":"https://www.semanticscholar.org/author/3251613"},{"authorId":"1703092","name":"Elena
        Demidova","url":"https://www.semanticscholar.org/author/1703092"}],"doi":null,"isInfluential":true,"paperId":"7dc04ee81dd93cc3e0a6651784e83fa3fb9af24f","title":"HEALTH+Z:
        Confidential Provider Selection in Collaborative Healthcare P2P Networks","url":"https://www.semanticscholar.org/paper/7dc04ee81dd93cc3e0a6651784e83fa3fb9af24f","venue":"PIR@SIGIR","year":2014},{"arxivId":null,"authors":[{"authorId":"1681216","name":"Alan
        Davoust","url":"https://www.semanticscholar.org/author/1681216"},{"authorId":"1750809","name":"Babak
        Esfandiari","url":"https://www.semanticscholar.org/author/1750809"}],"doi":null,"isInfluential":false,"paperId":"5a7aba405cfc9270c422b6805c25c0cdbae31c7e","title":"Towards
        Semantically Enhanced File-Sharing","url":"https://www.semanticscholar.org/paper/5a7aba405cfc9270c422b6805c25c0cdbae31c7e","venue":"JSW","year":2009},{"arxivId":"1404.2632","authors":[{"authorId":"40067314","name":"Saeed
        Javanmardi","url":"https://www.semanticscholar.org/author/40067314"},{"authorId":"1758930","name":"Mohammad
        Shojafar","url":"https://www.semanticscholar.org/author/1758930"},{"authorId":"2078025","name":"Shahdad
        Shariatmadari","url":"https://www.semanticscholar.org/author/2078025"},{"authorId":"2826265","name":"Sima
        S. Ahrabi","url":"https://www.semanticscholar.org/author/2826265"}],"doi":"10.1504/IJGUC.2015.066397","isInfluential":false,"paperId":"a0ab057fe98672dd82cf97b4c1bf9986399e07d0","title":"FRTRUST:
        a fuzzy reputation based model for trust management in semantic P2P grids","url":"https://www.semanticscholar.org/paper/a0ab057fe98672dd82cf97b4c1bf9986399e07d0","venue":"IJGUC","year":2015},{"arxivId":null,"authors":[{"authorId":"2103225","name":"Jungha
        Paik","url":"https://www.semanticscholar.org/author/2103225"},{"authorId":"1734251","name":"Dong
        Hoon Lee","url":"https://www.semanticscholar.org/author/1734251"}],"doi":"10.1016/j.comcom.2015.05.013","isInfluential":true,"paperId":"149cef342d0e09ab63f3c00b2ae0c97f9d6bfd4b","title":"Scalable
        signaling protocol for Web real-time communication based on a distributed
        hash table","url":"https://www.semanticscholar.org/paper/149cef342d0e09ab63f3c00b2ae0c97f9d6bfd4b","venue":"Computer
        Communications","year":2015},{"arxivId":null,"authors":[{"authorId":"40701017","name":"Nicolas
        Hidalgo","url":"https://www.semanticscholar.org/author/40701017"},{"authorId":"1806183","name":"Luciana
        Arantes","url":"https://www.semanticscholar.org/author/1806183"},{"authorId":"1798389","name":"Pierre
        Sens","url":"https://www.semanticscholar.org/author/1798389"},{"authorId":"1997152","name":"Xavier
        Bonnaire","url":"https://www.semanticscholar.org/author/1997152"}],"doi":"10.1109/ICPADS.2011.18","isInfluential":false,"paperId":"8514985985962d3c36d28467edce4ee44f75564a","title":"A
        Tabu Based Cache to Improve Latency and Load Balancing on Prefix Trees","url":"https://www.semanticscholar.org/paper/8514985985962d3c36d28467edce4ee44f75564a","venue":"2011
        IEEE 17th International Conference on Parallel and Distributed Systems","year":2011},{"arxivId":null,"authors":[{"authorId":"3201343","name":"George
        Tsatsanifos","url":"https://www.semanticscholar.org/author/3201343"},{"authorId":"1760642","name":"Dimitris
        Sacharidis","url":"https://www.semanticscholar.org/author/1760642"},{"authorId":"1692933","name":"Timos
        K. Sellis","url":"https://www.semanticscholar.org/author/1692933"}],"doi":"10.5441/002/edbt.2014.25","isInfluential":false,"paperId":"dbcbdec1c13493de20888c5cf59e091e776e44a4","title":"RIPPLE:
        A Scalable Framework for Distributed Processing of Rank Queries","url":"https://www.semanticscholar.org/paper/dbcbdec1c13493de20888c5cf59e091e776e44a4","venue":"EDBT","year":2014},{"arxivId":null,"authors":[{"authorId":"1753489","name":"Zhongmei
        Yao","url":"https://www.semanticscholar.org/author/1753489"},{"authorId":"3310507","name":"Riccardo
        Bettati","url":"https://www.semanticscholar.org/author/3310507"},{"authorId":"1717914","name":"Jennifer
        L. Welch","url":"https://www.semanticscholar.org/author/1717914"},{"authorId":null,"name":"Narasimha
        Annapareddy","url":null}],"doi":null,"isInfluential":true,"paperId":"aa63d4c7ad3818c684797c7688962686782cabff","title":"Understanding
        Churn in Decentralized Peer-to-peer Networks","url":"https://www.semanticscholar.org/paper/aa63d4c7ad3818c684797c7688962686782cabff","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"49753639","name":"William
        Conner","url":"https://www.semanticscholar.org/author/49753639"},{"authorId":"1709786","name":"Arun
        Iyengar","url":"https://www.semanticscholar.org/author/1709786"},{"authorId":"2913562","name":"Thomas
        A. Mikalsen","url":"https://www.semanticscholar.org/author/2913562"},{"authorId":"1797961","name":"Isabelle
        Rouvellou","url":"https://www.semanticscholar.org/author/1797961"},{"authorId":"1688353","name":"Klara
        Nahrstedt","url":"https://www.semanticscholar.org/author/1688353"}],"doi":"10.1145/1526709.1526829","isInfluential":false,"paperId":"9be7956b32e3a89c08757b51d75474e7ea392e1f","title":"A
        trust management framework for service-oriented environments","url":"https://www.semanticscholar.org/paper/9be7956b32e3a89c08757b51d75474e7ea392e1f","venue":"WWW","year":2009},{"arxivId":null,"authors":[{"authorId":"1680676","name":"Sonia
        Fahmy","url":"https://www.semanticscholar.org/author/1680676"},{"authorId":"1895536","name":"Minseok
        Kwon","url":"https://www.semanticscholar.org/author/1895536"}],"doi":"10.1109/ICNP.2003.1249757","isInfluential":false,"paperId":"8b089909bfaba4870ffe1a4e2cff17b01d314194","title":"Characterizing
        Overlay Multicast Networks","url":"https://www.semanticscholar.org/paper/8b089909bfaba4870ffe1a4e2cff17b01d314194","venue":"ICNP","year":2003},{"arxivId":null,"authors":[{"authorId":"2219928","name":"Krishna
        Kishore Dhara","url":"https://www.semanticscholar.org/author/2219928"},{"authorId":"1708848","name":"Salman
        Baset","url":"https://www.semanticscholar.org/author/1708848"}],"doi":"10.1109/PERCOMW.2006.46","isInfluential":true,"paperId":"0db13bb2b38cadfad536c11d8b83eb1b7abd6399","title":"Dynamic
        peer-to-peer overlays for voice systems","url":"https://www.semanticscholar.org/paper/0db13bb2b38cadfad536c11d8b83eb1b7abd6399","venue":"Fourth
        Annual IEEE International Conference on Pervasive Computing and Communications
        Workshops (PERCOMW''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"38952397","name":"Rolando
        Blanco","url":"https://www.semanticscholar.org/author/38952397"},{"authorId":"50722779","name":"Nabeel
        Ahmed","url":"https://www.semanticscholar.org/author/50722779"},{"authorId":"2460254","name":"David
        Hadaller","url":"https://www.semanticscholar.org/author/2460254"},{"authorId":"50202151","name":"L.
        G. Alex Sung","url":"https://www.semanticscholar.org/author/50202151"},{"authorId":null,"name":"LI
        HERMAN","url":null},{"authorId":"33676999","name":"Mohamed Abdel-Kawy Mohamed
        Ali Soliman","url":"https://www.semanticscholar.org/author/33676999"},{"authorId":"1759787","name":"David
        R. Cheriton","url":"https://www.semanticscholar.org/author/1759787"}],"doi":null,"isInfluential":false,"paperId":"1f8340db65b7cfb7206d7c95cf78774ccb19b848","title":"A
        Survey of Data Management in Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/1f8340db65b7cfb7206d7c95cf78774ccb19b848","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"3009781","name":"Tiejun
        Wu","url":"https://www.semanticscholar.org/author/3009781"},{"authorId":"1716059","name":"Maozhen
        Li","url":"https://www.semanticscholar.org/author/1716059"},{"authorId":"1886373","name":"Mahesh
        Ponraj","url":"https://www.semanticscholar.org/author/1886373"},{"authorId":"1784236","name":"Man
        Qi","url":"https://www.semanticscholar.org/author/1784236"}],"doi":"10.1109/NABIC.2009.5393747","isInfluential":false,"paperId":"ded86ce37b8c618b024a577a09735c4863aaeddd","title":"A
        genetic algorithm based peer selection strategy for BitTorrent networks","url":"https://www.semanticscholar.org/paper/ded86ce37b8c618b024a577a09735c4863aaeddd","venue":"2009
        World Congress on Nature & Biologically Inspired Computing (NaBIC)","year":2009},{"arxivId":null,"authors":[{"authorId":"2045601","name":"Zhuhua
        Cai","url":"https://www.semanticscholar.org/author/2045601"},{"authorId":"2042672","name":"Ruichuan
        Chen","url":"https://www.semanticscholar.org/author/2042672"},{"authorId":"2134425","name":"Jianqiao
        Feng","url":"https://www.semanticscholar.org/author/2134425"},{"authorId":"37136435","name":"Cong
        Tang","url":"https://www.semanticscholar.org/author/37136435"},{"authorId":"2368825","name":"Zhong
        Chen","url":"https://www.semanticscholar.org/author/2368825"},{"authorId":"2815578","name":"Jian-bin
        Hu","url":"https://www.semanticscholar.org/author/2815578"}],"doi":"10.1145/1529282.1529288","isInfluential":true,"paperId":"9fb209bfdecc6d95ef3f36673777398a5cfe2d43","title":"A
        holistic mechanism against file pollution in peer-to-peer networks","url":"https://www.semanticscholar.org/paper/9fb209bfdecc6d95ef3f36673777398a5cfe2d43","venue":"SAC","year":2009},{"arxivId":null,"authors":[{"authorId":"1728568","name":"Jianyong
        Chen","url":"https://www.semanticscholar.org/author/1728568"},{"authorId":"2122994","name":"Haijian
        Long","url":"https://www.semanticscholar.org/author/2122994"},{"authorId":"2503598","name":"Leijuan
        Liang","url":"https://www.semanticscholar.org/author/2503598"}],"doi":"10.1109/ISCSCT.2008.110","isInfluential":false,"paperId":"4bfbec3af95bc848ba11328ae628718d99f6339d","title":"Distributed
        Hot Spots Caching Mechanism for Queries with Popular Distribution","url":"https://www.semanticscholar.org/paper/4bfbec3af95bc848ba11328ae628718d99f6339d","venue":"2008
        International Symposium on Computer Science and Computational Technology","year":2008},{"arxivId":null,"authors":[{"authorId":"47400527","name":"Varun
        Razdan","url":"https://www.semanticscholar.org/author/47400527"},{"authorId":"31635215","name":"Aman
        Modi","url":"https://www.semanticscholar.org/author/31635215"},{"authorId":"32299961","name":"Shruti
        Dumbare","url":"https://www.semanticscholar.org/author/32299961"},{"authorId":"46353299","name":"Rahul
        Jobanputra","url":"https://www.semanticscholar.org/author/46353299"}],"doi":null,"isInfluential":false,"paperId":"987fef0c76ba952fb41bc7a2b25564feb2a2dd17","title":"YCSB+T:
        Benchmark for transactional databases and performance","url":"https://www.semanticscholar.org/paper/987fef0c76ba952fb41bc7a2b25564feb2a2dd17","venue":"2017
        International conference of Electronics, Communication and Aerospace Technology
        (ICECA)","year":2017},{"arxivId":null,"authors":[{"authorId":"3128221","name":"Zakwan
        Al-Arnaout","url":"https://www.semanticscholar.org/author/3128221"},{"authorId":"48889507","name":"Qiang
        Fu","url":"https://www.semanticscholar.org/author/48889507"},{"authorId":"40073871","name":"Marcus
        Frean","url":"https://www.semanticscholar.org/author/40073871"}],"doi":"10.1109/WoWMoM.2014.6919008","isInfluential":false,"paperId":"423a8478a0b7288565b53f79b8b5fc75724da331","title":"On
        the local popularity impact on object replica placement over WMNs","url":"https://www.semanticscholar.org/paper/423a8478a0b7288565b53f79b8b5fc75724da331","venue":"Proceeding
        of IEEE International Symposium on a World of Wireless, Mobile and Multimedia
        Networks 2014","year":2014},{"arxivId":null,"authors":[{"authorId":"2827559","name":"Zoi
        Kaoudi","url":"https://www.semanticscholar.org/author/2827559"},{"authorId":"1746733","name":"Manolis
        Koubarakis","url":"https://www.semanticscholar.org/author/1746733"}],"doi":"10.1007/s13740-013-0018-0","isInfluential":false,"paperId":"16d872df1d07fe43c87d41a9593792d2b361f5b1","title":"Distributed
        RDFS Reasoning Over Structured Overlay Networks","url":"https://www.semanticscholar.org/paper/16d872df1d07fe43c87d41a9593792d2b361f5b1","venue":"Journal
        on Data Semantics","year":2013},{"arxivId":null,"authors":[{"authorId":"1727678","name":"Mika
        Ylianttila","url":"https://www.semanticscholar.org/author/1727678"},{"authorId":"2533670","name":"Erkki
        Harjula","url":"https://www.semanticscholar.org/author/2533670"},{"authorId":"1852930","name":"Timo
        Koskela","url":"https://www.semanticscholar.org/author/1852930"},{"authorId":"1704694","name":"Jaakko
        J. Sauvola","url":"https://www.semanticscholar.org/author/1704694"}],"doi":null,"isInfluential":false,"paperId":"8b585c1b5c636808bb60a5670242ace974627975","title":"Analytical
        Model for Mobile P2P Data Management Systems","url":"https://www.semanticscholar.org/paper/8b585c1b5c636808bb60a5670242ace974627975","venue":"2008
        5th IEEE Consumer Communications and Networking Conference","year":2008},{"arxivId":null,"authors":[{"authorId":"48958451","name":"Mei
        Wang","url":"https://www.semanticscholar.org/author/48958451"},{"authorId":"3004972","name":"Chang
        Kong","url":"https://www.semanticscholar.org/author/3004972"},{"authorId":"7495516","name":"Wentao
        Dong","url":"https://www.semanticscholar.org/author/7495516"},{"authorId":"2044876","name":"Qiuming
        Luo","url":"https://www.semanticscholar.org/author/2044876"}],"doi":null,"isInfluential":false,"paperId":"edc74042926d330e38634389cb19b7c969a7cb4f","title":"Managing
        the Data Replicas Efficiently in Time-Zoned Multilayer Chord","url":"https://www.semanticscholar.org/paper/edc74042926d330e38634389cb19b7c969a7cb4f","venue":"2012
        11th International Symposium on Distributed Computing and Applications to
        Business, Engineering & Science","year":2012},{"arxivId":null,"authors":[{"authorId":"2904045","name":"Adetola
        Oredope","url":"https://www.semanticscholar.org/author/2904045"},{"authorId":"1816294","name":"Antonio
        Liotta","url":"https://www.semanticscholar.org/author/1816294"},{"authorId":"46747667","name":"I.
        Roper","url":"https://www.semanticscholar.org/author/46747667"},{"authorId":"3053651","name":"Jason
        Morphett","url":"https://www.semanticscholar.org/author/3053651"}],"doi":null,"isInfluential":false,"paperId":"ea04db7dfdc21cbea4b715132534f4633d0f4f4e","title":"Peer-to-Peer
        Session Initiation Protocol in Highly Volatile Environments","url":"https://www.semanticscholar.org/paper/ea04db7dfdc21cbea4b715132534f4633d0f4f4e","venue":"2008
        The Second International Conference on Next Generation Mobile Applications,
        Services, and Technologies","year":2008},{"arxivId":null,"authors":[{"authorId":"7307611","name":"Weixia
        Chen","url":"https://www.semanticscholar.org/author/7307611"},{"authorId":null,"name":"W
        Parhami","url":null}],"doi":null,"isInfluential":false,"paperId":"f0deee2e2ff31bf329295d7fe9c899570b062bf9","title":"Title
        Interconnection Networks with Hypercubic Skeletons Permalink","url":"https://www.semanticscholar.org/paper/f0deee2e2ff31bf329295d7fe9c899570b062bf9","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"1680676","name":"Sonia
        Fahmy","url":"https://www.semanticscholar.org/author/1680676"},{"authorId":"1895536","name":"Minseok
        Kwon","url":"https://www.semanticscholar.org/author/1895536"}],"doi":"10.1145/1279660.1279670","isInfluential":false,"paperId":"54f3ae98b4f4df583e4804cb40b5aba16e6743d1","title":"Characterizing
        Overlay Multicast Networks and Their Costs","url":"https://www.semanticscholar.org/paper/54f3ae98b4f4df583e4804cb40b5aba16e6743d1","venue":"IEEE/ACM
        Transactions on Networking","year":2007},{"arxivId":null,"authors":[],"doi":null,"isInfluential":false,"paperId":"0a38a263e82921e01d452cf9230806704f693588","title":"Avoidance
        of Duplicate Messages in P2p Network Using Cycle Minimization","url":"https://www.semanticscholar.org/paper/0a38a263e82921e01d452cf9230806704f693588","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"49159394","name":"Kenji
        Kaneda","url":"https://www.semanticscholar.org/author/49159394"},{"authorId":"1724468","name":"Kenjiro
        Taura","url":"https://www.semanticscholar.org/author/1724468"},{"authorId":"1748361","name":"Akinori
        Yonezawa","url":"https://www.semanticscholar.org/author/1748361"}],"doi":"10.1109/CCGrid.2004.1336697","isInfluential":false,"paperId":"9bc0806fc38d99801aa707abcd7a5d6d6add4165","title":"Routing
        and resource discovery in Phoenix Grid-enabled message passing library","url":"https://www.semanticscholar.org/paper/9bc0806fc38d99801aa707abcd7a5d6d6add4165","venue":"IEEE
        International Symposium on Cluster Computing and the Grid, 2004. CCGrid 2004.","year":2004},{"arxivId":null,"authors":[{"authorId":"50471004","name":"Dragan
        Milic","url":"https://www.semanticscholar.org/author/50471004"},{"authorId":null,"name":"ERROR
        RESILIENT","url":null}],"doi":null,"isInfluential":true,"paperId":"d7c7fc5e30a03a55f4bd5c485161e2477352576a","title":"Error
        Resilient and Robust Overlay Networks Inauguraldissertation Der Philosophisch-naturwissenschaftlichen
        Fakult\u00e4t Der Universit\u00e4t Bern Vorgelegt Von","url":"https://www.semanticscholar.org/paper/d7c7fc5e30a03a55f4bd5c485161e2477352576a","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"2149292","name":"Martin
        Stiemerling","url":"https://www.semanticscholar.org/author/2149292"}],"doi":null,"isInfluential":false,"paperId":"384b69a7056c18d4a6a25ab60de4365a067a220d","title":"Cooperative
        Internet Access in Resource Constrained Environments","url":"https://www.semanticscholar.org/paper/384b69a7056c18d4a6a25ab60de4365a067a220d","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"1710379","name":"Azzedine
        Boukerche","url":"https://www.semanticscholar.org/author/1710379"},{"authorId":"1749554","name":"Anis
        Zarrad","url":"https://www.semanticscholar.org/author/1749554"},{"authorId":"1719492","name":"Regina
        Borges de Araujo","url":"https://www.semanticscholar.org/author/1719492"}],"doi":"10.1109/AICCSA.2008.4493679","isInfluential":false,"paperId":"8078dc8ff4f6e7a0e17ba9034b4117abb0565f63","title":"A
        heterogeneous network architecture based Gnutella for mobile emergency preparedness
        applications","url":"https://www.semanticscholar.org/paper/8078dc8ff4f6e7a0e17ba9034b4117abb0565f63","venue":"2008
        IEEE/ACS International Conference on Computer Systems and Applications","year":2008},{"arxivId":null,"authors":[{"authorId":"8015515","name":"Xuezheng
        Liu","url":"https://www.semanticscholar.org/author/8015515"},{"authorId":"8665783","name":"Wei
        Lin","url":"https://www.semanticscholar.org/author/8665783"},{"authorId":"1679670","name":"Aimin
        Pan","url":"https://www.semanticscholar.org/author/1679670"},{"authorId":"47294008","name":"Zheng
        Zhang","url":"https://www.semanticscholar.org/author/47294008"}],"doi":null,"isInfluential":false,"paperId":"80092f707ef876b38912a3880f593b817b0aa4b5","title":"WiDS
        Checker: Combating Bugs in Distributed Systems","url":"https://www.semanticscholar.org/paper/80092f707ef876b38912a3880f593b817b0aa4b5","venue":"NSDI","year":2007},{"arxivId":null,"authors":[{"authorId":"1883004","name":"Marcin
        Bienkowski","url":"https://www.semanticscholar.org/author/1883004"},{"authorId":"1726087","name":"Andr\u00e9
        Brinkmann","url":"https://www.semanticscholar.org/author/1726087"},{"authorId":"1692148","name":"Marek
        Klonowski","url":"https://www.semanticscholar.org/author/1692148"},{"authorId":"2455910","name":"Miroslaw
        Korzeniowski","url":"https://www.semanticscholar.org/author/2455910"}],"doi":"10.1007/978-3-642-17653-1_18","isInfluential":false,"paperId":"60122d9f60caa78360977b0327c1fb80bde7eb64","title":"SkewCCC+:
        A Heterogeneous Distributed Hash Table","url":"https://www.semanticscholar.org/paper/60122d9f60caa78360977b0327c1fb80bde7eb64","venue":"OPODIS","year":2010},{"arxivId":null,"authors":[{"authorId":"34653108","name":"Arijit
        Ganguly","url":"https://www.semanticscholar.org/author/34653108"},{"authorId":"2721383","name":"P.
        Oscar Boykin","url":"https://www.semanticscholar.org/author/2721383"},{"authorId":"2174353","name":"David
        Wolinsky","url":"https://www.semanticscholar.org/author/2174353"},{"authorId":"1680675","name":"Renato
        J. O. Figueiredo","url":"https://www.semanticscholar.org/author/1680675"}],"doi":"10.1007/s10586-009-0075-1","isInfluential":true,"paperId":"13e2a6fd7b4754da17f0af7c0e20201ae6cf26ae","title":"Improving
        peer connectivity in wide-area overlays of virtual workstations","url":"https://www.semanticscholar.org/paper/13e2a6fd7b4754da17f0af7c0e20201ae6cf26ae","venue":"Cluster
        Computing","year":2008},{"arxivId":null,"authors":[{"authorId":"48692453","name":"Jiang
        Hao","url":"https://www.semanticscholar.org/author/48692453"},{"authorId":"48459329","name":"Zhang
        Li","url":"https://www.semanticscholar.org/author/48459329"}],"doi":null,"isInfluential":false,"paperId":"0381372717d1b9eda5b5c7bedf729427940e1a2d","title":"Design
        of Distributed Main Memory Database Based on an Improved P2P Routing Algorithm","url":"https://www.semanticscholar.org/paper/0381372717d1b9eda5b5c7bedf729427940e1a2d","venue":"2009
        First International Conference on Information Science and Engineering","year":2009},{"arxivId":null,"authors":[{"authorId":"37307272","name":"Ping-I
        Chou","url":"https://www.semanticscholar.org/author/37307272"},{"authorId":"38244340","name":"Pangfeng
        Liu","url":"https://www.semanticscholar.org/author/38244340"}],"doi":"10.1109/ICPADS.2009.41","isInfluential":true,"paperId":"218ee40cf4e5dc76e3af1a2417fd58c6e8fe11a4","title":"A
        Study of Group Size Effects on a Hybrid P2P System","url":"https://www.semanticscholar.org/paper/218ee40cf4e5dc76e3af1a2417fd58c6e8fe11a4","venue":"2009
        15th International Conference on Parallel and Distributed Systems","year":2009},{"arxivId":null,"authors":[{"authorId":"7185067","name":"Fuhong
        Lin","url":"https://www.semanticscholar.org/author/7185067"},{"authorId":"1691002","name":"Changjia
        Chen","url":"https://www.semanticscholar.org/author/1691002"},{"authorId":"3339519","name":"Hengkui
        Wu","url":"https://www.semanticscholar.org/author/3339519"},{"authorId":"40259922","name":"Hongke
        Zhang","url":"https://www.semanticscholar.org/author/40259922"},{"authorId":"50784884","name":"Lili
        Kou","url":"https://www.semanticscholar.org/author/50784884"}],"doi":null,"isInfluential":false,"paperId":"7eb2cf88751e5651c7fbd3ae06b5a998fe0ea47d","title":"Analysis
        Time Delay of a Next Generation Name Resolution System","url":"https://www.semanticscholar.org/paper/7eb2cf88751e5651c7fbd3ae06b5a998fe0ea47d","venue":"2009
        WASE International Conference on Information Engineering","year":2009},{"arxivId":null,"authors":[{"authorId":"1689112","name":"Qing
        Ding","url":"https://www.semanticscholar.org/author/1689112"},{"authorId":"38867607","name":"Xi
        Li","url":"https://www.semanticscholar.org/author/38867607"},{"authorId":"46332853","name":"Ming
        Jiang","url":"https://www.semanticscholar.org/author/46332853"},{"authorId":"8453780","name":"Xuehai
        Zhou","url":"https://www.semanticscholar.org/author/8453780"}],"doi":null,"isInfluential":true,"paperId":"3835b0a985c0e73c72075b30fe0441187a107b44","title":"Trust
        Management in the P2P Grid","url":"https://www.semanticscholar.org/paper/3835b0a985c0e73c72075b30fe0441187a107b44","venue":"JDCTA","year":2009},{"arxivId":null,"authors":[{"authorId":"27573489","name":"Jouni
        M\u00e4enp\u00e4\u00e4","url":"https://www.semanticscholar.org/author/27573489"}],"doi":"10.1016/j.comnet.2012.01.015","isInfluential":true,"paperId":"2ae3c85145dcf7f80ba87887934b74a073324c49","title":"Performance
        evaluation of Recursive Distributed Rendezvous based service discovery for
        Peer-to-Peer Session Initiation Protocol","url":"https://www.semanticscholar.org/paper/2ae3c85145dcf7f80ba87887934b74a073324c49","venue":"Computer
        Networks","year":2012},{"arxivId":null,"authors":[{"authorId":"2018699","name":"Chayoung
        Kim","url":"https://www.semanticscholar.org/author/2018699"},{"authorId":"1775681","name":"Jinho
        Ahn","url":"https://www.semanticscholar.org/author/1775681"}],"doi":"10.1109/CTS.2009.5067506","isInfluential":true,"paperId":"7f26c2e5e546b53571d1f61ba57c9f64fb99bf5c","title":"Scalable
        ultrapeer-based DHT protocol for file sharing","url":"https://www.semanticscholar.org/paper/7f26c2e5e546b53571d1f61ba57c9f64fb99bf5c","venue":"2009
        International Symposium on Collaborative Technologies and Systems","year":2009},{"arxivId":null,"authors":[{"authorId":"2618857","name":"Amine
        Abidi","url":"https://www.semanticscholar.org/author/2618857"},{"authorId":"3040258","name":"Sonia
        Mettali Gammar","url":"https://www.semanticscholar.org/author/3040258"},{"authorId":"2808848","name":"Farouk
        Kamoun","url":"https://www.semanticscholar.org/author/2808848"},{"authorId":"1707122","name":"Walid
        Dabbous","url":"https://www.semanticscholar.org/author/1707122"},{"authorId":"1725888","name":"Thierry
        Turletti","url":"https://www.semanticscholar.org/author/1725888"}],"doi":"10.1007/978-3-642-45249-9_36","isInfluential":false,"paperId":"d8ef76ce64f26140d9aafcd63b98bd21abf8acf4","title":"Towards
        a New Internetworking Architecture: A New Deployment Approach for Information
        Centric Networks","url":"https://www.semanticscholar.org/paper/d8ef76ce64f26140d9aafcd63b98bd21abf8acf4","venue":"ICDCN","year":2014},{"arxivId":null,"authors":[{"authorId":"1737114","name":"Hermann
        de Meer","url":"https://www.semanticscholar.org/author/1737114"}],"doi":null,"isInfluential":false,"paperId":"e0922e76892be380a2f5f230e288b6af768c37bc","title":"A
        Comparative Study of Ad Hoc & Peer to Peer Networks by Joseph Borg Supervised
        by Dr .","url":"https://www.semanticscholar.org/paper/e0922e76892be380a2f5f230e288b6af768c37bc","venue":"","year":2003},{"arxivId":null,"authors":[{"authorId":"1696934","name":"Roberto
        Baldoni","url":"https://www.semanticscholar.org/author/1696934"},{"authorId":"2349184","name":"Sirio
        Scipioni","url":"https://www.semanticscholar.org/author/2349184"},{"authorId":"3332818","name":"Sara
        Tucci Piergiovanni","url":"https://www.semanticscholar.org/author/3332818"}],"doi":"10.1109/ISCC.2006.51","isInfluential":true,"paperId":"9a2b41b49ec881bded8128f1f2c11e8bb9fe73c0","title":"Communication
        Channel Management for Maintenance of Strong Overlay Connectivity","url":"https://www.semanticscholar.org/paper/9a2b41b49ec881bded8128f1f2c11e8bb9fe73c0","venue":"11th
        IEEE Symposium on Computers and Communications (ISCC''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"34872616","name":"Gabriela
        Montoya","url":"https://www.semanticscholar.org/author/34872616"},{"authorId":"50812133","name":"L.
        Ib\u00e1nez","url":"https://www.semanticscholar.org/author/50812133"},{"authorId":"1830003","name":"Hala
        Skaf-Molli","url":"https://www.semanticscholar.org/author/1830003"},{"authorId":"3025899","name":"Pascal
        Molli","url":"https://www.semanticscholar.org/author/3025899"},{"authorId":"1684855","name":"Maria-Esther
        Vidal","url":"https://www.semanticscholar.org/author/1684855"}],"doi":"10.1007/978-3-642-54426-2","isInfluential":false,"paperId":"9c585635b81b8e32f53e951249b8e07d873cdcca","title":"Transactions
        on Large-Scale Data- and Knowledge-Centered Systems XIII","url":"https://www.semanticscholar.org/paper/9c585635b81b8e32f53e951249b8e07d873cdcca","venue":"Lecture
        Notes in Computer Science","year":2014},{"arxivId":null,"authors":[{"authorId":"2846833","name":"Apostolos
        Malatras","url":"https://www.semanticscholar.org/author/2846833"},{"authorId":"1733314","name":"Fei
        Peng","url":"https://www.semanticscholar.org/author/1733314"},{"authorId":"2760106","name":"B\u00e9at
        Hirsbrunner","url":"https://www.semanticscholar.org/author/2760106"}],"doi":null,"isInfluential":false,"paperId":"73618d1bec66eb989b513a74aef36d72a2f8b919","title":"Chapter
        X Energy-efficient peer-to-peer networking and overlays 1","url":"https://www.semanticscholar.org/paper/73618d1bec66eb989b513a74aef36d72a2f8b919","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"3176038","name":"Chin
        Teck Min","url":"https://www.semanticscholar.org/author/3176038"},{"authorId":"9419750","name":"Lim
        Tong Ming","url":"https://www.semanticscholar.org/author/9419750"}],"doi":null,"isInfluential":true,"paperId":"cfff11f0c072ebac5d506254b52b8228d475d1b5","title":"Investigate
        SPRON Convergence Time Using Aggressive Chord and Aggressive AP-Chord","url":"https://www.semanticscholar.org/paper/cfff11f0c072ebac5d506254b52b8228d475d1b5","venue":"2015
        12th International Conference on Information Technology - New Generations","year":2015},{"arxivId":null,"authors":[{"authorId":"39229329","name":"Prakash
        Murali","url":"https://www.semanticscholar.org/author/39229329"},{"authorId":"48381555","name":"Krishna","url":"https://www.semanticscholar.org/author/48381555"},{"authorId":"32864858","name":"M.
        V. Subramanyam","url":"https://www.semanticscholar.org/author/32864858"},{"authorId":"9448246","name":"K.
        Satyaprasad","url":"https://www.semanticscholar.org/author/9448246"}],"doi":null,"isInfluential":false,"paperId":"28a1bf1f381fcb1a607b3304c7a5f5c19b137edb","title":"Performance
        Analysis of Chord Protocol for Peer to Peer Overlay Topology in Wireless Mesh
        Network","url":"https://www.semanticscholar.org/paper/28a1bf1f381fcb1a607b3304c7a5f5c19b137edb","venue":"","year":2013},{"arxivId":"1209.0676","authors":[{"authorId":"1749756","name":"Rahul
        Urgaonkar","url":"https://www.semanticscholar.org/author/1749756"},{"authorId":"1776843","name":"Ram
        Ramanathan","url":"https://www.semanticscholar.org/author/1776843"},{"authorId":"33017387","name":"Jason
        Redi","url":"https://www.semanticscholar.org/author/33017387"},{"authorId":"24827311","name":"William
        N. Tetteh","url":"https://www.semanticscholar.org/author/24827311"}],"doi":"10.1109/INFCOM.2013.6567068","isInfluential":false,"paperId":"342487b583353d89e16c8bb89f2d5ecae681e7c1","title":"Channel
        assignment in dense MC-MR wireless networks: Scaling laws and algorithms","url":"https://www.semanticscholar.org/paper/342487b583353d89e16c8bb89f2d5ecae681e7c1","venue":"2013
        Proceedings IEEE INFOCOM","year":2013},{"arxivId":null,"authors":[{"authorId":"1687013","name":"Hiroyuki
        Kitagawa","url":"https://www.semanticscholar.org/author/1687013"}],"doi":null,"isInfluential":false,"paperId":"290ce362d10ae72cb83a7db9f08fac4cfb20feb8","title":"Efficient
        Routing in Multi-ring Content Addressable Network","url":"https://www.semanticscholar.org/paper/290ce362d10ae72cb83a7db9f08fac4cfb20feb8","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"2854394","name":"Tallat
        M. Shafaat","url":"https://www.semanticscholar.org/author/2854394"}],"doi":null,"isInfluential":true,"paperId":"2e5004198341b9b516053b845ac3717e3516993e","title":"Partition
        Tolerance and Data Consistency in Structured Overlay Networks","url":"https://www.semanticscholar.org/paper/2e5004198341b9b516053b845ac3717e3516993e","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"3073955","name":"Stephen
        Naicken","url":"https://www.semanticscholar.org/author/3073955"},{"authorId":"40365944","name":"Anirban
        Basu","url":"https://www.semanticscholar.org/author/40365944"},{"authorId":"28067601","name":"B.
        Livingston","url":"https://www.semanticscholar.org/author/28067601"},{"authorId":"1943098","name":"S.
        Rodhetbhai","url":"https://www.semanticscholar.org/author/1943098"},{"authorId":"1780634","name":"Ian
        Wakeman","url":"https://www.semanticscholar.org/author/1780634"}],"doi":null,"isInfluential":false,"paperId":"7c8f980287fe03dd52db23168cdf79f30bf08601","title":"Towards
        Yet Another Peer-to-Peer Simulator","url":"https://www.semanticscholar.org/paper/7c8f980287fe03dd52db23168cdf79f30bf08601","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"1773337","name":"Jedrzej
        Rybicki","url":"https://www.semanticscholar.org/author/1773337"},{"authorId":"1776439","name":"Bj\u00f6rn
        Scheuermann","url":"https://www.semanticscholar.org/author/1776439"},{"authorId":"2208301","name":"Wolfgang
        Kiess","url":"https://www.semanticscholar.org/author/2208301"},{"authorId":"2662695","name":"Christian
        Lochert","url":"https://www.semanticscholar.org/author/2662695"},{"authorId":"2242170","name":"Pezhman
        Fallahi","url":"https://www.semanticscholar.org/author/2242170"},{"authorId":"1751862","name":"Martin
        Mauve","url":"https://www.semanticscholar.org/author/1751862"}],"doi":"10.1145/1287853.1287879","isInfluential":true,"paperId":"6caf1c7e66dd6114a09b33655621ac135c3dc63f","title":"Challenge:
        peers on wheels - a road to new traffic information systems","url":"https://www.semanticscholar.org/paper/6caf1c7e66dd6114a09b33655621ac135c3dc63f","venue":"MobiCom","year":2007},{"arxivId":null,"authors":[{"authorId":"2071250","name":"Lichun
        Li","url":"https://www.semanticscholar.org/author/2071250"},{"authorId":"9226642","name":"Juwei
        Shi","url":"https://www.semanticscholar.org/author/9226642"},{"authorId":"2413528","name":"Wenjie
        Lin","url":"https://www.semanticscholar.org/author/2413528"},{"authorId":"1711589","name":"Yao
        Wang","url":"https://www.semanticscholar.org/author/1711589"},{"authorId":"1911823","name":"Yinong
        Li","url":"https://www.semanticscholar.org/author/1911823"},{"authorId":"1747536","name":"Yang
        Ji","url":"https://www.semanticscholar.org/author/1747536"}],"doi":"10.1109/EUROMICRO.2007.57","isInfluential":true,"paperId":"9cefee7c38ec59dd3f8ab228b1923a45571ee045","title":"Transit-Stub
        Architecture for Peer-to-Peer SIP","url":"https://www.semanticscholar.org/paper/9cefee7c38ec59dd3f8ab228b1923a45571ee045","venue":"33rd
        EUROMICRO Conference on Software Engineering and Advanced Applications (EUROMICRO
        2007)","year":2007},{"arxivId":null,"authors":[{"authorId":"1705316","name":"Alberto
        Montresor","url":"https://www.semanticscholar.org/author/1705316"},{"authorId":"1743143","name":"Ali
        Ghodsi","url":"https://www.semanticscholar.org/author/1743143"}],"doi":"10.1109/P2P.2009.5284525","isInfluential":false,"paperId":"81aeb9b1755be9eae420604d74106880e66dd88d","title":"Towards
        robust peer counting","url":"https://www.semanticscholar.org/paper/81aeb9b1755be9eae420604d74106880e66dd88d","venue":"2009
        IEEE Ninth International Conference on Peer-to-Peer Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"35097712","name":"Venmugil
        Elango","url":"https://www.semanticscholar.org/author/35097712"},{"authorId":"1880260","name":"H.
        Lookman Sithic","url":"https://www.semanticscholar.org/author/1880260"}],"doi":null,"isInfluential":false,"paperId":"758736c8f0836351bebaab620915f84e0377df9e","title":"Enhancing
        Multi-hop Location Aware Harmony Based Cover for Wireless Mesh Networks with
        a Ring Overlay","url":"https://www.semanticscholar.org/paper/758736c8f0836351bebaab620915f84e0377df9e","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":null,"name":"Emmanuelle
        Anceaume Maria Gradinariu Vincent Gramoli Antonino Virgillito","url":null}],"doi":null,"isInfluential":false,"paperId":"2852db437e82c77ab66e3a806f89318b57b0a9bc","title":"M\u00e9moire
        atomique auto-reconfigurable pour syst\u00e8mes P 2 P","url":"https://www.semanticscholar.org/paper/2852db437e82c77ab66e3a806f89318b57b0a9bc","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"9226642","name":"Juwei
        Shi","url":"https://www.semanticscholar.org/author/9226642"},{"authorId":"1711589","name":"Yao
        Wang","url":"https://www.semanticscholar.org/author/1711589"},{"authorId":"2146575","name":"Lanzhi
        Gu","url":"https://www.semanticscholar.org/author/2146575"},{"authorId":"2071250","name":"Lichun
        Li","url":"https://www.semanticscholar.org/author/2071250"},{"authorId":"2413528","name":"Wenjie
        Lin","url":"https://www.semanticscholar.org/author/2413528"},{"authorId":"1911823","name":"Yinong
        Li","url":"https://www.semanticscholar.org/author/1911823"},{"authorId":"1747536","name":"Yang
        Ji","url":"https://www.semanticscholar.org/author/1747536"},{"authorId":"1991594","name":"Ping
        Zhang","url":"https://www.semanticscholar.org/author/1991594"}],"doi":"10.1109/GLOCOM.2007.25","isInfluential":true,"paperId":"30b551c9cd1909a0008161472b7a7fa314b72d15","title":"A
        Hierarchical Peer-to-Peer SIP System for Heterogeneous Overlays Interworking","url":"https://www.semanticscholar.org/paper/30b551c9cd1909a0008161472b7a7fa314b72d15","venue":"IEEE
        GLOBECOM 2007 - IEEE Global Telecommunications Conference","year":2007},{"arxivId":null,"authors":[{"authorId":"2074276","name":"Ilkka
        Norros","url":"https://www.semanticscholar.org/author/2074276"},{"authorId":"2477986","name":"Balakrishna
        J. Prabhu","url":"https://www.semanticscholar.org/author/2477986"},{"authorId":"2312739","name":"Hannu
        Reittu","url":"https://www.semanticscholar.org/author/2312739"}],"doi":"10.1007/978-3-540-72990-7_54","isInfluential":false,"paperId":"d4ffceede8a6a39c2157a2140a303ec43351f79a","title":"On
        Uncoordinated File Distribution with Non-altruistic Downloaders","url":"https://www.semanticscholar.org/paper/d4ffceede8a6a39c2157a2140a303ec43351f79a","venue":"International
        Teletraffic Congress","year":2007},{"arxivId":null,"authors":[{"authorId":"49595426","name":"Jamie
        Moorhouse","url":"https://www.semanticscholar.org/author/49595426"},{"authorId":"40570542","name":"Lu
        Liu","url":"https://www.semanticscholar.org/author/40570542"},{"authorId":"46947384","name":"Zhiyuan
        Li","url":"https://www.semanticscholar.org/author/46947384"},{"authorId":"34368858","name":"Zhijun
        Ding","url":"https://www.semanticscholar.org/author/34368858"}],"doi":"10.1109/UKSim.2013.58","isInfluential":false,"paperId":"05f6e1f5bbca518a93c4a71c2070770c61e7f1b4","title":"Modelling
        and Simulation of Peer-to-Peer Overlay Network Protocols using OverSim","url":"https://www.semanticscholar.org/paper/05f6e1f5bbca518a93c4a71c2070770c61e7f1b4","venue":"2013
        UKSim 15th International Conference on Computer Modelling and Simulation","year":2013},{"arxivId":null,"authors":[{"authorId":"3098549","name":"Marcelo
        H. Vithoft","url":"https://www.semanticscholar.org/author/3098549"},{"authorId":"34673723","name":"Altair
        Olivo Santin","url":"https://www.semanticscholar.org/author/34673723"},{"authorId":"1981949","name":"Cinthia
        Obladen de Almendra Freitas","url":"https://www.semanticscholar.org/author/1981949"},{"authorId":"11355130","name":"Heverson
        Borba Ribeiro","url":"https://www.semanticscholar.org/author/11355130"}],"doi":"10.1109/WAINA.2010.86","isInfluential":false,"paperId":"aa9f21d7ba24d4e4a0c9a4c85558598df5dd469e","title":"SP2MS:
        A MANet-Based P2P Service","url":"https://www.semanticscholar.org/paper/aa9f21d7ba24d4e4a0c9a4c85558598df5dd469e","venue":"2010
        IEEE 24th International Conference on Advanced Information Networking and
        Applications Workshops","year":2010},{"arxivId":null,"authors":[{"authorId":"1692790","name":"Christopher
        J. Rossbach","url":"https://www.semanticscholar.org/author/1692790"},{"authorId":"1735637","name":"Owen
        S. Hofmann","url":"https://www.semanticscholar.org/author/1735637"},{"authorId":"1755646","name":"Donald
        E. Porter","url":"https://www.semanticscholar.org/author/1755646"},{"authorId":"1972367","name":"Hany
        E. Ramadan","url":"https://www.semanticscholar.org/author/1972367"},{"authorId":"9126462","name":"Bhandari
        Aditya","url":"https://www.semanticscholar.org/author/9126462"},{"authorId":"1683338","name":"Emmett
        Witchel","url":"https://www.semanticscholar.org/author/1683338"}],"doi":"10.1145/1388240.1388258","isInfluential":false,"paperId":"1a8696bd1447d34eefe02e221ded335f9f4ca913","title":"TxLinux:
        using and managing hardware transactional memory in an operating system","url":"https://www.semanticscholar.org/paper/1a8696bd1447d34eefe02e221ded335f9f4ca913","venue":"SOSP","year":2007},{"arxivId":null,"authors":[{"authorId":"1740851","name":"Tsung-Han
        Lin","url":"https://www.semanticscholar.org/author/1740851"},{"authorId":"2395916","name":"Tsung-Hsuan
        Ho","url":"https://www.semanticscholar.org/author/2395916"},{"authorId":"39771386","name":"Yu-Wei
        Chan","url":"https://www.semanticscholar.org/author/39771386"},{"authorId":"1710898","name":"Yeh-Ching
        Chung","url":"https://www.semanticscholar.org/author/1710898"}],"doi":"10.1109/I-SPAN.2008.30","isInfluential":true,"paperId":"456fdd6e60a69db7d81a2181298c916c7c29b124","title":"M-Ring:
        A Distributed, Self-Organized, Load-Balanced Communication Method on Super
        Peer Network","url":"https://www.semanticscholar.org/paper/456fdd6e60a69db7d81a2181298c916c7c29b124","venue":"2008
        International Symposium on Parallel Architectures, Algorithms, and Networks
        (i-span 2008)","year":2008},{"arxivId":null,"authors":[{"authorId":"1748409","name":"Zhan
        Zhang","url":"https://www.semanticscholar.org/author/1748409"},{"authorId":"1704995","name":"Yong
        Tang","url":"https://www.semanticscholar.org/author/1704995"},{"authorId":"38125149","name":"Shigang
        Chen","url":"https://www.semanticscholar.org/author/38125149"}],"doi":"10.1109/ICC.2007.1023","isInfluential":false,"paperId":"a5dbd976f0300aa659f08a414ef6f1743ff7094b","title":"Speed
        Up Queries in Unstructured Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/a5dbd976f0300aa659f08a414ef6f1743ff7094b","venue":"2007
        IEEE International Conference on Communications","year":2007},{"arxivId":null,"authors":[{"authorId":"40146113","name":"Yuki
        Hanazawa","url":"https://www.semanticscholar.org/author/40146113"},{"authorId":"35227220","name":"Yusuke
        Sasaki","url":"https://www.semanticscholar.org/author/35227220"},{"authorId":"36937932","name":"Hiroyoshi
        Miwa","url":"https://www.semanticscholar.org/author/36937932"}],"doi":"10.1109/INCOS.2009.52","isInfluential":false,"paperId":"c4e5749be0104d575fed1a5be5ce86958fbee73c","title":"Efficient
        Degree Constrained Broadcast Method on P2P Networks","url":"https://www.semanticscholar.org/paper/c4e5749be0104d575fed1a5be5ce86958fbee73c","venue":"2009
        International Conference on Intelligent Networking and Collaborative Systems","year":2009},{"arxivId":null,"authors":[{"authorId":"1833004","name":"Baoshan
        Xu","url":"https://www.semanticscholar.org/author/1833004"},{"authorId":"49038331","name":"M.
        Grigat","url":"https://www.semanticscholar.org/author/49038331"},{"authorId":"48078349","name":"Eva
        Weis","url":"https://www.semanticscholar.org/author/48078349"},{"authorId":"3165868","name":"Nimrod
        Bayer","url":"https://www.semanticscholar.org/author/3165868"},{"authorId":"3198767","name":"Dmitry
        Sivchenko","url":"https://www.semanticscholar.org/author/3198767"},{"authorId":null,"name":"Deutsche
        Telekom","url":null},{"authorId":"2154781","name":"Thomas-Rolf Banniza","url":"https://www.semanticscholar.org/author/2154781"},{"authorId":"2773196","name":"Klaus
        W\u00fcnstel","url":"https://www.semanticscholar.org/author/2773196"},{"authorId":"35266290","name":"Sonja
        Wahl","url":"https://www.semanticscholar.org/author/35266290"},{"authorId":"2125305","name":"Rolf
        Sigle","url":"https://www.semanticscholar.org/author/2125305"},{"authorId":"27520787","name":"Robert
        Keller","url":"https://www.semanticscholar.org/author/27520787"},{"authorId":"46952121","name":"Armin
        Dekorsy","url":"https://www.semanticscholar.org/author/46952121"},{"authorId":"2252496","name":"Martin
        Peter Bauer","url":"https://www.semanticscholar.org/author/2252496"},{"authorId":"2367233","name":"Matthias
        S\u00f6llner","url":"https://www.semanticscholar.org/author/2367233"},{"authorId":"49200678","name":"Josef
        Eichinger","url":"https://www.semanticscholar.org/author/49200678"},{"authorId":"2182422","name":"Chunpeng
        Fan","url":"https://www.semanticscholar.org/author/2182422"},{"authorId":"18122092","name":"F.
        Pittmann","url":"https://www.semanticscholar.org/author/18122092"},{"authorId":"48148297","name":"Ragnar
        K\u00fchne","url":"https://www.semanticscholar.org/author/48148297"},{"authorId":"38887093","name":"Martin
        Schlaeger","url":"https://www.semanticscholar.org/author/38887093"},{"authorId":"1795625","name":"Ingmar
        Baumgart","url":"https://www.semanticscholar.org/author/1795625"},{"authorId":"35692256","name":"R\u00fcdiger
        Bless","url":"https://www.semanticscholar.org/author/35692256"},{"authorId":"34992800","name":"Stefan
        Stefanov","url":"https://www.semanticscholar.org/author/34992800"}],"doi":null,"isInfluential":false,"paperId":"2a092f2590c14af404e91ea1339a3727098eb206","title":"ScaleNet
        \u2013 Converged Networks of the Future","url":"https://www.semanticscholar.org/paper/2a092f2590c14af404e91ea1339a3727098eb206","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"2774220","name":"Chin-Jung
        Hsu","url":"https://www.semanticscholar.org/author/2774220"},{"authorId":"1783689","name":"Wu-Chun
        Chung","url":"https://www.semanticscholar.org/author/1783689"},{"authorId":"2720461","name":"Kuan-Chou
        Lai","url":"https://www.semanticscholar.org/author/2720461"},{"authorId":"38693900","name":"Kuan-Ching
        Li","url":"https://www.semanticscholar.org/author/38693900"},{"authorId":"1710898","name":"Yeh-Ching
        Chung","url":"https://www.semanticscholar.org/author/1710898"}],"doi":"10.1109/CloudCom.2010.12","isInfluential":false,"paperId":"6ba6e44ff2fdb57535fecd0d19c81fe9a2b2ba09","title":"A
        Novel Approach for Cooperative Overlay-Maintenance in Multi-overlay Environments","url":"https://www.semanticscholar.org/paper/6ba6e44ff2fdb57535fecd0d19c81fe9a2b2ba09","venue":"2010
        IEEE Second International Conference on Cloud Computing Technology and Science","year":2010},{"arxivId":null,"authors":[{"authorId":"40069180","name":"Diego
        Ongaro","url":"https://www.semanticscholar.org/author/40069180"},{"authorId":"2224644","name":"Stephen
        M. Rumble","url":"https://www.semanticscholar.org/author/2224644"},{"authorId":"3087426","name":"Ryan
        Stutsman","url":"https://www.semanticscholar.org/author/3087426"},{"authorId":"1753830","name":"John
        K. Ousterhout","url":"https://www.semanticscholar.org/author/1753830"},{"authorId":"8373823","name":"Mendel
        Rosenblum","url":"https://www.semanticscholar.org/author/8373823"}],"doi":"10.1145/2043556.2043560","isInfluential":false,"paperId":"514a5c15e8cf3f681febecad954a4508d9189c99","title":"Fast
        crash recovery in RAMCloud","url":"https://www.semanticscholar.org/paper/514a5c15e8cf3f681febecad954a4508d9189c99","venue":"SOSP","year":2011},{"arxivId":null,"authors":[{"authorId":"39076756","name":"Gang
        Chen","url":"https://www.semanticscholar.org/author/39076756"},{"authorId":"38429669","name":"Ke
        Chen","url":"https://www.semanticscholar.org/author/38429669"},{"authorId":"48219927","name":"Dawei
        Jiang","url":"https://www.semanticscholar.org/author/48219927"},{"authorId":"1693070","name":"Beng
        Chin Ooi","url":"https://www.semanticscholar.org/author/1693070"},{"authorId":"46627966","name":"Lei
        Shi","url":"https://www.semanticscholar.org/author/46627966"},{"authorId":"2753282","name":"Hoang
        Tam Vo","url":"https://www.semanticscholar.org/author/2753282"},{"authorId":"1765710","name":"Sai
        Wu","url":"https://www.semanticscholar.org/author/1765710"}],"doi":"10.2197/ipsjjip.20.65","isInfluential":false,"paperId":"759014af02d2b4ab5a479e939d23d75a63aa02aa","title":"E3:
        an Elastic Execution Engine for Scalable Data Processing","url":"https://www.semanticscholar.org/paper/759014af02d2b4ab5a479e939d23d75a63aa02aa","venue":"JIP","year":2012},{"arxivId":null,"authors":[{"authorId":"1729141","name":"Hanh
        Le","url":"https://www.semanticscholar.org/author/1729141"},{"authorId":"1709615","name":"Doan
        B. Hoang","url":"https://www.semanticscholar.org/author/1709615"},{"authorId":"47051698","name":"Andrew
        Simmonds","url":"https://www.semanticscholar.org/author/47051698"}],"doi":null,"isInfluential":false,"paperId":"ba00ed576c3bc884732f318e3b29b2b118f3b940","title":"An
        Efficient Scheme for Locating Nodes in the Internet Geo-LPM : Geographic Longest
        Prefix Matching","url":"https://www.semanticscholar.org/paper/ba00ed576c3bc884732f318e3b29b2b118f3b940","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"3999826","name":"Jung-Ho
        Um","url":"https://www.semanticscholar.org/author/3999826"},{"authorId":"2219504","name":"Hee-Dae
        Kim","url":"https://www.semanticscholar.org/author/2219504"},{"authorId":"1686200","name":"Jae-Woo
        Chang","url":"https://www.semanticscholar.org/author/1686200"}],"doi":"10.1109/SocialCom.2010.162","isInfluential":false,"paperId":"2f275922521ae59ee0eae30cf5d2fdf0b2ba0f80","title":"An
        Advanced Cloaking Algorithm Using Hilbert Curves for Anonymous Location Based
        Service","url":"https://www.semanticscholar.org/paper/2f275922521ae59ee0eae30cf5d2fdf0b2ba0f80","venue":"2010
        IEEE Second International Conference on Social Computing","year":2010},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"2696624","name":"Yuhua
        Lin","url":"https://www.semanticscholar.org/author/2696624"},{"authorId":"36775862","name":"Karan
        Sapra","url":"https://www.semanticscholar.org/author/36775862"},{"authorId":"48458409","name":"Ze
        Li","url":"https://www.semanticscholar.org/author/48458409"}],"doi":"10.1109/TPDS.2015.2489198","isInfluential":true,"paperId":"2cf5618ece9b2b0ad4f82a45271dff296aa21046","title":"Enhancing
        Collusion Resilience in Reputation Systems","url":"https://www.semanticscholar.org/paper/2cf5618ece9b2b0ad4f82a45271dff296aa21046","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2016},{"arxivId":null,"authors":[{"authorId":"36704020","name":"Kundan
        Singh","url":"https://www.semanticscholar.org/author/36704020"}],"doi":null,"isInfluential":false,"paperId":"301a24afdd646c3ac2bdcf2d304e5ea46c4a276b","title":"Reliable
        , Scalable and Interoperable Internet Telephony","url":"https://www.semanticscholar.org/paper/301a24afdd646c3ac2bdcf2d304e5ea46c4a276b","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"2247076","name":"Jarno
        Rajahalme","url":"https://www.semanticscholar.org/author/2247076"},{"authorId":"3252958","name":"Mikko
        S\u00e4rel\u00e4","url":"https://www.semanticscholar.org/author/3252958"},{"authorId":"2695924","name":"Kari
        Visala","url":"https://www.semanticscholar.org/author/2695924"},{"authorId":"1799336","name":"Janne
        Riihij\u00e4rvi","url":"https://www.semanticscholar.org/author/1799336"}],"doi":null,"isInfluential":true,"paperId":"bbcd15399fbfb69d1475ee5e25430b8cc36d89f5","title":"On
        name-based inter-domain routing q , qq","url":"https://www.semanticscholar.org/paper/bbcd15399fbfb69d1475ee5e25430b8cc36d89f5","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"2247076","name":"Jarno
        Rajahalme","url":"https://www.semanticscholar.org/author/2247076"},{"authorId":null,"name":"Assoc
        Prof","url":null},{"authorId":"2923989","name":"Peter Sj\u00f6din","url":"https://www.semanticscholar.org/author/2923989"},{"authorId":"49715472","name":"Lixin
        Gao","url":"https://www.semanticscholar.org/author/49715472"}],"doi":null,"isInfluential":false,"paperId":"d2d48a0eeff3caa6a712a67fad009f7c9ab92c08","title":"Inter-domain
        Incentives and Internet Architecture Inter-domain Incentives and Internet
        Architecture","url":"https://www.semanticscholar.org/paper/d2d48a0eeff3caa6a712a67fad009f7c9ab92c08","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"30856543","name":"Luca
        Ferrucci","url":"https://www.semanticscholar.org/author/30856543"},{"authorId":"28053030","name":"Laura
        Ricci","url":"https://www.semanticscholar.org/author/28053030"},{"authorId":"1766551","name":"Michele
        Albano","url":"https://www.semanticscholar.org/author/1766551"},{"authorId":"1705270","name":"Ranieri
        Baraglia","url":"https://www.semanticscholar.org/author/1705270"},{"authorId":"1715724","name":"Matteo
        Mordacchini","url":"https://www.semanticscholar.org/author/1715724"}],"doi":"10.1016/j.jcss.2016.04.008","isInfluential":true,"paperId":"b07c976be46dc794d4ca261b9f91c8f435f50aad","title":"Multidimensional
        range queries on hierarchical Voronoi overlays","url":"https://www.semanticscholar.org/paper/b07c976be46dc794d4ca261b9f91c8f435f50aad","venue":"J.
        Comput. Syst. Sci.","year":2016},{"arxivId":null,"authors":[{"authorId":"31106531","name":"Ricky
        Robinson","url":"https://www.semanticscholar.org/author/31106531"},{"authorId":"1717417","name":"Jadwiga
        Indulska","url":"https://www.semanticscholar.org/author/1717417"},{"authorId":"30050857","name":"Ted
        McFadden","url":"https://www.semanticscholar.org/author/30050857"}],"doi":"10.1108/17427370710841909","isInfluential":true,"paperId":"6cb4b495369533d8128ba36e64e882a028c3b1d0","title":"Resource
        discovery in modern computing environments","url":"https://www.semanticscholar.org/paper/6cb4b495369533d8128ba36e64e882a028c3b1d0","venue":"Int.
        J. Pervasive Computing and Communications","year":2007},{"arxivId":null,"authors":[{"authorId":"31053814","name":"R.R.C.
        Bikram","url":"https://www.semanticscholar.org/author/31053814"},{"authorId":"1747529","name":"V.
        M. Vokkarane","url":"https://www.semanticscholar.org/author/1747529"}],"doi":null,"isInfluential":false,"paperId":"168c5819a80ed30514346d5e7ba2d9aa28595c71","title":"TCP
        Over Optical Burst Switching: To Split or Not to Split?","url":"https://www.semanticscholar.org/paper/168c5819a80ed30514346d5e7ba2d9aa28595c71","venue":"Journal
        of Lightwave Technology","year":2009},{"arxivId":null,"authors":[{"authorId":"5300384","name":"R.
        Vidhya","url":"https://www.semanticscholar.org/author/5300384"},{"authorId":"7621780","name":"Ms.
        R. Dharani","url":"https://www.semanticscholar.org/author/7621780"},{"authorId":null,"name":"PG
        Scholar","url":null}],"doi":null,"isInfluential":false,"paperId":"4a978c9fc478b416eac417bb8da7bffe33f58ee6","title":"A
        Secure Mechanism for Information Sharing In Distributed Network Using Genetic
        Algorithm","url":"https://www.semanticscholar.org/paper/4a978c9fc478b416eac417bb8da7bffe33f58ee6","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1703324","name":"Lea
        Kissner","url":"https://www.semanticscholar.org/author/1703324"}],"doi":null,"isInfluential":false,"paperId":"496c8311e2e1d0b650372685c7ea2941999541bc","title":"Proposal
        : Privacy Preserving Distributed Information Sharing","url":"https://www.semanticscholar.org/paper/496c8311e2e1d0b650372685c7ea2941999541bc","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"1682572","name":"Kensuke
        Fukuda","url":"https://www.semanticscholar.org/author/1682572"},{"authorId":"2497906","name":"Shinta
        Sato","url":"https://www.semanticscholar.org/author/2497906"},{"authorId":"28546460","name":"Takeshi
        Mitamura","url":"https://www.semanticscholar.org/author/28546460"}],"doi":"10.1109/NOMS.2014.6838246","isInfluential":false,"paperId":"dd2ac6987341c0b137b92bc55826ce1fa874caca","title":"Towards
        evaluation of DNS server selection with geodesic distance","url":"https://www.semanticscholar.org/paper/dd2ac6987341c0b137b92bc55826ce1fa874caca","venue":"2014
        IEEE Network Operations and Management Symposium (NOMS)","year":2014},{"arxivId":"1201.4183","authors":[{"authorId":"1688346","name":"Nitin
        H. Vaidya","url":"https://www.semanticscholar.org/author/1688346"},{"authorId":"2506213","name":"Lewis
        Tseng","url":"https://www.semanticscholar.org/author/2506213"},{"authorId":"1783212","name":"Guanfeng
        Liang","url":"https://www.semanticscholar.org/author/1783212"}],"doi":"10.1145/2332432.2332505","isInfluential":false,"paperId":"179d404acc36f488300668ea753f9dab3becb4a8","title":"Iterative
        Approximate Byzantine Consensus in Arbitrary Directed Graphs","url":"https://www.semanticscholar.org/paper/179d404acc36f488300668ea753f9dab3becb4a8","venue":"PODC","year":2012},{"arxivId":null,"authors":[{"authorId":"3122063","name":"Michael
        J. Freedman","url":"https://www.semanticscholar.org/author/3122063"},{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"},{"authorId":"2506126","name":"David
        Mazi\u00e8res","url":"https://www.semanticscholar.org/author/2506126"},{"authorId":"1753148","name":"Scott
        Shenker","url":"https://www.semanticscholar.org/author/1753148"}],"doi":null,"isInfluential":false,"paperId":"b42fdb27a3e8a366995ac1e3c30c43b9d6995907","title":"Group
        Therapy for Systems: Using Link Attestations to Manage Failures","url":"https://www.semanticscholar.org/paper/b42fdb27a3e8a366995ac1e3c30c43b9d6995907","venue":"IPTPS","year":2006},{"arxivId":null,"authors":[{"authorId":"34653108","name":"Arijit
        Ganguly","url":"https://www.semanticscholar.org/author/34653108"},{"authorId":"7388908","name":"Abhishek
        Agrawal","url":"https://www.semanticscholar.org/author/7388908"},{"authorId":"2721383","name":"P.
        Oscar Boykin","url":"https://www.semanticscholar.org/author/2721383"},{"authorId":"1680675","name":"Renato
        J. O. Figueiredo","url":"https://www.semanticscholar.org/author/1680675"}],"doi":"10.1109/HPDC.2006.1652133","isInfluential":false,"paperId":"7eef807745413ed2d1face724f68c1f08ca54afb","title":"WOW:
        Self-Organizing Wide Area Overlay Networks of Virtual Workstations","url":"https://www.semanticscholar.org/paper/7eef807745413ed2d1face724f68c1f08ca54afb","venue":"2006
        15th IEEE International Conference on High Performance Distributed Computing","year":2006},{"arxivId":null,"authors":[{"authorId":null,"name":"Mismaku
        Tefera","url":null}],"doi":null,"isInfluential":false,"paperId":"08049b2fedcf8cff7c79c7ba6f9661cacdcf9791","title":"Sj\u00e4lvst\u00e4ndigt
        arbete p\u00e5 avancerad niv\u00e5 Independent degree project second cycle
        Computer engineering Attacks on structured P 2 P overlay networks Simulating
        Sybil Attacks","url":"https://www.semanticscholar.org/paper/08049b2fedcf8cff7c79c7ba6f9661cacdcf9791","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1869211","name":"Shuai
        Gao","url":"https://www.semanticscholar.org/author/1869211"},{"authorId":"40259922","name":"Hongke
        Zhang","url":"https://www.semanticscholar.org/author/40259922"}],"doi":"10.1109/CCNC.2016.7444735","isInfluential":true,"paperId":"b9e4a4741e9da9778447369cf5b15c96c7c324d7","title":"Scalable
        mobility management for content sources in Named Data Networking","url":"https://www.semanticscholar.org/paper/b9e4a4741e9da9778447369cf5b15c96c7c324d7","venue":"2016
        13th IEEE Annual Consumer Communications & Networking Conference (CCNC)","year":2016},{"arxivId":null,"authors":[{"authorId":"3014975","name":"Ahmad
        Al-Shishtawy","url":"https://www.semanticscholar.org/author/3014975"}],"doi":null,"isInfluential":true,"paperId":"8ce02f6e893d330fcb88ae6545ed4b7a361795f2","title":"Self-Management
        for Large-Scale Distributed Systems","url":"https://www.semanticscholar.org/paper/8ce02f6e893d330fcb88ae6545ed4b7a361795f2","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"2507445","name":"Tulika
        Pandey","url":"https://www.semanticscholar.org/author/2507445"},{"authorId":"39101643","name":"Deepak
        Garg","url":"https://www.semanticscholar.org/author/39101643"},{"authorId":"1846780","name":"Manoj
        Madhava Gore","url":"https://www.semanticscholar.org/author/1846780"}],"doi":"10.1007/s11704-012-1154-7","isInfluential":false,"paperId":"113cc2489a03d85af1de23ef2a2b0673ece24915","title":"Publish/subscribe
        based information dissemination over VANET utilizing DHT","url":"https://www.semanticscholar.org/paper/113cc2489a03d85af1de23ef2a2b0673ece24915","venue":"Frontiers
        of Computer Science","year":2012},{"arxivId":null,"authors":[{"authorId":"1713041","name":"Mehmet
        S. Aktas","url":"https://www.semanticscholar.org/author/1713041"},{"authorId":"1700267","name":"Geoffrey
        C. Fox","url":"https://www.semanticscholar.org/author/1700267"},{"authorId":"49581200","name":"Marlon
        Pierce","url":"https://www.semanticscholar.org/author/49581200"}],"doi":null,"isInfluential":false,"paperId":"991a1515f8b5b27c96e9274b7dc1e4f78829f9d7","title":"Distributed
        High Performance Grid Information Service","url":"https://www.semanticscholar.org/paper/991a1515f8b5b27c96e9274b7dc1e4f78829f9d7","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"39193958","name":"Alina
        Bejan","url":"https://www.semanticscholar.org/author/39193958"},{"authorId":"33653259","name":"Sukumar
        Ghosh","url":"https://www.semanticscholar.org/author/33653259"}],"doi":"10.1007/11516798_10","isInfluential":true,"paperId":"2427138664b621ae431f2083cdb6b8acd812a6f1","title":"Self-optimizing
        DHTs Using Request Profiling","url":"https://www.semanticscholar.org/paper/2427138664b621ae431f2083cdb6b8acd812a6f1","venue":"OPODIS","year":2004},{"arxivId":null,"authors":[{"authorId":"1682848","name":"Yu
        Zhang","url":"https://www.semanticscholar.org/author/1682848"},{"authorId":"2351744","name":"Yuanda
        Cao","url":"https://www.semanticscholar.org/author/2351744"},{"authorId":"1960853","name":"Baodong
        Cheng","url":"https://www.semanticscholar.org/author/1960853"}],"doi":"10.1109/JCAI.2009.114","isInfluential":false,"paperId":"f99176ad9d177d09f4343f8863c2c61506ab619b","title":"A
        Clone Node Protocol for Reducing Maintenance Cost of Structured P2P System","url":"https://www.semanticscholar.org/paper/f99176ad9d177d09f4343f8863c2c61506ab619b","venue":"2009
        International Joint Conference on Artificial Intelligence","year":2009},{"arxivId":null,"authors":[{"authorId":"1798668","name":"Bogdan
        Carbunar","url":"https://www.semanticscholar.org/author/1798668"},{"authorId":"3097319","name":"Rahul
        Potharaju","url":"https://www.semanticscholar.org/author/3097319"},{"authorId":"39751718","name":"Michael
        Pearce","url":"https://www.semanticscholar.org/author/39751718"},{"authorId":"49489633","name":"Venugopal
        Vasudevan","url":"https://www.semanticscholar.org/author/49489633"},{"authorId":"46486974","name":"Michael
        Needham","url":"https://www.semanticscholar.org/author/46486974"}],"doi":null,"isInfluential":false,"paperId":"de924f5a58c4ec92f3e0245e1ffcf5a376e15ee8","title":"1
        A Framework for Network Aware Caching for Video on Demand Systems","url":"https://www.semanticscholar.org/paper/de924f5a58c4ec92f3e0245e1ffcf5a376e15ee8","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"35227220","name":"Yusuke
        Sasaki","url":"https://www.semanticscholar.org/author/35227220"},{"authorId":"36937932","name":"Hiroyoshi
        Miwa","url":"https://www.semanticscholar.org/author/36937932"}],"doi":"10.1109/HIS.2007.6","isInfluential":false,"paperId":"d4759195a2d5604d6fb69be40d087777c93c56ed","title":"A
        Control Method of a P2P Network with Small Degree and Diameter","url":"https://www.semanticscholar.org/paper/d4759195a2d5604d6fb69be40d087777c93c56ed","venue":"7th
        International Conference on Hybrid Intelligent Systems (HIS 2007)","year":2007},{"arxivId":null,"authors":[{"authorId":"1711688","name":"Min
        Cai","url":"https://www.semanticscholar.org/author/1711688"},{"authorId":"1680273","name":"Kai
        Hwang","url":"https://www.semanticscholar.org/author/1680273"},{"authorId":"1741539","name":"Yu-Kwong
        Kwok","url":"https://www.semanticscholar.org/author/1741539"},{"authorId":"2243851","name":"Shanshan
        Song","url":"https://www.semanticscholar.org/author/2243851"},{"authorId":"50579888","name":"Yu
        Chen","url":"https://www.semanticscholar.org/author/50579888"}],"doi":null,"isInfluential":true,"paperId":"1c0289c4a5bad8d75bc352fbff1072301c7578f2","title":"Fast
        Containment of Internet Worms and Tracking of DDoS Attacks with Distributed-Hashing
        Overlays","url":"https://www.semanticscholar.org/paper/1c0289c4a5bad8d75bc352fbff1072301c7578f2","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"33324835","name":"Judith
        Winter","url":"https://www.semanticscholar.org/author/33324835"}],"doi":"10.1145/1458469.1458482","isInfluential":true,"paperId":"26c30abb4a9a64f1fc7f176843aea4b36d3a985f","title":"Routing
        of structured queries in large-scale distributed systems","url":"https://www.semanticscholar.org/paper/26c30abb4a9a64f1fc7f176843aea4b36d3a985f","venue":"LSDS-IR","year":2008},{"arxivId":null,"authors":[{"authorId":"2273899","name":"Juan
        Pedro Mu\u00f1oz-Gea","url":"https://www.semanticscholar.org/author/2273899"},{"authorId":"2301331","name":"Pilar
        Manzanares-Lopez","url":"https://www.semanticscholar.org/author/2301331"},{"authorId":"49417548","name":"Josemaria
        Malgosa-Sanahuja","url":"https://www.semanticscholar.org/author/49417548"}],"doi":null,"isInfluential":true,"paperId":"b92c82f68d265ee966e23a23c8b4ee695b7ed96e","title":"0
        Advantages and New Applications of DHT-Based Discovery Services in EPCglobal
        Network","url":"https://www.semanticscholar.org/paper/b92c82f68d265ee966e23a23c8b4ee695b7ed96e","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"2556837","name":"Tomoya
        Kitani","url":"https://www.semanticscholar.org/author/2556837"},{"authorId":"1771100","name":"Nobuo
        Funabiki","url":"https://www.semanticscholar.org/author/1771100"},{"authorId":"1740195","name":"Hirozumi
        Yamaguchi","url":"https://www.semanticscholar.org/author/1740195"},{"authorId":"1692953","name":"Teruo
        Higashino","url":"https://www.semanticscholar.org/author/1692953"}],"doi":"10.1007/978-3-540-79549-0_28","isInfluential":false,"paperId":"cf34fa50df940b5b6db00d10e325e9bd3a4893ce","title":"Hierarchical
        Logical Topology in WDM Ring Networks with Limited ADMs","url":"https://www.semanticscholar.org/paper/cf34fa50df940b5b6db00d10e325e9bd3a4893ce","venue":"Networking","year":2008},{"arxivId":null,"authors":[{"authorId":"2118221","name":"Imre
        Kel\u00e9nyi","url":"https://www.semanticscholar.org/author/2118221"},{"authorId":"1898204","name":"J.K.
        Nurminen","url":"https://www.semanticscholar.org/author/1898204"}],"doi":null,"isInfluential":false,"paperId":"0b8d60bd635ca371d267bd56ba12ef6e8cec61c5","title":"Energy
        Aspects of Peer Cooperation Measurements with a Mobile DHT System","url":"https://www.semanticscholar.org/paper/0b8d60bd635ca371d267bd56ba12ef6e8cec61c5","venue":"ICC
        Workshops - 2008 IEEE International Conference on Communications Workshops","year":2008},{"arxivId":null,"authors":[{"authorId":"1957774","name":"John
        Risson","url":"https://www.semanticscholar.org/author/1957774"},{"authorId":"1678182","name":"Aaron
        Harwood","url":"https://www.semanticscholar.org/author/1678182"},{"authorId":"2009990","name":"Tim
        Moors","url":"https://www.semanticscholar.org/author/2009990"}],"doi":"10.1109/TPDS.2008.145","isInfluential":false,"paperId":"e89442a7e022f1ab0336748736552b969398118d","title":"Topology
        Dissemination for Reliable One-Hop Distributed Hash Tables","url":"https://www.semanticscholar.org/paper/e89442a7e022f1ab0336748736552b969398118d","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2009},{"arxivId":null,"authors":[{"authorId":null,"name":"Radha
        G. Dobale","url":null}],"doi":null,"isInfluential":false,"paperId":"87b24a68e1a081219446285b3d9fd98289064d95","title":"Review
        of Load Balancing for Distributed Systems in Cloud","url":"https://www.semanticscholar.org/paper/87b24a68e1a081219446285b3d9fd98289064d95","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"2370043","name":"Cristina
        Rottondi","url":"https://www.semanticscholar.org/author/2370043"},{"authorId":"40335669","name":"Marco
        Savi","url":"https://www.semanticscholar.org/author/40335669"},{"authorId":"3104139","name":"Giacomo
        Verticale","url":"https://www.semanticscholar.org/author/3104139"},{"authorId":"2931894","name":"Christoph
        Krau\u00df","url":"https://www.semanticscholar.org/author/2931894"}],"doi":null,"isInfluential":true,"paperId":"5c75c34f0d610e9ee432bbca5a9b48d9c8775a7b","title":"Mitigation
        of P 2 P Overlay Attacks in the Automatic Metering Infrastructure of Smart
        Grids \u2021","url":"https://www.semanticscholar.org/paper/5c75c34f0d610e9ee432bbca5a9b48d9c8775a7b","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"1795625","name":"Ingmar
        Baumgart","url":"https://www.semanticscholar.org/author/1795625"},{"authorId":"2488947","name":"Bernhard
        Heep","url":"https://www.semanticscholar.org/author/2488947"}],"doi":"10.1109/NGI.2012.6252169","isInfluential":false,"paperId":"38954dad6872ad5c5a3bfd7007f9244521c8a03b","title":"Fast
        but economical: A simulative comparison of structured peer-to-peer systems","url":"https://www.semanticscholar.org/paper/38954dad6872ad5c5a3bfd7007f9244521c8a03b","venue":"Proceedings
        of the 8th Euro-NF Conference on Next Generation Internet NGI 2012","year":2012},{"arxivId":null,"authors":[{"authorId":"39410860","name":"Xiao-wen
        Nie","url":"https://www.semanticscholar.org/author/39410860"},{"authorId":"2388907","name":"Xianliang
        Lu","url":"https://www.semanticscholar.org/author/2388907"},{"authorId":"2687318","name":"Hancong
        Duan","url":"https://www.semanticscholar.org/author/2687318"},{"authorId":"47681623","name":"Lin
        Li","url":"https://www.semanticscholar.org/author/47681623"},{"authorId":"2408368","name":"Xun
        Pu","url":"https://www.semanticscholar.org/author/2408368"}],"doi":"10.1109/GCC.2007.90","isInfluential":true,"paperId":"7f6c02150a9847d3e886ebfa3feb2c9696d32bdc","title":"On
        the Convergence of Chord Network","url":"https://www.semanticscholar.org/paper/7f6c02150a9847d3e886ebfa3feb2c9696d32bdc","venue":"Sixth
        International Conference on Grid and Cooperative Computing (GCC 2007)","year":2007},{"arxivId":null,"authors":[{"authorId":"1740390","name":"Duc
        A. Tran","url":"https://www.semanticscholar.org/author/1740390"},{"authorId":"4693097","name":"Cuong
        Pham","url":"https://www.semanticscholar.org/author/4693097"}],"doi":"10.1007/978-3-642-01399-7_60","isInfluential":false,"paperId":"10fdc05b8f4af75f26df98ae7f06d2a486536ad5","title":"PUB-2-SUB:
        A Content-Based Publish/Subscribe Framework for Cooperative P2P Networks","url":"https://www.semanticscholar.org/paper/10fdc05b8f4af75f26df98ae7f06d2a486536ad5","venue":"Networking","year":2009},{"arxivId":null,"authors":[{"authorId":"48688915","name":"S.
        A. Baset","url":"https://www.semanticscholar.org/author/48688915"}],"doi":null,"isInfluential":true,"paperId":"90abde2c9ea29f60cf5309e32eee18631b623bf5","title":"Protocols
        and System Design , Reliability , and Energy Efficiency in Peer-to-Peer Communication
        Systems","url":"https://www.semanticscholar.org/paper/90abde2c9ea29f60cf5309e32eee18631b623bf5","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"8940287","name":"Konstantinos
        Vasileios Katsaros","url":"https://www.semanticscholar.org/author/8940287"},{"authorId":"2277552","name":"Nikos
        Fotiou","url":"https://www.semanticscholar.org/author/2277552"},{"authorId":"1842694","name":"Xenofon
        Vasilakos","url":"https://www.semanticscholar.org/author/1842694"},{"authorId":"1696602","name":"Christopher
        N. Ververidis","url":"https://www.semanticscholar.org/author/1696602"},{"authorId":"1891354","name":"Christos
        Tsilopoulos","url":"https://www.semanticscholar.org/author/1891354"},{"authorId":"1807083","name":"George
        Xylomenos","url":"https://www.semanticscholar.org/author/1807083"},{"authorId":"1720651","name":"George
        C. Polyzos","url":"https://www.semanticscholar.org/author/1720651"}],"doi":"10.1007/978-3-642-30045-5_2","isInfluential":true,"paperId":"43a4f11f2ced503b26b1f11582d27e0cf0dc859e","title":"On
        Inter-Domain Name Resolution for Information-Centric Networks","url":"https://www.semanticscholar.org/paper/43a4f11f2ced503b26b1f11582d27e0cf0dc859e","venue":"Networking","year":2012},{"arxivId":null,"authors":[{"authorId":"32276947","name":"Bent
        Guldbjerg Christensen","url":"https://www.semanticscholar.org/author/32276947"}],"doi":null,"isInfluential":true,"paperId":"f02b513ec37377d10fc3202f48cabbad36408604","title":"Mobile
        P 2 P in Ad Hoc Networks : Framework and Applications","url":"https://www.semanticscholar.org/paper/f02b513ec37377d10fc3202f48cabbad36408604","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"2019853","name":"Markus
        Benter","url":"https://www.semanticscholar.org/author/2019853"},{"authorId":"2686015","name":"Mohammad
        Divband","url":"https://www.semanticscholar.org/author/2686015"},{"authorId":"1701223","name":"Sebastian
        Kniesburges","url":"https://www.semanticscholar.org/author/1701223"},{"authorId":"35057553","name":"Andreas
        Koutsopoulos","url":"https://www.semanticscholar.org/author/35057553"},{"authorId":"1713399","name":"Kalman
        Graffi","url":"https://www.semanticscholar.org/author/1713399"}],"doi":"10.1109/NetSys.2013.11","isInfluential":false,"paperId":"64b22cf0aa879a78bb985deb6a5e64548e7adbfc","title":"Ca-Re-Chord:
        A Churn Resistant Self-Stabilizing Chord Overlay Network","url":"https://www.semanticscholar.org/paper/64b22cf0aa879a78bb985deb6a5e64548e7adbfc","venue":"2013
        Conference on Networked Systems","year":2013},{"arxivId":null,"authors":[{"authorId":"2752148","name":"Shubha
        Kher","url":"https://www.semanticscholar.org/author/2752148"},{"authorId":"1683734","name":"Arun
        K. Somani","url":"https://www.semanticscholar.org/author/1683734"},{"authorId":"37376558","name":"Rohit
        Gupta","url":"https://www.semanticscholar.org/author/37376558"}],"doi":"10.1109/ICBN.2005.1589698","isInfluential":false,"paperId":"66bbb8337db87dcd2a469454920276061dd2d060","title":"Network
        selection using fuzzy logic","url":"https://www.semanticscholar.org/paper/66bbb8337db87dcd2a469454920276061dd2d060","venue":"2nd
        International Conference on Broadband Networks, 2005.","year":2005},{"arxivId":null,"authors":[{"authorId":"1729376","name":"Pengbo
        Si","url":"https://www.semanticscholar.org/author/1729376"},{"authorId":"1696615","name":"Fei
        Richard Yu","url":"https://www.semanticscholar.org/author/1696615"},{"authorId":"1693858","name":"Hong
        Ji","url":"https://www.semanticscholar.org/author/1693858"},{"authorId":"3598400","name":"Victor
        C. M. Leung","url":"https://www.semanticscholar.org/author/3598400"}],"doi":"10.1109/ICC.2009.5198929","isInfluential":false,"paperId":"07479b415dcfc6f38687fe10a115ebab3ae9c338","title":"Distributed
        Multi-Source Transmission in Wireless Mobile Peer-to-Peer Networks: A Restless
        Bandit Approach","url":"https://www.semanticscholar.org/paper/07479b415dcfc6f38687fe10a115ebab3ae9c338","venue":"2009
        IEEE International Conference on Communications","year":2009},{"arxivId":null,"authors":[{"authorId":"51385071","name":"T.
        Wolfl","url":"https://www.semanticscholar.org/author/51385071"}],"doi":null,"isInfluential":true,"paperId":"5eef9bf0b6dc0c8cbadac9b679a45beac5b5a037","title":"Public-Key-Infrastructure
        Based on a Peer-to-Peer Network","url":"https://www.semanticscholar.org/paper/5eef9bf0b6dc0c8cbadac9b679a45beac5b5a037","venue":"Proceedings
        of the 38th Annual Hawaii International Conference on System Sciences","year":2005},{"arxivId":null,"authors":[{"authorId":"1722366","name":"Rajiv
        Ranjan","url":"https://www.semanticscholar.org/author/1722366"},{"authorId":"48096354","name":"Liang
        Zhao","url":"https://www.semanticscholar.org/author/48096354"}],"doi":"10.1007/s11227-011-0710-5","isInfluential":false,"paperId":"19de4fa5605c7c70cbbc930b3752697f9019c356","title":"Peer-to-peer
        service provisioning in cloud computing environments","url":"https://www.semanticscholar.org/paper/19de4fa5605c7c70cbbc930b3752697f9019c356","venue":"The
        Journal of Supercomputing","year":2011},{"arxivId":null,"authors":[{"authorId":"2172801","name":"Che-Wei
        Chang","url":"https://www.semanticscholar.org/author/2172801"},{"authorId":"1681450","name":"Hung-Chang
        Hsiao","url":"https://www.semanticscholar.org/author/1681450"}],"doi":"10.1109/ICPADS.2011.129","isInfluential":true,"paperId":"1f6bdd35dfec1c5bcd5bc4071701383a60721d14","title":"Stochastic
        Load Rebalancing in Distributed Hash Tables","url":"https://www.semanticscholar.org/paper/1f6bdd35dfec1c5bcd5bc4071701383a60721d14","venue":"2011
        IEEE 17th International Conference on Parallel and Distributed Systems","year":2011},{"arxivId":null,"authors":[{"authorId":"2699080","name":"Raphael
        Y. de Camargo","url":"https://www.semanticscholar.org/author/2699080"},{"authorId":"1719483","name":"Fernando
        Castor Filho","url":"https://www.semanticscholar.org/author/1719483"},{"authorId":"1720007","name":"Fabio
        Kon","url":"https://www.semanticscholar.org/author/1720007"}],"doi":"10.1007/s13173-010-0016-0","isInfluential":false,"paperId":"d43198640268d7c63c46f7a689008537b831d70b","title":"Reliable
        management of checkpointing and application data in\u00a0opportunistic grids","url":"https://www.semanticscholar.org/paper/d43198640268d7c63c46f7a689008537b831d70b","venue":"Journal
        of the Brazilian Computer Society","year":2010},{"arxivId":null,"authors":[{"authorId":"2735314","name":"Pawel
        Garbacki","url":"https://www.semanticscholar.org/author/2735314"}],"doi":null,"isInfluential":false,"paperId":"6177238ee75ff01c449505e9e4173231eded8e8e","title":"Improving
        P 2 P Applications by Breaking the Architecture Symmetry","url":"https://www.semanticscholar.org/paper/6177238ee75ff01c449505e9e4173231eded8e8e","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"30496615","name":"Lucas
        Charles","url":"https://www.semanticscholar.org/author/30496615"},{"authorId":"1743906","name":"Pascal
        Felber","url":"https://www.semanticscholar.org/author/1743906"},{"authorId":"1991092","name":"Raluca
        Halalai","url":"https://www.semanticscholar.org/author/1991092"},{"authorId":"2633361","name":"Etienne
        Rivi\u00e8re","url":"https://www.semanticscholar.org/author/2633361"},{"authorId":"2106027","name":"Valerio
        Schiavoni","url":"https://www.semanticscholar.org/author/2106027"},{"authorId":"50493165","name":"Jos\u00e9
        Valerio","url":"https://www.semanticscholar.org/author/50493165"}],"doi":null,"isInfluential":false,"paperId":"d6220a90a940b455f1e455bb3b747e38dfb3919e","title":"An
        overview of new features in the S PLAY framework for simple distributed systems
        evaluation","url":"https://www.semanticscholar.org/paper/d6220a90a940b455f1e455bb3b747e38dfb3919e","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"1753489","name":"Zhongmei
        Yao","url":"https://www.semanticscholar.org/author/1753489"},{"authorId":"34983248","name":"Daren
        B. H. Cline","url":"https://www.semanticscholar.org/author/34983248"},{"authorId":"1737609","name":"Dmitri
        Loguinov","url":"https://www.semanticscholar.org/author/1737609"}],"doi":"10.1109/TNET.2014.2306153","isInfluential":false,"paperId":"13c5de4df5a229be009c17f7e731a79bb4cbe0bd","title":"Unstructured
        P2P Link Lifetimes Redux","url":"https://www.semanticscholar.org/paper/13c5de4df5a229be009c17f7e731a79bb4cbe0bd","venue":"IEEE/ACM
        Transactions on Networking","year":2013},{"arxivId":null,"authors":[{"authorId":"1783689","name":"Wu-Chun
        Chung","url":"https://www.semanticscholar.org/author/1783689"},{"authorId":"2774220","name":"Chin-Jung
        Hsu","url":"https://www.semanticscholar.org/author/2774220"},{"authorId":"2720461","name":"Kuan-Chou
        Lai","url":"https://www.semanticscholar.org/author/2720461"},{"authorId":"38693900","name":"Kuan-Ching
        Li","url":"https://www.semanticscholar.org/author/38693900"},{"authorId":"1710898","name":"Yeh-Ching
        Chung","url":"https://www.semanticscholar.org/author/1710898"}],"doi":"10.1109/SOCA.2011.6166206","isInfluential":false,"paperId":"f966cb8a52281631a5bc4b453dc533371d337291","title":"Direction-aware
        resource discovery service in large-scale grid and cloud computing","url":"https://www.semanticscholar.org/paper/f966cb8a52281631a5bc4b453dc533371d337291","venue":"2011
        IEEE International Conference on Service-Oriented Computing and Applications
        (SOCA)","year":2011},{"arxivId":null,"authors":[{"authorId":"38057896","name":"James
        Salter","url":"https://www.semanticscholar.org/author/38057896"},{"authorId":"1805514","name":"Nick
        Antonopoulos","url":"https://www.semanticscholar.org/author/1805514"}],"doi":null,"isInfluential":false,"paperId":"f6f23c006a13d5cb15eb529aab803817441a830a","title":"ROME
        : Optimising DHT-based Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/f6f23c006a13d5cb15eb529aab803817441a830a","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"1716059","name":"Maozhen
        Li","url":"https://www.semanticscholar.org/author/1716059"},{"authorId":"46806271","name":"Bin
        Yu","url":"https://www.semanticscholar.org/author/46806271"},{"authorId":"1751264","name":"Omer
        F. Rana","url":"https://www.semanticscholar.org/author/1751264"},{"authorId":"9313757","name":"Zidong
        Wang","url":"https://www.semanticscholar.org/author/9313757"}],"doi":"10.1109/TKDE.2007.190744","isInfluential":false,"paperId":"6b56556a73c26c6998b20a40b5a681939393b69c","title":"Grid
        Service Discovery with Rough Sets","url":"https://www.semanticscholar.org/paper/6b56556a73c26c6998b20a40b5a681939393b69c","venue":"IEEE
        Transactions on Knowledge and Data Engineering","year":2008},{"arxivId":null,"authors":[{"authorId":"1957774","name":"John
        Risson","url":"https://www.semanticscholar.org/author/1957774"},{"authorId":"40540644","name":"Ken
        Robinson","url":"https://www.semanticscholar.org/author/40540644"},{"authorId":"2009990","name":"Tim
        Moors","url":"https://www.semanticscholar.org/author/2009990"}],"doi":null,"isInfluential":true,"paperId":"1cba2131e97576f972bc8b9024fda38bddc2ec90","title":"Related
        \ufffd Work \ufffd 2 . 1 P 2 P \ufffd Topology \ufffd Maintenance \ufffd","url":"https://www.semanticscholar.org/paper/1cba2131e97576f972bc8b9024fda38bddc2ec90","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"1963357","name":"Paraskevi
        Raftopoulou","url":"https://www.semanticscholar.org/author/1963357"},{"authorId":"1729390","name":"Euripides
        G. M. Petrakis","url":"https://www.semanticscholar.org/author/1729390"}],"doi":"10.1007/978-3-642-16934-2_42","isInfluential":false,"paperId":"c60708eed35f76bc349743c9aceef744e28bec8a","title":"Peer
        Rewiring in Semantic Overlay Networks under Churn - (Short Paper)","url":"https://www.semanticscholar.org/paper/c60708eed35f76bc349743c9aceef744e28bec8a","venue":"OTM
        Conferences","year":2010},{"arxivId":null,"authors":[{"authorId":"2291598","name":"Srikumar
        Venugopal","url":"https://www.semanticscholar.org/author/2291598"}],"doi":"10.1016/j.jpdc.2007.07.004","isInfluential":false,"paperId":"306907d66dd093ce7c01915c7556e253f591a43e","title":"A
        Set Coverage-based Mapping Heuristic for Scheduling Distributed Data-Intensive
        Applications on Global Grids","url":"https://www.semanticscholar.org/paper/306907d66dd093ce7c01915c7556e253f591a43e","venue":"2006
        7th IEEE/ACM International Conference on Grid Computing","year":2006},{"arxivId":null,"authors":[{"authorId":"1909866","name":"Leandro
        Pacheco de Sousa","url":"https://www.semanticscholar.org/author/1909866"},{"authorId":"1991092","name":"Raluca
        Halalai","url":"https://www.semanticscholar.org/author/1991092"},{"authorId":"2106027","name":"Valerio
        Schiavoni","url":"https://www.semanticscholar.org/author/2106027"},{"authorId":"1739265","name":"Fernando
        Pedone","url":"https://www.semanticscholar.org/author/1739265"},{"authorId":"2633361","name":"Etienne
        Rivi\u00e8re","url":"https://www.semanticscholar.org/author/2633361"},{"authorId":"1743906","name":"Pascal
        Felber","url":"https://www.semanticscholar.org/author/1743906"}],"doi":"10.1109/SRDS.2016.027","isInfluential":false,"paperId":"759ec77a6157de65bd20d000c8abd2670d4bb34d","title":"GlobalFS:
        A Strongly Consistent Multi-site File System","url":"https://www.semanticscholar.org/paper/759ec77a6157de65bd20d000c8abd2670d4bb34d","venue":"2016
        IEEE 35th Symposium on Reliable Distributed Systems (SRDS)","year":2016},{"arxivId":null,"authors":[{"authorId":"2337874","name":"Junyao
        Zhang","url":"https://www.semanticscholar.org/author/2337874"},{"authorId":"1993796","name":"Pengju
        Shang","url":"https://www.semanticscholar.org/author/1993796"},{"authorId":"37089214","name":"Jun
        Wang","url":"https://www.semanticscholar.org/author/37089214"}],"doi":"10.1109/IPDPS.2011.64","isInfluential":false,"paperId":"3155aae7959e58f54d931d4b51c29b93f57e4b94","title":"A
        Scalable Reverse Lookup Scheme Using Group-Based Shifted Declustering Layout","url":"https://www.semanticscholar.org/paper/3155aae7959e58f54d931d4b51c29b93f57e4b94","venue":"2011
        IEEE International Parallel & Distributed Processing Symposium","year":2011},{"arxivId":null,"authors":[{"authorId":"40523061","name":"Sheila
        Becker","url":"https://www.semanticscholar.org/author/40523061"},{"authorId":"1757227","name":"Radu
        State","url":"https://www.semanticscholar.org/author/1757227"},{"authorId":"1745623","name":"Thomas
        Engel","url":"https://www.semanticscholar.org/author/1745623"}],"doi":"10.1145/1595637.1595645","isInfluential":true,"paperId":"e66a5b6a268b936a532686f95538a7ccf6385c2b","title":"Using
        game theory to configure P2P SIP","url":"https://www.semanticscholar.org/paper/e66a5b6a268b936a532686f95538a7ccf6385c2b","venue":"IPTComm","year":2009},{"arxivId":null,"authors":[{"authorId":"1718248","name":"Spyros
        Sioutas","url":"https://www.semanticscholar.org/author/1718248"},{"authorId":"2851386","name":"Konstantinos
        Oikonomou","url":"https://www.semanticscholar.org/author/2851386"},{"authorId":"1837376","name":"George
        Papaloukopoulos","url":"https://www.semanticscholar.org/author/1837376"},{"authorId":"2391952","name":"M.
        Xenos","url":"https://www.semanticscholar.org/author/2391952"},{"authorId":"1796253","name":"Yannis
        Manolopoulos","url":"https://www.semanticscholar.org/author/1796253"}],"doi":"10.1145/1643823.1643890","isInfluential":true,"paperId":"1e3d27bbaf5976ec3b4007fee366ef9f8d11daa4","title":"Building
        an efficient P2P overlay for energy-level queries in sensor networks","url":"https://www.semanticscholar.org/paper/1e3d27bbaf5976ec3b4007fee366ef9f8d11daa4","venue":"MEDES","year":2009},{"arxivId":null,"authors":[{"authorId":"35833306","name":"B.
        S. Jyothi","url":"https://www.semanticscholar.org/author/35833306"},{"authorId":"1941698","name":"D.
        Janaki Ram","url":"https://www.semanticscholar.org/author/1941698"}],"doi":"10.1109/P2P.2009.5284520","isInfluential":false,"paperId":"abbbae5e534eb78ae86dd87e0826dd7e03d504f5","title":"SyMon:
        Defending large structured P2P systems against Sybil attack","url":"https://www.semanticscholar.org/paper/abbbae5e534eb78ae86dd87e0826dd7e03d504f5","venue":"2009
        IEEE Ninth International Conference on Peer-to-Peer Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"34787658","name":"Prithviraj
        Dasgupta","url":"https://www.semanticscholar.org/author/34787658"}],"doi":"10.1145/1082473.1082601","isInfluential":false,"paperId":"571e1f4d655f7f687b2db26adb74588728ed5f45","title":"Adaptive
        sharing of large resources in P2P networks","url":"https://www.semanticscholar.org/paper/571e1f4d655f7f687b2db26adb74588728ed5f45","venue":"AAMAS","year":2005},{"arxivId":null,"authors":[{"authorId":"2135218","name":"Kimihiro
        Mizutani","url":"https://www.semanticscholar.org/author/2135218"},{"authorId":"1795614","name":"Satoshi
        Matsuura","url":"https://www.semanticscholar.org/author/1795614"},{"authorId":"1757401","name":"Shinichi
        Doi","url":"https://www.semanticscholar.org/author/1757401"},{"authorId":"1784840","name":"Kazutoshi
        Fujikawa","url":"https://www.semanticscholar.org/author/1784840"},{"authorId":"49395477","name":"Hideki
        Sunahara","url":"https://www.semanticscholar.org/author/49395477"}],"doi":null,"isInfluential":true,"paperId":"d83718ea9952273dbf9483a3f0e4f10e022c43c9","title":"An
        Implementation and Its Evaluation of a Framework for Managing States of Nodes
        among Structured Overlay Networks","url":"https://www.semanticscholar.org/paper/d83718ea9952273dbf9483a3f0e4f10e022c43c9","venue":"2010
        Sixth International Conference on Networking and Services","year":2010},{"arxivId":null,"authors":[{"authorId":"2273899","name":"Juan
        Pedro Mu\u00f1oz-Gea","url":"https://www.semanticscholar.org/author/2273899"},{"authorId":"1945204","name":"Josemaria
        Malgosa-Sanahuja","url":"https://www.semanticscholar.org/author/1945204"},{"authorId":"2301331","name":"Pilar
        Manzanares-Lopez","url":"https://www.semanticscholar.org/author/2301331"},{"authorId":"5475203","name":"Juan
        Carlos S\u00e1nchez-Aarnoutse","url":"https://www.semanticscholar.org/author/5475203"},{"authorId":"2187475","name":"Antonio
        M. Guirado-Puerta","url":"https://www.semanticscholar.org/author/2187475"}],"doi":null,"isInfluential":false,"paperId":"9a821640c9cd6d05767f2739223e1234ccbed00e","title":"A
        hybrid topology architecture for p2p file sharing systems","url":"https://www.semanticscholar.org/paper/9a821640c9cd6d05767f2739223e1234ccbed00e","venue":"ICSOFT","year":2006},{"arxivId":null,"authors":[{"authorId":"1689512","name":"John
        F. Buford","url":"https://www.semanticscholar.org/author/1689512"},{"authorId":"50713386","name":"Alan
        C. Brown","url":"https://www.semanticscholar.org/author/50713386"},{"authorId":"1796567","name":"Mario
        Kolberg","url":"https://www.semanticscholar.org/author/1796567"}],"doi":"10.1109/PERCOMW.2006.93","isInfluential":false,"paperId":"2ad934650e85b72478bf1ac99710089f2845ac79","title":"Meta
        service discovery","url":"https://www.semanticscholar.org/paper/2ad934650e85b72478bf1ac99710089f2845ac79","venue":"Fourth
        Annual IEEE International Conference on Pervasive Computing and Communications
        Workshops (PERCOMW''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"38509651","name":"Elizabeth
        Babu","url":"https://www.semanticscholar.org/author/38509651"},{"authorId":"5658119","name":"Kodandaram
        Sumalatha","url":"https://www.semanticscholar.org/author/5658119"},{"authorId":"40377808","name":"Beena
        C. R. Devi","url":"https://www.semanticscholar.org/author/40377808"},{"authorId":"40273497","name":"K.
        Murali Babu","url":"https://www.semanticscholar.org/author/40273497"}],"doi":null,"isInfluential":false,"paperId":"5aa1c79c3c98fa5cb0b0c5e213972dcc1214f403","title":"Optimizing
        Search Performance in Unstructured Peer to Peer Networks Using Enhanced Search
        Protocol","url":"https://www.semanticscholar.org/paper/5aa1c79c3c98fa5cb0b0c5e213972dcc1214f403","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"13793862","name":"Curt
        Cramer","url":"https://www.semanticscholar.org/author/13793862"},{"authorId":"1806218","name":"Thomas
        Fuhrmann","url":"https://www.semanticscholar.org/author/1806218"}],"doi":"10.1145/1161252.1161264","isInfluential":false,"paperId":"643ac382fdefda5932c531c99c7404a9349a90b9","title":"Performance
        evaluation of chord in mobile ad hoc networks","url":"https://www.semanticscholar.org/paper/643ac382fdefda5932c531c99c7404a9349a90b9","venue":"MobiShare@MobiCom","year":2006},{"arxivId":null,"authors":[{"authorId":"8940287","name":"Konstantinos
        Vasileios Katsaros","url":"https://www.semanticscholar.org/author/8940287"}],"doi":null,"isInfluential":true,"paperId":"cb7df304f8d33cd0a2255f3e0f5abb9a6cac0d3a","title":"An
        information-centric overlay . . .","url":"https://www.semanticscholar.org/paper/cb7df304f8d33cd0a2255f3e0f5abb9a6cac0d3a","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"38314769","name":"R.
        Seth Terashima","url":"https://www.semanticscholar.org/author/38314769"},{"authorId":"1699091","name":"James
        D. Fix","url":"https://www.semanticscholar.org/author/1699091"}],"doi":null,"isInfluential":true,"paperId":"f2d42969f41c6400c96e5894f8f3f3fe83305a3b","title":"Greedy
        Routing on Augmented Ring Graphs","url":"https://www.semanticscholar.org/paper/f2d42969f41c6400c96e5894f8f3f3fe83305a3b","venue":"ArXiv","year":2010},{"arxivId":null,"authors":[{"authorId":"37422904","name":"Nathanael
        Thompson","url":"https://www.semanticscholar.org/author/37422904"},{"authorId":"1768789","name":"Petros
        Zerfos","url":"https://www.semanticscholar.org/author/1768789"},{"authorId":"2288800","name":"Robert
        Sombrutzki","url":"https://www.semanticscholar.org/author/2288800"},{"authorId":"1846726","name":"Jens-Peter
        Redlich","url":"https://www.semanticscholar.org/author/1846726"},{"authorId":"2180072","name":"Haiyun
        Luo","url":"https://www.semanticscholar.org/author/2180072"}],"doi":"10.1145/1411759.1411768","isInfluential":false,"paperId":"1484c138c95787aac27c5aac843126deecdd51dc","title":"100%
        Organic: Design and Implementation of Self-sustaining Cellular Networks","url":"https://www.semanticscholar.org/paper/1484c138c95787aac27c5aac843126deecdd51dc","venue":"HotMobile","year":2008},{"arxivId":null,"authors":[{"authorId":"41199037","name":"Darren
        Dao","url":"https://www.semanticscholar.org/author/41199037"},{"authorId":"24299376","name":"Jeannie
        R. Albrecht","url":"https://www.semanticscholar.org/author/24299376"},{"authorId":"2233411","name":"Charles
        Edwin Killian","url":"https://www.semanticscholar.org/author/2233411"},{"authorId":"1718754","name":"Amin
        Vahdat","url":"https://www.semanticscholar.org/author/1718754"}],"doi":"10.1007/978-3-642-00722-4_8","isInfluential":true,"paperId":"f7c532d959aebacefdd56350946dbd126603f1b9","title":"Live
        Debugging of Distributed Systems","url":"https://www.semanticscholar.org/paper/f7c532d959aebacefdd56350946dbd126603f1b9","venue":"CC","year":2008},{"arxivId":null,"authors":[{"authorId":"1753830","name":"John
        K. Ousterhout","url":"https://www.semanticscholar.org/author/1753830"},{"authorId":"1971369","name":"Arjun
        Gopalan","url":"https://www.semanticscholar.org/author/1971369"},{"authorId":"50179295","name":"Ashish
        Gupta","url":"https://www.semanticscholar.org/author/50179295"},{"authorId":"1880482","name":"Ankita
        Kejriwal","url":"https://www.semanticscholar.org/author/1880482"},{"authorId":"18351046","name":"Collin
        Lee","url":"https://www.semanticscholar.org/author/18351046"},{"authorId":"32792108","name":"Behnam
        Montazeri","url":"https://www.semanticscholar.org/author/32792108"},{"authorId":"40069180","name":"Diego
        Ongaro","url":"https://www.semanticscholar.org/author/40069180"},{"authorId":"46570278","name":"Seo
        Jin Park","url":"https://www.semanticscholar.org/author/46570278"},{"authorId":"39492736","name":"Henry
        Qin","url":"https://www.semanticscholar.org/author/39492736"},{"authorId":"8373823","name":"Mendel
        Rosenblum","url":"https://www.semanticscholar.org/author/8373823"},{"authorId":"2224644","name":"Stephen
        M. Rumble","url":"https://www.semanticscholar.org/author/2224644"},{"authorId":"3087426","name":"Ryan
        Stutsman","url":"https://www.semanticscholar.org/author/3087426"},{"authorId":"49081125","name":"Stephen
        Yang","url":"https://www.semanticscholar.org/author/49081125"}],"doi":"10.1145/2806887","isInfluential":false,"paperId":"1ac1348938a45e1da84be8caac78e3097acaf0c1","title":"The
        RAMCloud Storage System","url":"https://www.semanticscholar.org/paper/1ac1348938a45e1da84be8caac78e3097acaf0c1","venue":"ACM
        Trans. Comput. Syst.","year":2015},{"arxivId":null,"authors":[{"authorId":"1733113","name":"Takeo
        Kanade","url":"https://www.semanticscholar.org/author/1733113"},{"authorId":"1748684","name":"Josef
        Kittler","url":"https://www.semanticscholar.org/author/1748684"},{"authorId":"3371403","name":"Jon
        M. Kleinberg","url":"https://www.semanticscholar.org/author/3371403"},{"authorId":"1715227","name":"Alfred
        Kobsa","url":"https://www.semanticscholar.org/author/1715227"},{"authorId":"1685743","name":"John
        C. Mitchell","url":"https://www.semanticscholar.org/author/1685743"},{"authorId":"1693267","name":"Moni
        Naor","url":"https://www.semanticscholar.org/author/1693267"}],"doi":"10.1007/978-3-319-10587-1","isInfluential":true,"paperId":"a58d42abf6a98fb387fa2827ea4f8b54671dd5c8","title":"Reasoning
        Web. Reasoning on the Web in the Big Data Era","url":"https://www.semanticscholar.org/paper/a58d42abf6a98fb387fa2827ea4f8b54671dd5c8","venue":"Lecture
        Notes in Computer Science","year":2014},{"arxivId":null,"authors":[{"authorId":"1783350","name":"Rui
        Shen","url":"https://www.semanticscholar.org/author/1783350"},{"authorId":"5107518","name":"Ji
        Wang","url":"https://www.semanticscholar.org/author/5107518"},{"authorId":"50201740","name":"Shengdong
        Zhang","url":"https://www.semanticscholar.org/author/50201740"},{"authorId":"2959135","name":"Siqi
        Shen","url":"https://www.semanticscholar.org/author/2959135"},{"authorId":"38025889","name":"Pei
        Fan","url":"https://www.semanticscholar.org/author/38025889"}],"doi":"10.1145/1596655.1596662","isInfluential":true,"paperId":"70fbe421673a1b03dd1b1ce4ca9bb8221cac8ef9","title":"A
        framework for constructing peer-to-peer overlay networks in Java","url":"https://www.semanticscholar.org/paper/70fbe421673a1b03dd1b1ce4ca9bb8221cac8ef9","venue":"PPPJ","year":2009},{"arxivId":null,"authors":[{"authorId":"3235066","name":"Quang
        Le-Dang","url":"https://www.semanticscholar.org/author/3235066"},{"authorId":"3334823","name":"Jennifer
        McManis","url":"https://www.semanticscholar.org/author/3334823"},{"authorId":"1742225","name":"Gabriel-Miro
        Muntean","url":"https://www.semanticscholar.org/author/1742225"}],"doi":"10.1109/TVT.2013.2284793","isInfluential":true,"paperId":"4f1a98ad593a67033b578cf3ab8938a91981190e","title":"Location-Aware
        Chord-Based Overlay for Wireless Mesh Networks","url":"https://www.semanticscholar.org/paper/4f1a98ad593a67033b578cf3ab8938a91981190e","venue":"IEEE
        Transactions on Vehicular Technology","year":2014},{"arxivId":null,"authors":[{"authorId":null,"name":"\u7814\u7a76\u751f
        \u80e1\u821c\u5143 \u64b0 \u4e2d \u83ef \u6c11 \u570b \u4e5d \u5341 \u56db
        \u5e74 \u4e00 \u6708 \u8cc7\u6de1 \u8a0a \u5de5 \u7a0b\u6c5f \u5b78 \u7cfb
        \u78a9\u5927 \u58eb \u73ed\u5b78 \u78a9","url":null}],"doi":null,"isInfluential":false,"paperId":"5ef96ef10d6508c0561be416bff92df4efdbfb75","title":"\u6de1\u6c5f\u5927\u5b78\u8cc7\u8a0a\u5de5\u7a0b\u5b78\u7cfb\u78a9\u58eb\u73ed
        \u78a9\u58eb\u8ad6\u6587 \u6307\u5c0e\u6559\u6388\uff1a \u9673\u745e\u767c
        \u535a\u58eb \u4ee5\u540c\u5115\u904b\u7b97\u70ba\u57fa\u790e\u4e4b\u53ef\u64f4\u5c55\u5f0f\u7db2\u8def\u578b\u614b\u865b\u64ec\u74b0\u5883
        Scalable Peer-to-peer Networked Virtual Environment","url":"https://www.semanticscholar.org/paper/5ef96ef10d6508c0561be416bff92df4efdbfb75","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"2330486","name":"Zhonghong
        Ou","url":"https://www.semanticscholar.org/author/2330486"},{"authorId":"2533670","name":"Erkki
        Harjula","url":"https://www.semanticscholar.org/author/2533670"},{"authorId":"2189768","name":"Otso
        Kassinen","url":"https://www.semanticscholar.org/author/2189768"},{"authorId":"1727678","name":"Mika
        Ylianttila","url":"https://www.semanticscholar.org/author/1727678"}],"doi":"10.1145/1710035.1710078","isInfluential":true,"paperId":"681a35e1a54a1e291774ba590688392ffc0c6519","title":"Feasibility
        evaluation of a communication-oriented P2P system in mobile environments","url":"https://www.semanticscholar.org/paper/681a35e1a54a1e291774ba590688392ffc0c6519","venue":"Mobility
        Conference","year":2009},{"arxivId":null,"authors":[{"authorId":"46215453","name":"Fei
        Song","url":"https://www.semanticscholar.org/author/46215453"},{"authorId":"30142783","name":"Zheng-Yang
        Ai","url":"https://www.semanticscholar.org/author/30142783"},{"authorId":"35964209","name":"Jun-Jie
        Li","url":"https://www.semanticscholar.org/author/35964209"},{"authorId":"34385925","name":"Giovanni
        Pau","url":"https://www.semanticscholar.org/author/34385925"},{"authorId":"2356782","name":"Mario
        Collotta","url":"https://www.semanticscholar.org/author/2356782"},{"authorId":"1715781","name":"Ilsun
        You","url":"https://www.semanticscholar.org/author/1715781"},{"authorId":"40259922","name":"Hongke
        Zhang","url":"https://www.semanticscholar.org/author/40259922"}],"doi":"10.3390/s17112512","isInfluential":true,"paperId":"ee7e9c7e2b92dc7b804d69dc484a9130c02d70ec","title":"Smart
        Collaborative Caching for Information-Centric IoT in Fog Computing","url":"https://www.semanticscholar.org/paper/ee7e9c7e2b92dc7b804d69dc484a9130c02d70ec","venue":"Sensors","year":2017},{"arxivId":null,"authors":[{"authorId":"38801776","name":"Bo
        Yang","url":"https://www.semanticscholar.org/author/38801776"}],"doi":null,"isInfluential":false,"paperId":"a921e356cf1037e6f9e48c6fa9f97b844e74f6bc","title":"k-NN
        Multimedia Retrieval in Unstructured Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/a921e356cf1037e6f9e48c6fa9f97b844e74f6bc","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"3803349","name":"Gianluca
        Moro","url":"https://www.semanticscholar.org/author/3803349"},{"authorId":"2678409","name":"Gabriele
        Monti","url":"https://www.semanticscholar.org/author/2678409"}],"doi":"10.1109/P2P.2006.48","isInfluential":false,"paperId":"a8091d647a8fc43f7f31822b4f86b2d09f3b1e36","title":"W-Grid:
        a Cross-Layer Infrastructure for Multi-Dimensional Indexing, Querying and
        Routing in Wireless Ad-Hoc and Sensor Networks","url":"https://www.semanticscholar.org/paper/a8091d647a8fc43f7f31822b4f86b2d09f3b1e36","venue":"Sixth
        IEEE International Conference on Peer-to-Peer Computing (P2P''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"2075029","name":"Enrico
        Bragante","url":"https://www.semanticscholar.org/author/2075029"},{"authorId":"1678917","name":"Massimo
        Melucci","url":"https://www.semanticscholar.org/author/1678917"}],"doi":null,"isInfluential":false,"paperId":"6d6c16db45caf9cae680921905a9b9064c22764e","title":"Homepage
        Finding in Hybrid Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/6d6c16db45caf9cae680921905a9b9064c22764e","venue":"RIAO","year":2007},{"arxivId":null,"authors":[{"authorId":"3113057","name":"Nirav
        Dave","url":"https://www.semanticscholar.org/author/3113057"},{"authorId":"39040090","name":"Albert
        Huang","url":"https://www.semanticscholar.org/author/39040090"},{"authorId":"1916963","name":"Yuan
        Shen","url":"https://www.semanticscholar.org/author/1916963"},{"authorId":"1916663","name":"Eugene
        Wong","url":"https://www.semanticscholar.org/author/1916663"}],"doi":null,"isInfluential":false,"paperId":"6ebf75be7c4a08086f30aaacb28ce04bd7ecaeb1","title":"Content
        Distribution Using an Enhanced BitTorrent System","url":"https://www.semanticscholar.org/paper/6ebf75be7c4a08086f30aaacb28ce04bd7ecaeb1","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"2393109","name":"Chunqi
        Tian","url":"https://www.semanticscholar.org/author/2393109"},{"authorId":"46754617","name":"Jiujun
        Cheng","url":"https://www.semanticscholar.org/author/46754617"}],"doi":null,"isInfluential":false,"paperId":"a7da7d41b856c5089b7f7c3f36e4590a30922db1","title":"Building
        an Efficient Distributed Reputation Scheme for Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/a7da7d41b856c5089b7f7c3f36e4590a30922db1","venue":"2008
        International Symposium on Information Science and Engineering","year":2008},{"arxivId":null,"authors":[{"authorId":"38968310","name":"Ahsan
        Hussain","url":"https://www.semanticscholar.org/author/38968310"},{"authorId":"2846073","name":"Bettahally
        N. Keshavamurthy","url":"https://www.semanticscholar.org/author/2846073"}],"doi":"10.1007/s10586-018-1999-0","isInfluential":false,"paperId":"efccc81ae4739d20c62762613e974cfe03e45fef","title":"An
        enhanced communication mechanism for partitioned social overlay networks using
        modified multi-dimensional routing","url":"https://www.semanticscholar.org/paper/efccc81ae4739d20c62762613e974cfe03e45fef","venue":"Cluster
        Computing","year":2018},{"arxivId":null,"authors":[{"authorId":"2124370","name":"B.
        Prabhu","url":"https://www.semanticscholar.org/author/2124370"}],"doi":null,"isInfluential":true,"paperId":"318bb3158ed5600894b6b0cb9484790e2a63dcbc","title":"PSNR
        Analysis for MDC Based Video Streaming Over Peer-To-Peer Networks","url":"https://www.semanticscholar.org/paper/318bb3158ed5600894b6b0cb9484790e2a63dcbc","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"37536536","name":"Jian
        Liu","url":"https://www.semanticscholar.org/author/37536536"},{"authorId":"3890449","name":"Zhongwen
        Li","url":"https://www.semanticscholar.org/author/3890449"}],"doi":null,"isInfluential":false,"paperId":"c5c5813b549361412f250ff2c8b8d0ec19be0e71","title":"A
        New Authentication Model Based on CL-PKC in Resource Limited P2P Systems","url":"https://www.semanticscholar.org/paper/c5c5813b549361412f250ff2c8b8d0ec19be0e71","venue":"2009
        5th International Conference on Wireless Communications, Networking and Mobile
        Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"1729376","name":"Pengbo
        Si","url":"https://www.semanticscholar.org/author/1729376"},{"authorId":"2049463","name":"Yanhua
        Sun","url":"https://www.semanticscholar.org/author/2049463"},{"authorId":"1924306","name":"Yanhua
        Zhang","url":"https://www.semanticscholar.org/author/1924306"},{"authorId":"1696615","name":"Fei
        Richard Yu","url":"https://www.semanticscholar.org/author/1696615"}],"doi":null,"isInfluential":false,"paperId":"289b970003cfee1a811494b576316c980ce48714","title":"Optimal
        Cooperative Multi-Source Multimedia Transmission Scheduling in Peer-to-Peer
        Networks","url":"https://www.semanticscholar.org/paper/289b970003cfee1a811494b576316c980ce48714","venue":"2010
        Second International Conference on Multimedia and Information Technology","year":2010},{"arxivId":null,"authors":[{"authorId":"1908353","name":"Yiming
        Zhang","url":"https://www.semanticscholar.org/author/1908353"},{"authorId":"39154968","name":"Ling
        Liu","url":"https://www.semanticscholar.org/author/39154968"}],"doi":"10.1109/TKDE.2011.258","isInfluential":false,"paperId":"555a2708510879cd6750ff22b896d60119cff546","title":"Distributed
        Line Graphs: A Universal Technique for Designing DHTs Based on Arbitrary Regular
        Graphs","url":"https://www.semanticscholar.org/paper/555a2708510879cd6750ff22b896d60119cff546","venue":"IEEE
        Transactions on Knowledge and Data Engineering","year":2012},{"arxivId":null,"authors":[{"authorId":"1707188","name":"Chao-Tung
        Yang","url":"https://www.semanticscholar.org/author/1707188"},{"authorId":"3334293","name":"Hung-Yen
        Chen","url":"https://www.semanticscholar.org/author/3334293"},{"authorId":"1915074","name":"Chih-Lin
        Huang","url":"https://www.semanticscholar.org/author/1915074"},{"authorId":"2144384","name":"Shyh-Chang
        Tsaur","url":"https://www.semanticscholar.org/author/2144384"}],"doi":"10.1504/IJAHUC.2011.040120","isInfluential":false,"paperId":"2f2017a374b505e8bc98d849cd0824894d137321","title":"Implementation
        of a distributed file storage with replica management in Peer-to-Peer environments","url":"https://www.semanticscholar.org/paper/2f2017a374b505e8bc98d849cd0824894d137321","venue":"IJAHUC","year":2011},{"arxivId":null,"authors":[{"authorId":"3339519","name":"Hengkui
        Wu","url":"https://www.semanticscholar.org/author/3339519"},{"authorId":"7185067","name":"Fuhong
        Lin","url":"https://www.semanticscholar.org/author/7185067"},{"authorId":"40259922","name":"Hongke
        Zhang","url":"https://www.semanticscholar.org/author/40259922"}],"doi":null,"isInfluential":true,"paperId":"c222b17558216c8e559babb3d9b46fbaecaace61","title":"A
        novel Data-Oriented Name Service for next generation internet","url":"https://www.semanticscholar.org/paper/c222b17558216c8e559babb3d9b46fbaecaace61","venue":"2009
        IEEE International Conference on Communications Technology and Applications","year":2009},{"arxivId":null,"authors":[{"authorId":"2996903","name":"Seog-Chan
        Oh","url":"https://www.semanticscholar.org/author/2996903"},{"authorId":"47863055","name":"Ajay
        Bansal","url":"https://www.semanticscholar.org/author/47863055"},{"authorId":"35348117","name":"Zhengping
        Wu","url":"https://www.semanticscholar.org/author/35348117"}],"doi":null,"isInfluential":false,"paperId":"862d43f71601d10c0263840d0176252d670e315e","title":"The
        complexity of this metadata can range from Web Services Discovery with rough
        Sets","url":"https://www.semanticscholar.org/paper/862d43f71601d10c0263840d0176252d670e315e","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"39641533","name":"Avinash
        Lakshman","url":"https://www.semanticscholar.org/author/39641533"},{"authorId":"7941748","name":"Prashant
        Malik","url":"https://www.semanticscholar.org/author/7941748"}],"doi":"10.1145/1773912.1773922","isInfluential":false,"paperId":"6cbd8b1decf115ae3024d1281708bb0ca622e0ee","title":"Cassandra:
        a decentralized structured storage system","url":"https://www.semanticscholar.org/paper/6cbd8b1decf115ae3024d1281708bb0ca622e0ee","venue":"Operating
        Systems Review","year":2010},{"arxivId":null,"authors":[{"authorId":"3312635","name":"Chuiwei
        Lu","url":"https://www.semanticscholar.org/author/3312635"},{"authorId":"5874273","name":"Zhitang
        Li","url":"https://www.semanticscholar.org/author/5874273"},{"authorId":"2784525","name":"Huaiqing
        Lin","url":"https://www.semanticscholar.org/author/2784525"},{"authorId":"3216446","name":"Qingfeng
        Huang","url":"https://www.semanticscholar.org/author/3216446"}],"doi":"10.1109/CSSE.2008.1379","isInfluential":false,"paperId":"9e8bdcc9b24f5be394999767c83a529c04a20224","title":"Fault-Tolerant
        Routing for P2P System with Structured Topology","url":"https://www.semanticscholar.org/paper/9e8bdcc9b24f5be394999767c83a529c04a20224","venue":"2008
        International Conference on Computer Science and Software Engineering","year":2008},{"arxivId":null,"authors":[{"authorId":"1721675","name":"Emiliano
        Casalicchio","url":"https://www.semanticscholar.org/author/1721675"},{"authorId":"2461851","name":"Federico
        Morabito","url":"https://www.semanticscholar.org/author/2461851"},{"authorId":"38352373","name":"Giovanni
        Cortese","url":"https://www.semanticscholar.org/author/38352373"},{"authorId":"2634157","name":"Fabrizio
        Davide","url":"https://www.semanticscholar.org/author/2634157"}],"doi":"10.1007/s10723-006-9036-6","isInfluential":false,"paperId":"3ec165d9c70f19d8a4a21528b397cae0d7d4c72f","title":"A
        Novel Approach to Adaptive Content-based Subscription Management in DHT-based
        Overlay Networks","url":"https://www.semanticscholar.org/paper/3ec165d9c70f19d8a4a21528b397cae0d7d4c72f","venue":"Journal
        of Grid Computing","year":2006},{"arxivId":null,"authors":[{"authorId":"2895771","name":"Philip
        Chan","url":"https://www.semanticscholar.org/author/2895771"},{"authorId":"38185044","name":"David
        Abramson","url":"https://www.semanticscholar.org/author/38185044"}],"doi":"10.1109/E-SCIENCE.2007.6","isInfluential":false,"paperId":"bc8e4a73a2eee03fdbdb6af8287b9bb26f19fb13","title":"A
        Scalable and Efficient Prefix-Based Lookup Mechanism for Large-Scale Grids","url":"https://www.semanticscholar.org/paper/bc8e4a73a2eee03fdbdb6af8287b9bb26f19fb13","venue":"Third
        IEEE International Conference on e-Science and Grid Computing (e-Science 2007)","year":2007},{"arxivId":null,"authors":[{"authorId":"1742851","name":"Chaouki
        T. Abdallah","url":"https://www.semanticscholar.org/author/1742851"}],"doi":null,"isInfluential":false,"paperId":"72dc5e5ce3ccba20a8963fced803c706f627a954","title":"Chapter
        15 Identifier-Based Discovery in Large-Scale Networks","url":"https://www.semanticscholar.org/paper/72dc5e5ce3ccba20a8963fced803c706f627a954","venue":"","year":2018},{"arxivId":null,"authors":[{"authorId":"1702296","name":"Ori
        Rottenstreich","url":"https://www.semanticscholar.org/author/1702296"},{"authorId":"2351789","name":"Josef
        Kanizo","url":"https://www.semanticscholar.org/author/2351789"},{"authorId":"1733081","name":"Haim
        Kaplan","url":"https://www.semanticscholar.org/author/1733081"},{"authorId":"1730356","name":"Jennifer
        Rexford","url":"https://www.semanticscholar.org/author/1730356"}],"doi":"10.1145/3210377.3210412","isInfluential":false,"paperId":"b8039b64e5cdb3b564bf909b120b20109854a1a5","title":"Accurate
        Traffic Splitting on Commodity Switches","url":"https://www.semanticscholar.org/paper/b8039b64e5cdb3b564bf909b120b20109854a1a5","venue":"SPAA","year":2018},{"arxivId":null,"authors":[{"authorId":"46383750","name":"Dandan
        Han","url":"https://www.semanticscholar.org/author/46383750"},{"authorId":"49050949","name":"Jing
        Zhang","url":"https://www.semanticscholar.org/author/49050949"}],"doi":"10.4304/jnw.7.9.1464-1471","isInfluential":true,"paperId":"6f61cc245dd822b94d03c940481acfc32c93a208","title":"An
        Optimized Gnutella-like P2P Protocol in Mobile Networks","url":"https://www.semanticscholar.org/paper/6f61cc245dd822b94d03c940481acfc32c93a208","venue":"JNW","year":2012},{"arxivId":null,"authors":[{"authorId":"1746877","name":"Michele
        Amoretti","url":"https://www.semanticscholar.org/author/1746877"},{"authorId":"13542943","name":"Matteo
        Agosti","url":"https://www.semanticscholar.org/author/13542943"},{"authorId":"1748366","name":"Francesco
        Zanichelli","url":"https://www.semanticscholar.org/author/1748366"}],"doi":"10.1145/1537614.1537687","isInfluential":true,"paperId":"e2d4324b106a93c77889a5ecf721d9b6fd0e9304","title":"DEUS:
        a discrete event universal simulator","url":"https://www.semanticscholar.org/paper/e2d4324b106a93c77889a5ecf721d9b6fd0e9304","venue":"SimuTools","year":2009},{"arxivId":null,"authors":[{"authorId":"3229837","name":"Sergey
        Legtchenko","url":"https://www.semanticscholar.org/author/3229837"},{"authorId":"2102057","name":"S\u00e9bastien
        Monnet","url":"https://www.semanticscholar.org/author/2102057"},{"authorId":"1798389","name":"Pierre
        Sens","url":"https://www.semanticscholar.org/author/1798389"},{"authorId":"1715488","name":"Gilles
        Muller","url":"https://www.semanticscholar.org/author/1715488"}],"doi":"10.1145/2240166.2240178","isInfluential":true,"paperId":"ad18f5c7adc0072b2f1d2dfafabf44a67c4cffe2","title":"RelaxDHT:
        A churn-resilient replication strategy for peer-to-peer distributed hash-tables","url":"https://www.semanticscholar.org/paper/ad18f5c7adc0072b2f1d2dfafabf44a67c4cffe2","venue":"TAAS","year":2012},{"arxivId":null,"authors":[{"authorId":"1729376","name":"Pengbo
        Si","url":"https://www.semanticscholar.org/author/1729376"},{"authorId":"1696615","name":"Fei
        Richard Yu","url":"https://www.semanticscholar.org/author/1696615"},{"authorId":"1693858","name":"Hong
        Ji","url":"https://www.semanticscholar.org/author/1693858"},{"authorId":"3598400","name":"Victor
        C. M. Leung","url":"https://www.semanticscholar.org/author/3598400"}],"doi":"10.1109/GLOCOM.2008.ECP.992","isInfluential":false,"paperId":"8f638fdf5cd77194ac01808a5e8d722a1e01b5c9","title":"Distributed
        Sender Scheduling for Multimedia Transmission in Wireless Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/8f638fdf5cd77194ac01808a5e8d722a1e01b5c9","venue":"IEEE
        GLOBECOM 2008 - 2008 IEEE Global Telecommunications Conference","year":2008},{"arxivId":null,"authors":[{"authorId":"2719402","name":"Joe
        Sawada","url":"https://www.semanticscholar.org/author/2719402"}],"doi":"10.1016/j.endm.2005.05.018","isInfluential":false,"paperId":"bd3f9691ed6a71122459973d132d0cd0e5a7cae8","title":"A
        Gray code for binary subtraction","url":"https://www.semanticscholar.org/paper/bd3f9691ed6a71122459973d132d0cd0e5a7cae8","venue":"Electronic
        Notes in Discrete Mathematics","year":2005},{"arxivId":null,"authors":[{"authorId":"1754588","name":"Amr
        Alasaad","url":"https://www.semanticscholar.org/author/1754588"},{"authorId":"1755223","name":"Sathish
        Gopalakrishnan","url":"https://www.semanticscholar.org/author/1755223"},{"authorId":"3598400","name":"Victor
        C. M. Leung","url":"https://www.semanticscholar.org/author/3598400"}],"doi":"10.1109/GLOCOM.2010.5684283","isInfluential":false,"paperId":"639030269948b0cf32e27c4cec88bc8006e1bb54","title":"Mitigating
        Load Imbalance in Wireless Mesh Networks with Mixed Application Traffic Types","url":"https://www.semanticscholar.org/paper/639030269948b0cf32e27c4cec88bc8006e1bb54","venue":"2010
        IEEE Global Telecommunications Conference GLOBECOM 2010","year":2010},{"arxivId":null,"authors":[{"authorId":"3749160","name":"Priyanka
        Vashisht","url":"https://www.semanticscholar.org/author/3749160"},{"authorId":"47443371","name":"Anju
        Sharma","url":"https://www.semanticscholar.org/author/47443371"},{"authorId":"49165919","name":"Rajesh
        Kumar","url":"https://www.semanticscholar.org/author/49165919"}],"doi":"10.1002/cpe.3907","isInfluential":false,"paperId":"c8d46976c93aa1875e2c7dad802b32ed65034723","title":"Strategies
        for replica consistency in data grid - a comprehensive survey","url":"https://www.semanticscholar.org/paper/c8d46976c93aa1875e2c7dad802b32ed65034723","venue":"Concurrency
        and Computation: Practice and Experience","year":2017},{"arxivId":null,"authors":[{"authorId":"2437815","name":"Chenhui
        Du","url":"https://www.semanticscholar.org/author/2437815"},{"authorId":"1718310","name":"Mei
        Song","url":"https://www.semanticscholar.org/author/1718310"},{"authorId":"48169566","name":"Li
        Wang","url":"https://www.semanticscholar.org/author/48169566"},{"authorId":"8703989","name":"Yinghe
        Wang","url":"https://www.semanticscholar.org/author/8703989"},{"authorId":"2604737","name":"Xiaosu
        Zhan","url":"https://www.semanticscholar.org/author/2604737"}],"doi":"10.1109/CCIS.2012.6664267","isInfluential":false,"paperId":"7c340c37bb31501260d7bdc5858b860f688ac032","title":"Exploiting
        peer''s location information for improving routing and throughput performance
        in DHT systems","url":"https://www.semanticscholar.org/paper/7c340c37bb31501260d7bdc5858b860f688ac032","venue":"2012
        IEEE 2nd International Conference on Cloud Computing and Intelligence Systems","year":2012},{"arxivId":null,"authors":[{"authorId":"1704995","name":"Yong
        Tang","url":"https://www.semanticscholar.org/author/1704995"},{"authorId":"1748409","name":"Zhan
        Zhang","url":"https://www.semanticscholar.org/author/1748409"},{"authorId":"38125149","name":"Shigang
        Chen","url":"https://www.semanticscholar.org/author/38125149"},{"authorId":"1713295","name":"Guangbin
        Fan","url":"https://www.semanticscholar.org/author/1713295"}],"doi":"10.1109/ICC.2006.254700","isInfluential":false,"paperId":"37a27363b03d5372da7d82f8d01739dd890548b1","title":"A
        Distributed Hybrid Scheme for Unstructured Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/37a27363b03d5372da7d82f8d01739dd890548b1","venue":"2006
        IEEE International Conference on Communications","year":2006},{"arxivId":null,"authors":[{"authorId":"1681450","name":"Hung-Chang
        Hsiao","url":"https://www.semanticscholar.org/author/1681450"},{"authorId":"2188264","name":"I-Ta
        Lin","url":"https://www.semanticscholar.org/author/2188264"},{"authorId":"34262794","name":"Hao
        Liao","url":"https://www.semanticscholar.org/author/34262794"}],"doi":"10.1109/EUC.2008.12","isInfluential":true,"paperId":"a8cde771c41d6f65e376fa32d10f34a686004fa2","title":"Load
        Balancing in Peer-to-Peer Networks Based on Sampling System States","url":"https://www.semanticscholar.org/paper/a8cde771c41d6f65e376fa32d10f34a686004fa2","venue":"2008
        IEEE/IFIP International Conference on Embedded and Ubiquitous Computing","year":2008},{"arxivId":null,"authors":[{"authorId":"2506126","name":"David
        Mazi\u00e8res","url":"https://www.semanticscholar.org/author/2506126"}],"doi":null,"isInfluential":true,"paperId":"4e88b17837a3cf6027bc58277bf1894769369650","title":"Scaling
        Data Servers via Cooperative Caching by Siddhartha Annapureddy","url":"https://www.semanticscholar.org/paper/4e88b17837a3cf6027bc58277bf1894769369650","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"1713041","name":"Mehmet
        S. Aktas","url":"https://www.semanticscholar.org/author/1713041"},{"authorId":"1700267","name":"Geoffrey
        C. Fox","url":"https://www.semanticscholar.org/author/1700267"},{"authorId":"1748875","name":"Marlon
        E. Pierce","url":"https://www.semanticscholar.org/author/1748875"}],"doi":null,"isInfluential":false,"paperId":"dd97f759d9d853b984913f1d0c4798d8c8916f1c","title":"Information
        Federation in Grid Information Services","url":"https://www.semanticscholar.org/paper/dd97f759d9d853b984913f1d0c4798d8c8916f1c","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"48340129","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/48340129"}],"doi":null,"isInfluential":true,"paperId":"ed721b1326554789fdce28621d1c1b6cf569b542","title":"A
        P 2 P-based intelligent resource discovery mechanism in Internet-based distributed
        systems","url":"https://www.semanticscholar.org/paper/ed721b1326554789fdce28621d1c1b6cf569b542","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"2633361","name":"Etienne
        Rivi\u00e8re","url":"https://www.semanticscholar.org/author/2633361"}],"doi":"10.1109/IPDPSW.2012.162","isInfluential":true,"paperId":"2d22fa879332b9c716d03bb2d0d6fdcae709ece5","title":"Simplifying
        Hands-On Teaching of Distributed Algorithms with SPLAY","url":"https://www.semanticscholar.org/paper/2d22fa879332b9c716d03bb2d0d6fdcae709ece5","venue":"2012
        IEEE 26th International Parallel and Distributed Processing Symposium Workshops
        & PhD Forum","year":2012},{"arxivId":null,"authors":[{"authorId":"2132320","name":"Marcelo
        Dias de Amorim","url":"https://www.semanticscholar.org/author/2132320"},{"authorId":"1742355","name":"Serge
        Fdida","url":"https://www.semanticscholar.org/author/1742355"},{"authorId":"1801854","name":"Nathalie
        Mitton","url":"https://www.semanticscholar.org/author/1801854"},{"authorId":null,"name":"Lo\u00efc","url":null},{"authorId":"49716359","name":"C
        Schmidt","url":"https://www.semanticscholar.org/author/49716359"},{"authorId":"1943669","name":"David
        Simplot-Ryl","url":"https://www.semanticscholar.org/author/1943669"}],"doi":null,"isInfluential":false,"paperId":"0a5295dc26790ed8c97174bb659e7cddda3c2938","title":"Distributed
        Planetary Object Name Service : Issues and Design Principles","url":"https://www.semanticscholar.org/paper/0a5295dc26790ed8c97174bb659e7cddda3c2938","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":null,"name":"Jeson
        Martajaya","url":null}],"doi":null,"isInfluential":false,"paperId":"4d76716b04fe9d3da1a85859dc4974aecd450ad3","title":"Peer-to-peer
        Implemented Transparent Access to Remote Services","url":"https://www.semanticscholar.org/paper/4d76716b04fe9d3da1a85859dc4974aecd450ad3","venue":"","year":2003},{"arxivId":null,"authors":[{"authorId":"2469300","name":"Wai-Pun
        Ken Yiu","url":"https://www.semanticscholar.org/author/2469300"},{"authorId":"37269566","name":"Xing
        Jin","url":"https://www.semanticscholar.org/author/37269566"},{"authorId":"1743932","name":"Shueng-Han
        Gary Chan","url":"https://www.semanticscholar.org/author/1743932"}],"doi":"10.1109/ICC.2006.254704","isInfluential":false,"paperId":"04e5f8450bb04c3448324917561df846fa656428","title":"Distributed
        Storage to Support User Interactivity in Peer-to-Peer Video Streaming","url":"https://www.semanticscholar.org/paper/04e5f8450bb04c3448324917561df846fa656428","venue":"2006
        IEEE International Conference on Communications","year":2006},{"arxivId":null,"authors":[{"authorId":"2370043","name":"Cristina
        Rottondi","url":"https://www.semanticscholar.org/author/2370043"},{"authorId":"40335669","name":"Marco
        Savi","url":"https://www.semanticscholar.org/author/40335669"},{"authorId":"2640379","name":"Daniele
        Polenghi","url":"https://www.semanticscholar.org/author/2640379"},{"authorId":"3104139","name":"Giacomo
        Verticale","url":"https://www.semanticscholar.org/author/3104139"},{"authorId":"47257046","name":"Christoph
        Kraus","url":"https://www.semanticscholar.org/author/47257046"}],"doi":null,"isInfluential":false,"paperId":"000e613a0b05b29a54fef31f6f2bca49e2061b2c","title":"Implementation
        of a protocol for secure distributed aggregation of smart metering data","url":"https://www.semanticscholar.org/paper/000e613a0b05b29a54fef31f6f2bca49e2061b2c","venue":"2012
        International Conference on Smart Grid Technology, Economics and Policies
        (SG-TEP)","year":2012},{"arxivId":null,"authors":[{"authorId":"2238361","name":"Dinh
        Nguyen Tran","url":"https://www.semanticscholar.org/author/2238361"},{"authorId":"46276184","name":"Jinyang
        Li","url":"https://www.semanticscholar.org/author/46276184"},{"authorId":"1710917","name":"Lakshminarayanan
        Subramanian","url":"https://www.semanticscholar.org/author/1710917"}],"doi":"10.1145/1879082.1879085","isInfluential":false,"paperId":"c592da679bf0f1070c71278c87aaefad591058b1","title":"Collusion-resilient
        Credit-based Reputations for Peer-to-Peer Content Distribution","url":"https://www.semanticscholar.org/paper/c592da679bf0f1070c71278c87aaefad591058b1","venue":"NetEcon","year":2010},{"arxivId":null,"authors":[{"authorId":"1690555","name":"Ioan
        Toma","url":"https://www.semanticscholar.org/author/1690555"},{"authorId":"3174026","name":"Brahmananda
        Sapkota","url":"https://www.semanticscholar.org/author/3174026"},{"authorId":"9241033","name":"James
        Scicluna","url":"https://www.semanticscholar.org/author/9241033"},{"authorId":"1745696","name":"Juan
        Miguel G\u00f3mez","url":"https://www.semanticscholar.org/author/1745696"},{"authorId":"1727435","name":"Dumitru
        Roman","url":"https://www.semanticscholar.org/author/1727435"},{"authorId":"1766239","name":"Dieter
        Fensel","url":"https://www.semanticscholar.org/author/1766239"}],"doi":null,"isInfluential":false,"paperId":"6d3c1dff081102c5185829791f9e0f84ede51ee3","title":"A
        P 2 P Discovery mechanism for Web Service Execution Environment","url":"https://www.semanticscholar.org/paper/6d3c1dff081102c5185829791f9e0f84ede51ee3","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"3037486","name":"Fang-Ai
        Liu","url":"https://www.semanticscholar.org/author/3037486"},{"authorId":"39550393","name":"Chang-Ming
        Xing","url":"https://www.semanticscholar.org/author/39550393"}],"doi":"10.1109/APSCC.2010.41","isInfluential":false,"paperId":"7056a137b328ca13522b2dc2bb094b633c0b3ec8","title":"A
        Hierarchical Network (HRRP(k)) and Its Application","url":"https://www.semanticscholar.org/paper/7056a137b328ca13522b2dc2bb094b633c0b3ec8","venue":"2010
        IEEE Asia-Pacific Services Computing Conference","year":2010},{"arxivId":null,"authors":[{"authorId":null,"name":"\u00c2ngelo
        Marques de Matos","url":null},{"authorId":"3880005","name":"Rui Carlos Oliveira","url":"https://www.semanticscholar.org/author/3880005"},{"authorId":"3880005","name":"Rui
        Carlos Oliveira","url":"https://www.semanticscholar.org/author/3880005"},{"authorId":"31531426","name":"Ant\u00f3nio
        Lu\u00eds Pinto Ferreira de Sousa","url":"https://www.semanticscholar.org/author/31531426"},{"authorId":"1772642","name":"Jos\u00e9
        Santana Pereira","url":"https://www.semanticscholar.org/author/1772642"},{"authorId":"3281313","name":"Ricardo
        Manuel Pereira Vila\u00e7a","url":"https://www.semanticscholar.org/author/3281313"}],"doi":null,"isInfluential":false,"paperId":"5eb4ee5fa5dd2020b188a7a28e3de68bb25a020a","title":"Network-aware
        Epidemic Broadcast","url":"https://www.semanticscholar.org/paper/5eb4ee5fa5dd2020b188a7a28e3de68bb25a020a","venue":"","year":2011},{"arxivId":"0903.3759","authors":[{"authorId":"3664632","name":"Shah
        Asaduzzaman","url":"https://www.semanticscholar.org/author/3664632"},{"authorId":"3356921","name":"Gregor
        von Bochmann","url":"https://www.semanticscholar.org/author/3356921"}],"doi":null,"isInfluential":false,"paperId":"60943b41424d715aa6e111a1a3e2e4faa787da6c","title":"GeoP2P:
        An adaptive peer-to-peer overlay for efficient search and update of spatial
        information","url":"https://www.semanticscholar.org/paper/60943b41424d715aa6e111a1a3e2e4faa787da6c","venue":"ArXiv","year":2009},{"arxivId":null,"authors":[{"authorId":"50471004","name":"Dragan
        Milic","url":"https://www.semanticscholar.org/author/50471004"},{"authorId":"1680089","name":"Torsten
        Braun","url":"https://www.semanticscholar.org/author/1680089"}],"doi":null,"isInfluential":false,"paperId":"7ce8640987ccc4c91d65280956c25a03b3699c02","title":"Guaranteed
        greedy routing in overlay networks","url":"https://www.semanticscholar.org/paper/7ce8640987ccc4c91d65280956c25a03b3699c02","venue":"2013
        Conference on Future Internet Communications (CFIC)","year":2013},{"arxivId":null,"authors":[{"authorId":"2697087","name":"Chuan-Feng
        Chiu","url":"https://www.semanticscholar.org/author/2697087"},{"authorId":"3300815","name":"Steen
        J. Hsu","url":"https://www.semanticscholar.org/author/3300815"},{"authorId":"38397259","name":"Sen-Ren
        Jan","url":"https://www.semanticscholar.org/author/38397259"}],"doi":null,"isInfluential":true,"paperId":"8d2006108e7112f2d56bb917e9015fff4c2f0136","title":"Distributed
        MapReduce framework using distributed hash table","url":"https://www.semanticscholar.org/paper/8d2006108e7112f2d56bb917e9015fff4c2f0136","venue":"2013
        International Joint Conference on Awareness Science and Technology & Ubi-Media
        Computing (iCAST 2013 & UMEDIA 2013)","year":2013},{"arxivId":null,"authors":[{"authorId":"49659313","name":"Xin
        Xiang","url":"https://www.semanticscholar.org/author/49659313"},{"authorId":"1732440","name":"Yuanchun
        Shi","url":"https://www.semanticscholar.org/author/1732440"},{"authorId":"1735053","name":"Ling
        Guo","url":"https://www.semanticscholar.org/author/1735053"}],"doi":"10.1109/AINA.2004.1283979","isInfluential":false,"paperId":"c1549a337df21e7640632f3758c126697aa0fa59","title":"Rich
        metadata searches using the JXTA content manager service","url":"https://www.semanticscholar.org/paper/c1549a337df21e7640632f3758c126697aa0fa59","venue":"18th
        International Conference on Advanced Information Networking and Applications,
        2004. AINA 2004.","year":2004},{"arxivId":null,"authors":[{"authorId":"1684757","name":"Jim
        Dowling","url":"https://www.semanticscholar.org/author/1684757"},{"authorId":"2150557","name":"Fran\u00e7ois
        Ta\u00efani","url":"https://www.semanticscholar.org/author/2150557"}],"doi":"10.1007/978-3-642-38541-4","isInfluential":false,"paperId":"107c3a0227da8b687ae65e2d827ac75dae343a1e","title":"Distributed
        Applications and Interoperable Systems","url":"https://www.semanticscholar.org/paper/107c3a0227da8b687ae65e2d827ac75dae343a1e","venue":"Lecture
        Notes in Computer Science","year":2013},{"arxivId":null,"authors":[{"authorId":"46557365","name":"Sharon
        Shitrit","url":"https://www.semanticscholar.org/author/46557365"},{"authorId":"2888249","name":"Eyal
        Felstaine","url":"https://www.semanticscholar.org/author/2888249"},{"authorId":"21047852","name":"Niv
        Gilboa","url":"https://www.semanticscholar.org/author/21047852"},{"authorId":"2474198","name":"Ofer
        Hermoni","url":"https://www.semanticscholar.org/author/2474198"}],"doi":"10.1109/CCGRID.2008.54","isInfluential":false,"paperId":"17e5a4502f6eefddcbea5d74b20706e6d95548e0","title":"Anonymity
        Scheme for Interactive P2P Services","url":"https://www.semanticscholar.org/paper/17e5a4502f6eefddcbea5d74b20706e6d95548e0","venue":"2008
        Eighth IEEE International Symposium on Cluster Computing and the Grid (CCGRID)","year":2008},{"arxivId":null,"authors":[{"authorId":"15914416","name":"Lerone
        Banks","url":"https://www.semanticscholar.org/author/15914416"},{"authorId":"1807004","name":"Shaozhi
        Ye","url":"https://www.semanticscholar.org/author/1807004"},{"authorId":"50818206","name":"Yue
        Huang","url":"https://www.semanticscholar.org/author/50818206"},{"authorId":"1718534","name":"Shyhtsun
        Felix Wu","url":"https://www.semanticscholar.org/author/1718534"}],"doi":"10.1145/1352664.1352671","isInfluential":true,"paperId":"5135dc3198c6a4c95fa0c3548f7d4849ed5544e6","title":"Davis
        social links: integrating social networks with internet routing","url":"https://www.semanticscholar.org/paper/5135dc3198c6a4c95fa0c3548f7d4849ed5544e6","venue":"LSAD
        ''07","year":2007},{"arxivId":null,"authors":[{"authorId":"1705508","name":"Gennaro
        Cordasco","url":"https://www.semanticscholar.org/author/1705508"},{"authorId":"2742371","name":"Luisa
        Gargano","url":"https://www.semanticscholar.org/author/2742371"},{"authorId":"2960609","name":"Mikael
        Hammar","url":"https://www.semanticscholar.org/author/2960609"},{"authorId":"40571580","name":"Alberto
        Negro","url":"https://www.semanticscholar.org/author/40571580"},{"authorId":"1786473","name":"Vittorio
        Scarano","url":"https://www.semanticscholar.org/author/1786473"}],"doi":"10.1007/978-3-540-27796-5_9","isInfluential":true,"paperId":"8159056d951c5be80ee11bcd22f633f70f0a8559","title":"F-Chord:
        Improved Uniform Routing on Chord: (Extended Abstract)","url":"https://www.semanticscholar.org/paper/8159056d951c5be80ee11bcd22f633f70f0a8559","venue":"SIROCCO","year":2004},{"arxivId":null,"authors":[{"authorId":"2697087","name":"Chuan-Feng
        Chiu","url":"https://www.semanticscholar.org/author/2697087"},{"authorId":"3300815","name":"Steen
        J. Hsu","url":"https://www.semanticscholar.org/author/3300815"},{"authorId":"38397259","name":"Sen-Ren
        Jan","url":"https://www.semanticscholar.org/author/38397259"}],"doi":null,"isInfluential":false,"paperId":"9f96e3cdd87d7c398435911e80559031b9113d1c","title":"A
        P2P-based Three-Dimensional Virtual Environment Management and Collaborative
        Streaming System","url":"https://www.semanticscholar.org/paper/9f96e3cdd87d7c398435911e80559031b9113d1c","venue":"JSW","year":2010},{"arxivId":null,"authors":[{"authorId":null,"name":"Qiang
        Wei B. Eng","url":null}],"doi":null,"isInfluential":false,"paperId":"93ad0277ef138d0f46d5928a44e41de8941b4b38","title":"Towards
        Improving the Availability and Performance of Enterprise Authorization Systems","url":"https://www.semanticscholar.org/paper/93ad0277ef138d0f46d5928a44e41de8941b4b38","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"1719551","name":"Cheng-Zhong
        Xu","url":"https://www.semanticscholar.org/author/1719551"}],"doi":"10.1109/ICPP.2009.37","isInfluential":true,"paperId":"6938e7481c68f236addcd9475d2a680ad565e6f6","title":"Performance
        Analysis of DHT Algorithms for Range-Query and Multi-Attribute Resource Discovery
        in Grids","url":"https://www.semanticscholar.org/paper/6938e7481c68f236addcd9475d2a680ad565e6f6","venue":"2009
        International Conference on Parallel Processing","year":2009},{"arxivId":null,"authors":[{"authorId":"1688377","name":"Nikolaos
        D. Doulamis","url":"https://www.semanticscholar.org/author/1688377"},{"authorId":"3267084","name":"Pantelis
        N. Karamolegkos","url":"https://www.semanticscholar.org/author/3267084"},{"authorId":"1746705","name":"Anastasios
        D. Doulamis","url":"https://www.semanticscholar.org/author/1746705"},{"authorId":"1843155","name":"Ioannis
        G. Nikolakopoulos","url":"https://www.semanticscholar.org/author/1843155"}],"doi":"10.1016/j.comcom.2008.12.005","isInfluential":false,"paperId":"852fd91de7c3b75f2e3c3e0b6f5e9f8ee9a0411c","title":"Exploiting
        semantic proximities for content search over p2p networks","url":"https://www.semanticscholar.org/paper/852fd91de7c3b75f2e3c3e0b6f5e9f8ee9a0411c","venue":"Computer
        Communications","year":2009},{"arxivId":null,"authors":[{"authorId":"1845148","name":"Chen-Lung
        Chan","url":"https://www.semanticscholar.org/author/1845148"},{"authorId":"2620334","name":"Shih-Yu
        Huang","url":"https://www.semanticscholar.org/author/2620334"},{"authorId":"2174997","name":"Te-Chou
        Su","url":"https://www.semanticscholar.org/author/2174997"},{"authorId":"1692891","name":"Jia-Shung
        Wang","url":"https://www.semanticscholar.org/author/1692891"}],"doi":"10.1007/s00530-006-0041-1","isInfluential":false,"paperId":"61f027a92411a34f8660f93f06159bd22e0318d8","title":"Buffer-assisted
        on-demand multicast for VOD applications","url":"https://www.semanticscholar.org/paper/61f027a92411a34f8660f93f06159bd22e0318d8","venue":"Multimedia
        Systems","year":2006},{"arxivId":null,"authors":[{"authorId":"2697087","name":"Chuan-Feng
        Chiu","url":"https://www.semanticscholar.org/author/2697087"},{"authorId":"3300815","name":"Steen
        J. Hsu","url":"https://www.semanticscholar.org/author/3300815"},{"authorId":"38397259","name":"Sen-Ren
        Jan","url":"https://www.semanticscholar.org/author/38397259"},{"authorId":"32160801","name":"Shao-Min
        Lyu","url":"https://www.semanticscholar.org/author/32160801"}],"doi":null,"isInfluential":false,"paperId":"2a17534995b5b42102a13bd91b3dc5bc3d98a76e","title":"The
        design of topology-aware overlay networks for ubiquitous applications","url":"https://www.semanticscholar.org/paper/2a17534995b5b42102a13bd91b3dc5bc3d98a76e","venue":"2009
        Joint Conferences on Pervasive Computing (JCPC)","year":2009},{"arxivId":null,"authors":[{"authorId":"9434734","name":"Si
        Huayou","url":"https://www.semanticscholar.org/author/9434734"},{"authorId":"46495434","name":"Zhao
        Yun","url":"https://www.semanticscholar.org/author/46495434"},{"authorId":"9317861","name":"Qi
        Hengnian","url":"https://www.semanticscholar.org/author/9317861"},{"authorId":"1703595","name":"Chen
        Zhong","url":"https://www.semanticscholar.org/author/1703595"}],"doi":null,"isInfluential":false,"paperId":"15f893a300ebeeedad9a3536bd321358967fef00","title":"An
        Approach to Distributed Semantic Web Services Publication and Discovery Based
        on Chord","url":"https://www.semanticscholar.org/paper/15f893a300ebeeedad9a3536bd321358967fef00","venue":"2010
        International Symposium on Computational Intelligence and Design","year":2010},{"arxivId":null,"authors":[{"authorId":"4693097","name":"Cuong
        Pham","url":"https://www.semanticscholar.org/author/4693097"},{"authorId":"1740390","name":"Duc
        A. Tran","url":"https://www.semanticscholar.org/author/1740390"}],"doi":"10.1109/SECON.2010.5508214","isInfluential":false,"paperId":"10c391b9e9bef5ac9ff7b8264d4db9fd90dabdab","title":"CRES:
        A Content-Based Routing Substrate for Large-Scale Data-Centric Sensor Networks","url":"https://www.semanticscholar.org/paper/10c391b9e9bef5ac9ff7b8264d4db9fd90dabdab","venue":"2010
        7th Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc
        Communications and Networks (SECON)","year":2010},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"3155241","name":"Lianyu
        Zhao","url":"https://www.semanticscholar.org/author/3155241"},{"authorId":"48458409","name":"Ze
        Li","url":"https://www.semanticscholar.org/author/48458409"},{"authorId":"35964168","name":"Jin
        Li","url":"https://www.semanticscholar.org/author/35964168"}],"doi":"10.1109/ICPP.2010.32","isInfluential":true,"paperId":"98538e9133595b0fbb249f6971b587c75b4cc6c3","title":"A
        DHT-Aided Chunk-Driven Overlay for Scalable and Efficient Peer-to-Peer Live
        Streaming","url":"https://www.semanticscholar.org/paper/98538e9133595b0fbb249f6971b587c75b4cc6c3","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2010},{"arxivId":null,"authors":[{"authorId":"2105990","name":"Sokratis
        Vavilis","url":"https://www.semanticscholar.org/author/2105990"},{"authorId":"1790288","name":"Milan
        Petkovic","url":"https://www.semanticscholar.org/author/1790288"},{"authorId":"3288964","name":"Nicola
        Zannone","url":"https://www.semanticscholar.org/author/3288964"}],"doi":"10.1016/j.dss.2014.02.002","isInfluential":false,"paperId":"f64aa45cd32cd8e7470e18f219ab198fb5b5b545","title":"A
        reference model for reputation systems","url":"https://www.semanticscholar.org/paper/f64aa45cd32cd8e7470e18f219ab198fb5b5b545","venue":"Decision
        Support Systems","year":2014},{"arxivId":"0706.0580","authors":[{"authorId":"37986720","name":"Yoo
        Chung","url":"https://www.semanticscholar.org/author/37986720"},{"authorId":"1724024","name":"Dongman
        Lee","url":"https://www.semanticscholar.org/author/1724024"}],"doi":"10.1109/ISPA.2010.73","isInfluential":false,"paperId":"026e8b386b84b30bfb87335d9c3424a37b447e6d","title":"Efficient
        Batch Update of Unique Identifiers in a Distributed Hash Table for Resources
        in a Mobile Host","url":"https://www.semanticscholar.org/paper/026e8b386b84b30bfb87335d9c3424a37b447e6d","venue":"International
        Symposium on Parallel and Distributed Processing with Applications","year":2010},{"arxivId":null,"authors":[{"authorId":"3045450","name":"Guanling
        Chen","url":"https://www.semanticscholar.org/author/3045450"},{"authorId":"39671708","name":"Ming
        Li","url":"https://www.semanticscholar.org/author/39671708"},{"authorId":"1710979","name":"David
        Kotz","url":"https://www.semanticscholar.org/author/1710979"}],"doi":"10.1016/j.pmcj.2007.10.001","isInfluential":false,"paperId":"0944d00c4474885c21374d0fb0e201d40271f97e","title":"Data-centric
        middleware for context-aware pervasive computing","url":"https://www.semanticscholar.org/paper/0944d00c4474885c21374d0fb0e201d40271f97e","venue":"Pervasive
        and Mobile Computing","year":2008},{"arxivId":null,"authors":[{"authorId":"1729141","name":"Hanh
        Le","url":"https://www.semanticscholar.org/author/1729141"},{"authorId":"1709615","name":"Doan
        B. Hoang","url":"https://www.semanticscholar.org/author/1709615"},{"authorId":"2042654","name":"Andrew
        James Simmonds","url":"https://www.semanticscholar.org/author/2042654"}],"doi":"10.1142/S0219265906001806","isInfluential":true,"paperId":"7758df8e98b4ed0db70bbac0bad6f4dfe609d6f6","title":"Parm:
        a Physically-Aware Reference Model for Peer-to-Peer Overlay Internetworking","url":"https://www.semanticscholar.org/paper/7758df8e98b4ed0db70bbac0bad6f4dfe609d6f6","venue":"Journal
        of Interconnection Networks","year":2006},{"arxivId":"1111.5518","authors":[{"authorId":"2513755","name":"Anis
        Ismail","url":"https://www.semanticscholar.org/author/2513755"},{"authorId":"1736191","name":"Mohamed
        Quafafou","url":"https://www.semanticscholar.org/author/1736191"},{"authorId":"2084213","name":"Gilles
        Nachouki","url":"https://www.semanticscholar.org/author/2084213"},{"authorId":"1898612","name":"Mohammad
        Hajjar","url":"https://www.semanticscholar.org/author/1898612"}],"doi":null,"isInfluential":false,"paperId":"8d5781ef8ec8273f81e4d10e2b802b70118759a0","title":"Efficient
        Super-Peer-Based Queries Routing: Simulation and Evaluation","url":"https://www.semanticscholar.org/paper/8d5781ef8ec8273f81e4d10e2b802b70118759a0","venue":"ArXiv","year":2011},{"arxivId":null,"authors":[{"authorId":"1712542","name":"Tim
        Roughgarden","url":"https://www.semanticscholar.org/author/1712542"},{"authorId":"1806083","name":"Gregory
        Valiant","url":"https://www.semanticscholar.org/author/1806083"}],"doi":null,"isInfluential":true,"paperId":"b716446c9a392fa9952b8457ec1dd4de772675fb","title":"CS
        168 : The Modern Algorithmic Toolbox Lecture # 1 : Introduction and Consistent
        Hashing","url":"https://www.semanticscholar.org/paper/b716446c9a392fa9952b8457ec1dd4de772675fb","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"2005451","name":"Eliya
        Buyukkaya","url":"https://www.semanticscholar.org/author/2005451"},{"authorId":"2353029","name":"Maha
        Abdallah","url":"https://www.semanticscholar.org/author/2353029"},{"authorId":"34934596","name":"Romain
        Cavagna","url":"https://www.semanticscholar.org/author/34934596"}],"doi":null,"isInfluential":false,"paperId":"ccf07a9fafaea7ad6c44b76ce71fe270da52c8bf","title":"VoroGame:
        A Hybrid P2P Architecture for Massively Multiplayer Games","url":"https://www.semanticscholar.org/paper/ccf07a9fafaea7ad6c44b76ce71fe270da52c8bf","venue":"2009
        6th IEEE Consumer Communications and Networking Conference","year":2009},{"arxivId":null,"authors":[{"authorId":"27573489","name":"Jouni
        M\u00e4enp\u00e4\u00e4","url":"https://www.semanticscholar.org/author/27573489"}],"doi":"10.1109/ICCNC.2013.6504204","isInfluential":true,"paperId":"c042034d5d62532bee59e344ac79fb93fdc074d5","title":"Reducing
        P2PSIP session setup delays","url":"https://www.semanticscholar.org/paper/c042034d5d62532bee59e344ac79fb93fdc074d5","venue":"2013
        International Conference on Computing, Networking and Communications (ICNC)","year":2013},{"arxivId":null,"authors":[{"authorId":"2047700","name":"Flavien
        Quesnel","url":"https://www.semanticscholar.org/author/2047700"},{"authorId":"7682100","name":"Adrien
        L\u00e8bre","url":"https://www.semanticscholar.org/author/7682100"},{"authorId":"1692262","name":"Mario
        S\u00fcdholt","url":"https://www.semanticscholar.org/author/1692262"}],"doi":"10.1002/cpe.2848","isInfluential":false,"paperId":"e31e33c5b07daf947b7478aec15b6d6945808e17","title":"Cooperative
        and reactive scheduling in large-scale virtualized platforms with DVMS","url":"https://www.semanticscholar.org/paper/e31e33c5b07daf947b7478aec15b6d6945808e17","venue":"Concurrency
        and Computation: Practice and Experience","year":2013},{"arxivId":null,"authors":[{"authorId":"1779426","name":"Mohamed
        Sellami","url":"https://www.semanticscholar.org/author/1779426"},{"authorId":"1762930","name":"Walid
        Gaaloul","url":"https://www.semanticscholar.org/author/1762930"},{"authorId":"3009931","name":"Bruno
        Defude","url":"https://www.semanticscholar.org/author/3009931"}],"doi":"10.1002/cpe.3048","isInfluential":true,"paperId":"537869dd88eb6a400ed3e5a812ca791d4e1b3f38","title":"A
        decentralized and service-based solution for data mediation: the case for
        data providing service compositions","url":"https://www.semanticscholar.org/paper/537869dd88eb6a400ed3e5a812ca791d4e1b3f38","venue":"Concurrency
        and Computation: Practice and Experience","year":2015},{"arxivId":null,"authors":[{"authorId":"3098834","name":"Austin
        T. Clements","url":"https://www.semanticscholar.org/author/3098834"},{"authorId":"2883709","name":"Dan
        R. K. Ports","url":"https://www.semanticscholar.org/author/2883709"},{"authorId":"1743286","name":"David
        R. Karger","url":"https://www.semanticscholar.org/author/1743286"}],"doi":"10.1007/11558989_6","isInfluential":false,"paperId":"0890928a28909c0b18991ce6919f955b4132ed44","title":"Arpeggio:
        Metadata Searching and Content Sharing with Chord","url":"https://www.semanticscholar.org/paper/0890928a28909c0b18991ce6919f955b4132ed44","venue":"IPTPS","year":2005},{"arxivId":null,"authors":[{"authorId":"1701175","name":"Yann
        Busnel","url":"https://www.semanticscholar.org/author/1701175"},{"authorId":"2949587","name":"Roberto
        Beraldi","url":"https://www.semanticscholar.org/author/2949587"},{"authorId":"1696934","name":"Roberto
        Baldoni","url":"https://www.semanticscholar.org/author/1696934"}],"doi":"10.1016/j.jpdc.2011.01.009","isInfluential":false,"paperId":"d22e044704e0c4ab311eb3778873db6960210c45","title":"On
        the uniformity of peer sampling based on view shuffling","url":"https://www.semanticscholar.org/paper/d22e044704e0c4ab311eb3778873db6960210c45","venue":"J.
        Parallel Distrib. Comput.","year":2011},{"arxivId":null,"authors":[{"authorId":"2237992","name":"Chamil
        Kulatunga","url":"https://www.semanticscholar.org/author/2237992"},{"authorId":"3069859","name":"Dmitri
        Botvich","url":"https://www.semanticscholar.org/author/3069859"},{"authorId":"2269129","name":"Sasitharan
        Balasubramaniam","url":"https://www.semanticscholar.org/author/2269129"},{"authorId":"36699839","name":"William
        Donnelly","url":"https://www.semanticscholar.org/author/36699839"}],"doi":"10.1007/978-3-642-30376-0_2","isInfluential":false,"paperId":"b38807454bd7cfc4ffc2985e97dc1185ae84ad60","title":"Analysis
        of Block-Aware Peer Adaptations in Substream-Based P2P","url":"https://www.semanticscholar.org/paper/b38807454bd7cfc4ffc2985e97dc1185ae84ad60","venue":"BROADNETS","year":2010},{"arxivId":null,"authors":[{"authorId":null,"name":"D.
        J. Anusha","url":null},{"authorId":"2303694","name":"Balaji Purushotham","url":"https://www.semanticscholar.org/author/2303694"},{"authorId":"21135968","name":"Damai
        Jessica Prathyusha","url":"https://www.semanticscholar.org/author/21135968"},{"authorId":"40952918","name":"M.
        Tech Deptt Student","url":"https://www.semanticscholar.org/author/40952918"},{"authorId":null,"name":"B.
        Tech StudentCSE","url":null},{"authorId":null,"name":"Chadalawada Ramanamma","url":null}],"doi":null,"isInfluential":false,"paperId":"26598fc17c8f4b8f891a13b8b5e31c0b4d7f60ec","title":"Egoistic
        superimpose Network Formation and Preservation","url":"https://www.semanticscholar.org/paper/26598fc17c8f4b8f891a13b8b5e31c0b4d7f60ec","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":null,"name":"Shynu
        P G","url":null}],"doi":null,"isInfluential":false,"paperId":"07d818ad429e12de2f7780bc13f48e001082fdbd","title":"An
        Efficient Semantic Web Services Selection Model Using Clustering","url":"https://www.semanticscholar.org/paper/07d818ad429e12de2f7780bc13f48e001082fdbd","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"32423569","name":"Cristopher
        Barrientos","url":"https://www.semanticscholar.org/author/32423569"},{"authorId":"3229207","name":"Patricio
        Galdames","url":"https://www.semanticscholar.org/author/3229207"},{"authorId":"1779437","name":"Claudio
        Guti\u00e9rrez-Soto","url":"https://www.semanticscholar.org/author/1779437"}],"doi":null,"isInfluential":false,"paperId":"646b78aa7efcdd6b93e4b46d573a78571e7af31c","title":"A
        Subscription Overlay Network for Efficient File Parallel Downloading","url":"https://www.semanticscholar.org/paper/646b78aa7efcdd6b93e4b46d573a78571e7af31c","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"2399069","name":"Muntasir
        Raihan Rahman","url":"https://www.semanticscholar.org/author/2399069"}],"doi":null,"isInfluential":false,"paperId":"5a3e6ea6e2e48f5dce716245dabc273bf6ce68ca","title":"A
        Survey of Incentive Mechanisms in Peer-to-Peer Systems","url":"https://www.semanticscholar.org/paper/5a3e6ea6e2e48f5dce716245dabc273bf6ce68ca","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"2208459","name":"Jan
        Finis","url":"https://www.semanticscholar.org/author/2208459"}],"doi":null,"isInfluential":false,"paperId":"abebe86ff72debafb05ab8fe4b4e4904e4d1e4d3","title":"On
        Supporting Hierarchical Data in Relational Main-Memory Database Systems","url":"https://www.semanticscholar.org/paper/abebe86ff72debafb05ab8fe4b4e4904e4d1e4d3","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"39699392","name":"Kun-Chan
        Lan","url":"https://www.semanticscholar.org/author/39699392"},{"authorId":"2355733","name":"Tsung-hsung
        Wu","url":"https://www.semanticscholar.org/author/2355733"}],"doi":null,"isInfluential":true,"paperId":"bb94343148f2378b9412f348d5911fe693298f20","title":"A
        Trace-based Feasibility Study of Infrastructure-less VoIP","url":"https://www.semanticscholar.org/paper/bb94343148f2378b9412f348d5911fe693298f20","venue":"J.
        Inf. Sci. Eng.","year":2012},{"arxivId":null,"authors":[{"authorId":"30721371","name":"Siddhartha
        Sen","url":"https://www.semanticscholar.org/author/30721371"},{"authorId":"1855395","name":"Jacob
        R. Lorch","url":"https://www.semanticscholar.org/author/1855395"},{"authorId":"1868785","name":"Richard
        Hughes","url":"https://www.semanticscholar.org/author/1868785"},{"authorId":"39961231","name":"Carlos
        Garcia Jurado Suarez","url":"https://www.semanticscholar.org/author/39961231"},{"authorId":"2202333","name":"Brian
        Zill","url":"https://www.semanticscholar.org/author/2202333"},{"authorId":"2370467","name":"Weverton
        Cordeiro","url":"https://www.semanticscholar.org/author/2370467"},{"authorId":"1695132","name":"Jitendra
        Padhye","url":"https://www.semanticscholar.org/author/1695132"}],"doi":null,"isInfluential":false,"paperId":"0b15261c0dc28334d7a5fd4be13d9f42d13a8cd1","title":"Don''t
        Lose Sleep Over Availability: The GreenUp Decentralized Wakeup Service","url":"https://www.semanticscholar.org/paper/0b15261c0dc28334d7a5fd4be13d9f42d13a8cd1","venue":"NSDI","year":2012},{"arxivId":null,"authors":[{"authorId":"39550577","name":"Yuuichi
        Teranishi","url":"https://www.semanticscholar.org/author/39550577"},{"authorId":"1777659","name":"Nozomu
        Nishinaga","url":"https://www.semanticscholar.org/author/1777659"}],"doi":"10.1109/COMPSAC.2016.75","isInfluential":false,"paperId":"2d1c4a2f3ecff73ba7306a25b50100ca2a3876f5","title":"Building
        a Large-Scale Distributed Live Video Analysis System for Movement of Pedestrians
        in Urban Areas","url":"https://www.semanticscholar.org/paper/2d1c4a2f3ecff73ba7306a25b50100ca2a3876f5","venue":"2016
        IEEE 40th Annual Computer Software and Applications Conference (COMPSAC)","year":2016},{"arxivId":null,"authors":[{"authorId":"3168228","name":"Henry
        Sinnreich","url":"https://www.semanticscholar.org/author/3168228"}],"doi":"10.1007/s00502-006-0354-y","isInfluential":false,"paperId":"09fac1e07c7b7e51aef1cdfb9f9d3da78c7d9171","title":"The
        challenge of P2P Internet communications to network based services","url":"https://www.semanticscholar.org/paper/09fac1e07c7b7e51aef1cdfb9f9d3da78c7d9171","venue":"Elektrotechnik
        und Informationstechnik","year":2006},{"arxivId":null,"authors":[{"authorId":"3093584","name":"Shiguo
        Wang","url":"https://www.semanticscholar.org/author/3093584"},{"authorId":"1693858","name":"Hong
        Ji","url":"https://www.semanticscholar.org/author/1693858"}],"doi":null,"isInfluential":false,"paperId":"32000709b2e0b017635051771737aa4f76bb29ed","title":"Realization
        of Topology Awareness in Peer-to-Peer Wireless Network","url":"https://www.semanticscholar.org/paper/32000709b2e0b017635051771737aa4f76bb29ed","venue":"2009
        5th International Conference on Wireless Communications, Networking and Mobile
        Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"3039841","name":"Debessay
        Fesehaye","url":"https://www.semanticscholar.org/author/3039841"},{"authorId":"1722544","name":"Indranil
        Gupta","url":"https://www.semanticscholar.org/author/1722544"},{"authorId":"1688353","name":"Klara
        Nahrstedt","url":"https://www.semanticscholar.org/author/1688353"}],"doi":null,"isInfluential":false,"paperId":"9c1bc15ffaa317ac6d0d6f5762db2f5b8c881b61","title":"A
        Cross-layer Routing and Congestion Control for Distributed Systems","url":"https://www.semanticscholar.org/paper/9c1bc15ffaa317ac6d0d6f5762db2f5b8c881b61","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"1941698","name":"D.
        Janaki Ram","url":"https://www.semanticscholar.org/author/1941698"},{"authorId":"2961794","name":"Harisankar
        Haridas","url":"https://www.semanticscholar.org/author/2961794"}],"doi":"10.1109/ISPDC.2012.26","isInfluential":true,"paperId":"825baaf3e910036af28c8083a4be4e2968eaf1d7","title":"Stabilizing
        Peer-to-Peer Systems Using Public Cloud: A Case Study of Peer-to-Peer Search","url":"https://www.semanticscholar.org/paper/825baaf3e910036af28c8083a4be4e2968eaf1d7","venue":"2012
        11th International Symposium on Parallel and Distributed Computing","year":2012},{"arxivId":null,"authors":[{"authorId":"2622252","name":"Atul
        Singh","url":"https://www.semanticscholar.org/author/2622252"}],"doi":null,"isInfluential":false,"paperId":"91709ba48f4637398546921f51f94c1791dade23","title":"Self-Organizing
        Topology Adaptation in Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/91709ba48f4637398546921f51f94c1791dade23","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"1783557","name":"Shoujian
        Yu","url":"https://www.semanticscholar.org/author/1783557"},{"authorId":"50736274","name":"Qin
        Zhu","url":"https://www.semanticscholar.org/author/50736274"},{"authorId":"47903326","name":"XiaoLing
        Xia","url":"https://www.semanticscholar.org/author/47903326"},{"authorId":"1782910","name":"Jiajin
        Le","url":"https://www.semanticscholar.org/author/1782910"}],"doi":"10.1109/IMSCCS.2006.19","isInfluential":false,"paperId":"6a21ed39be9cf55d87268bf761ec0d6e95aab6a8","title":"A
        Novel Web Service Catalog System Supporting Distributed Service Publication
        and Discovery","url":"https://www.semanticscholar.org/paper/6a21ed39be9cf55d87268bf761ec0d6e95aab6a8","venue":"First
        International Multi-Symposiums on Computer and Computational Sciences (IMSCCS''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"48840252","name":"Audun
        Nordal","url":"https://www.semanticscholar.org/author/48840252"},{"authorId":"1697750","name":"\u00c5ge
        Kvalnes","url":"https://www.semanticscholar.org/author/1697750"},{"authorId":"39274975","name":"Joseph
        Hurley","url":"https://www.semanticscholar.org/author/39274975"},{"authorId":"1723999","name":"Dag
        Johansen","url":"https://www.semanticscholar.org/author/1723999"}],"doi":"10.1109/SERVICES.2011.21","isInfluential":false,"paperId":"6f4d80b9e3591585cee38e7da6b030b324cee177","title":"Balava:
        Federating Private and Public Clouds","url":"https://www.semanticscholar.org/paper/6f4d80b9e3591585cee38e7da6b030b324cee177","venue":"2011
        IEEE World Congress on Services","year":2011},{"arxivId":null,"authors":[{"authorId":"2527783","name":"Ranganai
        Chaparadza","url":"https://www.semanticscholar.org/author/2527783"},{"authorId":"34697489","name":"Razvan
        Petre","url":"https://www.semanticscholar.org/author/34697489"},{"authorId":"39476282","name":"Arun
        Prakash","url":"https://www.semanticscholar.org/author/39476282"},{"authorId":"1762497","name":"Felician
        N\u00e9meth","url":"https://www.semanticscholar.org/author/1762497"},{"authorId":"2227961","name":"Slawomir
        Kuklinski","url":"https://www.semanticscholar.org/author/2227961"},{"authorId":"2659965","name":"Alexej
        Starschenko","url":"https://www.semanticscholar.org/author/2659965"}],"doi":"10.1007/978-3-642-20931-4_16","isInfluential":false,"paperId":"7475d16ea8076bc41c2c9980268ed7500f79b491","title":"IPv6
        and Extended IPv6 (IPv6++) Features That Enable Autonomic Network Setup and
        Operation","url":"https://www.semanticscholar.org/paper/7475d16ea8076bc41c2c9980268ed7500f79b491","venue":"AccessNets","year":2010},{"arxivId":null,"authors":[{"authorId":"3185093","name":"Kenji
        Masui","url":"https://www.semanticscholar.org/author/3185093"},{"authorId":"1751653","name":"Youki
        Kadobayashi","url":"https://www.semanticscholar.org/author/1751653"}],"doi":"10.1109/SAINT-W.2007.81","isInfluential":true,"paperId":"8d8ef85794ea7856f8395ce282144002febad6ce","title":"N-TAP:
        A Platform of Large-Scale Distributed Measurement for Overlay Network Applications","url":"https://www.semanticscholar.org/paper/8d8ef85794ea7856f8395ce282144002febad6ce","venue":"2007
        International Symposium on Applications and the Internet Workshops","year":2007},{"arxivId":null,"authors":[{"authorId":"1956645","name":"Hyojin
        Park","url":"https://www.semanticscholar.org/author/1956645"},{"authorId":"7788944","name":"Jinhong
        Yang","url":"https://www.semanticscholar.org/author/7788944"},{"authorId":"1681743","name":"Juyoung
        Park","url":"https://www.semanticscholar.org/author/1681743"},{"authorId":"8111372","name":"Shin
        Gak Kang","url":"https://www.semanticscholar.org/author/8111372"},{"authorId":"1702411","name":"Jun
        Kyun Choi","url":"https://www.semanticscholar.org/author/1702411"}],"doi":null,"isInfluential":false,"paperId":"3a7aa4e3e488fc7defeecbc8a51fca31de4fa4aa","title":"A
        Survey on Peer-to-Peer Overlay Network Schemes","url":"https://www.semanticscholar.org/paper/3a7aa4e3e488fc7defeecbc8a51fca31de4fa4aa","venue":"2008
        10th International Conference on Advanced Communication Technology","year":2008},{"arxivId":null,"authors":[{"authorId":"1680089","name":"Torsten
        Braun","url":"https://www.semanticscholar.org/author/1680089"},{"authorId":"1745768","name":"Vijay
        Arya","url":"https://www.semanticscholar.org/author/1745768"},{"authorId":"1725888","name":"Thierry
        Turletti","url":"https://www.semanticscholar.org/author/1725888"}],"doi":"10.1016/j.comcom.2006.02.022","isInfluential":false,"paperId":"2a62ceccf7be7fd4ef6c7c02fe6b4dc01a3613b5","title":"Explicit
        routing in multicast overlay networks","url":"https://www.semanticscholar.org/paper/2a62ceccf7be7fd4ef6c7c02fe6b4dc01a3613b5","venue":"Computer
        Communications","year":2006},{"arxivId":null,"authors":[{"authorId":"1957774","name":"John
        Risson","url":"https://www.semanticscholar.org/author/1957774"},{"authorId":"40540644","name":"Ken
        Robinson","url":"https://www.semanticscholar.org/author/40540644"},{"authorId":"2009990","name":"Tim
        Moors","url":"https://www.semanticscholar.org/author/2009990"}],"doi":"10.1109/LCN.2005.69","isInfluential":true,"paperId":"a3037be106a217dde580be17fd5952979e4525b8","title":"Fault
        Tolerant Active Rings for Structured Peer-to-Peer Overlays","url":"https://www.semanticscholar.org/paper/a3037be106a217dde580be17fd5952979e4525b8","venue":"The
        IEEE Conference on Local Computer Networks 30th Anniversary (LCN''05)l","year":2005},{"arxivId":null,"authors":[{"authorId":"1722262","name":"George
        Danezis","url":"https://www.semanticscholar.org/author/1722262"},{"authorId":"2356074","name":"Stefan
        Schiffner","url":"https://www.semanticscholar.org/author/2356074"}],"doi":null,"isInfluential":false,"paperId":"038985fb109a49100c142003bba8f1a56a226f97","title":"On
        Network formation , ( Sybil attacks and Reputation systems ) ( Position Paper
        )","url":"https://www.semanticscholar.org/paper/038985fb109a49100c142003bba8f1a56a226f97","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"49376973","name":"Kandarpa
        Srinivas","url":"https://www.semanticscholar.org/author/49376973"},{"authorId":null,"name":"Dr.
        Gunamani Jena","url":null},{"authorId":null,"name":"A Satyamallesh","url":null}],"doi":null,"isInfluential":false,"paperId":"141109b2cde01f0163e4881b8c5e6a42cdde827e","title":"Distributed
        Cycle Minimization Protocol ( DCPM ) for Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/141109b2cde01f0163e4881b8c5e6a42cdde827e","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"1811336","name":"Franco
        Tommasi","url":"https://www.semanticscholar.org/author/1811336"},{"authorId":"47304130","name":"Alessandro
        De Donno","url":"https://www.semanticscholar.org/author/47304130"},{"authorId":"49947840","name":"Fulvio
        Irno Consalvo","url":"https://www.semanticscholar.org/author/49947840"}],"doi":"10.1145/3175536.3175548","isInfluential":false,"paperId":"a4a5afc29e745aa39c27835d03580387c2d8b907","title":"Exploring
        a social-aware WebRTC-based P2P architecture for live video streaming","url":"https://www.semanticscholar.org/paper/a4a5afc29e745aa39c27835d03580387c2d8b907","venue":"ICETC","year":2017},{"arxivId":null,"authors":[{"authorId":"1792246","name":"Chunhong
        Zhang","url":"https://www.semanticscholar.org/author/1792246"},{"authorId":"1747536","name":"Yang
        Ji","url":"https://www.semanticscholar.org/author/1747536"},{"authorId":"2071250","name":"Lichun
        Li","url":"https://www.semanticscholar.org/author/2071250"}],"doi":"10.1109/CSSE.2008.1259","isInfluential":true,"paperId":"f027af66f67dbc7aadb411e78f5fac92da350ee1","title":"Bandwidth
        and Efficiency of P2PSIP Based Server Farm","url":"https://www.semanticscholar.org/paper/f027af66f67dbc7aadb411e78f5fac92da350ee1","venue":"2008
        International Conference on Computer Science and Software Engineering","year":2008},{"arxivId":null,"authors":[{"authorId":"2207332","name":"Reza
        Rejaie","url":"https://www.semanticscholar.org/author/2207332"}],"doi":null,"isInfluential":true,"paperId":"919be260c9d548d907e18c5721c85b9fe19f096d","title":"MEASURING
        AND CHARACTERIZING PROPERTIES OF PEER-TO-PEER SYSTEMS by DANIEL STUTZBACH","url":"https://www.semanticscholar.org/paper/919be260c9d548d907e18c5721c85b9fe19f096d","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"2168285","name":"Elias
        C. Efstathiou","url":"https://www.semanticscholar.org/author/2168285"},{"authorId":"1720651","name":"George
        C. Polyzos","url":"https://www.semanticscholar.org/author/1720651"}],"doi":null,"isInfluential":false,"paperId":"3237301b6cff61a62acfb55bb16540637ef9cd01","title":"The
        Peer-to-Peer Wireless Network Confederation : Enabling Global Wi-Fi Roaming","url":"https://www.semanticscholar.org/paper/3237301b6cff61a62acfb55bb16540637ef9cd01","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"2238283","name":"Hamideh
        Babaei","url":"https://www.semanticscholar.org/author/2238283"},{"authorId":"2658080","name":"Mahmood
        Fathy","url":"https://www.semanticscholar.org/author/2658080"},{"authorId":"1982877","name":"Reza
        Berangi","url":"https://www.semanticscholar.org/author/1982877"},{"authorId":"2631610","name":"Morteza
        Romoozi","url":"https://www.semanticscholar.org/author/2631610"}],"doi":"10.1007/s12083-012-0184-0","isInfluential":true,"paperId":"ab297b4d5f7c1ced0d7985e91667313163627554","title":"The
        impact of mobility models on the performance of P2P content discovery protocols
        over mobile ad hoc networks","url":"https://www.semanticscholar.org/paper/ab297b4d5f7c1ced0d7985e91667313163627554","venue":"Peer-to-Peer
        Networking and Applications","year":2014},{"arxivId":null,"authors":[{"authorId":"3235066","name":"Quang
        Le-Dang","url":"https://www.semanticscholar.org/author/3235066"},{"authorId":"3334823","name":"Jennifer
        McManis","url":"https://www.semanticscholar.org/author/3334823"},{"authorId":"1742225","name":"Gabriel-Miro
        Muntean","url":"https://www.semanticscholar.org/author/1742225"}],"doi":"10.1109/BMSB.2015.7177187","isInfluential":false,"paperId":"1110caa5e104f3cde23ae08ff55d0e82850446b5","title":"Link
        quality-aware overlay for video delivery over wireless mesh networks","url":"https://www.semanticscholar.org/paper/1110caa5e104f3cde23ae08ff55d0e82850446b5","venue":"2015
        IEEE International Symposium on Broadband Multimedia Systems and Broadcasting","year":2015},{"arxivId":null,"authors":[{"authorId":"31569434","name":"Gi
        Seok Park","url":"https://www.semanticscholar.org/author/31569434"},{"authorId":"33436816","name":"Wan
        Kim","url":"https://www.semanticscholar.org/author/33436816"},{"authorId":"22466562","name":"Seong
        Ho Jeong","url":"https://www.semanticscholar.org/author/22466562"},{"authorId":"2715283","name":"Hwangjun
        Song","url":"https://www.semanticscholar.org/author/2715283"}],"doi":"10.1109/TMC.2016.2626434","isInfluential":false,"paperId":"28bf8786c36d4a296cd1f21cf43989004502feb7","title":"Smart
        Base Station-Assisted Partial-Flow Device-to-Device Offloading System for
        Video Streaming Services","url":"https://www.semanticscholar.org/paper/28bf8786c36d4a296cd1f21cf43989004502feb7","venue":"IEEE
        Transactions on Mobile Computing","year":2017},{"arxivId":null,"authors":[{"authorId":"1695073","name":"Ajoy
        Kumar Datta","url":"https://www.semanticscholar.org/author/1695073"}],"doi":null,"isInfluential":false,"paperId":"c1d0a0e9b52d80fc79374afc88b6a4d30e721fab","title":"Deterministic
        \ufffd-Connected Overlay for Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/c1d0a0e9b52d80fc79374afc88b6a4d30e721fab","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"1806039","name":"Jenq-Shiou
        Leu","url":"https://www.semanticscholar.org/author/1806039"},{"authorId":"1810267","name":"Cheng-Wei
        Tsai","url":"https://www.semanticscholar.org/author/1810267"}],"doi":"10.1109/PIMRC.2009.5449719","isInfluential":false,"paperId":"6c109b2840aa62bc406db8d6a05cdaaa33c7bf10","title":"A
        novel popularity-independent resource locating scheme in a P2P network","url":"https://www.semanticscholar.org/paper/6c109b2840aa62bc406db8d6a05cdaaa33c7bf10","venue":"2009
        IEEE 20th International Symposium on Personal, Indoor and Mobile Radio Communications","year":2009},{"arxivId":null,"authors":[{"authorId":"2582015","name":"Fikret
        Sivrikaya","url":"https://www.semanticscholar.org/author/2582015"},{"authorId":"1692170","name":"Stefano
        Salsano","url":"https://www.semanticscholar.org/author/1692170"},{"authorId":"2974889","name":"Marco
        Bonola","url":"https://www.semanticscholar.org/author/2974889"},{"authorId":null,"name":"Marco
        Trenca","url":null}],"doi":null,"isInfluential":false,"paperId":"e1701803f44902ef1f68ba24f48bf9b3e1919eff","title":"Mobility
        Support in User-Centric Networks","url":"https://www.semanticscholar.org/paper/e1701803f44902ef1f68ba24f48bf9b3e1919eff","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"1808535","name":"Dongqing
        Xie","url":"https://www.semanticscholar.org/author/1808535"},{"authorId":"9239563","name":"Biwei
        Qian","url":"https://www.semanticscholar.org/author/9239563"},{"authorId":"47724678","name":"Yi
        Peng","url":"https://www.semanticscholar.org/author/47724678"},{"authorId":"7934278","name":"Tianyu
        Chen","url":"https://www.semanticscholar.org/author/7934278"}],"doi":null,"isInfluential":true,"paperId":"9dd638e5e77667effd58c4c17164b88f07bce0ab","title":"A
        Model of Job Scheduling with Deadline for Video-on-Demand System","url":"https://www.semanticscholar.org/paper/9dd638e5e77667effd58c4c17164b88f07bce0ab","venue":"2009
        International Conference on Web Information Systems and Mining","year":2009},{"arxivId":null,"authors":[{"authorId":"2291598","name":"Srikumar
        Venugopal","url":"https://www.semanticscholar.org/author/2291598"},{"authorId":"1709598","name":"Rajkumar
        Buyya","url":"https://www.semanticscholar.org/author/1709598"},{"authorId":"3364482","name":"Ramamohanarao
        Kotagiri","url":"https://www.semanticscholar.org/author/3364482"}],"doi":null,"isInfluential":false,"paperId":"0807e66fca728e048716588a8ab71a8cfd6fdde5","title":"A
        Taxonomy of Global Data Grids","url":"https://www.semanticscholar.org/paper/0807e66fca728e048716588a8ab71a8cfd6fdde5","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"13793862","name":"Curt
        Cramer","url":"https://www.semanticscholar.org/author/13793862"},{"authorId":"1806218","name":"Thomas
        Fuhrmann","url":"https://www.semanticscholar.org/author/1806218"}],"doi":"10.1109/PERCOMW.2006.28","isInfluential":true,"paperId":"4e5f0d74079d6dd449b732f5ebe65ae39106d57f","title":"Bootstrapping
        chord in ad hoc networks not going anywhere for a while","url":"https://www.semanticscholar.org/paper/4e5f0d74079d6dd449b732f5ebe65ae39106d57f","venue":"Fourth
        Annual IEEE International Conference on Pervasive Computing and Communications
        Workshops (PERCOMW''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"48742084","name":"Geoffrey
        Pettet","url":"https://www.semanticscholar.org/author/48742084"},{"authorId":"2602313","name":"Saideep
        Nannapaneni","url":"https://www.semanticscholar.org/author/2602313"},{"authorId":"51049643","name":"Benjamin
        Stadnick","url":"https://www.semanticscholar.org/author/51049643"},{"authorId":"1782264","name":"Abhishek
        Dubey","url":"https://www.semanticscholar.org/author/1782264"},{"authorId":"1749974","name":"Gautam
        Biswas","url":"https://www.semanticscholar.org/author/1749974"}],"doi":"10.1109/UIC-ATC.2017.8397587","isInfluential":false,"paperId":"240f3acab750413ab0f5757742cbbed176540542","title":"Incident
        analysis and prediction using clustering and Bayesian network","url":"https://www.semanticscholar.org/paper/240f3acab750413ab0f5757742cbbed176540542","venue":"2017
        IEEE SmartWorld, Ubiquitous Intelligence & Computing, Advanced & Trusted Computed,
        Scalable Computing & Communications, Cloud & Big Data Computing, Internet
        of People and Smart City Innovation (SmartWorld/SCALCOM/UIC/ATC/CBDCom/IOP/SCI)","year":2017},{"arxivId":null,"authors":[{"authorId":"2229687","name":"Taishi
        Nakashima","url":"https://www.semanticscholar.org/author/2229687"},{"authorId":"7483434","name":"Satoshi
        Fujita","url":"https://www.semanticscholar.org/author/7483434"}],"doi":"10.1109/ICPPW.2015.35","isInfluential":true,"paperId":"5ca8db059a3e3c43b317761a94cf39d352e71973","title":"Scalable
        Tree-Based Consistency Maintenance in Heterogeneous P2P File Sharing Systems","url":"https://www.semanticscholar.org/paper/5ca8db059a3e3c43b317761a94cf39d352e71973","venue":"2015
        44th International Conference on Parallel Processing Workshops","year":2015},{"arxivId":null,"authors":[{"authorId":"2637728","name":"Nicolas
        Christin","url":"https://www.semanticscholar.org/author/2637728"},{"authorId":"1924565","name":"John
        C.-I. Chuang","url":"https://www.semanticscholar.org/author/1924565"}],"doi":"10.1109/INFCOM.2005.1498541","isInfluential":false,"paperId":"6fb0ee33e4ba9208897868494a73cde09811e556","title":"A
        cost-based analysis of overlay routing geometries","url":"https://www.semanticscholar.org/paper/6fb0ee33e4ba9208897868494a73cde09811e556","venue":"Proceedings
        IEEE 24th Annual Joint Conference of the IEEE Computer and Communications
        Societies.","year":2005},{"arxivId":null,"authors":[{"authorId":"34982211","name":"Abdelberi
        Chaabane","url":"https://www.semanticscholar.org/author/34982211"},{"authorId":"2425222","name":"Fatma
        Abdennadher","url":"https://www.semanticscholar.org/author/2425222"},{"authorId":"50466716","name":"Wassef
        Louati","url":"https://www.semanticscholar.org/author/50466716"},{"authorId":"1709086","name":"Mohamed
        Jmaiel","url":"https://www.semanticscholar.org/author/1709086"}],"doi":null,"isInfluential":false,"paperId":"f8e7b8bedbe322e74641f120ff0f8d32c50b7851","title":"Handling
        churn in DHT-based Publish/Subscribe systems","url":"https://www.semanticscholar.org/paper/f8e7b8bedbe322e74641f120ff0f8d32c50b7851","venue":"2012
        Third International Conference on The Network of the Future (NOF)","year":2012},{"arxivId":null,"authors":[{"authorId":"1773599","name":"Ruixuan
        Li","url":"https://www.semanticscholar.org/author/1773599"},{"authorId":"3159180","name":"Guangcan
        Yu","url":"https://www.semanticscholar.org/author/3159180"},{"authorId":"1684497","name":"Zhengding
        Lu","url":"https://www.semanticscholar.org/author/1684497"},{"authorId":"49918073","name":"Wei
        Song","url":"https://www.semanticscholar.org/author/49918073"}],"doi":"10.1109/CSCWD.2007.4281404","isInfluential":false,"paperId":"d1fd12deffaf5f5d3edd58e6b6fcc440051fd4f7","title":"P2P-based
        Locking in Real-Time Collaborative Editing Systems","url":"https://www.semanticscholar.org/paper/d1fd12deffaf5f5d3edd58e6b6fcc440051fd4f7","venue":"2007
        11th International Conference on Computer Supported Cooperative Work in Design","year":2007},{"arxivId":null,"authors":[{"authorId":"1727476","name":"Domenico
        Rosaci","url":"https://www.semanticscholar.org/author/1727476"},{"authorId":"7600364","name":"Giuseppe
        M. L. Sarn\u00e8","url":"https://www.semanticscholar.org/author/7600364"}],"doi":"10.1016/j.is.2012.08.002","isInfluential":false,"paperId":"b7b97c079919cbdb1ea576dbc171bdca6d3ecba7","title":"Recommending
        multimedia web services in a multi-device environment","url":"https://www.semanticscholar.org/paper/b7b97c079919cbdb1ea576dbc171bdca6d3ecba7","venue":"Inf.
        Syst.","year":2013},{"arxivId":null,"authors":[{"authorId":"3324734","name":"Sihui
        Zhou","url":"https://www.semanticscholar.org/author/3324734"},{"authorId":"40340046","name":"Glynn
        Rogers","url":"https://www.semanticscholar.org/author/40340046"},{"authorId":"47608763","name":"Matthew
        Hogan","url":"https://www.semanticscholar.org/author/47608763"},{"authorId":"3332568","name":"Sebastien
        Ardon","url":"https://www.semanticscholar.org/author/3332568"},{"authorId":"40517872","name":"Tao
        Hu","url":"https://www.semanticscholar.org/author/40517872"},{"authorId":"1678254","name":"Aruna
        Seneviratne","url":"https://www.semanticscholar.org/author/1678254"}],"doi":null,"isInfluential":false,"paperId":"3019201701b10048f76c8f3cb24e2e0cf60e42be","title":"An
        Incentive Based Routing Algorithm for Improving Message Forwarding in Structured
        Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/3019201701b10048f76c8f3cb24e2e0cf60e42be","venue":"The
        2nd International Conference on Wireless Broadband and Ultra Wideband Communications
        (AusWireless 2007)","year":2007},{"arxivId":null,"authors":[{"authorId":"1799574","name":"Wei-Tek
        Tsai","url":"https://www.semanticscholar.org/author/1799574"},{"authorId":"1789928","name":"Qihong
        Shao","url":"https://www.semanticscholar.org/author/1789928"},{"authorId":"40158944","name":"Yu
        Huang","url":"https://www.semanticscholar.org/author/40158944"},{"authorId":"2157440","name":"Xiaoying
        Bai","url":"https://www.semanticscholar.org/author/2157440"}],"doi":"10.1145/2020723.2020731","isInfluential":false,"paperId":"6d9976077bee1fefbb2b516cba4e719f06b79ffb","title":"Towards
        a scalable and robust multi-tenancy SaaS","url":"https://www.semanticscholar.org/paper/6d9976077bee1fefbb2b516cba4e719f06b79ffb","venue":"Internetware","year":2010},{"arxivId":null,"authors":[{"authorId":null,"name":"Baldoni","url":null},{"authorId":null,"name":"Tucci
        Piergiovanni","url":null},{"authorId":null,"name":"Scipioni","url":null}],"doi":null,"isInfluential":true,"paperId":"7ae224ad1f5644c4f256ee4d845254621203641b","title":"Communication
        Channel Management for Overlay Connectivity Maintenance","url":"https://www.semanticscholar.org/paper/7ae224ad1f5644c4f256ee4d845254621203641b","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"3337409","name":"Carlos
        P\u00e9rez-Miguel","url":"https://www.semanticscholar.org/author/3337409"},{"authorId":"2970986","name":"Alexander
        Mendiburu","url":"https://www.semanticscholar.org/author/2970986"},{"authorId":"1772420","name":"Jos\u00e9
        Miguel-Alonso","url":"https://www.semanticscholar.org/author/1772420"}],"doi":"10.1016/j.jpdc.2015.08.001","isInfluential":true,"paperId":"6c1a5050c8bec37d7f9779306f1ae3ed5ea8ee4a","title":"Modeling
        the availability of Cassandra","url":"https://www.semanticscholar.org/paper/6c1a5050c8bec37d7f9779306f1ae3ed5ea8ee4a","venue":"J.
        Parallel Distrib. Comput.","year":2015},{"arxivId":null,"authors":[{"authorId":"1680268","name":"Simon
        Oechsner","url":"https://www.semanticscholar.org/author/1680268"},{"authorId":"1701042","name":"Phuoc
        Tran-Gia","url":"https://www.semanticscholar.org/author/1701042"}],"doi":"10.1007/978-3-540-72990-7_17","isInfluential":false,"paperId":"d69ff20572c43ddcdafa17548ebae5af6f979200","title":"Performance
        Evaluation of a Reliable Content Mediation Platform in the Emerging Future
        Internet","url":"https://www.semanticscholar.org/paper/d69ff20572c43ddcdafa17548ebae5af6f979200","venue":"International
        Teletraffic Congress","year":2007},{"arxivId":null,"authors":[{"authorId":"9083639","name":"Yawei
        Zhao","url":"https://www.semanticscholar.org/author/9083639"},{"authorId":"40460765","name":"Fei
        Cai","url":"https://www.semanticscholar.org/author/40460765"},{"authorId":"8069110","name":"Junjie
        Xie","url":"https://www.semanticscholar.org/author/8069110"},{"authorId":"3155249","name":"Lailong
        Luo","url":"https://www.semanticscholar.org/author/3155249"},{"authorId":"2074440","name":"Xiaoqiang
        Teng","url":"https://www.semanticscholar.org/author/2074440"},{"authorId":"2589833","name":"Honghui
        Chen","url":"https://www.semanticscholar.org/author/2589833"},{"authorId":"33559754","name":"Weijie
        Kong","url":"https://www.semanticscholar.org/author/33559754"}],"doi":"10.1109/HPCC.and.EUC.2013.237","isInfluential":false,"paperId":"8866315dfee383769cd3ec4b1942f6580ceee593","title":"A
        New DHT Supporting Multi-attribute Queries for Grid Information Services","url":"https://www.semanticscholar.org/paper/8866315dfee383769cd3ec4b1942f6580ceee593","venue":"2013
        IEEE 10th International Conference on High Performance Computing and Communications
        & 2013 IEEE International Conference on Embedded and Ubiquitous Computing","year":2013},{"arxivId":null,"authors":[{"authorId":"2520141","name":"Davi
        da Silva B\u00f6ger","url":"https://www.semanticscholar.org/author/2520141"},{"authorId":"38815133","name":"Joni
        da Silva Fraga","url":"https://www.semanticscholar.org/author/38815133"},{"authorId":"2560438","name":"Eduardo
        Ad\u00edlio Pelinson Alchieri","url":"https://www.semanticscholar.org/author/2560438"},{"authorId":"2515405","name":"Michelle
        S. Wangham","url":"https://www.semanticscholar.org/author/2515405"}],"doi":"10.1109/AINA.2012.104","isInfluential":false,"paperId":"457cb6a6a75ce3c99e833292262ffee886f14118","title":"Intrusion-Tolerant
        Shared Memory through a P2P Overlay Segmentation","url":"https://www.semanticscholar.org/paper/457cb6a6a75ce3c99e833292262ffee886f14118","venue":"2012
        IEEE 26th International Conference on Advanced Information Networking and
        Applications","year":2012},{"arxivId":null,"authors":[{"authorId":"2637788","name":"Grant
        P. Millar","url":"https://www.semanticscholar.org/author/2637788"},{"authorId":"2025053","name":"Emmanouil
        A. Panaousis","url":"https://www.semanticscholar.org/author/2025053"},{"authorId":"47414909","name":"Christos
        Politis","url":"https://www.semanticscholar.org/author/47414909"}],"doi":null,"isInfluential":false,"paperId":"0a0fc3615891e3ea082d4047b53031fd11734298","title":"ROBUST:
        Reliable overlay based utilisation of services and topology for emergency
        MANETs","url":"https://www.semanticscholar.org/paper/0a0fc3615891e3ea082d4047b53031fd11734298","venue":"2010
        Future Network & Mobile Summit","year":2010},{"arxivId":null,"authors":[{"authorId":"1714863","name":"Gil
        Utard","url":"https://www.semanticscholar.org/author/1714863"},{"authorId":"47890836","name":"Hung-Cuong
        Le","url":"https://www.semanticscholar.org/author/47890836"},{"authorId":"30407313","name":"Trung-Thanh
        Tran","url":"https://www.semanticscholar.org/author/30407313"}],"doi":"10.1145/3155133.3155198","isInfluential":false,"paperId":"3279c6c038b0165bd2bf41f30f055431cf7d84eb","title":"U-RPC:
        a Protocol for Microservices in DHT","url":"https://www.semanticscholar.org/paper/3279c6c038b0165bd2bf41f30f055431cf7d84eb","venue":"SoICT","year":2017},{"arxivId":null,"authors":[{"authorId":"2368876","name":"Luiz
        Rodolpho Monnerat","url":"https://www.semanticscholar.org/author/2368876"},{"authorId":"1764900","name":"Cl\u00e1udio
        L. Amorim","url":"https://www.semanticscholar.org/author/1764900"}],"doi":"10.1109/GLOCOM.2009.5425764","isInfluential":true,"paperId":"0b29381531f5202260274183149fa20860799ad5","title":"Peer-to-Peer
        Single Hop Distributed Hash Tables","url":"https://www.semanticscholar.org/paper/0b29381531f5202260274183149fa20860799ad5","venue":"GLOBECOM
        2009 - 2009 IEEE Global Telecommunications Conference","year":2009},{"arxivId":null,"authors":[{"authorId":"2393109","name":"Chunqi
        Tian","url":"https://www.semanticscholar.org/author/2393109"},{"authorId":"3089700","name":"Shihong
        Zou","url":"https://www.semanticscholar.org/author/3089700"},{"authorId":"2651877","name":"Wendong
        Wang","url":"https://www.semanticscholar.org/author/2651877"},{"authorId":"8380053","name":"Shiduan
        Cheng","url":"https://www.semanticscholar.org/author/8380053"}],"doi":null,"isInfluential":false,"paperId":"157cc6981be13ddccc54ca114acee406ebeb08f0","title":"An
        Efficient Attack-Resistant Trust Model for P 2 P Networks","url":"https://www.semanticscholar.org/paper/157cc6981be13ddccc54ca114acee406ebeb08f0","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"37613610","name":"Long
        Cheng","url":"https://www.semanticscholar.org/author/37613610"}],"doi":null,"isInfluential":true,"paperId":"2d37b34a5bdb8dd3c1f9002dd752cb4a5c85c11f","title":"A
        Scalable Analysis Framework for Large-scale Rdf Data","url":"https://www.semanticscholar.org/paper/2d37b34a5bdb8dd3c1f9002dd752cb4a5c85c11f","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1837852","name":"Jeff
        Terrace","url":"https://www.semanticscholar.org/author/1837852"},{"authorId":"3122063","name":"Michael
        J. Freedman","url":"https://www.semanticscholar.org/author/3122063"}],"doi":null,"isInfluential":true,"paperId":"67b3d45164531806e14697a3b4d268d5f294bb82","title":"Object
        Storage on CRAQ: High-Throughput Chain Replication for Read-Mostly Workloads","url":"https://www.semanticscholar.org/paper/67b3d45164531806e14697a3b4d268d5f294bb82","venue":"USENIX
        Annual Technical Conference","year":2009},{"arxivId":"1201.2766","authors":[{"authorId":"1718248","name":"Spyros
        Sioutas","url":"https://www.semanticscholar.org/author/1718248"},{"authorId":"1732298","name":"Peter
        Triantafillou","url":"https://www.semanticscholar.org/author/1732298"},{"authorId":"1837376","name":"George
        Papaloukopoulos","url":"https://www.semanticscholar.org/author/1837376"},{"authorId":"1710324","name":"Evangelos
        Sakkopoulos","url":"https://www.semanticscholar.org/author/1710324"},{"authorId":"1702182","name":"Kostas
        Tsichlas","url":"https://www.semanticscholar.org/author/1702182"},{"authorId":"1796253","name":"Yannis
        Manolopoulos","url":"https://www.semanticscholar.org/author/1796253"}],"doi":"10.1007/s10619-012-7112-4","isInfluential":false,"paperId":"02a29c5897b1fa71149d802ad7f082ae833fee5c","title":"ART:
        sub-logarithmic decentralized range query processing with probabilistic guarantees","url":"https://www.semanticscholar.org/paper/02a29c5897b1fa71149d802ad7f082ae833fee5c","venue":"Distributed
        and Parallel Databases","year":2010},{"arxivId":null,"authors":[{"authorId":"1785417","name":"Michel
        Charpentier","url":"https://www.semanticscholar.org/author/1785417"},{"authorId":"1781569","name":"G\u00e9rard
        Padiou","url":"https://www.semanticscholar.org/author/1781569"},{"authorId":"3009999","name":"Philippe
        Qu\u00e9innec","url":"https://www.semanticscholar.org/author/3009999"}],"doi":"10.1109/NCA.2005.13","isInfluential":false,"paperId":"4f69d69e5d2c5482586c4f41bb6e009227a96c28","title":"Cooperative
        Mobile Agents to Gather Global Information","url":"https://www.semanticscholar.org/paper/4f69d69e5d2c5482586c4f41bb6e009227a96c28","venue":"Fourth
        IEEE International Symposium on Network Computing and Applications","year":2005},{"arxivId":null,"authors":[{"authorId":"2524347","name":"Mukaddim
        Pathan","url":"https://www.semanticscholar.org/author/2524347"},{"authorId":"1709598","name":"Rajkumar
        Buyya","url":"https://www.semanticscholar.org/author/1709598"}],"doi":null,"isInfluential":false,"paperId":"97623493df38163e8e1a0c2326f4f2aaa8dc48ca","title":"Chapter
        2 A Taxonomy of CDNs","url":"https://www.semanticscholar.org/paper/97623493df38163e8e1a0c2326f4f2aaa8dc48ca","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"48340129","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/48340129"},{"authorId":"48458409","name":"Ze
        Li","url":"https://www.semanticscholar.org/author/48458409"}],"doi":null,"isInfluential":false,"paperId":"34498b8d2d843aae53b1393b6486086c0f2311ac","title":"SPPS:
        A scalable P2P-based proximity-aware multi-resource discovery scheme for grids","url":"https://www.semanticscholar.org/paper/34498b8d2d843aae53b1393b6486086c0f2311ac","venue":"MILCOM
        2008 - 2008 IEEE Military Communications Conference","year":2008},{"arxivId":null,"authors":[{"authorId":"26382519","name":"Ying
        Cai","url":"https://www.semanticscholar.org/author/26382519"},{"authorId":"34454154","name":"Zhan
        Chen","url":"https://www.semanticscholar.org/author/34454154"},{"authorId":"1750749","name":"Wallapak
        Tavanapong","url":"https://www.semanticscholar.org/author/1750749"}],"doi":"10.1007/s11042-007-0136-5","isInfluential":false,"paperId":"60fd40dccfeee060953bd042926fb9becb408b49","title":"Caching
        collaboration and cache allocation in peer-to-peer video systems","url":"https://www.semanticscholar.org/paper/60fd40dccfeee060953bd042926fb9becb408b49","venue":"Multimedia
        Tools and Applications","year":2007},{"arxivId":null,"authors":[{"authorId":"1703321","name":"Takahiro
        Hata","url":"https://www.semanticscholar.org/author/1703321"},{"authorId":"1810118","name":"Michiharu
        Takemoto","url":"https://www.semanticscholar.org/author/1810118"},{"authorId":"1858875","name":"Takashi
        Kambayashi","url":"https://www.semanticscholar.org/author/1858875"},{"authorId":"8922334","name":"Kentaro
        Uchiyama","url":"https://www.semanticscholar.org/author/8922334"},{"authorId":"2446785","name":"Mitsuo
        Teramoto","url":"https://www.semanticscholar.org/author/2446785"}],"doi":"10.1109/SAINT.2009.39","isInfluential":true,"paperId":"3b71e837490b0801791a19f5d4d51005e4a368f7","title":"A
        Network Architecture to Easily Control Devices","url":"https://www.semanticscholar.org/paper/3b71e837490b0801791a19f5d4d51005e4a368f7","venue":"2009
        Ninth Annual International Symposium on Applications and the Internet","year":2009},{"arxivId":null,"authors":[{"authorId":"2845821","name":"Dan
        Schatzberg","url":"https://www.semanticscholar.org/author/2845821"},{"authorId":"2274570","name":"Jonathan
        Appavoo","url":"https://www.semanticscholar.org/author/2274570"},{"authorId":"3160421","name":"Eric
        Van Hensbergen","url":"https://www.semanticscholar.org/author/3160421"}],"doi":null,"isInfluential":false,"paperId":"6204b15a94ca780b799ea73cc95f432cb9baca95","title":"Scalable
        Elastic Systems Architecture","url":"https://www.semanticscholar.org/paper/6204b15a94ca780b799ea73cc95f432cb9baca95","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"2614582","name":"Ayumu
        Kubota","url":"https://www.semanticscholar.org/author/2614582"},{"authorId":"35134348","name":"Akira
        Yamada","url":"https://www.semanticscholar.org/author/35134348"},{"authorId":"35261945","name":"Yutaka
        Miyake","url":"https://www.semanticscholar.org/author/35261945"}],"doi":"10.1109/GLOCOM.2006.188","isInfluential":false,"paperId":"375a65846bd5f614a12e0f8bafc0c95f5c9e94f3","title":"ISE02-4:
        L2VPN over Chord: Hosting Millions of Small Zeroconf Networks over DHT Nodes","url":"https://www.semanticscholar.org/paper/375a65846bd5f614a12e0f8bafc0c95f5c9e94f3","venue":"IEEE
        Globecom 2006","year":2006},{"arxivId":null,"authors":[{"authorId":"1790991","name":"Beniamino
        Di Martino","url":"https://www.semanticscholar.org/author/1790991"},{"authorId":"1803063","name":"Rocco
        Aversa","url":"https://www.semanticscholar.org/author/1803063"},{"authorId":"1770496","name":"Salvatore
        Venticinque","url":"https://www.semanticscholar.org/author/1770496"},{"authorId":"2552070","name":"Luigi
        Buonanno","url":"https://www.semanticscholar.org/author/2552070"}],"doi":null,"isInfluential":true,"paperId":"d7636b971f37b63191afc58cb37c65f119beb191","title":"Competitive
        P 2 P Scheduling of Users \u2019 Jobs in Cloud","url":"https://www.semanticscholar.org/paper/d7636b971f37b63191afc58cb37c65f119beb191","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":"2071250","name":"Lichun
        Li","url":"https://www.semanticscholar.org/author/2071250"},{"authorId":"1792246","name":"Chunhong
        Zhang","url":"https://www.semanticscholar.org/author/1792246"},{"authorId":"1763176","name":"Wei
        Mi","url":"https://www.semanticscholar.org/author/1763176"},{"authorId":"48379555","name":"Yonghui
        Zhang","url":"https://www.semanticscholar.org/author/48379555"},{"authorId":"47274513","name":"Tao
        Ma","url":"https://www.semanticscholar.org/author/47274513"},{"authorId":"1747536","name":"Yang
        Ji","url":"https://www.semanticscholar.org/author/1747536"},{"authorId":"34985964","name":"Xiaofeng
        Qiu","url":"https://www.semanticscholar.org/author/34985964"}],"doi":"10.1109/GLOCOM.2009.5425339","isInfluential":false,"paperId":"f812165c768df952ddb64444c4776bbef5b0aa1a","title":"SFDHT:
        A DHT Designed for Server Farm","url":"https://www.semanticscholar.org/paper/f812165c768df952ddb64444c4776bbef5b0aa1a","venue":"GLOBECOM
        2009 - 2009 IEEE Global Telecommunications Conference","year":2009},{"arxivId":null,"authors":[{"authorId":"38753928","name":"Prasanna
        Ganesan","url":"https://www.semanticscholar.org/author/38753928"},{"authorId":"2012679","name":"Gurmeet
        Singh Manku","url":"https://www.semanticscholar.org/author/2012679"}],"doi":null,"isInfluential":true,"paperId":"361e2a9c37c4827a9522aeac7276b2941eb15b64","title":"Optimal
        routing in Chord","url":"https://www.semanticscholar.org/paper/361e2a9c37c4827a9522aeac7276b2941eb15b64","venue":"SODA","year":2004},{"arxivId":null,"authors":[{"authorId":"1729141","name":"Hanh
        Le","url":"https://www.semanticscholar.org/author/1729141"},{"authorId":"1709615","name":"Doan
        B. Hoang","url":"https://www.semanticscholar.org/author/1709615"},{"authorId":"2042654","name":"Andrew
        James Simmonds","url":"https://www.semanticscholar.org/author/2042654"}],"doi":"10.1109/AINA.2006.259","isInfluential":true,"paperId":"44fa2cd6f1296b1229e7e0228065ac0cfe5f06d6","title":"PARM:
        a physically-aware reference model for overlay internetworking","url":"https://www.semanticscholar.org/paper/44fa2cd6f1296b1229e7e0228065ac0cfe5f06d6","venue":"20th
        International Conference on Advanced Information Networking and Applications
        - Volume 1 (AINA''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"1719793","name":"Zhijun
        Li","url":"https://www.semanticscholar.org/author/1719793"},{"authorId":"1749730","name":"Guang
        Gong","url":"https://www.semanticscholar.org/author/1749730"}],"doi":"10.1007/978-3-642-11723-7_16","isInfluential":false,"paperId":"6783862bb0aedf88aecd9d712060a7376113039e","title":"DHT-Based
        Detection of Node Clone in Wireless Sensor Networks","url":"https://www.semanticscholar.org/paper/6783862bb0aedf88aecd9d712060a7376113039e","venue":"ADHOCNETS","year":2009},{"arxivId":null,"authors":[{"authorId":"2067330","name":"Yunfeng
        Gu","url":"https://www.semanticscholar.org/author/2067330"},{"authorId":"1710379","name":"Azzedine
        Boukerche","url":"https://www.semanticscholar.org/author/1710379"}],"doi":"10.1016/j.jpdc.2011.04.003","isInfluential":false,"paperId":"6446025ecbcc6ba3e8136f126b3dd50283d82b93","title":"HD
        Tree: A novel data structure to support multi-dimensional range query for
        P2P networks","url":"https://www.semanticscholar.org/paper/6446025ecbcc6ba3e8136f126b3dd50283d82b93","venue":"J.
        Parallel Distrib. Comput.","year":2011},{"arxivId":null,"authors":[{"authorId":"1710379","name":"Azzedine
        Boukerche","url":"https://www.semanticscholar.org/author/1710379"},{"authorId":"1749554","name":"Anis
        Zarrad","url":"https://www.semanticscholar.org/author/1749554"},{"authorId":"1719492","name":"Regina
        Borges de Araujo","url":"https://www.semanticscholar.org/author/1719492"}],"doi":"10.1109/TPDS.2009.91","isInfluential":false,"paperId":"6f2505ac1b1a7430d37b87a02b7e245ff8135399","title":"A
        Cross-Layer Approach-Based Gnutella for Collaborative Virtual Environments
        over Mobile Ad Hoc Networks","url":"https://www.semanticscholar.org/paper/6f2505ac1b1a7430d37b87a02b7e245ff8135399","venue":"IEEE
        Transactions on Parallel and Distributed Systems","year":2010},{"arxivId":null,"authors":[{"authorId":"2649445","name":"Tong
        Ming Lim","url":"https://www.semanticscholar.org/author/2649445"},{"authorId":"2425442","name":"Angela
        Lee Siew Hoong","url":"https://www.semanticscholar.org/author/2425442"},{"authorId":"29337323","name":"Teck
        Min Chin","url":"https://www.semanticscholar.org/author/29337323"}],"doi":null,"isInfluential":false,"paperId":"4c440f5c8010aab17346484c0c012b94d5bc60db","title":"The
        6-hop peer-to-peer system","url":"https://www.semanticscholar.org/paper/4c440f5c8010aab17346484c0c012b94d5bc60db","venue":"2014
        IEEE International Conference on Progress in Informatics and Computing","year":2014},{"arxivId":null,"authors":[{"authorId":"9312664","name":"Chayanon
        Sub-r-pa","url":"https://www.semanticscholar.org/author/9312664"},{"authorId":"2677190","name":"Chotipat
        Pornavalai","url":"https://www.semanticscholar.org/author/2677190"}],"doi":null,"isInfluential":false,"paperId":"6e3893110a4b5023ee9bf69c7edec0ac1301dbf5","title":"Proximity
        neighbor selection using IP prefix matching in Kademlia-based Distributed
        Hash Table","url":"https://www.semanticscholar.org/paper/6e3893110a4b5023ee9bf69c7edec0ac1301dbf5","venue":"ECTI-CON2010:
        The 2010 ECTI International Confernce on Electrical Engineering/Electronics,
        Computer, Telecommunications and Information Technology","year":2010},{"arxivId":null,"authors":[{"authorId":"50643844","name":"Kenichi
        Watanabe","url":"https://www.semanticscholar.org/author/50643844"},{"authorId":"1762721","name":"Naohiro
        Hayashibara","url":"https://www.semanticscholar.org/author/1762721"},{"authorId":"1682893","name":"Makoto
        Takizawa","url":"https://www.semanticscholar.org/author/1682893"}],"doi":"10.1109/ICDCSW.2007.63","isInfluential":false,"paperId":"e4d171306de1a530edab1504b0805e56aa10f37c","title":"Performance
        Analysis of the Superpeer-based Two-layer P2P Overlay Network with the CBF
        Strategy","url":"https://www.semanticscholar.org/paper/e4d171306de1a530edab1504b0805e56aa10f37c","venue":"27th
        International Conference on Distributed Computing Systems Workshops (ICDCSW''07)","year":2007},{"arxivId":null,"authors":[{"authorId":"1713041","name":"Mehmet
        S. Aktas","url":"https://www.semanticscholar.org/author/1713041"},{"authorId":"1700267","name":"Geoffrey
        C. Fox","url":"https://www.semanticscholar.org/author/1700267"},{"authorId":"1748875","name":"Marlon
        E. Pierce","url":"https://www.semanticscholar.org/author/1748875"}],"doi":"10.1016/j.future.2006.05.009","isInfluential":true,"paperId":"fa2f8978496ddd1a2712bf54506f55c94930fd52","title":"Fault
        tolerant high performance Information Services for dynamic collections of
        Grid and Web services","url":"https://www.semanticscholar.org/paper/fa2f8978496ddd1a2712bf54506f55c94930fd52","venue":"Future
        Generation Comp. Syst.","year":2007},{"arxivId":null,"authors":[{"authorId":"34171549","name":"Mudiganti
        Vijaya Bhaskar","url":"https://www.semanticscholar.org/author/34171549"},{"authorId":"46511468","name":"V.
        V. Sunil Kumar","url":"https://www.semanticscholar.org/author/46511468"},{"authorId":"2258972","name":"M
        Shamily Rathan M. Tech","url":"https://www.semanticscholar.org/author/2258972"}],"doi":null,"isInfluential":false,"paperId":"332ab6dfa51d43bee5259c4e309ea9959cec8779","title":"Equivalent
        Servants over P 2 P Networks","url":"https://www.semanticscholar.org/paper/332ab6dfa51d43bee5259c4e309ea9959cec8779","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"46477167","name":"Hao
        Wu","url":"https://www.semanticscholar.org/author/46477167"},{"authorId":"46635614","name":"Chao
        Cheng","url":"https://www.semanticscholar.org/author/46635614"},{"authorId":"1739438","name":"Zhangdui
        Zhong","url":"https://www.semanticscholar.org/author/1739438"}],"doi":null,"isInfluential":false,"paperId":"b8921c0bbb41530fe7f5b6ca8277c0126b4fd577","title":"A
        resource discovery strategy for mobile Peer-to-Peer networks","url":"https://www.semanticscholar.org/paper/b8921c0bbb41530fe7f5b6ca8277c0126b4fd577","venue":"2010
        International Conference on Wireless Information Networks and Systems (WINSYS)","year":2010},{"arxivId":null,"authors":[{"authorId":"1846129","name":"Fabrizio
        Falchi","url":"https://www.semanticscholar.org/author/1846129"},{"authorId":"2209975","name":"Claudio
        Gennaro","url":"https://www.semanticscholar.org/author/2209975"},{"authorId":"3187322","name":"Fausto
        Rabitti","url":"https://www.semanticscholar.org/author/3187322"},{"authorId":"1701332","name":"Pavel
        Zezula","url":"https://www.semanticscholar.org/author/1701332"}],"doi":"10.1016/j.future.2008.02.007","isInfluential":false,"paperId":"cb7087fabac893c853d563be357439ab14d4d5cf","title":"Distance
        browsing in distributed multimedia databases","url":"https://www.semanticscholar.org/paper/cb7087fabac893c853d563be357439ab14d4d5cf","venue":"Future
        Generation Comp. Syst.","year":2009},{"arxivId":null,"authors":[{"authorId":"2587272","name":"Meng-Ru
        Lin","url":"https://www.semanticscholar.org/author/2587272"},{"authorId":"3131616","name":"Ssu-Hsuan
        Lu","url":"https://www.semanticscholar.org/author/3131616"},{"authorId":"2395916","name":"Tsung-Hsuan
        Ho","url":"https://www.semanticscholar.org/author/2395916"},{"authorId":"48987902","name":"Peter
        Lin","url":"https://www.semanticscholar.org/author/48987902"},{"authorId":"1710898","name":"Yeh-Ching
        Chung","url":"https://www.semanticscholar.org/author/1710898"}],"doi":"10.1007/978-3-540-72360-8_9","isInfluential":false,"paperId":"ede7e2b62448d173579713862ab50e7f0c529664","title":"CFR:
        A Peer-to-Peer Collaborative File Repository System","url":"https://www.semanticscholar.org/paper/ede7e2b62448d173579713862ab50e7f0c529664","venue":"GPC","year":2007},{"arxivId":null,"authors":[{"authorId":"3122063","name":"Michael
        J. Freedman","url":"https://www.semanticscholar.org/author/3122063"}],"doi":null,"isInfluential":true,"paperId":"dcdeaf57cd85e9410d420539f2582ed814603cbc","title":"Democratizing
        content distribution","url":"https://www.semanticscholar.org/paper/dcdeaf57cd85e9410d420539f2582ed814603cbc","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"46276184","name":"Jinyang
        Li","url":"https://www.semanticscholar.org/author/46276184"},{"authorId":"1753174","name":"Jeremy
        Stribling","url":"https://www.semanticscholar.org/author/1753174"},{"authorId":"50324117","name":"Thomer
        M. Gil","url":"https://www.semanticscholar.org/author/50324117"},{"authorId":"2099495","name":"Robert
        Tappan Morris","url":"https://www.semanticscholar.org/author/2099495"},{"authorId":"1681493","name":"M.
        Frans Kaashoek","url":"https://www.semanticscholar.org/author/1681493"}],"doi":"10.1007/978-3-540-30183-7_9","isInfluential":false,"paperId":"954fb93aa3f70ed6a7cb87685af069e76a0d7678","title":"Comparing
        the Performance of Distributed Hash Tables Under Churn","url":"https://www.semanticscholar.org/paper/954fb93aa3f70ed6a7cb87685af069e76a0d7678","venue":"IPTPS","year":2004},{"arxivId":null,"authors":[{"authorId":"31083353","name":"Gustavo
        Salvadori Baptista do Carmo","url":"https://www.semanticscholar.org/author/31083353"},{"authorId":"31182363","name":"Jamil
        Salem Barbar","url":"https://www.semanticscholar.org/author/31182363"},{"authorId":"3478940","name":"Fernanda
        B. Coelho","url":"https://www.semanticscholar.org/author/3478940"}],"doi":null,"isInfluential":false,"paperId":"2eeb6f810904da6379502a7f179eea104a4e4689","title":"A
        New Classification for Peer-to-peer Networks Architectures","url":"https://www.semanticscholar.org/paper/2eeb6f810904da6379502a7f179eea104a4e4689","venue":"IEEE
        Latin America Transactions","year":2006},{"arxivId":null,"authors":[{"authorId":"49408546","name":"W.
        Jiang","url":"https://www.semanticscholar.org/author/49408546"},{"authorId":"50562303","name":"Jing
        Zhang","url":"https://www.semanticscholar.org/author/50562303"},{"authorId":"39359209","name":"JunHuai
        Li","url":"https://www.semanticscholar.org/author/39359209"},{"authorId":"49376196","name":"Hui
        Hu","url":"https://www.semanticscholar.org/author/49376196"}],"doi":null,"isInfluential":false,"paperId":"28c92d3e994484d5dae338c375b365e0869479dc","title":"An
        Improved Resource Query and Location Algorithm Based on Cloud Computing","url":"https://www.semanticscholar.org/paper/28c92d3e994484d5dae338c375b365e0869479dc","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"32009177","name":"Michael
        Piatek","url":"https://www.semanticscholar.org/author/32009177"},{"authorId":"49139717","name":"Jeffrey
        P. Jackson","url":"https://www.semanticscholar.org/author/49139717"},{"authorId":"2359294","name":"Patrick
        Juola","url":"https://www.semanticscholar.org/author/2359294"}],"doi":null,"isInfluential":false,"paperId":"b7350b480757c35aa0bf887391e5188138af0008","title":"Distributed
        Web Proxy Caching in a Local Network Environment","url":"https://www.semanticscholar.org/paper/b7350b480757c35aa0bf887391e5188138af0008","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"}],"doi":null,"isInfluential":true,"paperId":"422121c6edcfdf7445cfc2d447c55e8e87115cd4","title":"Content-based
        Publish / Subscribe Systems","url":"https://www.semanticscholar.org/paper/422121c6edcfdf7445cfc2d447c55e8e87115cd4","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"1803786","name":"Alper
        Koz","url":"https://www.semanticscholar.org/author/1803786"},{"authorId":"1706172","name":"Reginald
        L. Lagendijk","url":"https://www.semanticscholar.org/author/1706172"}],"doi":"10.1109/TMM.2016.2625198","isInfluential":true,"paperId":"9a226ccde5a60c103f84e6d1f3c9a3967c8a2184","title":"Distributed
        Content Based Video Identification in Peer-to-Peer Networks: Requirements
        and Solutions","url":"https://www.semanticscholar.org/paper/9a226ccde5a60c103f84e6d1f3c9a3967c8a2184","venue":"IEEE
        Transactions on Multimedia","year":2017},{"arxivId":null,"authors":[{"authorId":"50493165","name":"Jos\u00e9
        Valerio","url":"https://www.semanticscholar.org/author/50493165"},{"authorId":"3223210","name":"Pierre
        Sutra","url":"https://www.semanticscholar.org/author/3223210"},{"authorId":"2633361","name":"Etienne
        Rivi\u00e8re","url":"https://www.semanticscholar.org/author/2633361"},{"authorId":"1743906","name":"Pascal
        Felber","url":"https://www.semanticscholar.org/author/1743906"}],"doi":"10.1007/978-3-642-38541-4_11","isInfluential":true,"paperId":"bbe4dc61eb740cb75a9a0a0670a1fb6154e87513","title":"Evaluating
        the Price of Consistency in Distributed File Storage Services","url":"https://www.semanticscholar.org/paper/bbe4dc61eb740cb75a9a0a0670a1fb6154e87513","venue":"DAIS","year":2013},{"arxivId":null,"authors":[{"authorId":"3156014","name":"Tae
        Woong Choi","url":"https://www.semanticscholar.org/author/3156014"},{"authorId":"2721383","name":"P.
        Oscar Boykin","url":"https://www.semanticscholar.org/author/2721383"}],"doi":"10.1109/IPDPSW.2010.5470932","isInfluential":true,"paperId":"9b15947c600948acf241a9e1b8a36280a257bbc2","title":"Deetoo:
        Scalable unstructured search built on a structured overlay","url":"https://www.semanticscholar.org/paper/9b15947c600948acf241a9e1b8a36280a257bbc2","venue":"2010
        IEEE International Symposium on Parallel & Distributed Processing, Workshops
        and Phd Forum (IPDPSW)","year":2010},{"arxivId":null,"authors":[{"authorId":"50643844","name":"Kenichi
        Watanabe","url":"https://www.semanticscholar.org/author/50643844"},{"authorId":"1762721","name":"Naohiro
        Hayashibara","url":"https://www.semanticscholar.org/author/1762721"},{"authorId":"1682893","name":"Makoto
        Takizawa","url":"https://www.semanticscholar.org/author/1682893"}],"doi":"10.1109/CISIS.2007.8","isInfluential":false,"paperId":"c03e438d9dd8723b56207462376fa081aadcbc72","title":"A
        Superpeer-Based Two-Layer P2P Overlay Network with the CBF Strategy","url":"https://www.semanticscholar.org/paper/c03e438d9dd8723b56207462376fa081aadcbc72","venue":"First
        International Conference on Complex, Intelligent and Software Intensive Systems
        (CISIS''07)","year":2007},{"arxivId":null,"authors":[{"authorId":"49149130","name":"George
        H. L. Fletcher","url":"https://www.semanticscholar.org/author/49149130"}],"doi":null,"isInfluential":true,"paperId":"5e4763785291ca98de57e67ffb6452c11ec2ad6c","title":"Decentralized
        Object Location In Dynamic Peer-to-Peer Distributed Systems","url":"https://www.semanticscholar.org/paper/5e4763785291ca98de57e67ffb6452c11ec2ad6c","venue":"","year":2003},{"arxivId":null,"authors":[{"authorId":"1747573","name":"Zhenhua
        Tan","url":"https://www.semanticscholar.org/author/1747573"},{"authorId":"46745434","name":"Wei
        Cheng","url":"https://www.semanticscholar.org/author/46745434"},{"authorId":"2304167","name":"Xiaoxing
        Gao","url":"https://www.semanticscholar.org/author/2304167"},{"authorId":"48017439","name":"He
        Wang","url":"https://www.semanticscholar.org/author/48017439"},{"authorId":"1744084","name":"Guiran
        Chang","url":"https://www.semanticscholar.org/author/1744084"}],"doi":null,"isInfluential":false,"paperId":"9b55a8d0cdd198f64f7b5a1d079a8721e24d3893","title":"A
        Peer-to-Peer Overlay Network Routing Protocol Based on Bidirectional Circle
        Topology","url":"https://www.semanticscholar.org/paper/9b55a8d0cdd198f64f7b5a1d079a8721e24d3893","venue":"2008
        4th International Conference on Wireless Communications, Networking and Mobile
        Computing","year":2008},{"arxivId":null,"authors":[{"authorId":null,"name":"VICTOR
        AXELSSON","url":null}],"doi":null,"isInfluential":true,"paperId":"6f3ef4dc70d7b56345c16fd2101640276168d348","title":"Recommendations
        for Music Session Instrumentation Contrasting Graph to ML Based Approaches","url":"https://www.semanticscholar.org/paper/6f3ef4dc70d7b56345c16fd2101640276168d348","venue":"","year":2018},{"arxivId":null,"authors":[{"authorId":"48024442","name":"A.K.
        Datta","url":"https://www.semanticscholar.org/author/48024442"},{"authorId":"51411643","name":"Maria
        Gradinariu","url":"https://www.semanticscholar.org/author/51411643"},{"authorId":"2553735","name":"Antonino
        Virgillito","url":"https://www.semanticscholar.org/author/2553735"}],"doi":null,"isInfluential":false,"paperId":"67d72e626574d409bc4b730a5e149fba526db984","title":"Deterministic
        /spl delta/-connected overlay for peer-to-peer networks","url":"https://www.semanticscholar.org/paper/67d72e626574d409bc4b730a5e149fba526db984","venue":"Ninth
        IEEE International Symposium on Object and Component-Oriented Real-Time Distributed
        Computing (ISORC''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"3356671","name":"Renwei
        Ge","url":"https://www.semanticscholar.org/author/3356671"},{"authorId":"1741119","name":"Giovanni
        Di Crescenzo","url":"https://www.semanticscholar.org/author/1741119"},{"authorId":"31987784","name":"M.
        Fecko","url":"https://www.semanticscholar.org/author/31987784"},{"authorId":"1686919","name":"Sunil
        Samtani","url":"https://www.semanticscholar.org/author/1686919"}],"doi":null,"isInfluential":true,"paperId":"857f058e5077e9e16f2c3c2da8c2e7f7873a5ead","title":"Efficient
        and secure indirect-address service discovery in MANET","url":"https://www.semanticscholar.org/paper/857f058e5077e9e16f2c3c2da8c2e7f7873a5ead","venue":"MILCOM
        2005 - 2005 IEEE Military Communications Conference","year":2005},{"arxivId":null,"authors":[{"authorId":"30841651","name":"Jing-Yang
        Yu","url":"https://www.semanticscholar.org/author/30841651"},{"authorId":"2115393","name":"Xiao-Jin
        Ren","url":"https://www.semanticscholar.org/author/2115393"}],"doi":null,"isInfluential":true,"paperId":"888d3e53ede541d1974134d80c4c7b5a5a0ea685","title":"Hier-DHT:
        Structured P2P-based hierarchy search model for time-shifted streaming","url":"https://www.semanticscholar.org/paper/888d3e53ede541d1974134d80c4c7b5a5a0ea685","venue":"2012
        14th International Conference on Advanced Communication Technology (ICACT)","year":2012},{"arxivId":null,"authors":[{"authorId":null,"name":"Mukesh
        Kawatghare","url":null},{"authorId":"37142812","name":"Pradnya V. Kamble","url":"https://www.semanticscholar.org/author/37142812"}],"doi":null,"isInfluential":false,"paperId":"08a526f244bd30408bc507f9d455f3460363aa2d","title":"Result
        on Enforce Secure and Privacy Preserving Information Brokering in Distributed
        Information Sharing","url":"https://www.semanticscholar.org/paper/08a526f244bd30408bc507f9d455f3460363aa2d","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"2367393","name":"Noura
        Limam","url":"https://www.semanticscholar.org/author/2367393"},{"authorId":"2447804","name":"Joanna
        Ziembicki","url":"https://www.semanticscholar.org/author/2447804"},{"authorId":"2319677","name":"Reaz
        Ahmed","url":"https://www.semanticscholar.org/author/2319677"},{"authorId":"1806716","name":"Youssef
        Iraqi","url":"https://www.semanticscholar.org/author/1806716"},{"authorId":"47268300","name":"Tianshu
        Li","url":"https://www.semanticscholar.org/author/47268300"},{"authorId":"1715494","name":"Raouf
        Boutaba","url":"https://www.semanticscholar.org/author/1715494"},{"authorId":"1730312","name":"Fernando
        Cuervo","url":"https://www.semanticscholar.org/author/1730312"}],"doi":"10.1016/j.comcom.2005.11.017","isInfluential":true,"paperId":"585c1940738e2c19f27d9220ea1acde3dc6637e2","title":"OSDA:
        Open service discovery architecture for efficient cross-domain service provisioning","url":"https://www.semanticscholar.org/paper/585c1940738e2c19f27d9220ea1acde3dc6637e2","venue":"Computer
        Communications","year":2007},{"arxivId":null,"authors":[{"authorId":"35143368","name":"Yuhui
        Deng","url":"https://www.semanticscholar.org/author/35143368"},{"authorId":"1778886","name":"Na
        Helian","url":"https://www.semanticscholar.org/author/1778886"}],"doi":"10.4018/jghpc.2010092802","isInfluential":false,"paperId":"04a11a71c0ef834b11ac0d0dc98b2c6dd2c434e0","title":"Single
        Attestation Image for a Trusted and Scalable Grid","url":"https://www.semanticscholar.org/paper/04a11a71c0ef834b11ac0d0dc98b2c6dd2c434e0","venue":"IJGHPC","year":2010},{"arxivId":null,"authors":[{"authorId":"40228008","name":"Daniel
        L\u00e1zaro Iglesias","url":"https://www.semanticscholar.org/author/40228008"},{"authorId":"8022439","name":"Joan
        Manuel Marqu\u00e8s","url":"https://www.semanticscholar.org/author/8022439"},{"authorId":"32923568","name":"Josep
        Jorba Esteve","url":"https://www.semanticscholar.org/author/32923568"}],"doi":"10.1109/CISIS.2007.18","isInfluential":false,"paperId":"d6d3509a52d85f6835cc472191444c1ef0892ccb","title":"Decentralized
        Service Deployment for Collaborative Environments","url":"https://www.semanticscholar.org/paper/d6d3509a52d85f6835cc472191444c1ef0892ccb","venue":"First
        International Conference on Complex, Intelligent and Software Intensive Systems
        (CISIS''07)","year":2007},{"arxivId":null,"authors":[{"authorId":"3237897","name":"Chris
        Lesniewski-Laas","url":"https://www.semanticscholar.org/author/3237897"},{"authorId":"1681493","name":"M.
        Frans Kaashoek","url":"https://www.semanticscholar.org/author/1681493"}],"doi":null,"isInfluential":false,"paperId":"0ec7c564681c17570a0c4116c6b173c6bc0127eb","title":"Whanau:
        A Sybil-proof Distributed Hash Table","url":"https://www.semanticscholar.org/paper/0ec7c564681c17570a0c4116c6b173c6bc0127eb","venue":"NSDI","year":2010},{"arxivId":"1807.08707","authors":[{"authorId":"4054249","name":"Kaiyuan
        Wang","url":"https://www.semanticscholar.org/author/4054249"},{"authorId":"11625533","name":"Allison
        Sullivan","url":"https://www.semanticscholar.org/author/11625533"},{"authorId":"1718171","name":"Darko
        Marinov","url":"https://www.semanticscholar.org/author/1718171"},{"authorId":"1733030","name":"Sarfraz
        Khurshid","url":"https://www.semanticscholar.org/author/1733030"}],"doi":null,"isInfluential":false,"paperId":"e42195578ec8c305422c2f9ba4d409385b50e2a0","title":"Fault
        Localization for Declarative Models in Alloy","url":"https://www.semanticscholar.org/paper/e42195578ec8c305422c2f9ba4d409385b50e2a0","venue":"ArXiv","year":2018},{"arxivId":null,"authors":[{"authorId":"49273799","name":"Richard
        Price","url":"https://www.semanticscholar.org/author/49273799"},{"authorId":"2127203","name":"Lakshmish
        Ramaswamy","url":"https://www.semanticscholar.org/author/2127203"},{"authorId":"19227239","name":"Seyedamin
        Pouriyeh","url":"https://www.semanticscholar.org/author/19227239"}],"doi":"10.1109/IRI.2018.00057","isInfluential":false,"paperId":"93ca832300d548a8c5608d81d291bb2051aace78","title":"Efficient
        Processing of Range Queries over Distributed Relational Databases","url":"https://www.semanticscholar.org/paper/93ca832300d548a8c5608d81d291bb2051aace78","venue":"2018
        IEEE International Conference on Information Reuse and Integration (IRI)","year":2018},{"arxivId":null,"authors":[{"authorId":"1756078","name":"Michael
        Walfish","url":"https://www.semanticscholar.org/author/1756078"}],"doi":null,"isInfluential":false,"paperId":"5c347b26379b49f464a909bf217677475cb17dea","title":"Defending
        networked resources against floods of unwelcome requests","url":"https://www.semanticscholar.org/paper/5c347b26379b49f464a909bf217677475cb17dea","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"1706409","name":"Weimin
        He","url":"https://www.semanticscholar.org/author/1706409"},{"authorId":"1744783","name":"Teng
        Lv","url":"https://www.semanticscholar.org/author/1744783"}],"doi":null,"isInfluential":false,"paperId":"320e0a5f3b4cdf8ffad3064afb30cf2f61f98d4b","title":"Bloom
        filter-based keyword search over XML data in structured Peer-to-Peer systems","url":"https://www.semanticscholar.org/paper/320e0a5f3b4cdf8ffad3064afb30cf2f61f98d4b","venue":"2010
        3rd International Conference on Computer Science and Information Technology","year":2010},{"arxivId":null,"authors":[{"authorId":"1746877","name":"Michele
        Amoretti","url":"https://www.semanticscholar.org/author/1746877"},{"authorId":"1683040","name":"Monica
        Reggiani","url":"https://www.semanticscholar.org/author/1683040"},{"authorId":"1748366","name":"Francesco
        Zanichelli","url":"https://www.semanticscholar.org/author/1748366"},{"authorId":"47339683","name":"G
        F Conte","url":"https://www.semanticscholar.org/author/47339683"}],"doi":null,"isInfluential":false,"paperId":"041dba911b296702a703b3e141891771d3e74495","title":"SP/sup
        2/A: enabling service-oriented grids using a peer-to-peer approach","url":"https://www.semanticscholar.org/paper/041dba911b296702a703b3e141891771d3e74495","venue":"14th
        IEEE International Workshops on Enabling Technologies: Infrastructure for
        Collaborative Enterprise (WETICE''05)","year":2005},{"arxivId":null,"authors":[{"authorId":"37924291","name":"Ivan
        Beschastnikh Lisa Glendenning Arvind Krishnamurthy Anderson","url":"https://www.semanticscholar.org/author/37924291"}],"doi":null,"isInfluential":false,"paperId":"5a47bffc67b8ae4d5440405f8f0ce108e945e27d","title":"Harmony
        : Consistency at Scale","url":"https://www.semanticscholar.org/paper/5a47bffc67b8ae4d5440405f8f0ce108e945e27d","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"33795814","name":"eva
        K\u00fchn","url":"https://www.semanticscholar.org/author/33795814"},{"authorId":"1910476","name":"Richard
        Mordinyi","url":"https://www.semanticscholar.org/author/1910476"},{"authorId":"2898373","name":"Hannu-Daniel
        Goiss","url":"https://www.semanticscholar.org/author/2898373"},{"authorId":"1769397","name":"Sandford
        Bessler","url":"https://www.semanticscholar.org/author/1769397"},{"authorId":"31692780","name":"Slobodanka
        Dana Kathrin Tomic","url":"https://www.semanticscholar.org/author/31692780"}],"doi":"10.1109/ISPDC.2009.27","isInfluential":false,"paperId":"5f30b5a6db9d779be5bfb68dbe8c2d05b3dff525","title":"A
        P2P Network of Space Containers for Efficient Management of Spatial-Temporal
        Data in Intelligent Transportation Scenarios","url":"https://www.semanticscholar.org/paper/5f30b5a6db9d779be5bfb68dbe8c2d05b3dff525","venue":"2009
        Eighth International Symposium on Parallel and Distributed Computing","year":2009},{"arxivId":null,"authors":[{"authorId":"40522441","name":"Francesco
        De Pellegrini","url":"https://www.semanticscholar.org/author/40522441"},{"authorId":"1767395","name":"Iacopo
        Carreras","url":"https://www.semanticscholar.org/author/1767395"},{"authorId":"1763896","name":"Daniele
        Miorandi","url":"https://www.semanticscholar.org/author/1763896"},{"authorId":"1700194","name":"Imrich
        Chlamtac","url":"https://www.semanticscholar.org/author/1700194"},{"authorId":"1688122","name":"Corrado
        Moiso","url":"https://www.semanticscholar.org/author/1688122"}],"doi":"10.1145/1487652.1487654","isInfluential":false,"paperId":"8ad95051d84d30b3e68887e56edb7df3526a7898","title":"R-P2P:
        a data centric DTN middleware with interconnected throwboxes","url":"https://www.semanticscholar.org/paper/8ad95051d84d30b3e68887e56edb7df3526a7898","venue":"Autonomics","year":2008},{"arxivId":null,"authors":[{"authorId":"1973930","name":"Radu
        Tudoran","url":"https://www.semanticscholar.org/author/1973930"},{"authorId":"3004430","name":"Olivier
        Nano","url":"https://www.semanticscholar.org/author/3004430"},{"authorId":"34701823","name":"Ivo
        Santos","url":"https://www.semanticscholar.org/author/34701823"},{"authorId":"1726606","name":"Alexandru
        Costan","url":"https://www.semanticscholar.org/author/1726606"},{"authorId":"1881130","name":"Hakan
        Soncu","url":"https://www.semanticscholar.org/author/1881130"},{"authorId":"1718313","name":"Luc
        Boug\u00e9","url":"https://www.semanticscholar.org/author/1718313"},{"authorId":"1779139","name":"Gabriel
        Antoniu","url":"https://www.semanticscholar.org/author/1779139"}],"doi":"10.1145/2611286.2611298","isInfluential":false,"paperId":"73cbab74141f3f1d05197668ee5bf6dc3c9b9da5","title":"JetStream:
        enabling high performance event streaming across cloud data-centers","url":"https://www.semanticscholar.org/paper/73cbab74141f3f1d05197668ee5bf6dc3c9b9da5","venue":"DEBS","year":2014},{"arxivId":null,"authors":[{"authorId":"35695579","name":"Mehmet
        C. Demirci","url":"https://www.semanticscholar.org/author/35695579"}],"doi":null,"isInfluential":false,"paperId":"a4b6d34955b6c088959cb7dad7df320496dd2e1e","title":"Facilitating
        the Provision of Auxiliary Support Services for Overlay Networks","url":"https://www.semanticscholar.org/paper/a4b6d34955b6c088959cb7dad7df320496dd2e1e","venue":"","year":2013},{"arxivId":null,"authors":[{"authorId":"2208459","name":"Jan
        Finis","url":"https://www.semanticscholar.org/author/2208459"},{"authorId":"34583110","name":"Robert
        Brunel","url":"https://www.semanticscholar.org/author/34583110"},{"authorId":"1740464","name":"Alfons
        Kemper","url":"https://www.semanticscholar.org/author/1740464"},{"authorId":"1706846","name":"Thomas
        Neumann","url":"https://www.semanticscholar.org/author/1706846"},{"authorId":"1708337","name":"Franz
        F\u00e4rber","url":"https://www.semanticscholar.org/author/1708337"},{"authorId":"1766564","name":"Norman
        May","url":"https://www.semanticscholar.org/author/1766564"}],"doi":"10.1145/2463676.2465329","isInfluential":true,"paperId":"65ea0a29fb1948b8f49cf365f1ec2808541c0738","title":"DeltaNI:
        an efficient labeling scheme for versioned hierarchical data","url":"https://www.semanticscholar.org/paper/65ea0a29fb1948b8f49cf365f1ec2808541c0738","venue":"SIGMOD
        Conference","year":2013},{"arxivId":null,"authors":[{"authorId":"48362048","name":"Amir
        Nahir","url":"https://www.semanticscholar.org/author/48362048"}],"doi":null,"isInfluential":false,"paperId":"09ad19778e206e60bc5d86f2e4052dd8ef2a8261","title":"Design
        and Management of Complex Distributed Systems : Optimization and Game-Theoretic
        Perspectives","url":"https://www.semanticscholar.org/paper/09ad19778e206e60bc5d86f2e4052dd8ef2a8261","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"2209975","name":"Claudio
        Gennaro","url":"https://www.semanticscholar.org/author/2209975"},{"authorId":"1715724","name":"Matteo
        Mordacchini","url":"https://www.semanticscholar.org/author/1715724"},{"authorId":"1702082","name":"Salvatore
        Orlando","url":"https://www.semanticscholar.org/author/1702082"},{"authorId":"3187322","name":"Fausto
        Rabitti","url":"https://www.semanticscholar.org/author/3187322"}],"doi":null,"isInfluential":false,"paperId":"b079aa715b6ec150a661765d4f4e14303bbf8355","title":"MRoute
        : A Peer-to-Peer Routing Index for Similarity Search in Metric Spaces ?","url":"https://www.semanticscholar.org/paper/b079aa715b6ec150a661765d4f4e14303bbf8355","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":null,"name":"R.
        Denneman","url":null}],"doi":null,"isInfluential":false,"paperId":"eeaab62d04ff650d2a6e3e5abf40925681b87922","title":"P
        2 P searching methods , research issues , solutions and their comparison","url":"https://www.semanticscholar.org/paper/eeaab62d04ff650d2a6e3e5abf40925681b87922","venue":"","year":null},{"arxivId":null,"authors":[{"authorId":"3073955","name":"Stephen
        Naicken","url":"https://www.semanticscholar.org/author/3073955"},{"authorId":"40365944","name":"Anirban
        Basu","url":"https://www.semanticscholar.org/author/40365944"},{"authorId":"28067601","name":"B.
        Livingston","url":"https://www.semanticscholar.org/author/28067601"},{"authorId":"1943098","name":"S.
        Rodhetbhai","url":"https://www.semanticscholar.org/author/1943098"}],"doi":null,"isInfluential":true,"paperId":"46fc28dd19ced3cbb75f93005a76aa8a5a522176","title":"A
        Survey of Peer-to-Peer Network Simulators","url":"https://www.semanticscholar.org/paper/46fc28dd19ced3cbb75f93005a76aa8a5a522176","venue":"","year":2006},{"arxivId":null,"authors":[{"authorId":"27573489","name":"Jouni
        M\u00e4enp\u00e4\u00e4","url":"https://www.semanticscholar.org/author/27573489"},{"authorId":"2200172","name":"Veera
        Andersson","url":"https://www.semanticscholar.org/author/2200172"},{"authorId":"3277963","name":"Gonzalo
        Camarillo","url":"https://www.semanticscholar.org/author/3277963"},{"authorId":"2066433","name":"Ari
        Ker\u00e4nen","url":"https://www.semanticscholar.org/author/2066433"}],"doi":"10.1109/GLOCOM.2010.5683295","isInfluential":true,"paperId":"62830253510a2a4c8a8790f55f0a1a30c6857a74","title":"Impact
        of Network Address Translator Traversal on Delays in Peer-to-Peer Session
        Initiation Protocol","url":"https://www.semanticscholar.org/paper/62830253510a2a4c8a8790f55f0a1a30c6857a74","venue":"2010
        IEEE Global Telecommunications Conference GLOBECOM 2010","year":2010},{"arxivId":null,"authors":[{"authorId":"1703324","name":"Lea
        Kissner","url":"https://www.semanticscholar.org/author/1703324"}],"doi":null,"isInfluential":false,"paperId":"4265aae04d9298de65dadd0f4c94dc14bf43524b","title":"Privacy-Preserving
        Distributed Information Sharing","url":"https://www.semanticscholar.org/paper/4265aae04d9298de65dadd0f4c94dc14bf43524b","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"46395033","name":"Yuehua
        Wang","url":"https://www.semanticscholar.org/author/46395033"},{"authorId":"1685610","name":"Ling
        Liu","url":"https://www.semanticscholar.org/author/1685610"},{"authorId":"1682055","name":"Calton
        Pu","url":"https://www.semanticscholar.org/author/1682055"},{"authorId":"17294285","name":"Gong
        Zhang","url":"https://www.semanticscholar.org/author/17294285"}],"doi":null,"isInfluential":false,"paperId":"854b0b496be372c82be0d96b70def5d4c73b100a","title":"GeoCast
        : An Efficient Overlay System for Multicast Applications","url":"https://www.semanticscholar.org/paper/854b0b496be372c82be0d96b70def5d4c73b100a","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"2088273","name":"Georgios
        Smaragdakis","url":"https://www.semanticscholar.org/author/2088273"},{"authorId":"1683137","name":"Nikolaos
        Laoutaris","url":"https://www.semanticscholar.org/author/1683137"},{"authorId":"3108793","name":"Vassilis
        Lekakis","url":"https://www.semanticscholar.org/author/3108793"},{"authorId":"1718213","name":"Azer
        Bestavros","url":"https://www.semanticscholar.org/author/1718213"},{"authorId":"1687432","name":"John
        W. Byers","url":"https://www.semanticscholar.org/author/1687432"},{"authorId":"1703382","name":"Mema
        Roussopoulos","url":"https://www.semanticscholar.org/author/1703382"}],"doi":"10.1109/TNET.2011.2129528","isInfluential":true,"paperId":"3f3bcf09ee4452d1f19528b427d69d052046c0fc","title":"Selfish
        Overlay Network Creation and Maintenance","url":"https://www.semanticscholar.org/paper/3f3bcf09ee4452d1f19528b427d69d052046c0fc","venue":"IEEE/ACM
        Transactions on Networking","year":2011},{"arxivId":null,"authors":[{"authorId":"2168285","name":"Elias
        C. Efstathiou","url":"https://www.semanticscholar.org/author/2168285"},{"authorId":"1720651","name":"George
        C. Polyzos","url":"https://www.semanticscholar.org/author/1720651"}],"doi":"10.1145/941326.941329","isInfluential":false,"paperId":"8a40e0574a6ae7409cb090662e68b3405ccb99e0","title":"A
        peer-to-peer approach to wireless LAN roaming","url":"https://www.semanticscholar.org/paper/8a40e0574a6ae7409cb090662e68b3405ccb99e0","venue":"WMASH","year":2003},{"arxivId":null,"authors":[{"authorId":"34181824","name":"Eghbal
        Heidari","url":"https://www.semanticscholar.org/author/34181824"},{"authorId":"2031122","name":"Alexander
        Gladisch","url":"https://www.semanticscholar.org/author/2031122"},{"authorId":"1690930","name":"Behzad
        Moshiri","url":"https://www.semanticscholar.org/author/1690930"},{"authorId":"1783690","name":"Djamshid
        Tavangarian","url":"https://www.semanticscholar.org/author/1783690"}],"doi":"10.1007/s11276-013-0666-x","isInfluential":false,"paperId":"59b9e1262cbaba3141fb166df0fa4862c7c7e107","title":"Survey
        on location information services for Vehicular Communication Networks","url":"https://www.semanticscholar.org/paper/59b9e1262cbaba3141fb166df0fa4862c7c7e107","venue":"Wireless
        Networks","year":2014},{"arxivId":null,"authors":[{"authorId":"2106027","name":"Valerio
        Schiavoni","url":"https://www.semanticscholar.org/author/2106027"},{"authorId":"2633361","name":"Etienne
        Rivi\u00e8re","url":"https://www.semanticscholar.org/author/2633361"},{"authorId":"1743906","name":"Pascal
        Felber","url":"https://www.semanticscholar.org/author/1743906"}],"doi":"10.1007/978-3-642-45065-5_4","isInfluential":true,"paperId":"40eef9500567bb866ac7cc9667f494147b1b4b65","title":"SplayNet:
        Distributed User-Space Topology Emulation","url":"https://www.semanticscholar.org/paper/40eef9500567bb866ac7cc9667f494147b1b4b65","venue":"Middleware","year":2013},{"arxivId":null,"authors":[{"authorId":"3457258","name":"Wenjun
        Xiao","url":"https://www.semanticscholar.org/author/3457258"},{"authorId":"2792745","name":"Wenhong
        Wei","url":"https://www.semanticscholar.org/author/2792745"}],"doi":null,"isInfluential":false,"paperId":"9a948e4f9b310443cbd803eedda3dd1d6ea7968e","title":"EBu:
        A Novel P2P Overlay Network","url":"https://www.semanticscholar.org/paper/9a948e4f9b310443cbd803eedda3dd1d6ea7968e","venue":"2008
        First International Conference on Intelligent Networks and Intelligent Systems","year":2008},{"arxivId":null,"authors":[{"authorId":"35829321","name":"Christoph
        Sommer","url":"https://www.semanticscholar.org/author/35829321"}],"doi":null,"isInfluential":false,"paperId":"aa2e4673cb2cc5a9b19c989f6f4daa516247a706","title":"Chapter
        12 : Information Dissemination in Vehicular Networks","url":"https://www.semanticscholar.org/paper/aa2e4673cb2cc5a9b19c989f6f4daa516247a706","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1715724","name":"Matteo
        Mordacchini","url":"https://www.semanticscholar.org/author/1715724"},{"authorId":"28053030","name":"Laura
        Ricci","url":"https://www.semanticscholar.org/author/28053030"},{"authorId":"30856543","name":"Luca
        Ferrucci","url":"https://www.semanticscholar.org/author/30856543"},{"authorId":"1766551","name":"Michele
        Albano","url":"https://www.semanticscholar.org/author/1766551"},{"authorId":"1705270","name":"Ranieri
        Baraglia","url":"https://www.semanticscholar.org/author/1705270"}],"doi":"10.1109/P2P.2010.5569973","isInfluential":false,"paperId":"d0caac2a14ca2105b640984b22883e483b4f1f84","title":"Hivory:
        Range Queries on Hierarchical Voronoi Overlays","url":"https://www.semanticscholar.org/paper/d0caac2a14ca2105b640984b22883e483b4f1f84","venue":"2010
        IEEE Tenth International Conference on Peer-to-Peer Computing (P2P)","year":2010},{"arxivId":null,"authors":[{"authorId":"47597915","name":"Yasuhiro
        Ando","url":"https://www.semanticscholar.org/author/47597915"},{"authorId":"2014515","name":"Hiroya
        Nagao","url":"https://www.semanticscholar.org/author/2014515"},{"authorId":"2399720","name":"Takehiro
        Miyao","url":"https://www.semanticscholar.org/author/2399720"},{"authorId":"1856020","name":"Kazuyuki
        Shudo","url":"https://www.semanticscholar.org/author/1856020"}],"doi":"10.1109/P2P.2014.6934308","isInfluential":false,"paperId":"5451b2ad80b34bf3d06deacf71d1a5216891faee","title":"Routing
        table construction method solely based on query flows for structured overlays","url":"https://www.semanticscholar.org/paper/5451b2ad80b34bf3d06deacf71d1a5216891faee","venue":"14-th
        IEEE International Conference on Peer-to-Peer Computing","year":2014},{"arxivId":null,"authors":[{"authorId":"2895139","name":"Bogdan
        Mocanu","url":"https://www.semanticscholar.org/author/2895139"},{"authorId":"1690772","name":"Florin
        Pop","url":"https://www.semanticscholar.org/author/1690772"},{"authorId":"48217387","name":"Alexandra
        Mihaita Mocanu","url":"https://www.semanticscholar.org/author/48217387"},{"authorId":"1720126","name":"Ciprian
        Dobre","url":"https://www.semanticscholar.org/author/1720126"},{"authorId":"1733437","name":"Valentin
        Cristea","url":"https://www.semanticscholar.org/author/1733437"}],"doi":"10.1109/3PGCIC.2015.121","isInfluential":true,"paperId":"370da57ef99abd25e75c7d7d05544148dcf94005","title":"SPIDER:
        A Bio-inspired Structured Peer-to-Peer Overlay for Data Dissemination","url":"https://www.semanticscholar.org/paper/370da57ef99abd25e75c7d7d05544148dcf94005","venue":"2015
        10th International Conference on P2P, Parallel, Grid, Cloud and Internet Computing
        (3PGCIC)","year":2015},{"arxivId":null,"authors":[{"authorId":"2574412","name":"Sameh
        El-Ansary","url":"https://www.semanticscholar.org/author/2574412"},{"authorId":"1797978","name":"Erik
        Aurell","url":"https://www.semanticscholar.org/author/1797978"},{"authorId":"1694607","name":"Seif
        Haridi","url":"https://www.semanticscholar.org/author/1694607"}],"doi":null,"isInfluential":false,"paperId":"95fc2908ee3198501ddd2948925ff9b5a88790dc","title":"A
        Physics-Inspired Performance Evaluation of a Structured Peer-to-Peer Overlay
        Network","url":"https://www.semanticscholar.org/paper/95fc2908ee3198501ddd2948925ff9b5a88790dc","venue":"Parallel
        and Distributed Computing and Networks","year":2005},{"arxivId":null,"authors":[{"authorId":"3192779","name":"Seungtaek
        Oh","url":"https://www.semanticscholar.org/author/3192779"},{"authorId":"46182979","name":"Jin-Soo
        Kim","url":"https://www.semanticscholar.org/author/46182979"},{"authorId":"2116148","name":"Ki-Sok
        Kong","url":"https://www.semanticscholar.org/author/2116148"},{"authorId":"6064655","name":"Joonwon
        Lee","url":"https://www.semanticscholar.org/author/6064655"}],"doi":"10.1109/TCE.2005.1510501","isInfluential":false,"paperId":"b0afb5926f90bbcc63df25d53f9eed8f04fe2818","title":"Closed
        P2P system for PVR-based file sharing","url":"https://www.semanticscholar.org/paper/b0afb5926f90bbcc63df25d53f9eed8f04fe2818","venue":"IEEE
        Transactions on Consumer Electronics","year":2005},{"arxivId":"1608.01350","authors":[{"authorId":"1728881","name":"Vahab
        S. Mirrokni","url":"https://www.semanticscholar.org/author/1728881"},{"authorId":"1695440","name":"Mikkel
        Thorup","url":"https://www.semanticscholar.org/author/1695440"},{"authorId":"1724391","name":"Morteza
        Zadimoghaddam","url":"https://www.semanticscholar.org/author/1724391"}],"doi":"10.1137/1.9781611975031.39","isInfluential":false,"paperId":"73e8c44c1281cf55ee3e7b5ed4d89e7108c1c6f2","title":"Consistent
        Hashing with Bounded Loads","url":"https://www.semanticscholar.org/paper/73e8c44c1281cf55ee3e7b5ed4d89e7108c1c6f2","venue":"SODA","year":2018},{"arxivId":null,"authors":[{"authorId":"4604062","name":"Rolf
        Jenni","url":"https://www.semanticscholar.org/author/4604062"},{"authorId":null,"name":"Dr.
        T. Pandikumar","url":null},{"authorId":"3664498","name":"Girija Aiswarya","url":"https://www.semanticscholar.org/author/3664498"}],"doi":null,"isInfluential":false,"paperId":"f26b70f7f26fa49d41fa5de21d845e0f41b6a8c0","title":"An
        Efficient approach of Integrated file Replication and Consistency Maintenance
        In peer-to-peer systems","url":"https://www.semanticscholar.org/paper/f26b70f7f26fa49d41fa5de21d845e0f41b6a8c0","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"3438955","name":"Sarra
        Cherbal","url":"https://www.semanticscholar.org/author/3438955"},{"authorId":"3095467","name":"Abdellah
        Boukerram","url":"https://www.semanticscholar.org/author/3095467"},{"authorId":"1967138","name":"Abdelhak
        Boubetra","url":"https://www.semanticscholar.org/author/1967138"}],"doi":"10.1002/dac.3285","isInfluential":false,"paperId":"a011db36c536a3813bc6124549dd7fddd2e3be04","title":"RepMChord:
        A novel replication approach for mobile Chord with reduced traffic overhead","url":"https://www.semanticscholar.org/paper/a011db36c536a3813bc6124549dd7fddd2e3be04","venue":"Int.
        J. Communication Systems","year":2017},{"arxivId":null,"authors":[{"authorId":"2628008","name":"Varun
        Sekhri","url":"https://www.semanticscholar.org/author/2628008"},{"authorId":"37376558","name":"Rohit
        Gupta","url":"https://www.semanticscholar.org/author/37376558"},{"authorId":"1683734","name":"Arun
        K. Somani","url":"https://www.semanticscholar.org/author/1683734"}],"doi":"10.1109/ICBN.2005.1589697","isInfluential":true,"paperId":"c8995e60d2c46c6779074920049ef2e49f9c4d51","title":"CompuP2P:
        a light-weight architecture for Internet computing","url":"https://www.semanticscholar.org/paper/c8995e60d2c46c6779074920049ef2e49f9c4d51","venue":"2nd
        International Conference on Broadband Networks, 2005.","year":2005},{"arxivId":null,"authors":[{"authorId":"1963357","name":"Paraskevi
        Raftopoulou","url":"https://www.semanticscholar.org/author/1963357"}],"doi":null,"isInfluential":false,"paperId":"31612c22ccc52ec6e91fab9262ad5873b4e36a8b","title":"Rewiring
        Peer Connections over Semantic Overlay Networks","url":"https://www.semanticscholar.org/paper/31612c22ccc52ec6e91fab9262ad5873b4e36a8b","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"1850461","name":"Zhenqi
        Wang","url":"https://www.semanticscholar.org/author/1850461"},{"authorId":"49995080","name":"Yuanyuan
        Hu","url":"https://www.semanticscholar.org/author/49995080"}],"doi":null,"isInfluential":false,"paperId":"c27cf7cd33560e384a55667d9b42aa113c2d533b","title":"A
        P2P Network Based Architecture for Web Service","url":"https://www.semanticscholar.org/paper/c27cf7cd33560e384a55667d9b42aa113c2d533b","venue":"2007
        International Conference on Wireless Communications, Networking and Mobile
        Computing","year":2007},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"1719551","name":"Cheng-Zhong
        Xu","url":"https://www.semanticscholar.org/author/1719551"}],"doi":"10.1016/j.jpdc.2007.10.005","isInfluential":true,"paperId":"2f0e8e638f02984700ae3fbc33fae6cc7b0b318c","title":"Hash-based
        proximity clustering for efficient load balancing in heterogeneous DHT networks","url":"https://www.semanticscholar.org/paper/2f0e8e638f02984700ae3fbc33fae6cc7b0b318c","venue":"J.
        Parallel Distrib. Comput.","year":2008},{"arxivId":null,"authors":[{"authorId":"40570542","name":"Lu
        Liu","url":"https://www.semanticscholar.org/author/40570542"},{"authorId":"1720015","name":"Jie
        Xu","url":"https://www.semanticscholar.org/author/1720015"},{"authorId":"50447307","name":"Duncan
        Russell","url":"https://www.semanticscholar.org/author/50447307"},{"authorId":"1683960","name":"Zongyang
        Luo","url":"https://www.semanticscholar.org/author/1683960"}],"doi":null,"isInfluential":false,"paperId":"f0bbec1898b868da66625503935d5269019c78f8","title":"Evolution
        of Social Models in Peer-to-Peer Networking: Towards Self-Organising Networks","url":"https://www.semanticscholar.org/paper/f0bbec1898b868da66625503935d5269019c78f8","venue":"2009
        Sixth International Conference on Fuzzy Systems and Knowledge Discovery","year":2009},{"arxivId":null,"authors":[{"authorId":"3011966","name":"Rida
        Khatoun","url":"https://www.semanticscholar.org/author/3011966"},{"authorId":"1786578","name":"Guillaume
        Doyen","url":"https://www.semanticscholar.org/author/1786578"},{"authorId":"1799229","name":"Dominique
        Ga\u00efti","url":"https://www.semanticscholar.org/author/1799229"},{"authorId":"36352609","name":"Radwane
        Saad","url":"https://www.semanticscholar.org/author/36352609"},{"authorId":"2718710","name":"Ahmed
        Serhrouchni","url":"https://www.semanticscholar.org/author/2718710"}],"doi":"10.1109/NTMS.2008.ECP.36","isInfluential":false,"paperId":"e6bb6dfe09fd84a81e90216e94fc74d563c7935e","title":"Decentralized
        Alerts Correlation Approach for DDoS Intrusion Detection","url":"https://www.semanticscholar.org/paper/e6bb6dfe09fd84a81e90216e94fc74d563c7935e","venue":"2008
        New Technologies, Mobility and Security","year":2008},{"arxivId":null,"authors":[{"authorId":"39237071","name":"Qiang
        Wang","url":"https://www.semanticscholar.org/author/39237071"}],"doi":null,"isInfluential":true,"paperId":"3cc86970abd0faa244a87f76f1c6876143817cbb","title":"Efficient
        Index-based Processing of Join Queries in DHTs","url":"https://www.semanticscholar.org/paper/3cc86970abd0faa244a87f76f1c6876143817cbb","venue":"","year":2008},{"arxivId":null,"authors":[{"authorId":"7759944","name":"Oguz
        Kaan Onbilger","url":"https://www.semanticscholar.org/author/7759944"}],"doi":null,"isInfluential":false,"paperId":"2e2608c372df248da638aeca67f67ba5549914a7","title":"A
        COMPUTATION PARADIGM FOR MULTIPLE MOBILE AGENT SYSTEMS By OGUZ KAAN ONBILGER
        A DISSERTATION PRESENTED TO THE GRADUATE SCHOOL OF THE UNIVERSITY OF FLORIDA
        IN PARTIAL FULFILLMENT OF THE REQUIREMENTS FOR THE DEGREE OF DOCTOR OF PHILOSOPHY
        UNIVERSITY OF FLORIDA","url":"https://www.semanticscholar.org/paper/2e2608c372df248da638aeca67f67ba5549914a7","venue":"","year":2004},{"arxivId":null,"authors":[{"authorId":"33803164","name":"Micka\u00ebl
        Royer","url":"https://www.semanticscholar.org/author/33803164"}],"doi":null,"isInfluential":false,"paperId":"a6397134ad7c032acb9982058704d86453606d6c","title":"Routage
        bas\u00e9 sur le contenu dans les r\u00e9seaux ad-hoc a\u00e9ronautiques.
        (Content based routing in aeronautical ad-hoc networks)","url":"https://www.semanticscholar.org/paper/a6397134ad7c032acb9982058704d86453606d6c","venue":"","year":2016},{"arxivId":null,"authors":[{"authorId":"46495434","name":"Zhao
        Yun","url":"https://www.semanticscholar.org/author/46495434"},{"authorId":"9434734","name":"Si
        Huayou","url":"https://www.semanticscholar.org/author/9434734"},{"authorId":"9317861","name":"Qi
        Hengnian","url":"https://www.semanticscholar.org/author/9317861"},{"authorId":"9246260","name":"Ni
        Yulin","url":"https://www.semanticscholar.org/author/9246260"}],"doi":null,"isInfluential":true,"paperId":"70ef7fb962b7cdb4ab35282dc0e29554d7759149","title":"An
        approach to discover semantic web services in distributed environment based
        on Chord","url":"https://www.semanticscholar.org/paper/70ef7fb962b7cdb4ab35282dc0e29554d7759149","venue":"2010
        IEEE International Conference on Intelligent Systems and Knowledge Engineering","year":2010},{"arxivId":null,"authors":[{"authorId":"7436428","name":"Guanghua
        Song","url":"https://www.semanticscholar.org/author/7436428"},{"authorId":"3088252","name":"Bowei
        Yang","url":"https://www.semanticscholar.org/author/3088252"},{"authorId":"50062041","name":"Zhixing
        Wu","url":"https://www.semanticscholar.org/author/50062041"},{"authorId":"12579708","name":"Junna
        Chuai","url":"https://www.semanticscholar.org/author/12579708"},{"authorId":"2662070","name":"Yao
        Zheng","url":"https://www.semanticscholar.org/author/2662070"}],"doi":"10.1007/s11227-013-0878-y","isInfluential":false,"paperId":"dd5ac85a9eafea9cd831cc0a7d29e7693e5084a4","title":"ROIN:
        reputation-oriented inverted indexing for the P2P network","url":"https://www.semanticscholar.org/paper/dd5ac85a9eafea9cd831cc0a7d29e7693e5084a4","venue":"The
        Journal of Supercomputing","year":2013},{"arxivId":null,"authors":[{"authorId":null,"name":"Steven
        Gerding","url":null},{"authorId":"1753174","name":"Jeremy Stribling","url":"https://www.semanticscholar.org/author/1753174"}],"doi":null,"isInfluential":true,"paperId":"290bc7ce4a91bed11810665629be43a63f96bbde","title":"Examining
        the Tradeoffs of Structured Overlays in a Dynamic Non-Transitive Network","url":"https://www.semanticscholar.org/paper/290bc7ce4a91bed11810665629be43a63f96bbde","venue":"","year":2003},{"arxivId":null,"authors":[{"authorId":"1742121","name":"Hongbin
        Luo","url":"https://www.semanticscholar.org/author/1742121"},{"authorId":"40259922","name":"Hongke
        Zhang","url":"https://www.semanticscholar.org/author/40259922"},{"authorId":"2969329","name":"Yajuan
        Qin","url":"https://www.semanticscholar.org/author/2969329"},{"authorId":"3598400","name":"Victor
        C. M. Leung","url":"https://www.semanticscholar.org/author/3598400"}],"doi":"10.1109/TNSM.2011.071511.20100063","isInfluential":true,"paperId":"6e669ab7011fee870af4954956c876b488f2a9f5","title":"An
        Approach for Building Scalable Proxy Mobile IPv6 Domains","url":"https://www.semanticscholar.org/paper/6e669ab7011fee870af4954956c876b488f2a9f5","venue":"IEEE
        Transactions on Network and Service Management","year":2011},{"arxivId":null,"authors":[{"authorId":"49846476","name":"Bo
        Zhang","url":"https://www.semanticscholar.org/author/49846476"},{"authorId":"1729107","name":"Binoy
        Ravindran","url":"https://www.semanticscholar.org/author/1729107"}],"doi":null,"isInfluential":false,"paperId":"24935b1979f234b1f16d6f9dde4a974fc5405bd0","title":"On
        the Design of Contention Managers and Cache-Coherence Protocols for Distributed
        Transactional Memory","url":"https://www.semanticscholar.org/paper/24935b1979f234b1f16d6f9dde4a974fc5405bd0","venue":"","year":2009},{"arxivId":null,"authors":[{"authorId":"49347024","name":"Qiwei
        Zhang","url":"https://www.semanticscholar.org/author/49347024"},{"authorId":"1907018","name":"Jiang-Ming
        Yang","url":"https://www.semanticscholar.org/author/1907018"},{"authorId":"1729673","name":"Ning
        Gu","url":"https://www.semanticscholar.org/author/1729673"},{"authorId":"1780835","name":"Yuwei
        Zong","url":"https://www.semanticscholar.org/author/1780835"},{"authorId":"1795098","name":"Zhigang
        Ding","url":"https://www.semanticscholar.org/author/1795098"},{"authorId":"7671296","name":"Shaohua
        Zhang","url":"https://www.semanticscholar.org/author/7671296"}],"doi":"10.1109/CIT.2006.84","isInfluential":false,"paperId":"309c506b49f3640e271197400e423c42cd5dc742","title":"Dynamic
        Replica Location Service Supporting Data Grid Systems","url":"https://www.semanticscholar.org/paper/309c506b49f3640e271197400e423c42cd5dc742","venue":"The
        Sixth IEEE International Conference on Computer and Information Technology
        (CIT''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"38565890","name":"Ali
        Ghodsi","url":"https://www.semanticscholar.org/author/38565890"},{"authorId":"1694607","name":"Seif
        Haridi","url":"https://www.semanticscholar.org/author/1694607"},{"authorId":"1712689","name":"Hakim
        Weatherspoon","url":"https://www.semanticscholar.org/author/1712689"}],"doi":"10.1145/1317379.1317389","isInfluential":false,"paperId":"4d1b3fdfba474080204c788829e5d717cffca3d8","title":"Exploiting
        the synergy between gossiping and structured overlays","url":"https://www.semanticscholar.org/paper/4d1b3fdfba474080204c788829e5d717cffca3d8","venue":"Operating
        Systems Review","year":2007},{"arxivId":null,"authors":[{"authorId":"1697347","name":"Sean
        F. Lawlor","url":"https://www.semanticscholar.org/author/1697347"},{"authorId":"46660791","name":"Patrick
        Diez","url":"https://www.semanticscholar.org/author/46660791"},{"authorId":"1701344","name":"Frank
        P. Ferrie","url":"https://www.semanticscholar.org/author/1701344"}],"doi":"10.1109/CCECE.2012.6334883","isInfluential":true,"paperId":"3a566a2e52b5e882a6d57935270c2cf79cd8bcc8","title":"Real-time
        distributed computing: ChoPS","url":"https://www.semanticscholar.org/paper/3a566a2e52b5e882a6d57935270c2cf79cd8bcc8","venue":"2012
        25th IEEE Canadian Conference on Electrical and Computer Engineering (CCECE)","year":2012},{"arxivId":null,"authors":[{"authorId":"39157636","name":"Daniel
        Adkins","url":"https://www.semanticscholar.org/author/39157636"},{"authorId":"1920780","name":"Karthik
        Lakshminarayanan","url":"https://www.semanticscholar.org/author/1920780"},{"authorId":"1688974","name":"Adrian
        Perrig","url":"https://www.semanticscholar.org/author/1688974"},{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"}],"doi":null,"isInfluential":false,"paperId":"55c565b94c3f518a85e15d8ede9dccbe6f25abd7","title":"Towards
        a More Functional and Secure Network Infrastructure","url":"https://www.semanticscholar.org/paper/55c565b94c3f518a85e15d8ede9dccbe6f25abd7","venue":"","year":2003},{"arxivId":null,"authors":[{"authorId":"1696934","name":"Roberto
        Baldoni","url":"https://www.semanticscholar.org/author/1696934"},{"authorId":"1970469","name":"Silvia
        Bonomi","url":"https://www.semanticscholar.org/author/1970469"},{"authorId":"2231654","name":"Adriano
        Cerocchi","url":"https://www.semanticscholar.org/author/2231654"},{"authorId":"1775963","name":"Leonardo
        Querzoni","url":"https://www.semanticscholar.org/author/1775963"}],"doi":"10.1016/j.jpdc.2013.03.017","isInfluential":true,"paperId":"a44ec1f48f7b9958f5c158ff6be931f15d44954b","title":"Virtual
        Tree: A robust architecture for interval valid queries in dynamic distributed
        systems","url":"https://www.semanticscholar.org/paper/a44ec1f48f7b9958f5c158ff6be931f15d44954b","venue":"J.
        Parallel Distrib. Comput.","year":2013},{"arxivId":null,"authors":[{"authorId":"46761645","name":"Vinod
        Muthusamy","url":"https://www.semanticscholar.org/author/46761645"},{"authorId":"1738552","name":"Hans-Arno
        Jacobsen","url":"https://www.semanticscholar.org/author/1738552"}],"doi":null,"isInfluential":false,"paperId":"fcad87d2bc2655a52202a18bf6ba034e40616944","title":"Infrastructure-less
        Content-Based Publish / Subscribe","url":"https://www.semanticscholar.org/paper/fcad87d2bc2655a52202a18bf6ba034e40616944","venue":"","year":2007},{"arxivId":null,"authors":[{"authorId":"9101082","name":"Nao
        Chen","url":"https://www.semanticscholar.org/author/9101082"},{"authorId":"37254976","name":"Ruimin
        Hu","url":"https://www.semanticscholar.org/author/37254976"},{"authorId":"2012812","name":"Yongqiong
        Zhu","url":"https://www.semanticscholar.org/author/2012812"},{"authorId":"50218328","name":"Zhaopin
        Wang","url":"https://www.semanticscholar.org/author/50218328"}],"doi":null,"isInfluential":false,"paperId":"a1580b928745370ab43cc40dbf7a44f742b36a9a","title":"Constructing
        fixed-ratio superpeer-based overlay","url":"https://www.semanticscholar.org/paper/a1580b928745370ab43cc40dbf7a44f742b36a9a","venue":"2010
        3rd International Conference on Computer Science and Information Technology","year":2010},{"arxivId":null,"authors":[{"authorId":"2170948","name":"Lorenzo
        Leonini","url":"https://www.semanticscholar.org/author/2170948"},{"authorId":"2633361","name":"Etienne
        Rivi\u00e8re","url":"https://www.semanticscholar.org/author/2633361"},{"authorId":"1743906","name":"Pascal
        Felber","url":"https://www.semanticscholar.org/author/1743906"}],"doi":null,"isInfluential":true,"paperId":"3fc1c96b9c1baa801fb5ef867d23824f08b18418","title":"SPLAY:
        Distributed Systems Evaluation Made Simple (or How to Turn Ideas into Live
        Systems in a Breeze)","url":"https://www.semanticscholar.org/paper/3fc1c96b9c1baa801fb5ef867d23824f08b18418","venue":"NSDI","year":2009},{"arxivId":"1109.1134","authors":[{"authorId":"2513755","name":"Anis
        Ismail","url":"https://www.semanticscholar.org/author/2513755"},{"authorId":"2968886","name":"Aziz
        Barbar","url":"https://www.semanticscholar.org/author/2968886"},{"authorId":"2275207","name":"Ziad
        Ismail","url":"https://www.semanticscholar.org/author/2275207"}],"doi":null,"isInfluential":false,"paperId":"a978ec50bfb0708ecbcf98d0cca465b9b668fd57","title":"P2P
        Simulator for Queries Routing using Data Mining","url":"https://www.semanticscholar.org/paper/a978ec50bfb0708ecbcf98d0cca465b9b668fd57","venue":"ArXiv","year":2011},{"arxivId":null,"authors":[{"authorId":"35768469","name":"Gil
        David","url":"https://www.semanticscholar.org/author/35768469"},{"authorId":"14423593","name":"Kola
        Srujana","url":"https://www.semanticscholar.org/author/14423593"}],"doi":null,"isInfluential":false,"paperId":"650b340dd6f6b8ed0bead2f5a169392a034cf413","title":"A
        Novel Approach of Node Clone Detection in Wireless Sensor Networks","url":"https://www.semanticscholar.org/paper/650b340dd6f6b8ed0bead2f5a169392a034cf413","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"1680084","name":"Isaac
        Woungang","url":"https://www.semanticscholar.org/author/1680084"},{"authorId":"1993132","name":"Fan-Hsun
        Tseng","url":"https://www.semanticscholar.org/author/1993132"},{"authorId":"49415985","name":"Yi-Hsuan
        Lin","url":"https://www.semanticscholar.org/author/49415985"},{"authorId":"2011013","name":"Li-Der
        Chou","url":"https://www.semanticscholar.org/author/2011013"},{"authorId":"1742169","name":"Han-Chieh
        Chao","url":"https://www.semanticscholar.org/author/1742169"},{"authorId":"1747075","name":"Mohammad
        S. Obaidat","url":"https://www.semanticscholar.org/author/1747075"}],"doi":"10.1109/JSYST.2014.2306147","isInfluential":true,"paperId":"e15e8f17300255c8ce95258f4fb2df58365ce82f","title":"MR-Chord:
        Improved Chord Lookup Performance in Structured Mobile P2P Networks","url":"https://www.semanticscholar.org/paper/e15e8f17300255c8ce95258f4fb2df58365ce82f","venue":"IEEE
        Systems Journal","year":2015},{"arxivId":null,"authors":[{"authorId":"1756078","name":"Michael
        Walfish","url":"https://www.semanticscholar.org/author/1756078"},{"authorId":"3380269","name":"J.
        D. Zamfirescu","url":"https://www.semanticscholar.org/author/3380269"},{"authorId":"1712771","name":"Hari
        Balakrishnan","url":"https://www.semanticscholar.org/author/1712771"},{"authorId":"1743286","name":"David
        R. Karger","url":"https://www.semanticscholar.org/author/1743286"},{"authorId":"1753148","name":"Scott
        Shenker","url":"https://www.semanticscholar.org/author/1753148"}],"doi":null,"isInfluential":false,"paperId":"316ac7a2e88d10271a951c2c273f40d3c75e54df","title":"Distributed
        Quota Enforcement for Spam Control","url":"https://www.semanticscholar.org/paper/316ac7a2e88d10271a951c2c273f40d3c75e54df","venue":"NSDI","year":2006},{"arxivId":null,"authors":[{"authorId":"38333181","name":"Silvio
        Sampaio","url":"https://www.semanticscholar.org/author/38333181"}],"doi":null,"isInfluential":false,"paperId":"9def031eccc95944c803c79914b5e749c619148a","title":"DHT-based
        Cluster Routing Protocol ( DCRP ) : A Scalable Path Selection and Forwarding
        Protocol for IEEE 802 . 11 s Mesh Networks","url":"https://www.semanticscholar.org/paper/9def031eccc95944c803c79914b5e749c619148a","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"1719793","name":"Zhijun
        Li","url":"https://www.semanticscholar.org/author/1719793"}],"doi":null,"isInfluential":true,"paperId":"a820217ef00df7b5ac5e450b9a6d2ef3910cc5c9","title":"Efficient
        Authentication, Node Clone Detection, and Secure Data Aggregation for Sensor
        Networks","url":"https://www.semanticscholar.org/paper/a820217ef00df7b5ac5e450b9a6d2ef3910cc5c9","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"1957774","name":"John
        Risson","url":"https://www.semanticscholar.org/author/1957774"},{"authorId":"2009990","name":"Tim
        Moors","url":"https://www.semanticscholar.org/author/2009990"}],"doi":"10.17487/RFC4981","isInfluential":true,"paperId":"546297f29891483c3c34d0358a7bb56f8323ecce","title":"Survey
        of Research towards Robust Peer-to-Peer Networks: Search Methods","url":"https://www.semanticscholar.org/paper/546297f29891483c3c34d0358a7bb56f8323ecce","venue":"RFC","year":2007},{"arxivId":null,"authors":[{"authorId":"31015196","name":"K.
        Sathyalakshmi","url":"https://www.semanticscholar.org/author/31015196"},{"authorId":"2224096","name":"Milagros
        Fern\u00e1ndez","url":"https://www.semanticscholar.org/author/2224096"}],"doi":null,"isInfluential":false,"paperId":"a96e731249bda859d8f8d795aaa5b1ae992f6ae8","title":"An
        innovative performance analysis of multi attribute DHT queries in resource
        discovery by H-LORM techniques","url":"https://www.semanticscholar.org/paper/a96e731249bda859d8f8d795aaa5b1ae992f6ae8","venue":"2016
        International Conference on Emerging Trends in Engineering, Technology and
        Science (ICETETS)","year":2016},{"arxivId":null,"authors":[{"authorId":"7520913","name":"Changqiao
        Xu","url":"https://www.semanticscholar.org/author/7520913"},{"authorId":"1891427","name":"Futao
        Zhao","url":"https://www.semanticscholar.org/author/1891427"},{"authorId":"7444129","name":"Jianfeng
        Guan","url":"https://www.semanticscholar.org/author/7444129"},{"authorId":"40259922","name":"Hongke
        Zhang","url":"https://www.semanticscholar.org/author/40259922"},{"authorId":"1742225","name":"Gabriel-Miro
        Muntean","url":"https://www.semanticscholar.org/author/1742225"}],"doi":"10.1109/TVT.2012.2228682","isInfluential":true,"paperId":"2e53da11383a3b5f443ae8bef4832eac05440557","title":"QoE-Driven
        User-Centric VoD Services in Urban Multihomed P2P-Based Vehicular Networks","url":"https://www.semanticscholar.org/paper/2e53da11383a3b5f443ae8bef4832eac05440557","venue":"IEEE
        Transactions on Vehicular Technology","year":2013},{"arxivId":null,"authors":[{"authorId":"39339753","name":"Manuel
        Rodr\u00edguez-Mart\u00ednez","url":"https://www.semanticscholar.org/author/39339753"},{"authorId":"33424661","name":"Elfred
        Pagan","url":"https://www.semanticscholar.org/author/33424661"},{"authorId":"1862734","name":"Pedro
        I. Rivera-Vega","url":"https://www.semanticscholar.org/author/1862734"},{"authorId":"2360601","name":"Omar
        G. Rodr\u00edguez-Mart\u00ednez","url":"https://www.semanticscholar.org/author/2360601"},{"authorId":"2568042","name":"Maritere
        Mart\u00ednez-Montes","url":"https://www.semanticscholar.org/author/2568042"},{"authorId":"37609977","name":"Jos\u00e9
        R. Arzuaga","url":"https://www.semanticscholar.org/author/37609977"},{"authorId":"36935851","name":"Michael
        Rodr\u00edguez","url":"https://www.semanticscholar.org/author/36935851"}],"doi":"10.1109/RIDE.2004.1281711","isInfluential":true,"paperId":"9b4c445d18b17a46598b067ffae6757a5bfb844f","title":"Smart
        Mirrors: peer-to-peer Web services for publishing electronic documents","url":"https://www.semanticscholar.org/paper/9b4c445d18b17a46598b067ffae6757a5bfb844f","venue":"14th
        International Workshop Research Issues on Data Engineering: Web Services for
        e-Commerce and e-Government Applications, 2004. Proceedings.","year":2004},{"arxivId":null,"authors":[{"authorId":"2554481","name":"Codrut
        Grosu","url":"https://www.semanticscholar.org/author/2554481"},{"authorId":"1708736","name":"Eliana-Dina
        Tirsa","url":"https://www.semanticscholar.org/author/1708736"},{"authorId":"1720126","name":"Ciprian
        Dobre","url":"https://www.semanticscholar.org/author/1720126"},{"authorId":"1733437","name":"Valentin
        Cristea","url":"https://www.semanticscholar.org/author/1733437"},{"authorId":"1692713","name":"Mugurel
        Ionut Andreica","url":"https://www.semanticscholar.org/author/1692713"}],"doi":"10.1109/ISPDC.2011.34","isInfluential":true,"paperId":"97ebd341e42fce23cd885224466768a9032d8f54","title":"Scalable
        Chord-Based, Cluster-Enhanced Peer-to-Peer Architecture Supporting Range Queries","url":"https://www.semanticscholar.org/paper/97ebd341e42fce23cd885224466768a9032d8f54","venue":"2011
        10th International Symposium on Parallel and Distributed Computing","year":2011},{"arxivId":null,"authors":[{"authorId":"1808982","name":"Georgios
        Exarchakos","url":"https://www.semanticscholar.org/author/1808982"},{"authorId":"1805514","name":"Nick
        Antonopoulos","url":"https://www.semanticscholar.org/author/1805514"}],"doi":"10.1007/s10922-007-9069-6","isInfluential":true,"paperId":"581996ed25cdabfcda51b02b91ee5c557e02ebdc","title":"Resource
        Sharing Architecture For Cooperative Heterogeneous P2P Overlays","url":"https://www.semanticscholar.org/paper/581996ed25cdabfcda51b02b91ee5c557e02ebdc","venue":"Journal
        of Network and Systems Management","year":2007},{"arxivId":null,"authors":[{"authorId":"40701017","name":"Nicolas
        Hidalgo","url":"https://www.semanticscholar.org/author/40701017"},{"authorId":"2544041","name":"Erika
        Rosas","url":"https://www.semanticscholar.org/author/2544041"},{"authorId":"1806183","name":"Luciana
        Arantes","url":"https://www.semanticscholar.org/author/1806183"},{"authorId":"40154530","name":"Olivier
        Marin","url":"https://www.semanticscholar.org/author/40154530"},{"authorId":"1798389","name":"Pierre
        Sens","url":"https://www.semanticscholar.org/author/1798389"},{"authorId":"1997152","name":"Xavier
        Bonnaire","url":"https://www.semanticscholar.org/author/1997152"}],"doi":"10.1109/CIT.2011.100","isInfluential":true,"paperId":"28e5ca8b88e41a5d8e2c1f4dc92a0764fd001808","title":"DRing:
        A Layered Scheme for Range Queries over DHTs","url":"https://www.semanticscholar.org/paper/28e5ca8b88e41a5d8e2c1f4dc92a0764fd001808","venue":"2011
        IEEE 11th International Conference on Computer and Information Technology","year":2011},{"arxivId":null,"authors":[{"authorId":null,"name":"Mr.
        Ashutosh Kamble","url":null},{"authorId":null,"name":"Prof. Deepak Kapgate","url":null}],"doi":null,"isInfluential":false,"paperId":"144b83c465069525a183efa0c7e22f7978632d0b","title":"Effective
        Concept of Implementing Secure DIBS using Query Segmentation","url":"https://www.semanticscholar.org/paper/144b83c465069525a183efa0c7e22f7978632d0b","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"2555685","name":"Bogdan
        Nicolae","url":"https://www.semanticscholar.org/author/2555685"}],"doi":null,"isInfluential":false,"paperId":"30b9c99238544860efc9d9bc7791e515d5d662ef","title":"BlobSeer:
        Towards efficient data storage management for large-scale, distributed systems","url":"https://www.semanticscholar.org/paper/30b9c99238544860efc9d9bc7791e515d5d662ef","venue":"","year":2010},{"arxivId":null,"authors":[{"authorId":"37479562","name":"Guang
        Tan","url":"https://www.semanticscholar.org/author/37479562"},{"authorId":"1690561","name":"Stephen
        A. Jarvis","url":"https://www.semanticscholar.org/author/1690561"}],"doi":"10.1109/ICPP.2006.51","isInfluential":true,"paperId":"39962d1dd3eabda40f8678b74e4bcb353884f26c","title":"Inter-Overlay
        Cooperation in High-Bandwidth Overlay Multicast","url":"https://www.semanticscholar.org/paper/39962d1dd3eabda40f8678b74e4bcb353884f26c","venue":"2006
        International Conference on Parallel Processing (ICPP''06)","year":2006},{"arxivId":null,"authors":[{"authorId":"47463133","name":"Mihai-Dorin
        Istin","url":"https://www.semanticscholar.org/author/47463133"},{"authorId":"2592464","name":"Andreea
        Visan","url":"https://www.semanticscholar.org/author/2592464"},{"authorId":"1690772","name":"Florin
        Pop","url":"https://www.semanticscholar.org/author/1690772"},{"authorId":"1733437","name":"Valentin
        Cristea","url":"https://www.semanticscholar.org/author/1733437"}],"doi":"10.1109/3PGCIC.2010.61","isInfluential":false,"paperId":"e0d0a52433f646888343d8267cf7a7a02245663e","title":"SOPSys:
        Self-Organizing Decentralized Peer-to-Peer System Based on Well Balanced Multi-Way
        Trees","url":"https://www.semanticscholar.org/paper/e0d0a52433f646888343d8267cf7a7a02245663e","venue":"2010
        International Conference on P2P, Parallel, Grid, Cloud and Internet Computing","year":2010},{"arxivId":null,"authors":[{"authorId":"40029726","name":"Jiang
        Zhou","url":"https://www.semanticscholar.org/author/40029726"},{"authorId":"46520743","name":"Wei
        Xie","url":"https://www.semanticscholar.org/author/46520743"},{"authorId":"1804772","name":"Qiang
        Gu","url":"https://www.semanticscholar.org/author/1804772"},{"authorId":"12650108","name":"Yong
        P Chen","url":"https://www.semanticscholar.org/author/12650108"}],"doi":"10.1109/TrustCom.2016.0247","isInfluential":false,"paperId":"f67cabcb3d00c313c107503858d556871e76db81","title":"Hierarchical
        Consistent Hashing for Heterogeneous Object-Based Storage","url":"https://www.semanticscholar.org/paper/f67cabcb3d00c313c107503858d556871e76db81","venue":"2016
        IEEE Trustcom/BigDataSE/ISPA","year":2016},{"arxivId":null,"authors":[{"authorId":null,"name":"J
        Litiya","url":null},{"authorId":"49126505","name":"Murugesan Senthilkumar","url":"https://www.semanticscholar.org/author/49126505"}],"doi":null,"isInfluential":true,"paperId":"04db779eb0757987c44ddd5dddf18c74997a07dd","title":"Dynamic
        Resource Allocation for Distributed Systems in Clouds Using Load Rebalancing","url":"https://www.semanticscholar.org/paper/04db779eb0757987c44ddd5dddf18c74997a07dd","venue":"","year":2015},{"arxivId":null,"authors":[{"authorId":"2766794","name":"Tomoya
        Kawakami","url":"https://www.semanticscholar.org/author/2766794"},{"authorId":"2761997","name":"Yoshimasa
        Ishi","url":"https://www.semanticscholar.org/author/2761997"},{"authorId":"2261468","name":"Tomoki
        Yoshihisa","url":"https://www.semanticscholar.org/author/2261468"},{"authorId":"39550577","name":"Yuuichi
        Teranishi","url":"https://www.semanticscholar.org/author/39550577"}],"doi":"10.1109/COMPSACW.2014.121","isInfluential":false,"paperId":"f8af5b4f85fc20e1967881916b51636625000f36","title":"A
        Load Distribution Method Based on Distributed Hashing for P2P Sensor Data
        Stream Delivery System","url":"https://www.semanticscholar.org/paper/f8af5b4f85fc20e1967881916b51636625000f36","venue":"2014
        IEEE 38th International Computer Software and Applications Conference Workshops","year":2014},{"arxivId":null,"authors":[{"authorId":"2370043","name":"Cristina
        Rottondi","url":"https://www.semanticscholar.org/author/2370043"},{"authorId":"3104139","name":"Giacomo
        Verticale","url":"https://www.semanticscholar.org/author/3104139"},{"authorId":"2931894","name":"Christoph
        Krau\u00df","url":"https://www.semanticscholar.org/author/2931894"}],"doi":"10.1109/ICC.2013.6655270","isInfluential":false,"paperId":"f00f6dc51299e17065382a8d014a8ae8af272a32","title":"Secure
        distributed data aggregation in the automatic metering infrastructure of smart
        grids","url":"https://www.semanticscholar.org/paper/f00f6dc51299e17065382a8d014a8ae8af272a32","venue":"2013
        IEEE International Conference on Communications (ICC)","year":2013},{"arxivId":null,"authors":[{"authorId":"31259576","name":"G\u00e9rald
        Oster","url":"https://www.semanticscholar.org/author/31259576"},{"authorId":"1700452","name":"Rub\u00e9n
        Mond\u00e9jar","url":"https://www.semanticscholar.org/author/1700452"},{"authorId":"3025899","name":"Pascal
        Molli","url":"https://www.semanticscholar.org/author/3025899"},{"authorId":"2192027","name":"Sergiu
        Dumitriu","url":"https://www.semanticscholar.org/author/2192027"}],"doi":"10.1016/j.comnet.2010.03.019","isInfluential":false,"paperId":"6d6e8500ec27e9fe715356ae40ca329f347be4e4","title":"Building
        a collaborative peer-to-peer wiki system on a structured overlay","url":"https://www.semanticscholar.org/paper/6d6e8500ec27e9fe715356ae40ca329f347be4e4","venue":"Computer
        Networks","year":2010},{"arxivId":null,"authors":[{"authorId":"1773337","name":"Jedrzej
        Rybicki","url":"https://www.semanticscholar.org/author/1773337"}],"doi":null,"isInfluential":false,"paperId":"6b30b8c08bfaf46f682f10a723844f074fdcf1a4","title":"Kooperative
        Peer-to-Peer-basierte Verkehrsinformationssysteme","url":"https://www.semanticscholar.org/paper/6b30b8c08bfaf46f682f10a723844f074fdcf1a4","venue":"","year":2011},{"arxivId":null,"authors":[{"authorId":null,"name":"Zied
        Trifaa","url":null},{"authorId":null,"name":"Maher Khemakhemb","url":null}],"doi":null,"isInfluential":true,"paperId":"50d1577b9e1c5c89687297a75208e6f1f1e8a29a","title":"Effects
        of Churn on Structured P 2 P Overlay Networks","url":"https://www.semanticscholar.org/paper/50d1577b9e1c5c89687297a75208e6f1f1e8a29a","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"37217705","name":"Haiying
        Shen","url":"https://www.semanticscholar.org/author/37217705"},{"authorId":"1719551","name":"Cheng-Zhong
        Xu","url":"https://www.semanticscholar.org/author/1719551"},{"authorId":"34421345","name":"Guihai
        Chen","url":"https://www.semanticscholar.org/author/34421345"}],"doi":"10.1016/j.peva.2005.01.004","isInfluential":false,"paperId":"10248b1fa74ce90c1c83b788dd10b5cea6618d6e","title":"Cycloid:
        a constant-degree and lookup-efficient P2P overlay network","url":"https://www.semanticscholar.org/paper/10248b1fa74ce90c1c83b788dd10b5cea6618d6e","venue":"18th
        International Parallel and Distributed Processing Symposium, 2004. Proceedings.","year":2004},{"arxivId":null,"authors":[{"authorId":"38406155","name":"Ian
        Chang-Yen","url":"https://www.semanticscholar.org/author/38406155"},{"authorId":"1716922","name":"Nian-Feng
        Tzeng","url":"https://www.semanticscholar.org/author/1716922"}],"doi":"10.1109/NCA.2012.47","isInfluential":false,"paperId":"cfe97ab55db0cb3231305b77d911852c5fc23cab","title":"Deploying
        Virtual Clusters through P2P-based Content Distribution","url":"https://www.semanticscholar.org/paper/cfe97ab55db0cb3231305b77d911852c5fc23cab","venue":"2012
        IEEE 11th International Symposium on Network Computing and Applications","year":2012},{"arxivId":null,"authors":[{"authorId":"10831165","name":"Mohammed
        Al-Mahfoudh","url":"https://www.semanticscholar.org/author/10831165"},{"authorId":"1724910","name":"Ganesh
        Gopalakrishnan","url":"https://www.semanticscholar.org/author/1724910"},{"authorId":"3087426","name":"Ryan
        Stutsman","url":"https://www.semanticscholar.org/author/3087426"}],"doi":"10.1145/2897667.2897674","isInfluential":false,"paperId":"578caad90d6192df334b6ca174db54b51a4e222d","title":"Toward
        Rigorous Design of Domain-Specific Distributed Systems","url":"https://www.semanticscholar.org/paper/578caad90d6192df334b6ca174db54b51a4e222d","venue":"2016
        IEEE/ACM 4th FME Workshop on Formal Methods in Software Engineering (FormaliSE)","year":2016},{"arxivId":null,"authors":[{"authorId":"3269316","name":"Tyson
        Condie","url":"https://www.semanticscholar.org/author/3269316"},{"authorId":"1695576","name":"Joseph
        M. Hellerstein","url":"https://www.semanticscholar.org/author/1695576"},{"authorId":"2286904","name":"Petros
        Maniatis","url":"https://www.semanticscholar.org/author/2286904"},{"authorId":"38717292","name":"Sean
        Rhea","url":"https://www.semanticscholar.org/author/38717292"},{"authorId":"1734886","name":"Timothy
        Roscoe","url":"https://www.semanticscholar.org/author/1734886"}],"doi":"10.1145/1095810.1118617","isInfluential":false,"paperId":"64af46bdec659090c2f88990755f2296cc3334d9","title":"A
        need for componentized transport protocols","url":"https://www.semanticscholar.org/paper/64af46bdec659090c2f88990755f2296cc3334d9","venue":"SOSP
        ''05","year":2005},{"arxivId":null,"authors":[{"authorId":"2532380","name":"Abdul
        Khalique Shaikh","url":"https://www.semanticscholar.org/author/2532380"},{"authorId":"2107088","name":"Saadat
        M. Alhashmi","url":"https://www.semanticscholar.org/author/2107088"},{"authorId":"3243800","name":"Rajendran
        Parthiban","url":"https://www.semanticscholar.org/author/3243800"}],"doi":"10.1109/ICPADS.2011.12","isInfluential":false,"paperId":"e69159ccb6075344769439f0d7894524f712bb68","title":"A
        Semantic Decentralized Chord-Based Resource Discovery Model for Grid Computing","url":"https://www.semanticscholar.org/paper/e69159ccb6075344769439f0d7894524f712bb68","venue":"2011
        IEEE 17th International Conference on Parallel and Distributed Systems","year":2011},{"arxivId":null,"authors":[{"authorId":"36278268","name":"Sourish
        Dasgupta","url":"https://www.semanticscholar.org/author/36278268"},{"authorId":"34297669","name":"Satish
        Bhat","url":"https://www.semanticscholar.org/author/34297669"},{"authorId":"1787659","name":"Yugyung
        Lee","url":"https://www.semanticscholar.org/author/1787659"}],"doi":"10.1145/1871437.1871687","isInfluential":false,"paperId":"df498ccfc585c82b3708e97d7fe9a0349a1e805d","title":"Taxonomic
        clustering of web service for efficient discovery","url":"https://www.semanticscholar.org/paper/df498ccfc585c82b3708e97d7fe9a0349a1e805d","venue":"CIKM","year":2010},{"arxivId":null,"authors":[{"authorId":"3128221","name":"Zakwan
        Al-Arnaout","url":"https://www.semanticscholar.org/author/3128221"},{"authorId":"48889507","name":"Qiang
        Fu","url":"https://www.semanticscholar.org/author/48889507"},{"authorId":"40073871","name":"Marcus
        Frean","url":"https://www.semanticscholar.org/author/40073871"}],"doi":"10.1145/2507924.2507928","isInfluential":true,"paperId":"b962f81eaa86e46d7d22c7b22c557a9b9f0356b9","title":"Exploiting
        graph partitioning for hierarchical replica placement in WMNs","url":"https://www.semanticscholar.org/paper/b962f81eaa86e46d7d22c7b22c557a9b9f0356b9","venue":"MSWiM","year":2013},{"arxivId":null,"authors":[{"authorId":"2370755","name":"Atsushi
        Takeda","url":"https://www.semanticscholar.org/author/2370755"},{"authorId":"34412776","name":"Takuma
        Oide","url":"https://www.semanticscholar.org/author/34412776"},{"authorId":"1691389","name":"Akiko
        Takahashi","url":"https://www.semanticscholar.org/author/1691389"}],"doi":"10.1109/WAINA.2011.120","isInfluential":true,"paperId":"19b1f748bf6b289750c09e02fe4d26615eb2c30a","title":"New
        Structured P2P Network with Dynamic Load Balancing Scheme","url":"https://www.semanticscholar.org/paper/19b1f748bf6b289750c09e02fe4d26615eb2c30a","venue":"2011
        IEEE Workshops of International Conference on Advanced Information Networking
        and Applications","year":2011},{"arxivId":null,"authors":[{"authorId":"2362173","name":"Yasin
        Celik","url":"https://www.semanticscholar.org/author/2362173"},{"authorId":"12730615","name":"Aakash
        Pradeep","url":"https://www.semanticscholar.org/author/12730615"},{"authorId":"1981941","name":"Justin
        Y. Shi","url":"https://www.semanticscholar.org/author/1981941"}],"doi":"10.1109/CIT/IUCC/DASC/PICOM.2015.298","isInfluential":false,"paperId":"1ab455443ac6b558162c09eec4304507f95af6c6","title":"AnkaCom:
        A Development and Experiment for Extreme Scale Computing","url":"https://www.semanticscholar.org/paper/1ab455443ac6b558162c09eec4304507f95af6c6","venue":"2015
        IEEE International Conference on Computer and Information Technology; Ubiquitous
        Computing and Communications; Dependable, Autonomic and Secure Computing;
        Pervasive Intelligence and Computing","year":2015},{"arxivId":null,"authors":[{"authorId":null,"name":"Lirong
        LINa","url":null},{"authorId":null,"name":"Tadashi MIYOSAWAb","url":null},{"authorId":null,"name":"Hiroo
        HIROSEb","url":null}],"doi":null,"isInfluential":false,"paperId":"020d8d497e616ea769d1fb26ddc5703145602665","title":"Improving
        Routing Load Balance on Chord","url":"https://www.semanticscholar.org/paper/020d8d497e616ea769d1fb26ddc5703145602665","venue":"","year":2014},{"arxivId":null,"authors":[{"authorId":"3338571","name":"Simon
        Courtenage","url":"https://www.semanticscholar.org/author/3338571"},{"authorId":"48392596","name":"Steven
        Williams","url":"https://www.semanticscholar.org/author/48392596"}],"doi":null,"isInfluential":false,"paperId":"3042fc1a1221cc6b5d01fc6972da8da1f4f06075","title":"FWEB
        : Automatic Hyperlink Creation Using Peer-to-Peer Web Servers","url":"https://www.semanticscholar.org/paper/3042fc1a1221cc6b5d01fc6972da8da1f4f06075","venue":"","year":2005},{"arxivId":null,"authors":[{"authorId":"30721371","name":"Siddhartha
        Sen","url":"https://www.semanticscholar.org/author/30721371"},{"authorId":"1855395","name":"Jacob
        R. Lorch","url":"https://www.semanticscholar.org/author/1855395"},{"authorId":"1868785","name":"Richard
        Hughes","url":"https://www.semanticscholar.org/author/1868785"},{"authorId":"47472026","name":"Carlos
        Egea Garc\u00eda","url":"https://www.semanticscholar.org/author/47472026"},{"authorId":"2202333","name":"Brian
        Zill","url":"https://www.semanticscholar.org/author/2202333"},{"authorId":"2370467","name":"Weverton
        Cordeiro","url":"https://www.semanticscholar.org/author/2370467"},{"authorId":"1695132","name":"Jitendra
        Padhye","url":"https://www.semanticscholar.org/author/1695132"}],"doi":null,"isInfluential":false,"paperId":"85da98794fd606fd7878e186486c020e2b89fdf5","title":"GreenUp
        : A Decentralized System for Making Sleeping Machines Available","url":"https://www.semanticscholar.org/paper/85da98794fd606fd7878e186486c020e2b89fdf5","venue":"","year":2012},{"arxivId":null,"authors":[{"authorId":"46233993","name":"Joseph
        Stalin","url":"https://www.semanticscholar.org/author/46233993"},{"authorId":"30087011","name":"R.
        Kanniga Devi","url":"https://www.semanticscholar.org/author/30087011"}],"doi":null,"isInfluential":false,"paperId":"6e10693638e73dc84ac58c7af6cda28384eb5bdd","title":"An
        efficient autoscaling of Hadoop clusters in public cloud","url":"https://www.semanticscholar.org/paper/6e10693638e73dc84ac58c7af6cda28384eb5bdd","venue":"2015
        Global Conference on Communication Technologies (GCCT)","year":2015}],"doi":"10.1109/TNET.2002.808407","influentialCitationCount":487,"paperId":"29bf354b8f15966deac7a00a1b4899cba47bb25d","references":[{"arxivId":null,"authors":[{"authorId":"1691055","name":"C.
        Greg Plaxton","url":"https://www.semanticscholar.org/author/1691055"},{"authorId":"1696669","name":"Rajmohan
        Rajaraman","url":"https://www.semanticscholar.org/author/1696669"},{"authorId":"1761306","name":"Andr\u00e9a
        W. Richa","url":"https://www.semanticscholar.org/author/1761306"}],"doi":"10.1007/s002240000118","isInfluential":false,"paperId":"ad691d7d99afb5b63d745695c070ab70427d9f41","title":"Accessing
        Nearby Copies of Replicated Objects in a Distributed Environment","url":"https://www.semanticscholar.org/paper/ad691d7d99afb5b63d745695c070ab70427d9f41","venue":"Theory
        of Computing Systems","year":1999},{"arxivId":null,"authors":[{"authorId":"1720563","name":"Frank
        Dabek","url":"https://www.semanticscholar.org/author/1720563"},{"authorId":"1681493","name":"M.
        Frans Kaashoek","url":"https://www.semanticscholar.org/author/1681493"},{"authorId":"1743286","name":"David
        R. Karger","url":"https://www.semanticscholar.org/author/1743286"},{"authorId":"2099495","name":"Robert
        Tappan Morris","url":"https://www.semanticscholar.org/author/2099495"},{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"}],"doi":"10.1145/502034.502054","isInfluential":false,"paperId":"a6fc6fe1ca5fe650eace6d39f65c3e137f67c41c","title":"Wide-Area
        Cooperative Storage with CFS","url":"https://www.semanticscholar.org/paper/a6fc6fe1ca5fe650eace6d39f65c3e137f67c41c","venue":"SOSP","year":2001},{"arxivId":null,"authors":[{"authorId":"1704058","name":"Larry
        Carter","url":"https://www.semanticscholar.org/author/1704058"},{"authorId":"36114502","name":"Mark
        N. Wegman","url":"https://www.semanticscholar.org/author/36114502"}],"doi":"10.1145/800105.803400","isInfluential":false,"paperId":"a1b9f637796f7366669f3c68dc7459596d1f7fad","title":"Universal
        Classes of Hash Functions (Extended Abstract)","url":"https://www.semanticscholar.org/paper/a1b9f637796f7366669f3c68dc7459596d1f7fad","venue":"STOC","year":1977},{"arxivId":null,"authors":[{"authorId":"8051543","name":"T.
        S. Eugene Ng","url":"https://www.semanticscholar.org/author/8051543"},{"authorId":"39280957","name":"Hui
        Zhang","url":"https://www.semanticscholar.org/author/39280957"}],"doi":"10.1145/505202.505206","isInfluential":false,"paperId":"2349d0b17424e46e60a1246828a571d881c38e65","title":"Towards
        global network positioning","url":"https://www.semanticscholar.org/paper/2349d0b17424e46e60a1246828a571d881c38e65","venue":"Internet
        Measurement Workshop","year":2001},{"arxivId":null,"authors":[{"authorId":"1716557","name":"Ion
        Stoica","url":"https://www.semanticscholar.org/author/1716557"},{"authorId":"2099495","name":"Robert
        Tappan Morris","url":"https://www.semanticscholar.org/author/2099495"},{"authorId":"1743286","name":"David
        R. Karger","url":"https://www.semanticscholar.org/author/1743286"},{"authorId":"1681493","name":"M.
        Frans Kaashoek","url":"https://www.semanticscholar.org/author/1681493"},{"authorId":"1712771","name":"Hari
        Balakrishnan","url":"https://www.semanticscholar.org/author/1712771"}],"doi":"10.1145/383059.383071","isInfluential":false,"paperId":"0368d2445d3ee4205ee73da933cb8b810a89091c","title":"Chord:
        A scalable peer-to-peer lookup service for internet applications","url":"https://www.semanticscholar.org/paper/0368d2445d3ee4205ee73da933cb8b810a89091c","venue":"SIGCOMM","year":2001},{"arxivId":null,"authors":[{"authorId":"2571410","name":"Maarten
        van Steen","url":"https://www.semanticscholar.org/author/2571410"},{"authorId":"8760331","name":"Franz
        J. Hauck","url":"https://www.semanticscholar.org/author/8760331"},{"authorId":"1723584","name":"Gerco
        Ballintijn","url":"https://www.semanticscholar.org/author/1723584"},{"authorId":"1710353","name":"Andrew
        S. Tanenbaum","url":"https://www.semanticscholar.org/author/1710353"}],"doi":"10.1093/comjnl/41.5.297","isInfluential":false,"paperId":"34cab9c34d6bd23d7d0c63be6b9d36fb0e3bca61","title":"Algorithmic
        Design of the Globe Wide-Area Location Service","url":"https://www.semanticscholar.org/paper/34cab9c34d6bd23d7d0c63be6b9d36fb0e3bca61","venue":"Comput.
        J.","year":1998},{"arxivId":null,"authors":[{"authorId":"47045708","name":"Ian
        Clarke","url":"https://www.semanticscholar.org/author/47045708"},{"authorId":"2500186","name":"Oskar
        Sandberg","url":"https://www.semanticscholar.org/author/2500186"},{"authorId":"46712918","name":"Brandon
        Wiley","url":"https://www.semanticscholar.org/author/46712918"},{"authorId":"2379343","name":"Theodore
        W. Hong","url":"https://www.semanticscholar.org/author/2379343"}],"doi":"10.1007/3-540-44702-4_4","isInfluential":false,"paperId":"11023ab66196ecf62dcba4c084c242e8fbeb7179","title":"Freenet:
        A Distributed Anonymous Information Storage and Retrieval System","url":"https://www.semanticscholar.org/paper/11023ab66196ecf62dcba4c084c242e8fbeb7179","venue":"Workshop
        on Design Issues in Anonymity and Unobservability","year":2000},{"arxivId":null,"authors":[{"authorId":"1717872","name":"John
        Kubiatowicz","url":"https://www.semanticscholar.org/author/1717872"},{"authorId":"1752264","name":"David
        Bindel","url":"https://www.semanticscholar.org/author/1752264"},{"authorId":"39773705","name":"Yan
        Chen","url":"https://www.semanticscholar.org/author/39773705"},{"authorId":"32671615","name":"Steven
        E. Czerwinski","url":"https://www.semanticscholar.org/author/32671615"},{"authorId":"2401782","name":"Patrick
        R. Eaton","url":"https://www.semanticscholar.org/author/2401782"},{"authorId":"1702217","name":"Dennis
        Geels","url":"https://www.semanticscholar.org/author/1702217"},{"authorId":"2491388","name":"Ramakrishna
        Gummadi","url":"https://www.semanticscholar.org/author/2491388"},{"authorId":"32109194","name":"Sean
        C. Rhea","url":"https://www.semanticscholar.org/author/32109194"},{"authorId":"1712689","name":"Hakim
        Weatherspoon","url":"https://www.semanticscholar.org/author/1712689"},{"authorId":"1962994","name":"Westley
        Weimer","url":"https://www.semanticscholar.org/author/1962994"},{"authorId":"38681947","name":"Chris
        Wells","url":"https://www.semanticscholar.org/author/38681947"},{"authorId":"1972108","name":"Ben
        Y. Zhao","url":"https://www.semanticscholar.org/author/1972108"}],"doi":"10.1145/378993.379239","isInfluential":false,"paperId":"766055aec95206baf51e8a165665912436d8aa9f","title":"OceanStore:
        An Architecture for Global-Scale Persistent Storage","url":"https://www.semanticscholar.org/paper/766055aec95206baf51e8a165665912436d8aa9f","venue":"ASPLOS","year":2000},{"arxivId":null,"authors":[{"authorId":"2668437","name":"David
        Liben-Nowell","url":"https://www.semanticscholar.org/author/2668437"},{"authorId":"1712771","name":"Hari
        Balakrishnan","url":"https://www.semanticscholar.org/author/1712771"},{"authorId":"1743286","name":"David
        R. Karger","url":"https://www.semanticscholar.org/author/1743286"}],"doi":"10.1007/3-540-45748-8_2","isInfluential":false,"paperId":"057f35468f8566a87fe5e16773fcff92ae03bbd8","title":"Observations
        on the Dynamic Evolution of Peer-to-Peer Networks","url":"https://www.semanticscholar.org/paper/057f35468f8566a87fe5e16773fcff92ae03bbd8","venue":"IPTPS","year":2002},{"arxivId":null,"authors":[{"authorId":"31407276","name":"Arno
        Bakker","url":"https://www.semanticscholar.org/author/31407276"},{"authorId":"49435264","name":"E.
        Amade","url":"https://www.semanticscholar.org/author/49435264"},{"authorId":"1723584","name":"Gerco
        Ballintijn","url":"https://www.semanticscholar.org/author/1723584"},{"authorId":"1764367","name":"Ihor
        Kuz","url":"https://www.semanticscholar.org/author/1764367"},{"authorId":"3291698","name":"Patrick
        Verkaik","url":"https://www.semanticscholar.org/author/3291698"},{"authorId":"2234934","name":"I.
        van der Wijk","url":"https://www.semanticscholar.org/author/2234934"},{"authorId":"2571410","name":"Maarten
        van Steen","url":"https://www.semanticscholar.org/author/2571410"},{"authorId":"1710353","name":"Andrew
        S. Tanenbaum","url":"https://www.semanticscholar.org/author/1710353"}],"doi":null,"isInfluential":false,"paperId":"15629fdcd9a6cad5d063c454659819c7eb1ee7a6","title":"The
        Globe Distribution Network","url":"https://www.semanticscholar.org/paper/15629fdcd9a6cad5d063c454659819c7eb1ee7a6","venue":"USENIX
        Annual Technical Conference, FREENIX Track","year":2000},{"arxivId":null,"authors":[{"authorId":"46276184","name":"Jinyang
        Li","url":"https://www.semanticscholar.org/author/46276184"},{"authorId":"2939154","name":"John
        Jannotti","url":"https://www.semanticscholar.org/author/2939154"},{"authorId":"2112148","name":"Douglas
        S. J. De Couto","url":"https://www.semanticscholar.org/author/2112148"},{"authorId":"1743286","name":"David
        R. Karger","url":"https://www.semanticscholar.org/author/1743286"},{"authorId":"2099495","name":"Robert
        Tappan Morris","url":"https://www.semanticscholar.org/author/2099495"}],"doi":"10.1145/345910.345931","isInfluential":false,"paperId":"32a5db95cc0d8b501517634719ce691f0ca8ff84","title":"A
        scalable location service for geographic ad hoc routing","url":"https://www.semanticscholar.org/paper/32a5db95cc0d8b501517634719ce691f0ca8ff84","venue":"MobiCom","year":2000},{"arxivId":null,"authors":[{"authorId":"46606019","name":"Antony
        Ian Taylor Rowstron","url":"https://www.semanticscholar.org/author/46606019"},{"authorId":"1736987","name":"Peter
        Druschel","url":"https://www.semanticscholar.org/author/1736987"}],"doi":null,"isInfluential":false,"paperId":"29f0a4ba7176e870ce4ab54b6b627ee7c761d890","title":"Pastry
        : Scalable , distributed object location and routing for large-scale peer-to-peer
        systems","url":"https://www.semanticscholar.org/paper/29f0a4ba7176e870ce4ab54b6b627ee7c761d890","venue":"","year":2001},{"arxivId":null,"authors":[{"authorId":"1972108","name":"Ben
        Y. Zhao","url":"https://www.semanticscholar.org/author/1972108"},{"authorId":"46589617","name":"John
        D. Kubiatowicz","url":"https://www.semanticscholar.org/author/46589617"},{"authorId":"1687701","name":"Anthony
        D. Joseph","url":"https://www.semanticscholar.org/author/1687701"}],"doi":null,"isInfluential":false,"paperId":"1ab15eb3d4e909b4923da3c711241011bfc202af","title":"Tapestry
        : An Infrastructure for Fault-tolerant Wide-area Location and Routing","url":"https://www.semanticscholar.org/paper/1ab15eb3d4e909b4923da3c711241011bfc202af","venue":"","year":2001},{"arxivId":null,"authors":[{"authorId":"1946556","name":"Sameer
        Ajmani","url":"https://www.semanticscholar.org/author/1946556"},{"authorId":"2467482","name":"Dwaine
        E. Clarke","url":"https://www.semanticscholar.org/author/2467482"},{"authorId":"2670017","name":"Chuang-Hue
        Moh","url":"https://www.semanticscholar.org/author/2670017"},{"authorId":"38642284","name":"Steven
        Richman","url":"https://www.semanticscholar.org/author/38642284"}],"doi":"10.1007/3-540-45748-8_14","isInfluential":false,"paperId":"06e0c0bf5e30d854908a98d659444a053e69cab9","title":"ConChord:
        Cooperative SDSI Certificate Storage and Name Resolution","url":"https://www.semanticscholar.org/paper/06e0c0bf5e30d854908a98d659444a053e69cab9","venue":"IPTPS","year":2002},{"arxivId":null,"authors":[{"authorId":"49070087","name":"Yuan
        Chen","url":"https://www.semanticscholar.org/author/49070087"},{"authorId":"1968477","name":"Jan
        Edler","url":"https://www.semanticscholar.org/author/1968477"},{"authorId":"2394251","name":"Andrew
        V. Goldberg","url":"https://www.semanticscholar.org/author/2394251"},{"authorId":"3800309","name":"Allan
        Gottlieb","url":"https://www.semanticscholar.org/author/3800309"},{"authorId":"1882446","name":"Sumeet
        Sobti","url":"https://www.semanticscholar.org/author/1882446"},{"authorId":"3203897","name":"Peter
        N. Yianilos","url":"https://www.semanticscholar.org/author/3203897"}],"doi":"10.1145/313238.313249","isInfluential":false,"paperId":"8821232578c1c40c0268323710985d85afdc099b","title":"A
        Prototype Implementation of Archival Intermemory","url":"https://www.semanticscholar.org/paper/8821232578c1c40c0268323710985d85afdc099b","venue":"ACM
        DL","year":1999},{"arxivId":null,"authors":[{"authorId":"49437532","name":"David","url":"https://www.semanticscholar.org/author/49437532"},{"authorId":null,"name":"Kargerl","url":null},{"authorId":null,"name":"Eric
        Lehmanl","url":null},{"authorId":null,"name":"Tom Leightonl","url":null},{"authorId":"29941049","name":"Matthew","url":"https://www.semanticscholar.org/author/29941049"},{"authorId":null,"name":"Levinel","url":null},{"authorId":"48407362","name":"Daniel","url":"https://www.semanticscholar.org/author/48407362"},{"authorId":null,"name":"Lewinl","url":null},{"authorId":null,"name":"Rina","url":null},{"authorId":null,"name":"Panigrahyl","url":null}],"doi":null,"isInfluential":false,"paperId":"638c917d981915bc7a00bb0941cdd38111df51de","title":"Consistent
        Hashing and Random Trees : Distributed Caching Protocols for Relieving Hot
        Spots on the World Wide Web *","url":"https://www.semanticscholar.org/paper/638c917d981915bc7a00bb0941cdd38111df51de","venue":"","year":1997},{"arxivId":null,"authors":[{"authorId":"1699297","name":"Sylvia
        Ratnasamy","url":"https://www.semanticscholar.org/author/1699297"},{"authorId":"2908564","name":"Paul
        Francis","url":"https://www.semanticscholar.org/author/2908564"},{"authorId":"5597426","name":"Mark
        Handley","url":"https://www.semanticscholar.org/author/5597426"},{"authorId":"1739801","name":"Richard
        M. Karp","url":"https://www.semanticscholar.org/author/1739801"},{"authorId":"1753148","name":"Scott
        Shenker","url":"https://www.semanticscholar.org/author/1753148"}],"doi":"10.1145/383059.383072","isInfluential":false,"paperId":"0eafbc4e1efb9aa8973cc061d3b9a6924ac6cce9","title":"A
        scalable content-addressable network","url":"https://www.semanticscholar.org/paper/0eafbc4e1efb9aa8973cc061d3b9a6924ac6cce9","venue":"SIGCOMM","year":2001},{"arxivId":null,"authors":[{"authorId":"1683706","name":"Rajeev
        Motwani","url":"https://www.semanticscholar.org/author/1683706"},{"authorId":"1717510","name":"Prabhakar
        Raghavan","url":"https://www.semanticscholar.org/author/1717510"}],"doi":"10.1145/234313.234327","isInfluential":false,"paperId":"08da8a69157d43362fd42a523807d824fd30cef6","title":"Randomized
        Algorithms","url":"https://www.semanticscholar.org/paper/08da8a69157d43362fd42a523807d824fd30cef6","venue":"The
        Computer Science and Engineering Handbook","year":1995}],"title":"Chord: a
        scalable peer-to-peer lookup protocol for internet applications","topics":[{"topic":"Lookup
        table","topicId":"9293","url":"https://www.semanticscholar.org/topic/9293"},{"topic":"Scalability","topicId":"1360","url":"https://www.semanticscholar.org/topic/1360"},{"topic":"Peer-to-peer","topicId":"95176","url":"https://www.semanticscholar.org/topic/95176"},{"topic":"Data
        item","topicId":"211780","url":"https://www.semanticscholar.org/topic/211780"},{"topic":"Map","topicId":"2392","url":"https://www.semanticscholar.org/topic/2392"},{"topic":"Simulation","topicId":"194","url":"https://www.semanticscholar.org/topic/194"}],"url":"https://www.semanticscholar.org/paper/29bf354b8f15966deac7a00a1b4899cba47bb25d","venue":"IEEE/ACM
        Trans. Netw.","year":2003}

'
    http_version: 
  recorded_at: Fri, 16 Nov 2018 15:43:24 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Id,Ti,AA.AuN,Y,D,F.FN,E,RId&count=50&expr=W%20==%20%27internet%27&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - NO_TOKEN
  response:
    status:
      code: 401
      message: Access Denied
    headers:
      Content-Length:
      - '198'
      Content-Type:
      - application/json
      Www-Authenticate:
      - AzureApiManagementKey realm="https://api.labs.cognitive.microsoft.com/academic/v1.0",name="Ocp-Apim-Subscription-Key",type="header"
      Date:
      - Sun, 18 Nov 2018 08:25:18 GMT
    body:
      encoding: UTF-8
      string: "\n{\"error\":{\"code\":\"Unspecified\",\"message\":\"Access denied
        due to invalid subscription key. Make sure you are subscribed to an API you
        are trying to call and provide the right key.\"}}\n                "
    http_version: 
  recorded_at: Sun, 18 Nov 2018 08:25:18 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Id,Ti,AA.AuN,Y,D,F.FN,E,RId&expr=Id=we%20cannot%20find%20a%20paper&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Content-Length:
      - '100'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Sun, 18 Nov 2018 08:25:18 GMT
    body:
      encoding: UTF-8
      string: '{"Error":{"Code":"Bad Argument","Message":"Invalid query expression\r\nParameter
        name: expression"}}'
    http_version: 
  recorded_at: Sun, 18 Nov 2018 08:25:19 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Id,Ti,AA.AuN,Y,D,F.FN,E,RId&count=50&expr=Or(W==%27internet%27)&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - "<MS_TOKEN>"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '495412'
      Content-Type:
      - application/json
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:7cd06f0e-6d73-46a5-9c10-4ebe681d0156
      X-Powered-By:
      - ASP.NET
      Date:
      - Sat, 24 Nov 2018 09:28:52 GMT
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJleHByIjoiT3IoVz09J2ludGVybmV0JykiLCJlbnRpdGllcyI6W3sibG9ncHJvYiI6LTE0LjM1Nywia2VzRW50aXR5SWQiOjIzMDUyNiwiSWQiOjIxMTg0MjgxOTMsIlRpIjoiY2hvcmQgYSBzY2FsYWJsZSBwZWVyIHRvIHBlZXIgbG9va3VwIHByb3RvY29sIGZvciBpbnRlcm5ldCBhcHBsaWNhdGlvbnMiLCJZIjoyMDAzLCJEIjoiMjAwMy0wMi0wMSIsIlJJZCI6WzIxNTgwNDk4MjEsMjE2MzA1OTE5MCwyMTY3ODk4NDE0LDE2NTA2NzU1MDksMjEwNDIxMDg5NCwyMTc0NTA3ODY5LDIxNjQxOTI3MjIsMjE0NDU1MzA3OCwyMTUwNjc2NTg2LDE2NjM0OTM2NDksMTU4NDYzNTQ1OSwyMDIwNzY1NjUyLDIwMDA4NzYwMjMsNzk5MzEwMzEsMjEyMDYyNjI5NCwyMTY4ODg2MTMxLDEwNTYwMTU5Nyw3NDQ0OTQ3MywyMDY0MzYwNTQzLDk1NDMyMTQ5LDIxMDg4MjQwMDQsMTQ5NDk0NjQ1NCwxNzI1NDE0MjA2LDY1MzUxMDk0LDE4MTU3Njk0MzQsMTUyODU0NTg5NywyMDUyMjA3ODM0LDIxNzA3NTYwMjgsMjEyNzU1NTE0MywxNzk5MzM4NDI5LDIxMjIyNjk5MjUsMjAzNTY5OTE1LDE1OTc5Njc1NDQsMjIyNzg5NTA3OV0sIkFBIjpbeyJBdU4iOiJpb24gc3RvaWNhIn0seyJBdU4iOiJyb2JlcnQgdGFwcGFuIG1vcnJpcyJ9LHsiQXVOIjoiZGF2aWQgbGliZW5ub3dlbGwifSx7IkF1TiI6ImRhdmlkIHIga2FyZ2VyIn0seyJBdU4iOiJtIGZyYW5zIGthYXNob2VrIn0seyJBdU4iOiJmcmFuayBkYWJlayJ9LHsiQXVOIjoiaGFyaSBiYWxha3Jpc2huYW4ifV0sIkYiOlt7IkZOIjoiYmF0b24gb3ZlcmxheSJ9LHsiRk4iOiJzY2FsYWJsZSBzb3VyY2Ugcm91dGluZyJ9LHsiRk4iOiJrb29yZGUifSx7IkZOIjoia2V5IGJhc2VkIHJvdXRpbmcifSx7IkZOIjoiY29udGVudCBhZGRyZXNzYWJsZSBuZXR3b3JrIn0seyJGTiI6ImNob3JkIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGhhc2ggdGFibGUifSx7IkZOIjoicGFzdHJ5In0seyJGTiI6ImNvbXB1dGVyIG5ldHdvcmsifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiQ2hvcmQ6IGEgc2NhbGFibGUgcGVlci10by1wZWVyIGxvb2t1cCBwcm90b2NvbCBmb3IgSW50ZXJuZXQgYXBwbGljYXRpb25zXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTMxLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkFcIjpbMF0sXCJmdW5kYW1lbnRhbFwiOlsxXSxcInByb2JsZW1cIjpbMl0sXCJ0aGF0XCI6WzMsMTQsMzAsMTEwXSxcImNvbmZyb250c1wiOls0XSxcInBlZXItdG8tcGVlclwiOls1XSxcImFwcGxpY2F0aW9uc1wiOls2XSxcImlzXCI6WzcsMTAwLDExMl0sXCJ0aGVcIjpbOCwxMiw0Niw3MSw3NSw3OSw5MCw5OCwxMTcsMTI2XSxcImVmZmljaWVudFwiOls5XSxcImxvY2F0aW9uXCI6WzEwLDUyXSxcIm9mXCI6WzExLDU5LDEyOF0sXCJub2RlXCI6WzEzLDc2LDEyMl0sXCJzdG9yZXNcIjpbMTVdLFwiYVwiOlsxNiwyNiw0Miw0OSw2M10sXCJkZXNpcmVkXCI6WzE3XSxcImRhdGFcIjpbMTgsNjddLFwiaXRlbS5cIjpbMTldLFwiVGhpc1wiOlsyMF0sXCJwYXBlclwiOlsyMV0sXCJwcmVzZW50c1wiOlsyMl0sXCJDaG9yZFwiOlsyNCwzNCw2MCw4MiwxMTEsMTI5XSxcIixcIjpbMjVdLFwiZGlzdHJpYnV0ZWRcIjpbMjddLFwibG9va3VwXCI6WzI4XSxcInByb3RvY29sXCI6WzI5XSxcImFkZHJlc3Nlc1wiOlszMV0sXCJ0aGlzXCI6WzMyXSxcInByb2JsZW0uXCI6WzMzXSxcInByb3ZpZGVzXCI6WzM1XSxcInN1cHBvcnRcIjpbMzZdLFwiZm9yXCI6WzM3XSxcImp1c3RcIjpbMzhdLFwib25lXCI6WzM5XSxcIm9wZXJhdGlvbjpcIjpbNDBdLFwiZ2l2ZW5cIjpbNDFdLFwia2V5LFwiOls0M10sXCJpdFwiOls0NF0sXCJtYXBzXCI6WzQ1XSxcImtleVwiOls0Nyw2NCw4MF0sXCJvbnRvXCI6WzQ4XSxcIm5vZGUuXCI6WzUwXSxcIkRhdGFcIjpbNTFdLFwiY2FuXCI6WzUzLDkzXSxcImJlXCI6WzU0XSxcImVhc2lseVwiOls1NV0sXCJpbXBsZW1lbnRlZFwiOls1Nl0sXCJvblwiOls1N10sXCJ0b3BcIjpbNThdLFwiYnlcIjpbNjEsMTIwXSxcImFzc29jaWF0aW5nXCI6WzYyXSxcIndpdGhcIjpbNjUsMTI1XSxcImVhY2hcIjpbNjYsMTIxXSxcIml0ZW0sXCI6WzY4XSxcImFuZFwiOls2OSw4OCw5MiwxMDcsMTE2XSxcInN0b3JpbmdcIjpbNzBdLFwia2V5L2RhdGFcIjpbNzJdLFwicGFpclwiOls3M10sXCJhdFwiOls3NF0sXCJ0b1wiOls3N10sXCJ3aGljaFwiOls3OF0sXCJtYXBzLlwiOls4MV0sXCJhZGFwdHNcIjpbODNdLFwiZWZmaWNpZW50bHlcIjpbODRdLFwiYXNcIjpbODVdLFwibm9kZXNcIjpbODZdLFwiam9pblwiOls4N10sXCJsZWF2ZVwiOls4OV0sXCJzeXN0ZW0sXCI6WzkxXSxcImFuc3dlclwiOls5NF0sXCJxdWVyaWVzXCI6Wzk1XSxcImV2ZW5cIjpbOTZdLFwiaWZcIjpbOTddLFwic3lzdGVtXCI6Wzk5XSxcImNvbnRpbnVvdXNseVwiOlsxMDFdLFwiY2hhbmdpbmcuXCI6WzEwMl0sXCJSZXN1bHRzXCI6WzEwM10sXCJmcm9tXCI6WzEwNF0sXCJ0aGVvcmV0aWNhbFwiOlsxMDVdLFwiYW5hbHlzaXNcIjpbMTA2XSxcInNpbXVsYXRpb25zXCI6WzEwOF0sXCJzaG93XCI6WzEwOV0sXCJzY2FsYWJsZTpcIjpbMTEzXSxcIkNvbW11bmljYXRpb25cIjpbMTE0XSxcImNvc3RcIjpbMTE1XSxcInN0YXRlXCI6WzExOF0sXCJtYWludGFpbmVkXCI6WzExOV0sXCJzY2FsZVwiOlsxMjNdLFwibG9nYXJpdGhtaWNhbGx5XCI6WzEyNF0sXCJudW1iZXJcIjpbMTI3XSxcIm5vZGVzLlwiOlsxMzBdfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9ubXMuY3NhaWwubWl0LmVkdS9wYXBlcnMvY2hvcmQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MudWNjcy5lZHUvfmNzNjIyL3BhcGVycy8wMTE4MDU0My5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2NvdXJzZXMuY3NlLnRhbXUuZWR1L2NhdmVybGVlL2NzY2U0MzgvcmVhZGluZ3MvY2hvcmQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MucnV0Z2Vycy5lZHUvfnJtYXJ0aW4vdGVhY2hpbmcvZmFsbDA0L2NzNTUyL3JlYWRpbmdzL3N0bzAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL2NzLnV3YXRlcmxvby5jYS9+dG96c3UvY291cnNlcy9jczg1Ni9XMDUvUHJlc2VudGF0aW9ucy9OYWJlZWwucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MucHJpbmNldG9uLmVkdS9jb3Vyc2VzL2FyY2hpdmUvc3ByaW5nMTMvY29zNTk4Qy9wMTQ5LXN0b2ljYS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2ZhYy1zdGFmZi5zZWF0dGxldS5lZHUvemh1eS93ZWIvdGVhY2hpbmcvU3ByaW5nMDgvY3NzZTQ5Mi9QMlAvcDJwX2Nob3JkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY3J5c3RhbC51dGEuZWR1L35tY2d1aWdhbi9jc2U2MzUwL3BhcGVycy9DaG9yZC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cuY3Muc3dhcnRobW9yZS5lZHUvfmt3ZWJiL2NzOTEvZjE0L3BhcGVycy9TdG9pY2FfQ2hvcmQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuaWMudW5pY2FtcC5ici9+Y2VsaW8vcGVlcjJwZWVyL2Nob3JkL2Nob3JkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzbC5tdHUuZWR1L2NzNjQ2MS93d3cvUmVhZGluZy9TdG9pY2EwMy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cuY3NlLmlpdGIuYWMuaW4vfmNzNjQxL3JlZmVyZW5jZXMvMDYtY2hvcmQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3NlLnNjdS5lZHUvfmpob2xsaWRheS9DT0VOMzE3UzA1L2Nob3JkX3R6bS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jc2UuYnVmZmFsby5lZHUvfm9rZW5uZWR5L2NvdXJzZXMvcGFwZXJzL2Nob3JkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnVuYy5lZHUvfmphc2xlZW4vQ291cnNlcy9DT01QNjMxL3BhcGVycy9jaG9yZC10b24ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY29sdW1iaWEuZWR1L35uaWVoL3RlYWNoaW5nL2U2MTE4X3MwMi9wYXBlcnMvMl8xOV9zdG9pY2EucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jb3Vyc2VzLmNzLnZ0LmVkdS9jczUyMDQvZmFsbDEyLWthZnVyYS9QYXBlcnMvRmlsZVN5c3RlbXMvQ2hvcmQuU0lHQ09NTTAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmNtdS5lZHUvfnNyaW5pLzE1LTc0NC9GMDkvcGFwZXJzL3AxMi1zdG9pY2EucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3NkLnV3by5jYS9mYWN1bHR5L2hhbmFuL2NzODQyL3BhcGVycy9jaG9yZC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2NzZS5zZXUuZWR1LmNuL1BlcnNvbmFsUGFnZS96aGNob25nL3B1YmxpYy9SZWFkaW5nTGlzdC8wLiUyMFN0YXJ0aW5nLzMuJTIwQ29tcHV0YXRpb24lMjBNb2RlbC1QMlAucGRmXCJ9XSxcIlZGTlwiOlwiSUVFRSBBQ00gVHJhbnNhY3Rpb25zIG9uIE5ldHdvcmtpbmdcIixcIlZcIjoxMSxcIklcIjoxLFwiRlBcIjoxNyxcIkxQXCI6MzIsXCJET0lcIjpcIjEwLjExMDkvVE5FVC4yMDAyLjgwODQwN1wiLFwiQ0NcIjp7XCI2NTM1MTA5NFwiOltcIkFyY2hpdmFsIEludGVybWVtb3J5IHVzZXMgYW4gb2ZmLWxpbmUgY29tcHV0ZWQgdHJlZSB0byBtYXAgbG9naWNhbCBhZGRyZXNzZXMgdG8gbWFjaGluZXMgdGhhdCBzdG9yZSB0aGUgZGF0YSBbIDQgXS5cIl0sXCI3NDQ0OTQ3M1wiOltcIlRoZSBGcmVlbmV0IHBlZXItdG8tcGVlciBzdG9yYWdlIHN5c3RlbSBbNV0sIFs2XSwgbGlrZSBDaG9yZCwgaXMgZGVjZW50cmFsaXplZCBhbmQgc3ltbWV0cmljIGFuZCBhdXRvbWF0aWNhbGx5IGFkYXB0cyB3aGVuIGhvc3RzIGxlYXZlIGFuZCBqb2luLlwiXSxcIjk1NDMyMTQ5XCI6W1wiVGhlIENob3JkIHByb3RvY29sIGlzIGFsc28gc2ltaWxhciB0byBQYXN0cnksIHRoZSBsb2NhdGlvbiBhbGdvcml0aG0gdXNlZCBpbiBQQVNUIFs4XS5cIl0sXCIyMDM1Njk5MTVcIjpbXCJhIGtleSBbN10uXCIsXCJDaG9yZCBoYXMgYmVlbiBldmFsdWF0ZWQgYXMgYSB0b29sIHRvIHNlcnZlIEROUyBbN10gYW5kIHRvIG1haW50YWluIGEgZGlzdHJpYnV0ZWQgcHVibGljIGtleSBkYXRhYmFzZSBmb3Igc2VjdXJlIG5hbWUgcmVzb2x1dGlvbiBbMV0uXCJdLFwiMTUyODU0NTg5N1wiOltcInRoZXkgbGV0IG5vZGVzIGpvaW4gYW5kIGxlYXZlIHRoZSBzeXN0ZW0gd2l0aCBtaW5pbWFsIGRpc3J1cHRpb24gWzNdWzRdLlwiXSxcIjE1OTc5Njc1NDRcIjpbXCJDaG9yZCBoYXMgYmVlbiBldmFsdWF0ZWQgYXMgYSB0b29sIHRvIHNlcnZlIEROUyBbN10gYW5kIHRvIG1haW50YWluIGEgZGlzdHJpYnV0ZWQgcHVibGljIGtleSBkYXRhYmFzZSBmb3Igc2VjdXJlIG5hbWUgcmVzb2x1dGlvbiBbMV0uXCIsXCJmaW5nZXJbMV0uXCIsXCJOZXdseS1qb2luZWQgbm9kZXMgdGhhdCBhcmUgbm90IHlldCByZWZsZWN0ZWQgaW4gb3RoZXIgbm9kZXPigJkgZmluZ2VyIHRhYmxlcyBtYXkgY2F1c2UgZmluZCBzdWNjZXNzb3IoKSB0byBpbml0aWFsbHkgdW5kZXJzaG9vdCwgYnV0IHRoZSBsb29wIGluIHRoZSBsb29rdXAgYWxnb3JpdGhtIHdpbGwgbmV2ZXJ0aGVsZXNzIGZvbGxvdyBzdWNjZXNzb3IgKGZpbmdlclsxXSkgcG9pbnRlcnMgdGhyb3VnaCB0aGUgbmV3bHktam9pbmVkIG5vZGVzIHVudGlsIHRoZSBjb3JyZWN0IHByZWRlY2Vzc29yIGlzIHJlYWNoZWQuXCJdLFwiMTY1MDY3NTUwOVwiOltcIlRoZSBUYXBlc3RyeSBsb29rdXAgcHJvdG9jb2wgWzI2XSwgdXNlZCBpbiBPY2VhblN0b3JlIFsxM10sIGlzIGEgdmFyaWFudCBvZiB0aGUgUGxheHRvbiBhbGdvcml0aG0uXCJdLFwiMTY2MzQ5MzY0OVwiOltcIlRoZSBGcmVlbmV0IHBlZXItdG8tcGVlciBzdG9yYWdlIHN5c3RlbSBbNV0sIFsgNiBdLCBsaWtlIENob3JkLCBpcyBkZWNlbnRyYWxpemVkIGFuZCBzeW1tZXRyaWMgYW5kIGF1dG9tYXRpY2FsbHkgYWRhcHRzIHdoZW4gaG9zdHMgbGVhdmUgYW5kIGpvaW4uXCJdLFwiMTcyNTQxNDIwNlwiOltcIlRoZSBHbG9iZSBzeXN0ZW0gWzJdIGhhcyBhIHdpZGUtYXJlYSBsb2NhdGlvbiBzZXJ2aWNlIHRvIG1hcCBvYmplY3QgaWRlbnRpZmllcnMgdG8gdGhlIGxvY2F0aW9ucyBvZiBtb3Zpbmcgb2JqZWN0cy5cIl0sXCIxNzk5MzM4NDI5XCI6W1wiTmV3IGFuYWx5c2lzIHRlY2huaXF1ZXMgaGF2ZSBzaG93biB0aGF0IENob3Jk4oCZcyBzdGFiaWxpemF0aW9uIGFsZ29yaXRobXMgKHdpdGggbWlub3IgbW9kaWZpY2F0aW9ucykgbWFpbnRhaW4gZ29vZCBsb29rdXAgcGVyZm9ybWFuY2UgZGVzcGl0ZSBjb250aW51b3VzIGZhaWx1cmUgYW5kIGpvaW5pbmcgb2Ygbm9kZXMgWzE2XS5cIixcIk90aGVyIHdvcmsgWzE2XSBzaG93cyB0aGF0IGlmIHRoZSBzdGFiaWxpemF0aW9uIHByb3RvY29sIGlzIHJ1biBhdCBhIGNlcnRhaW4gcmF0ZSAoZGVwZW5kZW50IG9uIHRoZSByYXRlIGF0IHdoaWNoIG5vZGVzIGpvaW4gYW5kIGZhaWwpIHRoZW4gdGhlIENob3JkIHJpbmcgcmVtYWlucyBjb250aW51b3VzbHkgaW4gYW4g4oCcYWxtb3N0IHN0YWJsZeKAnSBzdGF0ZSBpbiB3aGljaCBsb29rdXBzIGFyZSBmYXN0IGFuZCBjb3JyZWN0LlwiXSxcIjIwMDA4NzYwMjNcIjpbXCJbMjFdIGlzIHBlcmhhcHMgdGhlIGNsb3Nlc3QgYWxnb3JpdGhtIHRvIHRoZSBDaG9yZCBwcm90b2NvbC5cIl0sXCIyMDIwNzY1NjUyXCI6W1widGhleSBsZXQgbm9kZXMgam9pbiBhbmQgbGVhdmUgdGhlIHN5c3RlbSB3aXRoIG1pbmltYWwgZGlzcnVwdGlvbiBbM11bNF0uXCJdLFwiMjA1MjIwNzgzNFwiOltcIlRlY2huaXF1ZXMgaGF2ZSBhbHNvIGJlZW4gZGV2ZWxvcGVkIFszXSB0byBpbnRyb2R1Y2UgcmFuZG9tbmVzcyBpbiB0aGUgaGFzaCBmdW5jdGlvbjsgZ2l2ZW4gYW55IHNldCBvZiBrZXlzLCB3ZSBjYW4gY2hvb3NlIGEgaGFzaCBmdW5jdGlvbiBhdCByYW5kb20gc28gdGhhdCB0aGUga2V5cyBhcmUgd2VsbCBkaXN0cmlidXRlZCB3aXRoIGhpZ2ggcHJvYmFiaWxpdHkgb3ZlciB0aGUgY2hvaWNlIG9mIGhhc2ggZnVuY3Rpb24uXCJdLFwiMjA2NDM2MDU0M1wiOltcIkFyY2hpdmFsIEludGVybWVtb3J5IHVzZXMgYW4gb2ZmLWxpbmUgY29tcHV0ZWQgdHJlZSB0byBtYXAgbG9naWNhbCBhZGRyZXNzZXMgdG8gbWFjaGluZXMgdGhhdCBzdG9yZSB0aGUgZGF0YSBbNF0uXCJdLFwiMjEwNDIxMDg5NFwiOltcIlsxOV0sIGEgdmFyaWFudCBvZiB3aGljaCBpcyB1c2VkIGluIE9jZWFuU3RvcmUgWzEyXSwgaXMgcGVyaGFwcyB0aGUgY2xvc2VzdCBhbGdvcml0aG0gdG8gdGhlIENob3JkIHByb3RvY29sLlwiXSxcIjIxMjIyNjk5MjVcIjpbXCJETlMgcHJvdmlkZXMgYSBob3N0IG5hbWUgdG8gSVAgYWRkcmVzcyBtYXBwaW5nIFsxNV0uXCJdLFwiMjEyNzU1NTE0M1wiOltcIkluZm9ybWF0aW9uIGFib3V0IGFuIG9iamVjdCBpcyBzdG9yZWQgaW4gYSBwYXJ0aWN1bGFyIGxlYWYgZG9tYWluLCBhbmQgcG9pbnRlciBjYWNoZXMgcHJvdmlkZSBzZWFyY2ggc2hvcnRjdXRzIFsyNV0uXCJdLFwiMjE0NDU1MzA3OFwiOltcInN1Y2Nlc3NvciB0aGUgbmV4dCBub2RlIG9uIHRoZSBpZGVudGlmaWVyIGNpcmNsZTsgZmluZ2VyWzFdOm5vZGVcIixcImZpbmdlclsxXS5cIixcImludGVydmFsID0gW2ZpbmdlclsxXS5cIixcIk5vZGUgbiBjYW4gYmVjb21lIHRoZSBzdWNjZXNzb3Igb25seSBmb3Iga2V5cyB0aGF0IHdlcmUgcHJldmlvdXNseSB0aGUgcmVzcG9uc2liaWxpdHkgb2YgdGhlIG5vZGUgaW1tZWRpYXRlbHkgZm9sbG93I2RlZmluZSBzdWNjZXNzb3IgZmluZ2VyWzFdOm5vZGVcIixcImZpbmdlclsxXTpub2RlID0gbjpmaW5kIHN1Y2Nlc3NvcihmaW5nZXJbMV06c3RhcnQpOyBwcmVkZWNlc3NvciA9IHN1Y2Nlc3NvcjpwcmVkZWNlc3Nvcjsgc3VjY2Vzc29yOnByZWRlY2Vzc29yID0gbjsgZm9yIGkgPSAxIHRvIG0gMSBpZiAoZmluZ2VyW2krIDFdOnN0YXJ0IDIgW247IGZpbmdlcltpXTpub2RlKSkgZmluZ2VyW2krIDFdOm5vZGUgPSBmaW5nZXJbaV06bm9kZTsgZWxzZSBmaW5nZXJbaSsgMV06bm9kZSA9XCIsXCJOZXdseSBqb2luZWQgbm9kZXMgdGhhdCBoYXZlIG5vdCB5ZXQgYmVlbiBmaW5nZXJlZCBtYXkgY2F1c2UgZmluZCBwcmVkZWNlc3NvciB0byBpbml0aWFsbHkgdW5kZXJzaG9vdCwgYnV0IHRoZSBsb29wIGluIHRoZSBsb29rdXAgYWxnb3JpdGhtIHdpbGwgbmV2ZXJ0aGVsZXNzIGZvbGxvdyBzdWNjZXNzb3IgKGZpbmdlclsxXSkgcG9pbnRlcnMgdGhyb3VnaCB0aGUgbmV3bHkgam9pbmVkIG5vZGVzIHVudGlsIHRoZSBjb3JyZWN0IHByZWRlY2Vzc29yIGlzIHJlYWNoZWQuXCIsXCJUaGUgQ2hvcmQgbm9kZXMgYXJlIGF0IHRlbiBzaXRlcyBvbiBhIHN1YnNldCBvZiB0aGUgUk9OIHRlc3QtYmVkIGluIHRoZSBVbml0ZWQgU3RhdGVzIFsxXSwgaW4gQ2FsaWZvcm5pYSwgQ29sb3JhZG8sIE1hc3NhY2h1c2V0dHMsIE5ldyBZb3JrLCBOb3J0aCBDYXJvbGluYSwgYW5kIFBlbm5zeWx2YW5pYS5cIl0sXCIyMTUwNjc2NTg2XCI6W1wicGFydCBvZiBhbiBleHBlcmltZW50YWwgZGlzdHJpYnV0ZWQgZmlsZSBzeXN0ZW0gWzddLCB0aG91Z2ggdGhpcyBzZWN0aW9uIGNvbnNpZGVycyBvbmx5IHRoZSBDaG9yZCBjb21wb25lbnQgb2YgdGhlIHN5c3RlbS5cIl0sXCIyMTYzMDU5MTkwXCI6W1wiQ0FOIHVzZXMgYSBkLWRpbWVuc2lvbmFsIENhcnRlc2lhbiBjb29yZGluYXRlIHNwYWNlIChmb3Igc29tZSBmaXhlZCBkKSB0byBpbXBsZW1lbnQgYSBkaXN0cmlidXRlZCBoYXNoIHRhYmxlIHRoYXQgbWFwcyBrZXlzIG9udG8gdmFsdWVzIFsyMl0uXCJdLFwiMjE2NDE5MjcyMlwiOltcIkNob3Jk4oCZcyByb3V0aW5nIHByb2NlZHVyZSBtYXkgYmUgdGhvdWdodCBvZiBhcyBhIG9uZWRpbWVuc2lvbmFsIGFuYWxvZ3VlIG9mIHRoZSBHcmlkIGxvY2F0aW9uIHN5c3RlbSBbMTRdLlwiXSxcIjIxNjc4OTg0MTRcIjpbXCJQYXN0cnkgWzIzXSBpcyBhIHByZWZpeGJhc2VkIGxvb2t1cCBwcm90b2NvbCB0aGF0IGhhcyBwcm9wZXJ0aWVzIHNpbWlsYXIgdG8gQ2hvcmQuXCJdLFwiMjE2ODg4NjEzMVwiOltcIk5ldyBhbmFseXNpcyB0ZWNobmlxdWVzIGhhdmUgc2hvd24gdGhhdCBDaG9yZOKAmXMgc3RhYmlsaXphdGlvbiBhbGdvcml0aG1zICh3aXRoIG1pbm9yIG1vZGlmaWNhdGlvbnMpIG1haW50YWluIGdvb2QgbG9va3VwIHBlcmZvcm1hbmNlIGRlc3BpdGUgY29udGludW91cyBmYWlsdXJlIGFuZCBqb2luaW5nIG9mIG5vZGVzIFsxNl0uXCIsXCJPdGhlciB3b3JrIFsxNl0gc2hvd3MgdGhhdCBpZiB0aGUgc3RhYmlsaXphdGlvbiBwcm90b2NvbCBpcyBydW4gYXQgYSBjZXJ0YWluIHJhdGUgKGRlcGVuZGVudCBvbiB0aGUgcmF0ZSBhdCB3aGljaCBub2RlcyBqb2luIGFuZCBmYWlsKSB0aGVuIHRoZSBDaG9yZCByaW5nIHJlbWFpbnMgY29udGludW91c2x5IGluIGFuIOKAnGFsbW9zdCBzdGFibGXigJ0gc3RhdGUgaW4gd2hpY2ggbG9va3VwcyBhcmUgZmFzdCBhbmQgY29ycmVjdC5cIl0sXCIyMTcwNzU2MDI4XCI6W1wiVGhpcyBtb2RlbCBpcyBtb3RpdmF0ZWQgYnkgcmVjZW50IHJlc2VhcmNoIFsxOV0gc2hvd2luZyB0aGF0IHRoZSBuZXR3b3JrIGxhdGVuY3kgYmV0d2VlbiB0d28gbm9kZXMgaW4gdGhlIEludGVybmV0IGNhbiBiZSBtb2RlbGVkICh3aXRoIGdvb2QgYWNjdXJhY3kpIGFzIHRoZSBnZW9tZXRyaWMgZGlzdGFuY2UgaW4gYSBkLWRpbWVuc2lvbmFsIEV1Y2xpZGVhbiBzcGFjZSwgd2hlcmUgZCDiiaUgMy5cIl0sXCIyMTc0NTA3ODY5XCI6W1wiVGhlIEZyZWVuZXQgcGVlci10by1wZWVyIHN0b3JhZ2Ugc3lzdGVtIFs1XSwgWzZdLCBsaWtlIENob3JkLCBpcyBkZWNlbnRyYWxpemVkIGFuZCBzeW1tZXRyaWMgYW5kIGF1dG9tYXRpY2FsbHkgYWRhcHRzIHdoZW4gaG9zdHMgbGVhdmUgYW5kIGpvaW4uXCJdLFwiMjIyNzg5NTA3OVwiOltcIlRvIGFsbGV2aWF0ZSB0aGlzIHByb2JsZW0sIGluIHByZXZpb3VzIHdvcmsgWyA4IF0sIHdlIGhhdmUgZXhwZXJpbWVudGVkIHdpdGggYSBzaW1wbGUgZXh0ZW5zaW9uIG9mIHRoZSBDaG9yZCBwcm90b2NvbCB0aGF0IGV4cGxvaXRzIG9ubHkgdGhlIGluZm9ybWF0aW9uIGluIHRoZSBub2Rl4oCZc1xcdTAwMWJXaGlsZSB0aGlzIHByb3RvY29sIGV4dGVuc2lvbiBpcyBzaW1wbGUgdG8gaW1wbGVtZW50IGFuZCBkb2VzIG5vdCByZXF1aXJlIGFueSBhZGRpdGlvbmFsIHN0YXRlLCBpdHMgcGVyZm9ybWFuY2UgaXMgZGlmZmljdWx0IHRvIGFuYWx5emUgWyA4IF0uXCJdfSxcIlBSXCI6WzIxNTgwNDk4MjEsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDE2NTA2NzU1MDksMjExOTI0NTEwNiwyMTIzNDgyNDYyLDIxNTA2NzY1ODYsMjE3NDUwNzg2OSwyMTA0MjEwODk0LDIwNTYzNjMzNTMsMjAyMDc2NTY1MiwyMDA3MjE5MzA0LDIxMjM4MjA4MjAsMTU4NDYzNTQ1OSwyMTYyNzMzNjc3LDIwMDA4NzYwMjMsMjE2OTA0NzIyNiwxOTcwNTY0Nzc4LDE1MjA5MTQ5NDMsMTQ5MjU1MjUzMSwyMTU4MDQ5ODIxLDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwxNjUwNjc1NTA5LDIxMTkyNDUxMDYsMjEyMzQ4MjQ2MiwyMTUwNjc2NTg2LDIxNzQ1MDc4NjksMjEwNDIxMDg5NCwyMDU2MzYzMzUzLDIwMjA3NjU2NTIsMjAwNzIxOTMwNCwyMTIzODIwODIwLDE1ODQ2MzU0NTksMjE2MjczMzY3NywyMDAwODc2MDIzLDIxNjkwNDcyMjYsMTk3MDU2NDc3OCwxNTIwOTE0OTQzLDE0OTI1NTI1MzFdLFwiQU5GXCI6W3tcIkZOXCI6XCJJb25cIixcIkxOXCI6XCJTdG9pY2FcIixcIlNcIjoxfSx7XCJGTlwiOlwiUm9iZXJ0IFRhcHBhblwiLFwiTE5cIjpcIk1vcnJpc1wiLFwiU1wiOjJ9LHtcIkZOXCI6XCJEYXZpZFwiLFwiTE5cIjpcIkxpYmVuLU5vd2VsbFwiLFwiU1wiOjN9LHtcIkZOXCI6XCJEYXZpZCBSLlwiLFwiTE5cIjpcIkthcmdlclwiLFwiU1wiOjR9LHtcIkZOXCI6XCJNLiBGcmFuc1wiLFwiTE5cIjpcIkthYXNob2VrXCIsXCJTXCI6NX0se1wiRk5cIjpcIkZyYW5rXCIsXCJMTlwiOlwiRGFiZWtcIixcIlNcIjo2fSx7XCJGTlwiOlwiSGFyaVwiLFwiTE5cIjpcIkJhbGFrcmlzaG5hblwiLFwiU1wiOjd9XSxcIkJWXCI6XCJJRUVFIEFDTSBUcmFuc2FjdGlvbnMgb24gTmV0d29ya2luZ1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJJRUVFXCJ9In0seyJsb2dwcm9iIjotMTQuNTE3LCJrZXNFbnRpdHlJZCI6MjY2MTAxLCJJZCI6MjEwNTEwMzc3NywiVGkiOiJ0aGUgaW50ZXJuZXQgb2YgdGhpbmdzIGEgc3VydmV5IiwiWSI6MjAxMCwiRCI6IjIwMTAtMTAtMDEiLCJSSWQiOlsyMTY4NDUyMjA0LDIxNTMwNzQ5MTksMTUzOTk5NjI0NiwyMTE2MjY5MzUwLDIwOTYzNTY5ODUsMjE2ODkwMzA5MCwxNjU2Njc4NzcwLDIxNzA3ODA1NjEsMTk3Mzc5NDA0MSwyMTI4OTEwODI0LDIxMTcyNjQ0MzUsMjE0Nzk4MjE0NCwxODY2MDYzNzYxLDIxMTYwMTUzNjUsMjA4MTU3ODQ2OCwyMTI2OTkzNDY1LDIxNjYxOTY0OTgsMjE1NDg3MTc4MSwzMjkwNzg3NzgsMjE1MTYwMTYwNiwyMTUyNDQ1MTc1LDIxODc5NTc1OTYsNTcwNjUyNzQsMjExNDM1MDc1MCwyMDA5MDI4MDM4LDIxNDgyNjY5OTMsMjQwNDM4MzA1MSwyMTM0NTkyMjQwLDI3MjQ3MzA2MTgsMjEwMzg2NjYxOSwyMTQxODY1MjgyLDE0Nzk5NzIzMDgsMTk5NzQwOTQ0NywyMDEzMzIwMDQ3LDE1MDgyODc0MjQsMjA5ODU0ODM4MCwyMTQxMjgzNTA5LDIxMTg5MjU5NTgsMjA5ODY0MjM2OSwyMDkwMDgwODE5LDIyNjY1MTE5MzIsMjEwMDExNTE5MCwyMTEwNTc4NzE4LDIxMTkxMTk3NDEsMjE0Mzc4OTM3MCwyMTM5NDkxMDQ1LDIxMjIxMDMyNzksMTg2MTE5NDk3MCwyMTUyMjA2NTQ1LDExOTM5NTg5MiwyODkyMDQwNzAyLDE2ODEwODE5MzhdLCJBQSI6W3siQXVOIjoibHVpZ2kgYXR6b3JpIn0seyJBdU4iOiJhbnRvbmlvIGllcmEifSx7IkF1TiI6ImdpYWNvbW8gbW9yYWJpdG8ifV0sIkYiOlt7IkZOIjoiaW50ZXJuZXQgYXJjaGl0ZWN0dXJlIGJvYXJkIn0seyJGTiI6ImNvbnN0cmFpbmVkIGFwcGxpY2F0aW9uIHByb3RvY29sIn0seyJGTiI6InNtYXJ0IG9iamVjdHMifSx7IkZOIjoid2ViIG9mIHRoaW5ncyJ9LHsiRk4iOiJpbmZvcm1hdGljcyJ9LHsiRk4iOiJjb21tdW5pY2F0aW9ucyBwcm90b2NvbCJ9LHsiRk4iOiJ1YmlxdWl0b3VzIGNvbXB1dGluZyJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoia25vd2xlZGdlIG1hbmFnZW1lbnQifSx7IkZOIjoidGVsZWNvbW11bmljYXRpb25zIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlRoZSBJbnRlcm5ldCBvZiBUaGluZ3M6IEEgc3VydmV5XCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTUyLFwiSW52ZXJ0ZWRJbmRleFwiOntcIlRoaXNcIjpbMF0sXCJwYXBlclwiOlsxXSxcImFkZHJlc3Nlc1wiOlsyXSxcInRoZVwiOlszLDE1LDM5LDUxLDYzLDY2LDczLDE0MF0sXCJJbnRlcm5ldFwiOls0LDY3LDExOV0sXCJvZlwiOls1LDEwLDE3LDY1LDY4LDc1LDgyLDExNywxMjBdLFwiVGhpbmdzLlwiOls2XSxcIk1haW5cIjpbN10sXCJlbmFibGluZ1wiOls4LDEyNl0sXCJmYWN0b3JcIjpbOV0sXCJ0aGlzXCI6WzExLDk3LDEwNywxMThdLFwicHJvbWlzaW5nXCI6WzEyXSxcInBhcmFkaWdtXCI6WzEzLDEyMl0sXCJpc1wiOlsxNCw5OSwxMzFdLFwiaW50ZWdyYXRpb25cIjpbMTZdLFwic2V2ZXJhbFwiOlsxOF0sXCJ0ZWNobm9sb2dpZXNcIjpbMTksMTI3XSxcImFuZFwiOlsyMCwyNCwyOCwzMSw0Myw4OSwxMTAsMTI1XSxcImNvbW11bmljYXRpb25zXCI6WzIxXSxcInNvbHV0aW9ucy5cIjpbMjJdLFwiSWRlbnRpZmljYXRpb25cIjpbMjNdLFwidHJhY2tpbmdcIjpbMjVdLFwidGVjaG5vbG9naWVzLFwiOlsyNl0sXCJ3aXJlZFwiOlsyN10sXCJ3aXJlbGVzc1wiOlsyOV0sXCJzZW5zb3JcIjpbMzBdLFwiYWN0dWF0b3JcIjpbMzJdLFwibmV0d29ya3MsXCI6WzMzXSxcImVuaGFuY2VkXCI6WzM0XSxcImNvbW11bmljYXRpb25cIjpbMzVdLFwicHJvdG9jb2xzXCI6WzM2XSxcIihzaGFyZWRcIjpbMzddLFwid2l0aFwiOlszOF0sXCJOZXh0XCI6WzQwXSxcIkdlbmVyYXRpb25cIjpbNDFdLFwiSW50ZXJuZXQpLFwiOls0Ml0sXCJkaXN0cmlidXRlZFwiOls0NF0sXCJpbnRlbGxpZ2VuY2VcIjpbNDVdLFwiZm9yXCI6WzQ2XSxcInNtYXJ0XCI6WzQ3XSxcIm9iamVjdHNcIjpbNDhdLFwiYXJlXCI6WzQ5LDEyMywxNDhdLFwianVzdFwiOls1MF0sXCJtb3N0XCI6WzUyLDE0NF0sXCJyZWxldmFudC5cIjpbNTNdLFwiQXNcIjpbNTRdLFwib25lXCI6WzU1XSxcImNhblwiOls1Nl0sXCJlYXNpbHlcIjpbNTddLFwiaW1hZ2luZSxcIjpbNThdLFwiYW55XCI6WzU5XSxcInNlcmlvdXNcIjpbNjBdLFwiY29udHJpYnV0aW9uXCI6WzYxXSxcInRvXCI6WzYyLDEwMSwxMDUsMTEyXSxcImFkdmFuY2VcIjpbNjRdLFwiVGhpbmdzXCI6WzY5LDEyMV0sXCJtdXN0XCI6WzcwXSxcIm5lY2Vzc2FyaWx5XCI6WzcxXSxcImJlXCI6WzcyLDEzN10sXCJyZXN1bHRcIjpbNzRdLFwic3luZXJnZXRpY1wiOls3Nl0sXCJhY3Rpdml0aWVzXCI6Wzc3XSxcImNvbmR1Y3RlZFwiOls3OF0sXCJpblwiOls3OSwxNTBdLFwiZGlmZmVyZW50XCI6WzgwXSxcImZpZWxkc1wiOls4MV0sXCJrbm93bGVkZ2UsXCI6WzgzXSxcInN1Y2hcIjpbODQsOTNdLFwiYXNcIjpbODVdLFwidGVsZWNvbW11bmljYXRpb25zLFwiOls4Nl0sXCJpbmZvcm1hdGljcyxcIjpbODddLFwiZWxlY3Ryb25pY3NcIjpbODhdLFwic29jaWFsXCI6WzkwXSxcInNjaWVuY2UuXCI6WzkxXSxcIkluXCI6WzkyXSxcImFcIjpbOTRdLFwiY29tcGxleFwiOls5NSwxMDhdLFwic2NlbmFyaW8sXCI6Wzk2XSxcInN1cnZleVwiOls5OF0sXCJkaXJlY3RlZFwiOlsxMDBdLFwidGhvc2VcIjpbMTAyXSxcIndob1wiOlsxMDNdLFwid2FudFwiOlsxMDRdLFwiYXBwcm9hY2hcIjpbMTA2XSxcImRpc2NpcGxpbmVcIjpbMTA5XSxcImNvbnRyaWJ1dGVcIjpbMTExXSxcIml0c1wiOlsxMTNdLFwiZGV2ZWxvcG1lbnQuXCI6WzExNF0sXCJEaWZmZXJlbnRcIjpbMTE1XSxcInZpc2lvbnNcIjpbMTE2XSxcInJlcG9ydGVkXCI6WzEyNF0sXCJyZXZpZXdlZC5cIjpbMTI4XSxcIldoYXRcIjpbMTI5XSxcImVtZXJnZXNcIjpbMTMwXSxcInRoYXRcIjpbMTMyXSxcInN0aWxsXCI6WzEzM10sXCJtYWpvclwiOlsxMzRdLFwiaXNzdWVzXCI6WzEzNV0sXCJzaGFsbFwiOlsxMzZdLFwiZmFjZWRcIjpbMTM4XSxcImJ5XCI6WzEzOV0sXCJyZXNlYXJjaFwiOlsxNDFdLFwiY29tbXVuaXR5LlwiOlsxNDJdLFwiVGhlXCI6WzE0M10sXCJyZWxldmFudFwiOlsxNDVdLFwiYW1vbmdcIjpbMTQ2XSxcInRoZW1cIjpbMTQ3XSxcImFkZHJlc3NlZFwiOlsxNDldLFwiZGV0YWlscy5cIjpbMTUxXX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LnNjaWVuY2Uuc21pdGguZWR1L35qY2FyZGVsbC9Db3Vyc2VzL0VHUjMyOC9SZWFkaW5ncy9Jb1QlMjBTdXJ2ZXkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vY3MudXdhdGVybG9vLmNhL35icmVjaHQvY291cnNlcy84NTQtRW1lcmdpbmctMjAxNC9yZWFkaW5ncy9pb3QvaW90LXN1cnZleS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5zb2NpYWwtaW90Lm9yZy9kL0lvVFN1cnZleS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2NzZXdlYi51Y3NkLmVkdS9jbGFzc2VzL3dpMTUvY3NlMjM3QS1hL2hhbmRvdXRzL2lvdF9zdXJ2ZXkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZGlpdC51bmljdC5pdC91c2Vycy9zcGFsYXp6by9tYXRlcmlhbGUvc3VydmV5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vdXNlcnMudW9tLmdyL35rcHNhbm5pcy9Jb1QlMjAtJTIwQSUyMHN1cnZleS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy50aWdsaS5mci9saWIvZXhlL2ZldGNoLnBocD9tZWRpYT1jb3Vyczppb3Rfc3VydmV5LnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MxMzg5MTI4NjEwMDAxNTY4XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MTg2MjU0MVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMDE2L2ouY29tbmV0LjIwMTAuMDUuMDEwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLm9yZy8xMC4xMDE2L2ouY29tbmV0LjIwMTAuMDUuMDEwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cubWl1bi5zZS9zaXRlYXNzZXRzL2Zha3VsdGV0ZXIvbm10L3N1bW1lci11bml2ZXJzaXR5LzEtczIwLXMxMzg5MTI4NjEwMDAxNTY4LW1haW5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2NuL2NuNTQuaHRtbCNBdHpvcmlJTTEwXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHBzOi8vd3d3LnJlc2VhcmNoZ2F0ZS5uZXQvcHJvZmlsZS9MdWlnaV9BdHpvcmkyL3B1YmxpY2F0aW9uLzIyMjU3MTc1N19UaGVfSW50ZXJuZXRfb2ZfVGhpbmdzX0Ffc3VydmV5L2xpbmtzLzU0NmIzNmRmMGNmMmY1ZWIxODA5MTRlNS5wZGZcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTE4NjI1NDFcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MxMzg5MTI4NjEwMDAxNTY4XCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHBzOi8vd3d3LmVsc2V2aWVyLmNvbS9fX2RhdGEvYXNzZXRzL3BkZl9maWxlLzAwMDYvOTcwMjYvVGhlLUludGVybmV0LW9mLVRoaW5ncy5wZGZcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy5jc2llLm50cHUuZWR1LnR3L355c2NoZW4vY291cnNlLzIwMTEtMi9XTU4vcGFwZXJzLzEyX1RoZSUyMEludGVybmV0JTIwb2YlMjBUaGluZ3MlMjBBJTIwc3VydmV5LnBkZlwifV0sXCJWRk5cIjpcIkNvbXB1dGVyIE5ldHdvcmtzXCIsXCJWXCI6NTQsXCJJXCI6MTUsXCJGUFwiOjI3ODcsXCJMUFwiOjI4MDUsXCJET0lcIjpcIjEwLjEwMTYvai5jb21uZXQuMjAxMC4wNS4wMTBcIixcIkNDXCI6e1wiNTcwNjUyNzRcIjpbXCJBcyBzYWlkIGJlZm9yZSwgaXQgaXMgd29ydGggbm90aWNpbmcgdGhhdCDigJjigJhTZW1hbnRpYyBvcmllbnRlZOKAnSBJb1QgdmlzaW9ucyBhcmUgYXZhaWxhYmxlIGluIHRoZSBsaXRlcmF0dXJlIFsxNOKAkzE3XS5cIl0sXCIzMjkwNzg3NzhcIjpbXCJJbiBmYWN0LCBpZiBzb21lIHdvcmsgaGFzIGJlZW4gZG9uZSBmb3Igc3VwcG9ydGluZyBRb1MgaW4gd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmtzIFs3M10sIHRoZSBwcm9ibGVtIGlzIHN0aWxsIGNvbXBsZXRlbHkgdW5leHBsb3JlZCBpbiBSRklEIHN5c3RlbXMuXCJdLFwiMTQ3OTk3MjMwOFwiOltcIlBlcnZhc2l2ZSBjb21wdXRpbmcgYW5kIHNlbnNvciB0ZWNobm9sb2dpZXMgb2ZmZXIgZ3JlYXQgcG90ZW50aWFsIGZvciBpbXByb3ZpbmcgdGhlIGVmZmljaWVuY3kgb2YgdGhlIGZvb2Qgc3VwcGx5IGNoYWluIFs0Myw0NF0uXCJdLFwiMTUwODI4NzQyNFwiOltcIkluIHRoaXMgY29udGV4dCwgYSBmZXcgc29sdXRpb25zIGhhdmUgYmVlbiBwcm9wb3NlZCBmb3IgbGlnaHQgc3ltbWV0cmljIGtleSBjcnlwdG9ncmFwaGljIHNjaGVtZXMgKHNlZSBbODMsODRdIGZvciBSRklEIHNjZW5hcmlvcyBhbmQgWzc4XSBmb3Igc2Vuc29yIG5ldHdvcmsgc2NlbmFyaW9zKS5cIl0sXCIxNTM5OTk2MjQ2XCI6W1wiVG8gdGhpcyBwdXJwb3NlIGl0IGlzIGltcG9ydGFudCB0byBub3RlIHRoYXQgaGlnaGVyIHNjYWxhYmlsaXR5IGNhbiBiZSBhY2hpZXZlZCBieSBzb2x1dGlvbnMgYmFzZWQgb24gdGhlIHV0aWxpemF0aW9uIG9mIGEgaG9tZSBhZ2VudCAobGlrZSBNb2JpbGUgSVAgWzY3XSksIHJhdGhlciB0aGFuIGJ5IHNvbHV0aW9ucyBiYXNlZCBvbiBob21lIGxvY2F0aW9uIHJlZ2lzdGVycyAoSExSKSBhbmQgdmlzaXRvciBsb2NhdGlvbiByZWdpc3RlcnMgKFZMUiksIHdoaWNoIGFyZSB3aWRlbHkgdXNlZCBpbiBjZWxsdWxhciBuZXR3b3Jrcy5cIl0sXCIxNjgxMDgxOTM4XCI6W1wiSW4gdGhlIHRyYWRpdGlvbmFsIEludGVybmV0LCB0aGUgcHJvdG9jb2wgdXRpbGl6ZWQgYXQgdGhlIHRyYW5zcG9ydCBsYXllciBmb3IgcmVsaWFibGUgY29tbXVuaWNhdGlvbnMgaXMgdGhlIFRyYW5zbWlzc2lvbiBDb250cm9sIFByb3RvY29sIChUQ1ApIFs3MF0uXCJdLFwiMTg2MTE5NDk3MFwiOltcIlN1Y2ggbm9pc3kgc2lnbmFsIGlzIG1vZHVsYXRlZCBieSB0aGUgUkZJRCB0YWdzIGFuZCB0aGVyZWZvcmUsIGl0cyB0cmFuc21pc3Npb24gY2Fubm90IGJlIGRldGVjdGVkIGJ5IG1hbGljaW91cyByZWFkZXJzIFs5MF0uXCJdLFwiMTg2NjA2Mzc2MVwiOltcIkZpbmFsbHksIHN0dWRpZXMgYXJlIHN0aWxsIGF0IHRoZSBiZWdpbm5pbmcgcmVnYXJkaW5nIGRpZ2l0YWwgZm9yZ2V0dGluZyBhcyB0aGlzIGhhcyBiZWVuIHJlY29nbml6ZWQgYXMgYW4gaW1wb3J0YW50IGlzc3VlIG9ubHkgcmVjZW50bHkgWzkyXS5cIl0sXCIxOTczNzk0MDQxXCI6W1wiSW4gWzM2XSwgdGhlIGF1dGhvcnMgcHJlc2VudCBhbm90aGVyIFJGSUQtcmVsYXRlZCBtaWRkbGV3YXJlIHdoaWNoIHJlbGllcyBvbiB0aHJlZSBmdW5jdGlvbmFsaXRpZXM6IHRoZSB0YWcsIHRoZSBwbGFjZSwgYW5kIHRoZSBzY2VuaWMgbWFuYWdlcnMuXCIsXCJJbmRlZWQsIHRoaW5ncyBtYXkgYXV0b21hdGljYWxseSB0cmlnZ2VyIHRoZSB0cmFuc21pc3Npb24gb2YgbWVzc2FnZXMgdG8gZnJpZW5kcyB0byBhbGxvdyB0aGVtIHRvIGtub3cgd2hhdCB3ZSBhcmUgZG9pbmcgb3Igd2hhdCB3ZSBoYXZlIGRvbmUgaW4gdGhlIHBhc3QsIHN1Y2ggYXMgbW92aW5nIGZyb20vdG8gb3VyIGhvdXNlL29mZmljZSwgdHJhdmVsbGluZywgbWVldGluZyBzb21lIGNvbW1vbiBtYXRlcyBvciBwbGF5aW5nIHNvY2NlciBbMzZdLlwiXSxcIjE5OTc0MDk0NDdcIjpbXCJJbiB0aGlzIGNhc2UsIGltYWdlcyBvZiBwZW9wbGUgY2FuIGJlIGJsdXJyZWQgaW4gb3JkZXIgdG8gcHJvdGVjdCB0aGVpciBwcml2YWN5IFs4N10uXCJdLFwiMjAwOTAyODAzOFwiOltcImNhdXNlIGl0IGRvZXMgbm90IGltcG9zZSBhIHNwZWNpZmljIHRlY2hub2xvZ3kgZm9yIHRoZSBzZXJ2aWNlIGltcGxlbWVudGF0aW9uIFsyOF0uXCJdLFwiMjAxMzMyMDA0N1wiOltcIkluIGEgYnJvYWRlciBzZW5zZSwgSW9UIGNhbm5vdCBiZSBqdXN0IGEgZ2xvYmFsIEVQQyBzeXN0ZW0gaW4gd2hpY2ggdGhlIG9ubHkgb2JqZWN0cyBhcmUgUkZJRHM7IHRoZXkgYXJlIGp1c3QgYSBwYXJ0IG9mIHRoZSBmdWxsIHN0b3J5ISBBbmQgdGhlIHNhbWUgaG9sZHMgZm9yIHRoZSBhbHRlcm5hdGl2ZSBVbmlxdWUvVW5pdmVyc2FsL1ViaXF1aXRvdXMgSURlbnRpZmllciAodUlEKSBhcmNoaXRlY3R1cmUgWzZdLCB3aG9zZSBtYWluIGlkZWEgaXMgc3RpbGwgdGhlIGRldmVsb3BtZW50IG9mIChtaWRkbGV3YXJlIGJhc2VkKSBzb2x1dGlvbnMgZm9yIGEgZ2xvYmFsIHZpc2liaWxpdHkgb2Ygb2JqZWN0cyBpbiBhbiBJb1QgdmlzaW9uLlwiXSxcIjIwOTAwODA4MTlcIjpbXCJUb3VyaXN0aWMgbWFwcyBjYW4gYmUgZXF1aXBwZWQgd2l0aCB0YWdzIHRoYXQgYWxsb3cgTkZDLWVxdWlwcGVkIHBob25lcyB0byBicm93c2UgaXQgYW5kIGF1dG9tYXRpY2FsbHkgY2FsbCB3ZWIgc2VydmljZXMgcHJvdmlkaW5nIGluZm9ybWF0aW9uIGFib3V0IGhvdGVscywgcmVzdGF1cmFudHMsIG1vbnVtZW50cyBhbmQgZXZlbnRzIHJlbGF0ZWQgdG8gdGhlIGFyZWEgb2YgaW50ZXJlc3QgZm9yIHRoZSB1c2VyIFs0NV0uXCJdLFwiMjA5ODY0MjM2OVwiOltcIkl0IGlzIHdlbGwga25vd24gdGhhdCB0cmFmZmljIGNoYXJhY3RlcmlzdGljcyBpbiB3aXJlbGVzcyBzZW5zb3IgbmV0d29ya3Mgc3Ryb25nbHkgZGVwZW5kIG9uIHRoZSBhcHBsaWNhdGlvbiBzY2VuYXJpbyAoc2VlIFs3Ml0sIGZvciBleGFtcGxlKS5cIl0sXCIyMTAzODY2NjE5XCI6W1wiSGV0ZXJvZ2VuZW91cyB3aXJlbGVzcyBhY2Nlc3MtYmFzZWQgcmVtb3RlIHBhdGllbnQgbW9uaXRvcmluZyBzeXN0ZW1zIGNhbiBiZSBkZXBsb3llZCB0byByZWFjaCB0aGUgcGF0aWVudCBldmVyeXdoZXJlLCB3aXRoIG11bHRpcGxlIHdpcmVsZXNzIHRlY2hub2xvZ2llcyBpbnRlZ3JhdGVkIHRvIHN1cHBvcnQgY29udGludW91cyBiaW8tc2lnbmFsIG1vbml0b3JpbmcgaW4gcHJlc2VuY2Ugb2YgcGF0aWVudCBtb2JpbGl0eSBbNDhdLlwiXSxcIjIxMTQzNTA3NTBcIjpbXCJTb21lIHdvcmtzIHByb3Bvc2VkIHRoZSBlbWJlZGRpbmcgb2YgVENQL0lQIHN0YWNrcyBpbiB0aGUgZGV2aWNlcywgc3VjaCBhcyB0aGUgVGlueVRDUCwgdGhlIG1JUCBhbmQgdGhlIEl3SVAgKHNlZSBbMzNdIGFuZCByZWZlcmVuY2VzIGhlcmVpbiksIHdoaWNoIHByb3ZpZGUgYSBzb2NrZXQgbGlrZSBpbnRlcmZhY2UgZm9yIGVtYmVkZGVkIGFwcGxpY2F0aW9ucy5cIl0sXCIyMTE2MDE1MzY1XCI6W1wiNkxvV1BBTiBbNTNdLCBhaW1pbmcgYXQgbWFraW5nIHRoZSBJUHY2IHByb3RvY29sIGNvbXBhdGlibGUgd2l0aCBsb3cgY2FwYWNpdHkgZGV2aWNlcywgYW5kIFJPTEwgWzU0XSwgbW9yZSBpbnRlcmVzdGVkIGluIHRoZSByb3V0aW5nIGlzc3VlIGZvciBJbnRlcm5ldCBvZiB0aGUgRnV0dXJlIHNjZW5hcmlvcywgYXJlIHRoZSBiZXN0IGNhbmRpZGF0ZXMuXCJdLFwiMjExNzI2NDQzNVwiOltcIkluIHRoZSBJb1QgdGhpcyBtYXkgY2F1c2UgcGVyZm9ybWFuY2UgcHJvYmxlbXMgYXMgbW9zdCBvZiB0aGUgY29tbXVuaWNhdGlvbnMgd2lsbCBleHBsb2l0IHRoZSB3aXJlbGVzcyBtZWRpdW0sIHdoaWNoIGlzIGtub3duIHRvIGJlIGEgY2hhbGxlbmdpbmcgZW52aXJvbm1lbnQgZm9yIFRDUCBbNzFdLlwiXSxcIjIxMTkxMTk3NDFcIjpbXCJlcmFsIFs0MV0uXCJdLFwiMjEyMjEwMzI3OVwiOltcIiwgWzc5XS5cIl0sXCIyMTI2OTkzNDY1XCI6W1wiSXQgaXMgcXVpdGUgc2ltaWxhciB0byB0aGUgc2NoZW1lIHByb3Bvc2VkIGluIFsyOV0sIHdoaWNoIGFkZHJlc3NlcyB0aGUgbWlkZGxld2FyZSBpc3N1ZXMgd2l0aCBhIGNvbXBsZXRlIGFuZCBpbnRlZ3JhdGVkIGFyY2hpdGVjdHVyYWwgYXBwcm9hY2guXCIsXCJJbiB0aGlzIGNvbnRleHQsIGEgZnJlcXVlbnQgY2hvaWNlIGlzIHRvIGFkb3B0IHN0YW5kYXJkIGxhbmd1YWdlcyBzdWNoIGFzIHRoZSBCdXNpbmVzcyBQcm9jZXNzIEV4ZWN1dGlvbiBMYW5ndWFnZSAoQlBFTCkgYW5kIEpvbGllIFsyOSwzMF0uXCIsXCJUaGUgcGxhbnQgbWFuYWdlciBhbHNvIGltbWVkaWF0ZWx5IHNlZXMgdGhlIHN0YXR1cyBvZiB0aGUgc28gY2FsbGVkIEVudGVycHJpc2UgUmVzb3VyY2UgUGxhbm5pbmcgKEVSUCkgb3JkZXJzLCB0aGUgcHJvZHVjdGlvbiBwcm9ncmVzcywgdGhlIGRldmljZSBzdGF0dXMsIGFzIHdlbGwgYXMgYSBnbG9iYWwgdmlldyBvbiBhbGwgdGhlIGVsZW1lbnRzIGFuZCB0aGUgcG9zc2libGUgc2lkZSBlZmZlY3RzIG9mIGEgcHJvZHVjdGlvbiBsaW5lIGRlbGF5IGR1ZSB0byBzaG9wLWZsb29yIGRldmljZSBtYWxmdW5jdGlvbnMgWzI5XS5cIl0sXCIyMTI4OTEwODI0XCI6W1wiQSBmdXJ0aGVyIHZpc2lvbiBjb3JyZWxhdGVkIHdpdGggdGhlIElvVCBpcyB0aGUgc28gY2FsbGVkIOKAmOKAmFdlYiBvZiBUaGluZ3PigJ0gWzE4XSwgYWNjb3JkaW5nIHRvIHdoaWNoIFdlYiBzdGFuZGFyZHMgYXJlIHJlLXVzZWQgdG8gY29ubmVjdCBhbmQgaW50ZWdyYXRlIGludG8gdGhlIFdlYiBldmVyeWRheS1saWZlIG9iamVjdHMgdGhhdCBjb250YWluIGFuIGVtYmVkZGVkIGRldmljZSBvciBjb21wdXRlci5cIl0sXCIyMTM5NDkxMDQ1XCI6W1wiSW50ZWdyYXRpb24gb2Ygc2Vuc2luZyB0ZWNobm9sb2dpZXMgaW50byBwYXNzaXZlIFJGSUQgdGFncyB3b3VsZCBlbmFibGUgYSBsb3Qgb2YgY29tcGxldGVseSBuZXcgYXBwbGljYXRpb25zIGludG8gdGhlIElvVCBjb250ZXh0LCBlc3BlY2lhbGx5IGludG8gdGhlIGUtaGVhbHRoIGFyZWEgWzI0XS5cIl0sXCIyMTQxMjgzNTA5XCI6W1wiVG8gcHJvdGVjdCBkYXRhIGFnYWluc3QgdGhlIGZpcnN0IHR5cGUgb2YgYXR0YWNrLCBtZW1vcnkgaXMgcHJvdGVjdGVkIGluIG1vc3QgdGFnIHRlY2hub2xvZ2llcyBhbmQgc29sdXRpb25zIGhhdmUgYmVlbiBwcm9wb3NlZCBmb3Igd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmtzIGFzIHdlbGwgWzgxXS5cIl0sXCIyMTQxODY1MjgyXCI6W1wiUGVydmFzaXZlIGNvbXB1dGluZyBhbmQgc2Vuc29yIHRlY2hub2xvZ2llcyBvZmZlciBncmVhdCBwb3RlbnRpYWwgZm9yIGltcHJvdmluZyB0aGUgZWZmaWNpZW5jeSBvZiB0aGUgZm9vZCBzdXBwbHkgY2hhaW4gWzQzLDQ0XS5cIl0sXCIyMTQ4MjY2OTkzXCI6W1wicHJvdmlkZWQgYnkgdGhlIGRpZmZlcmVudCBzZWN0aW9ucyBvZiB0aGUgQXV0by1JRCBMYWIgc2NhdHRlcmVkIGFsbCBvdmVyIHRoZSB3b3JsZCBbNTAsNTEsMzRdLCBieSB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvbiBbNTJdIGFuZCBFdXJvcGVhbiBTdGFuZGFyZHMgT3JnYW5pc2F0aW9ucyAoRVRTSSwgQ0VOLCBDRU5FTEVDLCBldGMuXCJdLFwiMjE1MTYwMTYwNlwiOltcIlRoaXMgZmFjaWxpdGF0ZXMgdGhlIGludGVyYWN0aW9uIGFtb25nIHRoZSBwYXJ0cyBvZiBhbiBlbnRlcnByaXNlIGFuZCBhbGxvd3MgZm9yIHJlZHVjaW5nIHRoZSB0aW1lIG5lY2Vzc2FyeSB0byBhZGFwdCBpdHNlbGYgdG8gdGhlIGNoYW5nZXMgaW1wb3NlZCBieSB0aGUgbWFya2V0IGV2b2x1dGlvbiBbMjddLlwiXSxcIjIxNTIyMDY1NDVcIjpbXCJJbiBvcmRlciB0byBlbnN1cmUgdGhhdCB0aGUgcGVyc29uYWwgZGF0YSBjb2xsZWN0ZWQgaXMgdXNlZCBvbmx5IHRvIHN1cHBvcnQgYXV0aG9yaXplZCBzZXJ2aWNlcyBieSBhdXRob3JpemVkIHByb3ZpZGVycywgc29sdXRpb25zIGhhdmUgYmVlbiBwcm9wb3NlZCB0aGF0IHVzdWFsbHkgcmVseSBvbiBhIHN5c3RlbSBjYWxsZWQgcHJpdmFjeSBicm9rZXIgWzkxXS5cIl0sXCIyMTUyNDQ1MTc1XCI6W1wiVGhlIG1vYmlsZSBwaG9uZSBhdXRvbWF0aWNhbGx5IGdldHMgaW5mb3JtYXRpb24gZnJvbSB0aGUgYXNzb2NpYXRlZCB3ZWIgc2VydmljZXMgKHN0YXRpb25zLCBudW1iZXJzIG9mIHBhc3NlbmdlcnMsIGNvc3RzLCBhdmFpbGFibGUgc2VhdHMgYW5kIHR5cGUgb2Ygc2VydmljZXMpIGFuZCBhbGxvd3MgdGhlIHVzZXIgdG8gYnV5IHRoZSByZWxhdGVkIHRpY2tldHMgWzQyXS5cIl0sXCIyMTU0ODcxNzgxXCI6W1wiSXQgcHJvdmlkZXMgdGhlIGZvbGxvd2luZyBzZXJ2aWNlcyByZWxhdGVkIHRvIFJGSUQgbWFuYWdlbWVudDogZGF0YSBkaXNzZW1pbmF0aW9uLCBkYXRhIGFnZ3JlZ2F0aW9uLCBkYXRhIGZpbHRlcmluZywgd3JpdGluZyB0byBhIHRhZywgdHJpZ2dlciBSRklEIHJlYWRlciBmcm9tIGV4dGVybmFsIHNlbnNvcnMsIGZhdWx0IGFuZCBjb25maWd1cmF0aW9uIG1hbmFnZW1lbnQsIGRhdGEgaW50ZXJwcmV0YXRpb24sIHNoYXJpbmcgb2YgUkZJRCB0cmlnZ2VyZWQgYnVzaW5lc3MgZXZlbnRzLCBsb29rdXAgYW5kIGRpcmVjdG9yeSBzZXJ2aWNlLCB0YWcgaWRlbnRpZmllciBtYW5hZ2VtZW50LCBhbmQgcHJpdmFjeSBbMzVdLlwiXSxcIjIxNjYxOTY0OThcIjpbXCJJbiB0aGlzIGNvbnRleHQsIGEgcG9zc2libGUgc29sdXRpb24gdGhhdCBjYW4gcmVkdWNlIHByaXZhY3kgcHJvYmxlbXMgbWlnaHQgYmUgdG8gcmVzdHJpY3QgdGhlIG5ldHdvcmvigJlzIGFiaWxpdHkgdG8gZ2F0aGVyIGRhdGEgYXQgYSBkZXRhaWwgbGV2ZWwgdGhhdCBjb3VsZCBjb21wcm9taXNlIHByaXZhY3kgWzg2XS5cIl0sXCIyMTY4NDUyMjA0XCI6W1wiQSBsYXJnZSBzY2llbnRpZmljIGxpdGVyYXR1cmUgaGFzIGJlZW4gcHJvZHVjZWQgb24gc2Vuc29yIG5ldHdvcmtzIGluIHRoZSByZWNlbnQgcGFzdCwgYWRkcmVzc2luZyBzZXZlcmFsIHByb2JsZW1zIGF0IGFsbCBsYXllcnMgb2YgdGhlIHByb3RvY29sIHN0YWNrIFsyMl0uXCJdLFwiMjE2ODkwMzA5MFwiOltcIlRoaXMgbGVhZHMgdG8gdGhlIGNvbmNlcHQgb2YgZGF0YS1jZW50cmljIG5ldHdvcmtzLCB3aGljaCBoYXMgYmVlbiBpbnZlc3RpZ2F0ZWQgb25seSByZWNlbnRseSBbOTRdLlwiXSxcIjIxNzA3ODA1NjFcIjpbXCI2TG9XUEFOIFs1M10sIGFpbWluZyBhdCBtYWtpbmcgdGhlIElQdjYgcHJvdG9jb2wgY29tcGF0aWJsZSB3aXRoIGxvdyBjYXBhY2l0eSBkZXZpY2VzLCBhbmQgUk9MTCBbNTRdLCBtb3JlIGludGVyZXN0ZWQgaW4gdGhlIHJvdXRpbmcgaXNzdWUgZm9yIEludGVybmV0IG9mIHRoZSBGdXR1cmUgc2NlbmFyaW9zLCBhcmUgdGhlIGJlc3QgY2FuZGlkYXRlcy5cIixcIm92ZXIgTG93LVBvd2VyIFdpcmVsZXNzIFBlcnNvbmFsIEFyZWEgTmV0d29ya3MgKDZMb1dQQU4pIElFVEYgZ3JvdXAgd2FzIGJvcm4gWzUzXS5cIl0sXCIyMTg3OTU3NTk2XCI6W1wiQWNjb3JkaW5nbHksIHNvbHV0aW9ucyBoYXZlIGJlZW4gcmVjZW50bHkgcHJvcG9zZWQgKHNlZSBbODhdIGZvciBleGFtcGxlKSB0aGF0IHVzZSBhIG5ldyBzeXN0ZW0gdGhhdCwgb24gdGhlIGJhc2lzIG9mIHByZWZlcmVuY2VzIHNldCBieSB0aGUgdXNlciwgbmVnb3RpYXRlcyBwcml2YWN5IG9uIGhlci9oaXMgYmVoYWxmLlwiXSxcIjIyNjY1MTE5MzJcIjpbXCJUaGUgcHJpdmFjeSBkZWNpc2lvbnMgdGFrZW4gYnkgdGhlIGFib3ZlIHN5c3RlbSBjYW4gYmUgZW5mb3JjZWQgYnkgY3JlYXRpbmcgY29sbGlzaW9ucyBpbiB0aGUgd2lyZWxlc3MgY2hhbm5lbCB3aXRoIHRoZSByZXBsaWVzIHRyYW5zbWl0dGVkIGJ5IHRoZSBSRklEIHRhZ3MsIHdoaWNoIHNob3VsZCBub3QgYmUgcmVhZCBbODldLlwiXSxcIjI0MDQzODMwNTFcIjpbXCJSU04gWWVzIFllcyBBc3ltbWV0cmljIDMgU2Vuc2luZyBSRklEIHN5c3RlbXMgd2lsbCBhbGxvdyB0byBidWlsZCBSRklEIHNlbnNvciBuZXR3b3JrcyBbMjZdLCB3aGljaCBjb25zaXN0IG9mIHNtYWxsLCBSRklELWJhc2VkIHNlbnNpbmcgYW5kIGNvbXB1dGluZyBkZXZpY2VzLCBhbmQgUkZJRCByZWFkZXJzLCB3aGljaCBhcmUgdGhlIHNpbmtzIG9mIHRoZSBkYXRhIGdlbmVyYXRlZCBieSB0aGUgc2Vuc2luZyBSRklEIHRhZ3MgYW5kIHByb3ZpZGUgdGhlIHBvd2VyIGZvciB0aGUgbmV0d29yayBvcGVyYXRpb24uXCIsXCJUYWJsZSAxIGNvbXBhcmVzIHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgUkZJRCBzeXN0ZW1zIChSRklEKSwgd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmtzIChXU04pLCBhbmQgUkZJRCBzZW5zb3IgbmV0d29ya3MgKFJTTikgWzI2XS5cIl0sXCIyODkyMDQwNzAyXCI6W1wiRGF0YSBjYW4gYmUgbW9kaWZpZWQgYnkgYWR2ZXJzYXJpZXMgd2hpbGUgaXQgaXMgc3RvcmVkIGluIHRoZSBub2RlIG9yIHdoZW4gaXQgdHJhdmVyc2VzIHRoZSBuZXR3b3JrIFs4MF0uXCJdfSxcIlBSXCI6WzIxMTE2MTk2MjYsMjExOTA0NjY0MiwxOTc5NTE5NDYyLDIwNjg4NDkyNzcsMjAzODE5NDIyMCwxNzU1MjI3MDYzLDIwNTg0MDEyMTIsMTk2NzU2MTE5NCwxOTcyMDEyMTQ3LDIxNjg0NTIyMDQsMjEzNDI5NTA1MywyMTI4MDI2MDIzLDI1NjQ1NjYyMjEsMjYwMjk1NjYzMCwyMDI2ODkyNDU5LDE5NzM3OTQwNDEsMjEyMzc3MDE5OCwyNTIxNDI1MzYxLDIyMzQ2Mzk3MzIsMjExNDYyMzIyMSwyMTExNjE5NjI2LDIxMTkwNDY2NDIsMTk3OTUxOTQ2MiwyMDY4ODQ5Mjc3LDIwMzgxOTQyMjAsMTc1NTIyNzA2MywyMDU4NDAxMjEyLDE5Njc1NjExOTQsMTk3MjAxMjE0NywyMTY4NDUyMjA0LDIxMzQyOTUwNTMsMjEyODAyNjAyMywyNTY0NTY2MjIxLDI2MDI5NTY2MzAsMjAyNjg5MjQ1OSwxOTczNzk0MDQxLDIxMjM3NzAxOTgsMjUyMTQyNTM2MSwyMjM0NjM5NzMyLDIxMTQ2MjMyMjFdLFwiQU5GXCI6W3tcIkZOXCI6XCJMdWlnaVwiLFwiTE5cIjpcIkF0em9yaVwiLFwiU1wiOjF9LHtcIkZOXCI6XCJBbnRvbmlvXCIsXCJMTlwiOlwiSWVyYVwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJHaWFjb21vXCIsXCJMTlwiOlwiTW9yYWJpdG9cIixcIlNcIjozfV0sXCJCVlwiOlwiQ29tcHV0ZXIgTmV0d29ya3NcIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiRWxzZXZpZXJcIn0ifSx7ImxvZ3Byb2IiOi0xNC43NjQsImtlc0VudGl0eUlkIjozMzYzMzQsIklkIjoxNTA3MDA0NDIyLCJUaSI6Im1haWwgYW5kIGludGVybmV0IHN1cnZleXMgdGhlIHRhaWxvcmVkIGRlc2lnbiBtZXRob2QiLCJZIjoyMDA3LCJEIjoiMjAwNy0wMS0wMSIsIkFBIjpbeyJBdU4iOiJkb24gYSBkaWxsbWFuIn1dLCJGIjpbeyJGTiI6ImludGVyYWN0aXZlIHZvaWNlIHJlc3BvbnNlIn0seyJGTiI6ImN1c3RvbWVyIHNhdGlzZmFjdGlvbiJ9LHsiRk4iOiJzYW1wbGluZyJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoibXVsdGltZWRpYSJ9LHsiRk4iOiJzb2Npb2xvZ3kifV0sIkUiOiJ7XCJETlwiOlwiTWFpbCBhbmQgaW50ZXJuZXQgc3VydmV5cyA6IHRoZSB0YWlsb3JlZCBkZXNpZ24gbWV0aG9kXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTA0LFwiSW52ZXJ0ZWRJbmRleFwiOntcIlByZWZhY2VcIjpbMF0sXCJ0b1wiOlsxLDUsMTcsNDZdLFwidGhlXCI6WzIsNiwyMyw4Niw5NV0sXCIyMDA3XCI6WzNdLFwiVXBkYXRlLlByZWZhY2VcIjpbNF0sXCJTZWNvbmRcIjpbN10sXCJFZGl0aW9uLkFja25vd2xlZGdtZW50cy5QYXJ0XCI6WzhdLFwiT25lOlwiOls5XSxcIkVMRU1FTlRTXCI6WzEwXSxcIk9GXCI6WzExXSxcIlRIRVwiOlsxMiwzNl0sXCJUQUlMT1JFRFwiOlsxM10sXCJERVNJR05cIjpbMTRdLFwiTUVUSE9ELjFcIjpbMTVdLFwiSW50cm9kdWN0aW9uXCI6WzE2XSxcIlRhaWxvcmVkXCI6WzE4XSxcIkRlc2lnbi4yXCI6WzE5XSxcIldyaXRpbmdcIjpbMjBdLFwiUXVlc3Rpb25zLjNcIjpbMjFdLFwiQ29uc3RydWN0aW5nXCI6WzIyXSxcIlF1ZXN0aW9ubmFpcmUuNFwiOlsyNF0sXCJTdXJ2ZXlcIjpbMjVdLFwiSW1wbGVtZW50YXRpb24uNVwiOlsyNl0sXCJSZWR1Y3Rpb25cIjpbMjddLFwib2ZcIjpbMjgsNzAsODgsOTddLFwiQ292ZXJhZ2VcIjpbMjldLFwiYW5kXCI6WzMwLDQ4LDU4LDYzLDcyLDc2LDgzLDg1LDEwMF0sXCJTYW1wbGluZ1wiOlszMV0sXCJFcnJvcnMuUGFydFwiOlszMl0sXCJUd286XCI6WzMzXSxcIlRBSUxPUklOR1wiOlszNF0sXCJUT1wiOlszNV0sXCJTVVJWRVlcIjpbMzddLFwiU0lUVUFUSU9OLjZcIjpbMzhdLFwiTWl4ZWQtTW9kZVwiOlszOSwxMDFdLFwiU3VydmV5cy43XCI6WzQwXSxcIkFsdGVybmF0aXZlXCI6WzQxXSxcIlF1ZXN0aW9ubmFpcmVcIjpbNDJdLFwiRGVsaXZlcnk6XCI6WzQzXSxcIkluXCI6WzQ0XSxcIlBlcnNvbixcIjpbNDVdLFwiR3JvdXBzLFwiOls0N10sXCJ0aHJvdWdoXCI6WzQ5XSxcIlB1YmxpY2F0aW9ucy44XCI6WzUwXSxcIldoZW5cIjpbNTFdLFwiVGltaW5nXCI6WzUyXSxcIklzXCI6WzUzXSxcIkNyaXRpY2FsOlwiOls1NF0sXCJEaWFyeSxcIjpbNTVdLFwiQ3VzdG9tZXJcIjpbNTZdLFwiU2F0aXNmYWN0aW9uLFwiOls1N10sXCJFbGVjdGlvblwiOls1OV0sXCJGb3JlY2FzdFwiOls2MF0sXCJTdXJ2ZXlzLjlcIjpbNjFdLFwiSG91c2Vob2xkXCI6WzYyXSxcIkluZGl2aWR1YWxcIjpbNjRdLFwiUGVyc29uXCI6WzY1XSxcIlN1cnZleXNcIjpbNjYsNjldLFwiYnlcIjpbNjddLFwiR292ZXJubWVudC4xMFwiOls2OF0sXCJCdXNpbmVzc2VzXCI6WzcxXSxcIk90aGVyXCI6WzczXSxcIk9yZ2FuaXphdGlvbnMuMTFcIjpbNzRdLFwiSW50ZXJuZXRcIjpbNzVdLFwiSW50ZXJhY3RpdmVcIjpbNzddLFwiVm9pY2VcIjpbNzhdLFwiUmVzcG9uc2VcIjpbNzldLFwiU3VydmV5cy4xMlwiOls4MF0sXCJPcHRpY2FsXCI6WzgxXSxcIlNjYW5uaW5nXCI6WzgyXSxcIkltYWdpbmcsXCI6Wzg0XSxcIkZ1dHVyZVwiOls4N10sXCJTZWxmLUFkbWluaXN0ZXJlZFwiOls4OV0sXCJTdXJ2ZXlzLlJlZmVyZW5jZXMuMjAwN1wiOls5MF0sXCJBcHBlbmRpeDpcIjpbOTFdLFwiUmVjZW50XCI6WzkyXSxcIkRldmVsb3BtZW50c1wiOls5M10sXCJpblwiOls5NF0sXCJEZXNpZ25cIjpbOTZdLFwiV2ViLFwiOls5OF0sXCJNYWlsLFwiOls5OV0sXCJTdXJ2ZXlzLkFwcGVuZGl4XCI6WzEwMl0sXCJSZWZlcmVuY2VzLkluZGV4LlwiOlsxMDNdfX0sXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9jaS5uaWkuYWMuanAvbmNpZC9CQTc4MDkyOTYyXCJ9XSxcIlZGTlwiOlwiXCIsXCJQUlwiOlsxOTg3MjU4MTMwLDIxMDcwMzE3NTcsMjEwNjA5NjM2MSwxNDgwNTQ0ODY0LDE0ODQ4NjQwMjYsMjc0MjM2MTg4MCwyMTI1MjcyNjExLDIxMjI5MTI0OTgsMTcxNDcyMzgwMSwxOTcxNDQwNTEzLDYzNjUyMTEyLDE5OTA1MTM3NDAsMjA2MTk3NzYxNiwyMDM1OTgyMzU3LDE2NjUzMzIwODIsMjA3MTY2NjUzNSwxOTkxNjIzNzE5LDIyMzAwOTQyODMsMjA5OTY5Nzc2NiwyMDM2Mzg5MTIxLDE5ODcyNTgxMzAsMjEwNzAzMTc1NywyMTA2MDk2MzYxLDE0ODA1NDQ4NjQsMTQ4NDg2NDAyNiwyNzQyMzYxODgwLDIxMjUyNzI2MTEsMjEyMjkxMjQ5OCwxNzE0NzIzODAxLDE5NzE0NDA1MTMsNjM2NTIxMTIsMTk5MDUxMzc0MCwyMDYxOTc3NjE2LDIwMzU5ODIzNTcsMTY2NTMzMjA4MiwyMDcxNjY2NTM1LDE5OTE2MjM3MTksMjIzMDA5NDI4MywyMDk5Njk3NzY2LDIwMzYzODkxMjFdLFwiQU5GXCI6W3tcIkZOXCI6XCJEb24gQS5cIixcIkxOXCI6XCJEaWxsbWFuXCIsXCJTXCI6MX1dLFwiQlRcIjpcImFcIixcIlBCXCI6XCJKLiBXaWxleVwifSJ9LHsibG9ncHJvYiI6LTE0Ljg3NSwia2VzRW50aXR5SWQiOjM3MzM3OCwiSWQiOjIxMTE2MTk2MjYsIlRpIjoiaW50ZXJuZXQgb2YgdGhpbmdzIGlvdCBhIHZpc2lvbiBhcmNoaXRlY3R1cmFsIGVsZW1lbnRzIGFuZCBmdXR1cmUgZGlyZWN0aW9ucyIsIlkiOjIwMTMsIkQiOiIyMDEzLTA5LTAxIiwiUklkIjpbMjE2ODQ1MjIwNCwyMjk2NjE2NTEwLDIxMDUxMDM3NzcsMTk3NzM2NzQzMSwyMzM3OTY5NDI1LDIxMzI1NDk1MTMsMjA3MjEyODEwMywyMTIzMDMzMDE4LDIwOTYzNTY5ODUsMjEwNzcxMDIxNSwyNTIxNDI1MzYxLDIwNTg0MTA0NjAsMjE3MDU3NzQwOCwyMDIxMTk4MjgxLDE5NzM3OTQwNDEsMTUxNTY4NTA0NCwyMTI3MzQ3MzQ2LDE3NTUyMjcwNjMsMjE1NjYyNjgzOSwyMDQxNDU0NDEyLDIxMTQ2MzE4NTgsMjE1NTkwODU5OCwyMTQzNTkxNDQyLDIxMjg1MTk1MzQsMTk3MTQ1OTAwNSwyMTM0MDgxMjk5LDMzMDU1ODUzLDIxMDQ4NzA0NzIsMjExMDc1MzQ3MiwyMDMxMzI4Mzk1LDE5ODc4Nzc5MzAsMjEyMTM5NDM0MSwyMTI5MzE5Nzc3LDE5NjQ2NjExMTMsMjA3Njk3Nzc3NywxODk3NDU5MDMxLDIxNTM3MDc4MTEsMjI3NDEzNDY2OCwxOTg3MDk4NTE5LDE5OTg4OTY0MTIsMjA1MjkzMjY2NiwyMTI0OTk0MTc1LDE5Njk2NzQzNjUsMjEyNzIwMTE1MiwyMDI5MTIyNzA4LDIwOTI3NDc1OTUsMjEwMDM3NjcxMSwyMDQ0MDM1MTYyLDIxMDU2ODMzMjMsMTk3ODg4NTIwNSwyMTcwMDAwMzU5LDE1NTg0NzUyNjIsMTk4NjY2MjA3NiwyMDg1MDg5MzI0LDIzNDA0NTI0ODYsMjEyNzI5NTg5MywyMTI1Njg4OTYyLDIwMjU3NDk1NzUsMTk2Mzg1MDA0OCwyMjg3NDMyNDU0LDIxMDc3MzYzMDIsNTk1Mjg5MjgsMjA3OTM0ODg4MSwxNTI1ODg5MzQ3LDE1OTI5MDM3MjQsMjE4NDUwNDE3NywyMjk4NDA3MzAxXSwiQUEiOlt7IkF1TiI6ImpheWF2YXJkaGFuYSBndWJiaSJ9LHsiQXVOIjoicmFqa3VtYXIgYnV5eWEifSx7IkF1TiI6InNsYXZlbiBtYXJ1c2ljIn0seyJBdU4iOiJtYXJpbXV0aHUgcGFsYW5pc3dhbWkifV0sIkYiOlt7IkZOIjoid2ViIG9mIHRoaW5ncyJ9LHsiRk4iOiJzbWFydCBlbnZpcm9ubWVudCJ9LHsiRk4iOiJ1YmlxdWl0b3VzIGNvbXB1dGluZyJ9LHsiRk4iOiJjbG91ZCBjb21wdXRpbmcifSx7IkZOIjoiY29udmVyZ2VuY2UifSx7IkZOIjoic29jaWFsIG5ldHdvcmsifSx7IkZOIjoid2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmsifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkludGVybmV0IG9mIFRoaW5ncyAoSW9UKTogQSB2aXNpb24sIGFyY2hpdGVjdHVyYWwgZWxlbWVudHMsIGFuZCBmdXR1cmUgZGlyZWN0aW9uc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjIyOCxcIkludmVydGVkSW5kZXhcIjp7XCJVYmlxdWl0b3VzXCI6WzBdLFwic2Vuc2luZ1wiOlsxXSxcImVuYWJsZWRcIjpbMl0sXCJieVwiOlszLDgwLDIwOV0sXCJXaXJlbGVzc1wiOls0XSxcIlNlbnNvclwiOls1XSxcIk5ldHdvcmtcIjpbNl0sXCIoV1NOKVwiOls3XSxcInRlY2hub2xvZ2llc1wiOls4LDkwLDE3MF0sXCJjdXRzXCI6WzldLFwiYWNyb3NzXCI6WzEwLDY4XSxcIm1hbnlcIjpbMTFdLFwiYXJlYXNcIjpbMTJdLFwib2ZcIjpbMTMsMzksNDksODQsODcsMTA2LDE2MywxNjUsMTk3LDIxNl0sXCJtb2Rlcm5cIjpbMTRdLFwiZGF5XCI6WzE1XSxcImxpdmluZy5cIjpbMTZdLFwiVGhpc1wiOlsxNywxNTNdLFwib2ZmZXJzXCI6WzE4XSxcInRoZVwiOlsxOSw0Nyw1OSw2NCw4MSwxMDEsMTExLDExNywxNDMsMTgyLDIxMiwyMThdLFwiYWJpbGl0eVwiOlsyMF0sXCJ0b1wiOlsyMSwzNCw3MiwxMzMsMTM4LDE3N10sXCJtZWFzdXJlLFwiOlsyMl0sXCJpbmZlclwiOlsyM10sXCJhbmRcIjpbMjQsMzEsNTQsNjMsOTUsOTgsMTA5LDE3MSwxOTksMjIwXSxcInVuZGVyc3RhbmRcIjpbMjVdLFwiZW52aXJvbm1lbnRhbFwiOlsyNl0sXCJpbmRpY2F0b3JzLFwiOlsyN10sXCJmcm9tXCI6WzI4LDEyOF0sXCJkZWxpY2F0ZVwiOlsyOV0sXCJlY29sb2dpZXNcIjpbMzBdLFwibmF0dXJhbFwiOlszMl0sXCJyZXNvdXJjZXNcIjpbMzNdLFwidXJiYW5cIjpbMzVdLFwiZW52aXJvbm1lbnRzLlwiOlszNl0sXCJUaGVcIjpbMzcsMTY3XSxcInByb2xpZmVyYXRpb25cIjpbMzhdLFwidGhlc2VcIjpbNDBdLFwiZGV2aWNlc1wiOls0MV0sXCJpblwiOls0Miw3MCwxMTUsMTgxXSxcImFcIjpbNDMsNzQsODUsMTIwLDE1Nl0sXCJjb21tdW5pY2F0aW5nLWFjdHVhdGluZ1wiOls0NF0sXCJuZXR3b3JrXCI6WzQ1XSxcImNyZWF0ZXNcIjpbNDZdLFwiSW50ZXJuZXRcIjpbNDgsMTE4LDE2NCwyMTldLFwiVGhpbmdzXCI6WzUwXSxcIihJb1QpLFwiOls1MV0sXCJ3aGVyZWluXCI6WzUyXSxcInNlbnNvcnNcIjpbNTNdLFwiYWN0dWF0b3JzXCI6WzU1XSxcImJsZW5kXCI6WzU2XSxcInNlYW1sZXNzbHlcIjpbNTddLFwid2l0aFwiOls1OF0sXCJlbnZpcm9ubWVudFwiOls2MF0sXCJhcm91bmRcIjpbNjFdLFwidXMsXCI6WzYyXSxcImluZm9ybWF0aW9uXCI6WzY1XSxcImlzXCI6WzY2LDExMCwxOTMsMjAyXSxcInNoYXJlZFwiOls2N10sXCJwbGF0Zm9ybXNcIjpbNjldLFwib3JkZXJcIjpbNzFdLFwiZGV2ZWxvcFwiOls3M10sXCJjb21tb25cIjpbNzVdLFwib3BlcmF0aW5nXCI6Wzc2XSxcInBpY3R1cmVcIjpbNzddLFwiKENPUCkuXCI6Wzc4XSxcIkZ1ZWxlZFwiOls3OV0sXCJyZWNlbnRcIjpbODJdLFwiYWRhcHRhdGlvblwiOls4M10sXCJ2YXJpZXR5XCI6Wzg2XSxcImVuYWJsaW5nXCI6Wzg4LDE2OV0sXCJ3aXJlbGVzc1wiOls4OV0sXCJzdWNoXCI6WzkxXSxcImFzXCI6WzkyXSxcIlJGSURcIjpbOTNdLFwidGFnc1wiOls5NF0sXCJlbWJlZGRlZFwiOls5Nl0sXCJzZW5zb3JcIjpbOTddLFwiYWN0dWF0b3JcIjpbOTldLFwibm9kZXMsXCI6WzEwMF0sXCJJb1RcIjpbMTAyLDE3OSwyMDddLFwiaGFzXCI6WzEwM10sXCJzdGVwcGVkXCI6WzEwNF0sXCJvdXRcIjpbMTA1XSxcIml0c1wiOlsxMDddLFwiaW5mYW5jeVwiOlsxMDhdLFwibmV4dFwiOlsxMTJdLFwicmV2b2x1dGlvbmFyeVwiOlsxMTNdLFwidGVjaG5vbG9neVwiOlsxMTRdLFwidHJhbnNmb3JtaW5nXCI6WzExNl0sXCJpbnRvXCI6WzExOV0sXCJmdWxseVwiOlsxMjFdLFwiaW50ZWdyYXRlZFwiOlsxMjJdLFwiRnV0dXJlXCI6WzEyM10sXCJJbnRlcm5ldC5cIjpbMTI0XSxcIkFzXCI6WzEyNV0sXCJ3ZVwiOlsxMjZdLFwibW92ZVwiOlsxMjddLFwid3d3XCI6WzEyOV0sXCIoc3RhdGljXCI6WzEzMF0sXCJwYWdlc1wiOlsxMzFdLFwid2ViKVwiOlsxMzIsMTM3XSxcIndlYjJcIjpbMTM0XSxcIihzb2NpYWxcIjpbMTM1XSxcIm5ldHdvcmtpbmdcIjpbMTM2XSxcIndlYjNcIjpbMTM5XSxcIih1YmlxdWl0b3VzXCI6WzE0MF0sXCJjb21wdXRpbmdcIjpbMTQxLDIyMl0sXCJ3ZWIpLFwiOlsxNDJdLFwibmVlZFwiOlsxNDQsMjEzXSxcImZvclwiOlsxNDUsMTYwLDIxNF0sXCJkYXRhLW9uLWRlbWFuZFwiOlsxNDZdLFwidXNpbmdcIjpbMTQ3LDE5MF0sXCJzb3BoaXN0aWNhdGVkXCI6WzE0OF0sXCJpbnR1aXRpdmVcIjpbMTQ5XSxcInF1ZXJpZXNcIjpbMTUwXSxcImluY3JlYXNlc1wiOlsxNTFdLFwic2lnbmlmaWNhbnRseS5cIjpbMTUyXSxcInBhcGVyXCI6WzE1NF0sXCJwcmVzZW50c1wiOlsxNTVdLFwiQ2xvdWRcIjpbMTU3LDE4OF0sXCJjZW50cmljXCI6WzE1OF0sXCJ2aXNpb25cIjpbMTU5LDIwOF0sXCJ3b3JsZHdpZGVcIjpbMTYxXSxcImltcGxlbWVudGF0aW9uXCI6WzE2MiwxODldLFwiVGhpbmdzLlwiOlsxNjZdLFwia2V5XCI6WzE2OF0sXCJhcHBsaWNhdGlvblwiOlsxNzJdLFwiZG9tYWluc1wiOlsxNzNdLFwidGhhdFwiOlsxNzRdLFwiYXJlXCI6WzE3NSwxODVdLFwibGlrZWx5XCI6WzE3Nl0sXCJkcml2ZVwiOlsxNzhdLFwicmVzZWFyY2hcIjpbMTgwLDIyNl0sXCJuZWFyXCI6WzE4M10sXCJmdXR1cmVcIjpbMTg0XSxcImRpc2N1c3NlZC5cIjpbMTg2XSxcIkFcIjpbMTg3XSxcIkFuZWthLFwiOlsxOTFdLFwid2hpY2hcIjpbMTkyXSxcImJhc2VkXCI6WzE5NF0sXCJvblwiOlsxOTUsMjExXSxcImludGVyYWN0aW9uXCI6WzE5Nl0sXCJwcml2YXRlXCI6WzE5OF0sXCJwdWJsaWNcIjpbMjAwXSxcIkNsb3Vkc1wiOlsyMDFdLFwicHJlc2VudGVkLlwiOlsyMDNdLFwiV2VcIjpbMjA0XSxcImNvbmNsdWRlXCI6WzIwNV0sXCJvdXJcIjpbMjA2XSxcImV4cGFuZGluZ1wiOlsyMTBdLFwiY29udmVyZ2VuY2VcIjpbMjE1XSxcIldTTixcIjpbMjE3XSxcImRpc3RyaWJ1dGVkXCI6WzIyMV0sXCJkaXJlY3RlZFwiOlsyMjNdLFwiYXRcIjpbMjI0XSxcInRlY2hub2xvZ2ljYWxcIjpbMjI1XSxcImNvbW11bml0eS5cIjpbMjI3XX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmJ1eXlhLmNvbS9wYXBlcnMvSW50ZXJuZXQtb2YtVGhpbmdzLVZpc2lvbi1GdXR1cmUyMDEzLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNsb3VkYnVzLm9yZy9wYXBlcnMvSW50ZXJuZXQtb2YtVGhpbmdzLVZpc2lvbi1GdXR1cmUyMDEzLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vdmlzLnVreS5lZHUvfmNoZXVuZy9jb3Vyc2VzL2VlNTg2L3BhcGVycy9pb3Rfc3VydmV5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LnBhcmtqb25naHl1ay5uZXQvbGVjdHVyZS8yMDE0LTJuZC1sZWN0dXJlL3ViaXF1aXRvdXMvMy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5zY2llbmNlLnNtaXRoLmVkdS9+amNhcmRlbGwvQ291cnNlcy9FR1IzMjgvUmVhZGluZ3MvSW9UJTIwVmlzaW9uLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY2xvdWRidXMuY2lzLnVuaW1lbGIuZWR1LmF1L3BhcGVycy9JbnRlcm5ldC1vZi1UaGluZ3MtVmlzaW9uLUZ1dHVyZTIwMTIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9qYXJyZXR0LmNpcy51bmltZWxiLmVkdS5hdS9wYXBlcnMvSW50ZXJuZXQtb2YtVGhpbmdzLVZpc2lvbi1GdXR1cmUyMDEyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vYXJ4aXYub3JnL3BkZi8xMjA3LjAyMDMucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LnNjaWVuY2VkaXJlY3QuY29tL3NjaWVuY2UvYXJ0aWNsZS9waWkvUzAxNjc3MzlYMTMwMDAyNDFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzEyMDcuMDIwM1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5vcmcvMTAuMTAxNi9qLmZ1dHVyZS4yMDEzLjAxLjAxMFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI0ODk0NTZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2NvcnIvY29ycjEyMDcuaHRtbCNhYnMtMTIwNy0wMjAzXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9keC5kb2kub3JnLzEwLjEwMTYvai5mdXR1cmUuMjAxMy4wMS4wMTBcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly8xMjguODQuMjEuMTk5L2Ficy8xMjA3LjAyMDN2MVwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vd3d3LnNjaWVuY2VkaXJlY3QuY29tL3NjaWVuY2UvYXJ0aWNsZS9waWkvUzAxNjc3MzlYMTMwMDAyNDFcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI0ODk0NTZcIn1dLFwiVkZOXCI6XCJGdXR1cmUgR2VuZXJhdGlvbiBDb21wdXRlciBTeXN0ZW1zXCIsXCJWXCI6MjksXCJJXCI6NyxcIkZQXCI6MTY0NSxcIkxQXCI6MTY2MCxcIkRPSVwiOlwiMTAuMTAxNi9qLmZ1dHVyZS4yMDEzLjAxLjAxMFwiLFwiQ0NcIjp7XCIzMzA1NTg1M1wiOltcImNlbnRlciBbMzBdIFNtYXJ0IFNhbnRhbmRlciBbMzFdLFwiXSxcIjU5NTI4OTI4XCI6W1wicnMgQmFuZHdpZHRoIHJlcXVpcmVtZW50IFNtYWxsIFNtYWxsIExhcmdlIE1lZGl1bSBNZWRpdW0gTWVkaXVtL0xhcmdlIEV4YW1wbGUgdGVzdGJlZHMgQXdhcmUgSG9tZSBbMzFdIFNBUCBGdXR1cmUgcmV0YWlsIGNlbnRlciBbMzJdIFNtYXJ0IFNhbnRhbmRlclszM10sIENpdHlTZW5zZSBbMzRdIFNpU1ZpQSBbMzVdIEdCUk9PUyBbMzZdLCBTRU1BVCBbMzddIEEgZmV3IHRyaWFsIGltcGxlbWVudGF0aW9ucyBbMzgsMzldIFNlbnNvcnMgaGF2ZSBhbHdheXMgYmVlbiBhbiBpbnRlZ3JhbCBwYXJ0IG9mIGZhY3Rvcnkgc2V0dXAgZm9yIHNlY3VyaXR5LCBhdXRvbWF0aW9uLCBjbGltYXRlIGNvbnRyb2wsIGV0Yy4gVGhpcyB3aWxsIGV2ZW50dWFsbHkgYmUgcmVwbGFjZWQgYnkgd2lyZWxlc3Mgc3lzdGVtIGdpdmlcIl0sXCIxNTE1Njg1MDQ0XCI6W1wiRXhhbXBsZSB0ZXN0YmVkcyBBd2FyZSBIb21lIFszMV0gU0FQIEZ1dHVyZSByZXRhaWwgY2VudGVyIFszMl0gU21hcnQgU2FudGFuZGVyWzMzXSwgQ2l0eVNlbnNlIFszNF0gU2lTVmlBIFszNV0gR0JST09TIFszNl0sIFNFTUFUIFszN10gQSBmZXcgdHJpYWwgaW1wbGVtZW50YXRpb25zIFszOCwzOV1cIixcIlszMV0gQy5cIl0sXCIxNTkyOTAzNzI0XCI6W1widHJlYXRtZW50IFsyMiwyM10uXCIsXCJbMjNdIEcuXCJdLFwiMTc1NTIyNzA2M1wiOltcIlRoZSB0ZXJtIEludGVybmV0IG9mIFRoaW5ncyB3YXMgZmlyc3QgY29pbmVkIGJ5IEtldmluIEFzaHRvbiBpbiAxOTk5IGluIHRoZSBjb250ZXh0IG9mIHN1cHBseSBjaGFpbiBtYW5hZ2VtZW50IFsxXS5cIixcIlsxXSBLLlwiXSxcIjE5NjM4NTAwNDhcIjpbXCIgdGhhbiBvbmUgZGlzdGluY3QgYXBwbGljYXRpb24gb3Igc2VydmljZS4gVGhpcyBpbXBsaWVzIG5vdCBvbmx5IG11bHRpcGxlIHRyYWZmaWMgdHlwZXMgd2l0aGluIHRoZSBuZXR3b3JrLCBidXQgYWxzbyB0aGUgYWJpbGl0eSBvZiBhIHNpbmdsZSBuZXR3b3JrIHRvIHN1cHBvcnQgYWxsIGFwcGxpY2F0aW9ucyB3aXRob3V0IFFvUyBjb21wcm9taXNlIFs2MF0uIFRoZXJlIGFyZSB0d28gYXBwbGljYXRpb24gY2xhc3NlczogdGhyb3VnaHB1dCBhbmQgZGVsYXkgdG9sZXJhbnQgZWxhc3RpYyB0cmFmZmljIG9mIChlLmcuIG1vbml0b3Jpbmcgd2VhdGhlciBwYXJhbWV0ZXJzIGF0IGxvdyBzYW1wbGluZyByYXRlcyksIGFuZCB0aGUgYmFuZHdpZHRoIGFuZCBkZWxheSBzZW5zaXRpdmUgaW5lbGFzdGljIChyZWFsLVwiXSxcIjE5NjQ2NjExMTNcIjpbXCJTZWN1cml0eSBpcyBjcml0aWNhbCB0byBhbnkgbmV0d29yayBbNTQsNTVdIGFuZCB0aGUgZmlyc3QgbGluZSBvZiBkZWZlbmNlIGFnYWluc3QgZGF0YSBjb3JydXB0aW9uIGlzIGNyeXB0b2dyYXBoeS5cIixcIls1NF0gVC5cIl0sXCIxOTY5Njc0MzY1XCI6W1wiTWFyayBXZWlzZXIsIHRoZSBmb3JlZmF0aGVyIG9mIFViaXF1aXRvdXMgQ29tcHV0aW5nICh1Ymljb21wKSwgZGVmaW5lZCBhIHNtYXJ0IGVudmlyb25tZW50IFs0XSBhcyDigJjigJh0aGUgcGh5c2ljYWwgd29ybGQgdGhhdCBpcyByaWNobHkgYW5kIGludmlzaWJseSBpbnRlcndvdmVud2l0aCBzZW5zb3JzLCBhY3R1YXRvcnMsIGRpc3BsYXlzLCBhbmQgY29tcHV0YXRpb25hbCBlbGVtZW50cywgZW1iZWRkZWQgc2VhbWxlc3NseSBpbiB0aGUgZXZlcnlkYXkgb2JqZWN0cyBvZiBvdXIgbGl2ZXMsIGFuZCBjb25uZWN0ZWQgdGhyb3VnaCBhIGNvbnRpbnVvdXMgbmV0d29ya+KAmeKAmS5cIixcIlRoaXMgaGFzIHRoZSBhYmlsaXR5IHRvIHByb3ZpZGUgYSB1YmlxdWl0b3VzIHNlbnNpbmcgY2FwYWJpbGl0eSB3aGljaCBpcyBjcml0aWNhbCBpbiByZWFsaXppbmcgdGhlIG92ZXJhbGwgdmlzaW9uIG9mIHViaWNvbXAgYXMgb3V0bGluZWQgYnlXZWlzZXIgWzRdLlwiXSxcIjE5NzE0NTkwMDVcIjpbXCJ0YWdlcyBvZiBJb1QgcmVzZWFyY2ggd2lsbCBoYXZlIGEgc2V2ZXJlIGJlYXJpbmcgb24gdGhlIGZpZWxkIGl0c2VsZiBhbmQgbmVlZHMgdG8gYmUgaW52ZXN0aWdhdGVkLiBNb3N0IG9mIHRoZSB3b3JrIHJlbGF0aW5nIHRvIElvVCBhcmNoaXRlY3R1cmUgaGFzIGJlZW4gZnJvbSB0aGUgd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmtzIHBlcnNwZWN0aXZlIFs0OF0uIEV1cm9wZWFuIFVuaW9uIHByb2plY3RzIG9mIFNFTlNFSSBbNDldIGFuZCBJbnRlcm5ldCBvZiBUaGluZ3MtQXJjaGl0ZWN0dXJlIChJb1QtQSkgWzUwXSBoYXZlIGJlZW4gYWRkcmVzc2luZyB0aGUgY2hhbGxlbmdlcyBwYXJ0aWN1bGFybHkgZnJvbSBXU04gcGVyc3BlY3RpdmUgYW5kIGhhdmUgYmVlbiB2ZXJ5IHN1Y2Nlc3NmdWwgZm9yIGRlZmluaVwiXSxcIjE5Nzg4ODUyMDVcIjpbXCJ0aXVtIChPR0MpLiBkKSBTZWN1cmUgRGF0YSBhZ2dyZWdhdGlvbiAtIEFuIGVmZmljaWVudCBhbmQgc2VjdXJlIGRhdGEgYWdncmVnYXRpb24gbWV0aG9kIGlzIHJlcXVpcmVkIGZvciBleHRlbmRpbmcgdGhlIGxpZmV0aW1lIG9mIHRoZSBuZXR3b3JrIGFzIHdlbGwgYXMgZW5zdXJpbmcgcmVsaWFibGUgZGF0YSBjb2xsZWN0ZWQgZnJvbSBzZW5zb3JzIFsxOV0uIE5vZGUgZmFpbHVyZSBiZWluZyBhIGNvbW1vbiBjaGFyYWN0ZXJpc3RpYyBvZiBXU05zLCB0aGUgbmV0d29yayB0b3BvbG9neSBzaG91bGQgaGF2ZSB0aGUgY2FwYWJpbGl0eSB0byBoZWFsIGl0c2VsZi4gRW5zdXJpbmcgc2VjdXJpdHkgaXMgY3JpdGljYWwgYXMgdGhlIHN5c3RlbSBpcyBhdXRvbWF0aWNhbGx5IGxpbmtlZCB0byBhY3R1YXRvcnMgYVwiXSxcIjE5ODY2NjIwNzZcIjpbXCJUaGUgbmV0d29yayBpcyBhbHNvIGV4dGVuZGVkIGZvciBtb25pdG9yaW5nIHNvaWwgcGFyYW1ldGVycyB3aGljaCBhbGxvd3MgaW5mb3JtZWQgZGVjaXNpb24gbWFraW5nIGFib3V0IGFncmljdWx0dXJlIFs0Ml0uXCIsXCJbNDJdIEguXCJdLFwiMTk4NzA5ODUxOVwiOltcIkEgbnVtYmVyIG9mIHByb2plY3RzIGhhdmUgYmVndW4gdG8gYWRkcmVzcyB0aGUgZGV2ZWxvcG1lbnQgb2YgcGVvcGxlIGNlbnRyaWMgKG9yIHBhcnRpY2lwYXRvcnkpIHNlbnNpbmcgcGxhdGZvcm1zIFs1MSw2Mi02NF0uXCIsXCJbNjNdIEUuXCJdLFwiMTk4Nzg3NzkzMFwiOltcIlRoZSBjb21tdW5pY2F0aW9uIHN0YWNrIGF0IHRoZSBzaW5rIG5vZGUgc2hvdWxkIGJlIGFibGUgdG8gaW50ZXJhY3R3aXRoIHRoZSBvdXRzaWRld29ybGQgdGhyb3VnaCB0aGUgSW50ZXJuZXQgdG8gYWN0IGFzIGEgZ2F0ZXdheSB0byB0aGUgV1NOIHN1Ym5ldCBhbmQgdGhlIEludGVybmV0IFsxN10uXCIsXCIoYykgV1NOIE1pZGRsZXdhcmXigJRBIG1lY2hhbmlzbSB0byBjb21iaW5lIGN5YmVyIGluZnJhc3RydWN0dXJld2l0aCBhIFNlcnZpY2VPcmllbnRlZEFyY2hpdGVjdHVyZSAoU09BKSBhbmQgc2Vuc29yIG5ldHdvcmtzIHRvIHByb3ZpZGUgYWNjZXNzIHRvIGhldGVyb2dlbmVvdXMgc2Vuc29yIHJlc291cmNlcyBpbiBhIGRlcGxveW1lbnQgaW5kZXBlbmRlbnQgbWFubmVyIFsxN10uXCJdLFwiMTk5ODg5NjQxMlwiOltcIlszMF0gRy5cIl0sXCIyMDIxMTk4MjgxXCI6W1wiSW9UIEVsZW1lbnRzIFdlIHByZXNlbnQgYSB0YXhvbm9teSB0aGF0IHdpbGwgYWlkIGluIGRlZmluaW5nIHRoZSBjb21wb25lbnRzIHJlcXVpcmVkIGZvciBJbnRlcm5ldCBvZiBUaGluZ3MgZnJvbSBhIGhpZ2ggbGV2ZWwgcGVyc3BlY3RpdmUuIFNwZWNpZmljIHRheG9ub21pZXMgb2YgZWFjaCBjb21wb25lbnQgY2FuIGJlIGZvdW5kIGVsc2V3aGVyZSBbNiwxMiwxM10uIFRoZXJlIGFyZSB0aHJlZSBJb1QgY29tcG9uZW50cyB3aGljaCBlbmFibGVzIHNlYW1sZXNzIHViaWNvbXA6IGEpIEhhcmR3YXJlIC0gbWFkZSB1cCBvZiBzZW5zb3JzLCBhY3R1YXRvcnMgYW5kIGVtYmVkZGVkIGNvbW11bmljYXRpb24gaGFyZHdhcmUgYikgTWlkZGxld2FyZSAtIG9uIGRlbWFuZCBzdG9yYWdlIGFuZCBjb21wdXRpbmcgdG9vbHMgZlwiXSxcIjIwMjU3NDk1NzVcIjpbXCJpbXBsZW1lbnRhdGlvbnMgWzM2LDM3XVwiXSxcIjIwMjkxMjI3MDhcIjpbXCJTbWFydCBncmlkIGFuZCBzbWFydCBtZXRlcmluZyBpcyBhbm90aGVyIHBvdGVudGlhbCBJb1QgYXBwbGljYXRpb24gd2hpY2ggaXMgYmVpbmcgaW1wbGVtZW50ZWQgYXJvdW5kIHRoZSB3b3JsZCBbNDBdLlwiLFwiWzQwXSBNLlwiXSxcIjIwMzEzMjgzOTVcIjpbXCJlcnMsIHJlZnJpZ2VyYXRvcnMsIHdhc2hpbmcgbWFjaGluZXMgZXRjLiwgd2lsbCBhbGxvdyBiZXR0ZXIgaG9tZSBhbmQgZW5lcmd5IG1hbmFnZW1lbnQuIFRoaXMgd2lsbCBzZWUgY29uc3VtZXJzIGJlY29tZSBpbnZvbHZlZCBpbiBJb1QgcmV2b2x1dGlvbiBpbiB0aGUgc2FtZSBtYW5uZXIgYXMgdGhlIEludGVybmV0IHJldm9sdXRpb24gaXRzZWxmIFsyNSwyNl0uIFNvY2lhbCBuZXR3b3JraW5nIGlzIHNldCB0byB1bmRlcmdvIGFub3RoZXIgdHJhbnNmb3JtYXRpb24gd2l0aCBiaWxsaW9ucyBvZiBpbnRlcmNvbm5lY3RlZCBvYmplY3RzIFsyNywyOF0uIEFuIGludGVyZXN0aW5nIGRldmVsb3BtZW50IHdpbGwgYmUgdXNpbmcgYSBUd2l0dGVyIGxpa2UgY29uY2VwdCB3aGVyZSBpbmRpdmlkdWFsIOKAl1RoaW5nc+KAmCBcIl0sXCIyMDQxNDU0NDEyXCI6W1wiQSBudW1iZXIgb2YgcHJvamVjdHMgaGF2ZSBiZWd1biB0byBhZGRyZXNzIHRoZSBkZXZlbG9wbWVudCBvZiBwZW9wbGUgY2VudHJpYyAob3IgcGFydGljaXBhdG9yeSkgc2Vuc2luZyBwbGF0Zm9ybXMgWzUxLDYyLTY0XS5cIixcIls2Ml0gQS5cIl0sXCIyMDQ0MDM1MTYyXCI6W1wiZmljZSBpbiBwcmFjdGljYWwgaW1wbGVtZW50YXRpb24gd2l0aCBtaW5vciBtb2RpZmljYXRpb25zLiA3LjYuIFBhcnRpY2lwYXRvcnkgU2Vuc2luZyBBIG51bWJlciBvZiBwcm9qZWN0cyBoYXZlIGJlZ3VuIHRvIGFkZHJlc3MgdGhlIGRldmVsb3BtZW50IG9mIHBlb3BsZSBjZW50cmljIChvciBwYXJ0aWNpcGF0b3J5KSBzZW5zaW5nIHBsYXRmb3JtcyBbNTEsNjIsIDYzLCA2NF0uIEFzIG5vdGVkIGVhcmxpZXIsIHBlb3BsZSBjZW50cmljIHNlbnNpbmcgb2ZmZXJzIHRoZSBwb3NzaWJpbGl0eSBvZiBsb3cgY29zdCBzZW5zaW5nIG9mIHRoZSBlbnZpcm9ubWVudCBsb2NhbGl6ZWQgdG8gdGhlIHVzZXIuIEl0IGNhbiB0aGVyZWZvcmUgZ2l2ZSB0aGUgY2xvc2VzdCBpbmRpY2F0aW9uIG9mIGVudmlyb25tZW50YWwgcGFyYW1ldGVyc1wiXSxcIjIwNTg0MTA0NjBcIjpbXCJub21pY3Mgb2YgSW9UIHdoaWNoIHdpbGwgbWFrZSBpdCBhIGJpZ2dlciB0aHJlYXQgZnJvbSBhdHRhY2tlcnMuIFNlY3VyaXR5IGFuZCBpZGVudGl0eSBwcm90ZWN0aW9uIGJlY29tZXMgY3JpdGljYWwgaW4gaHlicmlkIGNsb3VkcyB3aGVyZSBhIHByaXZhdGUgYXMgd2VsbCBhcyBwdWJsaWMgY2xvdWRzIHdpbGwgYmUgdXNlZCBieSBidXNpbmVzc2VzIFs1OV0uIFJlbWVtYmVyaW5nIGZvcmV2ZXIgaW4gdGhlIGNvbnRleHQgb2YgSW9UIHJhaXNlcyBtYW55IHByaXZhY3kgaXNzdWVzIGFzIHRoZSBkYXRhIGNvbGxlY3RlZCBjYW4gYmUgdXNlZCBpbiBwb3NpdGl2ZSAoZm9yIGFkdmVydGlzZW1lbnQgc2VydmljZXMpIGFuZCBuZWdhdGl2ZSB3YXlzIChmb3IgZGVmYW1hdGlvbikuIERpZ2l0YWwgZm9yZ2V0dGluZ1wiXSxcIjIwNzIxMjgxMDNcIjpbXCJBbiBlbWVyZ2luZyBmb2N1cyBpbiBtYWNoaW5lIGxlYXJuaW5nIHJlc2VhcmNoIGhhcyBiZWVuIHRoZSBmaWVsZCBvZiBkZWVwIGxlYXJuaW5nIFs3MF0sIHdoaWNoIGFpbXMgdG8gbGVhcm4gbXVsdGlwbGUgbGF5ZXJzIG9mIGFic3RyYWN0aW9uIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW50ZXJwcmV0IGdpdmVuIGRhdGEuXCIsXCJbNzBdIFkuXCJdLFwiMjA3Njk3Nzc3N1wiOltcIkZ1cnRoZXIgc2Vuc2luZyBtb2RhbGl0aWVzIGNhbiBiZSBvYnRhaW5lZCB0aHJvdWdoIHRoZSBhZGRpdGlvbiBvZiBzZW5zb3Jtb2R1bGVzIGF0dGFjaGVkIHRvIHRoZSBwaG9uZSBmb3IgYXBwbGljYXRpb24gc3BlY2lmaWMgc2Vuc2luZywgc3VjaCBhcyBhaXIgcXVhbGl0eSBzZW5zb3JzIFs2NV0gb3IgYmlvbWV0cmljIHNlbnNvcnMuXCJdLFwiMjA3OTM0ODg4MVwiOltcIlRoZXJlZm9yZSwgYSBjb250cm9sbGVkLCBvcHRpbWFsIGFwcHJvYWNoIHRvIHNlcnZlIGRpZmZlcmVudCBuZXR3b3JrIHRyYWZmaWNzLCBlYWNoIHdpdGggaXRzIG93biBhcHBsaWNhdGlvbiBRb1MgbmVlZHMgaXMgcmVxdWlyZWQgWzYxXS5cIixcIls2MV0gSC5cIl0sXCIyMDg1MDg5MzI0XCI6W1wiQWdhaW5zdCBvdXRzaWRlciBhdHRhY2tlcnMsIGVuY3J5cHRpb24gZW5zdXJlcyBkYXRhIGNvbmZpZGVudGlhbGl0eSwgd2hlcmVhcyBtZXNzYWdlIGF1dGhlbnRpY2F0aW9uIGNvZGVzIGVuc3VyZSBkYXRhIGludGVncml0eSBhbmQgYXV0aGVudGljaXR5IFs1Nl0uXCIsXCJbNTZdIEQuXCJdLFwiMjA5Mjc0NzU5NVwiOltcImxkLCBidXQgZm9yIHBhcnRpY3VsYXIgZG9tYWlucyB0aGF0IGNhbiBiZSBzZXQgdXAgYW5kIGN1c3RvbWl6ZWQgYnkgYW4gaW5kaXZpZHVhbCBmaXJtIG9yIG9yZ2FuaXphdGlvbiwgc3VjaCBhcyBmb3IgYWdyaWN1bHR1cmUgcHJvZHVjdGlvbiwgZW52aXJvbm1lbnRhbCByZXN0b3JhdGlvbiBvciByZXRhaWxpbmcu4oCWIENhY2VyZXMgYW5kIEZyaWRheSBbNF0gZGlzY3VzcyB0aGUgcHJvZ3Jlc3MsIG9wcG9ydHVuaXRpZXMgYW5kIGNoYWxsZW5nZXMgZHVyaW5nIHRoZSAyMCB5ZWFyIGFubml2ZXJzYXJ5IG9mIHViaWNvbXAuIFRoZXkgZGlzY3VzcyB0aGUgYnVpbGRpbmcgYmxvY2tzIG9mIHViaWNvbXAgYW5kIHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgdGhlIHN5c3RlbSB0byBhZGFwdCB0byB0aGUgY2hhbmdpblwiXSxcIjIwOTYzNTY5ODVcIjpbXCJlZGRlZCBjb21tdW5pY2F0aW9uIHBhcmFkaWdtIHdoaWNoIGVuYWJsZXMgZGVzaWduIG9mIG1pY3JvY2hpcHMgZm9yIHdpcmVsZXNzIGRhdGEgY29tbXVuaWNhdGlvbi4gVGhleSBoZWxwIGluIGF1dG9tYXRpYyBpZGVudGlmaWNhdGlvbiBvZiBhbnl0aGluZyB0aGV5IGFyZSBhdHRhY2hlZCB0byBhY3RpbmcgYXMgYW4gZWxlY3Ryb25pYyBiYXJjb2RlIFsxNCwxNV0uIFRoZSBwYXNzaXZlIFJGSUQgdGFncyBhcmUgbm90IGJhdHRlcnkgcG93ZXJlZCBhbmQgdGhleSB1c2UgdGhlIHBvd2VyIG9mIHRoZSByZWFkZXLigJhzIGludGVycm9nYXRpb24gc2lnbmFsIHRvIGNvbW11bmljYXRlIHRoZSBJRCB0byB0aGUgUkZJRCByZWFkZXIuIFRoaXMgaGFzIHJlc3VsdGVkIGluIG1hbnkgYXBwbGljYXRpb25zIHBhcnRpY3VsYXJsXCIsXCJsb2JhbCBkZXBsb3ltZW50cy4gQWN0aXZlIFJGSUQgcmVhZGVycyBoYXZlIHRoZWlyIG93biBiYXR0ZXJ5IHN1cHBseSBhbmQgY2FuIGluc3RhbnRpYXRlIHRoZSBjb21tdW5pY2F0aW9uLiBPZiB0aGUgc2V2ZXJhbCBhcHBsaWNhdGlvbnMsIHRoZSBtYWluIGFwcGxpY2F0aW9uIG9mIGFjdGl2ZSBSRklEIHRhZ3MgaXMgaW4gcG9ydCBjb250YWluZXJzIFsxNV0gZm9yIG1vbml0b3JpbmcgY2FyZ28uIDMuMy4yLiBXaXJlbGVzcyBTZW5zb3IgTmV0d29ya3MgKFdTTikgUmVjZW50IHRlY2hub2xvZ2ljYWwgYWR2YW5jZXMgaW4gbG93IHBvd2VyIGludGVncmF0ZWQgY2lyY3VpdHMgYW5kIHdpcmVsZXNzIGNvbW11bmljYXRpb25zIGhhdmUgbWFkZSBhdmFpbGFibGUgZWZmaWNpZW50LCBsb3cgY29zdCwgbG93IHBvd1wiLFwiY2tpbmcgYXMgd2VsbCBhcyB0aGUgRmlndXJlIDg6IFJvYWRtYXAgb2Yga2V5IHRlY2hub2xvZ2ljYWwgZGV2ZWxvcG1lbnRzIGluIHRoZSBjb250ZXh0IG9mIElvVCBhcHBsaWNhdGlvbiBkb21haW5zIGVudmlzaW9uZWQgMTUgb2JqZWN0cyBhbmQgbm8gaGlnaCBsZXZlbCBpbnRlbGxpZ2VuY2UgY2FuIGJlIGVuYWJsZWQgb24gdGhlc2UgZGV2aWNlcyBbMTVdLiBUaGVzZSBjb21wbGV4IHByb2JsZW1zIGhvd2V2ZXIgaGF2ZSBzb2x1dGlvbnMgd2hpY2ggY2FuIGJlIHByb3ZpZGVkIHVzaW5nIGNyeXB0b2dyYXBoaWMgbWV0aG9kcyBhbmQgZGVzZXJ2ZXMgbW9yZSByZXNlYXJjaCBiZWZvcmUgdGhleSBhcmUgd2lkZWx5IGFjY2VwdGVkLiBBZ2FpbnN0IG91dHNpZGVyIGF0dGFja2VycywgZW5jcnlwdGlvbiBlbnNcIl0sXCIyMTAwMzc2NzExXCI6W1wiaW5jbHVkaW5nIG11bHRpLW9iamVjdGl2ZSBjb250cm9sIHN5c3RlbXMuIENvbWJpbmVkIHdpdGggaW5mb3JtYXRpb24gZ2F0aGVyZWQgZnJvbSB0aGUgdXJiYW4gdHJhZmZpYyBjb250cm9sIHN5c3RlbSwgdmFsaWQgYW5kIHJlbGV2YW50IGluZm9ybWF0aW9uIG9uIHRyYWZmaWMgY29uZGl0aW9ucyBjYW4gYmUgcHJlc2VudGVkIHRvIHRyYXZlbGVycyBbNDNdLiBUaGUgcHJldmFsZW5jZSBvZiBCbHVldG9vdGggdGVjaG5vbG9neSAoQlQpIGRldmljZXMgcmVmbGVjdHMgdGhlIGN1cnJlbnQgSW9UIHBlbmV0cmF0aW9uIGluIGEgbnVtYmVyIG9mIGRpZ2l0YWwgcHJvZHVjdHMgc3VjaCBhcyBtb2JpbGUgcGhvbmVzLCBjYXIgaGFuZHMtZnJlZSBzZXRzLCBuYXZpZ2F0aW9uIHN5c3RlbXMsIGV0Yy4gQlQgZGV2aWNcIl0sXCIyMTA1MTAzNzc3XCI6W1wiWzhdLCBJbnRlcm5ldCBvZiBUaGluZ3MgY2FuIGJlIHJlYWxpemVkIGluIHRocmVlIHBhcmFkaWdtc+KAlGludGVybmV0LW9yaWVudGVkIChtaWRkbGV3YXJlKSwgdGhpbmdzIG9yaWVudGVkIChzZW5zb3JzKSBhbmQgc2VtYW50aWMtb3JpZW50ZWQgKGtub3dsZWRnZSkuXCIsXCJVYmlxdWl0b3VzIGhlYWx0aGNhcmUgWzhdIGhhcyBiZWVuIGVudmlzaW9uZWQgZm9yIHRoZSBwYXN0IHR3byBkZWNhZGVzLlwiLFwidGhlIG5leHQgZGVjYWRlIFs4XS5cIl0sXCIyMTA1NjgzMzIzXCI6W1wiU3BlY2lmaWMgdGF4b25vbWllcyBvZiBlYWNoIGNvbXBvbmVudCBjYW4gYmUgZm91bmQgZWxzZXdoZXJlIFs2LDEyLDEzXS5cIixcIlsxM10gTS5cIl0sXCIyMTA3NzEwMjE1XCI6W1wiU2V2ZXJhbE1BQyBwcm90b2NvbHMgaGF2ZSBiZWVuIHByb3Bvc2VkIGZvciB2YXJpb3VzIGRvbWFpbnMgd2l0aCBURE1BIChjb2xsaXNpb24gZnJlZSksIENTTUEgKGxvdyB0cmFmZmljIGVmZmljaWVuY3kpIGFuZCBGRE1BIChjb2xsaXNpb24gZnJlZSBidXQgcmVxdWlyZXMgYWRkaXRpb25hbCBjaXJjdWl0cnkgaW4gbm9kZXMpIHNjaGVtZXMgYXZhaWxhYmxlIHRvIHRoZSB1c2VyIFs1OV0uXCJdLFwiMjEwNzczNjMwMlwiOltcInJpbyBiZWNvbWVzIHZlcnkgY29tcGxleCBmb3IgaGV0ZXJvZ2VuZW91cyBzcGF0aW8tdGVtcG9yYWwgZGF0YSBbNzFdLiBOZXcgdmlzdWFsaXphdGlvbiBzY2hlbWVzIGZvciByZXByZXNlbnRhdGlvbiBvZiBoZXRlcm9nZW5lb3VzIHNlbnNvcnMgaW4gM0QgbGFuZHNjYXBlIHRoYXQgdmFyaWVzIHRlbXBvcmFsbHkgaGF2ZSB0byBiZSBkZXZlbG9wZWQgWzcyXS4gQW5vdGhlciBjaGFsbGVuZ2Ugb2YgdmlzdWFsaXppbmcgZGF0YSBjb2xsZWN0ZWQgd2l0aGluIElvVCBpcyB0aGF0IHRoZXkgYXJlIGdlby1yZWxhdGVkIGFuZCBhcmUgc3BhcnNlbHkgZGlzdHJpYnV0ZWQuIFRvIGNvcGUgd2l0aCBzdWNoIGEgY2hhbGxlbmdlLCBhIGZyYW1ld29yayBiYXNlZCBvbiBJbnRlcm5ldCBHSVMgaXMgcmVxdWlyZWQuIDcuXCJdLFwiMjExMDc1MzQ3MlwiOltcIm1lcnMgYmVjb21lIGludm9sdmVkIGluIElvVCByZXZvbHV0aW9uIGluIHRoZSBzYW1lIG1hbm5lciBhcyB0aGUgSW50ZXJuZXQgcmV2b2x1dGlvbiBpdHNlbGYgWzI1LDI2XS4gU29jaWFsIG5ldHdvcmtpbmcgaXMgc2V0IHRvIHVuZGVyZ28gYW5vdGhlciB0cmFuc2Zvcm1hdGlvbiB3aXRoIGJpbGxpb25zIG9mIGludGVyY29ubmVjdGVkIG9iamVjdHMgWzI3LDI4XS4gQW4gaW50ZXJlc3RpbmcgZGV2ZWxvcG1lbnQgd2lsbCBiZSB1c2luZyBhIFR3aXR0ZXIgbGlrZSBjb25jZXB0IHdoZXJlIGluZGl2aWR1YWwg4oCXVGhpbmdz4oCYIGluIHRoZSBob3VzZSBjYW4gcGVyaW9kaWNhbGx5IHR3ZWV0IHRoZSByZWFkaW5ncyB3aGljaCBjYW4gYmUgZWFzaWx5IGZvbGxvd2VkIGZyb20gYW55d2hlcmUgY3JlYXRpbmcgYSBUd2VldFwiXSxcIjIxMTQ2MzE4NThcIjpbXCJUaGUgSW50ZXJuZXQgTW9iaWxpdHkgYXR0cmlidXRlcyBpbiB0aGUgSVBWNiBtYXkgYWxsZXZpYXRlIHNvbWUgb2YgdGhlIGRldmljZSBpZGVudGlmaWNhdGlvbiBwcm9ibGVtczsgaG93ZXZlciwgdGhlIGhldGVyb2dlbmVvdXMgbmF0dXJlIG9mIHdpcmVsZXNzIG5vZGVzLCB2YXJpYWJsZSBkYXRhIHR5cGVzLCBjb25jdXJyZW50IG9wZXJhdGlvbnMgYW5kIGNvbmZsdWVuY2Ugb2YgZGF0YSBmcm9tIGRldmljZXMgZXhhY2VyYmF0ZXMgdGhlIHByb2JsZW0gZnVydGhlciBbMjBdLlwiLFwiWzIwXSBNLlwiXSxcIjIxMjEzOTQzNDFcIjpbXCJJbiBjb250cmFzdCB0byBXZWlzZXLigJlzIENhbG0gY29tcHV0aW5nIGFwcHJvYWNoLCBSb2dlcnMgcHJvcG9zZXMgYSBodW1hbiBjZW50cmljIHViaWNvbXAgd2hpY2ggbWFrZXMgdXNlIG9mIGh1bWFuIGNyZWF0aXZpdHkgaW4gZXhwbG9pdGluZyB0aGUgZW52aXJvbm1lbnQgYW5kIGV4dGVuZGluZyB0aGVpciBjYXBhYmlsaXRpZXMgWzVdLlwiXSxcIjIxMjMwMzMwMThcIjpbXCJWaWRlbyBiYXNlZCBJb1QgWzQxXSB3aGljaCBpbnRlZ3JhdGVzIGltYWdlIHByb2Nlc3NpbmcsIGNvbXB1dGVyIHZpc2lvbiBhbmQgbmV0d29ya2luZyBmcmFtZXdvcmtzIHdpbGwgaGVscCBkZXZlbG9wIGEgbmV3IGNoYWxsZW5naW5nIHNjaWVudGlmaWMgcmVzZWFyY2ggYXJlYSBhdCB0aGUgaW50ZXJzZWN0aW9uIG9mIHZpZGVvLCBpbmZyYXJlZCwgbWljcm9waG9uZSBhbmQgbmV0d29yayB0ZWNobm9sb2dpZXMuXCIsXCJbNDFdIEkuXCJdLFwiMjEyNDk5NDE3NVwiOltcIlRoaXMgZGVjaXNpb24gaXMgbWFkZSBhdCBydW4tdGltZSwgd2hlbiBTYWFTIGFwcGxpY2F0aW9ucyBjb250aW51b3VzbHkgc2VuZCByZXF1ZXN0cyB0byB0aGUgQW5la2EgY2xvdWQgcGxhdGZvcm0gWzQ3XS5cIixcIlRoYXQgaXMsIHdoZW5ldmVyIHByaXZhdGUgQ2xvdWQgaXMgdW5hYmxlIHRvIG1lZXQgYXBwbGljYXRpb24gUW9TIHJlcXVpcmVtZW50cywgQW5la2EgbGVhc2VzIGV4dHJhIGNhcGFiaWxpdHkgZnJvbSBwdWJsaWMgQ2xvdWQgdG8gZW5zdXJlIHRoYXQgYXBwbGljYXRpb24gaXMgYWJsZSB0byBleGVjdXRlIHdpdGhpbiBhIHNwZWNpZmllZCBkZWFkbGluZSBpbiBhIHNlYW1sZXNzIG1hbm5lciBbNDddLlwiLFwiWzQ3XSBDLlwiXSxcIjIxMjU2ODg5NjJcIjpbXCJ0cmVhdG1lbnQgWzIyLDIzXS5cIixcIlsyMl0gTC5cIl0sXCIyMTI3MjAxMTUyXCI6W1wiVGhpcyB3aWxsIHNlZSBjb25zdW1lcnMgYmVjb21lIGludm9sdmVkIGluIHRoZSBJb1QgcmV2b2x1dGlvbiBpbiB0aGUgc2FtZSBtYW5uZXIgYXMgdGhlIEludGVybmV0IHJldm9sdXRpb24gaXRzZWxmIFsyNCwyNV0uXCIsXCJbMjVdIE0uXCJdLFwiMjEyODUxOTUzNFwiOltcIm1lcnMgYmVjb21lIGludm9sdmVkIGluIElvVCByZXZvbHV0aW9uIGluIHRoZSBzYW1lIG1hbm5lciBhcyB0aGUgSW50ZXJuZXQgcmV2b2x1dGlvbiBpdHNlbGYgWzI1LDI2XS4gU29jaWFsIG5ldHdvcmtpbmcgaXMgc2V0IHRvIHVuZGVyZ28gYW5vdGhlciB0cmFuc2Zvcm1hdGlvbiB3aXRoIGJpbGxpb25zIG9mIGludGVyY29ubmVjdGVkIG9iamVjdHMgWzI3LDI4XS4gQW4gaW50ZXJlc3RpbmcgZGV2ZWxvcG1lbnQgd2lsbCBiZSB1c2luZyBhIFR3aXR0ZXIgbGlrZSBjb25jZXB0IHdoZXJlIGluZGl2aWR1YWwg4oCXVGhpbmdz4oCYIGluIHRoZSBob3VzZSBjYW4gcGVyaW9kaWNhbGx5IHR3ZWV0IHRoZSByZWFkaW5ncyB3aGljaCBjYW4gYmUgZWFzaWx5IGZvbGxvd2VkIGZyb20gYW55d2hlcmUgY3JlYXRpbmcgYSBUd2VldFwiXSxcIjIxMzI1NDk1MTNcIjpbXCJzZW5zb3IgY2FuIGRyb3Agb3V0IGZvciBhIG51bWJlciBvZiByZWFzb25zLCBzbyB0aGUgbmV0d29yayBtdXN0IGJlIHNlbGYtYWRhcHRpbmcgYW5kIGFsbG93IGZvciBtdWx0aS1wYXRoIHJvdXRpbmcuIE11bHRpLWhvcCByb3V0aW5nIHByb3RvY29scyBhcmUgdXNlZCBpbiBtb2JpbGUgYWQgaG9jIG5ldHdvcmtzIGFuZCB0ZXJyZXN0cmlhbCBXU05zIFs2OF0uIFRoZXkgYXJlIG1haW5seSBkaXZpZGVkIGludG8gdGhyZWUgY2F0ZWdvcmllcyAtIGRhdGEgY2VudHJpYywgbG9jYXRpb24gYmFzZWQgYW5kIGhpZXJhcmNoaWNhbCwgYWdhaW4gYmFzZWQgb24gZGlmZmVyZW50IGFwcGxpY2F0aW9uIGRvbWFpbnMuIEVuZXJneSBpcyB0aGUgbWFpbiBjb25zaWRlcmF0aW9uIGZvciB0aGUgZXhpc3Rpbmcgcm91dGluZ1wiXSxcIjIxMzQwODEyOTlcIjpbXCJBbHRob3VnaCB0aGlzIHByb3ZpZGVzIGEgY29tbW9uIGZyYW1ld29yayB1c2luZyBjbG91ZCBmb3IgaW5mb3JtYXRpb24gYWNjZXNzLCBhIG5ldyBzZWN1cml0eSBwYXJhZGlnbSB3aWxsIGJlIHJlcXVpcmVkIGZvciB0aGlzIHRvIGJlIGZ1bGx5IHJlYWxpemVkIFsyOV0uXCIsXCJPbmUgb2YgdGhlIG1ham9yIElvVCBhcHBsaWNhdGlvbiBhcmVhcyB3aGljaCBpcyBhbHJlYWR5IGRyYXdpbmcgYXR0ZW50aW9uIGlzIFNtYXJ0IEVudmlyb25tZW50IElvVCBbMjIsMjldLlwiLFwiWzI5XSBYLlwiXSxcIjIxNDM1OTE0NDJcIjpbXCJTZWN1cml0eSBpcyBjcml0aWNhbCB0byBhbnkgbmV0d29yayBbNTQsNTVdIGFuZCB0aGUgZmlyc3QgbGluZSBvZiBkZWZlbmNlIGFnYWluc3QgZGF0YSBjb3JydXB0aW9uIGlzIGNyeXB0b2dyYXBoeS5cIixcIls1NV0gUi5cIl0sXCIyMTUzNzA3ODExXCI6W1wibmdsZSBzZW5zb3JzIFJGSUQsIFdTTiwgU2luZ2xlIHNlbnNvcnMgQmFuZHdpZHRoIHJlcXVpcmVtZW50IFNtYWxsIFNtYWxsIExhcmdlIE1lZGl1bSBNZWRpdW0gTWVkaXVtL0xhcmdlIEV4YW1wbGUgdGVzdGJlZHMgQXdhcmUgSG9tZSBbMzFdIFNBUCBGdXR1cmUgcmV0YWlsIGNlbnRlciBbMzJdIFNtYXJ0IFNhbnRhbmRlclszM10sIENpdHlTZW5zZSBbMzRdIFNpU1ZpQSBbMzVdIEdCUk9PUyBbMzZdLCBTRU1BVCBbMzddIEEgZmV3IHRyaWFsIGltcGxlbWVudGF0aW9ucyBbMzgsMzldIFNlbnNvcnMgaGF2ZSBhbHdheXMgYmVlbiBhbiBpbnRlZ3JhbCBwYXJ0IG9mIGZhY3Rvcnkgc2V0dXAgZm9yIHNlY3VyaXR5LCBhdXRvbWF0aW9uLCBjbGltYXRlIGNvbnRyb2wsIGV0Yy4gVGhpcyB3aWxsIGV2ZW50dWFsbHlcIl0sXCIyMTU1OTA4NTk4XCI6W1wiVGhlIGFwcGxpY2F0aW9ucyBjYW4gYmUgY2xhc3NpZmllZCBiYXNlZCBvbiB0aGUgdHlwZSBvZiBuZXR3b3JrIGF2YWlsYWJpbGl0eSwgY292ZXJhZ2UsIHNjYWxlLCBoZXRlcm9nZW5laXR5LCByZXBlYXRhYmlsaXR5LCB1c2VyIGludm9sdmVtZW50IGFuZCBpbXBhY3QgWzIyXS5cIixcIk9uZSBvZiB0aGUgbWFqb3IgSW9UIGFwcGxpY2F0aW9uIGFyZWFzIHdoaWNoIGlzIGFscmVhZHkgZHJhd2luZyBhdHRlbnRpb24gaXMgU21hcnQgRW52aXJvbm1lbnQgSW9UIFsyMiwyOV0uXCIsXCJbMjJdIEEuXCJdLFwiMjE1NjYyNjgzOVwiOltcIiBwcm9ibGVtIGluIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLiBDdXJyZW50IHN0YXRlLW9mLXRoZS1hcnQgbWV0aG9kcyB1c2Ugc2hhbGxvdyBsZWFybmluZyBtZXRob2RzIHdoZXJlIHByZS1kZWZpbmVkIGV2ZW50cyBhbmQgZGF0YSBhbm9tYWxpZXMgYXJlIGV4dHJhY3RlZCB1c2luZyBzdXBlcnZpc2VkIGFuZCB1bnN1cGVydmlzZWQgbGVhcm5pbmcgWzY5XS4gVGhlIG5leHQgbGV2ZWwgb2YgbGVhcm5pbmcgaW52b2x2ZXMgaW5mZXJyaW5nIGxvY2FsIGFjdGl2aXRpZXMgYnkgdXNpbmcgdGVtcG9yYWwgaW5mb3JtYXRpb24gb2YgZXZlbnRzIGV4dHJhY3RlZCBmcm9tIHNoYWxsb3cgbGVhcm5pbmcuIFRoZSB1bHRpbWF0ZSB2aXNpb24gd2lsbCBiZSB0byBkZXRlY3QgY29tcGxleCBldmVudHMgYmFzZWQgb24gXCJdLFwiMjE2ODQ1MjIwNFwiOltcIls3XS5cIixcIlRoZSBjb21iaW5hdGlvbiBvZiB0aGVzZSBmYWN0b3JzIGhhcyBpbXByb3ZlZCB0aGUgdmlhYmlsaXR5IG9mIHV0aWxpemluZyBhIHNlbnNvciBuZXR3b3JrIGNvbnNpc3Rpbmcgb2YgYSBsYXJnZSBudW1iZXIgb2YgaW50ZWxsaWdlbnQgc2Vuc29ycywgZW5hYmxpbmcgdGhlIGNvbGxlY3Rpb24sIHByb2Nlc3NpbmcsIGFuYWx5c2lzIGFuZCBkaXNzZW1pbmF0aW9uIG9mIHZhbHVhYmxlIGluZm9ybWF0aW9uLCBnYXRoZXJlZCBpbiBhIHZhcmlldHkgb2YgZW52aXJvbm1lbnRzIFs3XS5cIixcIlRoZSBzY2llbnRpZmljIGNoYWxsZW5nZXMgdGhhdCBtdXN0IGJlIG92ZXJjb21lIGluIG9yZGVyIHRvIHJlYWxpemUgdGhlIGVub3Jtb3VzIHBvdGVudGlhbCBvZiBXU05zIGFyZSBzdWJzdGFudGlhbCBhbmQgbXVsdGlkaXNjaXBsaW5hcnkgaW4gbmF0dXJlIFs3XS5cIixcIkFsbW9zdCBhbHdheXMsIHRoZXkgY29tcHJpc2Ugb2YgbXVsdGlwbGUgQS9EIGNvbnZlcnRlcnMgZm9yIHNlbnNvciBpbnRlcmZhY2luZyBhbmQgbW9yZSBtb2Rlcm4gc2Vuc29yIG5vZGVzIGhhdmUgdGhlIGFiaWxpdHkgdG8gY29tbXVuaWNhdGUgdXNpbmcgb25lIGZyZXF1ZW5jeSBiYW5kIG1ha2luZyB0aGVtIG1vcmUgdmVyc2F0aWxlIFs3XS5cIl0sXCIyMTcwMDAwMzU5XCI6W1wiSXQgaGFzIGJlZW4gbm90ZWQgdGhhdCBlbnZpcm9ubWVudGFsIGRhdGEgY29sbGVjdGVkIGJ5IHVzZXIgZm9ybXMgYSBzb2NpYWwgY3VycmVuY3kgWzY1XS5cIixcIls2NV0gUy5cIl0sXCIyMTcwNTc3NDA4XCI6W1wiYykgTWlkZGxld2FyZSAtIEEgbWVjaGFuaXNtIHRvIGNvbWJpbmUgY3liZXIgaW5mcmFzdHJ1Y3R1cmUgd2l0aCBhIFNlcnZpY2UgT3JpZW50ZWQgQXJjaGl0ZWN0dXJlIChTT0EpIGFuZCBzZW5zb3IgbmV0d29ya3MgdG8gcHJvdmlkZSBhY2Nlc3MgdG8gaGV0ZXJvZ2VuZW91cyBzZW5zb3IgcmVzb3VyY2VzIGluIGEgZGVwbG95bWVudCBpbmRlcGVuZGVudCBtYW5uZXIgWzE3XS5cIixcIlsxN10gSC5cIl0sXCIyMTg0NTA0MTc3XCI6W1wiY2l0eVNlbnNlIFszMl0gU2lTVmlBIFszM10gR0JST09TIFszNF0sXCJdLFwiMjI4NzQzMjQ1NFwiOltcIkEgcGxhdGZvcm0gaW5kZXBlbmRlbnQgbWlkZGxld2FyZSBmb3IgZGV2ZWxvcGluZyBzZW5zb3IgYXBwbGljYXRpb25zIGlzIHJlcXVpcmVkLCBzdWNoIGFzIGFuIE9wZW4gU2Vuc29yIFdlYiBBcmNoaXRlY3R1cmUgKE9TV0EpIFsxOF0uXCIsXCJbMThdIFQuXCJdLFwiMjI5NjYxNjUxMFwiOltcInJlbWVudHMgd2l0aG91dCBpbXBhY3RpbmcgYWNjdXJhdGUgcmVjb25zdHJ1Y3Rpb24gb2YgdGhlIHNpZ25hbC4gQSBzaWduYWwgc3BhcnNlIGluIG9uZSBiYXNpcyBtYXkgYmUgcmVjb3ZlcmVkIGZyb20gYSBzbWFsbCBudW1iZXIgb2YgcHJvamVjdGlvbnMgb250byBhIHNlY29uZCBiYXNpcyB0aGF0IGlzIGluY29oZXJlbnQgd2l0aCB0aGUgZmlyc3QgWzUyXS4gVGhlIHByb2JsZW0gcmVkdWNlcyB0byBmaW5kaW5nIHNwYXJzZSBzb2x1dGlvbnMgdGhyb3VnaCBzbWFsbGVzdCBsMS1ub3JtIGNvZWZmaWNpZW50IHZlY3RvciB0aGF0IGFncmVlcyB3aXRoIHRoZSBtZWFzdXJlbWVudHMuIEluIHRoZSB1YmlxdWl0b3VzIHNlbnNpbmcgY29udGV4dCwgdGhpcyBoYXMgaW1wbGljYXRpb25zIGZvciBkYXRhIGNvbXByXCJdLFwiMjI5ODQwNzMwMVwiOltcIlNlY3VyaXR5IGlzIGNyaXRpY2FsIHRvIGFueSBuZXR3b3JrIFs1NCw1NV0gYW5kIHRoZSBmaXJzdCBsaW5lIG9mIGRlZmVuY2UgYWdhaW5zdCBkYXRhIGNvcnJ1cHRpb24gaXMgY3J5cHRvZ3JhcGh5LlwiLFwiLCBbNTRdKSBhcmUgYmFzZWQgb24gdGhlIGJlbmNobWFyayBwcm90b2NvbCBEZWx1Z2UgWzU1XS5cIixcIls1NV0gRC5cIl0sXCIyMzQwNDUyNDg2XCI6W1wiaW1wbGVtZW50YXRpb25zIFszNiwzN11cIixcIkNvbXBsZW1lbnRlZCBieSBvdGhlciBkYXRhIHNvdXJjZXMgc3VjaCBhcyB0cmFmZmljIHNpZ25hbHMsIG9yIGJ1cyBHUFMsIHJlc2VhcmNoIHByb2JsZW1zIHRoYXQgY2FuIGJlIGFkZHJlc3NlZCBpbmNsdWRlIHZlaGljbGUgdHJhdmVsIHRpbWUgb24gbW90b3J3YXlzIGFuZCBhcnRlcmlhbCBzdHJlZXRzLCBkeW5hbWljICh0aW1lIGRlcGVuZGVudCkgT+KAk0QgbWF0cmljZXMgb24gdGhlIG5ldHdvcmssIGlkZW50aWZpY2F0aW9uIG9mIGNyaXRpY2FsIGludGVyc2VjdGlvbnMsIGFuZCBhY2N1cmF0ZSBhbmQgcmVsaWFibGUgcmVhbCB0aW1lIHRyYW5zcG9ydCBuZXR3b3JrIHN0YXRlIGluZm9ybWF0aW9uIFszN10uXCIsXCJBbm90aGVyIGltcG9ydGFudCBhcHBsaWNhdGlvbiBpbm1vYmlsZSBJb1QgZG9tYWluIGlzIGVmZmljaWVudCBsb2dpc3RpY3MgbWFuYWdlbWVudCBbMzddLlwiXX0sXCJQUlwiOlsyMTA1MTAzNzc3LDIxMTkwNDY2NDIsMjAzODE5NDIyMCwyMDY4ODQ5Mjc3LDIwNTg0MDEyMTIsMjEzNDI5NTA1MywxNzU1MjI3MDYzLDE5NzIwMTIxNDcsMjExNDYyMzIyMSwxOTY3NTYxMTk0LDE5Nzk1MTk0NjIsMTgzNzk4Mjk1MywyNTY0NTY2MjIxLDE5OTIwMjUxOTYsMjYwMjk1NjYzMCwyMDAzNTQ0Mjk1LDIwMzc3NTk0MTcsMjEwNDkyNzgwNywyMDI2ODkyNDU5LDIwNzI2NDE4OTIsMjEwNTEwMzc3NywyMTE5MDQ2NjQyLDIwMzgxOTQyMjAsMjA2ODg0OTI3NywyMDU4NDAxMjEyLDIxMzQyOTUwNTMsMTc1NTIyNzA2MywxOTcyMDEyMTQ3LDIxMTQ2MjMyMjEsMTk2NzU2MTE5NCwxOTc5NTE5NDYyLDE4Mzc5ODI5NTMsMjU2NDU2NjIyMSwxOTkyMDI1MTk2LDI2MDI5NTY2MzAsMjAwMzU0NDI5NSwyMDM3NzU5NDE3LDIxMDQ5Mjc4MDcsMjAyNjg5MjQ1OSwyMDcyNjQxODkyXSxcIkFORlwiOlt7XCJGTlwiOlwiSmF5YXZhcmRoYW5hXCIsXCJMTlwiOlwiR3ViYmlcIixcIlNcIjoxfSx7XCJGTlwiOlwiUmFqa3VtYXJcIixcIkxOXCI6XCJCdXl5YVwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJTbGF2ZW5cIixcIkxOXCI6XCJNYXJ1c2ljXCIsXCJTXCI6M30se1wiRk5cIjpcIk1hcmltdXRodVwiLFwiTE5cIjpcIlBhbGFuaXN3YW1pXCIsXCJTXCI6NH1dLFwiQlZcIjpcIkZ1dHVyZSBHZW5lcmF0aW9uIENvbXB1dGVyIFN5c3RlbXNcIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiRWxzZXZpZXIgU2NpZW5jZSBQdWJsaXNoZXJzIEIuIFYuXCJ9In0seyJsb2dwcm9iIjotMTQuOTA3LCJrZXNFbnRpdHlJZCI6Mzg0NjYzLCJJZCI6MjE1ODA0OTgyMSwiVGkiOiJjaG9yZCBhIHNjYWxhYmxlIHBlZXIgdG8gcGVlciBsb29rdXAgc2VydmljZSBmb3IgaW50ZXJuZXQgYXBwbGljYXRpb25zIiwiWSI6MjAwMSwiRCI6IjIwMDEtMTAtMDEiLCJSSWQiOlsyMTE4NDI4MTkzLDIxNjMwNTkxOTAsMjEwNDIxMDg5NCwyMTc0NTA3ODY5LDIxNjQxOTI3MjIsMjE0NDU1MzA3OCwyMTUwNjc2NTg2LDE2NjM0OTM2NDksMjEyNTg1NTc1MCwyMDIwNzY1NjUyLDIwMDA4NzYwMjMsMjEwNDExMjg0OSw3NDQ0OTQ3MywyMDY0MzYwNTQzLDE2NDIwMjczNDgsOTU0MzIxNDksMTcwMDM4NzEzMSwxNzI1NDE0MjA2LDY1MzUxMDk0LDE1Mjg1NDU4OTcsMjE0NDA0NzAyNiwyMTI3NTU1MTQzLDIxMjIyNjk5MjVdLCJBQSI6W3siQXVOIjoiaW9uIHN0b2ljYSJ9LHsiQXVOIjoicm9iZXJ0IHRhcHBhbiBtb3JyaXMifSx7IkF1TiI6ImRhdmlkIHIga2FyZ2VyIn0seyJBdU4iOiJtIGZyYW5zIGthYXNob2VrIn0seyJBdU4iOiJoYXJpIGJhbGFrcmlzaG5hbiJ9XSwiRiI6W3siRk4iOiJrb29yZGUifSx7IkZOIjoia2V5IGJhc2VkIHJvdXRpbmcifSx7IkZOIjoiY29udGVudCBhZGRyZXNzYWJsZSBuZXR3b3JrIn0seyJGTiI6ImRlYWQgcGVlciBkZXRlY3Rpb24ifSx7IkZOIjoic2tpcCBncmFwaCJ9LHsiRk4iOiJjaG9yZCJ9LHsiRk4iOiJkaXN0cmlidXRlZCBoYXNoIHRhYmxlIn0seyJGTiI6InBhc3RyeSJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkNob3JkOiBBIHNjYWxhYmxlIHBlZXItdG8tcGVlciBsb29rdXAgc2VydmljZSBmb3IgaW50ZXJuZXQgYXBwbGljYXRpb25zXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTMzLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkFcIjpbMF0sXCJmdW5kYW1lbnRhbFwiOlsxXSxcInByb2JsZW1cIjpbMl0sXCJ0aGF0XCI6WzMsMTMsMjksMTExXSxcImNvbmZyb250c1wiOls0XSxcInBlZXItdG8tcGVlclwiOls1XSxcImFwcGxpY2F0aW9uc1wiOls2XSxcImlzXCI6WzcsMTAwLDExM10sXCJ0b1wiOls4LDc3XSxcImVmZmljaWVudGx5XCI6WzksODRdLFwibG9jYXRlXCI6WzEwXSxcInRoZVwiOlsxMSw0NSw3MCw3NSw3OSw5MCw5OCwxMTksMTI4XSxcIm5vZGVcIjpbMTIsNzYsMTI0XSxcInN0b3Jlc1wiOlsxNF0sXCJhXCI6WzE1LDI1LDQxLDQ4LDYyXSxcInBhcnRpY3VsYXJcIjpbMTZdLFwiZGF0YVwiOlsxNyw2Nl0sXCJpdGVtLlwiOlsxOF0sXCJUaGlzXCI6WzE5XSxcInBhcGVyXCI6WzIwXSxcInByZXNlbnRzXCI6WzIxXSxcIkNob3JkXCI6WzIzLDMzLDU5LDgyLDExMiwxMzFdLFwiLFwiOlsyNF0sXCJkaXN0cmlidXRlZFwiOlsyNl0sXCJsb29rdXBcIjpbMjddLFwicHJvdG9jb2xcIjpbMjhdLFwiYWRkcmVzc2VzXCI6WzMwXSxcInRoaXNcIjpbMzFdLFwicHJvYmxlbS5cIjpbMzJdLFwicHJvdmlkZXNcIjpbMzRdLFwic3VwcG9ydFwiOlszNV0sXCJmb3JcIjpbMzZdLFwianVzdFwiOlszN10sXCJvbmVcIjpbMzhdLFwib3BlcmF0aW9uOlwiOlszOV0sXCJnaXZlblwiOls0MF0sXCJrZXksXCI6WzQyXSxcIml0XCI6WzQzXSxcIm1hcHNcIjpbNDRdLFwia2V5XCI6WzQ2LDYzLDgwXSxcIm9udG9cIjpbNDddLFwibm9kZS5cIjpbNDldLFwiRGF0YVwiOls1MF0sXCJsb2NhdGlvblwiOls1MV0sXCJjYW5cIjpbNTIsOTNdLFwiYmVcIjpbNTNdLFwiZWFzaWx5XCI6WzU0XSxcImltcGxlbWVudGVkXCI6WzU1XSxcIm9uXCI6WzU2XSxcInRvcFwiOls1N10sXCJvZlwiOls1OCwxMzBdLFwiYnlcIjpbNjAsMTIyXSxcImFzc29jaWF0aW5nXCI6WzYxXSxcIndpdGhcIjpbNjQsMTE1LDEyN10sXCJlYWNoXCI6WzY1LDEyM10sXCJpdGVtLFwiOls2N10sXCJhbmRcIjpbNjgsODgsOTIsMTA4LDExOF0sXCJzdG9yaW5nXCI6WzY5XSxcImtleS9kYXRhXCI6WzcxXSxcIml0ZW1cIjpbNzJdLFwicGFpclwiOls3M10sXCJhdFwiOls3NF0sXCJ3aGljaFwiOls3OF0sXCJtYXBzLlwiOls4MV0sXCJhZGFwdHNcIjpbODNdLFwiYXNcIjpbODVdLFwibm9kZXNcIjpbODZdLFwiam9pblwiOls4N10sXCJsZWF2ZVwiOls4OV0sXCJzeXN0ZW0sXCI6WzkxXSxcImFuc3dlclwiOls5NF0sXCJxdWVyaWVzXCI6Wzk1XSxcImV2ZW5cIjpbOTZdLFwiaWZcIjpbOTddLFwic3lzdGVtXCI6Wzk5XSxcImNvbnRpbnVvdXNseVwiOlsxMDFdLFwiY2hhbmdpbmcuXCI6WzEwMl0sXCJSZXN1bHRzXCI6WzEwM10sXCJmcm9tXCI6WzEwNF0sXCJ0aGVvcmV0aWNhbFwiOlsxMDVdLFwiYW5hbHlzaXMsXCI6WzEwNl0sXCJzaW11bGF0aW9ucyxcIjpbMTA3XSxcImV4cGVyaW1lbnRzXCI6WzEwOV0sXCJzaG93XCI6WzExMF0sXCJzY2FsYWJsZSxcIjpbMTE0XSxcImNvbW11bmljYXRpb25cIjpbMTE2XSxcImNvc3RcIjpbMTE3XSxcInN0YXRlXCI6WzEyMF0sXCJtYWludGFpbmVkXCI6WzEyMV0sXCJzY2FsaW5nXCI6WzEyNV0sXCJsb2dhcml0aG1pY2FsbHlcIjpbMTI2XSxcIm51bWJlclwiOlsxMjldLFwibm9kZXMuXCI6WzEzMl19fSxcIlNcIjpbe1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy53d3ctdXNlcnMuaXRsYWJzLnVtbi5lZHUvY2xhc3Nlcy9mYWxsLTIwMDgvY3NjaTgxMDEvcGFwZXJzL2Nob3JkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY29uZmVyZW5jZXMuc2lnY29tbS5vcmcvc2lnY29tbS8yMDAxL3AxMi1zdG9pY2EucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wZG9zLmNzYWlsLm1pdC5lZHUvcGFwZXJzL2Nob3JkJTNBc2lnY29tbTAxL2Nob3JkX3NpZ2NvbW0ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vd3d3LmNzLnV0ZXhhcy5lZHUvdXNlcnMvYnJvd25lL0NTMzk1VGYyMDAyL1BhcGVycy9DaG9yZC1wMTQ5LXN0b2ljYS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2JucmcuZWVjcy5iZXJrZWxleS5lZHUvfnJhbmR5L0NvdXJzZXMvQ1MyNjguRjA4L3BhcGVycy8zMF9wMTItc3RvaWNhLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmNvcm5lbGwuZWR1L3Blb3BsZS9lZ3MvY3M2MTUtc3ByaW5nMDcvY2hvcmQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZWVjcy5oYXJ2YXJkLmVkdS9+bWVtYS9jb3Vyc2VzL2NzMjY0L3BhcGVycy9jaG9yZC1zaWdjb21tMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jcy5icm93bi5lZHUvY291cnNlcy9jc2NpMjk1MC1nL3BhcGVycy9jaG9yZC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy52aXJnaW5pYS5lZHUvfmNzNzU3L3BhcGVycy9DSE9SRC1wYXBlci5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2xzaXJ3d3cuZXBmbC5jaC9jb3Vyc2VzL2Rpcy8yMDAzd3MvcGFwZXJzL3AxMi1zdG9pY2EucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3NkLnVvYy5nci9+aHk1NTgvcGFwZXJzL2Nob3JkX3NpZ2NvbW0ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9tanJ1dGhlcmZvcmQub3JnL2ZpbGVzLzIwMDktU3ByaW5nLUNPTVAtNDcwNC1DaG9yZC1TSUdDT01NMjAwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2NpdGVzZWVyeC5pc3QucHN1LmVkdS92aWV3ZG9jL2Rvd25sb2FkP2RvaT0xMC4xLjEuMTA1LjM2NzMmcmVwPXJlcDEmdHlwZT1wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy51b2kuZ3IvfnBpdG91cmEvY291cnNlcy9wMnAvY2hvcmRfc2lnY29tbS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jYy5nYXRlY2guZWR1L2NsYXNzZXMvQVkyMDA3L2NzNzI2MF9zcHJpbmcvcGFwZXJzL2Nob3JkLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmNtdS5lZHUvfnNyaW5pLzE1LTc0NC9yZWFkaW5ncy9TKzAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY3MtcHViLmJ1LmVkdS9ncm91cHMvbnJnL3JlYWRpbmdsaXN0L3N0b2ljYS1zaWdjb21tMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9mdWJpY2EubHNkLnVmY2cuZWR1LmJyL3dpa2kvbGliL2V4ZS9mZXRjaC5waHA/aWQ9c2RncmFkJTNBMjAwNi4xJmNhY2hlPWNhY2hlJm1lZGlhPXNkZ3JhZDpjaG9yZF9zaWdjb21tMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY29sb3N0YXRlLmVkdS9+bWFzc2V5L1RlYWNoaW5nL2NzNTU3L1Jlc3RyaWN0ZWRBY2Nlc3MvUGFwZXJzL3NtKzAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY291cnNlcy5jc2FpbC5taXQuZWR1LzYuODk1L2ZhbGwwMi9wYXBlcnMvU3RvaWNhL2Nob3JkX3NpZ2NvbW0ucGRmXCJ9XSxcIlZGTlwiOlwiQUNNIFNwZWNpYWwgSW50ZXJlc3QgR3JvdXAgb24gRGF0YSBDb21tdW5pY2F0aW9uXCIsXCJWU05cIjpcIlNJR0NPTU1cIixcIlZcIjozMSxcIklcIjo0LFwiRlBcIjoxNDksXCJMUFwiOjE2MCxcIkRPSVwiOlwiMTAuMTE0NS85NjQ3MjMuMzgzMDcxXCIsXCJDQ1wiOntcIjY1MzUxMDk0XCI6W1wiQXJjaGl2YWwgSW50ZXJtZW1vcnkgdXNlcyBhbiBvZmYtbGluZSBjb21wdXRlZCB0cmVlIHRvIG1hcCBsb2dpY2FsIGFkZHJlc3NlcyB0byBtYWNoaW5lcyB0aGF0IHN0b3JlIHRoZSBkYXRhIFsgNCBdLlwiXSxcIjc0NDQ5NDczXCI6W1wiVGhlIEZyZWVuZXQgcGVlci10by1wZWVyIHN0b3JhZ2Ugc3lzdGVtIFsgNCAsIDVdLCBsaWtlIENob3JkLCBpcyBkZWNlbnRyYWxpemVkIGFuZCBzeW1tZXRyaWMgYW5kIGF1dG9tYXRpY2FsbHkgYWRhcHRzIHdoZW4gaG9zdHMgbGVhdmUgYW5kIGpvaW4uXCJdLFwiOTU0MzIxNDlcIjpbXCJUaGUgQ2hvcmQgcHJvdG9jb2wgaXMgYWxzbyBzaW1pbGFyIHRvIFBhc3RyeSwgdGhlIGxvY2F0aW9uIGFsZ29yaXRobSB1c2VkIGluIFBBU1QgWyA4IF0uXCJdLFwiMTUyODU0NTg5N1wiOltcIldlIHVzZSBhIHByZXZpb3VzbHkgZGV2ZWxvcGVkIGNvbnNpc3RlbnQgaGFzaCBmdW5jdGlvbiBbMTEsICAxMyBdLCB3aGljaCBoYXMgc2V2ZXJhbCBnb29kIHByb3BlcnRpZXMuXFx1MDAxYlRvIGFjaGlldmUgdGhlIGJvdW5kIG9uIGxvYWQgd2l0aCBzbWFsbCAsIGVhY2ggbm9kZSBhY3R1YWxseSBuZWVkcyB0byBydW4g4oCcdmlydHVhbCBub2RlcyzigJ0gZWFjaCB3aXRoIGl0cyBvd24gaGFzaGVkIGlkZW50aWZpZXIgWyAxMyBdLlwiXSxcIjE2NDIwMjczNDhcIjpbXCJDb29wZXJhdGl2ZSBNaXJyb3JpbmcsIGFzIG91dGxpbmVkIGluIGEgcmVjZW50IHByb3Bvc2FsIFsgNiBdLlwiXSxcIjE2NjM0OTM2NDlcIjpbXCJUaGUgRnJlZW5ldCBwZWVyLXRvLXBlZXIgc3RvcmFnZSBzeXN0ZW0gWzQsICA1IF0sIGxpa2UgQ2hvcmQsIGlzIGRlY2VudHJhbGl6ZWQgYW5kIHN5bW1ldHJpYyBhbmQgYXV0b21hdGljYWxseSBhZGFwdHMgd2hlbiBob3N0cyBsZWF2ZSBhbmQgam9pbi5cIl0sXCIxNzAwMzg3MTMxXCI6W1wiVGhlIGV4YWN0IG1lc3NhZ2UgZm9ybWF0cyBhcmUgZGVzY3JpYmVkIGluIHRoZSBYRFIgcHJvdG9jb2wgZGVzY3JpcHRpb24gbGFuZ3VhZ2UgWyAyMCBdLlwiXSxcIjE3MjU0MTQyMDZcIjpbXCJUaGUgR2xvYmUgc3lzdGVtIFsgMyBdIGhhcyBhIHdpZGUtYXJlYSBsb2NhdGlvbiBzZXJ2aWNlIHRvIG1hcCBvYmplY3QgaWRlbnRpZmllcnMgdG8gbG9jYXRpb25zIHRvIHN1cHBvcnQgbW92aW5nIG9iamVjdHMuXCJdLFwiMjAwMDg3NjAyM1wiOltcIlRoZSBkaXN0cmlidXRlZCBkYXRhIGxvY2F0aW9uIHByb3RvY29sIGRldmVsb3BlZCBieSBQbGF4dG9uIGV0IGFsLiBbIDcgXSwgYSB2YXJpYW50IG9mIHdoaWNoIGlzIHVzZWQgaW4gT2NlYW5TdG9yZSBbMTJdLCBpcyBwZXJoYXBzIHRoZSBjbG9zZXN0IGFsZ29yaXRobSB0byB0aGUgQ2hvcmQgcHJvdG9jb2wuXCJdLFwiMjAyMDc2NTY1MlwiOltcIlRoZSBDaG9yZCBwcm90b2NvbCB1c2VzIGEgdmFyaWFudCBvZiBjb25zaXN0ZW50IGhhc2hpbmcgWyAxMSBdIHRvIGFzc2lnbiBrZXlzIHRvIENob3JkIHNlcnZlciBub2Rlcy5cXHUwMDFiV2UgdXNlIGEgcHJldmlvdXNseSBkZXZlbG9wZWQgY29uc2lzdGVudCBoYXNoIGZ1bmN0aW9uIFsgMTEgLCAxM10sIHdoaWNoIGhhcyBzZXZlcmFsIGdvb2QgcHJvcGVydGllcy5cXHUwMDFiVGhlIGZvbGxvd2luZyByZXN1bHRzIGFyZSBwcm92ZW4gaW4gdGhlIHBhcGVyIHRoYXQgaW50cm9kdWNlZCBjb25zaXN0ZW50IGhhc2hpbmcgWyAxMSBdOlxcdTAwMWJBcyBpcyBkaXNjdXNzZWQgaW4gdGhlIHdvcmsgb24gY29uc2lzdGVudCBoYXNoaW5nIFsgMTEgXSwgd2l0aCB0aGUgcHJvcGVyIGNob2ljZSBvZiBoYXNoIGZ1bmN0aW9uIHRoZSBpZGVudGlmaWVycyBmb3Igbm9kZXMgYW5kIGtleXMgYXJlIGVmZmVjdGl2ZWx5IHJhbmRvbTogYWxsIGFuYWx5c2VzIGNhbiBiZSBjYXJyaWVkIG91dCBhcyBpZiB0aGUgbm9kZXMgZW5kZWQgdXAgYXQgcmFuZG9tIHBvaW50cyBvbiB0aGUgaWRlbnRpZmllciBjaXJjbGUuXCJdLFwiMjA2NDM2MDU0M1wiOltcIkFyY2hpdmFsIEludGVybWVtb3J5IHVzZXMgYW4gb2ZmLWxpbmUgY29tcHV0ZWQgdHJlZSB0byBtYXAgbG9naWNhbCBhZGRyZXNzZXMgdG8gbWFjaGluZXMgdGhhdCBzdG9yZSB0aGUgZGF0YSBbIDMgXS5cXHUwMDFiZmluZ2VyWzJdLmludGVydmFsID0gW2ZpbmdlclsyXS5zdGFydCwgZmluZ2VyWyAzIF0uc3RhcnQpIGZpbmdlclszXS5pbnRlcnZhbCA9IFtmaW5nZXJbM10uc3RhcnQsIDEpXFx1MDAxYmZpbmdlclsyXS5pbnRlcnZhbCA9IFtmaW5nZXJbMl0uc3RhcnQsIGZpbmdlclszXS5zdGFydCkgZmluZ2VyWyAzIF0uaW50ZXJ2YWwgPSBbZmluZ2VyWzNdLnN0YXJ0LCAxKVxcdTAwMWJmaW5nZXJbMl0uaW50ZXJ2YWwgPSBbZmluZ2VyWzJdLnN0YXJ0LCBmaW5nZXJbM10uc3RhcnQpIGZpbmdlclszXS5pbnRlcnZhbCA9IFtmaW5nZXJbIDMgXS5zdGFydCwgMSlcXHUwMDFiZmluZ2VyWzJdLnN0YXJ0ID0gMyBmaW5nZXJbIDMgXS5zdGFydCA9IDUgKGEpXCJdLFwiMjEwNDExMjg0OVwiOltcIlRvIGhhbmRsZSBtYW55IGNvbm5lY3Rpb25zIGFuZCBSUENzIHNpbXVsdGFuZW91c2x5LCB0aGUgcHJvZ3JhbXMgdXNlIFNGU+KAmXMgYXN5bmNocm9ub3VzIFJQQyBsaWJyYXJ5IFsgMTUgXS5cIl0sXCIyMTA0MjEwODk0XCI6W1wiVGhlIGRpc3RyaWJ1dGVkIGRhdGEgbG9jYXRpb24gcHJvdG9jb2wgZGV2ZWxvcGVkIGJ5IFBsYXh0b24gZXQgYWwuIFs3XSwgYSB2YXJpYW50IG9mIHdoaWNoIGlzIHVzZWQgaW4gT2NlYW5TdG9yZSBbIDEyIF0sIGlzIHBlcmhhcHMgdGhlIGNsb3Nlc3QgYWxnb3JpdGhtIHRvIHRoZSBDaG9yZCBwcm90b2NvbC5cIl0sXCIyMTIyMjY5OTI1XCI6W1wiRE5TIHByb3ZpZGVzIGEgaG9zdCBuYW1lIHRvIElQIGFkZHJlc3MgbWFwcGluZyBbIDE1IF0uXCJdLFwiMjEyNTg1NTc1MFwiOltcIlRoZSBDaG9yZCBzeXN0ZW0gY2FuIGFsc28gYmUgdXNlZCBieSByZXNvdXJjZSBkaXNjb3Zlcnkgc2VydmVycyBzdG9yaW5nIGJpbmRpbmdzIGJldHdlZW4gbmV0d29ya2VkIHNlcnZpY2VzIChuYW1lcykgYW5kIHRoZWlyIGxvY2F0aW9ucyAodmFsdWVzKSBbIDEgLCAxMCwgMjEsIDIzXS5cIl0sXCIyMTI3NTU1MTQzXCI6W1wiSW5mb3JtYXRpb24gYWJvdXQgYW4gb2JqZWN0IGlzIHN0b3JlZCBpbiBwYXJ0aWN1bGFyIGxlYWYgZG9tYWluIGFuZCBwb2ludGVyIGNhY2hlcyBwcm92aWRlIHNlYXJjaCBzaG9ydCBjdXRzIFsgMjIgXS5cIl0sXCIyMTQ0MDQ3MDI2XCI6W1wiQXMgc2hvd24gaW4gWyA4IF0gaW4gdGhlIGNvbnRleHQgb2Ygcm91dGUgdXBkYXRlcywgdGhpcyBjaG9pY2UgaXMgbGlrZWx5IHRvIGVsaW1pbmF0ZSBwcm90b2NvbCBzZWxmLXN5bmNocm9uaXphdGlvbiwgaS5lLiwgYWxsIG5vZGVzIGludm9raW5nIHRoZSBzdGFiaWxpemF0aW9uIHByb3RvY29sIGF0IHRoZSBzYW1lIHRpbWUuXCJdLFwiMjE1MDY3NjU4NlwiOltcIlRoZXNlIENob3JkIG5vZGVzIGFyZSBwYXJ0IG9mIGFuIGV4cGVyaW1lbnRhbCBkaXN0cmlidXRlZCBmaWxlIHN5c3RlbSBbIDcgXSwgdGhvdWdoIHRoaXMgc2VjdGlvbiBjb25zaWRlcnMgb25seSB0aGUgQ2hvcmQgY29tcG9uZW50IG9mIHRoZSBzeXN0ZW0uXCJdLFwiMjE2MzA1OTE5MFwiOltcIkNBTiB1c2VzIGEgLWRpbWVuc2lvbmFsIENhcnRlc2lhbiBjb29yZGluYXRlIHNwYWNlIChmb3Igc29tZSBmaXhlZCApIHRvIGltcGxlbWVudCBhIGRpc3RyaWJ1dGVkIGhhc2ggdGFibGUgdGhhdCBtYXBzIGtleXMgb250byB2YWx1ZXMgWyAyMCBdLlwiXSxcIjIxNjQxOTI3MjJcIjpbXCJDaG9yZOKAmXMgcm91dGluZyBwcm9jZWR1cmUgbWF5IGJlIHRob3VnaHQgb2YgYXMgYSBvbmVkaW1lbnNpb25hbCBhbmFsb2d1ZSBvZiB0aGUgR3JpZCBsb2NhdGlvbiBzeXN0ZW0gWyAxNCBdLlwiXSxcIjIxNzQ1MDc4NjlcIjpbXCJUaGUgQ2hvcmQgc3lzdGVtIG1heSBhbHNvIGJlIGNvbXBhcmVkIHRvIHRvIEZyZWVuZXQgWzUsICA2IF0uIExpa2UgRnJlZW5ldCwgQ2hvcmQgaXMgZGVjZW50cmFsaXplZCwgc3ltbWV0cmljLCBhbmQgYXV0b21hdGljYWxseSBhZGFwdHMgd2hlbiBob3N0cyBsZWF2ZSBhbmQgam9pbi5cIl19LFwiUFJcIjpbMjExODQyODE5MywyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMTY1MDY3NTUwOSwyMTE5MjQ1MTA2LDIxMjM0ODI0NjIsMjE1MDY3NjU4NiwyMTA0MjEwODk0LDIxNzQ1MDc4NjksMjA1NjM2MzM1MywyMDA3MjE5MzA0LDIwMjA3NjU2NTIsMjEyMzgyMDgyMCwxNTg0NjM1NDU5LDIwMDA4NzYwMjMsMjE2OTA0NzIyNiwyMTYyNzMzNjc3LDE1MjA5MTQ5NDMsMjE1NjY0NDUwMSwxOTcwNTY0Nzc4LDIxMTg0MjgxOTMsMjE2Nzg5ODQxNCwyMTYzMDU5MTkwLDE2NTA2NzU1MDksMjExOTI0NTEwNiwyMTIzNDgyNDYyLDIxNTA2NzY1ODYsMjEwNDIxMDg5NCwyMTc0NTA3ODY5LDIwNTYzNjMzNTMsMjAwNzIxOTMwNCwyMDIwNzY1NjUyLDIxMjM4MjA4MjAsMTU4NDYzNTQ1OSwyMDAwODc2MDIzLDIxNjkwNDcyMjYsMjE2MjczMzY3NywxNTIwOTE0OTQzLDIxNTY2NDQ1MDEsMTk3MDU2NDc3OF0sXCJBTkZcIjpbe1wiRk5cIjpcIklvblwiLFwiTE5cIjpcIlN0b2ljYVwiLFwiU1wiOjF9LHtcIkZOXCI6XCJSb2JlcnQgVGFwcGFuXCIsXCJMTlwiOlwiTW9ycmlzXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkRhdmlkIFIuXCIsXCJMTlwiOlwiS2FyZ2VyXCIsXCJTXCI6M30se1wiRk5cIjpcIk0uIEZyYW5zXCIsXCJMTlwiOlwiS2Fhc2hvZWtcIixcIlNcIjo0fSx7XCJGTlwiOlwiSGFyaVwiLFwiTE5cIjpcIkJhbGFrcmlzaG5hblwiLFwiU1wiOjV9XSxcIkJWXCI6XCJhY20gc3BlY2lhbCBpbnRlcmVzdCBncm91cCBvbiBkYXRhIGNvbW11bmljYXRpb25cIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiQUNNXCJ9In0seyJsb2dwcm9iIjotMTUuMzc3LCJrZXNFbnRpdHlJZCI6NjA1MzA3LCJJZCI6MTYyNzU5OTk2NiwiVGkiOiJldm9sdXRpb24gb2YgbmV0d29ya3MgZnJvbSBiaW9sb2dpY2FsIG5ldHMgdG8gdGhlIGludGVybmV0IGFuZCB3d3ciLCJZIjoyMDAzLCJEIjoiMjAwMy0wMy0yNyIsIkFBIjpbeyJBdU4iOiJzIG4gZG9yb2dvdnRzZXYifSx7IkF1TiI6ImogZiBmIG1lbmRlcyJ9XSwiRiI6W3siRk4iOiJwaGVub21lbm9uIn0seyJGTiI6ImJpb2xvZ2ljYWwgbmV0d29yayJ9LHsiRk4iOiJ0ZWxlY29tbXVuaWNhdGlvbnMgbmV0d29yayJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoibWFuYWdlbWVudCBzY2llbmNlIn0seyJGTiI6Im1hdGhlbWF0aWNzIn1dLCJFIjoie1wiRE5cIjpcIkV2b2x1dGlvbiBvZiBOZXR3b3JrczogRnJvbSBCaW9sb2dpY2FsIE5ldHMgdG8gdGhlIEludGVybmV0IGFuZCBXV1dcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxOTAsXCJJbnZlcnRlZEluZGV4XCI6e1wiT25seVwiOlswXSxcInJlY2VudGx5XCI6WzEsMzRdLFwiZGlkXCI6WzJdLFwibWFua2luZFwiOlszXSxcInJlYWxpc2VcIjpbNF0sXCJ0aGF0XCI6WzUsMzZdLFwiaXRcIjpbNl0sXCJyZXNpZGVzXCI6WzddLFwiaW5cIjpbOCw0Nyw1NiwxMjAsMTc1LDE4N10sXCJhXCI6WzksNDQsNTksMTIxLDEyNCwxMzQsMTUwXSxcIndvcmxkXCI6WzEwXSxcIm9mXCI6WzExLDU0LDY2LDcyLDgwLDk5LDExMCwxMzcsMTcwLDE4M10sXCJuZXR3b3Jrcy5cIjpbMTIsMzEsMTg1XSxcIlRoZVwiOlsxMyw2NCw5NywxMTZdLFwiSW50ZXJuZXRcIjpbMTRdLFwiYW5kXCI6WzE1LDUwLDYxLDcwLDc1LDg4LDk1LDEwNiwxMTQsMTIzLDEzOSwxNjEsMTY2XSxcIldvcmxkXCI6WzE2XSxcIldpZGVcIjpbMTddLFwiV2ViXCI6WzE4XSxcImFyZVwiOlsxOSw3NywxMTgsMTczXSxcImNoYW5naW5nXCI6WzIwXSxcIm91clwiOlsyMSw0OF0sXCJsaWZlLlwiOlsyMl0sXCJPdXJcIjpbMjNdLFwicGh5c2ljYWxcIjpbMjRdLFwiZXhpc3RlbmNlXCI6WzI1XSxcImlzXCI6WzI2LDU4LDg0LDg5LDEwMiwxNTRdLFwiYmFzZWRcIjpbMjddLFwib25cIjpbMjgsMTQ3XSxcInZhcmlvdXNcIjpbMjldLFwiYmlvbG9naWNhbFwiOlszMF0sXCJXZVwiOlszMl0sXCJoYXZlXCI6WzMzXSxcImxlYXJuZWRcIjpbMzVdLFwidGhlXCI6WzM3LDUxLDY3LDc4LDEwMCwxMDcsMTgwXSxcInRlcm1cIjpbMzhdLFwiXFxcIm5ldHdvcmtcXFwiXCI6WzM5XSxcInR1cm5zXCI6WzQwXSxcIm91dFwiOls0MV0sXCJ0b1wiOls0Miw5MSwxMDMsMTQ1LDE1Nl0sXCJiZVwiOls0MywxNDNdLFwiY2VudHJhbFwiOls0NV0sXCJub3Rpb25cIjpbNDZdLFwidGltZSxcIjpbNDldLFwiY29uc2VxdWVudFwiOls1Ml0sXCJleHBsb3Npb25cIjpbNTNdLFwiaW50ZXJlc3RcIjpbNTVdLFwibmV0d29ya3NcIjpbNTcsMTA1XSxcInNvY2lhbFwiOls2MF0sXCJjdWx0dXJhbFwiOls2Ml0sXCJwaGVub21lbm9uLlwiOls2M10sXCJwcmluY2lwbGVzXCI6WzY1LDEwOV0sXCJjb21wbGV4XCI6WzY4XSxcIm9yZ2FuaXphdGlvblwiOls2OSwxMTNdLFwiZXZvbHV0aW9uXCI6WzcxXSxcIm5ldHdvcmtzLFwiOls3MywxNThdLFwibmF0dXJhbFwiOls3NCwxNjBdLFwiYXJ0aWZpY2lhbCxcIjpbNzZdLFwidG9waWNcIjpbNzldLFwidGhpc1wiOls4MSwxNDhdLFwiYm9vayxcIjpbODJdLFwid2hpY2hcIjpbODNdLFwid3JpdHRlblwiOls4NV0sXCJieVwiOls4Nl0sXCJwaHlzaWNpc3RzXCI6Wzg3XSxcImFkZHJlc3NlZFwiOls5MF0sXCJhbGxcIjpbOTJdLFwiaW52b2x2ZWRcIjpbOTNdLFwicmVzZWFyY2hlcnNcIjpbOTRdLFwic3R1ZGVudHMuXCI6Wzk2XSxcImFpbVwiOls5OF0sXCJ0ZXh0XCI6WzEwMV0sXCJ1bmRlcnN0YW5kXCI6WzEwNF0sXCJiYXNpY1wiOlsxMDhdLFwidGhlaXJcIjpbMTExXSxcInN0cnVjdHVyYWxcIjpbMTEyXSxcImV2b2x1dGlvbi5cIjpbMTE1XSxcImlkZWFzXCI6WzExN10sXCJwcmVzZW50ZWRcIjpbMTE5XSxcImNsZWFyXCI6WzEyMl0sXCJwZWRhZ29naWNhbFwiOlsxMjVdLFwid2F5LFwiOlsxMjZdLFwid2l0aFwiOlsxMjddLFwibWluaW1hbFwiOlsxMjhdLFwibWF0aGVtYXRpY3MsXCI6WzEyOV0sXCJzb1wiOlsxMzBdLFwiZXZlblwiOlsxMzFdLFwic3R1ZGVudHNcIjpbMTMyXSxcIndpdGhvdXRcIjpbMTMzXSxcImRlZXBcIjpbMTM1XSxcImtub3dsZWRnZVwiOlsxMzZdLFwibWF0aGVtYXRpY3NcIjpbMTM4XSxcInN0YXRpc3RpY2FsXCI6WzE0MF0sXCJwaHlzaWNzXCI6WzE0MV0sXCJ3aWxsXCI6WzE0Ml0sXCJhYmxlXCI6WzE0NF0sXCJyZWx5XCI6WzE0Nl0sXCJhc1wiOlsxNDksMTc3LDE3OV0sXCJyZWZlcmVuY2UuXCI6WzE1MV0sXCJTcGVjaWFsXCI6WzE1Ml0sXCJhdHRlbnRpb25cIjpbMTUzXSxcImdpdmVuXCI6WzE1NV0sXCJyZWFsXCI6WzE1NywxNjhdLFwiYm90aFwiOlsxNTldLFwiYXJ0aWZpY2FsLlwiOlsxNjJdLFwiQ29sbGVjdGVkXCI6WzE2M10sXCJlbXBpcmljYWxcIjpbMTY0XSxcImRhdGFcIjpbMTY1XSxcIm51bWVyb3VzXCI6WzE2N10sXCJhcHBsaWNhdGlvbnNcIjpbMTY5XSxcImV4aXN0aW5nXCI6WzE3MV0sXCJ0aGVvcmllc1wiOlsxNzJdLFwiZGlzY3Vzc2VkXCI6WzE3NF0sXCJkZXRhaWwsXCI6WzE3Nl0sXCJ3ZWxsXCI6WzE3OF0sXCJ0b3BpY2FsXCI6WzE4MV0sXCJwcm9ibGVtc1wiOlsxODJdLFwiY29tbXVuaWNhdGlvblwiOlsxODRdLFwiQXZhaWxhYmxlXCI6WzE4Nl0sXCJPU086XCI6WzE4OF0sXCJodHRwOi8vd3d3Lm94Zm9yZHNjaG9sYXJzaGlwLmNvbS9vc28vcHVibGljL2NvbnRlbnQvcGh5c2ljcy85NzgwMTk4NTE1OTA2L3RvYy5odG1sXCI6WzE4OV19fSxcIlNcIjpbe1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9Fdm9sdXRpb24tTmV0d29ya3MtQmlvbG9naWNhbC1JbnRlcm5ldC1QaHlzaWNzL2RwLzAxOTg1MTU5MDFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9pZGVhcy5yZXBlYy5vcmcvYi9veHAvb2Jvb2tzLzk3ODAxOTk2ODY3MTEuaHRtbFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vY2kubmlpLmFjLmpwL25jaWQvQkIxNzAxMjE0MFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZWNvbnBhcGVycy5yZXBlYy5vcmcvYm9va2NoYXAvb3hwb2Jvb2tzLzk3ODAxOTg1MTU5MDYuaHRtXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9jaS5uaWkuYWMuanAvbmNpZC9CQTYwNzE1MzQwXCJ9XSxcIlZGTlwiOlwiXCIsXCJQUlwiOlsyMTI0NjM3NDkyLDIwMDg2MjAyNjQsMjExMjA5MDcwMiwyMTQ4NjA2MTk2LDE5MzI0MTY1MDMsMjA3MDcyMjczOSwyNzk4MzE5ODIzLDIxNjQ3MjcxNzYsMTk3Njk2OTIyMSwyMTA3MzY3NjIsMjA0MDk1NjcwNywyMTM2OTMxNjY2LDIxMDQwODU2NzIsMjA2NTc2OTUwMiwyMTQ3ODI0NDM5LDE2MjMwODM2OSwxOTcxNDIxOTI1LDE4NzUxMTIwNTMsMTk4MzYxMDEzMywyMDM4MTk1ODc0LDIxMjQ2Mzc0OTIsMjAwODYyMDI2NCwyMTEyMDkwNzAyLDIxNDg2MDYxOTYsMTkzMjQxNjUwMywyMDcwNzIyNzM5LDI3OTgzMTk4MjMsMjE2NDcyNzE3NiwxOTc2OTY5MjIxLDIxMDczNjc2MiwyMDQwOTU2NzA3LDIxMzY5MzE2NjYsMjEwNDA4NTY3MiwyMDY1NzY5NTAyLDIxNDc4MjQ0MzksMTYyMzA4MzY5LDE5NzE0MjE5MjUsMTg3NTExMjA1MywxOTgzNjEwMTMzLDIwMzgxOTU4NzRdLFwiQU5GXCI6W3tcIkZOXCI6XCJTLk4uXCIsXCJMTlwiOlwiRG9yb2dvdnRzZXZcIixcIlNcIjoxfSx7XCJGTlwiOlwiSi5GLkYuXCIsXCJMTlwiOlwiTWVuZGVzXCIsXCJTXCI6Mn1dLFwiQlRcIjpcImJcIixcIlBCXCI6XCJPeGZvcmQgVW5pdmVyc2l0eSBQcmVzc1wifSJ9LHsibG9ncHJvYiI6LTE1LjY2NCwia2VzRW50aXR5SWQiOjgwMzU1NywiSWQiOjIxMTQ2MjMyMjEsIlRpIjoiZm9nIGNvbXB1dGluZyBhbmQgaXRzIHJvbGUgaW4gdGhlIGludGVybmV0IG9mIHRoaW5ncyIsIlkiOjIwMTIsIkQiOiIyMDEyLTA4LTE3IiwiUklkIjpbMjEwMzMzMzgyNiw5NjA3MzY0NiwyMDExMzI1OTU1LDE5OTM2MDg0MjksMjEzNDcxNTY1MCwyMDQzNTM5NjAyLDE1MjI4MDM3NjQsMTUzODUyNzUwMSwxNDkwNzA0MTk2XSwiQUEiOlt7IkF1TiI6ImZsYXZpbyBib25vbWkifSx7IkF1TiI6InJvZG9sZm8gYSBtaWxpdG8ifSx7IkF1TiI6ImppYW5nIHpodSJ9LHsiQXVOIjoic2F0ZWVzaCBhZGRlcGFsbGkifV0sIkYiOlt7IkZOIjoibW9iaWxlIGVkZ2UgY29tcHV0aW5nIn0seyJGTiI6ImVkZ2UgY29tcHV0aW5nIn0seyJGTiI6ImxvY2F0aW9uIGF3YXJlbmVzcyJ9LHsiRk4iOiJsb3cgbGF0ZW5jeSJ9LHsiRk4iOiJzb2Z0d2FyZSBkZWZpbmVkIG5ldHdvcmtpbmcifSx7IkZOIjoic21hcnQgZ3JpZCJ9LHsiRk4iOiJjbG91ZCBjb21wdXRpbmcifSx7IkZOIjoid2lyZWxlc3MifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJGb2cgY29tcHV0aW5nIGFuZCBpdHMgcm9sZSBpbiB0aGUgaW50ZXJuZXQgb2YgdGhpbmdzXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTA2LFwiSW52ZXJ0ZWRJbmRleFwiOntcIkZvZ1wiOlswLDI2LDc0XSxcIkNvbXB1dGluZ1wiOlsxLDVdLFwiZXh0ZW5kc1wiOlsyXSxcInRoZVwiOlszLDgsMTEsMjUsNjksNzMsNzVdLFwiQ2xvdWRcIjpbNF0sXCJwYXJhZGlnbVwiOls2XSxcInRvXCI6WzddLFwiZWRnZVwiOls5XSxcIm9mXCI6WzEwLDE4LDI0LDQ0LDQ5LDU1LDgxLDg0XSxcIm5ldHdvcmssXCI6WzEyXSxcInRodXNcIjpbMTNdLFwiZW5hYmxpbmdcIjpbMTRdLFwiYVwiOlsxNSw3OV0sXCJuZXdcIjpbMTZdLFwiYnJlZWRcIjpbMTddLFwiYXBwbGljYXRpb25zXCI6WzE5XSxcImFuZFwiOlsyMCwzMSw1Nyw4OCwxMDJdLFwic2VydmljZXMuXCI6WzIxXSxcIkRlZmluaW5nXCI6WzIyXSxcImNoYXJhY3RlcmlzdGljc1wiOlsyMyw3MV0sXCJhcmU6XCI6WzI3XSxcImEpXCI6WzI4XSxcIkxvd1wiOlsyOV0sXCJsYXRlbmN5XCI6WzMwXSxcImxvY2F0aW9uXCI6WzMyXSxcImF3YXJlbmVzcztcIjpbMzNdLFwiYilcIjpbMzRdLFwiV2lkZS1zcHJlYWRcIjpbMzVdLFwiZ2VvZ3JhcGhpY2FsXCI6WzM2XSxcImRpc3RyaWJ1dGlvbjtcIjpbMzddLFwiYylcIjpbMzhdLFwiTW9iaWxpdHk7XCI6WzM5XSxcImQpXCI6WzQwXSxcIlZlcnlcIjpbNDFdLFwibGFyZ2VcIjpbNDJdLFwibnVtYmVyXCI6WzQzLDgwXSxcIm5vZGVzLFwiOls0NV0sXCJlKVwiOls0Nl0sXCJQcmVkb21pbmFudFwiOls0N10sXCJyb2xlXCI6WzQ4XSxcIndpcmVsZXNzXCI6WzUwXSxcImFjY2VzcyxcIjpbNTFdLFwiZilcIjpbNTJdLFwiU3Ryb25nXCI6WzUzXSxcInByZXNlbmNlXCI6WzU0XSxcInN0cmVhbWluZ1wiOls1Nl0sXCJyZWFsXCI6WzU4XSxcInRpbWVcIjpbNTldLFwiYXBwbGljYXRpb25zLFwiOls2MCw4OV0sXCJnKVwiOls2MV0sXCJIZXRlcm9nZW5laXR5LlwiOls2Ml0sXCJJblwiOls2M10sXCJ0aGlzXCI6WzY0XSxcInBhcGVyXCI6WzY1XSxcIndlXCI6WzY2XSxcImFyZ3VlXCI6WzY3XSxcInRoYXRcIjpbNjhdLFwiYWJvdmVcIjpbNzBdLFwibWFrZVwiOls3Ml0sXCJhcHByb3ByaWF0ZVwiOls3Nl0sXCJwbGF0Zm9ybVwiOls3N10sXCJmb3JcIjpbNzhdLFwiY3JpdGljYWxcIjpbODJdLFwiSW50ZXJuZXRcIjpbODNdLFwiVGhpbmdzXCI6Wzg1XSxcIihJb1QpXCI6Wzg2XSxcInNlcnZpY2VzXCI6Wzg3XSxcIm5hbWVseSxcIjpbOTBdLFwiQ29ubmVjdGVkXCI6WzkxXSxcIlZlaGljbGUsXCI6WzkyXSxcIlNtYXJ0XCI6WzkzLDk1XSxcIkdyaWQsXCI6Wzk0XSxcIkNpdGllcyxcIjpbOTZdLFwiYW5kLFwiOls5N10sXCJpblwiOls5OF0sXCJnZW5lcmFsLFwiOls5OV0sXCJXaXJlbGVzc1wiOlsxMDBdLFwiU2Vuc29yc1wiOlsxMDFdLFwiQWN0dWF0b3JzXCI6WzEwM10sXCJOZXR3b3Jrc1wiOlsxMDRdLFwiKFdTQU5zKS5cIjpbMTA1XX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY29uZmVyZW5jZXMuc2lnY29tbS5vcmcvc2lnY29tbS8yMDEyLy9wYXBlci9tY2MvcDEzLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTIzNDI1MTNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1LzIzNDI1MDkuMjM0MjUxM1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5vcmcvMTAuMTE0NSUyZjIzNDI1MDkuMjM0MjUxM1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3d3dy5zZW1hbnRpY3NjaG9sYXIub3JnL3BhcGVyL0ZvZy1jb21wdXRpbmctYW5kLWl0cy1yb2xlLWluLXRoZS1pbnRlcm5ldC1vZi1Cb25vbWktTWlsaXRvLzIwN2VhMDExNWJmNDM4OGQxMWYwYWI0ZGRiZmQ5ZmQwMGRlNWU4ZDFcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2RvaWQ9MjM0MjUwOS4yMzQyNTEzXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1LzIzNDI1MDkuMjM0MjUxM1wifV0sXCJWRk5cIjpcIklFRUUgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIENsb3VkIENvbXB1dGluZyBUZWNobm9sb2d5IGFuZCBTY2llbmNlXCIsXCJWU05cIjpcIkNsb3VkQ29tXCIsXCJGUFwiOjEzLFwiTFBcIjoxNixcIkRPSVwiOlwiMTAuMTE0NS8yMzQyNTA5LjIzNDI1MTNcIixcIkNDXCI6e1wiOTYwNzM2NDZcIjpbXCJCYW5rYSBldCBhbCBbNl0gc3RyZXNzIHRoYXQgZW1lcmdlbnQgYXBwbGljYXRpb25zIGRlbWFuZCBhIGhpZ2hlciBiYW5kd2lkdGgsIGNvbGxhYm9yYXRpdmUgc2Vuc2luZyBlbnZpcm9ubWVudC5cIl0sXCIxNTM4NTI3NTAxXCI6W1wiQ0FTQSBbNV0sIGEgbXVsdGkteWVhciwgbXVsdGktcGFydG5lciBpbml0aWF0aXZlIGxlZCBieSBVTUFTUywgZGVwbG95ZWQgYSBuZXR3b3JrIG9mIHNtYWxsIHdlYXRoZXIgcmFkYXJzLCBpbnRlZ3JhdGVkIHdpdGggYSBkaXN0cmlidXRlZCBwcm9jZXNzaW5nIGFuZCBzdG9yYWdlIGluZnJhc3RydWN0dXJlIGluIGEgY2xvc2VkLWxvb3Agc3lzdGVtIHRvIG1vbml0b3IgdGhlIGxvd2VyIHRyb3Bvc3BoZXJlIGZvciBhdG1vc3BoZXJpYyBoYXphcmRzIGxpa2UgdG9ybmFkb3MsIGhhaWxzdG9ybXMsIGV0Yy5cIl0sXCIyMDQzNTM5NjAyXCI6W1wiVGhlIG9yaWdpbmFsIFdpcmVsZXNzIFNlbnNvciBOb2RlcyAoV1NOcyksIG5pY2tuYW1lZCBtb3RlcyBbMl0sIHdlcmUgZGVzaWduZWQgdG8gb3BlcmF0ZSBhdCBleHRyZW1lbHkgbG93IHBvd2VyIHRvIGV4dGVuZCBiYXR0ZXJ5IGxpZmUgb3IgZXZlbiB0byBtYWtlIGVuZXJneSBoYXJ2ZXN0aW5nIGZlYXNpYmxlLlwiXSxcIjIxMDMzMzM4MjZcIjpbXCJaaW5rIGV0IGFsIFszXSBwcm92aWRlIHRlY2huaWNhbCBkZXRhaWxzIG9mIHRoZSBkZXBsb3ltZW50LlwiXSxcIjIxMzQ3MTU2NTBcIjpbXCJTaGFyaWZpIFs0XSBzdXJ2ZXkgdGhlIGNvbnRyaWJ1dGlvbnMgaW4gdGhlIGNvb3JkaW5hdGlvbiBvZiBXaXJlbGVzcyBTZW5zb3IgYW5kIEFjdHVhdG9yIE5ldHdvcmtzIChXU0FOcykuXCJdfSxcIlBSXCI6WzIxMzUwOTk4ODUsMjE1NDEyNjEwNSwyMDM1MjAzNzIwLDIxMTE2MTk2MjYsMjA0NTM3MTcxNiwyMTA1MTAzNzc3LDIwNTY5NTk3ODksMTkyNjA5MDY2MSwyMDYxODYwODMyLDIwODM1MzM0NzYsMjEwMTc4ODM0NSwyMTE0Mjk2NTYxLDIwMjMzODA4MTMsMjQ3MjMzMzUxOCwyMDI1NzI1MTQ1LDIxMDQyMzc3MjQsMjE0NDU1NDI3NywyNDE2Nzk5OTQ5LDE5ODc4MDA5NDcsMjU2NDU2NjIyMSwyMTM1MDk5ODg1LDIxNTQxMjYxMDUsMjAzNTIwMzcyMCwyMTExNjE5NjI2LDIwNDUzNzE3MTYsMjEwNTEwMzc3NywyMDU2OTU5Nzg5LDE5MjYwOTA2NjEsMjA2MTg2MDgzMiwyMDgzNTMzNDc2LDIxMDE3ODgzNDUsMjExNDI5NjU2MSwyMDIzMzgwODEzLDI0NzIzMzM1MTgsMjAyNTcyNTE0NSwyMTA0MjM3NzI0LDIxNDQ1NTQyNzcsMjQxNjc5OTk0OSwxOTg3ODAwOTQ3LDI1NjQ1NjYyMjFdLFwiQU5GXCI6W3tcIkZOXCI6XCJGbGF2aW9cIixcIkxOXCI6XCJCb25vbWlcIixcIlNcIjoxfSx7XCJGTlwiOlwiUm9kb2xmbyBBLlwiLFwiTE5cIjpcIk1pbGl0b1wiLFwiU1wiOjJ9LHtcIkZOXCI6XCJKaWFuZ1wiLFwiTE5cIjpcIlpodVwiLFwiU1wiOjN9LHtcIkZOXCI6XCJTYXRlZXNoXCIsXCJMTlwiOlwiQWRkZXBhbGxpXCIsXCJTXCI6NH1dLFwiQlZcIjpcIlByb2NlZWRpbmdzIG9mIHRoZSBmaXJzdCBlZGl0aW9uIG9mIHRoZSBNQ0Mgd29ya3Nob3Agb24gTW9iaWxlIGNsb3VkIGNvbXB1dGluZ1wiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNS43MjMsImtlc0VudGl0eUlkIjo4NTIxMzcsIklkIjoyMTQwNDcxNDM2LCJUaSI6InNlY3VyaXR5IGFyY2hpdGVjdHVyZSBmb3IgdGhlIGludGVybmV0IHByb3RvY29sIiwiWSI6MTk5NSwiRCI6IjE5OTUtMDgtMDEiLCJSSWQiOlsxOTc3ODY3MjYxLDIwODE2NDI3MTQsMTkyMzI4OTMzNiwyMjU0NjkxODU0LDI2MTE1NjA2ODcsMjA4OTY0MDY3NiwyMTE3NjU0OTI4LDE3OTgyMjMwMTksMTQ5NDE1NDAzOSwxNjQ5Mzc3ODA3LDE5NTQzMzg3NjEsMTkyMDgwMjkwOSwxNTMzMDIxNzQ0LDIyNDU2MzYxMDAsMTUzMTcwMDE4N10sIkFBIjpbeyJBdU4iOiJzdGVwaGVuIHQga2VudCJ9LHsiQXVOIjoicmFuZGFsbCBqIGF0a2luc29uIn1dLCJGIjpbeyJGTiI6Imdyb3VwIGRvbWFpbiBvZiBpbnRlcnByZXRhdGlvbiJ9LHsiRk4iOiJkaXN0cmlidXRlZCBzeXN0ZW0gc2VjdXJpdHkgYXJjaGl0ZWN0dXJlIn0seyJGTiI6InNpbXBsZSBuZXR3b3JrIG1hbmFnZW1lbnQgcHJvdG9jb2wifSx7IkZOIjoiaXB2NiJ9LHsiRk4iOiJtb2JpbGUgaXAifSx7IkZOIjoiaXAgdHVubmVsIn0seyJGTiI6InByaXZhdGUgbmV0d29yayJ9LHsiRk4iOiJpcHNlYyJ9LHsiRk4iOiJjb21wdXRlciBzZWN1cml0eSJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiU2VjdXJpdHkgQXJjaGl0ZWN0dXJlIGZvciB0aGUgSW50ZXJuZXQgUHJvdG9jb2xcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjozMCxcIkludmVydGVkSW5kZXhcIjp7XCJUaGlzXCI6WzAsMjNdLFwiZG9jdW1lbnRcIjpbMSwyNF0sXCJkZXNjcmliZXNcIjpbMl0sXCJhblwiOlszXSxcInVwZGF0ZWRcIjpbNF0sXCJ2ZXJzaW9uXCI6WzVdLFwib2ZcIjpbNl0sXCJ0aGVcIjpbNywyMF0sXCJcXFwiU2VjdXJpdHlcXG5BcmNoaXRlY3R1cmVcIjpbOF0sXCJmb3JcIjpbOV0sXCJJUFxcXCIsXCI6WzEwXSxcIndoaWNoXCI6WzExXSxcImlzXCI6WzEyXSxcImRlc2lnbmVkXCI6WzEzXSxcInRvXCI6WzE0XSxcInByb3ZpZGVcIjpbMTVdLFwic2VjdXJpdHlcIjpbMTZdLFwic2VydmljZXNcXG5mb3JcIjpbMTddLFwidHJhZmZpY1wiOlsxOF0sXCJhdFwiOlsxOV0sXCJJUFwiOlsyMV0sXCJsYXllci5cIjpbMjJdLFwib2Jzb2xldGVzXCI6WzI1XSxcIlJGQ1wiOlsyNl0sXCIyNDAxXFxuKE5vdmVtYmVyXCI6WzI3XSxcIjE5OTgpLlwiOlsyOF0sXCJbU1RBTkRBUkRTLVRSQUNLXVwiOlsyOV19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvcmZjL3BkZnJmYy9yZmM0MzAxLnR4dC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2RvY2JveC5ldHNpLm9yZy9SZWZlcmVuY2UvSUVURi9SRkMvUkZDMjQwMS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvaW5mby9yZmMyNDAxXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9UkZDMjQwMVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3JmY3Mud2ViLmZjMi5jb20vcmZjNDMwMS5odG1sXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9UkZDMjQwMVwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDMwMVwifV0sXCJWRk5cIjpcIlNlY3VyaXR5IEFyY2hpdGVjdHVyZSBmb3IgdGhlIEludGVybmV0IFByb3RvY29sIFwiLFwiVlwiOjE4MjUsXCJGUFwiOjEsXCJMUFwiOjEwMSxcIkNDXCI6e1wiMTQ5NDE1NDAzOVwiOltcImQuIGF1dG9tYXRpYyBrZXkgbWFuYWdlbWVudCDigJAgUkZDcyBvbiDigJ1UaGUgSW50ZXJuZXQgS2V5IEV4Y2hhbmdlIChJS0Up4oCdIFtIQzk4XSwg4oCdSW50ZXJuZXQgU2VjdXJpdHkgQXNzb2NpYXRpb24gYW5kIEtleSBNYW5hZ2VtZW50IFByb3RvY29sIChJU0FLTVAp4oCdIFsgTVNTVDk3IF0s4oCdVGhlIE9BS0xFWSBLZXkgRGV0ZXJtaW5hdGlvbiBQcm90b2NvbOKAnSBbT3JtOTddLCBhbmQg4oCdVGhlIEludGVybmV0IElQIFNlY3VyaXR5IERvbWFpbiBvZiBJbnRlcnByZXRhdGlvbiBmb3IgSVNBS01Q4oCdIFtQaXA5OF0uXFx1MDAxYkl0IHNwZWNpZmllcyBhIHNwZWNpZmljIHB1YmxpY2tleSBiYXNlZCBhcHByb2FjaCAoSUtFIOKAkCBbIE1TU1Q5NyAsIE9ybTk3LCBIQzk4XSkgZm9yIGF1dG9tYXRpYyBrZXkgbWFuYWdlbWVudCwgYnV0IG90aGVyIGF1dG9tYXRlZCBrZXkgZGlzdHJpYnV0aW9uIHRlY2huaXF1ZXMgTUFZIGJlIHVzZWQuXCJdLFwiMTUzMzAyMTc0NFwiOltcIk1hbnkgb2YgdGhlIGNvbmNlcHRzIGVtYm9kaWVkIGluIHRoaXMgc3BlY2lmaWNhdGlvbiB3ZXJlIGRlcml2ZWQgZnJvbSBvciBpbmZsdWVuY2VkIGJ5IHRoZSBVUyBHb3Zlcm5tZW504oCZcyBTUDMgc2VjdXJpdHkgcHJvdG9jb2wsIElTTy9JRUPigJlzIE5MU1AsIHRoZSBwcm9wb3NlZCBzd0lQZSBzZWN1cml0eSBwcm90b2NvbCBbU0ROUywgSVNPLCAgSUI5MyAsIElCSzkzXSwgYW5kIHRoZSB3b3JrIGRvbmUgZm9yIFNOTVAgU2VjdXJpdHkgYW5kIFNOTVB2MiBTZWN1cml0eS5cIl0sXCIxOTIzMjg5MzM2XCI6W1wiYi4gc2VjdXJpdHkgcHJvdG9jb2xzIOKAkCBSRkNzIGRlc2NyaWJpbmcgdGhlIEF1dGhlbnRpY2F0aW9uIEhlYWRlciAoQUgpIFtLQTk4YV0gYW5kIEVuY2Fwc3VsYXRpbmcgU2VjdXJpdHkgUGF5bG9hZCAoRVNQKSBbIEtBOThiIF0gcHJvdG9jb2xzLlxcdTAwMWJCb3RoIHByb3RvY29scyBhcmUgZGVzY3JpYmVkIGluIG1vcmUgZGV0YWlsIGluIHRoZWlyIHJlc3BlY3RpdmUgUkZDcyBbS0E5OGEsICBLQTk4YiBdLlxcdTAwMWJUaGUgRW5jYXBzdWxhdGluZyBTZWN1cml0eSBQYXlsb2FkIChFU1ApIHByb3RvY29sIFsgS0E5OGIgXSBtYXkgcHJvdmlkZSBjb25maWRlbnRpYWxpdHkgKGVuY3J5cHRpb24pLCBhbmQgbGltaXRlZCB0cmFmZmljIGZsb3cgY29uZmlkZW50aWFsaXR5LlwiXSxcIjIwODk2NDA2NzZcIjpbXCJJbiB0aGUgY2FzZSB3aGVyZSB0cmFuc3BvcnQgbW9kZSBpcyB1c2VkIGJldHdlZW4gc2VjdXJpdHkgZ2F0ZXdheXMgb3IgYmV0d2VlbiBhIHNlY3VyaXR5IGdhdGV3YXkgYW5kIGEgaG9zdCwgdHJhbnNwb3J0IG1vZGUgbWF5IGJlIHVzZWQgdG8gc3VwcG9ydCBpbi1JUCB0dW5uZWxpbmcgKGUuZy4sIElQLWluLUlQIFsgUGVyOTYgXSBvciBHZW5lcmljIFJvdXRpbmcgRW5jYXBzdWxhdGlvbiAoR1JFKSB0dW5uZWxpbmcgW0ZhTGlIYU1lVHIwMF0gb3IgZHluYW1pYyByb3V0aW5nIFtUb0VnV2EwNF0pIG92ZXIgdHJhbnNwb3J0IG1vZGUgU0FzLlwiXSxcIjIxMTc2NTQ5MjhcIjpbXCJJbiB0aGUgY2FzZSB3aGVyZSB0cmFuc3BvcnQgbW9kZSBpcyB1c2VkIGJldHdlZW4gc2VjdXJpdHkgZ2F0ZXdheXMgb3IgYmV0d2VlbiBhIHNlY3VyaXR5IGdhdGV3YXkgYW5kIGEgaG9zdCwgdHJhbnNwb3J0IG1vZGUgbWF5IGJlIHVzZWQgdG8gc3VwcG9ydCBpbi1JUCB0dW5uZWxpbmcgKGUuZy4sIElQLWluLUlQIFtQZXI5Nl0gb3IgR2VuZXJpYyBSb3V0aW5nIEVuY2Fwc3VsYXRpb24gKEdSRSkgdHVubmVsaW5nIFsgRmFMaUhhTWVUcjAwIF0gb3IgZHluYW1pYyByb3V0aW5nIFtUb0VnV2EwNF0pIG92ZXIgdHJhbnNwb3J0IG1vZGUgU0FzLlwiXX0sXCJQUlwiOlsxOTIzMjg5MzM2LDIyNTQ2OTE4NTQsMTk0OTY2MTkzNywxNzMzNzEzNzg0LDIyNjYyMTgxMTMsMjA4MTY0MjcxNCwxNDk0MTU0MDM5LDI2MTE1NjA2ODcsMjEyMTY3MDQwMiwyMDk3NzI1NjY1LDIwOTkwNDA0NTEsMTk3Nzg2NzI2MSwyMDk4ODAxOTQ3LDIxNTYxODY4NDksMjYxNzIxNjc2MCwxNjc0MTQ1Njg5LDE1NDA2NDEwODIsMTY1NjY3ODc3MCwxOTk2MzYwNDA1LDE2NjA1NjI1NTUsMTkyMzI4OTMzNiwyMjU0NjkxODU0LDE5NDk2NjE5MzcsMTczMzcxMzc4NCwyMjY2MjE4MTEzLDIwODE2NDI3MTQsMTQ5NDE1NDAzOSwyNjExNTYwNjg3LDIxMjE2NzA0MDIsMjA5NzcyNTY2NSwyMDk5MDQwNDUxLDE5Nzc4NjcyNjEsMjA5ODgwMTk0NywyMTU2MTg2ODQ5LDI2MTcyMTY3NjAsMTY3NDE0NTY4OSwxNTQwNjQxMDgyLDE2NTY2Nzg3NzAsMTk5NjM2MDQwNSwxNjYwNTYyNTU1XSxcIkFORlwiOlt7XCJGTlwiOlwiU3RlcGhlbiBULlwiLFwiTE5cIjpcIktlbnRcIixcIlNcIjoxfSx7XCJGTlwiOlwiUmFuZGFsbCBKLlwiLFwiTE5cIjpcIkF0a2luc29uXCIsXCJTXCI6Mn1dLFwiQlZcIjpcIlNlY3VyaXR5IEFyY2hpdGVjdHVyZSBmb3IgdGhlIEludGVybmV0IFByb3RvY29sIFwiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJJRVRGXCJ9In0seyJsb2dwcm9iIjotMTUuNzI4LCJrZXNFbnRpdHlJZCI6ODU2MTE3LCJJZCI6MTU4MDI4ODE1OSwiVGkiOiJpbnRlcm5ldCBtYWlsIGFuZCBtaXhlZCBtb2RlIHN1cnZleXMgdGhlIHRhaWxvcmVkIGRlc2lnbiBtZXRob2QiLCJZIjoyMDA4LCJEIjoiMjAwOC0xMC0xMiIsIlJJZCI6WzIxMDQwNjM3MjksMjA5NDI0NDMwNSw1NzIyMDkwOTksMjQ4NTI3NDcwMyw3MjE1ODMyN10sIkFBIjpbeyJBdU4iOiJkb24gYSBkaWxsbWFuIn0seyJBdU4iOiJqb2xlbmUgZCBzbXl0aCJ9LHsiQXVOIjoibGVhaCBtZWxhbmkgY2hyaXN0aWFuIn1dLCJGIjpbeyJGTiI6ImludGVyYWN0aXZpdHkifSx7IkZOIjoic3VydmV5IHJlc2VhcmNoIn0seyJGTiI6InN1cnZleSBkYXRhIGNvbGxlY3Rpb24ifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6Im11bHRpbWVkaWEifSx7IkZOIjoiZW5naW5lZXJpbmcifV0sIkUiOiJ7XCJETlwiOlwiSW50ZXJuZXQsIE1haWwsIGFuZCBNaXhlZC1Nb2RlIFN1cnZleXM6IFRoZSBUYWlsb3JlZCBEZXNpZ24gTWV0aG9kXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MjM0LFwiSW52ZXJ0ZWRJbmRleFwiOntcIlRoZVwiOlswLDM3XSxcImNsYXNzaWNcIjpbMSwxNF0sXCJzdXJ2ZXlcIjpbMiwxNyw1MCw5NF0sXCJkZXNpZ25cIjpbMywxOCwxMzZdLFwicmVmZXJlbmNlLFwiOls0XSxcInVwZGF0ZWRcIjpbNSw0Ml0sXCJmb3JcIjpbNiw4MSwxMjYsMjI5XSxcInRoZVwiOls3LDYxLDEwMSwxMDUsMTE0LDEyOCwxODgsMjEwLDIxNywyMjBdLFwiZGlnaXRhbFwiOls4XSxcImFnZUZvclwiOls5XSxcIm92ZXJcIjpbMTBdLFwidHdvXCI6WzExXSxcImRlY2FkZXMsXCI6WzEyXSxcIkRpbGxtYW4nc1wiOlsxMyw2N10sXCJ0ZXh0XCI6WzE1LDExNV0sXCJvblwiOlsxNiwxMDAsMTYxLDE3NCwxODddLFwiaGFzXCI6WzE5XSxcImFpZGVkXCI6WzIwXSxcImJvdGhcIjpbMjFdLFwic3R1ZGVudHNcIjpbMjIsMjMyXSxcImFuZFwiOlsyMywyOCw0Myw0NSw2MCw2Niw4OSwxMDMsMTE2LDEyNCwxMzgsMTQ0LDE1MCwxNzAsMjA0LDIxNCwyMjYsMjMxXSxcInByb2Zlc3Npb25hbHNcIjpbMjRdLFwiaW5cIjpbMjUsMjE2XSxcImVmZmVjdGl2ZWx5XCI6WzI2LDE0MV0sXCJwbGFubmluZ1wiOlsyN10sXCJjb25kdWN0aW5nXCI6WzI5XSxcIm1haWwsXCI6WzMwLDE0OCwxNjhdLFwidGVsZXBob25lLFwiOlszMSwxNDldLFwiYW5kLFwiOlszMl0sXCJtb3JlXCI6WzMzXSxcInJlY2VudGx5LFwiOlszNF0sXCJJbnRlcm5ldFwiOlszNSwxNTFdLFwic3VydmV5cy5cIjpbMzZdLFwibmV3XCI6WzM4LDEwNl0sXCJlZGl0aW9uXCI6WzM5LDEwN10sXCJpc1wiOls0MCw3Miw3OSwxMDhdLFwidGhvcm91Z2hseVwiOls0MSw3NF0sXCJyZXZpc2VkLFwiOls0NF0sXCJjb3ZlcnNcIjpbNDZdLFwiYWxsXCI6WzQ3XSxcImFzcGVjdHNcIjpbNDhdLFwib2ZcIjpbNDksNTYsNjMsMTMwLDE4MiwxODUsMTkxLDE5MywyMDJdLFwicmVzZWFyY2guXCI6WzUxXSxcIkl0XCI6WzUyXSxcImZlYXR1cmVzXCI6WzUzXSxcImV4cGFuZGVkXCI6WzU0XSxcImNvdmVyYWdlXCI6WzU1XSxcIm1vYmlsZVwiOls1N10sXCJwaG9uZXMsXCI6WzU4XSxcInRhYmxldHMsXCI6WzU5XSxcInVzZVwiOls2MiwxNDddLFwiZG8taXQteW91cnNlbGZcIjpbNjRdLFwic3VydmV5cyxcIjpbNjVdLFwidW5pcXVlXCI6WzY4XSxcIlRhaWxvcmVkXCI6WzY5XSxcIkRlc2lnblwiOls3MF0sXCJNZXRob2RcIjpbNzFdLFwiYWxzb1wiOls3M10sXCJleHBsYWluZWQuXCI6Wzc1XSxcIlRoaXNcIjpbNzZdLFwiaW52YWx1YWJsZVwiOls3N10sXCJyZXNvdXJjZVwiOls3OF0sXCJjcnVjaWFsXCI6WzgwXSxcImFueVwiOls4Ml0sXCJyZXNlYXJjaGVyXCI6WzgzXSxcInNlZWtpbmdcIjpbODRdLFwidG9cIjpbODUsMTM1LDE0MCwxNDYsMTUzLDE1NywxNjMsMTc2XSxcImluY3JlYXNlXCI6Wzg2LDE1OF0sXCJyZXNwb25zZVwiOls4NywxNTksMTg5XSxcInJhdGVzXCI6Wzg4LDE5MF0sXCJvYnRhaW5cIjpbOTAsMTY0XSxcImhpZ2gtcXVhbGl0eVwiOls5MSwxNjVdLFwiZmVlZGJhY2tcIjpbOTIsMTY2XSxcImZyb21cIjpbOTMsMTY3XSxcInF1ZXN0aW9ucy5cIjpbOTVdLFwiQ29uc2lzdGVudFwiOls5Nl0sXCJ3aXRoXCI6Wzk3XSxcImN1cnJlbnRcIjpbOThdLFwiZW1waGFzaXNcIjpbOTldLFwidmlzdWFsXCI6WzEwMiwyMDVdLFwiYXVyYWwsXCI6WzEwNF0sXCJjb21wbGVtZW50ZWRcIjpbMTA5XSxcImJ5XCI6WzExMCwxOTZdLFwiY29waW91c1wiOlsxMTFdLFwiZXhhbXBsZXNcIjpbMTEyLDIyOF0sXCJ3aXRoaW5cIjpbMTEzXSxcImFjY29tcGFueWluZ1wiOlsxMTddLFwid2Vic2l0ZS5UaGlzXCI6WzExOF0sXCJoZWF2aWx5XCI6WzExOV0sXCJyZXZpc2VkXCI6WzEyMF0sXCJGb3VydGhcIjpbMTIxLDIwN10sXCJFZGl0aW9uXCI6WzEyMiwyMDhdLFwiaW5jbHVkZXM6U3RyYXRlZ2llc1wiOlsxMjNdLFwidGFjdGljc1wiOlsxMjVdLFwiZGV0ZXJtaW5pbmdcIjpbMTI3XSxcIm5lZWRzXCI6WzEyOV0sXCJhXCI6WzEzMV0sXCJnaXZlblwiOlsxMzJdLFwic3VydmV5LFwiOlsxMzNdLFwiaG93XCI6WzEzNCwxMzksMTYyLDE3NV0sXCJpdCxcIjpbMTM3XSxcImFkbWluaXN0ZXJcIjpbMTQyXSxcIml0SG93XCI6WzE0M10sXCJ3aGVuXCI6WzE0NV0sXCJzdXJ2ZXlzXCI6WzE1Ml0sXCJtYXhpbXVtXCI6WzE1NF0sXCJhZHZhbnRhZ2VQcm92ZW5cIjpbMTU1XSxcInRlY2huaXF1ZXNcIjpbMTU2XSxcInJhdGVzR3VpZGFuY2VcIjpbMTYwXSxcImVsZWN0cm9uaWMsXCI6WzE2OV0sXCJvdGhlclwiOlsxNzFdLFwic2VsZi1hZG1pbmlzdGVyZWRcIjpbMTcyXSxcInN1cnZleXNEaXJlY3Rpb25cIjpbMTczXSxcImNvbnN0cnVjdFwiOlsxNzddLFwiZWZmZWN0aXZlXCI6WzE3OF0sXCJxdWVzdGlvbm5haXJlcyxcIjpbMTc5XSxcImluY2x1ZGluZ1wiOlsxODBdLFwiY29uc2lkZXJhdGlvbnNcIjpbMTgxXSxcImxheW91dFRoZVwiOlsxODNdLFwiZWZmZWN0c1wiOlsxODRdLFwic3BvbnNvcnNoaXBcIjpbMTg2XSxcInN1cnZleXNVc2VcIjpbMTkyXSxcImNhcGFiaWxpdGllc1wiOlsxOTRdLFwicHJvdmlkZWRcIjpbMTk1XSxcIm5ld2x5XCI6WzE5N10sXCJtYXNzLXVzZWRcIjpbMTk4XSxcIm1lZGlhOlwiOlsxOTldLFwiaW50ZXJhY3Rpdml0eSxcIjpbMjAwXSxcInByZXNlbnRhdGlvblwiOlsyMDFdLFwiYXVyYWxcIjpbMjAzXSxcInN0aW11bGkuVGhlXCI6WzIwNl0sXCJyZWludHJvZHVjZXNcIjpbMjA5XSxcInRlbGVwaG9uZWluY2x1ZGluZ1wiOlsyMTFdLFwiY29vcmRpbmF0aW5nXCI6WzIxMl0sXCJsYW5kXCI6WzIxM10sXCJtb2JpbGUuR3JvdW5kZWRcIjpbMjE1XSxcImJlc3RcIjpbMjE4XSxcInJlc2VhcmNoLFwiOlsyMTldLFwiYm9va1wiOlsyMjFdLFwib2ZmZXJzXCI6WzIyMl0sXCJwcmFjdGljYWxcIjpbMjIzXSxcImhvdy10b1wiOlsyMjRdLFwiZ3VpZGVsaW5lc1wiOlsyMjVdLFwiZGV0YWlsZWRcIjpbMjI3XSxcInByYWN0aXRpb25lcnNcIjpbMjMwXSxcImFsaWtlLlwiOlsyMzNdfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cucmVpcy5jaXMuZXMvUkVJUy9QREYvUmVpc18xMzNfMDUxMjk1MjYyMDI4MzYwLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LnJlZGFseWMub3JnL3BkZi85OTcvOTk3MjE1OTMwMDUucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vSW50ZXJuZXQtUGhvbmUtTWFpbC1NaXhlZC1Nb2RlLVN1cnZleXMvZHAvMTExODQ1NjE0OVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI2OTI3MDhcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2NpLm5paS5hYy5qcC9uY2lkL0JCMTc3NDM3OTFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3ZsaWIuaXRyYy5hYy5pci9wYXJ2YW4vcmVzb3VyY2UvODk4NC9pbnRlcm5ldF9waG9uZV9tYWlsX2FuZF9taXhlZF9tb2RlX3N1cnZleXNfdGhlX3RhaWxvcmVkX2Rlc2lnbl9tZXRob2RcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI2OTI3MDhcIn1dLFwiVkZOXCI6XCJcIixcIlBSXCI6WzE1MDcwMDQ0MjIsMTcxNDcyMzgwMSwyMTA3MDMxNzU3LDIwOTk2OTc3NjYsMjEwNjA5NjM2MSwxNDg0ODY0MDI2LDE2NjUzMzIwODIsMTk4NzI1ODEzMCwyMDcxNjY2NTM1LDIwNDM4NjczMzgsMTk3MTQ0MDUxMywxODczMDU3NzgyLDE0ODA1NDQ4NjQsMjEwODY1MzI0OCwxOTkwNTEzNzQwLDIxMDc1OTI5MTYsMjAzNTk4MjM1NywyNzQyMzYxODgwLDE1MjczMTE4NTUsMjEzMDUyNzE0NiwxNTA3MDA0NDIyLDE3MTQ3MjM4MDEsMjEwNzAzMTc1NywyMDk5Njk3NzY2LDIxMDYwOTYzNjEsMTQ4NDg2NDAyNiwxNjY1MzMyMDgyLDE5ODcyNTgxMzAsMjA3MTY2NjUzNSwyMDQzODY3MzM4LDE5NzE0NDA1MTMsMTg3MzA1Nzc4MiwxNDgwNTQ0ODY0LDIxMDg2NTMyNDgsMTk5MDUxMzc0MCwyMTA3NTkyOTE2LDIwMzU5ODIzNTcsMjc0MjM2MTg4MCwxNTI3MzExODU1LDIxMzA1MjcxNDZdLFwiQU5GXCI6W3tcIkZOXCI6XCJEb24gQS5cIixcIkxOXCI6XCJEaWxsbWFuXCIsXCJTXCI6MX0se1wiRk5cIjpcIkpvbGVuZSBELlwiLFwiTE5cIjpcIlNteXRoXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkxlYWggTWVsYW5pXCIsXCJMTlwiOlwiQ2hyaXN0aWFuXCIsXCJTXCI6M31dLFwiQlRcIjpcImJcIixcIlBCXCI6XCJDb250ZW50IFRlY2hub2xvZ2llc1wifSJ9LHsibG9ncHJvYiI6LTE1Ljc0OCwia2VzRW50aXR5SWQiOjg3MzE5MywiSWQiOjE5NzY5NjkyMjEsIlRpIjoib24gcG93ZXIgbGF3IHJlbGF0aW9uc2hpcHMgb2YgdGhlIGludGVybmV0IHRvcG9sb2d5IiwiWSI6MTk5OSwiRCI6IjE5OTktMDgtMzAiLCJSSWQiOlsyMTcwMTIwNDA5LDIxMDU4MTgxNDcsMjE0ODI3NTQ3NywyMTM4NTQzNzU5LDIxNzE4NzM5MTUsMjE0NTcyMTQ3OSwyMTMzMTA5NTM1LDIwNjY3ODI3OTcsMjEwNTgwODEwNywyMTI2NDg0NzQ2LDIxNjAwMzg1MzIsMjE0MjczNTA4NCwyMDMyNzQxNzQ5LDIxNTM5ODgzMDUsMjEwMjA1NjAxNiwyMDY5Mjg3NDgwLDE2NDQ5MzQ4MjAsMjE2NTc0Mzc0NCwyMTQ5ODcxMTY1LDIwOTAyMjM1MDUsMTU1Njk1MDQ0NywyMDg2MzQ1MjE1LDIxMDc3Nzk3MjgsMjA4OTA0OTU4NSwyMTY3Mjc0NzgwLDIwMjkyODQ4MDQsMTUzMzY4MzczNyw5MDM0NTU0MiwyMDkxMTMyMjQ1LDE3NzI0OTc0N10sIkFBIjpbeyJBdU4iOiJtaWNoYWxpcyBmYWxvdXRzb3MifSx7IkF1TiI6InBldHJvcyBmYWxvdXRzb3MifSx7IkF1TiI6ImNocmlzdG9zIGZhbG91dHNvcyJ9XSwiRiI6W3siRk4iOiJyb3V0ZSB2aWV3cyJ9LHsiRk4iOiJ0cmFjZXJvdXRlIn0seyJGTiI6ImdyYXBoIHByb3BlcnR5In0seyJGTiI6ImludGVybmV0IHRvcG9sb2d5In0seyJGTiI6InJhbmRvbW5lc3MifSx7IkZOIjoibmV0d29yayB0b3BvbG9neSJ9LHsiRk4iOiJwb3dlciBsYXcifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6InRvcG9sb2d5In0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIk9uIHBvd2VyLWxhdyByZWxhdGlvbnNoaXBzIG9mIHRoZSBJbnRlcm5ldCB0b3BvbG9neVwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjEyNyxcIkludmVydGVkSW5kZXhcIjp7XCJEZXNwaXRlXCI6WzBdLFwidGhlXCI6WzEsNSwxNCwyNCw0OCw2Nyw3MCw4Myw5OSwxMDUsMTA4XSxcImFwcGFyZW50XCI6WzJdLFwicmFuZG9tbmVzc1wiOlszXSxcIm9mXCI6WzQsMTMsMjMsMzYsNTcsNjYsNjksNzgsMTExXSxcIkludGVybmV0LFwiOls2LDI1XSxcIndlXCI6WzcsMTE0XSxcImRpc2NvdmVyXCI6WzhdLFwic29tZVwiOls5XSxcInN1cnByaXNpbmdseVwiOlsxMF0sXCJzaW1wbGVcIjpbMTFdLFwicG93ZXItbGF3c1wiOlsxMiwxOCw0Niw3Myw4OV0sXCJJbnRlcm5ldFwiOlsxNV0sXCJ0b3BvbG9neS5cIjpbMTZdLFwiVGhlc2VcIjpbMTddLFwiaG9sZFwiOlsxOV0sXCJmb3JcIjpbMjAsMTI0XSxcInRocmVlXCI6WzIxXSxcInNuYXBzaG90c1wiOlsyMl0sXCJiZXR3ZWVuXCI6WzI2XSxcIk5vdmVtYmVyXCI6WzI3XSxcIjE5OTdcIjpbMjhdLFwiYW5kXCI6WzI5LDEwMywxMDcsMTIwXSxcIkRlY2VtYmVyXCI6WzMwXSxcIjE5OTgsXCI6WzMxXSxcImRlc3BpdGVcIjpbMzJdLFwiYVwiOlszMyw2M10sXCI0NSVcIjpbMzRdLFwiZ3Jvd3RoXCI6WzM1XSxcIml0c1wiOlszN10sXCJzaXplXCI6WzM4XSxcImR1cmluZ1wiOlszOV0sXCJ0aGF0XCI6WzQwLDQ0XSxcInBlcmlvZC5cIjpbNDFdLFwiV2VcIjpbNDJdLFwic2hvd1wiOls0M10sXCJvdXJcIjpbNDVdLFwiZml0XCI6WzQ3XSxcInJlYWxcIjpbNDldLFwiZGF0YVwiOls1MF0sXCJ2ZXJ5XCI6WzUxXSxcIndlbGxcIjpbNTJdLFwicmVzdWx0aW5nXCI6WzUzXSxcImluXCI6WzU0XSxcImNvcnJlbGF0aW9uXCI6WzU1XSxcImNvZWZmaWNpZW50c1wiOls1Nl0sXCI5NiVcIjpbNThdLFwib3JcIjpbNTldLFwiaGlnaGVyLk91clwiOls2MF0sXCJvYnNlcnZhdGlvbnNcIjpbNjFdLFwicHJvdmlkZVwiOls2Ml0sXCJub3ZlbFwiOls2NF0sXCJwZXJzcGVjdGl2ZVwiOls2NV0sXCJzdHJ1Y3R1cmVcIjpbNjhdLFwiSW50ZXJuZXQuXCI6WzcxXSxcIlRoZVwiOls3Ml0sXCJkZXNjcmliZVwiOls3NF0sXCJjb25jaXNlbHlcIjpbNzVdLFwic2tld2VkXCI6Wzc2XSxcImRpc3RyaWJ1dGlvbnNcIjpbNzddLFwiZ3JhcGhcIjpbNzldLFwicHJvcGVydGllc1wiOls4MF0sXCJzdWNoXCI6WzgxLDk3XSxcImFzXCI6WzgyLDk4XSxcIm5vZGVcIjpbODRdLFwib3V0ZGVncmVlLlwiOls4NV0sXCJJblwiOls4Nl0sXCJhZGRpdGlvbixcIjpbODddLFwidGhlc2VcIjpbODhdLFwiY2FuXCI6WzkwLDExNV0sXCJiZVwiOls5MV0sXCJ1c2VkXCI6WzkyXSxcInRvXCI6WzkzLDExOF0sXCJlc3RpbWF0ZVwiOls5NF0sXCJpbXBvcnRhbnRcIjpbOTVdLFwicGFyYW1ldGVyc1wiOls5Nl0sXCJhdmVyYWdlXCI6WzEwMF0sXCJuZWlnaGJvcmhvb2RcIjpbMTAxXSxcInNpemUsXCI6WzEwMl0sXCJmYWNpbGl0YXRlXCI6WzEwNF0sXCJkZXNpZ25cIjpbMTA2XSxcInBlcmZvcm1hbmNlXCI6WzEwOV0sXCJhbmFseXNpc1wiOlsxMTBdLFwicHJvdG9jb2xzLlwiOlsxMTJdLFwiRnVydGhlcm1vcmUsXCI6WzExM10sXCJ1c2VcIjpbMTE2XSxcInRoZW1cIjpbMTE3XSxcImdlbmVyYXRlXCI6WzExOV0sXCJzZWxlY3RcIjpbMTIxXSxcInJlYWxpc3RpY1wiOlsxMjJdLFwidG9wb2xvZ2llc1wiOlsxMjNdLFwic2ltdWxhdGlvblwiOlsxMjVdLFwicHVycG9zZXMuXCI6WzEyNl19fSxcIlNcIjpbe1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy53d3ctdXNlcnMuaXRsYWJzLnVtbi5lZHUvY2xhc3Nlcy9mYWxsLTIwMDgvY3NjaTgyMTEvcmVhZGluZ3MvcG93ZXItbGF3LWludGVybmV0LXRvcG9sb2d5LXAyNTEtZmFsb3V0c29zLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vc25hcC5zdGFuZm9yZC5lZHUvY2xhc3MvY3MyMjR3LXJlYWRpbmdzL2ZhbG91dHNvczk5cG93ZXJsYXcucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3NsLm10dS5lZHUvY3M2NDYxL3d3dy9SZWFkaW5nL0ZhbG91dHNvcy1zaWdjb21tOTkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MucnV0Z2Vycy5lZHUvfmJhZHJpLzU1MmRpci9wYXBlcnMvbWVhcy9wMjUxLWZhbG91dHNvcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3Blb3BsZS5jcy52dC5lZHUvfmJhZGl0eWFwL2NsYXNzZXMvY3M2NjA0LUZhbGwxMy9yZWFkaW5ncy9mYWxvdXRzb3MtY3ViZWQtOTkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZW5zYy5zZnUuY2EvfmxqaWxqYS9FTlNDODM1L0Fzc2lnbm1lbnRzL3BhcGVycy9wMjUxLWZhbG91dHNvcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dzIuZW5zYy5zZnUuY2EvfmxqaWxqYS9FTlNDODM1L1NwcmluZzExL0Fzc2lnbm1lbnRzL3BhcGVycy9wMjUxLWZhbG91dHNvcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2Vuc2l3aWtpLmVuc2ltYWcuZnIvaW1hZ2VzL2YvZjMvSmVyb21lR0lOU1NfcmVmNS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvc2lnY29tbS9zaWdjb21tMTk5OS5odG1sI0ZhbG91dHNvc0ZGOTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0zMTYyMjlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3JlcG9zaXRvcnkuY211LmVkdS9jZ2kvdmlld2NvbnRlbnQuY2dpP2FydGljbGU9MTU4NCZjb250ZXh0PWNvbXBzY2lcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1LzMxNjE4OC4zMTYyMjlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9kb2lkPTMxNjE5NC4zMTYyMjlcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTMxNjIyOVwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZG9pLmFjbS5vcmcvMTAuMTE0NS8zMTYxODguMzE2MjI5XCJ9XSxcIlZGTlwiOlwiQUNNIFNwZWNpYWwgSW50ZXJlc3QgR3JvdXAgb24gRGF0YSBDb21tdW5pY2F0aW9uXCIsXCJWU05cIjpcIlNJR0NPTU1cIixcIlZcIjoyOSxcIklcIjo0LFwiRlBcIjoyNTEsXCJMUFwiOjI2MixcIkRPSVwiOlwiMTAuMTE0NS8zMTYxODguMzE2MjI5XCIsXCJDQ1wiOntcIjkwMzQ1NTQyXCI6W1wiVGhlcmUgaXMgYSByaWNoIGxpdGVyYXR1cmUgdGhhdCBwcm92ZXMgdGhhdCB0aGUgZWlnZW52YWx1ZXMgb2YgYSBncmFwaCBhcmUgY2xvc2VseSByZWxhdGVkIHRvIG1hbnkgYmFzaWMgdG9wb2xvZ2ljYWwgcHJvcGVydGllcyBzdWNoIGFzIHRoZSBkaWFtZXRlciwgdGhlIG51bWJlciBvZiBlZGdlcywgdGhlIG51bWJlciBvZiBzcGFubmluZyB0cmVlcywgdGhlIG51bWJlciBvZiBjb25uZWN0ZWQgY29tcG9uZW50cywgYW5kIHRoZSBudW1iZXIgb2Ygd2Fsa3Mgb2YgYSBjZXJ0YWluIGxlbmd0aCBiZXR3ZWVuIHZlcnRpY2VzLCBhcyB3ZSBjYW4gc2VlIGluIFs4XSBhbmQgWzRdLlwiXSxcIjE3NzI0OTc0N1wiOltcIkluIG5ldHdvcmtzLCB3ZSBvZnRlbiBuZWVkIHRvIHJlYWNoIGEgdGFyZ2V0IHdpdGhvdXQga25vd2luZyBpdHMgZXhhY3QgcG9zaXRpb24gWzddIFsxXS5cIixcIk91ciBlc3RpbWF0ZSBpcyBhbiBpbXByb3ZlbWVudCBvdmVyIHRoZSBjb21tb25seSB1c2VkIGVzdGltYXRlIHRoYXQgdXNlcyB0aGUgYXZlcmFnZSBvdXRkZWdyZWUgWzI2XSBbN10gd2hpY2ggd2UgY2FsbCBhdmVyYWdlb3V0ZGVncmVlIGVzdGltYXRlOiBOTjAoaCkgPSBkICggZCAxKWggMSBJbiBndXJlIDksIHdlIHBsb3QgdGhlIGFjdHVhbCBhbmQgYm90aCBlc3RpbWF0ZXMgb2YgdGhlIGF2ZXJhZ2UgbmVpZ2hib3Job29kIHNpemUgdmVyc3VzIHRoZSBudW1iZXIgb2YgaG9wcyBmb3IgdGhlIEludC0xMi05OCBncmFwaC5cIixcIkFjdHVhbGx5LCBnaXZlbiBqdXN0IGEgaHlwb3RoZXNpcyBmb3IgdGhlIG51bWJlciBvZiBub2Rlcywgd2UgY2FuIGVzdGltYXRlIHRoZSBudW1iZXIgb2YgZWRnZXMgZnJvbSBMZW1tYSAyLCBhbmQgNlNvbWUgcHJvdG9jb2xzIHRoYXQgZW1wbG95IGJyb2FkY2FzdGluZyBvciBvb2RpbmcgdGVjaG5pcXVlcyBhcmUgdGhlIGxpbmstc3RhdGUgcHJvdG9jb2xzIE9TUEYgYW5kIE1PU1BGIFsxM10sIGFuZCB0aGUgbXVsdGljYXN0IHByb3RvY29scyBEVk1SUCBbMjJdLCBRb1NNSUMgWzddLCBZQU0gWzFdLlwiXSxcIjE1NTY5NTA0NDdcIjpbXCJIb3dldmVyLCB0aGUgYXV0aG9ycyBiZWxpZXZlIHRoYXQgdGhlc2UgcG93ZXItbGF3cyBjaGFyYWN0ZXJpemUgdGhlIGR5bmFtaWMgZXF1aWxpYnJpdW0gb2YgdGhlIEludGVybmV0IGdyb3d0aCBpbiB0aGUgc2FtZSB3YXkgcG93ZXItbGF3cyBhcHBlYXIgdG8gZGVzY3JpYmUgdmFyaW91cyBuYXR1cmFsIG5ldHdvcmtzIHN1Y2ggYXMgdGhlIHRoZSBodW1hbiByZXNwaXJhdG9yeSBzeXN0ZW0gWzEyXSwgYW5kIGF1dG9tb2JpbGUgbmV0d29ya3MgWzZdLlwiXSxcIjIwMzI3NDE3NDlcIjpbXCJBY3R1YWxseSwgZ2l2ZW4ganVzdCBhIGh5cG90aGVzaXMgZm9yIHRoZSBudW1iZXIgb2Ygbm9kZXMsIHdlIGNhbiBlc3RpbWF0ZSB0aGUgbnVtYmVyIG9mIGVkZ2VzIGZyb20gTGVtbWEgMiwgYW5kIDZTb21lIHByb3RvY29scyB0aGF0IGVtcGxveSBicm9hZGNhc3Rpbmcgb3Igb29kaW5nIHRlY2huaXF1ZXMgYXJlIHRoZSBsaW5rLXN0YXRlIHByb3RvY29scyBPU1BGIGFuZCBNT1NQRiBbMTNdLCBhbmQgdGhlIG11bHRpY2FzdCBwcm90b2NvbHMgRFZNUlAgWzIyXSwgUW9TTUlDIFs3XSwgWUFNIFsxXS5cIl0sXCIyMDY5Mjg3NDgwXCI6W1wiQWN0dWFsbHksIGdpdmVuIGp1c3QgYSBoeXBvdGhlc2lzIGZvciB0aGUgbnVtYmVyIG9mIG5vZGVzLCB3ZSBjYW4gZXN0aW1hdGUgdGhlIG51bWJlciBvZiBlZGdlcyBmcm9tIExlbW1hIDIsIGFuZCA2U29tZSBwcm90b2NvbHMgdGhhdCBlbXBsb3kgYnJvYWRjYXN0aW5nIG9yIG9vZGluZyB0ZWNobmlxdWVzIGFyZSB0aGUgbGluay1zdGF0ZSBwcm90b2NvbHMgT1NQRiBhbmQgTU9TUEYgWzEzXSwgYW5kIHRoZSBtdWx0aWNhc3QgcHJvdG9jb2xzIERWTVJQIFsyMl0sIFFvU01JQyBbN10sIFlBTSBbMV0uXCJdLFwiMjA4OTA0OTU4NVwiOltcIkluIG5ldHdvcmtzLCB3ZSBvZnRlbiBuZWVkIHRvIHJlYWNoIGEgdGFyZ2V0IHdpdGhvdXQga25vd2luZyBpdHMgZXhhY3QgcG9zaXRpb24gWzddIFsxXS5cIixcIkFjdHVhbGx5LCBnaXZlbiBqdXN0IGEgaHlwb3RoZXNpcyBmb3IgdGhlIG51bWJlciBvZiBub2Rlcywgd2UgY2FuIGVzdGltYXRlIHRoZSBudW1iZXIgb2YgZWRnZXMgZnJvbSBMZW1tYSAyLCBhbmQgNlNvbWUgcHJvdG9jb2xzIHRoYXQgZW1wbG95IGJyb2FkY2FzdGluZyBvciBvb2RpbmcgdGVjaG5pcXVlcyBhcmUgdGhlIGxpbmstc3RhdGUgcHJvdG9jb2xzIE9TUEYgYW5kIE1PU1BGIFsxM10sIGFuZCB0aGUgbXVsdGljYXN0IHByb3RvY29scyBEVk1SUCBbMjJdLCBRb1NNSUMgWzddLCBZQU0gWzFdLlwiXSxcIjIwOTAyMjM1MDVcIjpbXCJBdCB0aGUgcm91dGVyIGxldmVsLCB3ZSByZXByZXNlbnQgZWFjaCByb3V0ZXIgYnkgYSBub2RlIFsxNF0uXCIsXCJQYW5zaW90IGFuZCBHcmFkIFsxNF0gc3R1ZHkgdGhlIHRvcG9sb2d5IG9mIHRoZSBJbnRlcm5ldCBpbiAyVGhlIGRlIG5pdGlvbiBvZiBhbiBhdXRvbm9tb3VzIHN5c3RlbSBjYW4gdmFyeSBpbiB0aGUgbGl0ZXJhdHVyZSwgYnV0IGl0IHVzdWFsbHkgY29pbmNpZGVzIHdpdGggdGhhdCBvZiB0aGUgZG9tYWluIFsxMF0uXCIsXCJUaGUgZ3JhcGggcmVwcmVzZW50cyB0aGUgdG9wb2xvZ3kgb2YgdGhlIHJvdXRlcnMgb2YgdGhlIEludGVybmV0IGluIDE5OTUsIGFuZCB3YXMgdGVkaW91c2x5IGNvbGxlY3RlZCBieSBQYW5zaW90IGFuZCBHcmFkIFsxNF0uXCJdLFwiMjA5MTEzMjI0NVwiOltcIlsxMV0gc2hvdyB0aGUgc2VsZi1zaW1pbGFyIG5hdHVyZSBvZiBMb2NhbCBBcmVhIE5ldHdvcmsgKExBTikgdHJhIGMuXCJdLFwiMjEwMjA1NjAxNlwiOltcIlNldmVyYWwgZ3JhcGgtZ2VuZXJhdG9yIG1vZGVscyBoYXZlIGJlZW4gcHJvcG9zZWQgWzIzXSBbNV0gWzI3XSwgYnV0IHRoZSBwcm9ibGVtIG9mIGNyZWF0aW5nIHJlYWxpc3RpYyB0b3BvbG9naWVzIGlzIG5vdCB5ZXQgc29sdmVkOyB0aGUgc2VsZWN0aW9uIG9mIHNldmVyYWwgcGFyYW1ldGVyIHZhbHVlcyBhcmUgbGVmdCB0byB0aGUgaW50dWl0aW9uIGFuZCB0aGUgZXhwZXJpZW5jZSBvZiBlYWNoIHJlc2VhcmNoZXIuXCIsXCJBcyB0aGUgc2l6ZSBhbmQgdGhlIGNvbXBsZXhpdHkgb2YgdGhlIG5ldHdvcmsgaW5jcmVhc2VkIG1vcmUgZGV0YWlsZWQgbW9kZWxzIHdlcmUgbmVlZGVkIFs1XSBbMjddLlwiXSxcIjIxMDU4MDgxMDdcIjpbXCJTZXZlcmFsIGdyYXBoLWdlbmVyYXRvciBtb2RlbHMgaGF2ZSBiZWVuIHByb3Bvc2VkIFsyM10gWzVdIFsyN10sIGJ1dCB0aGUgcHJvYmxlbSBvZiBjcmVhdGluZyByZWFsaXN0aWMgdG9wb2xvZ2llcyBpcyBub3QgeWV0IHNvbHZlZDsgdGhlIHNlbGVjdGlvbiBvZiBzZXZlcmFsIHBhcmFtZXRlciB2YWx1ZXMgYXJlIGxlZnQgdG8gdGhlIGludHVpdGlvbiBhbmQgdGhlIGV4cGVyaWVuY2Ugb2YgZWFjaCByZXNlYXJjaGVyLlwiLFwiUmVnYXJkaW5nIHRoZSBjcmVhdGlvbiBvZiByZWFsaXN0aWMgZ3JhcGhzLCBXYXhtYW4gaW50cm9kdWNlZCB3aGF0IHNlZW1zIHRvIGJlIG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIG5ldHdvcmsgbW9kZWxzIFsyM10uXCJdLFwiMjEwNzc3OTcyOFwiOltcIkhvd2V2ZXIsIHRoZSBhdXRob3JzIGJlbGlldmUgdGhhdCB0aGVzZSBwb3dlci1sYXdzIGNoYXJhY3Rlcml6ZSB0aGUgZHluYW1pYyBlcXVpbGlicml1bSBvZiB0aGUgSW50ZXJuZXQgZ3Jvd3RoIGluIHRoZSBzYW1lIHdheSBwb3dlci1sYXdzIGFwcGVhciB0byBkZXNjcmliZSB2YXJpb3VzIG5hdHVyYWwgbmV0d29ya3Mgc3VjaCBhcyB0aGUgdGhlIGh1bWFuIHJlc3BpcmF0b3J5IHN5c3RlbSBbMTJdLCBhbmQgYXV0b21vYmlsZSBuZXR3b3JrcyBbNl0uXCJdLFwiMjE0NTcyMTQ3OVwiOltcIkFsdGhvdWdoIHdlIGZvY3VzIG9uIHRoZSBJbnRlcm5ldCB0b3BvbG9neSBhdCB0aGUgaW50ZXJkb21haW4gbGV2ZWwsIHdlIGFsc28gZXhhbWluZSBhbiBpbnN0YW5jZSBhdCB0aGUgcm91dGVyIDRCR1Agc3RhbmRzIGZvciB0aGUgQm9yZGVyIEdhdGV3YXkgUHJvdG9jb2wgWzE5XSwgYW5kIGl0IGlzIHRoZSBpbnRlci1kb21haW4gcm91dGluZyBwcm90b2NvbC5cIl0sXCIyMTQ5ODcxMTY1XCI6W1wiWzE3XSB2ZXJpZnkgdGhlIHJlYXNvbmFibGUgYWNjdXJhY3kgb2YgdGhlIENodWFuZy1TaXJidSBzY2FsaW5nIGxhdyBmb3IgcHJhY3RpY2FsIHB1cnBvc2VzLCBidXQgdGhleSBhbHNvIHByb3Bvc2UgYW4gZXN0aW1hdGUgdGhhdCBkb2VzIG5vdCBmb2xsb3cgYSBwb3dlci1sYXcuXCIsXCJPdGhlciBleHBlcmltZW50YWwgc3R1ZGllcyBmb2N1cyBvbiBuZWlnaGJvcmhvb2RzIG9mIGxhcmdlciByYWRpdXMgWzE3XS5cIl0sXCIyMTYwMDM4NTMyXCI6W1wiUGF4c29uIGFuZCBGbG95ZCBjb25zaWRlciB0aGlzIHByb2JsZW0gYXMgYSBtYWpvciByZWFzb24gXFxcXFdoeSBXZSBEb24ndCBLbm93IEhvdyBUbyBTaW11bGF0ZSBUaGUgSW50ZXJuZXRcXFwiIFsxNl0uXCJdLFwiMjE2NTc0Mzc0NFwiOltcIkF0IHRoZSBpbnRlci1kb21haW4gbGV2ZWwsIGVhY2ggZG9tYWluIGlzIHJlcHJlc2VudGVkIGJ5IGEgc2luZ2xlIG5vZGUgWzEwXSBhbmQgZWFjaCBlZGdlIGlzIGFuIGludGVyLWRvbWFpbiBpbnRlcmNvbm5lY3Rpb24uXCIsXCJHb3ZpbmRhbiBhbmQgUmVkZHkgWzEwXSBzdHVkeSB0aGUgZ3Jvd3RoIG9mIHRoZSBpbnRlci1kb21haW4gdG9wb2xvZ3kgb2YgdGhlIEludGVybmV0IGJldHdlZW4gMTk5NCBhbmQgMTk5NS5cIixcIlBhbnNpb3QgYW5kIEdyYWQgWzE0XSBzdHVkeSB0aGUgdG9wb2xvZ3kgb2YgdGhlIEludGVybmV0IGluIDJUaGUgZGUgbml0aW9uIG9mIGFuIGF1dG9ub21vdXMgc3lzdGVtIGNhbiB2YXJ5IGluIHRoZSBsaXRlcmF0dXJlLCBidXQgaXQgdXN1YWxseSBjb2luY2lkZXMgd2l0aCB0aGF0IG9mIHRoZSBkb21haW4gWzEwXS5cIl0sXCIyMTcwMTIwNDA5XCI6W1wiSW4gdGhpcyBzZWN0aW9uLCB3ZSB1c2UgbGluZWFyIHJlZ3Jlc3Npb24gdG8gdCBhIGxpbmUgaW4gYSBzZXQgb2YgdHdvLWRpbWVuc2lvbmFsIHBvaW50cyBbMThdLlwiXX0sXCJQUlwiOlsyMDA4NjIwMjY0LDIxMTIwOTA3MDIsMjEyNDYzNzQ5MiwyMTQ4NjA2MTk2LDI3NjgzMTc3NDEsMjA2NTc2OTUwMiwyMTA3MzY3NjIsMjE0NDg4NTM0MiwyMTE0NTgxOTI5LDE5ODM2MTAxMzMsMjc5ODMxOTgyMywyNzY5MTMzMDU1LDE1NzM1NzkzMjksMjA5NzE0Nzk1MiwyMTA1ODA4MTA3LDE5NzE0MjE5MjUsMjE2NDcyNzE3NiwyMTI1MzE1NTY3LDE5MjA4OTYzMzUsMjEwNDA4NTY3MiwyMDA4NjIwMjY0LDIxMTIwOTA3MDIsMjEyNDYzNzQ5MiwyMTQ4NjA2MTk2LDI3NjgzMTc3NDEsMjA2NTc2OTUwMiwyMTA3MzY3NjIsMjE0NDg4NTM0MiwyMTE0NTgxOTI5LDE5ODM2MTAxMzMsMjc5ODMxOTgyMywyNzY5MTMzMDU1LDE1NzM1NzkzMjksMjA5NzE0Nzk1MiwyMTA1ODA4MTA3LDE5NzE0MjE5MjUsMjE2NDcyNzE3NiwyMTI1MzE1NTY3LDE5MjA4OTYzMzUsMjEwNDA4NTY3Ml0sXCJBTkZcIjpbe1wiRk5cIjpcIk1pY2hhbGlzXCIsXCJMTlwiOlwiRmFsb3V0c29zXCIsXCJTXCI6MX0se1wiRk5cIjpcIlBldHJvc1wiLFwiTE5cIjpcIkZhbG91dHNvc1wiLFwiU1wiOjJ9LHtcIkZOXCI6XCJDaHJpc3Rvc1wiLFwiTE5cIjpcIkZhbG91dHNvc1wiLFwiU1wiOjN9XSxcIkJWXCI6XCJQcm9jZWVkaW5ncyBvZiB0aGUgY29uZmVyZW5jZSBvbiBBcHBsaWNhdGlvbnMsIHRlY2hub2xvZ2llcywgYXJjaGl0ZWN0dXJlcywgYW5kIHByb3RvY29scyBmb3IgY29tcHV0ZXIgY29tbXVuaWNhdGlvblwiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNS44MzEsImtlc0VudGl0eUlkIjo5NDY2OTAsIklkIjoyMDU4NDAxMjEyLCJUaSI6ImludGVybmV0IG9mIHRoaW5ncyBmb3Igc21hcnQgY2l0aWVzIiwiWSI6MjAxNCwiRCI6IjIwMTQtMDItMDEiLCJSSWQiOlsyMTA1MTAzNzc3LDIzMjU4NzcwODksMjIzNDYzOTczMiwyMDgxNjQyNzE0LDIyMzI4ODc5NDQsMjA1MDI0ODA3OCwyMTY2NDkwOTEzLDE2NzM2ODkwMSwyMjk1Mzc0NDEzLDIyODA5NzE0ODYsMjYxMTU2MDY4NywxOTcxNDU5MDA1LDMzMDU1ODUzLDIxNjE2MTQxMjYsMTk2ODY1NDA3MSwyMTU1NzcxNDI1LDIwMTg5MTE0ODQsMjExNTU1MjI1NywxOTc4NjU5NTUzLDIxMzg1OTM3OTQsMjE1NjUyNjkwOSwyMTMxMzAzNjA2LDE5Njg2NTQ0NDksMjEzMzM1MTQzMiwxNTA5NzcyMzE5LDE5NzgwNzMwOTIsMjE1Mzk2MjkxOCwyMDM0OTMxNTYwLDE5NzY0NzkzMDEsMjEzMDUxMjI2OSwyNTIyNDYyNTM1LDIxMzQ4Mjg0MDcsMjYwMjM2MzU2NV0sIkFBIjpbeyJBdU4iOiJhbmRyZWEgemFuZWxsYSJ9LHsiQXVOIjoibmljb2xhIGJ1aSJ9LHsiQXVOIjoiYW5nZWxvIHBhb2xvIGNhc3RlbGxhbmkifSx7IkF1TiI6ImxvcmVuem8gdmFuZ2VsaXN0YSJ9LHsiQXVOIjoibWljaGVsZSB6b3J6aSJ9XSwiRiI6W3siRk4iOiJhcHBsaWNhdGlvbiBkb21haW4ifSx7IkZOIjoic21hcnQgY2l0eSJ9LHsiRk4iOiJidWlsZGluZyBhdXRvbWF0aW9uIn0seyJGTiI6InNvZnR3YXJlIGRlcGxveW1lbnQifSx7IkZOIjoibGluayBsYXllciJ9LHsiRk4iOiJpbnRlcm5ldCBvZiB0aGluZ3MifSx7IkZOIjoiYXJjaGl0ZWN0dXJlIn0seyJGTiI6ImNvbXB1dGVyIHNlY3VyaXR5In0seyJGTiI6ImNvbXB1dGVyIG5ldHdvcmsifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJJbnRlcm5ldCBvZiBUaGluZ3MgZm9yIFNtYXJ0IENpdGllc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE5NCxcIkludmVydGVkSW5kZXhcIjp7XCJUaGVcIjpbMF0sXCJJbnRlcm5ldFwiOlsxXSxcIm9mXCI6WzIsMTYsMjksMzQsMzcsNTUsNjAsMTI5LDE0MywxNzcsMTg0XSxcIlRoaW5nc1wiOlszXSxcIihJb1QpXCI6WzRdLFwic2hhbGxcIjpbNV0sXCJiZVwiOls2LDY5XSxcImFibGVcIjpbN10sXCJ0b1wiOls4LDI2LDgxLDEwNywxMjJdLFwiaW5jb3Jwb3JhdGVcIjpbOV0sXCJ0cmFuc3BhcmVudGx5XCI6WzEwXSxcImFuZFwiOlsxMSwxOCw2NSwxMzIsMTQ4LDE1OSwxNjRdLFwic2VhbWxlc3NseVwiOlsxMl0sXCJhXCI6WzEzLDM1LDQxLDQ5LDczLDkxLDE0MCwxNzRdLFwibGFyZ2VcIjpbMTQsNThdLFwibnVtYmVyXCI6WzE1XSxcImRpZmZlcmVudFwiOlsxN10sXCJoZXRlcm9nZW5lb3VzXCI6WzE5XSxcImVuZFwiOlsyMF0sXCJzeXN0ZW1zLFwiOlsyMV0sXCJ3aGlsZVwiOlsyMiw4N10sXCJwcm92aWRpbmdcIjpbMjNdLFwib3BlblwiOlsyNF0sXCJhY2Nlc3NcIjpbMjVdLFwic2VsZWN0ZWRcIjpbMjddLFwic3Vic2V0c1wiOlsyOF0sXCJkYXRhXCI6WzMwXSxcImZvclwiOlszMSw0NCwxMjYsMTMzLDE1MF0sXCJ0aGVcIjpbMzIsNDUsNTYsMTA5LDExNywxMjcsMTMwLDEzNCwxNDQsMTU1LDE2MSwxNjksMTgyLDE5MV0sXCJkZXZlbG9wbWVudFwiOlszM10sXCJwbGV0aG9yYVwiOlszNl0sXCJkaWdpdGFsXCI6WzM4XSxcInNlcnZpY2VzLlwiOlszOV0sXCJCdWlsZGluZ1wiOls0MF0sXCJnZW5lcmFsXCI6WzQyXSxcImFyY2hpdGVjdHVyZVwiOls0MywxNDldLFwiSW9UXCI6WzQ2LDg0LDE3OV0sXCJpc1wiOls0N10sXCJoZW5jZVwiOls0OCwxMzhdLFwidmVyeVwiOls1MF0sXCJjb21wbGV4XCI6WzUxXSxcInRhc2ssXCI6WzUyXSxcIm1haW5seVwiOls1M10sXCJiZWNhdXNlXCI6WzU0XSxcImV4dHJlbWVseVwiOls1N10sXCJ2YXJpZXR5XCI6WzU5XSxcImRldmljZXMsXCI6WzYxXSxcImxpbmtcIjpbNjJdLFwibGF5ZXJcIjpbNjNdLFwidGVjaG5vbG9naWVzLFwiOls2NCwxNDZdLFwic2VydmljZXNcIjpbNjYsMTI1XSxcInRoYXRcIjpbNjddLFwibWF5XCI6WzY4XSxcImludm9sdmVkXCI6WzcwXSxcImluXCI6WzcxLDEwMywxNjgsMTgxLDE4OF0sXCJzdWNoXCI6WzcyXSxcInN5c3RlbS5cIjpbNzRdLFwiSW5cIjpbNzVdLFwidGhpc1wiOls3Nl0sXCJwYXBlcixcIjpbNzddLFwid2VcIjpbNzhdLFwiZm9jdXNcIjpbNzldLFwic3BlY2lmaWNhbGx5XCI6WzgwXSxcImFuXCI6WzgyLDE1MSwxNzhdLFwidXJiYW5cIjpbODMsMTUyXSxcInN5c3RlbVwiOls4NV0sXCJ0aGF0LFwiOls4Nl0sXCJzdGlsbFwiOls4OF0sXCJiZWluZ1wiOls4OV0sXCJxdWl0ZVwiOls5MF0sXCJicm9hZFwiOls5Ml0sXCJjYXRlZ29yeSxcIjpbOTNdLFwiYXJlXCI6Wzk0LDEwNV0sXCJjaGFyYWN0ZXJpemVkXCI6Wzk1XSxcImJ5XCI6Wzk2XSxcInRoZWlyXCI6Wzk3XSxcInNwZWNpZmljXCI6Wzk4XSxcImFwcGxpY2F0aW9uXCI6Wzk5XSxcImRvbWFpbi5cIjpbMTAwXSxcIlVyYmFuXCI6WzEwMV0sXCJJb1RzLFwiOlsxMDJdLFwiZmFjdCxcIjpbMTA0XSxcImRlc2lnbmVkXCI6WzEwNl0sXCJzdXBwb3J0XCI6WzEwOCwxMjNdLFwiU21hcnRcIjpbMTEwLDE3MV0sXCJDaXR5XCI6WzExMSwxNzJdLFwidmlzaW9uLFwiOlsxMTJdLFwid2hpY2hcIjpbMTEzXSxcImFpbXNcIjpbMTE0XSxcImF0XCI6WzExNV0sXCJleHBsb2l0aW5nXCI6WzExNl0sXCJtb3N0XCI6WzExOF0sXCJhZHZhbmNlZFwiOlsxMTldLFwiY29tbXVuaWNhdGlvblwiOlsxMjBdLFwidGVjaG5vbG9naWVzXCI6WzEyMV0sXCJhZGRlZC12YWx1ZVwiOlsxMjRdLFwiYWRtaW5pc3RyYXRpb25cIjpbMTI4XSxcImNpdHlcIjpbMTMxLDE4MywxOTJdLFwiY2l0aXplbnMuXCI6WzEzNV0sXCJUaGlzXCI6WzEzNl0sXCJwYXBlclwiOlsxMzcsMTU2XSxcInByb3ZpZGVzXCI6WzEzOV0sXCJjb21wcmVoZW5zaXZlXCI6WzE0MV0sXCJzdXJ2ZXlcIjpbMTQyXSxcImVuYWJsaW5nXCI6WzE0NV0sXCJwcm90b2NvbHMsXCI6WzE0N10sXCJJb1QuXCI6WzE1M10sXCJGdXJ0aGVybW9yZSxcIjpbMTU0XSxcIndpbGxcIjpbMTU3XSxcInByZXNlbnRcIjpbMTU4XSxcImRpc2N1c3NcIjpbMTYwXSxcInRlY2huaWNhbFwiOlsxNjJdLFwic29sdXRpb25zXCI6WzE2M10sXCJiZXN0LXByYWN0aWNlXCI6WzE2NV0sXCJndWlkZWxpbmVzXCI6WzE2Nl0sXCJhZG9wdGVkXCI6WzE2N10sXCJQYWRvdmFcIjpbMTcwXSxcInByb2plY3QsXCI6WzE3M10sXCJwcm9vZi1vZi1jb25jZXB0XCI6WzE3NV0sXCJkZXBsb3ltZW50XCI6WzE3Nl0sXCJpc2xhbmRcIjpbMTgwXSxcIlBhZG92YSxcIjpbMTg1XSxcIkl0YWx5LFwiOlsxODZdLFwicGVyZm9ybWVkXCI6WzE4N10sXCJjb2xsYWJvcmF0aW9uXCI6WzE4OV0sXCJ3aXRoXCI6WzE5MF0sXCJtdW5pY2lwYWxpdHkuXCI6WzE5M119fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2VwcmludHMubmV0d29ya3MuaW1kZWEub3JnLzc0MC8xLzA2NzQwODQ0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmRlaS51bmlwZC5pdC9+emFuZWxsYS9QQVBFUi9DUl8yMDE0L0lvVFNtYXJ0Q2l0eTIwMTRfQ1IucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9pZWVleHBsb3JlLmllZWUub3JnL2RvY3VtZW50LzY3NDA4NDQvXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9keC5kb2kub3JnLzEwLjExMDkvSklPVC4yMDE0LjIzMDYzMjhcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2VwcmludHMubmV0d29ya3MuaW1kZWEub3JnLzc0MC9cIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kub3JnLzEwLjExMDkvSklPVC4yMDE0LjIzMDYzMjhcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2lvdGovaW90ajEuaHRtbCNaYW5lbGxhQkNWWjE0XCJ9XSxcIlZGTlwiOlwiSUVFRSBJbnRlcm5ldCBvZiBUaGluZ3MgSm91cm5hbFwiLFwiVlwiOjEsXCJJXCI6MSxcIkZQXCI6MjIsXCJMUFwiOjMyLFwiRE9JXCI6XCIxMC4xMTA5L0pJT1QuMjAxNC4yMzA2MzI4XCIsXCJDQ1wiOntcIjMzMDU1ODUzXCI6W1widGhlIElvVCB2aXNpb24gY2FuIGJlY29tZSB0aGUgYnVpbGRpbmcgYmxvY2sgdG8gcmVhbGl6ZSBhIHVuaWZpZWQgdXJiYW4tc2NhbGUgSUNUIHBsYXRmb3JtLCB0aHVzIHVubGVhc2hpbmcgdGhlIHBvdGVudGlhbCBvZiB0aGUgU21hcnQgQ2l0eSB2aXNpb24gWzEwXSwgWzExXS5cIl0sXCIxNjczNjg5MDFcIjpbXCJ0aHVzIHJlYWxpemluZyB0aGUgc28tY2FsbGVkIFNtYXJ0IENpdHkgY29uY2VwdCBbNF0uXCJdLFwiMTk2ODY1NDA3MVwiOltcInRoZSBjcmVhdGlvbiBvZiBuZXcgc2VydmljZXMgdXBvbiB0aG9zZSBwcm92aWRlZCBieSB0aGUgSW9UIFs2XS5cIl0sXCIxOTY4NjU0NDQ5XCI6W1wiYWNjb3JkaW5nIHRvIHRoZXNlIGd1aWRlbGluZXMsIGFuZCBzdWNjZXNzZnVsbHkgdXNlZCB0byByZWFsaXplIHByb29mLW9mLWNvbmNlcHQgZGVtb25zdHJhdGlvbnMgb2Ygc21hcnQgZ3JpZCBbNDFdLCBhbmQgaGVhbHRoIGNhcmUgWzQyXSBzZXJ2aWNlcy5cIl0sXCIxOTcxNDU5MDA1XCI6W1wiQXMgZGlzY3Vzc2VkIGluIFsyN10sIGEgZ2VuZXJhbCBwdXJwb3NlIHNjaGVtYS1pbmZvcm1lZCBFWElcIixcIkZ1cnRoZXIgZGV0YWlscyBhYm91dCBFWEkgYW5kIHNjaGVtYS1pbmZvcm1lZCBwcm9jZXNzaW5nIGNhbiBiZSBmb3VuZCBpbiBbMjddLlwiXSxcIjE5NzY0NzkzMDFcIjpbXCJJb1Qgd2ViIGFwcGxpY2F0aW9ucyBhY2NvcmRpbmcgdG8gdGhlIGd1aWRlbGluZXMgZGVzY3JpYmVkIGluIHRoaXMgc2VjdGlvbiBoYXMgYmVlbiBwcm9wb3NlZCBpbiBbMjhdLCB3aGVyZSB0aGUgYXV0aG9ycyBhbHNvIHN1Z2dlc3QgZXhwbG9pdGluZyB0aGUgQXN5bmNocm9ub3VzIEphdmFTY3JpcHQgYW5kIFhNTCAoQUpBWCkgY2FwYWJpbGl0aWVzIG9mIG1vZGVybiB3ZWIgYnJvd3NlcnMgdGhhdCBhbGxvdyBmb3IgYSBkaXJlY3QgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIHRoZSBicm93c2VyIGFuZCB0aGUgZmluYWwgSW9UXCJdLFwiMTk3ODA3MzA5MlwiOltcIkZpbmFsbHksIGNvbmNlcm5pbmcgdGhlIGZpbmFuY2lhbCBkaW1lbnNpb24sIGEgY2xlYXIgYnVzaW5lc3MgbW9kZWwgaXMgc3RpbGwgbGFja2luZywgYWx0aG91Z2ggc29tZSBpbml0aWF0aXZlIHRvIGZpbGwgdGhpcyBnYXAgaGFzIGJlZW4gcmVjZW50bHkgdW5kZXJ0YWtlbiBbMTJdLlwiLFwiZmlyc3QgZGV2ZWxvcCB0aG9zZSBzZXJ2aWNlcyB0aGF0IGNvbmp1Z2F0ZSBzb2NpYWwgdXRpbGl0eSB3aXRoIHZlcnkgY2xlYXIgcmV0dXJuIG9uIGludmVzdG1lbnQsIHN1Y2ggYXMgc21hcnQgcGFya2luZyBhbmQgc21hcnQgYnVpbGRpbmdzLCBhbmQgd2lsbCBoZW5jZSBhY3QgYXMgY2F0YWx5emVycyBmb3IgdGhlIG90aGVyIGFkZGVkLXZhbHVlIHNlcnZpY2VzIFsxMl0uXCJdLFwiMTk3ODY1OTU1M1wiOltcImFjY29yZGluZyB0byB0aGVzZSBndWlkZWxpbmVzLCBhbmQgc3VjY2Vzc2Z1bGx5IHVzZWQgdG8gcmVhbGl6ZSBwcm9vZi1vZi1jb25jZXB0IGRlbW9uc3RyYXRpb25zIG9mIHNtYXJ0IGdyaWQgWzQxXSwgYW5kIGhlYWx0aCBjYXJlIFs0Ml0gc2VydmljZXMuXCJdLFwiMjAxODkxMTQ4NFwiOltcIm90aGVycyBbMl0uXCJdLFwiMjA1MDI0ODA3OFwiOltcIm1vbml0b3IgcG9sbHV0aW9uIGxldmVscywgYW5kIHRlbXBlcmF0dXJlIGFuZCBodW1pZGl0eSBzZW5zb3JzIHRvIGhhdmUgYSBjb21wbGV0ZSBjaGFyYWN0ZXJpemF0aW9uIG9mIHRoZSBlbnZpcm9ubWVudGFsIGNvbmRpdGlvbnMgWzEzXS5cIl0sXCIyMDgxNjQyNzE0XCI6W1wic29sdXRpb24gdG8gdGhpcyBwcm9ibGVtIGlzIG9mZmVyZWQgYnkgdGhlIElQdjYgc3RhbmRhcmQgWzMxXSxcIl0sXCIyMTA1MTAzNzc3XCI6W1wibGlmZSB3aWxsIGJlIGVxdWlwcGVkIHdpdGggbWljcm8tY29udHJvbGxlcnMsIHRyYW5zY2VpdmVycyBmb3IgZGlnaXRhbCBjb21tdW5pY2F0aW9uLCBhbmQgc3VpdGFibGUgcHJvdG9jb2wgc3RhY2tzIHRoYXQgd2lsbCBtYWtlIHRoZW0gYWJsZSB0byBjb21tdW5pY2F0ZSB3aXRoIG9uZSBhbm90aGVyIGFuZCB3aXRoIHRoZSB1c2VycywgYmVjb21pbmcgYW4gaW50ZWdyYWwgcGFydCBvZiB0aGUgSW50ZXJuZXQgWzFdLlwiXSxcIjIxMTU1NTIyNTdcIjpbXCJ0aGUgSW9UIHZpc2lvbiBjYW4gYmVjb21lIHRoZSBidWlsZGluZyBibG9jayB0byByZWFsaXplIGEgdW5pZmllZCB1cmJhbi1zY2FsZSBJQ1QgcGxhdGZvcm0sIHRodXMgdW5sZWFzaGluZyB0aGUgcG90ZW50aWFsIG9mIHRoZSBTbWFydCBDaXR5IHZpc2lvbiBbMTBdLCBbMTFdLlwiLFwiQW5vdGhlciBmdW5kYW1lbnRhbCBhc3BlY3QgaXMgdGhlIG5lY2Vzc2l0eSB0byBtYWtlIChwYXJ0IG9mKSB0aGUgZGF0YSBjb2xsZWN0ZWQgYnkgdGhlIHVyYmFuIElvVCBlYXNpbHkgYWNjZXNzaWJsZSBieSBhdXRob3JpdGllcyBhbmQgY2l0aXplbnMsIHRvIGluY3JlYXNlIHRoZSByZXNwb25zaXZlbmVzcyBvZiBhdXRob3JpdGllcyB0byBjaXR5IHByb2JsZW1zLCBhbmQgcHJvbW90ZSB0aGUgYXdhcmVuZXNzIGFuZCB0aGUgcGFydGljaXBhdGlvbiBvZiBjaXRpemVucyBpbiBwdWJsaWMgbWF0dGVycyBbMTFdLlwiXSxcIjIxMzA1MTIyNjlcIjpbXCJGb3IgaW5zdGFuY2UsIHRoZSBleHBlcmltZW50YWwgd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmsgdGVzdGJlZCwgd2l0aCBtb3JlIHRoYW4gMzAwIG5vZGVzLCBkZXBsb3llZCBhdCB0aGUgVW5pdmVyc2l0eSBvZiBQYWRvdmEgWzM5XSwgWzQwXSBoYXMgYmVlbiBkZXNpZ25lZFwiXSxcIjIxMzEzMDM2MDZcIjpbXCJzZW5zb3JzIGFuZCBpbnRlbGxpZ2VudCBkaXNwbGF5cyB0aGF0IGRpcmVjdCBtb3RvcmlzdHMgYWxvbmcgdGhlIGJlc3QgcGF0aCBmb3IgcGFya2luZyBpbiB0aGUgY2l0eSBbMjBdLlwiXSxcIjIxMzMzNTE0MzJcIjpbXCJ0byBtZWFzdXJlIHRoZSBhbW91bnQgb2Ygbm9pc2UgcHJvZHVjZWQgYXQgYW55IGdpdmVuIGhvdXIgaW4gdGhlIHBsYWNlcyB0aGF0IGFkb3B0IHRoZSBzZXJ2aWNlIFsxOF0uXCJdLFwiMjEzODU5Mzc5NFwiOltcIkZvciBpbnN0YW5jZSwgdGhlIGV4cGVyaW1lbnRhbCB3aXJlbGVzcyBzZW5zb3IgbmV0d29yayB0ZXN0YmVkLCB3aXRoIG1vcmUgdGhhbiAzMDAgbm9kZXMsIGRlcGxveWVkIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFBhZG92YSBbMzldLCBbNDBdIGhhcyBiZWVuIGRlc2lnbmVkXCJdLFwiMjE1Mzk2MjkxOFwiOltcImVycyB0aGF0IGRldGVjdCB0aGUgbGV2ZWwgb2YgbG9hZCBhbmQgYWxsb3cgZm9yIGFuIG9wdGltaXphdGlvbiBvZiB0aGUgY29sbGVjdG9yIHRydWNrcyByb3V0ZSwgY2FuIHJlZHVjZSB0aGUgY29zdCBvZiB3YXN0ZSBjb2xsZWN0aW9uIGFuZCBpbXByb3ZlIHRoZSBxdWFsaXR5IG9mIHJlY3ljbGluZyBbMTRdLCBbMTVdLlwiXSxcIjIxNTU3NzE0MjVcIjpbXCJjb25jZW50cmF0aW5nIHRoZSBzdHJhdGVnaWMgcGxhbm5pbmcgYW5kIG1hbmFnZW1lbnQgb2YgdGhlIHNtYXJ0IGNpdHkgYXNwZWN0cyBpbnRvIGEgc2luZ2xlLCBkZWRpY2F0ZWQgZGVwYXJ0bWVudCBpbiB0aGUgY2l0eSBbOV0uXCJdLFwiMjE1NjUyNjkwOVwiOltcIlRyYWZmaWMgbW9uaXRvcmluZyBtYXkgYmUgcmVhbGl6ZWQgYnkgdXNpbmcgdGhlIHNlbnNpbmcgY2FwYWJpbGl0aWVzIGFuZCBHUFMgaW5zdGFsbGVkIG9uIG1vZGVybiB2ZWhpY2xlcyBbMTldLCBidXQgYWxzbyBhZG9wdGluZyBhIGNvbWJpbmF0aW9uIG9mIGFpciBxdWFsaXR5IGFuZCBhY291c3RpYyBzZW5zb3JzIGFsb25nIGEgZ2l2ZW4gcm9hZC5cIl0sXCIyMjMyODg3OTQ0XCI6W1wiVGhpcyBwcm9ibGVtIGNhbiBiZSBvdmVyY29tZSBieSBhZG9wdGluZyA2TG9XUEFOIFszMl0gWzMzXSwgd2hpY2ggaXMgYW4gZXN0YWJsaXNoZWQgY29tcHJlc3Npb24gZm9ybWF0IGZvciBJUHY2IGFuZCBVRFAgaGVhZGVycyBvdmVyIGxvdy1wb3dlciBjb25zdHJhaW5lZCBuZXR3b3Jrcy5cIl0sXCIyMjM0NjM5NzMyXCI6W1wiVGhlIENvQVAgcHJvdG9jb2wgWzI5XSBvdmVyY29tZXMgdGhlc2UgZGlmZmljdWx0aWVzIGJ5IHByb3Bvc2luZyBhIGJpbmFyeSBmb3JtYXQgdHJhbnNwb3J0ZWQgb3ZlciBVRFAsIGhhbmRsaW5nIG9ubHkgdGhlIHJldHJhbnNtaXNzaW9ucyBzdHJpY3RseSByZXF1aXJlZCB0byBwcm92aWRlIGEgcmVsaWFibGUgc2VydmljZS5cIl0sXCIyMjgwOTcxNDg2XCI6W1wiVGhpcyBwcm9ibGVtIGNhbiBiZSBvdmVyY29tZSBieSBhZG9wdGluZyA2TG9XUEFOIFszMl0gWzMzXSwgd2hpY2ggaXMgYW4gZXN0YWJsaXNoZWQgY29tcHJlc3Npb24gZm9ybWF0IGZvciBJUHY2IGFuZCBVRFAgaGVhZGVycyBvdmVyIGxvdy1wb3dlciBjb25zdHJhaW5lZCBuZXR3b3Jrcy5cIl0sXCIyMzI1ODc3MDg5XCI6W1wiUm91dGluZyBmdW5jdGlvbmFsaXRpZXMgYXJlIHByb3ZpZGVkIGJ5IHRoZSBJUHY2IFJvdXRpbmcgUHJvdG9jb2wgZm9yIExvdyBwb3dlciBhbmQgTG9zc3kgTmV0d29ya3MgKFJQTCkgWzQzXS5cIl0sXCIyNTIyNDYyNTM1XCI6W1wibmF0aXZlIEhUVFAgZGV2aWNlcyBhbmQgYXBwbGljYXRpb25zIFszMF0uXCIsXCJUaGlzIG1ldGhvZCwgb3JpZ2luYWxseSBwcm9wb3NlZCBpbiBbMzBdLCBpcyBzaW1pbGFyIHRvIHRoZSB0ZWNobmlxdWUgdXNlZCB0byBwcm92aWRlIHZpcnR1YWwgaG9zdGluZyBzZXJ2aWNlIGluIEhUVFAgMS5cIixcIlRoZSBVbml2ZXJzYWwgUmVzb3VyY2UgSWRlbnRpZmllciAoVVJJKSBtYXBwaW5nIHRlY2huaXF1ZSBpcyBhbHNvIGRlc2NyaWJlZCBpbiBbMzBdLlwiXX0sXCJQUlwiOlsyMTA1MTAzNzc3LDIxMTE2MTk2MjYsMjE0MDY2OTk2MCwyMTM0Mjk1MDUzLDIwNzI2NDE4OTIsMjAzODE5NDIyMCwyMTE5MDQ2NjQyLDIxMjkzNjgxNDAsMjA2ODg0OTI3NywyMTE0NjIzMjIxLDE5NDM1Nzk5NzMsMTk3NDk2MzAzNiwxNjczNjg5MDEsMTk3OTUxOTQ2MiwyMDEwNzcyOTM2LDIwNDM1MTA5NTAsMjAxODkxMTQ4NCwxOTY4NzczMDcxLDE5NjkwODU3NDUsMjA1MzI3OTQ0MiwyMTA1MTAzNzc3LDIxMTE2MTk2MjYsMjE0MDY2OTk2MCwyMTM0Mjk1MDUzLDIwNzI2NDE4OTIsMjAzODE5NDIyMCwyMTE5MDQ2NjQyLDIxMjkzNjgxNDAsMjA2ODg0OTI3NywyMTE0NjIzMjIxLDE5NDM1Nzk5NzMsMTk3NDk2MzAzNiwxNjczNjg5MDEsMTk3OTUxOTQ2MiwyMDEwNzcyOTM2LDIwNDM1MTA5NTAsMjAxODkxMTQ4NCwxOTY4NzczMDcxLDE5NjkwODU3NDUsMjA1MzI3OTQ0Ml0sXCJBTkZcIjpbe1wiRk5cIjpcIkFuZHJlYVwiLFwiTE5cIjpcIlphbmVsbGFcIixcIlNcIjoxfSx7XCJGTlwiOlwiTmljb2xhXCIsXCJMTlwiOlwiQnVpXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkFuZ2VsbyBQYW9sb1wiLFwiTE5cIjpcIkNhc3RlbGxhbmlcIixcIlNcIjozfSx7XCJGTlwiOlwiTG9yZW56b1wiLFwiTE5cIjpcIlZhbmdlbGlzdGFcIixcIlNcIjo0fSx7XCJGTlwiOlwiTWljaGVsZVwiLFwiTE5cIjpcIlpvcnppXCIsXCJTXCI6NX1dLFwiQlZcIjpcIklFRUUgSW50ZXJuZXQgb2YgVGhpbmdzIEpvdXJuYWxcIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiSUVFRVwifSJ9LHsibG9ncHJvYiI6LTE1LjksImtlc0VudGl0eUlkIjoxMDEzODA4LCJJZCI6MjExOTA0NjY0MiwiVGkiOiJpbnRlcm5ldCBvZiB0aGluZ3MgdmlzaW9uIGFwcGxpY2F0aW9ucyBhbmQgcmVzZWFyY2ggY2hhbGxlbmdlcyIsIlkiOjIwMTIsIkQiOiIyMDEyLTA5LTAxIiwiUklkIjpbMjA3MTcwNzEzNCwyMTY4NDUyMjA0LDIxMDUxMDM3NzcsMjc1Mjg4NTQ5MiwyMTM3Nzc1NDUzLDIxMzU1MDU3MDIsMjAxNDk1MjEyMSwyMTUwMDM5OTY1LDIxMjgwMjYwMjMsMjE2NjYwMjU5NSwyMTE2MjY5MzUwLDIwMTI0NjI3NzIsMTY0NDg4MjYzOSwyMTY4ODY3ODIzLDE5Nzk1MTk0NjIsMTU2NDUzNDk0NSwyMTYwMTcwMDUwLDIwMTk5NTI2MjMsMjEyNDQ3ODY3OCwyMTUzNDIyOTAzLDIxMDc5NTE0NDIsMTk5MTc4MTk5NSwyMTcwNDk2MjQwLDIwOTc1NjUyNzcsMjE1NjIwMDE4OSwyMTMxNjAwMTYxLDE1MDgxNDMzNDQsMjE0MzE1NzA2MywyMTE2MTk0MDE2LDI2MTU2ODgxMTAsMjE2MTI0OTkyNCwyMDUwNTk2MTc1LDIwMDY3MjU3NTgsMjEyMzc3MDE5OCwyMTEwMTAwODk1LDIxMzE5MjQ0NjYsMjExMzQ0MzAxNCwyMTE0NjMxODU4LDE0OTczNzY3NjMsMjAyNDQ4Njg0NCwyMTIwNTEwODg1LDE0MTEyMTQxMiwyMDE5Mzk2ODY0LDIwMTg1MzgwNjEsMjEzODgzMDkwNiw1NjI5MzQzNCwyMDE4NTAxNzAxLDE5NzE3NTAwNDQsMjE0Mzg2NDgzMSwyMDk3ODQyNTE2LDIwNTMzMTY1MTMsMjM0MDk5NTExMywyMTAyODMyNjExLDIwMTUwNDY2MDksMjA2MzkzOTc1MCwyMDk2MDQ4NjIzLDIxMjQwMzM5MjAsMjMzMzIyOTE0NywxOTY5NDc3NjU3LDIxMjM5NzY5MzksMjExNzgxODQxNCwyMzAxNjA1MzkwLDE1ODk3MDgyOTIsMjEzMzY5ODU3NSwyMDUyMDUwMTU3LDIxMDQwMDk0NDUsMjA1MjkzMjY2NiwxOTcxMTI2OTgzLDIwOTc5MTYxNTcsMjEwMjc5NTU5MSwxODc1NTk4Nzg1LDIwMDE5ODgyMjMsMjAyNzUzMTA5MiwyMTQzNTE0OTMxLDIxMDIzMTc4MzYsMjExNDI0ODAwNywyMDM5NjU2Njg4LDIxNjExNTEzNzAsMjAwODU2MTkxMiwyMDY1NjkyMzYxLDIxMzkwNjExNDQsMTU0NzM1ODEzNiwyMTUyNzY1MTM3LDIwNDk2ODUyNzEsMjEwNjQ3NjY1NiwyMTAxMDgxMDUxLDIwNjU2NTc2NzcsMTU5NDY3NDk3MywxOTg1NDYxOTg2LDIxMTg4ODQwMzMsMzg4ODU3MzEsMTQ5MjUwMzA1MCwxNjkzMTY4MjAsMjEwNjcyMjQzNCwyMTYyMjE1MjkzLDIwNDI0NDU2NDcsMTA2OTE4NzA1LDIwMzUyNjQwMDQsMjE0NzUxMDkzMCwxMDMzMDcyNzQsMTUyODE5NDUzMCwyMTEyMDgyMDc0LDIxMTQ3NTMyMjAsMjA3NzI0NjkwOCwyMDAzOTY5MzcyLDIxNzE5MDk0OTQsMTQ4MzE0MTk3NSwyMTE4MDg1MzE2LDIwNDE1ODQwODgsMTU4MDcwOTcyOSwxODk4MDE1NzIxLDIxMjQzNjI5OTcsMjExMDgyMTM0NSwyMDY5NTQzOTIyLDIwNTMyNjk1NDEsMTk3MDc5MTgzNSwyMTEwMTQ2OTcwLDI0ODE1MTQzNDMsMTg2NDY4NjQ4MCwyMTY3MDUxMTczLDE5ODU3NTU0NTYsMjEzNTc4NzUxNiwyNDY5NzMxMTc4LDE0MzQzMjY0MiwyMTA0MzkxMjcyLDIxNTEwODczNDcsMjU0NDAzMzQ0MCwxMzk3MDgzNDUsMjM5ODU3OTk2MiwxNTc2ODY2OTgyXSwiQUEiOlt7IkF1TiI6ImRhbmllbGUgbWlvcmFuZGkifSx7IkF1TiI6InNhYnJpbmEgc2ljYXJpIn0seyJBdU4iOiJmcmFuY2VzY28gZGUgcGVsbGVncmluaSJ9LHsiQXVOIjoiaW1yaWNoIGNobGFtdGFjIn1dLCJGIjpbeyJGTiI6InNtYXJ0IG9iamVjdHMifSx7IkZOIjoid2ViIG9mIHRoaW5ncyJ9LHsiRk4iOiJzb2Z0d2FyZSBkZXBsb3ltZW50In0seyJGTiI6ImludGVyb3BlcmFiaWxpdHkifSx7IkZOIjoiaW50ZXJuZXQgb2YgdGhpbmdzIn0seyJGTiI6ImluZm9ybWF0aW9uIGFuZCBjb21tdW5pY2F0aW9ucyB0ZWNobm9sb2d5In0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJjb21wdXRlciBlbmdpbmVlcmluZyJ9LHsiRk4iOiJjb21wdXRlciBzZWN1cml0eSJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJJbnRlcm5ldCBvZiB0aGluZ3M6IFZpc2lvbiwgYXBwbGljYXRpb25zIGFuZCByZXNlYXJjaCBjaGFsbGVuZ2VzXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6OTAsXCJJbnZlcnRlZEluZGV4XCI6e1wiVGhlXCI6WzBdLFwidGVybVwiOlsxXSxcIuKAmOKAmEludGVybmV0LW9mLVRoaW5nc+KAmeKAmVwiOlsyXSxcImlzXCI6WzNdLFwidXNlZFwiOls0XSxcImFzXCI6WzVdLFwiYW5cIjpbNl0sXCJ1bWJyZWxsYVwiOls3XSxcImtleXdvcmRcIjpbOF0sXCJmb3JcIjpbOSw4OF0sXCJjb3ZlcmluZ1wiOlsxMF0sXCJ2YXJpb3VzXCI6WzExXSxcImFzcGVjdHNcIjpbMTJdLFwicmVsYXRlZFwiOlsxM10sXCJ0b1wiOlsxNCw2NV0sXCJ0aGVcIjpbMTUsMTgsMjEsMjQsMzBdLFwiZXh0ZW5zaW9uXCI6WzE2XSxcIm9mXCI6WzE3LDI5LDMzLDU5LDcxLDgyXSxcIkludGVybmV0XCI6WzE5XSxcImFuZFwiOlsyMCw1MSw2Miw3Myw4NV0sXCJXZWJcIjpbMjJdLFwiaW50b1wiOlsyM10sXCJwaHlzaWNhbFwiOlsyNSw1Ml0sXCJyZWFsbSxcIjpbMjZdLFwiYnlcIjpbMjcsNTddLFwibWVhbnNcIjpbMjgsNThdLFwid2lkZXNwcmVhZFwiOlszMV0sXCJkZXBsb3ltZW50XCI6WzMyXSxcInNwYXRpYWxseVwiOlszNF0sXCJkaXN0cmlidXRlZFwiOlszNV0sXCJkZXZpY2VzXCI6WzM2XSxcIndpdGhcIjpbMzddLFwiZW1iZWRkZWRcIjpbMzhdLFwiaWRlbnRpZmljYXRpb24sXCI6WzM5XSxcInNlbnNpbmdcIjpbNDBdLFwiYW5kL29yXCI6WzQxXSxcImFjdHVhdGlvblwiOls0Ml0sXCJjYXBhYmlsaXRpZXMuXCI6WzQzXSxcIkludGVybmV0LW9mLVRoaW5nc1wiOls0NF0sXCJlbnZpc2lvbnNcIjpbNDVdLFwiYVwiOls0Niw2Nyw4MF0sXCJmdXR1cmVcIjpbNDddLFwiaW5cIjpbNDhdLFwid2hpY2hcIjpbNDldLFwiZGlnaXRhbFwiOls1MF0sXCJlbnRpdGllc1wiOls1M10sXCJjYW5cIjpbNTRdLFwiYmVcIjpbNTVdLFwibGlua2VkLFwiOls1Nl0sXCJhcHByb3ByaWF0ZVwiOls2MF0sXCJpbmZvcm1hdGlvblwiOls2MV0sXCJjb21tdW5pY2F0aW9uXCI6WzYzXSxcInRlY2hub2xvZ2llcyxcIjpbNjQsODNdLFwiZW5hYmxlXCI6WzY2XSxcIndob2xlXCI6WzY4XSxcIm5ld1wiOls2OV0sXCJjbGFzc1wiOls3MF0sXCJhcHBsaWNhdGlvbnNcIjpbNzIsODRdLFwic2VydmljZXMuXCI6Wzc0XSxcIkluXCI6Wzc1XSxcInRoaXNcIjpbNzZdLFwiYXJ0aWNsZSxcIjpbNzddLFwid2VcIjpbNzhdLFwicHJlc2VudFwiOls3OV0sXCJzdXJ2ZXlcIjpbODFdLFwicmVzZWFyY2hcIjpbODZdLFwiY2hhbGxlbmdlc1wiOls4N10sXCJJbnRlcm5ldG9mLVRoaW5ncy5cIjpbODldfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vaXJpbnN1YnJpYS51bmluc3VicmlhLml0L3JldHJpZXZlL2hhbmRsZS8xMTM4My8xNzYyMjg4LzIzODkvSU9ULnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmRpY29tLnVuaW5zdWJyaWEuaXQvfnNhYnJpbmEuc2ljYXJpL3B1YmxpYy9kb2N1bWVudHMvam91cm5hbC8yMDEyX0lvVF92aXNpb24ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZGlzdGEudW5pbnN1YnJpYS5pdC9+c2FicmluYS5zaWNhcmkvcHVibGljL2RvY3VtZW50cy9qb3VybmFsLzIwMTJfSW9UX3Zpc2lvbi5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cuc2NpZW5jZWRpcmVjdC5jb20vc2NpZW5jZS9hcnRpY2xlL3BpaS9TMTU3MDg3MDUxMjAwMDY3NFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5vcmcvMTAuMTAxNi9qLmFkaG9jLjIwMTIuMDIuMDE2XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LmluZm9uYS5wbC9yZXNvdXJjZS9id21ldGExLmVsZW1lbnQuZWxzZXZpZXItZDEwMTk1MDEtNWE4Yi0zZTRkLTg5ZjAtYjAyZTcxM2Q5OTc0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0yMjYzMjMzLjIyNjM2MDBcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2FkaG9jL2FkaG9jMTAuaHRtbCNNaW9yYW5kaVNQQzEyXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly93d3cuc2NpZW5jZWRpcmVjdC5jb20vc2NpZW5jZS9hcnRpY2xlL3BpaS9TMTU3MDg3MDUxMjAwMDY3NFwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MjI2MzYwMFwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vd3d3LmhvbWV3b3JrbWFya2V0LmNvbS9zaXRlcy9kZWZhdWx0L2ZpbGVzL3E1LzA0LzA3L2RhbmFpbmZvLmFhZGJocHhlamx3am4wejEtczIuMC1zMTU3MDg3MDUxMjAwMDY3NC1tYWluLnBkZlwifV0sXCJWRk5cIjpcIkFkIEhvYyBOZXR3b3Jrc1wiLFwiVlNOXCI6XCJBREhPQ05FVFNcIixcIlZcIjoxMCxcIklcIjo3LFwiRlBcIjoxNDk3LFwiTFBcIjoxNTE2LFwiRE9JXCI6XCIxMC4xMDE2L2ouYWRob2MuMjAxMi4wMi4wMTZcIixcIkNDXCI6e1wiMTAzMzA3Mjc0XCI6W1wiaW5nIGFwcGxpY2F0aW9ucyB3aXRoIGNvbnRleHR1YWwgaW5mb3JtYXRpb24gaW4gYSBkaXN0cmlidXRlZCBzZXR0aW5nIFszNOKAkzM2XS5cIixcIkFub3RoZXIgYXBwcm9hY2ggaXMgRWFzeWxpdmluZyBbMzZdLCB3aGljaCBzdG9yZXMgY29udGV4dHVhbCBpbmZvcm1hdGlvbiBpbiBhIHNpbmdsZSBkYXRhYmFzZSwgYWxsb3dpbmcgYXBwbGljYXRpb25zIHRvIHF1ZXJ5IGl0IGluIG9yZGVyIHRvIHJldHJpZXZlIGRhdGEuXCJdLFwiMTA2OTE4NzA1XCI6W1wiQSBudW1iZXIgb2YgZnJhbWV3b3JrcyBoYXZlIGJlZW4gcHJvcG9zZWQgZm9yIGFjY291bnRpbmcgZm9yIHByaXZhY3kgaXNzdWVzIGluIHRoZSBzeXN0ZW0gZGVzaWduIHBoYXNlLCBzdWNoIGFzIEthb3MgWzEyNl0sIFRyb3BvcyBbMTI3LDEyOF0sIE5GUiBbMTI5LDEzMF0sIEdCUkFNIFsxMzFdLCBQUklTIFsxMzIsMTMzXS5cIl0sXCIxNDExMjE0MTJcIjpbXCJGb3IgYSBnZW5lcmFsIHJlZmVyZW5jZSBvbiBmYXVsdCB0b2xlcmFuY2UgYW5kIHJvYnVzdG5lc3MgYXBwcm9hY2hlcyBwbGVhc2UgcmVmZXIgdG8gWzg2XS5cIl0sXCIxNDM0MzI2NDJcIjpbXCJTb21lIGFwcHJvYWNoZXMgWzExNOKAkzExN10gc3VnZ2VzdCB0byBzaGFyZSBhIGtleSBhbW9uZyBhbGwgc2Vuc2luZyBub2RlcyBhbmQgdGhlIFNpbmssIHRoZSBhZ2dyZWdhdG9yIG5vZGVzIGhhdmUgbm90IHRoZSBrZXkgYmVjYXVzZSB0aGUgYWdncmVnYXRvciBub2RlcyBoYW5kbGUgZGF0YSB3aXRob3V0IG1ha2luZyBhbnkgZW5jcnlwdGlvbi9kZWNyeXB0aW9uIG9wZXJhdGlvbi5cIl0sXCIxNjkzMTY4MjBcIjpbXCJQYXJ0IG9mIHN1Y2ggcmVzZWFyY2ggbGluZXMgaGF2ZSBiZWVuIGFscmVhZHkgcmUtZGlzY292ZXJlZCBhbmQgcmVuZXdlZCBpbiBzZW5zb3IgbmV0d29ya3MgbGl0ZXJhdHVyZSwgYXMgcmVjYWxsZWQgaW4gdGhlIHByZXZpb3VzIHNlY3Rpb24gWzc5LDgwXS5cIl0sXCIxNDkyNTAzMDUwXCI6W1wiQXMgZmFyIGFzIGZyYW1ld29ya3MgZm9yIGRldmVsb3BpbmcgSW9UIGFwcGxpY2F0aW9ucyBhcmUgY29uY2VybmVkLCBhIG1ham9yIHJvbGUgaXMgZXhwZWN0ZWQgdG8gYmUgcGxheWVkIGJ5IGFwcHJvYWNoZXMgYmFzZWQgb24gc28tY2FsbGVkIHNlcnZpY2Utb3JpZW50ZWQgY29tcHV0aW5nIChTT0MpIFs0M+KAkzQ1XS5cIixcIlNlcnZpY2Utb3JpZW50ZWQgYXJjaGl0ZWN0dXJlcyBzdXBwb3J0IGEgZ2l2ZW4gbGV2ZWwgb2YgaGV0ZXJvZ2VuZWl0eSBhbmQgZmxleGliaWxpdHkgaW4gdGhlIHNvZnR3YXJlIG1vZHVsZXMgdG8gYmUgZGVwbG95ZWQgYW5kIGV4ZWN1dGVkIFs0NCw0Myw0Nl0uXCJdLFwiMTQ5NzM3Njc2M1wiOltcIkZyb20gYSBzZXJ2aWNlLWxldmVsIHBlcnNwZWN0aXZlLCB0aGUgbWFpbiBpc3N1ZSByZWxhdGUgdG8gaG93IHRvIGludGVncmF0ZSAob3I6IGNvbXBvc2UpIHRoZSBmdW5jdGlvbmFsaXRpZXMgYW5kLyBvciByZXNvdXJjZXMgcHJvdmlkZWQgYnkgc21hcnQgb2JqZWN0cyAoaW4gbWFueSBjYXNlcyBpbiBmb3JtcyBvZiBkYXRhIHN0cmVhbXMgZ2VuZXJhdGVkKSBpbnRvIHNlcnZpY2VzIFsxNeKAkzE3XS5cIl0sXCIxNTA4MTQzMzQ0XCI6W1wiVGhpcyBidWlsZHMgb24gYSB0cmFkaXRpb25hbCByZXNlYXJjaCBsaW5lIGluIGNvbXB1dGVyIHNjaWVuY2UgWzc0LDc1XSwgd2hlcmUgYSBkaXN0cmlidXRlZCBzeXN0ZW0gaXMgZGVmaW5lZCBhcyBhIHN5c3RlbSBkcml2ZW4gYnkgc2VwYXJhdGUgY29tcG9uZW50cyB3aGljaCBtYXkgYmUgZXhlY3V0ZWQgZWl0aGVyIHNlcXVlbnRpYWxseSBvciBpbiBwYXJhbGxlbCBvbiBkaWZmZXJlbnQsIGludGVyY29ubmVjdGVkLCBub2Rlcy5cIl0sXCIxNTI4MTk0NTMwXCI6W1wiSWRlbnRpZmljYXRpb24gYW5kIHByb3hpbWl0eSBkZXRlY3Rpb24gc2NoZW1lcyB0aGF0IG1ha2UgdXNlIG9mIGluZXhwZW5zaXZlIFJGSURzIGJlY2FtZSByZWNlbnRseSBhIHByb21pc2luZyBjaG9pY2UgZm9yIGNvbW1lcmNpYWwgZGVwbG95bWVudHMgaW4gdGhlIGxvZ2lzdGljcyBmaWVsZCBbNzJdLlwiXSxcIjE1NDczNTgxMzZcIjpbXCJUaGlzIGJ1aWxkcyBvbiBhIHRyYWRpdGlvbmFsIHJlc2VhcmNoIGxpbmUgaW4gY29tcHV0ZXIgc2NpZW5jZSBbNzQsNzVdLCB3aGVyZSBhIGRpc3RyaWJ1dGVkIHN5c3RlbSBpcyBkZWZpbmVkIGFzIGEgc3lzdGVtIGRyaXZlbiBieSBzZXBhcmF0ZSBjb21wb25lbnRzIHdoaWNoIG1heSBiZSBleGVjdXRlZCBlaXRoZXIgc2VxdWVudGlhbGx5IG9yIGluIHBhcmFsbGVsIG9uIGRpZmZlcmVudCwgaW50ZXJjb25uZWN0ZWQsIG5vZGVzLlwiXSxcIjE1NzY4NjY5ODJcIjpbXCJEaWZmZXJlbnQgaG9wLWJ5LWhvcCByZWxhdGVkIHdvcmtzIFsxMTDigJMxMTJdIGFzc3VtZXMgdGhhdCBkYXRhIHNlY3VyaXR5IGlzIGd1YXJhbnRlZWQgYnkgbWVhbnMgb2Ygc29tZSBrZXkgZGlzdHJpYnV0aW9uIHNjaGVtZXMuXCIsXCJUaGUgcGVyZm9ybWFuY2Ugb2YgU0VEQU4sIGV2YWx1YXRlZCBieSBtZWFucyBvZiBhZCBob2Mgc2ltdWxhdGlvbiwgc2hvd3MgdGhhdCBzdWNoIHNjaGVtZSBpcyBhYmxlIHRvIG91dHBlcmZvcm0gY29tcGV0aXRpdmUgc29sdXRpb25zIHN1Y2ggYXMgU0FXQU4gWzExMF0gaW4gdGVybXMgb2Ygb3ZlcmhlYWQgYW5kIG1lYW4gdGltZSB0byBkZXRlY3Rpb24uXCJdLFwiMTU4MDcwOTcyOVwiOltcIlRoZSBtb3N0IGdlbmVyYWwgYXZhaWxhYmxlIHNvbHV0aW9uLCB0byBiZXN0IG9mIG91ciBrbm93bGVkZ2UsIGlzIFsxMDddLCB3aGljaCBleHRlbmRzIHRoZSB3b3JrIG9mIFsxMDgsMTA5XSBieSBwcm9wb3NpbmcgYSBnZW5lcmFsIGZyYW1ld29yayB0byBwcm90ZWN0IHN0cmVhbWluZyBkYXRhIHRoYXQgaXMgaW5kZXBlbmRlbnQgZm9ybSB0aGUgdGFyZ2V0IGVuZ2luZS5cIl0sXCIxNTg5NzA4MjkyXCI6W1wiU2V2ZXJhbCB2ZW5kb3JzIHByb3Bvc2UgcHJvcHJpZXRhcnkgbWlkZGxld2FyZSBwbGF0Zm9ybXMgdGhhdCBoYXZlIGJlZW4gZGV2ZWxvcGVkIHdpdGggdGhlIGFpbSB0byBzdXBwb3J0IGNvbW1lcmNpYWwgZGVwbG95bWVudHMgb2YgUkZJRHM7IHNlZSBmb3IgZXhhbXBsZSB0aGUgU0FQIEF1dG8tSUQgSW5mcmFzdHJ1Y3R1cmUgWzczXS5cIl0sXCIxNjQ0ODgyNjM5XCI6W1wiSW4gcGFydGljdWxhciwgdGhlIHVzZSBvZiBhIHN0YW5kYXJkIHZpcnR1YWwgcGxhdGZvcm0gaW4gYWxsIG5ldHdvcmsgZGV2aWNlcyBoYXMgYmVlbiBwcm9wb3NlZCBbMzAsMzFdLlwiXSxcIjE4NjQ2ODY0ODBcIjpbXCJbMTIyLDEyM10sIG9yIG90aGVyIGRhdGEgY2xvYWtpbmcgbWVjaGFuaXNtcywgd2hpY2ggcGVydHVyYiBkYXRhIGZvbGxvd2luZyBzb21lIGNyaXRlcmlhIChlLlwiXSxcIjE4NzU1OTg3ODVcIjpbXCJBIG51bWJlciBvZiBmcmFtZXdvcmtzIGhhdmUgYmVlbiBwcm9wb3NlZCBmb3IgYWNjb3VudGluZyBmb3IgcHJpdmFjeSBpc3N1ZXMgaW4gdGhlIHN5c3RlbSBkZXNpZ24gcGhhc2UsIHN1Y2ggYXMgS2FvcyBbMTI2XSwgVHJvcG9zIFsxMjcsMTI4XSwgTkZSIFsxMjksMTMwXSwgR0JSQU0gWzEzMV0sIFBSSVMgWzEzMiwxMzNdLlwiXSxcIjE5NzA3OTE4MzVcIjpbXCJBbHRlcm5hdGl2ZSBhcmNoaXRlY3R1cmVzIG1heSBtYWtlIHVzZSBvZiBwcm94aW1pdHkgY29tbXVuaWNhdGlvbnMgd2hlbmV2ZXIgcG9zc2libGUgaW4gY2FzZSBvZiBsYXJnZSBkZXBsb3ltZW50czsgcG9zc2libGUgaW1wbGVtZW50YXRpb25zIGFyZSBkZXNjcmliZWQgaW4gWzgyLDgzXS5cIl0sXCIxOTcxNzUwMDQ0XCI6W1wiTG93LXBvd2VyIGNvbW11bmljYXRpb25zIGlzIGEgd2VsbC1lc3RhYmxpc2hlZCByZXNlYXJjaCBmaWVsZCB3aXRoaW4gdGhlIHNlbnNvciBuZXR3b3JraW5nIGNvbW11bml0eSwgYXMgcHJvdmVkIGJ5IHRoZSBhY3RpdmUgcmVzZWFyY2ggcGVyZm9ybWVkIGluIHRoZSBsYXN0IGRlY2FkZSBvbiBwb3dlciBjb25zdW1wdGlvbiBhd2FyZSBtZWRpdW0gYWNjZXNzIHByb3RvY29scyBbNDjigJM1Ml0uXCJdLFwiMTk3OTUxOTQ2MlwiOltcIikgWzddLlwiXSxcIjE5ODU3NTU0NTZcIjpbXCJTb21lIGFwcHJvYWNoZXMgWzExNOKAkzExN10gc3VnZ2VzdCB0byBzaGFyZSBhIGtleSBhbW9uZyBhbGwgc2Vuc2luZyBub2RlcyBhbmQgdGhlIFNpbmssIHRoZSBhZ2dyZWdhdG9yIG5vZGVzIGhhdmUgbm90IHRoZSBrZXkgYmVjYXVzZSB0aGUgYWdncmVnYXRvciBub2RlcyBoYW5kbGUgZGF0YSB3aXRob3V0IG1ha2luZyBhbnkgZW5jcnlwdGlvbi9kZWNyeXB0aW9uIG9wZXJhdGlvbi5cIl0sXCIxOTkxNzgxOTk1XCI6W1wiQSBjb21wcmVoZW5zaXZlIHRha2UgYXQgdGhlIHRlY2hub2xvZ2ljYWwgcHJvYmxlbSBvZiBlbmVyZ3kgaGFydmVzdGluZyBpbiByZWFsIGRldmljZXMgaXMgZGVzY3JpYmVkIGluIFs1NF0uXCJdLFwiMjAwMTk4ODIyM1wiOltcIlJlY2VudGx5LCB0aGUgcHJvYmxlbSBoYXMgYmVlbiBhZGRyZXNzZWQgYnkgdGhlIHdvcmtzIGluIFs1NSw2NF0sIHByb3ZpbmcgZnVuZGFtZW50YWwgc2NhbGluZyBsYXdzIGluIHRoZSBjYXNlIG9mIGNvLWxvY2F0ZWQgYW5kIG11bHRpLWhvcCBwYWNrZXQgbmV0d29ya3MuXCIsXCJUaGUgd29ya3MgWzU1LDY0XSBwcm92ZSB0aGF0IHRoZXJlIGV4aXN0IGEgc3Ryb25nIGRlcGVuZGVuY2Ugb24gdGhlIHNjYWxpbmcgbGF3IG9mIHRoZSBudW1iZXIgb2YgbWVzc2FnZXMgZXhjaGFuZ2VkIGFuZCB0aGUgY29tcHV0ZWQgZnVuY3Rpb24uXCJdLFwiMjAwMzk2OTM3MlwiOltcIlRoZSBsYXRlciB3b3JrIGluIFs2M10gcHJvdmVkIHRoYXQsIGluIHRoZSBjYXNlIG9mIHR5cGUtdGhyZXNob2xkIGZ1bmN0aW9ucywgc3VjaCBhcyBBTkQsIE9SIGFuZCBNQUpPUklUWSwgY29tcHV0aW5nIHJlcXVpcmVzIE8obikgYnJvYWRjYXN0cy5cIl0sXCIyMDA2NzI1NzU4XCI6W1wiWzY2XSBhbmQgR2VvcmdpYSBJbnN0aXR1dGUgb2YgVGVjaG5vbG9neSBDeWJlckd1aWRlIFs2N10uXCJdLFwiMjAwODU2MTkxMlwiOltcIkluIHBhcnRpY3VsYXIsIElvVCB3aWxsIGxpa2VseSBleHBhbmQgc3RhcnRpbmcgZnJvbSBpZGVudGlmaWNhdGlvbiB0ZWNobm9sb2dpZXMgc3VjaCBhcyBSRklEIChSYWRpbyBGcmVxdWVuY3kgSWRlbnRpZmljYXRpb24pIFs4LDE4XSwgd2hpY2hcIixcIkluIHRoaXMgc2Vuc2UsIGtleSBidWlsZGluZyBibG9ja3MgYXJlIGV4cGVjdGVkIHRvIGJlIHJlcHJlc2VudGVkIGJ5IHdpcmVsZXNzIHNlbnNvciBuZXR3b3JraW5nIHRlY2hub2xvZ2llcyBbOV0gYW5kIFJGSUQgWzgsMTgsMjJdLlwiXSxcIjIwMTQ5NTIxMjFcIjpbXCJhbmQgcHJpbmNpcGxlcyBbMTJdLCBhcyB3aWxsIGJlIGRpc2N1c3NlZCBpbiB0aGUgZm9sbG93aW5nIHNlY3Rpb25zLlwiXSxcIjIwMTg1MDE3MDFcIjpbXCJJbiBwYXJ0aWN1bGFyLCB0aGUgaW5jcmVhc2VkIGxldmVsIG9mIGhldGVyb2dlbmVpdHksIGR1ZSB0byB0aGUgaW5jbHVzaW9uIG9mIGRldmljZXMgd2l0aCBvbmx5IHZlcnkgYmFzaWMgY29tbXVuaWNhdGlvbiBhbmQgY29tcHV0aW5nIGNhcGFiaWxpdGllcywgY2hhbGxlbmdlcyB0aGUgYXNzdW1wdGlvbiB0aGF0IGFueSBkZXZpY2UgcHJlc2VudHMgYSBmdWxsIHByb3RvY29sIHN0YWNrLCBhcyB3ZWxsIGFzIHRoZSBhcHBsaWNhdGlvbiBvZiB0aGUgZW5kLXRvLWVuZCBwcmluY2lwbGUgaW4gbmV0d29yayBvcGVyYXRpb25zIFsxMV0uXCJdLFwiMjAyNDQ4Njg0NFwiOltcImluZyBhcHBsaWNhdGlvbnMgd2l0aCBjb250ZXh0dWFsIGluZm9ybWF0aW9uIGluIGEgZGlzdHJpYnV0ZWQgc2V0dGluZyBbMzTigJMzNl0uXCIsXCJTY2hpbGl04oCZcyBhY3RpdmUgbWFwIHN5c3RlbSBbMzQsMzVdIHJlcHJlc2VudHMgYSBsb2NhdGlvbi1iYXNlZCBwdWJsaXNoLXN1YnNjcmliZSBzeXN0ZW0gZm9yIGNvbnRleHR1YWwgaW5mb3JtYXRpb24gZGlzc2VtaW5hdGlvbi5cIl0sXCIyMDI3NTMxMDkyXCI6W1wiQSBqb2ludCBNQUMvUEhZIGRlc2lnbiBpcyBwcm9wb3NlZCBpbiBbNjFdLCBwcm92aW5nIGFuIGFzeW1wdG90aWNhbGx5IG9wdGltYWwgTUFDIGZvciB0eXBlLWJhc2VkIGVzdGltYXRpb24uXCJdLFwiMjAzNTI2NDAwNFwiOltcIlRoZSBtb3N0IGdlbmVyYWwgYXZhaWxhYmxlIHNvbHV0aW9uLCB0byBiZXN0IG9mIG91ciBrbm93bGVkZ2UsIGlzIFsxMDddLCB3aGljaCBleHRlbmRzIHRoZSB3b3JrIG9mIFsxMDgsMTA5XSBieSBwcm9wb3NpbmcgYSBnZW5lcmFsIGZyYW1ld29yayB0byBwcm90ZWN0IHN0cmVhbWluZyBkYXRhIHRoYXQgaXMgaW5kZXBlbmRlbnQgZm9ybSB0aGUgdGFyZ2V0IGVuZ2luZS5cIl0sXCIyMDQxNTg0MDg4XCI6W1wiRnJvbSBhIHNlcnZpY2UtbGV2ZWwgcGVyc3BlY3RpdmUsIHRoZSBtYWluIGlzc3VlIHJlbGF0ZSB0byBob3cgdG8gaW50ZWdyYXRlIChvcjogY29tcG9zZSkgdGhlIGZ1bmN0aW9uYWxpdGllcyBhbmQvIG9yIHJlc291cmNlcyBwcm92aWRlZCBieSBzbWFydCBvYmplY3RzIChpbiBtYW55IGNhc2VzIGluIGZvcm1zIG9mIGRhdGEgc3RyZWFtcyBnZW5lcmF0ZWQpIGludG8gc2VydmljZXMgWzE14oCTMTddLlwiLFwiQXQgdGhlIHNhbWUgdGltZSwgbmV3IG1ldGhvZHMgYXJlIG5lY2Vzc2FyeSB0byBhZGFwdCB0aGVtIHRvIHRoZSBJb1QgcGVjdWxpYXJpdGllcywgaW5jbHVkaW5nIHRoZSBkZWZpbml0aW9uIG9mIHNwZWNpZmljIGRhdGEgbW9kZWxzIGFuZCByZXByZXNlbnRhdGlvbiwgYXJjaGl0ZWN0dXJlcyBhbmQgbWV0aG9kcyBmb3IgdmlydHVhbGl6aW5nIHNtYXJ0IG9iamVjdHMgYW5kIHRoZWlyIHNlcnZpY2VzL3Jlc291cmNlcywgdG9nZXRoZXIgd2l0aCB0aGUgZGV2ZWxvcG1lbnQgb2YgbmV3IG1ldGhvZHMgZm9yIHRoZSBkeW5hbWljIGFuZCBmbGV4aWJsZSBjb21wb3NpdGlvbiBvZiBzbWFydCBvYmplY3RzIGludG8gdGhlIEludGVybmV0IG9mIFNlcnZpY2VzIFs0NywxNiwxN10uXCJdLFwiMjA0MjQ0NTY0N1wiOltcIlsxMjIsMTIzXSwgb3Igb3RoZXIgZGF0YSBjbG9ha2luZyBtZWNoYW5pc21zLCB3aGljaCBwZXJ0dXJiIGRhdGEgZm9sbG93aW5nIHNvbWUgY3JpdGVyaWEgKGUuXCJdLFwiMjA0OTY4NTI3MVwiOltcIkluIHBhcnRpY3VsYXIsIHRoZSB1c2Ugb2YgYSBzdGFuZGFyZCB2aXJ0dWFsIHBsYXRmb3JtIGluIGFsbCBuZXR3b3JrIGRldmljZXMgaGFzIGJlZW4gcHJvcG9zZWQgWzMwLDMxXS5cIl0sXCIyMDUwNTk2MTc1XCI6W1wiSW9UIG1heSB3ZWxsIGluaGVyaXQgY29uY2VwdHMgYW5kIGxlc3NvbnMgbGVhcm5lZCBpbiBwZXJ2YXNpdmUgY29tcHV0aW5nLCBhbWJpZW50IGludGVsbGlnZW5jZSBhcHBsaWNhdGlvbnMgYW5kIHNlcnZpY2Utb3JpZW50ZWQgY29tcHV0aW5nIFs5NuKAkzk5XSwgYXMgZGV0YWlsZWQgaW4gU2VjdGlvbiAzLlwiXSxcIjIwNTMyNjk1NDFcIjpbXCJJbiBsaXRlcmF0dXJlLCB0aGUgc2VtaW5hbCBwYXBlciBleHBsb3JpbmcgdGhlIGlzc3VlIGlzIHRoZSBHYWxsYWdoZXLigJlzIHNjaGVtZSBbNjJdLCB3aGVyZSwgdW5kZXIgdGhlIGFzc3VtcHRpb24gb2YgcGVyZmVjdGx5IHNjaGVkdWxlZCBjb21tdW5pY2F0aW9uLCB0aGUgcHJvcG9zZWQgc29sdXRpb24gd291bGQgcGVybWl0IHRoZSBwYXJpdHkgY2hlY2sgb24gdGhlIGJpbmFyeSBzdGF0dXMgb2YgYSBzZXQgb2Ygbm9kZXMgd2l0aCByZXF1aXJlZCBjb21tdW5pY2F0aW9uIGNvbXBsZXhpdHkgTyhsb2dsb2duKS5cIl0sXCIyMDYzOTM5NzUwXCI6W1wiQSBudW1iZXIgb2YgcHJvbWlzaW5nIHJlc2VhcmNoIGxpbmVzLCByZWxhdGVkIHRvIGVuZXJneSBoYXJ2ZXN0aW5nIFsyNF0gYW5kIHBhc3NpdmUgd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmtzIFsyNV0gYXJlIGN1cnJlbnRseSB1bmRlciBkZXZlbG9wbWVudC5cIl0sXCIyMDY1NjU3Njc3XCI6W1wiTG9va2luZyBhdCB0aGUgc3RhdGUtb2YtdGhlYXJ0LCBhIHN0YXJ0aW5nIHBvaW50IGNvdWxkIGJlIHJlcHJlc2VudGVkIGJ5IHRoZSBjb25jZXB0IG9mIGZlZGVyYXRpb24gWzEyNV0uXCIsXCJJbiB0aGlzIGRpcmVjdGlvbiBpcyB0aGUgcHJvcG9zYWwgb2YgWzEyNV0gdGhhdCBpbnRlZ3JhdGVzIGZlZGVyYXRlZCBJZE0gd2l0aCB0cnVzdC1uZWdvdGlhdGlvbiB0ZWNobmlxdWVzLlwiXSxcIjIwNzE3MDcxMzRcIjpbXCJUaGUgdWJpcXVpdG91cyBhZG9wdGlvbiBvZiB0aGUgd2lyZWxlc3MgbWVkaXVtIGZvciBleGNoYW5naW5nIGRhdGEgbWF5IHBvc2UgaXNzdWVzIGluIHRlcm1zIG9mIHNwZWN0cnVtIGF2YWlsYWJpbGl0eSwgcHVzaGluZyB0b3dhcmRzIHRoZSBhZG9wdGlvbiBvZiBjb2duaXRpdmUvZHluYW1pYyByYWRpbyBzeXN0ZW1zIFsyMF0uXCJdLFwiMjA5Nzg0MjUxNlwiOltcIlszMl0uXCJdLFwiMjA5NzkxNjE1N1wiOltcIlRodXMsIGF0IHN5c3RlbSBkZXNpZ24gdGltZSwgaXQgaXMgcG9zc2libGUgdG8gbGV2ZXJhZ2UgdGhlIHRoZW9yeSBvZiBjb21wZXRpdGl2ZS9jb29wZXJhdGl2ZSBnYW1lcyBhbmQgbGV0IGFnZW50cyBjb21wZXRlL2Zvcm0gY29hbGl0aW9ucyB1cG9uIHRoZWlyIG5lZWRzIFs5NF0uXCJdLFwiMjEwMjMxNzgzNlwiOltcIkluIFszM10gYSBjb250ZXh0dWFsIGluZm9ybWF0aW9uIHNlcnZpY2UgaXMgaW50cm9kdWNlZCwgd2hpY2ggcHJvdmlkZXMgYXBwbGljYXRpb25zIHdpdGggY29udGV4dHVhbCBpbmZvcm1hdGlvbiB2aWEgYSB2aXJ0dWFsIGRhdGFiYXNlIGluIGFuIGVmZmljaWVudCBhbmQgc2NhbGFibGUgd2F5LlwiXSxcIjIxMDI3OTU1OTFcIjpbXCJBdCB0aGUgc2FtZSB0aW1lLCBpdHMgaW50ZWdyYXRpb24gd2l0aCBzZW5zaW5nIHRlY2hub2xvZ2llcyBicmluZ3MgYWxvbmdzaWRlIGEgbnVtYmVyIG9mIGNoYWxsZW5nZXMgYW5kIGlzc3VlcyBbMjcsMjhdLlwiXSxcIjIxMDI4MzI2MTFcIjpbXCJTb21lIGFwcHJvYWNoZXMgWzExNOKAkzExN10gc3VnZ2VzdCB0byBzaGFyZSBhIGtleSBhbW9uZyBhbGwgc2Vuc2luZyBub2RlcyBhbmQgdGhlIFNpbmssIHRoZSBhZ2dyZWdhdG9yIG5vZGVzIGhhdmUgbm90IHRoZSBrZXkgYmVjYXVzZSB0aGUgYWdncmVnYXRvciBub2RlcyBoYW5kbGUgZGF0YSB3aXRob3V0IG1ha2luZyBhbnkgZW5jcnlwdGlvbi9kZWNyeXB0aW9uIG9wZXJhdGlvbi5cIl0sXCIyMTA0MDA5NDQ1XCI6W1wiU2VydmljZS1vcmllbnRlZCBhcmNoaXRlY3R1cmVzIHN1cHBvcnQgYSBnaXZlbiBsZXZlbCBvZiBoZXRlcm9nZW5laXR5IGFuZCBmbGV4aWJpbGl0eSBpbiB0aGUgc29mdHdhcmUgbW9kdWxlcyB0byBiZSBkZXBsb3llZCBhbmQgZXhlY3V0ZWQgWzQ0LDQzLDQ2XS5cIixcIkF0IHByZXNlbnQgYSBsaW1pdGVkIG51bWJlciBvZiBzb2x1dGlvbnMgYXJlIGF2YWlsYWJsZSBbMTM1LDEzNiw0NiwxMzRdLlwiLFwiVGhlIG1vc3QgcG9wdWxhciBhcHByb2FjaGVzIGluY2x1ZGUgS2V5Tm90ZSBbMTM0XSBhbmQgVHJ1c3RCdWlsZGVyIFs0Nl0sIHdoaWNoIG5vbmV0aGVsZXNzXCJdLFwiMjEwNTEwMzc3N1wiOltcIikgYW5kIChpaWkpIHRoZSBlbnNlbWJsZSBvZiBhcHBsaWNhdGlvbnMgYW5kIHNlcnZpY2VzIGxldmVyYWdpbmcgc3VjaCB0ZWNobm9sb2dpZXMgdG8gb3BlbiBuZXcgYnVzaW5lc3MgYW5kIG1hcmtldCBvcHBvcnR1bml0aWVzIFsyLDNdLlwiLFwiRnVydGhlciwgdGhlIGludm9sdmVtZW50IG9mIHRoZSBuZXR3b3JraW5nIGFuZCBjb21tdW5pY2F0aW9ucyBzY2llbnRpZmljIGNvbW11bml0aWVzIGlzIHN0aWxsIGxpbWl0ZWQsIGRlc3BpdGUgdGhlIGhpZ2ggcG90ZW50aWFsIGltcGFjdCBvZiB0aGVpciBjb250cmlidXRpb25zIG9uIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgZmllbGQgWzIsNF0uXCJdLFwiMjEwNjQ3NjY1NlwiOltcIkEgbnVtYmVyIG9mIHByb21pc2luZyByZXNlYXJjaCBsaW5lcywgcmVsYXRlZCB0byBlbmVyZ3kgaGFydmVzdGluZyBbMjRdIGFuZCBwYXNzaXZlIHdpcmVsZXNzIHNlbnNvciBuZXR3b3JrcyBbMjVdIGFyZSBjdXJyZW50bHkgdW5kZXIgZGV2ZWxvcG1lbnQuXCJdLFwiMjEwNjcyMjQzNFwiOltcIlRoZSBzY2llbnRpZmljIGxpdGVyYXR1cmUgb2ZmZXJzIGZldyBwcm9wb3NhbHMsIHdoaWNoIGFyZSBjbGFzc2lmaWVkIGludG8gdHdvIG1haW4gY2F0ZWdvcmllczogdGhvc2UgYWltaW5nIHRvIGVuc3VyZSBhdXRoZW50aWNpdHksIGNvbmZpZGVudGlhbGl0eSBhbmQgaW50ZWdyaXR5IG9mIGRhdGEgc3RyZWFtcyBkdXJpbmcgdHJhbnNtaXNzaW9uIFsxMDIsMTAzXSBhbmQgdGhvc2UgcmVsYXRlZCB0byBhY2Nlc3MgY29udHJvbCBbMTA0LDEwNV0uXCIsXCJBbm90aGVyIHJlbGV2YW50IHdvcmsgaXMgcHJlc2VudGVkIGluIFsxMDVdLCB3aGVyZSB0aGUgYXV0aG9ycyBwcm9wb3NlIHRoYXQgdGhlIGRhdGEgYWNjZXNzIHBvbGljaWVzIGFyZSBkZWZpbmVkIGJ5IHRoZSB1c2VyIG93bmluZyB0aGUgZGV2aWNlcyBhbmQgd2l0aGluIHRoZSBkYXRhIHN0cmVhbSBpdHNlbGYuXCJdLFwiMjEwNzk1MTQ0MlwiOltcIkluIHBhcnRpY3VsYXIsIHRoZSBwcm9wb3NlZCBjbGFzc2lmaWNhdGlvbiBpbmNsdWRlcyBkZXZpY2VzIGNvbnNpZGVyZWQgaW4gUkZJRCByZXNlYXJjaCBbOF0gYXMgd2VsbCBhcyB0aG9zZSBjb25zaWRlcmVkIGluIHdpcmVsZXNzIHNlbnNvciBuZXR3b3JrcyAoV1NOcykgYW5kIHNlbnNvci9hY3RvciBuZXR3b3JrcyAoU0FORVRzKSBbOSwxMF0uXCIsXCJTZW5zb3IvIGFjdG9yIG5ldHdvcmtzIChTQU5FVHMpIFsxMF0gaGF2ZSByZXByZXNlbnRlZCBhbiBhY3RpdmUgcmVzZWFyY2ggZmllbGQgb3ZlciB0aGUgbGFzdCBkZWNhZGUuXCJdLFwiMjExMDEwMDg5NVwiOltcIlByb2JsZW1zIGxpa2UgbGVhZGVyLWVsZWN0aW9uLCBub2RlIGNvdW50aW5nIGFuZCBhdmVyYWdlcyBjb21wdXRhdGlvbiBhcmUgYSBjb3JlIHRvcGljIGluIHRoZSBkaXN0cmlidXRlZCBzeXN0ZW1zIGxpdGVyYXR1cmUgWzc24oCTNzhdLlwiXSxcIjIxMTA4MjEzNDVcIjpbXCJNaWRkbGV3YXJlIGRlc2lnbiwgaW4gcGFydGljdWxhciwgaGFzIGJlY29tZSBhIHBvcHVsYXIgcmVzZWFyY2ggYXJlYSBbODnigJM5MV0uXCJdLFwiMjExMjA4MjA3NFwiOltcIlRoZSBzY2llbnRpZmljIGxpdGVyYXR1cmUgb2ZmZXJzIGZldyBwcm9wb3NhbHMsIHdoaWNoIGFyZSBjbGFzc2lmaWVkIGludG8gdHdvIG1haW4gY2F0ZWdvcmllczogdGhvc2UgYWltaW5nIHRvIGVuc3VyZSBhdXRoZW50aWNpdHksIGNvbmZpZGVudGlhbGl0eSBhbmQgaW50ZWdyaXR5IG9mIGRhdGEgc3RyZWFtcyBkdXJpbmcgdHJhbnNtaXNzaW9uIFsxMDIsMTAzXSBhbmQgdGhvc2UgcmVsYXRlZCB0byBhY2Nlc3MgY29udHJvbCBbMTA0LDEwNV0uXCIsXCJBbm90aGVyIGludGVyZXN0aW5nIHByb3Bvc2FsIGlzIGRpc2N1c3NlZCBpbiBbMTAyXSwgd2hlcmUgYXV0aG9ycyBhZGRyZXNzIHRoZSBhdXRoZW50aWNpdHkgcHJvYmxlbSBvZiBvdXRzb3VyY2VkIGRhdGEgc3RyZWFtcy5cIixcIk1vcmUgcHJlY2lzZWx5LCBbMTAyXSBjb25zaWRlcnMgYSBzY2VuYXJpbyB3aGVyZSBhIGRhdGEgb3duZXIgY29uc3RhbnRseSBvdXRzb3VyY2VzIGl0cyBkYXRhIHN0cmVhbXMsIGNvbXBsZW1lbnRlZCB3aXRoIGFkZGl0aW9uYWwgYXV0aGVudGljYXRpb24gaW5mb3JtYXRpb24sIHRvIGEgc2VydmljZSBwcm92aWRlci5cIl0sXCIyMTEzNDQzMDE0XCI6W1wiTG93LXBvd2VyIGNvbW11bmljYXRpb25zIGlzIGEgd2VsbC1lc3RhYmxpc2hlZCByZXNlYXJjaCBmaWVsZCB3aXRoaW4gdGhlIHNlbnNvciBuZXR3b3JraW5nIGNvbW11bml0eSwgYXMgcHJvdmVkIGJ5IHRoZSBhY3RpdmUgcmVzZWFyY2ggcGVyZm9ybWVkIGluIHRoZSBsYXN0IGRlY2FkZSBvbiBwb3dlciBjb25zdW1wdGlvbiBhd2FyZSBtZWRpdW0gYWNjZXNzIHByb3RvY29scyBbNDjigJM1Ml0uXCJdLFwiMjExNDI0ODAwN1wiOltcIkFuIGFsdGVybmF0aXZlIGFwcHJvYWNoIGlzIHJlcHJlc2VudGVkIGJ5IHRoZSBhZG9wdGlvbiBvZiBwdWJsaWMta2V5IGVuY3J5cHRpb24gWzExOF0sIGJ1dCBpbiB0aGlzIGNhc2UgdGhlIGRyYXdiYWNrIGlzIHJlcHJlc2VudGVkIGJ5IHRoZSByZWxhdGVkIGhpZ2ggY29tcHV0YXRpb25hbCBjb3N0LlwiXSxcIjIxMTQ3NTMyMjBcIjpbXCJNaWRkbGV3YXJlIGRlc2lnbiwgaW4gcGFydGljdWxhciwgaGFzIGJlY29tZSBhIHBvcHVsYXIgcmVzZWFyY2ggYXJlYSBbODnigJM5MV0uXCJdLFwiMjExODA4NTMxNlwiOltcIk1pZGRsZXdhcmUgZGVzaWduLCBpbiBwYXJ0aWN1bGFyLCBoYXMgYmVjb21lIGEgcG9wdWxhciByZXNlYXJjaCBhcmVhIFs4OeKAkzkxXS5cIl0sXCIyMTIwNTEwODg1XCI6W1wiSXNzdWVzIGNvbmNlcm5pbmcgdGhlIGltcGFjdCBvZiBtaXNiZWhhdmluZyBub2RlcyBbODddIHJlcHJlc2VudCBhbHNvIGEgdHJhZGl0aW9uYWwgdG9waWMgdGhhdCBpcyBvZiBpbnRlcmVzdCBmb3IgbGFyZ2Utc2NhbGUgZGlzdHJpYnV0ZWQgc3lzdGVtcyBhcyB0aG9zZSBmb3Jlc2VlbiBpbiBJb1QuXCJdLFwiMjEyMzk3NjkzOVwiOltcIlRoZSBub3Rpb24gb2YgZGlzdHJpYnV0aW5nIGNvbXB1dGF0aW9uIGluIG9yZGVyIHRvIHJlZHVjZSB0aGUgY29tbXVuaWNhdGlvbiBvdmVyaGVhZCwgd2hpY2ggaXMgZ2VuZXJhbGx5IHRlcm1lZCBpbi1uZXR3b3JrIHByb2Nlc3Npbmcgb3IgaW5uZXR3b3JrIGNvbXB1dGluZyBbNTVdLCBpcyB0eXBpY2FsbHkgYXBwbGllZCB0byB3aXJlbGVzcyBzZW5zb3IgbmV0d29ya3MgdGhhdCBwZXJmb3JtIGxvY2FsIG1lYXN1cmVtZW50cywgYXMgaXQgd291bGQgYmUgdGhlIGNhc2Ugb2YgZmllbGQgbWVhc3VyZW1lbnRzIGluIElvVCBzY2VuYXJpb3MuXCIsXCJSZWNlbnRseSwgdGhlIHByb2JsZW0gaGFzIGJlZW4gYWRkcmVzc2VkIGJ5IHRoZSB3b3JrcyBpbiBbNTUsNjRdLCBwcm92aW5nIGZ1bmRhbWVudGFsIHNjYWxpbmcgbGF3cyBpbiB0aGUgY2FzZSBvZiBjby1sb2NhdGVkIGFuZCBtdWx0aS1ob3AgcGFja2V0IG5ldHdvcmtzLlwiLFwiVGhlIHdvcmtzIFs1NSw2NF0gcHJvdmUgdGhhdCB0aGVyZSBleGlzdCBhIHN0cm9uZyBkZXBlbmRlbmNlIG9uIHRoZSBzY2FsaW5nIGxhdyBvZiB0aGUgbnVtYmVyIG9mIG1lc3NhZ2VzIGV4Y2hhbmdlZCBhbmQgdGhlIGNvbXB1dGVkIGZ1bmN0aW9uLlwiXSxcIjIxMjQwMzM5MjBcIjpbXCJSZXNlYXJjaGVycyB3b3JraW5nIGluIHRoZSBmaWVsZCBvZiBodW1hbuKAk2NvbXB1dGVyIGludGVyZmFjZXMgYW5kIHVzZXItY2VudHJpYyBkZXNpZ24gbWV0aG9kb2xvZ2llcywgaW4gcGFydGljdWxhciwgYWRkcmVzc2VkIGFscmVhZHkgc2V2ZXJhbCBpc3N1ZXMgY29uY2VybmluZyB0aGUgaW1wYWN0IG9mIHNlbnNvcml6ZWQgYW5kIHBlcnZhc2l2ZSBlbnZpcm9ubWVudCBvbiB0aGUgdXNlciBleHBlcmllbmNlIFsxMDBdLlwiXSxcIjIxMjQzNjI5OTdcIjpbXCJGb3IgZXhhbXBsZSBTRURBTiBbMTEzXSBwcm9wb3NlcyBhIHNlY3VyZSBob3AtYnktaG9wIGRhdGEgYWdncmVnYXRpb24gcHJvdG9jb2wsIGluIHdoaWNoIGVhY2ggbm9kZSBjYW4gdmVyaWZ5IGltbWVkaWF0ZWx5IHRoZSBpbnRlZ3JpdHkgb2YgaXRzIHR3byBob3BzIG5laWdoYm9yc+KAmSBkYXRhIGFuZCB0aGUgYWdncmVnYXRpb24gb2YgdGhlIGltbWVkaWF0ZSBuZWlnaGJvcnMgYnkgbWVhbnMgYSBtYW5hZ2VtZW50IG9mIG5ldyB0eXBlIG9mIGtleSwgY2FsbGVkIHR3byBob3BzIHBhaXItd2lzZSBrZXkuXCJdLFwiMjEyNDQ3ODY3OFwiOltcIkRpc3RyaWJ1dGVkIGZsb3cgY29udHJvbCwgaW4gdHVybiwgaXMgYSB3ZWxsLXN0dWRpZWQgdHJhZGl0aW9uYWwgdG9waWMgaW4gbmV0d29ya2luZyBhbmQgY29udHJvbHMgZHVlIHRvIHRoZSBsYXJnZSBhbW91bnQgb2Ygd29yayBvbiBUQ1AgWzg1XS5cIl0sXCIyMTI4MDI2MDIzXCI6W1wiSW4gc3VjaCBhIHBlcnNwZWN0aXZlLCB0aGUgY29udmVudGlvbmFsIGNvbmNlcHQgb2YgdGhlIEludGVybmV0IGFzIGFuIGluZnJhc3RydWN0dXJlIG5ldHdvcmsgcmVhY2hpbmcgb3V0IHRvIGVuZC11c2Vyc+KAmSB0ZXJtaW5hbHMgd2lsbCBmYWRlLCBsZWF2aW5nIHNwYWNlIHRvIGEgbm90aW9uIG9mIGludGVyY29ubmVjdGVkIOKAmOKAmHNtYXJ04oCZ4oCZIG9iamVjdHMgZm9ybWluZyBwZXJ2YXNpdmUgY29tcHV0aW5nIGVudmlyb25tZW50cyBbMV0uXCJdLFwiMjEzMTkyNDQ2NlwiOltcIkRpZmZlcmVudCBob3AtYnktaG9wIHJlbGF0ZWQgd29ya3MgWzExMOKAkzExMl0gYXNzdW1lcyB0aGF0IGRhdGEgc2VjdXJpdHkgaXMgZ3VhcmFudGVlZCBieSBtZWFucyBvZiBzb21lIGtleSBkaXN0cmlidXRpb24gc2NoZW1lcy5cIl0sXCIyMTM1NTA1NzAyXCI6W1wiTG93LXBvd2VyIGNvbW11bmljYXRpb25zIGlzIGEgd2VsbC1lc3RhYmxpc2hlZCByZXNlYXJjaCBmaWVsZCB3aXRoaW4gdGhlIHNlbnNvciBuZXR3b3JraW5nIGNvbW11bml0eSwgYXMgcHJvdmVkIGJ5IHRoZSBhY3RpdmUgcmVzZWFyY2ggcGVyZm9ybWVkIGluIHRoZSBsYXN0IGRlY2FkZSBvbiBwb3dlciBjb25zdW1wdGlvbiBhd2FyZSBtZWRpdW0gYWNjZXNzIHByb3RvY29scyBbNDjigJM1Ml0uXCIsXCJUaGUgaW5jcmVhc2UgaW4gbWVzc2FnZSBsYXRlbmN5IFs0OF0gaW4gdHVybiBuZWVkcyB0byBiZSB0cmFkZWQgb2ZmIGluIG9yZGVyIHRvIGJhbGFuY2UgYmV0d2VlbiBuZXR3b3JrIGxpZmV0aW1lIGFuZCBjb21tdW5pY2F0aW9uIHBlcmZvcm1hbmNlLlwiXSxcIjIxMzc3NzU0NTNcIjpbXCJJbiBvcmRlciB0byBpbmNyZWFzZSBzY2FsYWJpbGl0eSwgZm9sbG93aW5nIHRoZSBzZW1pbmFsIHdvcmsgb2YgR3VwdGEgYW5kIEt1bWFyIG9uIHRoZSBzY2FsaW5nIG9mIGNhcGFjaXR5IGluIHdpcmVsZXNzIG5ldHdvcmtzIFs1Nl0sIHNldmVyYWwgc2NoZW1lcyBmb3IgZGlzdHJpYnV0ZWQgZXN0aW1hdGlvbiBiYXNlZCBvbiBsb2NhbCBjb21tdW5pY2F0aW9ucyBoYXZlIGJlZW4gcHJvcG9zZWQuXCJdLFwiMjEzODgzMDkwNlwiOltcIlByb2JsZW1zIGxpa2UgbGVhZGVyLWVsZWN0aW9uLCBub2RlIGNvdW50aW5nIGFuZCBhdmVyYWdlcyBjb21wdXRhdGlvbiBhcmUgYSBjb3JlIHRvcGljIGluIHRoZSBkaXN0cmlidXRlZCBzeXN0ZW1zIGxpdGVyYXR1cmUgWzc24oCTNzhdLlwiXSxcIjIxMzkwNjExNDRcIjpbXCJBIG51bWJlciBvZiBmcmFtZXdvcmtzIGhhdmUgYmVlbiBwcm9wb3NlZCBmb3IgYWNjb3VudGluZyBmb3IgcHJpdmFjeSBpc3N1ZXMgaW4gdGhlIHN5c3RlbSBkZXNpZ24gcGhhc2UsIHN1Y2ggYXMgS2FvcyBbMTI2XSwgVHJvcG9zIFsxMjcsMTI4XSwgTkZSIFsxMjksMTMwXSwgR0JSQU0gWzEzMV0sIFBSSVMgWzEzMiwxMzNdLlwiLFwiUFJJUyBbMTMyXSwgaW5kZWVkLCByZXByZXNlbnRzIGEgcmVxdWlyZW1lbnQgZW5naW5lZXJpbmcgbWV0aG9kb2xvZ3ksIHdoaWNoIGluY29ycG9yYXRlcyBwcml2YWN5IHJlcXVpcmVtZW50cyBpbnRvIHRoZSBzeXN0ZW0gZGVzaWduIHByb2Nlc3MuXCJdLFwiMjE0MzE1NzA2M1wiOltcIls2Nl0gYW5kIEdlb3JnaWEgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3kgQ3liZXJHdWlkZSBbNjddLlwiXSxcIjIxNDM1MTQ5MzFcIjpbXCJTb21lIGFwcHJvYWNoZXMgWzExNOKAkzExN10gc3VnZ2VzdCB0byBzaGFyZSBhIGtleSBhbW9uZyBhbGwgc2Vuc2luZyBub2RlcyBhbmQgdGhlIFNpbmssIHRoZSBhZ2dyZWdhdG9yIG5vZGVzIGhhdmUgbm90IHRoZSBrZXkgYmVjYXVzZSB0aGUgYWdncmVnYXRvciBub2RlcyBoYW5kbGUgZGF0YSB3aXRob3V0IG1ha2luZyBhbnkgZW5jcnlwdGlvbi9kZWNyeXB0aW9uIG9wZXJhdGlvbi5cIl0sXCIyMTQzODY0ODMxXCI6W1wiQWxzbywgdGhlIHJlY2VudCBhZHZhbmNlbWVudCBvZiB1bHRyYS13aWRlYmFuZCByYWRpbyBmcmVxdWVuY3kgdGVjaG5vbG9naWVzIHN0aW11bGF0ZWQgcmVzZWFyY2ggZm9yIHZlcnkgZmluZS1ncmFpbmVkIGxvY2F0aW9uIGVzdGltYXRpb24gYW5kIHJhbmdpbmcgWzcxXS5cIl0sXCIyMTQ3NTEwOTMwXCI6W1wiLCBvbiB0aGUgYWRvcHRpb24gb2YgZW5jcnlwdGlvbiB0ZWNobmlxdWVzIGFuZCBhZCBob2Mga2V5IGRpc3RyaWJ1dGlvbiBzY2hlbWVzIFsxMTnigJMgMTIxXS5cIl0sXCIyMTUxMDg3MzQ3XCI6W1wiT3RoZXIgYXBwcm9hY2hlcyBjb21iaW5lIHBhY2tldCBmb3J3YXJkaW5nIGFuZCBjb21wdXRhdGlvbiBhcyBpbiBbNjBdLCB3aGljaCB1c2VzIGEgY29tYmluYXRpb24gb2YgYSBiaW5hcnkgc3BsaXQtdHJlZSBhbGdvcml0aG0gY291cGxlZCB0byBhIGJpbmFyeSBoeXBvdGhlc2lzIHRlc3RpbmcgcHJvY2VkdXJlLlwiXSxcIjIxNTI3NjUxMzdcIjpbXCJEaWZmZXJlbnQgaG9wLWJ5LWhvcCByZWxhdGVkIHdvcmtzIFsxMTDigJMxMTJdIGFzc3VtZXMgdGhhdCBkYXRhIHNlY3VyaXR5IGlzIGd1YXJhbnRlZWQgYnkgbWVhbnMgb2Ygc29tZSBrZXkgZGlzdHJpYnV0aW9uIHNjaGVtZXMuXCJdLFwiMjE1NjIwMDE4OVwiOltcIkZvbGxvd2luZyB1c2Vyc+KAmSByZXF1ZXN0cywgbm9kZXMgaW4gSW9UIHdpbGwgb3JnYW5pemUgdGhlbXNlbHZlcyBhdXRvbm9tb3VzbHkgaW50byB0cmFuc2llbnQgYWQgaG9jIG5ldHdvcmtzLCBwcm92aWRpbmcgdGhlIGJhc2ljIG1lYW5zIGZvciBzaGFyaW5nIGRhdGEgYW5kIGZvciBwZXJmb3JtaW5nIGNvb3JkaW5hdGVkIHRhc2tzIFsyMV0uXCJdLFwiMjE2MDE3MDA1MFwiOltcImluZyBhcHBsaWNhdGlvbnMgd2l0aCBjb250ZXh0dWFsIGluZm9ybWF0aW9uIGluIGEgZGlzdHJpYnV0ZWQgc2V0dGluZyBbMzTigJMzNl0uXCIsXCJTY2hpbGl04oCZcyBhY3RpdmUgbWFwIHN5c3RlbSBbMzQsMzVdIHJlcHJlc2VudHMgYSBsb2NhdGlvbi1iYXNlZCBwdWJsaXNoLXN1YnNjcmliZSBzeXN0ZW0gZm9yIGNvbnRleHR1YWwgaW5mb3JtYXRpb24gZGlzc2VtaW5hdGlvbi5cIl0sXCIyMTYxMTUxMzcwXCI6W1wiT25lIHRvcGljIGFkZHJlc3NlZCBpbnZvbHZlcyB0aGUgc3VydmVpbGxhbmNlIG9mIG1vdmluZyBvYmplY3RzIHdpdGhpbiBhIHNlbnNvcml6ZWQgYXJlYSBbNjhdLCBvciB0aGUgcm9idXN0bmVzcyBvZiBsb2NhdGlvbiBkZXRlY3Rpb24gc2NoZW1lcyBbNjldIGFzIG5lZWRlZCBpbiB0aGUgY2FzZSBvZiBlbWVyZ2VuY3kgbmV0d29ya3MgWzcwXS5cIl0sXCIyMTYxMjQ5OTI0XCI6W1wiT25lIHRvcGljIGFkZHJlc3NlZCBpbnZvbHZlcyB0aGUgc3VydmVpbGxhbmNlIG9mIG1vdmluZyBvYmplY3RzIHdpdGhpbiBhIHNlbnNvcml6ZWQgYXJlYSBbNjhdLCBvciB0aGUgcm9idXN0bmVzcyBvZiBsb2NhdGlvbiBkZXRlY3Rpb24gc2NoZW1lcyBbNjldIGFzIG5lZWRlZCBpbiB0aGUgY2FzZSBvZiBlbWVyZ2VuY3kgbmV0d29ya3MgWzcwXS5cIl0sXCIyMTYyMjE1MjkzXCI6W1wiSW4gcGFydGljdWxhciwgaXQgaGFzIGJlZW4gc2hvd2VkIHRoYXQgaXQgaXMgcG9zc2libGUgdG8gaW50ZWdyYXRlIHNldmVyYWwgc291cmNlcyBvZiBlbmVyZ3kgaGFydmVzdGluZyBpbnRvIHNlbnNvcnMsIGluY2x1ZGluZyBwaWV6b2VsZWN0cmljLCB0aGVybW9lbGVjdHJpYyBhbmQgcmFkaW8gd2F2ZXMgcmVjaGFyZ2luZyBkZXZpY2VzIFs1M10uXCJdLFwiMjE2NjYwMjU5NVwiOltcIkEgc3RhbmRhcmQgYXBwcm9hY2gsIHdoaWNoIG1hdGNoZXMgd2VsbCB0aGUgZmVhdHVyZXMgb2YgSW9UIGVudmlyb25tZW50cywgaXMgcmVwcmVzZW50ZWQgYnkgUm9sZS1CYXNlZCBBY2Nlc3MgQ29udHJvbCAoUkJBQykgWzEwMV0uXCJdLFwiMjE2NzA1MTE3M1wiOltcIkZvciBleGFtcGxlLCBhdXRob3JzIG9mIFs1N10gcHJvdmVkIHRoYXQgdGhlIGJlc3QgbGluZWFyIHVuYmlhc2VkIGVzdGltYXRpb24gb2YgYSBkZXRlcm1pbmlzdGljIHBhcmFtZXRlciBjYW4gYmUgY29tcHV0ZWQgYXQgZXZlcnkgc2Vuc29yIHdpdGggYSBkaXN0cmlidXRlZCBhbGdvcml0aG0uXCJdLFwiMjE2ODg2NzgyM1wiOltcIkEgbnVtYmVyIG9mIHJlc2VhcmNoIGVmZm9ydHMgZm9yIGJ1aWxkaW5nIHNlbGYtYWRhcHRpdmUgc2l0dWF0ZWQgc2VydmljZXMgaGF2ZSBiZWVuIHVuZGVydGFrZW4gaW4gdGhlIGxhc3QgZmV3IHllYXJzIFszN+KAkzQyXS5cIl0sXCIyMTcwNDk2MjQwXCI6W1wiQSB3aWRlbHkgdXNlZCBkZWZpbml0aW9uIGlzIHRoZSBvbmUgcHJvdmlkZWQgYnkgQmxhemUgYW5kIEZlaWdlbmJhdW0gWzEzNF0sIHdoaWNoIHJlZmVycyB0byBzZWN1cml0eSBwb2xpY2llcyByZWd1bGF0aW5nIGFjY2Vzc2VzIHRvIHJlc291cmNlcyBhbmQgY3JlZGVudGlhbHMgdGhhdCBhcmUgcmVxdWlyZWQgdG8gc2F0aXNmeSBzdWNoIHBvbGljaWVzLlwiLFwiQXQgcHJlc2VudCBhIGxpbWl0ZWQgbnVtYmVyIG9mIHNvbHV0aW9ucyBhcmUgYXZhaWxhYmxlIFsxMzUsMTM2LDQ2LDEzNF0uXCIsXCJUaGUgbW9zdCBwb3B1bGFyIGFwcHJvYWNoZXMgaW5jbHVkZSBLZXlOb3RlIFsxMzRdIGFuZCBUcnVzdEJ1aWxkZXIgWzQ2XSwgd2hpY2ggbm9uZXRoZWxlc3NcIl0sXCIyMTcxOTA5NDk0XCI6W1wiVGhlIHNjaWVudGlmaWMgbGl0ZXJhdHVyZSBvZmZlcnMgZmV3IHByb3Bvc2Fscywgd2hpY2ggYXJlIGNsYXNzaWZpZWQgaW50byB0d28gbWFpbiBjYXRlZ29yaWVzOiB0aG9zZSBhaW1pbmcgdG8gZW5zdXJlIGF1dGhlbnRpY2l0eSwgY29uZmlkZW50aWFsaXR5IGFuZCBpbnRlZ3JpdHkgb2YgZGF0YSBzdHJlYW1zIGR1cmluZyB0cmFuc21pc3Npb24gWzEwMiwxMDNdIGFuZCB0aG9zZSByZWxhdGVkIHRvIGFjY2VzcyBjb250cm9sIFsxMDQsMTA1XS5cIixcIlRoZSB3b3JrIGluIFsxMDRdIHByb3Bvc2VzIGEgbW9kZWwgZm9yIGV4dGVuZGluZyBSQkFDIHRvIHByb3RlY3QgZGF0YSBzdHJlYW1zIGZyb20gdW5hdXRob3JpemVkIGFjY2Vzcy5cIl0sXCIyMzAxNjA1MzkwXCI6W1wiQSBudW1iZXIgb2YgZnJhbWV3b3JrcyBoYXZlIGJlZW4gcHJvcG9zZWQgZm9yIGFjY291bnRpbmcgZm9yIHByaXZhY3kgaXNzdWVzIGluIHRoZSBzeXN0ZW0gZGVzaWduIHBoYXNlLCBzdWNoIGFzIEthb3MgWzEyNl0sIFRyb3BvcyBbMTI3LDEyOF0sIE5GUiBbMTI5LDEzMF0sIEdCUkFNIFsxMzFdLCBQUklTIFsxMzIsMTMzXS5cIl0sXCIyMzQwOTk1MTEzXCI6W1wiU3luY2hyb25pemF0aW9uIG9mIGNsb2NrcyBmb3IgdGFza3MsIHdoaWNoIG1pZ2h0IHVuZGVyZ28gZmFpbHVyZXMgYW5kIHJlc3RhcnQgaGFzIGFsc28gYmVlbiBhZGRyZXNzZWQgZXh0ZW5zaXZlbHkgaW4gdGhlIGxpdGVyYXR1cmUgWzg4XS5cIl0sXCIyMzk4NTc5OTYyXCI6W1wiQXMgZmFyIGFzIGZyYW1ld29ya3MgZm9yIGRldmVsb3BpbmcgSW9UIGFwcGxpY2F0aW9ucyBhcmUgY29uY2VybmVkLCBhIG1ham9yIHJvbGUgaXMgZXhwZWN0ZWQgdG8gYmUgcGxheWVkIGJ5IGFwcHJvYWNoZXMgYmFzZWQgb24gc28tY2FsbGVkIHNlcnZpY2Utb3JpZW50ZWQgY29tcHV0aW5nIChTT0MpIFs0M+KAkzQ1XS5cIl0sXCIyNDY5NzMxMTc4XCI6W1wiSW9UIG1heSB3ZWxsIGluaGVyaXQgY29uY2VwdHMgYW5kIGxlc3NvbnMgbGVhcm5lZCBpbiBwZXJ2YXNpdmUgY29tcHV0aW5nLCBhbWJpZW50IGludGVsbGlnZW5jZSBhcHBsaWNhdGlvbnMgYW5kIHNlcnZpY2Utb3JpZW50ZWQgY29tcHV0aW5nIFs5NuKAkzk5XSwgYXMgZGV0YWlsZWQgaW4gU2VjdGlvbiAzLlwiXSxcIjI0ODE1MTQzNDNcIjpbXCJBIG51bWJlciBvZiBmcmFtZXdvcmtzIGhhdmUgYmVlbiBwcm9wb3NlZCBmb3IgYWNjb3VudGluZyBmb3IgcHJpdmFjeSBpc3N1ZXMgaW4gdGhlIHN5c3RlbSBkZXNpZ24gcGhhc2UsIHN1Y2ggYXMgS2FvcyBbMTI2XSwgVHJvcG9zIFsxMjcsMTI4XSwgTkZSIFsxMjksMTMwXSwgR0JSQU0gWzEzMV0sIFBSSVMgWzEzMiwxMzNdLlwiLFwiRGlmZmVyZW50IGlzIHRoZSBnb2FsIG9mIFsxMzNdLCB3aGljaCBkZWZpbmVzIGEgZ2VuZXJhbCBVTUwgY29uY2VwdHVhbCBtb2RlbCBmb3IgcmVwcmVzZW50aW5nIHByaXZhY3kgcG9saWNpZXMuXCJdLFwiMjU0NDAzMzQ0MFwiOltcIkF0IHRoZSBzYW1lIHRpbWUsIGluIGl0cyBkZXZlbG9wbWVudCBwYXRoLCBJb1Qgd2lsbCBsaWtlbHkgYnVpbGQgb24gYXBwcm9hY2hlcyBpbnRyb2R1Y2VkIGluIGEgdmFyaWV0eSBvZiByZWxldmFudCBmaWVsZCwgc3VjaCBhcyB3aXJlbGVzcyBzZW5zb3IgbmV0d29ya3MgKGFzIGEgbWVhbnMgdG8gY29sbGVjdCBjb250ZXh0dWFsIGRhdGEgWzldKSBhbmQgc2VydmljZS1vcmllbnRlZCBhcmNoaXRlY3R1cmVzIChTb0EpIGFzIHRoZSBzb2Z0d2FyZSBhcmNoaXRlY3R1cmFsIGFwcHJvYWNoIGZvciBleHBhbmRpbmcgV2ViLWJhc2VkIHNlcnZpY2VzIHRocm91Z2ggSW9UIGNhcGFiaWxpdGllcyBbMTldLlwiXSxcIjI2MTU2ODgxMTBcIjpbXCJBIHJlbGF0ZWQgcmVzZWFyY2ggZmllbGQgaXMgdGhhdCBvZiBkaXN0cmlidXRlZCBhcnRpZmljaWFsIGludGVsbGlnZW5jZSwgd2hpY2ggYWRkcmVzc2VzIGhvdyBhdXRvbm9tb3VzIHNvZnR3YXJlIGVudGl0aWVzLCB1c3VhbGx5IHJlZmVycmVkIHRvIGFzIOKAmGFnZW50c+KAmSwgY2FuIGJlIG1hZGUgYWJsZSB0byBpbnRlcmFjdCB3aXRoIHRoZSBlbnZpcm9ubWVudCBhbmQgYW1vbmcgdGhlbXNlbHZlcyBpbiBzdWNoIGEgd2F5IHRvIGVmZmVjdGl2ZWx5IHB1cnN1ZSBhIGdpdmVuIGdsb2JhbCBnb2FsIFs5M10uXCJdLFwiMjc1Mjg4NTQ5MlwiOltcIlRoZSBkaXN0cmlidXRlZCBpbXBsZW1lbnRhdGlvbiBvZiByb3V0aW5nIHByb3RvY29scyBpcyBvbmUgb2YgdGhlIGZ1bmRhbWVudGFsIGFsZ29yaXRobWljIGJ1aWxkaW5nIGJsb2NrcyBmb3IgbmV0d29ya2VkIHN5c3RlbXMgWzgxXS5cIl19LFwiUFJcIjpbMjEwNTEwMzc3NywyMTExNjE5NjI2LDIwMzgxOTQyMjAsMTk3MjAxMjE0NywxOTY3NTYxMTk0LDIwNjg4NDkyNzcsMTk3OTUxOTQ2MiwyMDAzNTQ0Mjk1LDIwNTg0MDEyMTIsMjAyNjg5MjQ1OSwyMTM2MTAyNDgwLDE3NTUyMjcwNjMsMjEyMzc3MDE5OCwyMTA0OTI3ODA3LDIxMzQyOTUwNTMsMjE0MzU5MTQ0MiwyNjAyOTU2NjMwLDE5OTIwMjUxOTYsMjA3MjY0MTg5MiwyMTE0NjMxODU4LDIxMDUxMDM3NzcsMjExMTYxOTYyNiwyMDM4MTk0MjIwLDE5NzIwMTIxNDcsMTk2NzU2MTE5NCwyMDY4ODQ5Mjc3LDE5Nzk1MTk0NjIsMjAwMzU0NDI5NSwyMDU4NDAxMjEyLDIwMjY4OTI0NTksMjEzNjEwMjQ4MCwxNzU1MjI3MDYzLDIxMjM3NzAxOTgsMjEwNDkyNzgwNywyMTM0Mjk1MDUzLDIxNDM1OTE0NDIsMjYwMjk1NjYzMCwxOTkyMDI1MTk2LDIwNzI2NDE4OTIsMjExNDYzMTg1OF0sXCJBTkZcIjpbe1wiRk5cIjpcIkRhbmllbGVcIixcIkxOXCI6XCJNaW9yYW5kaVwiLFwiU1wiOjF9LHtcIkZOXCI6XCJTYWJyaW5hXCIsXCJMTlwiOlwiU2ljYXJpXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkZyYW5jZXNjbyBEZVwiLFwiTE5cIjpcIlBlbGxlZ3JpbmlcIixcIlNcIjozfSx7XCJGTlwiOlwiSW1yaWNoXCIsXCJMTlwiOlwiQ2hsYW10YWNcIixcIlNcIjo0fV0sXCJCVlwiOlwiYWQgaG9jIG5ldHdvcmtzXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIkVsc2V2aWVyXCJ9In0seyJsb2dwcm9iIjotMTUuOTI4LCJrZXNFbnRpdHlJZCI6MTA0MTY3NywiSWQiOjE5MzI0MTY1MDMsIlRpIjoiZXZvbHV0aW9uIGFuZCBzdHJ1Y3R1cmUgb2YgdGhlIGludGVybmV0IGEgc3RhdGlzdGljYWwgcGh5c2ljcyBhcHByb2FjaCIsIlkiOjIwMDQsIkQiOiIyMDA0LTAxLTAxIiwiQUEiOlt7IkF1TiI6InJvbXVhbGRvIHBhc3RvcnNhdG9ycmFzIn0seyJBdU4iOiJhbGVzc2FuZHJvIHZlc3BpZ25hbmkifV0sIkYiOlt7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6InN0YXRpc3RpY2FsIHBoeXNpY3MifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJFdm9sdXRpb24gYW5kIFN0cnVjdHVyZSBvZiB0aGUgSW50ZXJuZXQ6IEEgU3RhdGlzdGljYWwgUGh5c2ljcyBBcHByb2FjaFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjY5LFwiSW52ZXJ0ZWRJbmRleFwiOntcIlZpZXdlZFwiOlswXSxcImluXCI6WzFdLFwidGhpc1wiOlsyXSxcImFuYWx5c2lzXCI6WzNdLFwiZnJvbVwiOls0XSxcImFcIjpbNSwxNCw1MCw1NV0sXCJzdGF0aXN0aWNhbFwiOls2XSxcInBoeXNpY3NcIjpbN10sXCJwZXJzcGVjdGl2ZSxcIjpbOF0sXCJ0aGVcIjpbOSwyMCwzMSwzNSw0Miw2MCw2NF0sXCJJbnRlcm5ldFwiOlsxMF0sXCJpc1wiOlsxMV0sXCJwZXJjZWl2ZWRcIjpbMTJdLFwiYXNcIjpbMTNdLFwiZGV2ZWxvcGluZ1wiOlsxNV0sXCJzeXN0ZW1cIjpbMTZdLFwidGhhdFwiOlsxNywzOF0sXCJldm9sdmVzXCI6WzE4XSxcInRocm91Z2hcIjpbMTldLFwiYWRkaXRpb25cIjpbMjFdLFwiYW5kXCI6WzIyLDI2XSxcInJlbW92YWxcIjpbMjNdLFwib2ZcIjpbMjQsNDgsNTgsNjNdLFwibm9kZXNcIjpbMjVdLFwibGlua3MuXCI6WzI3XSxcIlRoaXNcIjpbMjhdLFwicGVyc3BlY3RpdmVcIjpbMjldLFwicGVybWl0c1wiOlszMF0sXCJhdXRob3JzXCI6WzMyXSxcInRvXCI6WzMzXSxcIm91dGxpbmVcIjpbMzRdLFwiZHluYW1pY2FsXCI6WzM2XSxcInRoZW9yeVwiOlszN10sXCJjYW5cIjpbMzldLFwiYXBwcm9wcmlhdGVseVwiOls0MF0sXCJkZXNjcmliZVwiOls0MV0sXCJJbnRlcm5ldCdzXCI6WzQzLDY1XSxcIm1hY3Jvc2NvcGljXCI6WzQ0XSxcImV2b2x1dGlvbi5cIjpbNDVdLFwiVGhlXCI6WzQ2XSxcInByZXNlbmNlXCI6WzQ3XSxcInN1Y2hcIjpbNDldLFwidGhlb3JldGljYWxcIjpbNTFdLFwiZnJhbWV3b3JrXCI6WzUyXSxcIndpbGxcIjpbNTNdLFwicHJvdmlkZVwiOls1NF0sXCJyZXZvbHV0aW9uYXJ5XCI6WzU2XSxcIndheVwiOls1N10sXCJlbmhhbmNpbmdcIjpbNTldLFwicmVhZGVyJ3NcIjpbNjFdLFwidW5kZXJzdGFuZGluZ1wiOls2Ml0sXCJ2YXJpZWRcIjpbNjZdLFwibmV0d29ya1wiOls2N10sXCJwcm9jZXNzZXMuXCI6WzY4XX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vYWJzaW1hZ2UuYXBzLm9yZy9pbWFnZS9NQVIwNS9NV1NfTUFSMDUtMjAwNC0wMDA4NDkucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vRXZvbHV0aW9uLVN0cnVjdHVyZS1JbnRlcm5ldC1TdGF0aXN0aWNhbC1BcHByb2FjaC9kcC8wNTIxODI2OTg1XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9jaS5uaWkuYWMuanAvbmNpZC9CQTY2Njk1MzE1XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9hZHNhYnMuaGFydmFyZC5lZHUvYWJzLzIwMDVBUFMuLk1BUi5INTAwMVZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0xMDc2MzU3XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MTA3NjM1N1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vbWVldGluZ3MuYXBzLm9yZy9NZWV0aW5nL01BUjA1L1Nlc3Npb24vSDUuMVwifV0sXCJWRk5cIjpcIlwiLFwiUFJcIjpbMTYyNzU5OTk2NiwyMDA4NjIwMjY0LDIxMjQ2Mzc0OTIsMjExMjA5MDcwMiwyMTQ4NjA2MTk2LDIwNzA3MjI3MzksMTk3Njk2OTIyMSwyMDM4MTk1ODc0LDIxNDkwNTUzOTAsMjEzNjkzMTY2NiwyNzk4MzE5ODIzLDIwNDA5NTY3MDcsMjEwNzM2NzYyLDIwMDIzOTY1MTAsMjA2NTc2OTUwMiwxNTQ0NjMyOTQ3LDIwNTA0MDEwODksMjEwNDA4NTY3MiwxOTgzNjEwMTMzLDE5NzE0MjE5MjUsMTYyNzU5OTk2NiwyMDA4NjIwMjY0LDIxMjQ2Mzc0OTIsMjExMjA5MDcwMiwyMTQ4NjA2MTk2LDIwNzA3MjI3MzksMTk3Njk2OTIyMSwyMDM4MTk1ODc0LDIxNDkwNTUzOTAsMjEzNjkzMTY2NiwyNzk4MzE5ODIzLDIwNDA5NTY3MDcsMjEwNzM2NzYyLDIwMDIzOTY1MTAsMjA2NTc2OTUwMiwxNTQ0NjMyOTQ3LDIwNTA0MDEwODksMjEwNDA4NTY3MiwxOTgzNjEwMTMzLDE5NzE0MjE5MjVdLFwiQU5GXCI6W3tcIkZOXCI6XCJSb211YWxkb1wiLFwiTE5cIjpcIlBhc3Rvci1TYXRvcnJhc1wiLFwiU1wiOjF9LHtcIkZOXCI6XCJBbGVzc2FuZHJvXCIsXCJMTlwiOlwiVmVzcGlnbmFuaVwiLFwiU1wiOjJ9XSxcIkJUXCI6XCJiXCIsXCJQQlwiOlwiQW1lcmljYW4gUGh5c2ljYWwgU29jaWV0eVwifSJ9LHsibG9ncHJvYiI6LTE1LjkyOCwia2VzRW50aXR5SWQiOjEwNDI2MDEsIklkIjoyMTM0Mjk1MDUzLCJUaSI6ImludGVybmV0IG9mIHRoaW5ncyBhIHN1cnZleSBvbiBlbmFibGluZyB0ZWNobm9sb2dpZXMgcHJvdG9jb2xzIGFuZCBhcHBsaWNhdGlvbnMiLCJZIjoyMDE1LCJEIjoiMjAxNS0wMS0wMSIsIlJJZCI6WzIxMDUxMDM3NzcsMjExMTYxOTYyNiwxNTc3MjMxODU3LDIxMTQ2MjMyMjEsMjMyNTg3NzA4OSwyNTY0NTY2MjIxLDIxMTczMDc3NDYsMjA2MDgyNjU4MSwyMTI1NTU1OTUwLDIxNTU5MDM5MDAsMjEzNDUyMjA5NSwyMjMyODg3OTQ0LDIxMTk1MzExODEsMTY2NDk4NjYzNCwyMDcyNjQxODkyLDMxNzUyMTI0MSwyMTcwNzgwNTYxLDIyODUxNDQ2ODcsMjEyMDYyOTE1OCwyMTUzNTAwNjQyLDIxMDI3OTE3MTAsMjA5NDcyOTM3MSwyMTQwNjY5OTYwLDIxMTA3NjcxODcsMjAzMTkyNjIxNiwyMTU1OTA4NTk4LDIwMzE4NTAzOTIsMTk4NTQxOTg5OCwxOTkwMzE4OTk0LDE5NzE0NTkwMDUsMjA5Njk3NDk2OCwyMTEwMjYyMjU0LDIxMDk2ODIwMjgsMjAyNjI5Mzc1MywyMTE4MTUzNTE0LDIxMDU5NzUyOTAsMjAyNzI4MTI4NywyMTM3NjkzMzI5LDIwNzc1Nzg3MDYsMjEyNjMxMTQxMSwyMTE1Mzc3MzI0LDIxMzA2MzA5ODgsMjA0MTc4NTQxOSwxOTczOTA2Mjc4LDE5OTg2OTAzNTAsMTUyMDEwMjA5MywyMDA2OTQzOTQxLDIxNjk4MTAzNTksMjAxNzg2NjQ3MCwxOTc2MjYyMzYyLDIwMTUyMDA0MzQsMjA5NDA2OTAxMCwyNTMwMzQwNjAxLDE5ODE0NzUwMzcsMjEwMTYwOTczMSwyMDYxNjI0NDE5LDIwNDczOTgzNjMsMjExNjc2OTM0NCwyMTU0NDc4NTExLDIwOTMxNDUzMzQsMjEyNzMwNTAxMSwyMDI5MTAwMDM4LDE1MDk3NzIzMTksMjA1NDgyMjg1NiwyMTA5MTk0NjEzLDIwODU5NTY3MTcsMjA0MDg3OTA0MiwyMDMzMzQ3NTI2LDIwMjI3MDk2MzEsMjA4MjkyODM3MywyMDM3NjMzNDAwLDIwNjU2Njg0MDAsMTg2ODM2NzU1MCwyMDE0NTgzNjY3LDIwNDE3NTc0NjIsMjQwNDgwNDMzMywyMDQzODQwOTYxLDIwODU2MDk4NjEsMjEyOTEzNTU5NywyMTY4MjY3MTQ3LDI3ODIwNTYxOCwxOTcwMTEyMzU5LDIwMDM1NzQwMzQsMTk5MzcxOTY1MSwxOTk5NDk1NzM2LDIwMzc2ODY3NjMsMjA5NTM2Njg1NywxOTgxODA4MDk0LDIwODg0NzYwNzAsMTk5NDkyNzkyNywxOTc1NTA3MDY4LDE5NzUyMTU2NzYsMTQ4OTcyMTY4MSwyMDExNzAwNzIwLDIxMzkwOTIzNDgsMjE1NjEyNDAxNSwxOTcwODMzNTI1LDE5NzcwNTU0OTUsMTk3ODc5NjQyMiwyMDQzOTI2ODA0LDE1MjI2OTI2NzUsMjExNjIyMjg2NCwyMDE2MzA1ODg1LDE5ODM5ODA0NDYsMjAyOTU1ODI5MSwyMzE0MDI2NTE2LDIwMTkxOTA2OTcsMTk5NTQ2NDcxOSwxOTk1NTE4MDg3LDIwMzExMTk2NDQsNDMyMzEwNTMzLDE5NzA3NzcxNDEsMjAzNjM2OTE1NSwyMTA0MTY0OTE3LDIwNjA3NTAzMTAsMTk2ODk3OTMwMiwyMDc2MTI5ODY1LDE5Njk4MzkxNzIsMjQwMzk0NTIzNywyMTQ3Njg1NjQ0LDIxNjEwNzM3NzgsOTIzODkyNzkzLDIxMTQxMzEyODIsMjAyNDg5NjM5NSwxOTk1ODMzNzkxLDE3NzA1NzEzMDksMjA1NzY1NzIxOCwyMDA0MTg2Nzk4LDIwOTY0MzM3MzEsMjE0MzUwNjA2MiwxOTk5MDkxMTMyLDIxNjY0MzczMjAsMjEyNDI0MDQ0MiwyNTQwNzE3NDI3LDIwNTA5NTg2NDcsMjAwNTQ0NjI1OCwyMDMwMDIyMjE3LDIwNzUxNDAxMDksMjA3MTg4MjAyNywyMDUzODU0MDI0LDE5NjY5MDg5MzcsMjE0NzU1MjA2MSwyMjAxNjEwMjg5LDIxNjk2MjYyMDcsMjExNzM5NzYyMSwxOTc5MjI1MjY0LDE3NDM1ODAwNSwyMDcxMjQwNDc0LDI0OTE5MTczODgsNjk0ODYwNTcsMTU3MjYxMzkyNSwyMDAzMjc5NjA4LDE2ODcyOTE5NywyNDg4ODM1MDM4XSwiQUEiOlt7IkF1TiI6ImFsYSBpIGFsZnVxYWhhIn0seyJBdU4iOiJtb2hzZW4gZ3VpemFuaSJ9LHsiQXVOIjoibWVoZGkgbW9oYW1tYWRpIn0seyJBdU4iOiJtb2hhbW1lZCBhbGVkaGFyaSJ9LHsiQXVOIjoibW91c3NhIGF5eWFzaCJ9XSwiRiI6W3siRk4iOiJtcXR0In0seyJGTiI6ImludGVybmV0IHByb3RvY29sIn0seyJGTiI6ImJpZyBkYXRhIn0seyJGTiI6ImludGVybmV0IG9mIHRoaW5ncyJ9LHsiRk4iOiJlbWVyZ2luZyB0ZWNobm9sb2dpZXMifSx7IkZOIjoiY2xvdWQgY29tcHV0aW5nIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiSW50ZXJuZXQgb2YgVGhpbmdzOiBBIFN1cnZleSBvbiBFbmFibGluZyBUZWNobm9sb2dpZXMsIFByb3RvY29scywgYW5kIEFwcGxpY2F0aW9uc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjI3MyxcIkludmVydGVkSW5kZXhcIjp7XCJUaGlzXCI6WzAsMTA0XSxcInBhcGVyXCI6WzEsMTA1LDI2NV0sXCJwcm92aWRlc1wiOlsyXSxcImFuXCI6WzMsMTE4LDE5NV0sXCJvdmVydmlld1wiOls0LDExMSwxMTksMTk2XSxcIm9mXCI6WzUsOCw1NSw3NCwxMDAsMTEyLDEyMCwxNTEsMTk3LDE5OSwyMTNdLFwidGhlXCI6WzYsMjUsNzEsNzUsNzgsODEsMTEzLDEyNywxNDAsMTUyLDE3MywxODksMjAwLDIwNiwyMjAsMjIzLDI0MSwyNTksMjY0XSxcIkludGVybmV0XCI6WzcsMzVdLFwiVGhpbmdzXCI6WzldLFwiKElvVClcIjpbMTBdLFwid2l0aFwiOlsxMV0sXCJlbXBoYXNpc1wiOlsxMl0sXCJvblwiOlsxMywxNzFdLFwiZW5hYmxpbmdcIjpbMTQsMTI5XSxcInRlY2hub2xvZ2llcyxcIjpbMTUsMzMsMTMwXSxcInByb3RvY29scyxcIjpbMTYsMTMxXSxcImFuZFwiOlsxNywzNCw2MywxMzIsMTU2LDE2MiwxODgsMjA5LDIyNSwyMzMsMjM1XSxcImFwcGxpY2F0aW9uXCI6WzE4LDE1NywxNjNdLFwiaXNzdWVzLlwiOlsxOV0sXCJUaGVcIjpbMjAsMzcsNTddLFwiSW9UXCI6WzIxLDgyLDEyOCwyMDIsMjI0LDI0OCwyNzFdLFwiaXNcIjpbMjIsNDAsODMsMTQ0XSxcImVuYWJsZWRcIjpbMjNdLFwiYnlcIjpbMjQsOTMsMTA3XSxcImxhdGVzdFwiOlsyNl0sXCJkZXZlbG9wbWVudHNcIjpbMjddLFwiaW5cIjpbMjgsNjAsOTgsMTM5LDIwNSwyNjNdLFwiUkZJRCxcIjpbMjldLFwic21hcnRcIjpbMzAsNDNdLFwic2Vuc29ycyxcIjpbMzFdLFwiY29tbXVuaWNhdGlvblwiOlszMl0sXCJwcm90b2NvbHMuXCI6WzM2XSxcImJhc2ljXCI6WzM4XSxcInByZW1pc2VcIjpbMzldLFwidG9cIjpbNDEsNTAsODUsODksMTI2LDEzNSwxNDUsMTU5LDE2NSwxNjgsMTc4LDE4NCwyNTYsMjY4XSxcImhhdmVcIjpbNDJdLFwic2Vuc29yc1wiOls0NF0sXCJjb2xsYWJvcmF0ZVwiOls0NV0sXCJkaXJlY3RseVwiOls0Nl0sXCJ3aXRob3V0XCI6WzQ3LDE4Ml0sXCJodW1hblwiOls0OF0sXCJpbnZvbHZlbWVudFwiOls0OV0sXCJkZWxpdmVyXCI6WzUxLDE3OSwyNjldLFwiYVwiOls1MiwxMDksMTQ3LDIxMV0sXCJuZXdcIjpbNTMsOTFdLFwiY2xhc3NcIjpbNTRdLFwiYXBwbGljYXRpb25zLlwiOls1NiwxMzNdLFwiY3VycmVudFwiOls1OF0sXCJyZXZvbHV0aW9uXCI6WzU5XSxcIkludGVybmV0LFwiOls2MV0sXCJtb2JpbGUsXCI6WzYyXSxcIm1hY2hpbmUtdG8tbWFjaGluZVwiOls2NF0sXCIoTTJNKVwiOls2NV0sXCJ0ZWNobm9sb2dpZXNcIjpbNjYsODgsMjI4XSxcImNhblwiOls2N10sXCJiZVwiOls2OF0sXCJzZWVuXCI6WzY5XSxcImFzXCI6WzcwXSxcImZpcnN0XCI6WzcyXSxcInBoYXNlXCI6WzczXSxcIklvVC5cIjpbNzYsMTE0XSxcIkluXCI6Wzc3XSxcImNvbWluZ1wiOls3OV0sXCJ5ZWFycyxcIjpbODBdLFwiZXhwZWN0ZWRcIjpbODRdLFwiYnJpZGdlXCI6Wzg2XSxcImRpdmVyc2VcIjpbODddLFwiZW5hYmxlXCI6WzkwLDE2MF0sXCJhcHBsaWNhdGlvbnNcIjpbOTJdLFwiY29ubmVjdGluZ1wiOls5NF0sXCJwaHlzaWNhbFwiOls5NV0sXCJvYmplY3RzXCI6Wzk2XSxcInRvZ2V0aGVyXCI6Wzk3LDE3NywyNjddLFwic3VwcG9ydFwiOls5OV0sXCJpbnRlbGxpZ2VudFwiOlsxMDFdLFwiZGVjaXNpb25cIjpbMTAyXSxcIm1ha2luZy5cIjpbMTAzXSxcInN0YXJ0c1wiOlsxMDZdLFwicHJvdmlkaW5nXCI6WzEwOF0sXCJob3Jpem9udGFsXCI6WzExMCwyNDVdLFwiVGhlbixcIjpbMTE1XSxcIndlXCI6WzExNiwyMTgsMjUxXSxcImdpdmVcIjpbMTE3XSxcInNvbWVcIjpbMTIxLDE5OF0sXCJ0ZWNobmljYWxcIjpbMTIyXSxcImRldGFpbHNcIjpbMTIzXSxcInRoYXRcIjpbMTI0XSxcInBlcnRhaW5cIjpbMTI1XSxcIkNvbXBhcmVkXCI6WzEzNF0sXCJvdGhlclwiOlsxMzYsMjI2XSxcInN1cnZleVwiOlsxMzddLFwicGFwZXJzXCI6WzEzOF0sXCJmaWVsZCxcIjpbMTQxXSxcIm91clwiOlsxNDJdLFwib2JqZWN0aXZlXCI6WzE0M10sXCJwcm92aWRlXCI6WzE0NiwxOTQsMjEwXSxcIm1vcmVcIjpbMTQ4XSxcInRob3JvdWdoXCI6WzE0OV0sXCJzdW1tYXJ5XCI6WzE1MCwyMTJdLFwibW9zdFwiOlsxNTNdLFwicmVsZXZhbnRcIjpbMTU0XSxcInByb3RvY29sc1wiOlsxNTUsMTc1LDI2MV0sXCJpc3N1ZXNcIjpbMTU4XSxcInJlc2VhcmNoZXJzXCI6WzE2MV0sXCJkZXZlbG9wZXJzXCI6WzE2NF0sXCJnZXRcIjpbMTY2XSxcInVwXCI6WzE2N10sXCJzcGVlZFwiOlsxNjldLFwicXVpY2tseVwiOlsxNzBdLFwiaG93XCI6WzE3MiwyNThdLFwiZGlmZmVyZW50XCI6WzE3NCwyNjBdLFwiZml0XCI6WzE3NiwyNjZdLFwiZGVzaXJlZFwiOlsxODAsMjcwXSxcImZ1bmN0aW9uYWxpdGllc1wiOlsxODFdLFwiaGF2aW5nXCI6WzE4M10sXCJnb1wiOlsxODVdLFwidGhyb3VnaFwiOlsxODZdLFwiUkZDc1wiOlsxODddLFwic3RhbmRhcmRzXCI6WzE5MF0sXCJzcGVjaWZpY2F0aW9ucy5cIjpbMTkxXSxcIldlXCI6WzE5MiwyMzhdLFwiYWxzb1wiOlsxOTMsMjM5XSxcImtleVwiOlsyMDFdLFwiY2hhbGxlbmdlc1wiOlsyMDNdLFwicHJlc2VudGVkXCI6WzIwNCwyNjJdLFwicmVjZW50XCI6WzIwN10sXCJsaXRlcmF0dXJlXCI6WzIwOF0sXCJyZWxhdGVkXCI6WzIxNF0sXCJyZXNlYXJjaFwiOlsyMTVdLFwid29yay5cIjpbMjE2XSxcIk1vcmVvdmVyLFwiOlsyMTddLFwiZXhwbG9yZVwiOlsyMTldLFwicmVsYXRpb25cIjpbMjIxXSxcImJldHdlZW5cIjpbMjIyXSxcImVtZXJnaW5nXCI6WzIyN10sXCJpbmNsdWRpbmdcIjpbMjI5XSxcImJpZ1wiOlsyMzBdLFwiZGF0YVwiOlsyMzFdLFwiYW5hbHl0aWNzXCI6WzIzMl0sXCJjbG91ZFwiOlsyMzRdLFwiZm9nXCI6WzIzNl0sXCJjb21wdXRpbmcuXCI6WzIzN10sXCJwcmVzZW50XCI6WzI0MCwyNTJdLFwibmVlZFwiOlsyNDJdLFwiZm9yXCI6WzI0M10sXCJiZXR0ZXJcIjpbMjQ0XSxcImludGVncmF0aW9uXCI6WzI0Nl0sXCJhbW9uZ1wiOlsyNDddLFwic2VydmljZXMuXCI6WzI0OSwyNzJdLFwiRmluYWxseSxcIjpbMjUwXSxcImRldGFpbGVkXCI6WzI1M10sXCJzZXJ2aWNlXCI6WzI1NF0sXCJ1c2UtY2FzZXNcIjpbMjU1XSxcImlsbHVzdHJhdGVcIjpbMjU3XX19LFwiU1wiOlt7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC83MTIzNTYzL1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMTA5L0NPTVNULjIwMTUuMjQ0NDA5NVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5vcmcvMTAuMTEwOS9DT01TVC4yMDE1LjI0NDQwOTVcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2NvbXN1ci9jb21zdXIxNy5odG1sI0FsLUZ1cWFoYUdNQUExNVwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vd3d3LmNvbXNvYy5vcmcvZmlsZXMvUHVibGljYXRpb25zL1RlY2glMjBGb2N1cy8yMDE2L2lvdC8zLnBkZlwifV0sXCJWRk5cIjpcIklFRUUgQ29tbXVuaWNhdGlvbnMgU3VydmV5cyBhbmQgVHV0b3JpYWxzXCIsXCJWXCI6MTcsXCJJXCI6NCxcIkZQXCI6MjM0NyxcIkxQXCI6MjM3NixcIkRPSVwiOlwiMTAuMTEwOS9DT01TVC4yMDE1LjI0NDQwOTVcIixcIkNDXCI6e1wiNjk0ODYwNTdcIjpbXCJTb21lIGV4YW1wbGVzIG9mIHN1Y2ggc29sdXRpb25zIHRoYXQgc3VwcG9ydCBlbmNyeXB0aW9uIGFuZCBhdXRoZW50aWNhdGlvbiBhcmUgRXZlbnRHdWFyZCBbMTEzXSBhbmQgUVVJUCBbMTE0XS5cIl0sXCIxNjg3MjkxOTdcIjpbXCJBbHNvLCBhc3Nlc3NpbmcgdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBJb1Qgc2VydmljZXMgaXMgYSBrZXkgY2hhbGxlbmdlIFsxMjBdLlwiLFwiNCBbOTVdLCBbMTExXSwgUkZJRCBbMTIwXSwgNkxvV1BBTiBbMTA0XSwgUlBMIFs4OF0sIFsxMDJdLCBhcHBsaWNhdGlvblwiXSxcIjE3NDM1ODAwNVwiOltcImZpY2FudCBjcml0ZXJpb24gaW4gZGVzaWduaW5nIGFuZCBidWlsZGluZyBJb1Qgc2VydmljZXMgdG8gbWVldCBjdXN0b21lcnPigJkgcmVxdWlyZW1lbnRzIFsxNDNdLlwiXSxcIjI3ODIwNTYxOFwiOltcIk1vcmVvdmVyLCB0aGVyZSBhcmUgc29tZSByZXNlYXJjaCBwcm9qZWN0cyBsaWtlIElvVDYgWzEyM10sIFJFUlVNMSBhbmQgUkVMWW9uSVQyIHRoYXQgaW50ZW5kIHRvIGludmVzdGlnYXRlIHRoZSBjaGFsbGVuZ2VzIGFuZCBzaG9ydGNvbWluZ3Mgb2YgdGhlIElvVCBhbmQgcHJvdmlkZSBndWlkZWxpbmVzIGZvciBzb2x1dGlvbnMuXCJdLFwiMzE3NTIxMjQxXCI6W1wiVGlueU9TIFszN10sIExpdGVPUyBbMzhdIGFuZCBSaW90IE9TIFszOV0gYWxzbyBvZmZlciBsaWdodFwiXSxcIjQzMjMxMDUzM1wiOltcIlRoaXMgYXJjaGl0ZWN0dXJlIGlzIHJlY29nbml6ZWQgYXMgYSBwcm9taXNpbmcgdGVjaG5pcXVlIGZvciB0aGUgZnV0dXJlIG9mIHRoZSBJb1QgYmVjYXVzZSBvZiBpdHMgb3Blbm5lc3MsIHNjYWxhYmlsaXR5LCBpbnRlcm9wZXJhYmlsaXR5IGFuZCByZWxpYWJpbGl0eSBiZXlvbmQgaXRzIHN1cHBvcnQgdG8gdGhlIHByaW1hcnkgSW9UIHJlcXVpcmVtZW50cyBzdWNoIGFzIG9iamVjdHMgSURzIGFuZCBzZXJ2aWNlIGRpc2NvdmVyeSBbOTddLlwiXSxcIjkyMzg5Mjc5M1wiOltcIk92ZXJhbGwsIElvVCBzZXJ2aWNlcyBjYW4gYmUgY2F0ZWdvcml6ZWQgdW5kZXIgZm91ciBjbGFzc2VzIFs0MV0sIFs0Ml06IElkZW50aXR5LXJlbGF0ZWQgU2VydmljZXMsIEluZm9ybWF0aW9uIEFnZ3JlZ2F0aW9uIFRBQkxFIElJIEJVSUxESU5HIEJMT0NLUyBBTkQgVEVDSE5PTE9HSUVTIE9GIFRIRSBJT1RcIl0sXCIxNDg5NzIxNjgxXCI6W1wiQ3liZXItUGh5c2ljYWwgU3lzdGVtcyAoVC1DUFMpIHJlcHJlc2VudCBpbnRlZ3JhdGlvbiBiZXR3ZWVuIGNvbXB1dGF0aW9uIGFuZCBjb21tdW5pY2F0aW9uIHRvIG1vbml0b3IgYW5kIGNvbnRyb2wgdGhlIHRyYW5zcG9ydGF0aW9uIG5ldHdvcmsgWzQ2XSwgWzQ3XS5cIl0sXCIxNTIwMTAyMDkzXCI6W1wiRE5TLVNELCBsaWtlIG1ETlMsIGlzIHBhcnQgb2YgdGhlIHplcm8gY29uZmlndXJhdGlvbiBhaWRzIHRvIGNvbm5lY3QgbWFjaGluZXMgd2l0aG91dCBleHRlcm5hbCBhZG1pbmlzdHJhdGlvbiBvciBjb25maWd1cmF0aW9uIFs4NV0uXCJdLFwiMTUyMjY5MjY3NVwiOltcIlsxMDNdIGFsc28gaGFzIHJlcG9ydGVkIHNvbWUgdW5yZWxpYWJpbGl0eSBwcm9ibGVtcyB3aXRoIFJQTCBkdWUgdG8gdGhlIGxhY2sgb2YgdGhlIGNvbXBsZXRlIGtub3dsZWRnZSBvZiB0aGUgbGluayBxdWFsaXRpZXMuXCJdLFwiMTU3MjYxMzkyNVwiOltcIlRoZSB1bmRlcmx5aW5nIGFyY2hpdGVjdHVyZSB1c2VzIEludGVybmV0YmFzZWQgUkZJRCB0ZWNobm9sb2dpZXMgYWxvbmcgd2l0aCBjaGVhcCBSRklEIHRhZ3MgYW5kIHJlYWRlcnMgdG8gc2hhcmUgcHJvZHVjdCBpbmZvcm1hdGlvbiBbOTZdLlwiLFwiMjIgWzk2XSwgWzk4XS5cIixcIkVQQyA5Ni1iaXQgdGFnIHBhcnRzIFs5Nl0uXCIsXCJUQUJMRSBWIEVQQyBUQUcgQ0xBU1NFUyBbOTZdXCJdLFwiMTU3NzIzMTg1N1wiOltcIlJFU1QgcmVwcmVzZW50cyBhIHNpbXBsZXIgd2F5IHRvIGV4Y2hhbmdlIGRhdGEgYmV0d2VlbiBjbGllbnRzIGFuZCBzZXJ2ZXJzIG92ZXIgSFRUUCBbNjZdLlwiXSxcIjE2NjQ5ODY2MzRcIjpbXCJYTVBQIGlzIGFuIElFVEYgaW5zdGFudCBtZXNzYWdpbmcgKElNKSBzdGFuZGFyZCB0aGF0IGlzIHVzZWQgZm9yIG11bHRpLXBhcnR5IGNoYXR0aW5nLCB2b2ljZSBhbmQgdmlkZW8gY2FsbGluZyBhbmQgdGVsZXByZXNlbmNlIFs3Ml0uXCIsXCIxMiBbNzJdKS5cIl0sXCIxNzcwNTcxMzA5XCI6W1wiQ3liZXItUGh5c2ljYWwgU3lzdGVtcyAoVC1DUFMpIHJlcHJlc2VudCBpbnRlZ3JhdGlvbiBiZXR3ZWVuIGNvbXB1dGF0aW9uIGFuZCBjb21tdW5pY2F0aW9uIHRvIG1vbml0b3IgYW5kIGNvbnRyb2wgdGhlIHRyYW5zcG9ydGF0aW9uIG5ldHdvcmsgWzQ2XSwgWzQ3XS5cIl0sXCIxODY4MzY3NTUwXCI6W1wiSW4gWzEwMF0sIHRoZSBhdXRob3JzIGFsc28gYW5hbHl6ZWQgdGhlIHBlcmZvcm1hbmNlIG9mIE1UQyBjb21tdW5pY2F0aW9ucyB3aXRoIGEgcXVldWluZyBtb2RlbCBhcyB3ZWxsIGFzIGVOQiBzZWxlY3Rpb24uXCJdLFwiMTk2NjkwODkzN1wiOltcInBob25lcyBiYXNlZCBvbiBHU00vVU1UUyBuZXR3b3JrIHRlY2hub2xvZ2llcyBbMzRdLlwiXSxcIjE5NzAxMTIzNTlcIjpbXCJBIHR5cGljYWwgQ29BUCBtZXNzYWdlIGNhbiBiZSBiZXR3ZWVuIDEwIHRvIDIwIGJ5dGVzIFs2N10uXCIsXCJUaGUgcGVyZm9ybWFuY2UgY29tcGFyaXNvbiBiZXR3ZWVuIENvQVAgYW5kIEhUVFAgaXMgaW52ZXN0aWdhdGVkIGZvciBlbmVyZ3kgY29uc3VtcHRpb24gYW5kIHJlc3BvbnNlIHRpbWUgaW4gWzY3XS5cIixcImxheWVyIHByb3RvY29scyBbNjddLCBbNzhdLCBbNzldLCBbODFdLCBhbmQgUW9TIFsxMzRdIGhhdmUgYmVlbiByZXBvcnRlZCBpbiB0aGUgbGl0ZXJhdHVyZSwgYnV0IHRoZSBsYWNrIG9mIGEgdGhvcm91Z2ggcGVyZm9ybWFuY2UgZXZhbHVhdGlvbiBmb3IgSW9UIGFwcGxpY2F0aW9ucyBpcyBzdGlsbCBhbiBvcGVuIGlzc3VlLlwiXSxcIjE5NzA3NzcxNDFcIjpbXCJBIHBlcmZvcm1hbmNlIGV2YWx1YXRpb24gb2YgdGhlc2UgdGVjaG5pcXVlcyBoYXMgYmVlbiBjYXJyaWVkIG91dCBpbiBbMTA4XS5cIl0sXCIxOTcwODMzNTI1XCI6W1wiaW5jcmVhc2VkIHJlY2VudGx5IFsyOV0uXCJdLFwiMTk3MzkwNjI3OFwiOltcIkZvciBleGFtcGxlLCBbNzhdIGNvbXBhcmVzIHRoZSBwZXJmb3JtYW5jZSBvZiBNUVRUIGFuZCBDb0FQIGluIHRlcm1zIG9mIGVuZC1cIixcImxheWVyIHByb3RvY29scyBbNjddLCBbNzhdLCBbNzldLCBbODFdLCBhbmQgUW9TIFsxMzRdIGhhdmUgYmVlbiByZXBvcnRlZCBpbiB0aGUgbGl0ZXJhdHVyZSwgYnV0IHRoZSBsYWNrIG9mIGEgdGhvcm91Z2ggcGVyZm9ybWFuY2UgZXZhbHVhdGlvbiBmb3IgSW9UIGFwcGxpY2F0aW9ucyBpcyBzdGlsbCBhbiBvcGVuIGlzc3VlLlwiXSxcIjE5NzUyMTU2NzZcIjpbXCJzdXBlcmlvciB0byBaaWdCZWXigJlzIHBlcmZvcm1hbmNlIFsxMDldLlwiXSxcIjE5NzYyNjIzNjJcIjpbXCJbMTE3XSBpbnZlc3RpZ2F0ZWQgdXNpbmcgc3VjaCBzeXN0ZW1zIGluIHRoZSBjb250ZXh0IG9mIElvVCBlbnZpcm9ubWVudHMgYnkgY29uc2lkZXJpbmcgcm91dGluZyBhdHRhY2tzIGltcGxlbWVudGVkIG9uIHRoZSBDb250aWtpIE9TLlwiXSxcIjE5NzcwNTU0OTVcIjpbXCJpbmcgdGhlIHN5c3RlbSBbMTI0XSwgWzEyNV0uXCJdLFwiMTk3ODc5NjQyMlwiOltcIkluIHRlcm1zIG9mIHJlc291cmNlcywgYmVzaWRlcyB0aGUgcG93ZXJmdWwgc2VydmVycyBpbiBkYXRhIGNlbnRlcnMgYSBsb3Qgb2Ygc21hcnQgZGV2aWNlcyBhcm91bmQgdXMgb2ZmZXIgY29tcHV0aW5nIGNhcGFiaWxpdGllcyB0aGF0IGNhbiBiZSB1c2VkIHRvIHBlcmZvcm0gcGFyYWxsZWwgSW9UIGRhdGEgYW5hbHl0aWMgdGFza3MgWzE2OF0uXCIsXCJUaHJvdWdoIGZvZyBjb21wdXRpbmcsIGl0IGlzIHByb3Bvc2VkIHRvIHVzZSBzbWFydCBkZXZpY2VzIGxpa2UgbW9iaWxlIHBob25lcyBvciBob21lIGdhdGV3YXlzIFsxNjhdLlwiXSxcIjE5NzkyMjUyNjRcIjpbXCJsaWtlIGVudmlyb25tZW50YWwgaW1wYWN0IG9mIElvVCBkZXZpY2VzIGFuZCB0ZWNobm9sb2dpZXMsIGxhcmdlIHNjYWxlIGFuZCBncmVlbiBkZXBsb3ltZW50IG9mIElvVCBzeXN0ZW1zIFsxMTldIHJlbWFpbiBvcGVuLlwiXSxcIjE5ODE0NzUwMzdcIjpbXCJXaXRoIHRoZXNlIGNoYXJhY3RlcmlzdGljcywgQkxFIGlzIGEgZ29vZCBjYW5kaWRhdGUgZm9yIElvVCBhcHBsaWNhdGlvbnMgWzkzXS5cIl0sXCIxOTgzOTgwNDQ2XCI6W1wibGF5ZXIgcHJvdG9jb2xzIFs2N10sIFs3OF0sIFs3OV0sIFs4MV0sIGFuZCBRb1MgWzEzNF0gaGF2ZSBiZWVuIHJlcG9ydGVkIGluIHRoZSBsaXRlcmF0dXJlLCBidXQgdGhlIGxhY2sgb2YgYSB0aG9yb3VnaCBwZXJmb3JtYW5jZSBldmFsdWF0aW9uIGZvciBJb1QgYXBwbGljYXRpb25zIGlzIHN0aWxsIGFuIG9wZW4gaXNzdWUuXCJdLFwiMTk4NTQxOTg5OFwiOltcInVzZWQgYW4gaW1wcm92ZWQgdmVyc2lvbiBvZiBIYWRvb3AgdG8gYW5hbHl6ZSBiaWxsaW9ucyBvZiBtZXNzYWdlcyBwZXIgZGF5IGFuZCBvZmZlciByZWFsLXRpbWUgc3RhdGlzdGljcyBvZiB1c2VyIGFjdGlvbnMgWzE2N10uXCJdLFwiMTk5MDMxODk5NFwiOltcIkFsc28sIGl0IGluY2x1ZGVzIHJlY29nbml6aW5nIGFuZCBhbmFseXppbmcgZGF0YSB0byBtYWtlIHNlbnNlIG9mIHRoZSByaWdodCBkZWNpc2lvbiB0byBwcm92aWRlIHRoZSBleGFjdCBzZXJ2aWNlIFs2Ml0uXCJdLFwiMTk5NTUxODA4N1wiOltcImluZm9ybWF0aW9uIG9mIGludGVyZXN0IFs2MF0sIFs2MV0uXCJdLFwiMTk5NTgzMzc5MVwiOltcIkEgcmVjZW50IHJlc2VhcmNoIGhhcyBwcm9wb3NlZCBzdWNoIGFuIElvVCBiaWcgZGF0YSBhbmFseXRpY3Mgc2VydmljZSBrbm93biBhcyBUU2FhYVMgdXNpbmcgdGltZSBzZXJpZXMgZGF0YSBhbmFseXRpY3MgdG8gcGVyZm9ybSBwYXR0ZXJuIG1pbmluZyBvbiBhIGxhcmdlIGFtb3VudCBvZiBjb2xsZWN0ZWQgc2Vuc29yIGRhdGEgWzE2OV0uXCJdLFwiMTk5ODY5MDM1MFwiOltcIkZyb20gdGhlIHBvb2wgb2YgcHJvcG9zZWQgbW9kZWxzLCB0aGUgYmFzaWMgbW9kZWwgaXMgYSAzLWxheWVyIGFyY2hpdGVjdHVyZSBbM10sIFsxN10sIFsxOF0gY29uc2lzdGluZyBvZiB0aGUgQXBwbGljYXRpb24sIE5ldHdvcmssIGFuZCBQZXJjZXB0aW9uIExheWVycy5cIixcIjMgaWxsdXN0cmF0ZXMgc29tZSBjb21tb24gYXJjaGl0ZWN0dXJlcyBhbW9uZyB0aGVtIGlzIHRoZSA1LWxheWVyIG1vZGVsIChub3QgdG8gYmUgY29uZnVzZWQgd2l0aCB0aGUgVENQL0lQIGxheWVycykgd2hpY2ggaGFzIGJlZW4gdXNlZCBpbiBbM10sIFsxN10sIFsxOF0uXCIsXCJ0aGUgcGVyY2VwdGlvbiBsYXllciB0byBjb25maWd1cmUgaGV0ZXJvZ2VuZW91cyBvYmplY3RzIFsxN10sIFsxOF0uXCIsXCJBbHNvLCB0aGlzIGxheWVyIHByb2Nlc3NlcyByZWNlaXZlZCBkYXRhLCBtYWtlcyBkZWNpc2lvbnMsIGFuZCBkZWxpdmVycyB0aGUgcmVxdWlyZWQgc2VydmljZXMgb3ZlciB0aGUgbmV0d29yayB3aXJlIHByb3RvY29scyBbM10sIFsxOF0sIFsyMF0uXCIsXCJjb21wYXJlcyB0aGUgb3V0cHV0IG9mIGVhY2ggbGF5ZXIgd2l0aCB0aGUgZXhwZWN0ZWQgb3V0cHV0IHRvIGVuaGFuY2Ugc2VydmljZXMgYW5kIG1haW50YWluIHVzZXJz4oCZIHByaXZhY3kgWzNdLCBbMThdLlwiLFwiVGhlIGZpdmUtbGF5ZXIgYXJjaGl0ZWN0dXJlIFszXSwgWzE3XSwgWzE4XSBwcmVzZW50IHN1Y2ggYSBtb2RlbC5cIl0sXCIxOTk5MDkxMTMyXCI6W1wiQW5hbHl6aW5nIHRoZSBwZXJmb3JtYW5jZSBvZiA2TG9XUEFOIGluIHdpcmVsZXNzIHNlbnNvciBuZXR3b3JrcyBbMTA0XSB1c2luZyBhIHBvaW50LXRvLXBvaW50IGNvbW11bmljYXRpb24gdGVzdC1iZWQgc2hvd3MgYW4gaW5jcmVhc2UgaW4gdGhlIHJvdW5kIHRyaXAgZGVsYXkgd2hlbiB0aGUgc2l6ZSBvZiB0aGUgSUNNUCBwYXlsb2FkIGlzIGluY3JlYXNlZC5cIixcIjQgWzk1XSwgWzExMV0sIFJGSUQgWzEyMF0sIDZMb1dQQU4gWzEwNF0sIFJQTCBbODhdLCBbMTAyXSwgYXBwbGljYXRpb25cIl0sXCIxOTk5NDk1NzM2XCI6W1wiVGhlIGZlYXNpYmlsaXR5IG9mIHVzaW5nIHRoaXMgc3RhbmRhcmQgaGFzIGJlZW4gZGVtb25zdHJhdGVkIGluIHZlaGljbGUtdG8tdmVoaWNsZSBjb21tdW5pY2F0aW9ucyBbOTJdIGFzIHdlbGwgYXMgd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmtzIFs5NF0uXCJdLFwiMjAwMzU3NDAzNFwiOltcInNlbnRlZCBpbiBbMTMwXS5cIl0sXCIyMDA0MTg2Nzk4XCI6W1wiU21hcnQgYnVpbGRpbmdzIGNvbm5lY3QgYnVpbGRpbmcgYXV0b21hdGlvbiBzeXN0ZW1zIChCQVMpIHRvIHRoZSBJbnRlcm5ldCBbNDVdLlwiXSxcIjIwMDU0NDYyNThcIjpbXCJBdXRob3JzIGluIFsxOTFdIHByZXNlbnQgYSBjb21tdW5pY2F0aW9uIG1vZGVsIHRvIHN1cHBvcnQgbXVsdGlwbGUgcHJvdG9jb2xzIGluIGEgbWVkaWNhbCBJb1QgYXBwbGljYXRpb24uXCJdLFwiMjAwNjk0Mzk0MVwiOltcIkEgc3BlY2lmaWNhdGlvbiBvZiBJUHNlYyBmb3IgNkxvV1BBTiBoYXMgYmVlbiBwcmVzZW50ZWQgaW4gWzExMl0uXCJdLFwiMjAxNDU4MzY2N1wiOltcIkEgZ2VuZXJpYyBJb1QgYXJjaGl0ZWN0dXJlIGhhcyBiZWVuIHByZXNlbnRlZCBpbiBbMTQxXSBieSBpbnRyb2R1Y2luZyBhbiBJb1QgZGFlbW9uIGNvbnNpc3Rpbmcgb2YgdGhyZWUgbGF5ZXJzOiBWaXJ0dWFsIE9iamVjdCwgQ29tcG9zaXRlIFZpcnR1YWwgT2JqZWN0LCBhbmQgU2VydmljZSBsYXllci5cIl0sXCIyMDE1MjAwNDM0XCI6W1wiU21hcnQgaG9tZSBbNDNdIElvVCBzZXJ2aWNlcyBjb250cmlidXRlIHRvIGVuaGFuY2luZyB0aGUgcGVyc29uYWwgbGlmZS1zdHlsZSBieSBtYWtpbmcgaXQgZWFzaWVyIGFuZCBtb3JlIGNvbnZlbmllbnQgdG8gbW9uaXRvciBhbmQgb3BlcmF0ZSBob21lIGFwcGxpYW5jZXMgYW5kIHN5c3RlbXMgKGUuXCJdLFwiMjAxNjMwNTg4NVwiOltcIkFsdGhvdWdoIHRoZXNlIHR3byBwcm90b2NvbHMgaGF2ZSBiZWVuIGRlc2lnbmVkIG9yaWdpbmFsbHkgZm9yIHJlc291cmNlcmljaCBkZXZpY2VzLCB0aGVyZSBhcmUgcmVzZWFyY2ggc3R1ZGllcyB0aGF0IGFkYXB0IGxpZ2h0IHZlcnNpb25zIG9mIHRoZW0gZm9yIElvVCBlbnZpcm9ubWVudHMgWzgyXSwgWzgzXS5cIl0sXCIyMDE3ODY2NDcwXCI6W1wiWzExNV0gcHJlc2VudGVkIExpdGhlIGZvciBTZWN1cmUgQ29BUCB1c2luZyBhIGNvbXByZXNzZWQgdmVyc2lvbiBvZiBEVExTIGFuZCBDb0FQLlwiXSxcIjIwMTkxOTA2OTdcIjpbXCJUaGUgYXV0aG9ycyBpbiBbNV0gcHJvdmlkZSBhIHN1cnZleSBvZiB0aGUgSW9UIGZvciBzcGVjaWFsaXplZCBjbGluaWNhbCB3aXJlbGVzcyBkZXZpY2VzIHVzaW5nIDZMb1dQQU4vSUVFRSA4MDIuXCJdLFwiMjAyMjcwOTYzMVwiOltcIkluZHVzdHJpYWwgYXV0b21hdGlvbiBbNTNdLCBbNTRdLCBpcyBjb21wdXRlcml6aW5nIHJvYm90aWMgZGV2aWNlcyB0byBjb21wbGV0ZSBtYW51ZmFjdHVyaW5nIHRhc2tzIHdpdGggYSBtaW5pbWFsIGh1bWFuIGludm9sdmVtZW50LlwiXSxcIjIwMjQ4OTYzOTVcIjpbXCJJbiBbMTI4XSwgWzEyOV0sIHRoZSBhdXRob3JzIGV4cGxvaXQgcHJvYmFiaWxpc3RpYyBtb2RlbCBjaGVja2luZyBtZXRob2RzIHRvIGV2YWx1YXRlIHRoZSByZWxpYWJpbGl0eSBhbmQgY29zdCBvZiBzZXJ2aWNlIGNvbXBvc2l0aW9uIGluIElvVCBzeXN0ZW1zLlwiXSxcIjIwMjYyOTM3NTNcIjpbXCJpbiB0ZXJtcyBvZiBlbmVyZ3kgY29uc3VtcHRpb24gYW5kIHRoZSByYXRpbyBvZiB0cmFuc21pc3Npb24gZW5lcmd5IHBlciB0cmFuc21pdHRlZCBiaXQgWzk1XS5cIixcIlRoZSBvdGhlciB1cHBlciBsYXllcnMgYXJlIEdlbmVyaWMgQXR0cmlidXRlIHByb3RvY29sIChHQVRUKSB3aGljaCBwcm92aWRlcyBlZmZpY2llbnQgZGF0YSBjb2xsZWN0aW9uIGZyb20gc2Vuc29ycywgYW5kIEdlbmVyaWMgQWNjZXNzIFByb2ZpbGUgKEdBUCkgdGhhdCBhbGxvd3MgdGhlIGFwcGxpY2F0aW9uIGZvciBjb25maWd1cmF0aW9uIGFuZCBvcGVyYXRpb24gaW4gZGlmZmVyZW50IG1vZGVzIHN1Y2ggYXMgYWR2ZXJ0aXNpbmcgb3Igc2Nhbm5pbmcsIGFuZCBjb25uZWN0aW9uIGluaXRpYXRpb24gYW5kIG1hbmFnZW1lbnQgWzk1XS5cIixcIjQgWzk1XSwgdGhlIHdvcmsgaW4gWzEwNl0gaW52ZXN0aWdhdGVkIHRoZSBwZXJmb3JtYW5jZSBvZiBJRUVFIDgwMi5cIl0sXCIyMDI3MjgxMjg3XCI6W1wiMSBhbmQgTVFUVC1TTiBbNzFdIChmb3JtZXJseSBrbm93biBhcyBNUVRULVMpIFYxLlwiLFwiRnVydGhlcm1vcmUsIHRoZSBicm9rZXIgYWNoaWV2ZXMgc2VjdXJpdHkgYnkgY2hlY2tpbmcgYXV0aG9yaXphdGlvbiBvZiB0aGUgcHVibGlzaGVycyBhbmQgdGhlIHN1YnNjcmliZXJzIFs3MV0uXCJdLFwiMjAyOTEwMDAzOFwiOltcIkhvd2V2ZXIsIHRoZSBmaWVsZCBvZiBmb2cgY29tcHV0aW5nIG5lZWRzIG1vcmUgYXR0ZW50aW9uIHRvIHJlc29sdmUgb3RoZXIgaXNzdWVzIGxpa2UgcmVsaWFiaWxpdHksIG1vYmlsaXR5IGFuZCBzZWN1cml0eSBvZiBhbmFseXRpY2FsIGRhdGEgb24gdGhlIGVkZ2UgZGV2aWNlcyBbMTc4XS5cIl0sXCIyMDI5NTU4MjkxXCI6W1wiU29tZSBleGFtcGxlcyBvZiBzdWNoIHNvbHV0aW9ucyB0aGF0IHN1cHBvcnQgZW5jcnlwdGlvbiBhbmQgYXV0aGVudGljYXRpb24gYXJlIEV2ZW50R3VhcmQgWzExM10gYW5kIFFVSVAgWzExNF0uXCJdLFwiMjAzMDAyMjIxN1wiOltcIkluIG9yZGVyIHRvIGRlY3JlYXNlIHRoZSBudW1iZXIgb2YgY29sbGlzaW9ucyBpbiB0aGUgRVBDIEdlbi0yIHByb3RvY29sIGFuZCB0byBpbXByb3ZlIHRhZyBpZGVudGlmaWNhdGlvbiBwcm9jZWR1cmUgYXMgd2VsbCwgcmVzZWFyY2hlcnMgaGF2ZSBwcm9wb3NlZCB0byB1c2UgY29kZSBkaXZpc2lvbiBtdWx0aXBsZSBhY2Nlc3MgKENETUEpIHRlY2huaXF1ZSBpbnN0ZWFkIG9mIHRoZSBkeW5hbWljIGZyYW1lZCBzbG90dGVkIEFMT0hBIHRlY2huaXF1ZSBbMTA3XS5cIl0sXCIyMDMxMTE5NjQ0XCI6W1wiU29tZSBvZiB0aGUgaW1wb3J0YW50IGZlYXR1cmVzIHByb3ZpZGVkIGJ5IENvQVAgaW5jbHVkZSBbNjVdLCBbNjhdOlwiXSxcIjIwMzE4NTAzOTJcIjpbXCJBbiBvdmVydmlldyBvZiB0aGUgY3VycmVudCBJRVRGIHN0YW5kYXJkcyBhbmQgY2hhbGxlbmdlcyBmb3IgdGhlIElvVCBoYXMgYmVlbiBwcmVzZW50ZWQgaW4gWzhdLlwiLFwiTW9zdCBvZiB0aGUgaWRlbnRpZmllZCBjaGFsbGVuZ2VzIGFyZSByZXBvcnRlZCBpbiB0aGUgc3VydmV5cyBbM10sIFs3XSwgWzhdLCBbMTIxXSwgWzEyMl0uXCJdLFwiMjAzMTkyNjIxNlwiOltcIjEpIENvbnN0cmFpbmVkIEFwcGxpY2F0aW9uIFByb3RvY29sIChDb0FQKTogVGhlIElFVEYgQ29uc3RyYWluZWQgUkVTVGZ1bCBFbnZpcm9ubWVudHMgKENvUkUpIHdvcmtpbmcgZ3JvdXAgY3JlYXRlZCBDb0FQLCB3aGljaCBpcyBhbiBhcHBsaWNhdGlvbiBsYXllciBwcm90b2NvbCBbNjRdLCBbNjVdIGZvciBJb1QgYXBwbGljYXRpb25zLlwiLFwiU29tZSBvZiB0aGUgaW1wb3J0YW50IGZlYXR1cmVzIHByb3ZpZGVkIGJ5IENvQVAgaW5jbHVkZSBbNjVdLCBbNjhdOlwiXSxcIjIwMzMzNDc1MjZcIjpbXCJUaGUgbGFzdCBtZXNzYWdlIHR5cGUgaXMgREFPIEFja25vd2xlZGdtZW50IChEQU8tQUNrKSB3aGljaCBpcyBhIHJlc3BvbnNlIHRvIGEgREFPIG1lc3NhZ2UgYW5kIGlzIHNlbnQgYnkgYSBEQU8gcmVjaXBpZW50IG5vZGUgbGlrZSBhIERBTyBwYXJlbnQgb3IgRE9EQUcgcm9vdCBbODhdLlwiLFwiSW4gTm9uLVN0b3JpbmcgbW9kZSwgUlBMIHJvdXRlcyBtZXNzYWdlcyBtb3ZlIHRvd2FyZHMgbG93ZXIgbGV2ZWxzIGJhc2VkIG9uIElQIHNvdXJjZSByb3V0aW5nLCB3aGVyZWFzIGluIFN0b3JpbmcgbW9kZSwgZG93bndhcmQgcm91dGluZyBpcyBiYXNlZCBvbiBkZXN0aW5hdGlvbiBJUHY2IGFkZHJlc3NlcyBbODhdLlwiLFwiSW4gWzg4XSwgYW4gZXZhbHVhdGlvbiBvZiBSUEwgZm9yIGxvdy1wb3dlciBhbmQgbG9zc3kgbmV0d29ya3MgaGFzIGJlZW4gY29uZHVjdGVkIGluIHdoaWNoIHNldmVyYWwgcHJvYmxlbXMgYXJlIGlkZW50aWZpZWQgaW5jbHVkaW5nOiB1bmRlciBzcGVjaWZpY2F0aW9uLCBpbmNvbXBhdGliaWxpdHkgb2YgbW9kZXMgb2Ygb3BlcmF0aW9uIGluIHN0b3JpbmcgYW5kIG5vbi1zdG9yaW5nIG1vZGVzLCBhbmQgbG9vcHMuXCIsXCI0IFs5NV0sIFsxMTFdLCBSRklEIFsxMjBdLCA2TG9XUEFOIFsxMDRdLCBSUEwgWzg4XSwgWzEwMl0sIGFwcGxpY2F0aW9uXCJdLFwiMjAzNzY4Njc2M1wiOltcImluZyBudW1iZXIgb2YgcHJvcG9zZWQgYXJjaGl0ZWN0dXJlcyBoYXMgbm90IHlldCBjb252ZXJnZWQgdG8gYSByZWZlcmVuY2UgbW9kZWwgWzE1XS5cIixcInJlc2VhcmNoIGF0dGVtcHRzIFsyXSwgWzNdLCBbMTVd4oCTWzIwXS5cIl0sXCIyMDQwODc5MDQyXCI6W1wiSW9UQ2xvdWQgWzE3N10gaXMgYW5vdGhlciBwcm9qZWN0XCJdLFwiMjA0MTc1NzQ2MlwiOltcIkFub3RoZXIgcmVzZWFyY2ggc3R1ZHkgWzc5XSBjb21wYXJlZCB0aGVzZSB0d28gcHJvdG9jb2xzIGluIGEgc21hcnRwaG9uZSBhcHBsaWNhdGlvbiBlbnZpcm9ubWVudCBhbmQgc2hvd2VkIHRoYXQgQ29BUOKAmXMgYmFuZHdpZHRoIHVzYWdlIGFuZCByb3VuZCB0cmlwIHRpbWUgYXJlIHNtYWxsZXIgdGhhbiB0aG9zZSBvZiBNUVRULlwiLFwibGF5ZXIgcHJvdG9jb2xzIFs2N10sIFs3OF0sIFs3OV0sIFs4MV0sIGFuZCBRb1MgWzEzNF0gaGF2ZSBiZWVuIHJlcG9ydGVkIGluIHRoZSBsaXRlcmF0dXJlLCBidXQgdGhlIGxhY2sgb2YgYSB0aG9yb3VnaCBwZXJmb3JtYW5jZSBldmFsdWF0aW9uIGZvciBJb1QgYXBwbGljYXRpb25zIGlzIHN0aWxsIGFuIG9wZW4gaXNzdWUuXCJdLFwiMjA0MTc4NTQxOVwiOltcIkhvd2V2ZXIsIHRoZXNlIHRvb2xzIGFyZSBoYXJkbHkgc3Ryb25nIGVub3VnaCBmb3IgYmlnIGRhdGEgbmVlZHMgb2YgSW9UIFsxNjZdLlwiLFwidGlvbiwgZGltZW5zaW9uYWxpdHkgcmVkdWN0aW9uLCBmZWF0dXJlIHNlbGVjdGlvbiwgYW5kIGRpc3RyaWJ1dGVkIGNvbXB1dGluZyBtZXRob2RzIFsxNjZdLlwiXSxcIjIwNDM4NDA5NjFcIjpbXCJQZXJmb3JtYW5jZSBldmFsdWF0aW9uIG9mIEFNUVAgYW5kIFJFU1QgaXMgcmVwb3J0ZWQgaW4gWzgxXS5cIixcImxheWVyIHByb3RvY29scyBbNjddLCBbNzhdLCBbNzldLCBbODFdLCBhbmQgUW9TIFsxMzRdIGhhdmUgYmVlbiByZXBvcnRlZCBpbiB0aGUgbGl0ZXJhdHVyZSwgYnV0IHRoZSBsYWNrIG9mIGEgdGhvcm91Z2ggcGVyZm9ybWFuY2UgZXZhbHVhdGlvbiBmb3IgSW9UIGFwcGxpY2F0aW9ucyBpcyBzdGlsbCBhbiBvcGVuIGlzc3VlLlwiXSxcIjIwNDM5MjY4MDRcIjpbXCJJbiBbMTc5XSwgdGhlIGF1dGhvcnMgcHJlc2VudGVkIGEgZm9nIGNvbXB1dGluZyBtb2RlbCAoRWRnZSBDbG91ZCkgdGhhdCB0cmllcyB0byBicmluZyBpbmZvcm1hdGlvbiBjZW50cmljIGNsb3VkIGNhcGFiaWxpdGllcyB0byB0aGUgZWRnZS5cIl0sXCIyMDUwOTU4NjQ3XCI6W1wiQSBncm91cCBtb2JpbGl0eSBtZWNoYW5pc20gZm9yIG1vYmlsZSBhZC1ob2MgbmV0d29ya3MgaXMgcHJlc2VudGVkIGluIFsxMzNdIHRoYXQgaXMgaW5zcGlyZWQgZnJvbSBiaXJkcyBmbHlpbmcgaW4gZmxvY2tzLlwiXSxcIjIwNTM4NTQwMjRcIjpbXCJPbmUgc29sdXRpb24gdG8gYWNoaWV2ZSBoaWdoIGF2YWlsYWJpbGl0eSBvZiBJb1Qgc2VydmljZXMgaXMgdG8gcHJvdmlkZSByZWR1bmRhbmN5IGZvciBjcml0aWNhbCBkZXZpY2VzIGFuZCBzZXJ2aWNlcyBbMTI0XS5cIixcImluZyB0aGUgc3lzdGVtIFsxMjRdLCBbMTI1XS5cIixcIlJlbGlhYmlsaXR5IHJlZmVycyB0byB0aGUgcHJvcGVyIHdvcmtpbmcgb2YgdGhlIHN5c3RlbSBiYXNlZCBvbiBpdHMgc3BlY2lmaWNhdGlvbiBbMTI0XS5cIl0sXCIyMDU3NjU3MjE4XCI6W1wiQWRlbW8gaXMgYWxzbyBwcmVzZW50ZWQgaW4gWzE5Ml0gaW4gd2hpY2ggdGhlIFNEUiB0ZWNobm9sb2d5IGlzIHVzZWQgdG8gYnVpbGQgYSBjb21tdW5pY2F0aW9ucyBpbmZyYXN0cnVjdHVyZSBmb3IgSW9UIGFwcGxpY2F0aW9ucy5cIl0sXCIyMDYwODI2NTgxXCI6W1wiTFRFLUEgKExURSBBZHZhbmNlZCkgWzM1XSBpcyBhbiBpbXByb3ZlZCB2ZXJzaW9uIG9mIExURSBpbmNsdWRpbmcgYmFuZHdpZHRoIGV4dGVuc2lvbiB3aGljaCBzdXBwb3J0cyB1cCB0byAxMDAgTUh6LCBkb3dubGluayBhbmQgdXBsaW5rIHNwYXRpYWwgbXVsdGlwbGV4aW5nLCBleHRlbmRlZCBjb3ZlcmFnZSwgaGlnaGVyIHRocm91Z2hwdXQgYW5kIGxvd2VyIGxhdGVuY2llcy5cIl0sXCIyMDYxNjI0NDE5XCI6W1wiZmVyZW50IGludGVycHJldGF0aW9ucyBvZiB0aGUgc2FtZSBzdGFuZGFyZCBpbXBsZW1lbnRlZCBieSBkaWZmZXJlbnQgcGFydGllcyBwcmVzZW50cyBhIGNoYWxsZW5nZSBmb3IgaW50ZXJvcGVyYWJpbGl0eSBbMTQ0XS5cIixcIk9uZSBvcGVuIHByb2JsZW0gaW4gSW9UIHNlY3VyaXR5IHRoYXQgaGFzIG5vdCBiZWVuIGNvbnNpZGVyZWQgaW4gdGhlIHN0YW5kYXJkcyBpcyB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBrZXlzIGFtb25nc3QgZGV2aWNlcyBbMTQ0XS5cIixcIkFub3RoZXIgYXBwcm9hY2ggaXMgdG8gc3VwcG9ydCBhY2Nlc3MgY29udHJvbCBpbiB0aGUgYXBwbGljYXRpb24gbGF5ZXIgb24gYSBwZXItdmVuZG9yIGJhc2lzIFsxNDRdLlwiXSxcIjIwNjU2Njg0MDBcIjpbXCJJbiBvcmRlciB0byBkZWxpdmVyIHNjYWxhYmxlIHNlcnZpY2VzIFsxNDJdLCBwcm9wb3NlZCB0aGVpciBJb1QgUGFhUyBwbGF0Zm9ybSB0aHJvdWdoIHZpcnR1YWwgdmVydGljYWwgc2VydmljZSBkZWxpdmVyeS5cIl0sXCIyMDcxODgyMDI3XCI6W1wiRm9yIHRoZSBzZWN1cmUgc3RvcmFnZSBvZiBkYXRhLCBDb2RvIFsxMTBdIGlzIGEgc2VjdXJpdHkgc29sdS1cIl0sXCIyMDcyNjQxODkyXCI6W1wiTW9zdCBvZiB0aGUgaWRlbnRpZmllZCBjaGFsbGVuZ2VzIGFyZSByZXBvcnRlZCBpbiB0aGUgc3VydmV5cyBbM10sIFs3XSwgWzhdLCBbMTIxXSwgWzEyMl0uXCJdLFwiMjA3NjEyOTg2NVwiOltcIlJlbGlhYmlsaXR5IGlzIGV2ZW4gbW9yZSBjcml0aWNhbCBhbmQgaGFzIG1vcmUgc3RyaW5nZW50IHJlcXVpcmVtZW50cyB3aGVuIGl0IGNvbWVzIHRvIHRoZSBmaWVsZCBvZiBlbWVyZ2VuY3kgcmVzcG9uc2UgYXBwbGljYXRpb25zIFsxMjZdLlwiLFwiWzEyNl0gcHJvcG9zZXMgYSByZWxpYWJpbGl0eSBzY2hlbWUgYXQgdGhlIHRyYW5zbWlzc2lvbiBsZXZlbCB0byBtaW5pbWl6ZSBwYWNrZXQgbG9zc2VzIGluIElvVCBlbnZpcm9uLVwiXSxcIjIwNzc1Nzg3MDZcIjpbXCJUaW55T1MgWzM3XSwgTGl0ZU9TIFszOF0gYW5kIFJpb3QgT1MgWzM5XSBhbHNvIG9mZmVyIGxpZ2h0XCJdLFwiMjA4MjkyODM3M1wiOltcIkJsdWV0b290aCBwcmVzZW50cyBhIGNvbW11bmljYXRpb24gdGVjaG5vbG9neSB0aGF0IGlzIHVzZWQgdG8gZXhjaGFuZ2UgZGF0YSBiZXR3ZWVuIGRldmljZXMgb3ZlciBzaG9ydCBkaXN0YW5jZXMgdXNpbmcgc2hvcnQtd2F2ZWxlbmd0aCByYWRpbyB0byBtaW5pbWl6ZSBwb3dlciBjb25zdW1wdGlvbiBbMzFdLlwiXSxcIjIwODU2MDk4NjFcIjpbXCJJbiBbMTg3XSwgYSBHYXRld2F5IGlzIHByb3Bvc2VkIHdoaWNoIGlzIHNwZWNpZmljIGZvciB3aXJlbGVzcyBzZW5zb3IgbmV0d29ya3MgdXNpbmcgVENQL0lQIGJhc2VkIGRldmljZXMuXCJdLFwiMjA4NTk1NjcxN1wiOltcIk1hbnkgaWRlbnRpZmljYXRpb24gbWV0aG9kcyBhcmUgYXZhaWxhYmxlIGZvciB0aGUgSW9UIHN1Y2ggYXMgZWxlY3Ryb25pYyBwcm9kdWN0IGNvZGVzIChFUEMpIGFuZCB1YmlxdWl0b3VzIGNvZGVzICh1Q29kZSkgWzIxXS5cIl0sXCIyMDg4NDc2MDcwXCI6W1wiT3ZlcmFsbCwgSW9UIHNlcnZpY2VzIGNhbiBiZSBjYXRlZ29yaXplZCB1bmRlciBmb3VyIGNsYXNzZXMgWzQxXSwgWzQyXTogSWRlbnRpdHktcmVsYXRlZCBTZXJ2aWNlcywgSW5mb3JtYXRpb24gQWdncmVnYXRpb24gVEFCTEUgSUkgQlVJTERJTkcgQkxPQ0tTIEFORCBURUNITk9MT0dJRVMgT0YgVEhFIElPVFwiXSxcIjIwOTMxNDUzMzRcIjpbXCJQYXJhbW91bnQgYW1vbmdzdCB0aGVzZSBhdHRlbXB0cyBpcyBQb250ZSBbMTgwXSB3aGljaCB3YXMgaW5pdGlhbGx5IGRldmVsb3BlZCBhcyBRRVNUIFsxODFdLlwiXSxcIjIwOTQ3MjkzNzFcIjpbXCJUaGUgYXBwbGljYXRpb24gbGF5ZXIgY292ZXJzIG51bWVyb3VzIHZlcnRpY2FsIG1hcmtldHMgc3VjaCBhcyBzbWFydCBob21lLCBzbWFydCBidWlsZGluZywgdHJhbnNwb3J0YXRpb24sIGluZHVzdHJpYWwgYXV0b21hdGlvbiBhbmQgc21hcnQgaGVhbHRoY2FyZSBbM10sIFsxN13igJNbMTldLlwiXSxcIjIwOTUzNjY4NTdcIjpbXCJBbHRob3VnaCB0aGVzZSB0d28gcHJvdG9jb2xzIGhhdmUgYmVlbiBkZXNpZ25lZCBvcmlnaW5hbGx5IGZvciByZXNvdXJjZXJpY2ggZGV2aWNlcywgdGhlcmUgYXJlIHJlc2VhcmNoIHN0dWRpZXMgdGhhdCBhZGFwdCBsaWdodCB2ZXJzaW9ucyBvZiB0aGVtIGZvciBJb1QgZW52aXJvbm1lbnRzIFs4Ml0sIFs4M10uXCJdLFwiMjA5Njk3NDk2OFwiOltcIkluIFszXSwgdGhlIGF1dGhvcnMgYWRkcmVzcyB0aGUgSW9UIGFyY2hpdGVjdHVyZSBhbmQgdGhlIGNoYWxsZW5nZXMgb2YgZGV2ZWxvcGluZyBhbmQgZGVwbG95aW5nIElvVCBhcHBsaWNhdGlvbnMuXCIsXCJGcm9tIHRoZSBwb29sIG9mIHByb3Bvc2VkIG1vZGVscywgdGhlIGJhc2ljIG1vZGVsIGlzIGEgMy1sYXllciBhcmNoaXRlY3R1cmUgWzNdLCBbMTddLCBbMThdIGNvbnNpc3Rpbmcgb2YgdGhlIEFwcGxpY2F0aW9uLCBOZXR3b3JrLCBhbmQgUGVyY2VwdGlvbiBMYXllcnMuXCIsXCJJbiB0aGUgcmVjZW50IGxpdGVyYXR1cmUsIGhvd2V2ZXIsIHNvbWUgb3RoZXIgbW9kZWxzIGhhdmUgYmVlbiBwcm9wb3NlZCB0aGF0IGFkZCBtb3JlIGFic3RyYWN0aW9uIHRvIHRoZSBJb1QgYXJjaGl0ZWN0dXJlIFsyXSwgWzNdLCBbMTdd4oCTWzIwXS5cIixcIjMgaWxsdXN0cmF0ZXMgc29tZSBjb21tb24gYXJjaGl0ZWN0dXJlcyBhbW9uZyB0aGVtIGlzIHRoZSA1LWxheWVyIG1vZGVsIChub3QgdG8gYmUgY29uZnVzZWQgd2l0aCB0aGUgVENQL0lQIGxheWVycykgd2hpY2ggaGFzIGJlZW4gdXNlZCBpbiBbM10sIFsxN10sIFsxOF0uXCIsXCJBbHNvLCB0aGlzIGxheWVyIHByb2Nlc3NlcyByZWNlaXZlZCBkYXRhLCBtYWtlcyBkZWNpc2lvbnMsIGFuZCBkZWxpdmVycyB0aGUgcmVxdWlyZWQgc2VydmljZXMgb3ZlciB0aGUgbmV0d29yayB3aXJlIHByb3RvY29scyBbM10sIFsxOF0sIFsyMF0uXCIsXCJUaGUgYXBwbGljYXRpb24gbGF5ZXIgY292ZXJzIG51bWVyb3VzIHZlcnRpY2FsIG1hcmtldHMgc3VjaCBhcyBzbWFydCBob21lLCBzbWFydCBidWlsZGluZywgdHJhbnNwb3J0YXRpb24sIGluZHVzdHJpYWwgYXV0b21hdGlvbiBhbmQgc21hcnQgaGVhbHRoY2FyZSBbM10sIFsxN13igJNbMTldLlwiLFwiY29tcGFyZXMgdGhlIG91dHB1dCBvZiBlYWNoIGxheWVyIHdpdGggdGhlIGV4cGVjdGVkIG91dHB1dCB0byBlbmhhbmNlIHNlcnZpY2VzIGFuZCBtYWludGFpbiB1c2Vyc+KAmSBwcml2YWN5IFszXSwgWzE4XS5cIixcIk1vc3Qgb2YgdGhlIGlkZW50aWZpZWQgY2hhbGxlbmdlcyBhcmUgcmVwb3J0ZWQgaW4gdGhlIHN1cnZleXMgWzNdLCBbN10sIFs4XSwgWzEyMV0sIFsxMjJdLlwiLFwicmVzZWFyY2ggYXR0ZW1wdHMgWzJdLCBbM10sIFsxNV3igJNbMjBdLlwiLFwiVGhlIGZpdmUtbGF5ZXIgYXJjaGl0ZWN0dXJlIFszXSwgWzE3XSwgWzE4XSBwcmVzZW50IHN1Y2ggYSBtb2RlbC5cIl0sXCIyMTAxNjA5NzMxXCI6W1wiU21hcnQgaG9tZXMgYXJlIHJlcXVpcmVkIHRvIGhhdmUgcmVndWxhciBpbnRlcmFjdGlvbiB3aXRoIHRoZWlyIGludGVybmFsIGFuZCBleHRlcm5hbCBlbnZpcm9ubWVudHMgWzQ0XS5cIixcIlNtYXJ0IGdyaWRzIFs0NF0sIFs1OV0gdXRpbGl6ZSB0aGUgSW9UIHRvIGltcHJvdmUgYW5kIGVuaGFuY2VcIl0sXCIyMTAyNzkxNzEwXCI6W1wiVGhlIGFwcGxpY2FibGUgcmFuZ2UgaXMgdXAgdG8gMTAgY20gd2hlcmUgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIGFjdGl2ZSByZWFkZXJzIGFuZCBwYXNzaXZlIHRhZ3Mgb3IgdHdvIGFjdGl2ZSByZWFkZXJzIGNhbiBvY2N1ciBbMjhdLlwiXSxcIjIxMDUxMDM3NzdcIjpbXCJbMl0gY292ZXJzIHRoZSBtYWluIGNvbW11bmljYXRpb24gZW5hYmxpbmcgdGVjaG5vbG9naWVzLCB3aXJlZCBhbmQgd2lyZWxlc3MgYW5kIHRoZSBlbGVtZW50cyBvZiB3aXJlbGVzcyBzZW5zb3IgbmV0d29ya3MgKFdTTnMpLlwiLFwiSW4gdGhlIHJlY2VudCBsaXRlcmF0dXJlLCBob3dldmVyLCBzb21lIG90aGVyIG1vZGVscyBoYXZlIGJlZW4gcHJvcG9zZWQgdGhhdCBhZGQgbW9yZSBhYnN0cmFjdGlvbiB0byB0aGUgSW9UIGFyY2hpdGVjdHVyZSBbMl0sIFszXSwgWzE3XeKAk1syMF0uXCIsXCJyZXNlYXJjaCBhdHRlbXB0cyBbMl0sIFszXSwgWzE1XeKAk1syMF0uXCJdLFwiMjEwNTk3NTI5MFwiOltcIkZvciBleGFtcGxlLCB0aGUgYXV0aG9ycyBpbiBbMTg2XSBwcm9wb3NlIGEgR2F0ZXdheSB0byBjb3ZlciB0aGUgZ2FwIGJldHdlZW4gWmlnQmVlIGFuZCBHUFJTIHByb3RvY29scyB0byBmYWNpbGl0YXRlIGRhdGEgdHJhbnNtaXNzaW9uIGJldHdlZW4gd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmtzIGFuZCBtb2JpbGUgY29tbXVuaWNhdGlvbiBuZXR3b3Jrcy5cIl0sXCIyMTA5MTk0NjEzXCI6W1wiVGlueU9TIFszN10sIExpdGVPUyBbMzhdIGFuZCBSaW90IE9TIFszOV0gYWxzbyBvZmZlciBsaWdodFwiXSxcIjIxMDk2ODIwMjhcIjpbXCJBbm90aGVyIGNvbW11bmljYXRpb24gdGVjaG5vbG9neSBpcyBXaUZpIHRoYXQgdXNlcyByYWRpbyB3YXZlcyB0byBleGNoYW5nZSBkYXRhIGFtb25nc3QgdGhpbmdzIHdpdGhpbiAxMDAgbSByYW5nZSBbMzBdLlwiXSxcIjIxMTAyNjIyNTRcIjpbXCJhbHNvIHNob3dlZCBhbiBpbmNyZWFzZSBvZiAyNTAlIGZvciBNMk0gdHJhZmZpYyB2b2x1bWUgaW4gMjAxMSBbMTJdLlwiXSxcIjIxMTE2MTk2MjZcIjpbXCJFbmFibGluZyB0ZWNobm9sb2dpZXMgYW5kIGFwcGxpY2F0aW9uIHNlcnZpY2VzIHVzaW5nIGEgY2VudHJhbGl6ZWQgY2xvdWQgdmlzaW9uIGFyZSBwcmVzZW50ZWQgaW4gWzRdLlwiXSxcIjIxMTQ2MjMyMjFcIjpbXCJjYXBhYmlsaXRpZXMgY29tcGFyZWQgdG8gdGhlIGZvZyBbMTc1XS5cIl0sXCIyMTE1Mzc3MzI0XCI6W1wiQW4gYXBwcm9hY2ggYmFzZWQgb24gc29mdHdhcmUtZGVmaW5lZCBuZXR3b3JraW5nIGlzIHByb3Bvc2VkIGZvciBJb1QgdGFza3MgaW4gWzE5M10uXCJdLFwiMjExNjIyMjg2NFwiOltcIjQgWzk1XSwgdGhlIHdvcmsgaW4gWzEwNl0gaW52ZXN0aWdhdGVkIHRoZSBwZXJmb3JtYW5jZSBvZiBJRUVFIDgwMi5cIl0sXCIyMTE3MzA3NzQ2XCI6W1wiVGhlIGRhdGFiYXNlIGNvbm5lY3RzIHRvIGEgcHJvY2Vzc2luZyBjZW50ZXIgdG8gaWRlbnRpZnkgb2JqZWN0cyBiYXNlZCBvbiB0aGUgcmVmbGVjdGVkIHNpZ25hbHMgd2l0aGluIGEgKDEwIGNtIHRvIDIwMCBtKSByYW5nZSBbMjddLlwiXSxcIjIxMTczOTc2MjFcIjpbXCJBbm90aGVyIG1vYmlsaXR5IG1hbmFnZW1lbnQgc2NoZW1lIGlzIHByb3Bvc2VkIGluIFsxMzFdIGluIHdoaWNoIHRoZSBtb2JpbGl0eSBvZiBzZW5zb3Igbm9kZXMgYXMgd2VsbCBhcyBzZXJ2aWNlIGF2YWlsYWJpbGl0eSBhcmUgYWRkcmVzc2VkIGJ5IHByb3ZpZGluZyBhIGRpc3RyaWJ1dGVkIHNlcnZpY2UgbGlmZWN5Y2xlIG1hbmFnZW1lbnQgbWVjaGFuaXNtLlwiXSxcIjIxMTgxNTM1MTRcIjpbXCJbODld4oCTWzkxXS5cIixcImZvcndhcmRpbmcgdG8gbGluay1sYXllciB0byBzdXBwb3J0IG11bHRpLWhvcCBkZWxpdmVyeSBbOTFdLlwiLFwiSXQgY2FuIGFsc28gY29tcHJlc3MgSVB2NiBoZWFkZXJzIHRvIHR3byBieXRlcyBbOTFdLlwiXSxcIjIxMTk1MzExODFcIjpbXCJTbWFydCBncmlkcyBbNDRdLCBbNTldIHV0aWxpemUgdGhlIElvVCB0byBpbXByb3ZlIGFuZCBlbmhhbmNlXCJdLFwiMjEyMDYyOTE1OFwiOltcIls4OV3igJNbOTFdLlwiLFwiSVB2NiBuZXR3b3JrIFs4OV0uXCIsXCJUaGVzZSBoZWFkZXJzIGFyZSBvZiBmb3VyIHR5cGVzIHdoaWNoIGFyZSBpZGVudGlmaWVkIGJ5IHR3byBiaXRzIFs4OV06ICgwMCkgTk8gNkxvV1BBTlwiXSxcIjIxMjQyNDA0NDJcIjpbXCJJdCBmYWNpbGl0YXRlcyB0aGUgc2hhcmluZyBvZiBkaXN0cmlidXRlZCBkYXRhIGFtb25nIGRpc3RyaWJ1dGVkIG9iamVjdHMgWzc3XS5cIixcIkFuIGV4cGVyaW1lbnRhbCBldmFsdWF0aW9uIG9mIHR3byBpbXBsZW1lbnRhdGlvbnMgb2YgRERTIFs3N10gcG9pbnRzIG91dCB0aGF0IHRoaXMgcHJvdG9jb2wgc2NhbGVzIHdlbGwgd2hlbiB0aGUgbnVtYmVyXCJdLFwiMjEyNTU1NTk1MFwiOltcIkNvbnRpa2kgaGFzIGEgc2ltdWxhdG9yIGNhbGxlZCBDb29qYSB3aGljaCBhbGxvd3MgcmVzZWFyY2hlciBhbmQgZGV2ZWxvcGVycyB0byBzaW11bGF0ZSBhbmQgZW11bGF0ZSBJb1QgYW5kIHdpcmVsZXNzIHNlbnNvciBuZXR3b3JrIChXU04pIGFwcGxpY2F0aW9ucyBbMzZdLlwiXSxcIjIxMjYzMTE0MTFcIjpbXCJNb3N0IG9mIHRoZSBpZGVudGlmaWVkIGNoYWxsZW5nZXMgYXJlIHJlcG9ydGVkIGluIHRoZSBzdXJ2ZXlzIFszXSwgWzddLCBbOF0sIFsxMjFdLCBbMTIyXS5cIl0sXCIyMTI3MzA1MDExXCI6W1wiZGV2aWNlcyBbMTExXS5cIixcIjQgc2VjdXJpdHkgWzExMV0uXCJdLFwiMjEyOTEzNTU5N1wiOltcIk1vcmVvdmVyLCBbNl0gYWRkcmVzc2VzIHRoZSBJb1QgaW4gdGVybXMgb2YgZW5hYmxpbmcgdGVjaG5vbG9naWVzIHdpdGggZW1waGFzaXMgb24gUkZJRCBhbmQgaXRzIHBvdGVudGlhbCBhcHBsaWNhdGlvbnMuXCJdLFwiMjEzNDUyMjA5NVwiOltcIlRoZSBSRVNFUlZPSVIgcHJvamVjdCBbMTc2XVwiXSxcIjIxMzc2OTMzMjlcIjpbXCJNb3Jlb3ZlciwgY29ubmVjdGVkIHZlaGljbGVzIGFyZSBiZWNvbWluZyBtb3JlIGltcG9ydGFudCB3aXRoIHRoZSBhaW0gdG8gbWFrZSBkcml2aW5nIG1vcmUgcmVsaWFibGUsIGVuam95YWJsZSBhbmQgZWZmaWNpZW50IFs0OF0sIFs0OV0uXCJdLFwiMjEzOTA5MjM0OFwiOltcIkZyb20gdGhlIHBvb2wgb2YgcHJvcG9zZWQgbW9kZWxzLCB0aGUgYmFzaWMgbW9kZWwgaXMgYSAzLWxheWVyIGFyY2hpdGVjdHVyZSBbM10sIFsxN10sIFsxOF0gY29uc2lzdGluZyBvZiB0aGUgQXBwbGljYXRpb24sIE5ldHdvcmssIGFuZCBQZXJjZXB0aW9uIExheWVycy5cIixcIkluIHRoZSByZWNlbnQgbGl0ZXJhdHVyZSwgaG93ZXZlciwgc29tZSBvdGhlciBtb2RlbHMgaGF2ZSBiZWVuIHByb3Bvc2VkIHRoYXQgYWRkIG1vcmUgYWJzdHJhY3Rpb24gdG8gdGhlIElvVCBhcmNoaXRlY3R1cmUgWzJdLCBbM10sIFsxN13igJNbMjBdLlwiLFwiMyBpbGx1c3RyYXRlcyBzb21lIGNvbW1vbiBhcmNoaXRlY3R1cmVzIGFtb25nIHRoZW0gaXMgdGhlIDUtbGF5ZXIgbW9kZWwgKG5vdCB0byBiZSBjb25mdXNlZCB3aXRoIHRoZSBUQ1AvSVAgbGF5ZXJzKSB3aGljaCBoYXMgYmVlbiB1c2VkIGluIFszXSwgWzE3XSwgWzE4XS5cIixcInRoZSBwZXJjZXB0aW9uIGxheWVyIHRvIGNvbmZpZ3VyZSBoZXRlcm9nZW5lb3VzIG9iamVjdHMgWzE3XSwgWzE4XS5cIixcIkZ1cnRoZXJtb3JlLCBvdGhlciBmdW5jdGlvbnMgbGlrZSBjbG91ZCBjb21wdXRpbmcgYW5kIGRhdGEgbWFuYWdlbWVudCBwcm9jZXNzZXMgYXJlIGhhbmRsZWQgYXQgdGhpcyBsYXllciBbMTddLlwiLFwiVGhlIGFwcGxpY2F0aW9uIGxheWVyIGNvdmVycyBudW1lcm91cyB2ZXJ0aWNhbCBtYXJrZXRzIHN1Y2ggYXMgc21hcnQgaG9tZSwgc21hcnQgYnVpbGRpbmcsIHRyYW5zcG9ydGF0aW9uLCBpbmR1c3RyaWFsIGF1dG9tYXRpb24gYW5kIHNtYXJ0IGhlYWx0aGNhcmUgWzNdLCBbMTdd4oCTWzE5XS5cIixcIlRoZSBmaXZlLWxheWVyIGFyY2hpdGVjdHVyZSBbM10sIFsxN10sIFsxOF0gcHJlc2VudCBzdWNoIGEgbW9kZWwuXCJdLFwiMjE0MDY2OTk2MFwiOltcImluZm9ybWF0aW9uIG9mIGludGVyZXN0IFs2MF0sIFs2MV0uXCJdLFwiMjE0MzUwNjA2MlwiOltcIkluIFsxMzldLCB0aGUgYXV0aG9ycyBwcm9wb3NlIGEgZnJhbWV3b3JrIGZvciBJb1QgbWFuYWdlbWVudCB0aHJvdWdoIHRoZSBjb25jZXB0IG9mIGludGVyY2VwdGluZyBpbnRlcm1lZGlhcnkgaW4gd2hpY2ggdGhleSBleGVjdXRlIGhlYXZ5IGRldmljZSBtYW5hZ2VtZW50IHRhc2tzIG9uIHRoZSBlZGdlIHJvdXRlcnMgb3IgZ2F0ZXdheXMgb2YgY29uc3RyYWluZWQgbmV0d29ya3MuXCJdLFwiMjE0NzU1MjA2MVwiOltcIlRoZSBhdXRvbWF0ZWQgcGFya2luZyBsb3QgcHJlc2VudGVkIGluIFsxNzFdLCBpcyBhIHNhbXBsZSBvZiB1c2luZyBYaXZlbHkgdG8gaW1wbGVtZW50IElvVCBhcHBsaWNhdGlvbnMuXCJdLFwiMjE0NzY4NTY0NFwiOltcIk1hbmFnaW5nIElvVCBkZXZpY2VzIGFuZCBhcHBsaWNhdGlvbnMgY2FuIGJlIGFuIGVmZmVjdGl2ZSBmYWN0b3IgZm9yIGdyb3dpbmcgdGhlIElvVCBkZXBsb3ltZW50cyBbMTM1XS5cIl0sXCIyMTUzNTAwNjQyXCI6W1wid2lkZWx5IGluIHRoZSByZW1vdGUgY29udHJvbCBhcHBsaWNhdGlvbnMgaW4gc21hcnQgaG9tZXMgYXMgd2VsbCBhcyBzbWFsbC1zaXplIGNvbW1lcmNpYWwgZG9tYWlucyBbMTAxXS5cIl0sXCIyMTU0NDc4NTExXCI6W1wiQW5vdGhlciBwZXJmb3JtYW5jZSBhbmFseXNpcyBvZiBSUEwgaXMgcmVwb3J0ZWQgaW4gWzEwMl0gdGhhdCBpZGVudGlmaWVzIGZhc3QgbmV0d29yayBzZXQtdXAgYW5kIGJvdW5kZWQgY29tbXVuaWNhdGlvbiBkZWxheXMgYXMgaXRzIGVmZmVjdGl2ZW5lc3MsIHdoaWxlIGhpZ2ggb3ZlcmhlYWQgaXMgYSBwb3RlbnRpYWwgZHJhd2JhY2suXCIsXCI0IFs5NV0sIFsxMTFdLCBSRklEIFsxMjBdLCA2TG9XUEFOIFsxMDRdLCBSUEwgWzg4XSwgWzEwMl0sIGFwcGxpY2F0aW9uXCJdLFwiMjE1NTkwMzkwMFwiOltcIkhvd2V2ZXIsIE5hbWVkIERhdGEgTmV0d29ya2luZyAoTkROKSBpcyBvbmUgb2YgdGhlIGNhbmRpZGF0ZXMgZm9yIG5hbWluZyBpbmZyYXN0cnVjdHVyZSBpbiB0aGUgZnV0dXJlIEludGVybmV0IFsxNDVdLlwiXSxcIjIxNTU5MDg1OThcIjpbXCJJb1QgY2hhbGxlbmdlcyBhcmUgcHJlc2VudGVkIGluIFs3XSB0byBicmlkZ2UgdGhlIGdhcCBiZXR3ZWVuIHJlc2VhcmNoIGFuZCBwcmFjdGljYWwgYXNwZWN0cy5cIixcIk1vc3Qgb2YgdGhlIGlkZW50aWZpZWQgY2hhbGxlbmdlcyBhcmUgcmVwb3J0ZWQgaW4gdGhlIHN1cnZleXMgWzNdLCBbN10sIFs4XSwgWzEyMV0sIFsxMjJdLlwiXSxcIjIxNTYxMjQwMTVcIjpbXCJJdHMgcmFuZ2UgY292ZXJhZ2UgKGFib3V0IDEwMCBtZXRlcikgaXMgdGVuIHRpbWVzIHRoYXQgb2YgdGhlIGNsYXNzaWMgQmx1ZXRvb3RoIHdoaWxlIGl0cyBsYXRlbmN5IGlzIDE1IHRpbWVzIHNob3J0ZXIgWzkyXS5cIixcIlRoZSBmZWFzaWJpbGl0eSBvZiB1c2luZyB0aGlzIHN0YW5kYXJkIGhhcyBiZWVuIGRlbW9uc3RyYXRlZCBpbiB2ZWhpY2xlLXRvLXZlaGljbGUgY29tbXVuaWNhdGlvbnMgWzkyXSBhcyB3ZWxsIGFzIHdpcmVsZXNzIHNlbnNvciBuZXR3b3JrcyBbOTRdLlwiXSxcIjIxNjEwNzM3NzhcIjpbXCJbMTMyXSBkaXNjdXNzZXMgdmFyaW91cyBzb2x1dGlvbnMgdGhhdCBzdXBwb3J0IG1vYmlsaXR5IGZvciB2ZWhpY2xlLXRvLXZlaGljbGUgbmV0d29ya2luZy5cIl0sXCIyMTY4MjY3MTQ3XCI6W1wiSW4gdGhlIHJlY2VudCBsaXRlcmF0dXJlLCBob3dldmVyLCBzb21lIG90aGVyIG1vZGVscyBoYXZlIGJlZW4gcHJvcG9zZWQgdGhhdCBhZGQgbW9yZSBhYnN0cmFjdGlvbiB0byB0aGUgSW9UIGFyY2hpdGVjdHVyZSBbMl0sIFszXSwgWzE3XeKAk1syMF0uXCIsXCJyZXNlYXJjaCBhdHRlbXB0cyBbMl0sIFszXSwgWzE1XeKAk1syMF0uXCJdLFwiMjE2OTYyNjIwN1wiOltcImF0IG9uZSBvZiBPaGlvSGVhbHRo4oCZcyBob3NwaXRhbHMgdG8gdHJhY2sgaGFuZCB3YXNoaW5nIGFmdGVyIGNoZWNraW5nIGVhY2ggcGF0aWVudCBbNTZd4oCTWzU4XS5cIl0sXCIyMTcwNzgwNTYxXCI6W1wiNkxvV1BBTiBbMjJdLCBbMjNdIHByb3ZpZGVzIGEgY29tcHJlc3Npb24gbWVjaGFuaXNtIG92ZXIgSVB2NiBoZWFkZXJzIHRoYXQgbWFrZXMgSVB2NiBhZGRyZXNzaW5nIGFwcHJvcHJpYXRlIGZvciBsb3cgcG93ZXIgd2lyZWxlc3MgbmV0d29ya3MuXCJdLFwiMjIwMTYxMDI4OVwiOltcIlRoZSBJb1QgYXBwbGljYXRpb25zIG11c3QgYmUgZGVzaWduZWQgZnJvbSB0aGUgZ3JvdW5kIHVwIHRvIGVuYWJsZSBleHRlbnNpYmxlIHNlcnZpY2VzIGFuZCBvcGVyYXRpb25zIFsxNDBdLlwiXSxcIjIyMzI4ODc5NDRcIjpbXCI2TG9XUEFOIFsyMl0sIFsyM10gcHJvdmlkZXMgYSBjb21wcmVzc2lvbiBtZWNoYW5pc20gb3ZlciBJUHY2IGhlYWRlcnMgdGhhdCBtYWtlcyBJUHY2IGFkZHJlc3NpbmcgYXBwcm9wcmlhdGUgZm9yIGxvdyBwb3dlciB3aXJlbGVzcyBuZXR3b3Jrcy5cIl0sXCIyMjg1MTQ0Njg3XCI6W1wiVGhlIElvVCBzbWFydCBvYmplY3RzIGFyZSBleHBlY3RlZCB0byByZWFjaCAyMTIgYmlsbGlvbiBlbnRpdGllcyBkZXBsb3llZCBnbG9iYWxseSBieSB0aGUgZW5kIG9mIDIwMjAgWzldLlwiLFwiQnkgMjAyMiwgTTJNIHRyYWZmaWMgZmxvd3MgYXJlIGV4cGVjdGVkIHRvIGNvbnN0aXR1dGUgdXAgdG8gNDUlIG9mIHRoZSB3aG9sZSBJbnRlcm5ldCB0cmFmZmljIFsxXSwgWzldLCBbMTBdLlwiXSxcIjIzMTQwMjY1MTZcIjpbXCJJbmR1c3RyaWFsIGF1dG9tYXRpb24gWzUzXSwgWzU0XSwgaXMgY29tcHV0ZXJpemluZyByb2JvdGljIGRldmljZXMgdG8gY29tcGxldGUgbWFudWZhY3R1cmluZyB0YXNrcyB3aXRoIGEgbWluaW1hbCBodW1hbiBpbnZvbHZlbWVudC5cIl0sXCIyMzI1ODc3MDg5XCI6W1wiKFJQTCk6IFRoZSBJRVRGIHJvdXRpbmcgb3ZlciBsb3ctcG93ZXIgYW5kIGxvc3N5IGxpbmtzIChST0xMKSB3b3JraW5nIGdyb3VwIHN0YW5kYXJkaXplZCBhIGxpbmstaW5kZXBlbmRlbnQgcm91dGluZyBwcm90b2NvbCBiYXNlZCBvbiBJUHY2IGZvciByZXNvdXJjZS1jb25zdHJhaW5lZCBub2RlcyBjYWxsZWQgUlBMIFs4Nl0sIFs4N10uXCJdLFwiMjQwMzk0NTIzN1wiOltcIlRoZSBnYXRld2F5IGFyY2hpdGVjdHVyZSB0aGF0IGlzIHByb3Bvc2VkIGJ5IFsxODhdIGFsc28gbmVlZHMgdG8gYmUgcnVuIG9uIGEgY29tcHV0YXRpb25hbGx5IHBvd2VyZnVsIHN5c3RlbSAoUEMpLlwiXSxcIjI0MDQ4MDQzMzNcIjpbXCJTb21lIG9mIHRoZSBmZWF0dXJlcyB0aGF0IG1hZGUgWGl2ZWx5IG9uZSBvZiB0aGUgcHJlZmVycmVkIGNsb3VkLWJhc2Vkc2VydmljZXByb3ZpZGVyc2ZvcklvVHNlcnZpY2VvZmZlcmluZ3NhcmVbMTcyXTog4oCiIE9wZW4gc291cmNlLCBmcmVlIGFuZCBlYXN5IHRvIHVzZSBhcyBpdCBleHBvc2VzIGFjY2Vzc2libGUgQXBwbGljYXRpb24gUHJvZ3JhbW1pbmcgSW50ZXJmYWNlcyAoQVBJcykuXCJdLFwiMjQ4ODgzNTAzOFwiOltcIlRoZSBORVRDT05GIExpZ2h0IHByb3RvY29sIFsxMzddIHdoaWNoIGlzIGFuIElFVEYgZWZmb3J0IGZvciB0aGUgbWFuYWdlbWVudCBvZiBjb25zdHJhaW5lZCBkZS1cIl0sXCIyNTQwNzE3NDI3XCI6W1wiSW4gWzEyOF0sIFsxMjldLCB0aGUgYXV0aG9ycyBleHBsb2l0IHByb2JhYmlsaXN0aWMgbW9kZWwgY2hlY2tpbmcgbWV0aG9kcyB0byBldmFsdWF0ZSB0aGUgcmVsaWFiaWxpdHkgYW5kIGNvc3Qgb2Ygc2VydmljZSBjb21wb3NpdGlvbiBpbiBJb1Qgc3lzdGVtcy5cIixcIlsxMjldIHByb3Bvc2VzIGEgcmVzb3VyY2UgbW9iaWxpdHkgc2NoZW1lIHRoYXQgc3VwcG9ydHMgdHdvIG1vZGVzOiBjYWNoaW5nIGFuZFwiXSxcIjI1NjQ1NjYyMjFcIjpbXCJJbiAyMDEwLCB0aGUgbnVtYmVyIG9mIEludGVybmV0IGNvbm5lY3RlZCBvYmplY3RzIGhhZCBzdXJwYXNzZWQgdGhlIGVhcnRo4oCZcyBodW1hbiBwb3B1bGF0aW9uIFsxXS5cIixcIkJ5IDIwMjIsIE0yTSB0cmFmZmljIGZsb3dzIGFyZSBleHBlY3RlZCB0byBjb25zdGl0dXRlIHVwIHRvIDQ1JSBvZiB0aGUgd2hvbGUgSW50ZXJuZXQgdHJhZmZpYyBbMV0sIFs5XSwgWzEwXS5cIl19LFwiUFJcIjpbMjEwNTEwMzc3NywyMTExNjE5NjI2LDIwNTg0MDEyMTIsMjAzODE5NDIyMCwyMDY4ODQ5Mjc3LDIxMTkwNDY2NDIsMTk3MTY3MzA0MiwyMDk2OTc0OTY4LDIxMTQ2MjMyMjEsMjAzNzc1OTQxNywxOTQzNTc5OTczLDIxMDQ5Mjc4MDcsMjAzMTg1MDM5MiwxODM3OTgyOTUzLDIwNzI2NDE4OTIsMjI0MTExODE5OCwyMjM0NjM5NzMyLDI1NjQ1NjYyMjEsMjc2NjMyOTQ3NiwxOTkyMDI1MTk2LDIxMDUxMDM3NzcsMjExMTYxOTYyNiwyMDU4NDAxMjEyLDIwMzgxOTQyMjAsMjA2ODg0OTI3NywyMTE5MDQ2NjQyLDE5NzE2NzMwNDIsMjA5Njk3NDk2OCwyMTE0NjIzMjIxLDIwMzc3NTk0MTcsMTk0MzU3OTk3MywyMTA0OTI3ODA3LDIwMzE4NTAzOTIsMTgzNzk4Mjk1MywyMDcyNjQxODkyLDIyNDExMTgxOTgsMjIzNDYzOTczMiwyNTY0NTY2MjIxLDI3NjYzMjk0NzYsMTk5MjAyNTE5Nl0sXCJBTkZcIjpbe1wiRk5cIjpcIkFsYSBJLlwiLFwiTE5cIjpcIkFsLUZ1cWFoYVwiLFwiU1wiOjF9LHtcIkZOXCI6XCJNb2hzZW5cIixcIkxOXCI6XCJHdWl6YW5pXCIsXCJTXCI6Mn0se1wiRk5cIjpcIk1laGRpXCIsXCJMTlwiOlwiTW9oYW1tYWRpXCIsXCJTXCI6M30se1wiRk5cIjpcIk1vaGFtbWVkXCIsXCJMTlwiOlwiQWxlZGhhcmlcIixcIlNcIjo0fSx7XCJGTlwiOlwiTW91c3NhXCIsXCJMTlwiOlwiQXl5YXNoXCIsXCJTXCI6NX1dLFwiQlZcIjpcIklFRUUgQ29tbXVuaWNhdGlvbnMgU3VydmV5cyBhbmQgVHV0b3JpYWxzXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIklFRUVcIn0ifSx7ImxvZ3Byb2IiOi0xNS45NDIsImtlc0VudGl0eUlkIjoxMDU2ODcyLCJJZCI6MjU2NDU2NjIyMSwiVGkiOiJ0aGUgaW50ZXJuZXQgb2YgdGhpbmdzIGhvdyB0aGUgbmV4dCBldm9sdXRpb24gb2YgdGhlIGludGVybmV0IGlzIGNoYW5naW5nIGV2ZXJ5dGhpbmciLCJZIjoyMDExLCJEIjoiMjAxMS0wMS0wMSIsIkFBIjpbeyJBdU4iOiJkYXZlIGV2YW5zIn1dLCJGIjpbeyJGTiI6ImludGVybmV0IGFyY2hpdGVjdHVyZSBib2FyZCJ9LHsiRk4iOiJpbnRlcm5ldCBvZiB0aGluZ3MifSx7IkZOIjoiYnVzaW5lc3MgaW50ZWxsaWdlbmNlIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJwdWJsaWMgcmVsYXRpb25zIn0seyJGTiI6Im1hcmtldGluZyJ9LHsiRk4iOiJidXNpbmVzcyJ9XSwiRSI6IntcIkROXCI6XCJUaGUgSW50ZXJuZXQgb2YgVGhpbmdzOiBIb3cgdGhlIE5leHQgRXZvbHV0aW9uIG9mIHRoZSBJbnRlcm5ldCBJcyBDaGFuZ2luZyBFdmVyeXRoaW5nXCIsXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9jb25uZWN0aW9ucy1xai5vcmcvYXJ0aWNsZS9pbnRlcm5ldC10aGluZ3MtaG93LW5leHQtZXZvbHV0aW9uLWludGVybmV0LWNoYW5naW5nLWV2ZXJ5dGhpbmdcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RlZmVuY2VtYW5hZ2VtZW50Lm9yZy9hcnRpY2xlL2ludGVybmV0LXRoaW5ncy1ob3ctbmV4dC1ldm9sdXRpb24taW50ZXJuZXQtY2hhbmdpbmctZXZlcnl0aGluZ1wifV0sXCJWRk5cIjpcIkNpc2NvIEJsb2dcIixcIlBSXCI6WzIxMDUxMDM3NzcsMjExMTYxOTYyNiwyMTE0NjIzMjIxLDIxMTkwNDY2NDIsMTc1NTIyNzA2MywyMTM0Mjk1MDUzLDIyMzQ2Mzk3MzIsMTk2NzU2MTE5NCwyMTAyODAyMzYzLDIwNjg4NDkyNzcsMjE0MzU5MTQ0MiwxODM3OTgyOTUzLDE5Nzk1MTk0NjIsMjYwMjk1NjYzMCwyMDAzNTQ0Mjk1LDIxMjgwMjYwMjMsMTk3MjAxMjE0NywyMDM4MTk0MjIwLDIwNTg0MDEyMTIsMjAyNjg5MjQ1OSwyMTA1MTAzNzc3LDIxMTE2MTk2MjYsMjExNDYyMzIyMSwyMTE5MDQ2NjQyLDE3NTUyMjcwNjMsMjEzNDI5NTA1MywyMjM0NjM5NzMyLDE5Njc1NjExOTQsMjEwMjgwMjM2MywyMDY4ODQ5Mjc3LDIxNDM1OTE0NDIsMTgzNzk4Mjk1MywxOTc5NTE5NDYyLDI2MDI5NTY2MzAsMjAwMzU0NDI5NSwyMTI4MDI2MDIzLDE5NzIwMTIxNDcsMjAzODE5NDIyMCwyMDU4NDAxMjEyLDIwMjY4OTI0NTldLFwiQU5GXCI6W3tcIkZOXCI6XCJEYXZlXCIsXCJMTlwiOlwiRXZhbnNcIixcIlNcIjoxfV0sXCJCVlwiOlwiQ2lzY28gQmxvZ1wiLFwiQlRcIjpcImFcIn0ifSx7ImxvZ3Byb2IiOi0xNS45OTYsImtlc0VudGl0eUlkIjoxMTE0MzQ0LCJJZCI6MjA2ODg0OTI3NywiVGkiOiJjb250ZXh0IGF3YXJlIGNvbXB1dGluZyBmb3IgdGhlIGludGVybmV0IG9mIHRoaW5ncyBhIHN1cnZleSIsIlkiOjIwMTQsIkQiOiIyMDE0LTAxLTAxIiwiUklkIjpbMjEzMDQwMzA0NiwyMTA1MTAzNzc3LDIxMjc5NDkxNTAsMjEyODAyNjAyMywxNjU0ODA1OTIxLDIxMzcxMDAzMjAsMTg4MjA4ODM5NSwyMTYzNDE5NjI3LDIxNTQ2ODc2MDMsMzEwMDE3NTM3LDE1NjI2NDM1MDQsMjAxNzIzMTMwNiwyMTY4ODY3ODIzLDE3NTEzMjMwNTIsMTk3OTUxOTQ2MiwyMTYwMTcwMDUwLDIxMjQ5NTc2OTcsMTUxMDgxNzg0MSwyMDQyMDM3MTM1LDIwNzUxMDY2ODQsMjUyMTQyNTM2MSwyMTUzMDc0NzE3LDI2MDI5NTY2MzAsMTcxODQ1OTQ4NSwyMTU4NDQ5NjU5LDE4MDI0MTkxMDQsMjExNjgxNzM2OSwxOTY3OTMyODUzLDE1NzQyMjI2MzgsMjA4NTM3NDY1MiwyMTI4OTEwODI0LDE5NzEwOTQ0NDksMjE1MjI2NzY1MSwyMTE2MDE1MzY1LDIwMjYyMDU5NjQsMjA0NjEyNTk1MiwyMTY1NTI1MjA2LDIwOTQ3MjkzNzEsMjEyNzk4MTgzMSwyMDI0NDg2ODQ0LDIwMzQ5NTY2NzAsMTUzMzQ1NDg1NSwxNTAwMDU4NzQ4LDIwNDg2MTk2MTMsMjUzOTkxMDc2OSwxNTkzNDUzMzA0LDM5NzI4NTA0LDE0ODg5NjUzOTgsMTUxMTM0NjA4NywxNTAzNDQ5MzQ3LDE2NjIyMjczNTIsMjE2NTAwNTYxMSwyMTI2NjIyNjcxLDU3MDY1Mjc0LDIwOTE3NTcyODMsMjEzMzAzMDM4MywyMTA1NTk2Njc0LDE3OTA0NDUwODMsMjE2ODIzNjkwMiw5ODI4Nzk3OSwyMTM0MTMxNzU1LDIxNDQyMDY5NTIsMjEwODM5ODM3OCwxNTYzODMwMjYxLDIxMTY4NzIwOTUsMjEwMzU4ODI2Myw3NjgyNjQ2NSwyMDAwNjIwNjk4LDIzMjY3NDkzOTYsMjM5OTkzNTIxMywxODg5Njg0NjY4LDIwNDcxODkxMzIsMjAzOTY3MzMyMCwyMDEwODgwMTYxLDIwMDE0MjE1ODIsMjE0MTMzNTMyMywyMTg1MjEzNzA0LDIxNDM5MjI2NjMsMTk2ODU5ODc0MSwxNzI0MjIwODA2LDIwMjcxMTA0MjEsMjE2NjQ3MjQwMSwxNTQzODM3NDMzLDIwNjE4NzcxNjYsMjAyNjM3NDA3NSw3MDQwNzY4MiwyMDY0NTMwMzAzLDIxMTY2MzYwNzksMjI2NDIzNTEyMiwyMTEyODMwNjEyLDE1NDIyMzIwOTYsMjEyNzIzNTc4OSwyMTYxODk3Njc3LDE0ODMxNDM5MDEsMTk3MTA4MDY2OCwxNTQ0NjIzNTE2LDIxNTc3MzU2NTksMTk5MDk5MjUzMywyNDYyMTA1NjM4LDU5NTAwNDc0LDIxNTE2NDIxMDksMTU5MTA0NjUzMSwyMTQxODAxNTgxLDIwMDc1OTM3NzIsMjQ4MjE2Njk0MCwxMzEyNjc2NDksMjE2MDM4NTI4MywyMDkxMTk0MTMxLDIwOTA0MTU2MDMsMjEzMDAwMjIwNywyMDk5ODk1NzE0LDE1ODMzNjg0OTgsMTY3NjY2OTIsMjEzNTM5MDc5MCwyMDU5NzI1MjQ2LDIxNzMyOTU5ODUsMjEyNTMyMDE1OSwyMDU1NTkwNDQ5LDI2NTM3NTI4LDIwOTA1MDQzNjYsMTk4OTg1OTA4NCwxNTEwNjM3OTk0LDIxMTMwNDMwMjgsMTk4NDYxOTI1MCwyMDk0OTk1NTQwLDE3NTc4MDI0NzUsMjE1NTM3MDMyMiwyMDIxODUzMzc0LDIxMTMxOTAxMDksMjE2OTUxMTI3NSwyMDMzNDYwNjM1LDIxNTk4MjEzNjMsMjUwMTM5OTM0MSwyMzk1NDc1MjQ0LDIxMDUyOTQ3NTEsMTQ4MjY3ODU2MiwyMDAwOTk0MDA3LDE5NjQxODA3NDksMTY3Mjk4MjY2NSwyMDU2NjI2NTgxLDIwNTkwMTkzNTgsMjEyNjgwMTc3OSwyMzY2ODI5OTk4LDIwMDgzNTgyMjMsMjEyMjU2OTUyNiwxOTg2MDAyNTM3LDIxMDc0OTg3MzAsMzY4NjQ1NzcyLDIxMTMyNTAzMjMsMjEzMDk5MzA1NywyMDI4MjAxNTQ1LDIxMDA2MTQ3MDMsMjAyMTQ3NjA4NywyMTI4NDI4NzU4LDIwOTcwMjI1MTUsMjU0Mjc3NzI4NCwxOTk1NDUyMDE4LDIxNTg3NjM5ODQsMjE4MTc5MTI3NSwyMTI3OTE4NjA1LDI3NzAyOTc4MTYsMjE0NzAxMjk2MiwyMTcwNjI2OTQ4LDE4MTQwMDcwOTcsMTk5MzQ0MzI4OCwyMTY0ODY5Nzk0LDU0OTU4NDMyLDIwNTE1NzU2MTMsMjUzODY2MTcxMCwxNDk0MjU4MDgyLDIxMjA5MDA5NDcsMjA5NjE4MzcwNCwxMTY5Mzg4MDMsMjE2ODEwMjI1NSwyMTY1NjE5OTU1LDI2NjU3NTYwODMsMjA5NTg0MTUwOSwyMTE2Nzc0NTk2LDIxNTk5NDEwOTEsMjE1NzUwMjY2OCwyMDExMTY0ODc4LDIxNDk4MjU0MjEsMjAzODc5NTM1NywxOTg5NDM1OTkyLDIxNDk2Njc2MTAsMjEyNjM2MjMxNCwxOTk5OTc0NzQ5LDIxNTc3Nzc3MzEsMTk4MTc2OTEwNiwxOTgyOTY0NTc1LDIwMzQ0NTk1NDAsMjExOTE4MTgwMCwyMDIzNDY3ODE2LDE5OTU5OTk2NzksMjE0ODEzMTEyMiwyMDUwNTczNzk2LDE5NzUzMjU5MzYsMjEwNjgwMDk3NCwyMTM3MTE3NjM3LDE1MzE3NDI3MDIsMjA5ODY0NDc4NywyMTE5MDI0NjA2LDIwNzEzNzY4NTUsMjkyNDI0MzQ0LDI5NjIyNTg4NSwxOTk2NDQzODg0XSwiQUEiOlt7IkF1TiI6ImNoYXJpdGggcGVyZXJhIn0seyJBdU4iOiJhcmthZHkgYiB6YXNsYXZza3kifSx7IkF1TiI6InBldGVyIGNocmlzdGVuIn0seyJBdU4iOiJkaW1pdHJpb3MgZ2Vvcmdha29wb3Vsb3MifV0sIkYiOlt7IkZOIjoiY29udGV4dCBhd2FyZSBzZXJ2aWNlcyJ9LHsiRk4iOiJjb250ZXh0IGF3YXJlbmVzcyJ9LHsiRk4iOiJpbnRlcm5ldCBvZiB0aGluZ3MifSx7IkZOIjoibWFya2V0IHJlc2VhcmNoIn0seyJGTiI6Im1pZGRsZXdhcmUifSx7IkZOIjoidWJpcXVpdG91cyBjb21wdXRpbmcifSx7IkZOIjoid2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmsifSx7IkZOIjoibWFuYWdlbWVudCBzY2llbmNlIn0seyJGTiI6InJlYWwgdGltZSBjb21wdXRpbmcifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiQ29udGV4dCBBd2FyZSBDb21wdXRpbmcgZm9yIFRoZSBJbnRlcm5ldCBvZiBUaGluZ3M6IEEgU3VydmV5XCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MjQ0LFwiSW52ZXJ0ZWRJbmRleFwiOntcIkFzXCI6WzBdLFwid2VcIjpbMSw2OSwxMDYsMTMxLDE3OV0sXCJhcmVcIjpbMl0sXCJtb3ZpbmdcIjpbM10sXCJ0b3dhcmRzXCI6WzQsMjQxXSxcInRoZVwiOls1LDEwLDE2LDM1LDQ1LDQ5LDExNiwxMjEsMTI4LDE0OSwxNTgsMTY1LDE4MSwxODcsMjQyXSxcIkludGVybmV0XCI6WzZdLFwib2ZcIjpbNywxMiwzMSw0NCw1Nyw3OSwxMzYsMTQ0LDE1MSwxNjAsMjAyXSxcIlRoaW5nc1wiOls4XSxcIihJb1QpLFwiOls5XSxcIm51bWJlclwiOlsxMV0sXCJzZW5zb3JzXCI6WzEzLDUyXSxcImRlcGxveWVkXCI6WzE0XSxcImFyb3VuZFwiOlsxNV0sXCJ3b3JsZFwiOlsxN10sXCJpc1wiOlsxOCwyMjBdLFwiZ3Jvd2luZ1wiOlsxOV0sXCJhdFwiOlsyMCwxMjddLFwiYVwiOlsyMSwyOCw0MSwxNDIsMTk5XSxcInJhcGlkXCI6WzIyXSxcInBhY2UuXCI6WzIzXSxcIk1hcmtldFwiOlsyNF0sXCJyZXNlYXJjaFwiOlsyNSwxNTIsMjI5XSxcImhhc1wiOlsyNiwzOSw5NF0sXCJzaG93blwiOlsyN10sXCJzaWduaWZpY2FudFwiOlsyOSw0Ml0sXCJncm93dGhcIjpbMzAsNDZdLFwic2Vuc29yXCI6WzMyLDY3LDg0LDEwMV0sXCJkZXBsb3ltZW50c1wiOlszM10sXCJvdmVyXCI6WzM0LDE2NF0sXCJwYXN0XCI6WzM2LDE4OCwyMjhdLFwiZGVjYWRlXCI6WzM3LDE2N10sXCJhbmRcIjpbMzgsNzcsMTI0LDE1MywxODksMjA5LDIxNiwyMjYsMjM3XSxcInByZWRpY3RlZFwiOls0MF0sXCJpbmNyZW1lbnRcIjpbNDNdLFwicmF0ZVwiOls0N10sXCJpblwiOls0OCw2MCw4MSw4OSw5OSwxNTddLFwiZnV0dXJlLlwiOls1MF0sXCJUaGVzZVwiOls1MV0sXCJjb250aW51b3VzbHlcIjpbNTNdLFwiZ2VuZXJhdGVcIjpbNTRdLFwiZW5vcm1vdXNcIjpbNTVdLFwiYW1vdW50c1wiOls1Nl0sXCJkYXRhLlwiOls1OCwxMDJdLFwiSG93ZXZlcixcIjpbNTldLFwib3JkZXJcIjpbNjFdLFwidG9cIjpbNjIsNjUsNzEsODMsOTYsMTgzLDIxMywyMjMsMjMzXSxcImFkZFwiOls2M10sXCJ2YWx1ZVwiOls2NF0sXCJyYXdcIjpbNjZdLFwiZGF0YVwiOls2OCw4NV0sXCJuZWVkXCI6WzcwXSxcInVuZGVyc3RhbmRcIjpbNzJdLFwiaXQuXCI6WzczXSxcIkNvbGxlY3Rpb24sXCI6Wzc0XSxcIm1vZGVsbGluZyxcIjpbNzVdLFwicmVhc29uaW5nLFwiOls3Nl0sXCJkaXN0cmlidXRpb25cIjpbNzhdLFwiY29udGV4dFwiOls4MCwxMDgsMTM3LDIxNF0sXCJyZWxhdGlvblwiOls4Ml0sXCJwbGF5c1wiOls4Nl0sXCJjcml0aWNhbFwiOls4N10sXCJyb2xlXCI6Wzg4XSxcInRoaXNcIjpbOTAsMTA0XSxcImNoYWxsZW5nZS5cIjpbOTFdLFwiQ29udGV4dC1hd2FyZVwiOls5Ml0sXCJjb21wdXRpbmdcIjpbOTMsMTYyXSxcInByb3ZlblwiOls5NV0sXCJiZVwiOls5NywxODRdLFwic3VjY2Vzc2Z1bFwiOls5OF0sXCJ1bmRlcnN0YW5kaW5nXCI6WzEwMF0sXCJJblwiOlsxMDNdLFwicGFwZXIsXCI6WzEwNV0sXCJzdXJ2ZXlcIjpbMTA3LDE5N10sXCJhd2FyZW5lc3NcIjpbMTA5LDIxNV0sXCJmcm9tXCI6WzExMCwxODZdLFwiYW5cIjpbMTExLDEzM10sXCJJb1RcIjpbMTEyLDEyMl0sXCJwZXJzcGVjdGl2ZS5cIjpbMTEzXSxcIldlXCI6WzExNCwxNDBdLFwicHJlc2VudFwiOlsxMTVdLFwibmVjZXNzYXJ5XCI6WzExN10sXCJiYWNrZ3JvdW5kXCI6WzExOF0sXCJieVwiOlsxMTldLFwiaW50cm9kdWNpbmdcIjpbMTIwXSxcInBhcmFkaWdtXCI6WzEyM10sXCJjb250ZXh0LWF3YXJlXCI6WzEyNSwxNjFdLFwiZnVuZGFtZW50YWxzXCI6WzEyNl0sXCJiZWdpbm5pbmcuXCI6WzEyOV0sXCJUaGVuXCI6WzEzMF0sXCJwcm92aWRlXCI6WzEzMl0sXCJpbi1kZXB0aFwiOlsxMzRdLFwiYW5hbHlzaXNcIjpbMTM1XSxcImxpZmVcIjpbMTM4XSxcImN5Y2xlLlwiOlsxMzldLFwiZXZhbHVhdGVcIjpbMTQxXSxcInN1YnNldFwiOlsxNDNdLFwicHJvamVjdHNcIjpbMTQ1XSxcIig1MClcIjpbMTQ2XSxcIndoaWNoXCI6WzE0N10sXCJyZXByZXNlbnRcIjpbMTQ4XSxcIm1ham9yaXR5XCI6WzE1MF0sXCJjb21tZXJjaWFsXCI6WzE1NF0sXCJzb2x1dGlvbnNcIjpbMTU1LDIxMV0sXCJwcm9wb3NlZFwiOlsxNTZdLFwiZmllbGRcIjpbMTU5XSxcImNvbmR1Y3RlZFwiOlsxNjNdLFwibGFzdFwiOlsxNjZdLFwiKDIwMDEtMjAxMSlcIjpbMTY4XSxcImJhc2VkXCI6WzE2OSwxNzVdLFwib25cIjpbMTcwLDE3Nl0sXCJvdXJcIjpbMTcxLDE3N10sXCJvd25cIjpbMTcyXSxcInRheG9ub215LlwiOlsxNzNdLFwiRmluYWxseSxcIjpbMTc0XSxcImV2YWx1YXRpb24sXCI6WzE3OF0sXCJoaWdobGlnaHRcIjpbMTgwXSxcImxlc3NvbnNcIjpbMTgyXSxcImxlYXJudFwiOlsxODVdLFwic29tZVwiOlsxOTBdLFwicG9zc2libGVcIjpbMTkxXSxcImRpcmVjdGlvbnNcIjpbMTkyXSxcImZvclwiOlsxOTNdLFwiZnV0dXJlXCI6WzE5NF0sXCJyZXNlYXJjaC5cIjpbMTk1XSxcIlRoZVwiOlsxOTZdLFwiYWRkcmVzc2VzXCI6WzE5OF0sXCJicm9hZFwiOlsyMDBdLFwicmFuZ2VcIjpbMjAxXSxcInRlY2huaXF1ZXMsXCI6WzIwM10sXCJtZXRob2RzLFwiOlsyMDRdLFwibW9kZWxzLFwiOlsyMDVdLFwiZnVuY3Rpb25hbGl0aWVzLFwiOlsyMDZdLFwic3lzdGVtcyxcIjpbMjA3XSxcImFwcGxpY2F0aW9ucyxcIjpbMjA4XSxcIm1pZGRsZXdhcmVcIjpbMjEwXSxcInJlbGF0ZWRcIjpbMjEyXSxcIklvVC5cIjpbMjE3LDI0M10sXCJPdXJcIjpbMjE4XSxcImdvYWxcIjpbMjE5XSxcIm5vdFwiOlsyMjFdLFwib25seVwiOlsyMjJdLFwiYW5hbHlzZSxcIjpbMjI0XSxcImNvbXBhcmVcIjpbMjI1XSxcImNvbnNvbGlkYXRlXCI6WzIyN10sXCJ3b3JrXCI6WzIzMF0sXCJidXRcIjpbMjMxXSxcImFsc29cIjpbMjMyXSxcImFwcHJlY2lhdGVcIjpbMjM0XSxcInRoZWlyXCI6WzIzNSwyMzldLFwiZmluZGluZ3NcIjpbMjM2XSxcImRpc2N1c3NcIjpbMjM4XSxcImFwcGxpY2FiaWxpdHlcIjpbMjQwXX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL2FyeGl2Lm9yZy9wZGYvMTMwNS4wOTgyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC82NTEyODQ2L1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2FyeGl2Lm9yZy9hYnMvMTMwNS4wOTgyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9qb3VybmFscy9jb3JyL2NvcnIxMzA1Lmh0bWwjYWJzLTEzMDUtMDk4MlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3Jlc2VhcmNoYmFuay5ybWl0LmVkdS5hdS92aWV3L3JtaXQ6MjU5NjFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9vcGVucmVzZWFyY2gtcmVwb3NpdG9yeS5hbnUuZWR1LmF1L2hhbmRsZS8xODg1LzY5Mjg0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9keC5kb2kub3JnLzEwLjExMDkvU1VSVi4yMDEzLjA0MjMxMy4wMDE5N1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RpZ2l0YWxjb2xsZWN0aW9ucy5hbnUuZWR1LmF1L2hhbmRsZS8xODg1LzY5Mjg0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vMTI4Ljg0LjIxLjE5OS9hYnMvMTMwNS4wOTgydjFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kub3JnLzEwLjExMDkvU1VSVi4yMDEzLjA0MjMxMy4wMDE5N1wifV0sXCJWRk5cIjpcIklFRUUgQ29tbXVuaWNhdGlvbnMgU3VydmV5cyBhbmQgVHV0b3JpYWxzXCIsXCJWXCI6MTYsXCJJXCI6MSxcIkZQXCI6NDE0LFwiTFBcIjo0NTQsXCJET0lcIjpcIjEwLjExMDkvU1VSVi4yMDEzLjA0MjMxMy4wMDE5N1wiLFwiQ0NcIjp7XCIxNjc2NjY5MlwiOltcImNjb3JkaW5nIHRvIEZpZ3VyZSA3LiBJdCBhbGxvd3MgdGhlIGdlbmVyYXRpb24gb2YgaGlnaCBsZXZlbCBjb250ZXh0IGluZm9ybWF0aW9uIHVzaW5nIGxvdyBsZXZlbCBjb250ZXh0LiBSZWNlbnRseSwgcnVsZXMgaGF2ZSBiZWVuIGhlYXZpbHkgdXNlZCB3aGVuIGNvbWJpbmVkIHdpdGggb250b2xvZ2ljYWwgcmVhc29uaW5nIFsxNjBdLCBbMTYxXSwgWzE2Ml0uIE1pUkUgWzE2M10gaXMgYSBtaW5pbWFsIHJ1bGUgZW5naW5lIGZvciBjb250ZXh0LWF3YXJlIG1vYmlsZSBkZXZpY2VzLiBNb3N0IG9mIHRoZSB1c2VyIHByZWZlcmVuY2VzIGFyZSBlbmNvZGVkIHVzaW5nIHJ1bGVzLiBSdWxlcyBhcmUgYWxzbyB1c2VkIGluIGV2ZW50IGRldGVjdGlvbiBbMTY0XSwgWzE2NV0uIFJ1bGVzIGFyZSBleHBlY3RlZCB0b1wiLFwib24gYW5kIGJhc2ljIGluZm9ybWF0aW9uIHRoYXQgbmVlZHMgdG8gYmUgY2FwdHVyZWQgaW4gcmVsYXRpb24gdG8gY29udGV4dCBhcmUgY29udGV4dCB0eXBlLCBjb250ZXh0IHZhbHVlLCB0aW1lIHN0YW1wLCBzb3VyY2UsIGFuZCBjb27vrIFkZW5jZS4gQ29udGV4dC1hd2FyZSBnZW9ncmFwaGljYWwgaW5mb3JtYXRpb24gcmV0cmlldmFsIGFwcHJvYWNoIFsxNjJdIGhhcyBwcm9wb3NlZCBhIG1lY2hhbmlzbSB0byBtYXAgcmF3IHNlbnNvciBkYXRhIHRvIHNlbWFudGljIG9udG9sb2dpZXMgdXNpbmcgU1dSTC4gVGhpcyBpcyBjcml0aWNhbCBpbiBhbGwgdHlwZXMgb2Ygc3lzdGVtcy4gRXZlbiB0aG91Z2gsIHN0YXRpc3RpY2FsIHJlYXNvbmluZyBzeXN0ZW1zIGNhbiB1c2UgcmF3IHNlbnNvciBkYXRhIGRpcmVjdGxcIl0sXCI1NzA2NTI3NFwiOltcIi4gRVUgRlA3IHByb2plY3QgT3BlbklvVCAoMjAxMi0gMjAxNCkgWzYwXSkgYnkgY29tYmluaW5nIGVhY2ggb3RoZXLigJlzIHN0cmVuZ3Rocy4gVEFCTEUgSSBJT1QgTUlERExFV0FSRSBDT01QQVJJU09OIFsxNF0gTWlkZGxld2FyZSBETSBJIFBQIENBIFNQIEh5ZHJhIFs2MV0gWCBYIFggWCBYIElTTUIgWzYyXSBYIEFTUElSRSBbNjNdIFggVUJJV0FSRSBbNjRdIFggWCBYIFVCSVNPQVAgWzY1XSBYIFggWCBVQklST0FEIFs2Nl0gWCBYIFggWCBYIEdTTiBbNjddIFggU01FUFAgWzY4XSBYIFggWCBYIFNPQ1JBREVTIFs2OV0gWCBYIFggWCBTSVJFTkEgWzcwXSBYIFggWCBYIFdIRVJFWCBbNzFdIFggWCBYIExlZ2VuZDogRGV2aWNlIE1hbmFnZW1lbnQgKERNKSwgSW50ZXJvcGVyYXRpb24gKEkpLCBQbGF0Zm9ybSBcIl0sXCI1OTUwMDQ3NFwiOltcImQgY2FuIGJlIGRldmVsb3BlZCBhbmQgZXh0ZW5kIGluZGVwZW5kZW50bHkuIDMpIERl76yBbml0aW9uIG9mIENvbnRleHQgTW9kZWwgYW5kIENvbnRleHQgQXR0cmlidXRlOiBXZSBhZG9wdCB0aGUgZm9sbG93aW5nIGludGVycHJldGF0aW9ucyBvZiBjb250ZXh0IG1vZGVsIGFuZCBjb250ZXh0IGF0dHJpYnV0ZXMgcHJvdmlkZWQgYnkgSGVucmlja3NlbiBbODldIGJhc2VkIG9uIEFib3dkIGV0IGFsLiBbM10gaW4gb3VyIHJlc2VhcmNoIHdvcmsuIElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFgsIFhYWFggWFhYWCA4IOKAnEEgY29udGV4dCBtb2RlbCBpZGVudGnvrIFlcyBhIGNvbmNyZXRlIHN1YnNldCBvZiB0aGUgY29udGV4dCB0aGF0IGlzIHJlYWxpc3RpY2FsXCIsXCJlIGV4cGxvaXRlZCBpbiB0aGUgZXhlY3V0aW9uIG9mIHRoZSB0YXNrLiBUaGUgY29udGV4dCBtb2RlbCB0aGF0IGlzIGVtcGxveWVkIGJ5IGEgZ2l2ZW4gY29udGV4dC1hd2FyZSBhcHBsaWNhdGlvbiBpcyB1c3VhbGx5IGV4cGxpY2l0bHkgc3BlY2nvrIFlZCBieSB0aGUgYXBwbGljYXRpb24gZGV2ZWxvcGVyLCBidXQgbWF5IGV2b2x2ZSBvdmVyIHRpbWUgWzg5XS7igJ0g4oCcQSBjb250ZXh0IGF0dHJpYnV0ZSBpcyBhbiBlbGVtZW50IG9mIHRoZSBjb250ZXh0IG1vZGVsIGRlc2NyaWJpbmcgdGhlIGNvbnRleHQuIEEgY29udGV4dCBhdHRyaWJ1dGUgaGFzIGFuIGlkZW50ae+sgWVyLCBhIHR5cGUgYW5kIGEgdmFsdWUsIGFuZCBvcHRpb25hbGx5IGEgY29sbGVjdGlvbiBvZiBwcm9wZXJ0aWVzIGRlc2NyaWJpbmcgc3BlY2nvrIFcIixcIiBhcm91bmQgdGhlIHVzZXIuIDMpV2hhdCByZXNvdXJjZXMgYXJlIG5lYXJieTogVGhpcyBpbmNsdWRlcyBpbmZvcm1hdGlvbiBhYm91dCByZXNvdXJjZXMgYXZhaWxhYmxlIGluIHRoZSBhcmVhIHdoZXJlIHRoZSB1c2VyIGlzIGxvY2F0ZWQsIHN1Y2ggYXMgbWFjaGluZXJ5LCBzbWFydCBvYmplY3RzLCBhbmQgdXRpbGl0aWVzLiAgSGVucmlja3NlbiBbODldICgyMDAzKTogQ2F0ZWdvcmlzZWQgY29udGV4dCBpbnRvIGZvdXIgY2F0ZWdvcmllcyBiYXNlZCBvbiBhbiBvcGVyYXRpb25hbCBjYXRlZ29yaXNhdGlvbiB0ZWNobmlxdWUuIDEpU2Vuc2VkOiBTZW5zb3IgZGF0YSBkaXJlY3RseSBzZW5zZWQgZnJvbSB0aGUgc2Vuc29ycywgc3VjaCBhcyB0ZW1wZXJhdHVyZSBtZWFzdXJlZCBieSBhIHRlbXBlcmF0dXJcIixcImhlIGdyYXBoaWNhbCBtb2RlbGxpbmcgdGVjaG5pcXVlIGNvdWxkIGJlIHZhcmllZC4gRm9yIGV4YW1wbGUsIGl0IGNvdWxkIGJlIGEgU1FMIGRhdGFiYXNlLCBub1NRTCBkYXRhYmFzZSwgWE1MLCBldGMuIE1hbnkgb3RoZXIgZXh0ZW5zaW9ucyBoYXZlIGFsc28gYmVlbiBwcm9wb3NlZCBhbmQgaW1wbGVtZW50ZWQgdXNpbmcgdGhpcyB0ZWNobmlxdWUgWzg5XS4gRnVydGhlciwgYXMgd2UgYXJlIGZhbWlsaWFyIHdpdGggZGF0YWJhc2VzLCBncmFwaGljYWwgbW9kZWxsaW5nIGlzIGEgd2VsbCBrbm93biwgZWFzeSB0byBsZWFybiwgYW5kIGVhc3kgdG8gdXNlIElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFgsIFhYWFggWFhYWCAxNyBUQUJMRSBJWCBDT01QXCJdLFwiNzA0MDc2ODJcIjpbXCJjb21wYXJlZCB0aGUgbW9zdCBwb3B1bGFyIGNvbnRleHQgbW9kZWxsaW5nIHRlY2huaXF1ZXMgaW4gdGhlIO+sgWVsZC4gTWlkZGxld2FyZSBzb2x1dGlvbnMgZm9yIHNlbnNvciBuZXR3b3JrcyBhcmUgc3VydmV5ZWQgYnkgTW9sbGEgYW5kIEFoYW1lZCBbOF0gaW4gMjAwNi4gVHdvIHNlcGFyYXRlIHN1cnZleXMgd2VyZSBjb25kdWN0ZWQgYnkgS2phZXIgWzldIGFuZCBCYWxkYXVmIGV0IGFsLiBbMTBdIGluIDIwMDcgb24gY29udGV4dC1hd2FyZSBzeXN0ZW1zIGFuZCBtaWRkbGV3YXJlIHNvbHV0aW9ucyB1c2luZyBkaWZmZXJlbnQgdGF4b25vbWllcy4gQm90aCBzdXJ2ZXlzIGNvbXBhcmVkIGxpbWl0ZWQgbnVtYmVycywgYnV0IGRpZmZlcmVudCBwcm9qZWN0cyB3aXRoIHZlcnkgbGl0dGxlIG92ZXJsYXAuIGNcIl0sXCI3NjgyNjQ2NVwiOltcIiBvcmRlciB0byBjb21wbGVtZW50IHRoZWlyIHN0cmVuZ3RocyBhbmQgbWl0aWdhdGUgdGhlaXIgd2Vha25lc3Nlcy4gRC4gTGV2ZWxzIG9mIENvbnRleHQgQXdhcmVuZXNzIGFuZCBjaGFyYWN0ZXJpc3RpY3MgQ29udGV4dCBhd2FyZW5lc3MgY2FuIGJlIGlkZW50ae+sgWVkIGluIHRocmVlIGxldmVscyBiYXNlZCBvbiB0aGUgdXNlciBpbnRlcmFjdGlvbiBbMTA0XS4gIFBlcnNvbmFsaXNhdGlvbjogSXQgYWxsb3dzIHRoZSB1c2VycyB0byBzZXQgdGhlaXIgcHJlZmVyZW5jZXMsIGxpa2VzLCBhbmQgZXhwZWN0YXRpb24gdG8gdGhlIHN5c3RlbSBtYW51YWxseS4gRm9yIGV4YW1wbGUsIHVzZXJzIG1heSBzZXQgdGhlIHByZWZlcnJlZCB0ZW1wZXJhdHVyZSBpbiBhIHNtYXJ0IGhvbWUgZW52aXJvbm1lbnQgd2hlcmVcIl0sXCI5ODI4Nzk3OVwiOltcIkEgc3VydmV5IG9mIHRoZSBzZW1hbnRpYyBzcGVjaWZpY2F0aW9uIG9mIHNlbnNvcnMgaXMgcHJlc2VudGVkIGluIFsxNDNdLlwiLFwiUmVjZW50IGRldmVsb3BtZW50cyBzdWNoIGFzIFRyYW5zZHVjZXIgRWxlY3Ryb25pYyBEYXRhIFNoZWV0IChURURTKSBbMjIxXSwgT3BlbiBHZW9zcGF0aWFsIENvbnNvcnRpdW0gKE9HQykgU2Vuc29yIFdlYiBFbmFibGVtZW50IHJlbGF0ZWQgc3RhbmRhcmRzIHN1Y2ggYXMgU2Vuc29yIE1hcmt1cCBMYW5ndWFnZXMgKFNlbnNvck1MKSBbMTMzXSwgc2Vuc29yIG9udG9sb2dpZXMgWzE0M10sIGFuZCBpbW1hdHVyZSBidXQgcHJvbWlzaW5nIGVmZm9ydHMgc3VjaCBhcyBTZW5zb3IgRGV2aWNlIERlZmluaXRpb25zIFsyMjRdIHNob3cgZnV0dXJlIGRpcmVjdGlvbnMgdG8gY2Fycnkgb3V0IHRoZSByZXNlYXJjaCB3b3JrIGZ1cnRoZXIsIGluIG9yZGVyIHRvIHRhY2tsZSB0aGlzIGNoYWxsZW5nZS5cIixcIlJlY2VudCBkZXZlbG9wbWVudHMgaW4gc2VtYW50aWMgdGVjaG5vbG9naWVzIFsxMzVdLCBbMTQzXSxcIl0sXCIxMTY5Mzg4MDNcIjpbXCJCcm9hZGx5IHdlIGNhbiBkaXZpZGUgdGhlbSBpbnRvIHRocmVlIHBoYXNlcyBbMTQ4XS5cIl0sXCIzNjg2NDU3NzJcIjpbXCJlcnkgZGF5IG9iamVjdHMgdG8gdGhlIEludGVybmV0LiBBLiBFdm9sdXRpb24gb2YgSW50ZXJuZXQgdG8gbG9vayBhdCB0aGUgZXZvbHV0aW9uIG9mIHRoZSBJbnRlcm5ldC4gSW4gdGhlIGxhdGUgMTk2MHMsIGNvbW11bmljYXRpb24gYmV0d2VlbiB0d28gY29tcHV0ZXJzIHdhcyBtYWRlIHBvc3NpYmxlIHRocm91Z2ggYSBjb21wdXRlciBuZXR3b3JrIFsxN10uIEluIHRoZSBlYXJseSAxOTgwcyB0aGUgVENQL0lQIHN0YWNrIHdhcyBpbnRyb2R1Y2VkLiBUaGVuLCBjb21tZXJjaWFsIHVzZSBvZiB0aGUgSW50ZXJuZXQgc3RhcnRlZCBpbiB0aGUgbGF0ZSAxOTgwcy4gTGF0ZXIsIHRoZSBXb3JsZCBXaWRlIFdlYiAoV1dXKSBiZWNhbWUgYXZhaWxhYmxlIGluIDE5OTEgd2hpY2ggbWFkZSB0aGUgSW50ZXJuZXQgKFwiXSxcIjE0ODMxNDM5MDFcIjpbXCJhY3Rpdml0eSByZWNvZ25pdGlvbiBbMTUxXS5cIixcIk9udG9sb2dpY2FsIHJlYXNvbmluZyBpcyBoZWF2aWx5IHVzZWQgaW4gYSB3aWRlIHJhbmdlIG9mIGFwcGxpY2F0aW9ucywgc3VjaCBhcyBhY3Rpdml0eSByZWNvZ25pdGlvbiBbMTUxXSwgaHlicmlkIHJlYXNvbmluZyBbMTUxXSwgYW5kIGV2ZW50IGRldGVjdGlvbiBbMTY1XS5cIixcIkNPU0FSIFsxNTFdIDIwMDkgTSBPbiBTLE8gUSA1IOKAkyBBIEgg4oCTIFAg4oCTIOKAkyDigJMg4oCTIOKAk1wiXSxcIjE0ODg5NjUzOThcIjpbXCJGdXJ0aGVyLCBEZXkgY2xhaW1lZCB0aGF0IGRlZmluaXRpb25zIHByb3ZpZGVkIGJ5IEJyb3duIFs3M10sIEZyYW5rbGluIGFuZCBGbGFjaHNiYXJ0IFs3NF0sIFJvZGRlbiBldCBhbC5cIl0sXCIxNDk0MjU4MDgyXCI6W1wiaGUgZnVuY3Rpb25hbGl0aWVzIHJlcXVpcmVkIGJ5IElvVCBtaWRkbGV3YXJlIHNvbHV0aW9ucyBhcmUgZXhwbGFpbmVkIGluIGRldGFpbCBpbiBbNF0sIFsxOV0sIFsyMF0sIFsyMV0sIFsyOV0uIEluIGFkZGl0aW9uLCBjaGFsbGVuZ2VzIGluIGRldmVsb3BpbmcgbWlkZGxld2FyZSBzb2x1dGlvbnMgZm9yIHRoZSBJb1QgYXJlIGRpc2N1c3NlZCBpbiBbNTldLiBXZSBwcmVzZW50IHRoZSBzdW1tYXJ5IG9mIGEgc3VydmV5IGNvbmR1Y3RlZCBieSBCYW5keW9wYWRoeWF5IGV0IGFsLiBbMTRdLiBUaGV5IGhhdmUgc2VsZWN0ZWQgdGhlIGxlYWRpbmcgbWlkZGxld2FyZSBzb2x1dGlvbnMgYW5kIGFuYWx5c2UgdGhlbSBiYXNlZCBvbiB0aGVpciBmdW5jdGlvbmFsaXRpZXMsIGVhY2ggb25lIG9mZmVycywgZGV2aWNcIl0sXCIxNTEwNjM3OTk0XCI6W1wiQWhuIGFuZCBLaW0gWzg2XSBkZWZpbmUgY29udGV4dCAoYWxzbyBjYWxsZWQgY29tcG91bmQgZXZlbnRzKSBhcyBhIHNldCBvZiBpbnRlcnJlbGF0ZWQgZXZlbnRzIHdpdGggbG9naWNhbCBhbmQgdGltaW5nIHJlbGF0aW9ucyBhbW9uZyB0aGVtLlwiLFwiUFJPQ09OIFs4Nl0gMjAwNiBTIEsgUiBRIDIg4oCTIOKAkyBEIEwg4oCTIFAg4oCTIEEsRiDigJMg4oCTIOKAk1wiLFwic2F0aW9uIHRlY2huaXF1ZXMgYXMgcHJlc2VudGVkIGluIFBST0NPTiBbODZdLlwiXSxcIjE1MTA4MTc4NDFcIjpbXCJyZXF1aXJlZCBieSBhbiBpZGVhbCBJb1QgbWlkZGxld2FyZSBzb2x1dGlvbiBhcyBhIGtleSB0YXNrLiBUaGVyZSBoYXZlIGJlZW4gc2V2ZXJhbCBzdXJ2ZXlzIGNvbmR1Y3RlZCBpbiByZWxhdGlvbiB0byB0aGlzIO+sgWVsZC4gV2UgYnJpZe+sgnkgaW50cm9kdWNlIHRoZXNlIHN1cnZleXMgaW4gY2hyb25vbG9naWNhbCBvcmRlci4gQ2hlbiBhbmQgS290eiBbNl0gKDIwMDApIGhhdmUgc3VydmV5ZWQgY29udGV4dCBhd2FyZW5lc3MsIGZvY3VzaW5nIG9uIGFwcGxpY2F0aW9ucywgd2hhdCBjb250ZXh0IHRoZXkgdXNlLCBhbmQgaG93IGNvbnRleHR1YWwgaW5mb3JtYXRpb24gaXMgbGV2ZXJhZ2VkLiBJbiAyMDA0LCBTdHJhbmcgYW5kIExpbm5ob2ZmLVBvcGllbiBbN10gY29tcGFyZWQgdGhlIG1vc3QgcG9wdWxhclwiLFwibGlkIChpLmUuIGluZmVycmVkIHNvbWV0aGluZyBlbHNlKSBhbmQgZnVydGhlciBpbmZvcm1hdGlvbiBpcyBub3QgYXZhaWxhYmxlIChlLmcuIHNlbnNvcnMgZGV0ZWN0cyB0aGF0IGFuaW1hbCBtb3ZlcyBhd2F5IGZyb20gdGhlIGNyb3BzKS4gVGhlIG1vc3QgcG9wdWxhciBjb250ZXh0IG1vZGVsbGluZyB0ZWNobmlxdWVzIGFyZSBzdXJ2ZXllZCBpbiBbNl0sIFs3XS4gVGhlc2Ugc3VydmV5cyBkaXNjdXNzIGEgbnVtYmVyIG9mIHN5c3RlbXMgdGhhdCBoYXZlIGJlZW4gZGV2ZWxvcGVkIGJhc2VkIG9uIHRoZSBmb2xsb3dpbmcgdGVjaG5pcXVlcy4gRWFjaCBvZiB0aGUgZm9sbG93aW5nIHRlY2huaXF1ZXMgaGFzIGl0cyBvd24gc3RyZW5ndGhzIGFuZCB3ZWFrbmVzc2VzLiBXZSBkaXNjdXNzIGNvbnRleHQgbVwiXSxcIjE1MTEzNDYwODdcIjpbXCJBcyBhIHJlc3VsdCwgdG9kYXkgd2UgaGF2ZSBhIGxhcmdlIG51bWJlciBvZiBzZW5zb3JzIGFscmVhZHkgZGVwbG95ZWQgYW5kIGl0IGlzIHByZWRpY3RlZCB0aGF0IHRoZSBudW1iZXJzIHdpbGwgZ3JvdyByYXBpZGx5IG92ZXIgdGhlIG5leHQgZGVjYWRlIFs0XS4gVWx0aW1hdGVseSwgdGhlc2Ugc2Vuc29ycyB3aWxsIGdlbmVyYXRlIGJpZyBkYXRhIFs1XS4gVGhlIGRhdGEgd2UgY29sbGVjdCBtYXkgbm90IGhhdmUgYW55IHZhbHVlIHVubGVzcyB3ZSBhbmFseXNlLCBpbnRlcnByZXQsIGFuZCB1bmRlcnN0YW5kIGl0LiBDb250ZXh0LWF3YXJlIGNvbXB1dGluZyBoYXMgcGxheWVkIGFuIGltcG9ydGFudCByb2xlIGluIHRhY2tsaW5nIHRoaXMgY2hhbGxlbmdlIGluIHByZXZpb3VzIHBhcmFkaWdtcywgc3VjXCIsXCJlIGl0cyB2aXNpb24gYSByZWFsaXR5LCB3aGVyZSBpdCB3b3VsZCBmb2xsb3cgYSBjb21tdW5pdHkgb3IgY3Jvd2QgYmFzZWQgYXBwcm9hY2guIFRoZXJlZm9yZSwgc2hhcmluZyB3b3VsZCBiZSBlc3NlbnRpYWwsIHdoZXJlIGFuIGV2ZXJ5dGhpbmctYXMtYS1zZXJ2aWNlIG1vZGVsIHdvdWxkIHN1aXQgbW9zdGx5IHNlbnNpbmctYXMtYS1zZXJ2aWNlIFs1XS4gSS4gTWlkZGxld2FyZSBTdXBwb3J0IGZvciBJb1QgQXMgd2UgbWVudGlvbmVkIGF0IHRoZSBiZWdpbm5pbmcsIHRoZSBJb1QgbmVlZHMgdG8gYmUgc3VwcG9ydGVkIGJ5IG1pZGRsZXdhcmUgc29sdXRpb25zLiDigJxNaWRkbGV3YXJlIGlzIGEgc29mdHdhcmUgbGF5ZXIgdGhhdCBzdGFuZHMgYmV0d2VlbiB0aGUgbmV0d29ya2VkIG9wZXJhdGluZyBzeXNcIixcImVuZXNz4oCZIFsxMjNdLiBDb2xsZWN0aW5nIGxvdy1sZXZlbCBzZW5zb3IgZGF0YSBpcyBiZWNvbWluZyBzaWduae+sgWNhbnRseSBlYXNpZXIgYW5kIGNoZWFwZXIgdGhhbiBldmVyIGR1ZSB0byBhZHZhbmNlcyBpbiBzZW5zaW5nIHRlY2hub2xvZ3kuIEFzIGEgcmVzdWx0LCBlbm9ybW91cyBhbW91bnRzIG9mIHNlbnNvciBkYXRhIChlLmcuIGJpZyBkYXRhIFs1XSkgaXMgYXZhaWxhYmxlLiBJbiBvcmRlciB0byB1bmRlcnN0YW5kIGJpZyBkYXRhLCBhIHZhcmlldHkgb2YgZGlmZmVyZW50IHJlYXNvbmluZyB0ZWNobmlxdWVzIG5lZWQgdG8gZW1wbG95ZWQgYXMgd2UgZGlzY3Vzc2VkIGluIFNlY3Rpb24gSVYtQy4gMTgpIER5bmFtaWMgQ29tcG9zaXRpb246IEFzIGV4cGxhaW5lZCBpbiBTb2xhciBbMTg0XSwgSW9UXCIsXCJhdmFpbGFibGUgYXR0cmlidXRlcyBoYXZlIHRvIGJlIHVzZWQgdG8gY29uZHVjdCB0aGUgbWF0Y2hpbmcgWzIyMl0uIENvbnRleHQgaW5mb3JtYXRpb24gcGxheXMgYSBjcml0aWNhbCBpbiBkYXRhIG1hdGNoaW5nIHdoZXJlIHNlbnNvcnMgY2FuIGJlIGNvbnNpZGVyZWQgYXMgZW50aXRpZXMgaW4gdGhlIHNlbnNpbmcgYXMgYSBzZXJ2aWNlIG1vZGVsIFs1XS4gVklJLiBDSEFMTEVOR0VTIEFORCBGVVRVUkUgUkVTRUFSQ0ggRElSRUNUSU9OUyBBcyB3ZSBtZW50aW9uZWQgZWFybGllciwgb25lIG9mIG91ciBnb2FsIGluIHRoaXMgc3VydmV5IGlzIHRvIHVuZGVyc3RhbmQgaG93IGNvbnRleHQtYXdhcmUgY29tcHV0aW5nIGNhbiBiZSBhcHBsaWVkIElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUXCJdLFwiMTUzMTc0MjcwMlwiOltcIiAhIGFjdCAhIC4uLiA2KSBDaGFudHphcmEgYW5kIEFuYWdub3N0b3UgTGlmZWN5Y2xlIFsxMTVdOiBzZW5zZSAoY29udGV4dCBwcm92aWRlcikgISBwcm9jZXNzIChjb250ZXh0IGJyb2tlcikgISBkaXNzZW1pbmF0ZSAoY29udGV4dCBicm9rZXIpICEgdXNlIChzZXJ2aWNlIHByb3ZpZGVyKSAhIC4uLiA3KSBGZXJzY2hhIGV0IGFsLiBMaWZlY3ljbGUgWzExNl06IHNlbnNpbmcgISB0cmFuc2Zvcm1hdGlvbiAhIHJlcHJlc2VudGF0aW9uICEgcnVsZSBiYXNlICEgYWN0dWF0aW9uICEgLi4uIDgpIE1PU1FVSVRPIFsxMTddOiBjb250ZXh0IGluZm9ybWF0aW9uIGRpc2NvdmVyeSAhIGNvbnRleHQgaW5mb3JtYXRpb24gYWNxdWlzaXRpb24gISBjb250ZXh0IGluZm9ybWF0aW9uIHJlYXNvbmluZyAhIC4uLiBJRUVFIFwiXSxcIjE1MzM0NTQ4NTVcIjpbXCJ0byBoaWdobGlnaHQgdGhlIGFwcGxpY2FiaWxpdHkgb2Ygc2VtYW50aWNzIGluIGEgY29udGV4dC1hd2FyZSBkb21haW4gZnJvbSBhbiBJb1QgcGVyc3BlY3RpdmUuIENvbXByZWhlbnNpdmUgYW5kIGV4dGVuc2l2ZSBhbW91bnRzIG9mIGluZm9ybWF0aW9uIG9uIHNlbWFudGljIHRlY2hub2xvZ3kgYXJlIGF2YWlsYWJsZSBpbiBbMTMwXSwgWzEzMV0sIFsxMzJdLiBLaG9vIFsxMzRdIGhhcyBleHBsYWluZWQgdGhlIGV2b2x1dGlvbiBvZiB0aGUgd2ViIGluIGZvdXIgc3RhZ2VzOiBiYXNpYyBJbnRlcm5ldCBhcyBXZWIgMS4wLCBzb2NpYWwgbWVkaWEgYW5kIHVzZXIgZ2VuZXJhdGVkIGNvbnRlbnQgYXMgd2ViIDIuMCwgc2VtYW50aWMgd2ViIGFzIHdlYiAzLjAgYW5kIElvVCBhcyB3ZWIgNC4wLiBJbiB0aGlzIGlcIixcInMgYmFzZWQgb24gbW9kZWxsaW5nIHRlY2huaXF1ZSwgcmVhc29uaW5nIHRlY2huaXF1ZXMsIGFuZCBhcmNoaXRlY3R1cmVzIHVzZWQgaW4gdGhlaXIgc3lzdGVtcy4gQ29tcHJlaGVuc2l2ZSBhbmQgZXh0ZW5zaXZlIGFtb3VudHMgb2YgaW5mb3JtYXRpb24gb24gc2VtYW50aWMgdGVjaG5vbG9neSBhcmUgYXZhaWxhYmxlIGluIFsxMzBdLCBbMTMxXSwgWzEzMl0uIEluIGFkZGl0aW9uLCBhIHNlbWFudGljIGJhc2VkIGFyY2hpdGVjdHVyZSBmb3Igc2Vuc29yIGRhdGEgZnVzaW9uIGlzIHByZXNlbnRlZCBpbiBbMTc0XSwgWzE3NV0sIFsxNzZdLiA2KSBQcm9iYWJpbGlzdGljIGxvZ2ljOiBUaGlzIGNhdGVnb3J5IG9mIHRlY2huaXF1ZXMgYWxsb3dzIGRlY2lzaW9ucyB0byBiZSBtYWRlIGJhc2VkIG9uIHByb2JhYlwiXSxcIjE1NDIyMzIwOTZcIjpbXCJJbiB0aGUgZWFybHkgZGF5cywgc2Vuc29yIG5ldHdvcmtzIHdlcmUgbGFyZ2VseSB1c2VkIGZvciBtb25pdG9yaW5nIHB1cnBvc2VzIGFuZCBub3QgZm9yIGFjdHVhdGlvbiBbNDldLlwiLFwiRXhhbXBsZSAxOiBNb0NBIFs0OV0gaGFzIHVzZWQgYW4gb2JqZWN0IG9yaWVudGVkIGFwLVwiXSxcIjE1NDM4Mzc0MzNcIjpbXCJBIGZ1cnRoZXIgZWlnaHQgcHJpbmNpcGxlcyBmb3IgZGV2ZWxvcGluZyBvbnRvbG9naWVzIGFyZSBpZGVudGlmaWVkIGJ5IEtvcnBpcGFhIGFuZCBNYW50eWphcnZpIFsxNDBdIGFzOiBkb21haW4sIHNpbXBsaWNpdHksIHByYWN0aWNhbCBhY2Nlc3MsIGZsZXhpYmlsaXR5IGFuZCBleHBhbmRhYmlsaXR5LCBmYWNpbGl0YXRlIGluZmVyZW5jZSwgZ2VuZXJpY2l0eSwgZWZmaWNpZW5jeSwgYW5kIGV4cHJlc3NpdmVuZXNzLlwiXSxcIjE1NDQ2MjM1MTZcIjpbXCJUaGVyZWZvcmUsIHNlbnNvcnMgY2FuIGJlIGRpdmlkZWQgaW50byB0aHJlZSBjYXRlZ29yaWVzIFsxMjBdOiBwaHlzaWNhbCwgdmlydHVhbCwgYW5kIGxvZ2ljYWwuXCJdLFwiMTU2MzgzMDI2MVwiOltcIls4N10uXCJdLFwiMTU3NDIyMjYzOFwiOltcImljYWwgb3JkZXIuIENoZW4gYW5kIEtvdHogWzZdICgyMDAwKSBoYXZlIHN1cnZleWVkIGNvbnRleHQgYXdhcmVuZXNzLCBmb2N1c2luZyBvbiBhcHBsaWNhdGlvbnMsIHdoYXQgY29udGV4dCB0aGV5IHVzZSwgYW5kIGhvdyBjb250ZXh0dWFsIGluZm9ybWF0aW9uIGlzIGxldmVyYWdlZC4gSW4gMjAwNCwgU3RyYW5nIGFuZCBMaW5uaG9mZi1Qb3BpZW4gWzddIGNvbXBhcmVkIHRoZSBtb3N0IHBvcHVsYXIgY29udGV4dCBtb2RlbGxpbmcgdGVjaG5pcXVlcyBpbiB0aGUg76yBZWxkLiBNaWRkbGV3YXJlIHNvbHV0aW9ucyBmb3Igc2Vuc29yIG5ldHdvcmtzIGFyZSBzdXJ2ZXllZCBieSBNb2xsYSBhbmQgQWhhbWVkIFs4XSBpbiAyMDA2LiBUd28gc2VwYXJhdGUgc3VydmV5cyB3ZXJlIGNvbmR1Y3RlZCBieSBLamFlclwiLFwiaS5lLiBpbmZlcnJlZCBzb21ldGhpbmcgZWxzZSkgYW5kIGZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgbm90IGF2YWlsYWJsZSAoZS5nLiBzZW5zb3JzIGRldGVjdHMgdGhhdCBhbmltYWwgbW92ZXMgYXdheSBmcm9tIHRoZSBjcm9wcykuIFRoZSBtb3N0IHBvcHVsYXIgY29udGV4dCBtb2RlbGxpbmcgdGVjaG5pcXVlcyBhcmUgc3VydmV5ZWQgaW4gWzZdLCBbN10uIFRoZXNlIHN1cnZleXMgZGlzY3VzcyBhIG51bWJlciBvZiBzeXN0ZW1zIHRoYXQgaGF2ZSBiZWVuIGRldmVsb3BlZCBiYXNlZCBvbiB0aGUgZm9sbG93aW5nIHRlY2huaXF1ZXMuIEVhY2ggb2YgdGhlIGZvbGxvd2luZyB0ZWNobmlxdWVzIGhhcyBpdHMgb3duIHN0cmVuZ3RocyBhbmQgd2Vha25lc3Nlcy4gV2UgZGlzY3VzcyBjb250ZXh0IG1vZGVsbFwiLFwiYW50IGNoYW5nZXMgdGhhdCBzZW1hbnRpYyB0ZWNobm9sb2dpZXMgY2FuIGJyaW5nIHRvIHRoZSB3ZWIgaW4gZ2VuZXJhbC4gT250b2xvZ3kgaXMgdGhlIG1haW4gY29tcG9uZW50IGluIHNlbWFudGljIHRlY2hub2xvZ3kgdGhhdCBhbGxvd3MgaXQgdG8gbW9kZWwgZGF0YS4gQmFzZWQgb24gdGhlIHByZXZpb3VzIGFwcHJvYWNoZXMgYW5kIHN1cnZleSBbN10sIG9uZSBvZiB0aGUgbW9zdCBhcHByb3ByaWF0ZSBmb3JtYXRzIHRvIG1hbmFnZSBjb250ZXh0IGlzIG9udG9sb2dpZXMuIE9udG9sb2dpZXMgb2ZmZXIgYW4gZXhwcmVzc2l2ZSBsYW5ndWFnZSB0byByZXByZXNlbnQgdGhlIHJlbGF0aW9uc2hpcHMgYW5kIGNvbnRleHQuIElUIGFsc28gcHJvdmlkZXMgY29tcHJlaGVuc2l2ZSByZWFzb25pbmcgbWVjaFwiXSxcIjE1ODMzNjg0OThcIjpbXCJPbnRvbG9naWVzIGNvbnNpc3RzIG9mIHNldmVyYWwgY29tbW9uIGtleSBjb21wb25lbnRzIFsxNDFdLCBbMTQyXSBzdWNoIGFzIGluZGl2aWR1YWxzLCBjbGFzc2VzLCBhdHRyaWJ1dGVzLCByZWxhdGlvbnMsIGZ1bmN0aW9uIHRlcm1zLCByZXN0cmljdGlvbnMsIHJ1bGVzLCBheGlvbXMsIGFuZCBldmVudHMuXCIsXCJIb3dldmVyLCBzb21lIG9mIHRoZSBtYWluIHJlYXNvbnMgdG8gY2hvb3NlIE9XTCBhcyB0aGUgY29udGV4dCBtb2RlbGxpbmcgbWVjaGFuaXNtIGFyZSBbMTE5XSwgWzE0Ml0uXCIsXCJTQ0sgWzE0Ml0gMjAwNSBNIE0sT24gUixPIFEgMSBBLEQgSCDigJMgQSBWIOKAkyDigJMg4oCTXCJdLFwiMTU5MTA0NjUzMVwiOltcIiBtYWNoaW5lcy4gUFJJQU1PUyBbMTY2XSBoYXMgdXNlZCBzZW1hbnRpYyBydWxlcyB0byBhbm5vdGF0ZSBzZW5zb3IgZGF0YSB3aXRoIGNvbnRleHQgaW5mb3JtYXRpb24uIEFwcGxpY2F0aW9uIG9mIHJ1bGUgYmFzZWQgcmVhc29uaW5nIGlzIGNsZWFybHkgZXhwbGFpbmVkIGluIHJlbGF0aW9uIHRvIGNvbnRleHQtYXdhcmUgSS9PIGNvbnRyb2wgaW4gWzE2N10uIDQpIEZ1enp5IGxvZ2ljOiBUaGlzIGFsbG93cyBhcHByb3hpbWF0ZSByZWFzb25pbmcgaW5zdGVhZCBvZiDvrIF4ZWQgYW5kIGNyaXNwIHJlYXNvbmluZy4gRnV6enkgbG9naWMgaXMgc2ltaWxhciB0byBwcm9iYWJpbGlzdGljIHJlYXNvbmluZyBidXQgY29u76yBZGVuY2UgdmFsdWVzIHJlcHJlc2VudCBkZWdyZWVzIG9mIG1lbWJlcnNoaXAgcmF0aGVyIHRcIl0sXCIxNTkzNDUzMzA0XCI6W1wiT04gWzE0XSBNaWRkbGV3YXJlIERNIEkgUFAgQ0EgU1AgSHlkcmEgWzYxXSBYIFggWCBYIFggSVNNQiBbNjJdIFggQVNQSVJFIFs2M10gWCBVQklXQVJFIFs2NF0gWCBYIFggVUJJU09BUCBbNjVdIFggWCBYIFVCSVJPQUQgWzY2XSBYIFggWCBYIFggR1NOIFs2N10gWCBTTUVQUCBbNjhdIFggWCBYIFggU09DUkFERVMgWzY5XSBYIFggWCBYIFNJUkVOQSBbNzBdIFggWCBYIFggV0hFUkVYIFs3MV0gWCBYIFggTGVnZW5kOiBEZXZpY2UgTWFuYWdlbWVudCAoRE0pLCBJbnRlcm9wZXJhdGlvbiAoSSksIFBsYXRmb3JtIFBvcnRhYmlsaXR5IChQUCksIENvbnRleHQgQXdhcmVuZXNzIChDQSksIFNlY3VyaXR5ICZhbXA7IFByaXZhY3kgKFNQKSBKLiBSZXNlYXJjaCBHYXBzIEFjY29yZGluZyB0byBUYWJsZSBJLCBpdCBcIl0sXCIxNjU0ODA1OTIxXCI6W1wiVGhlIG1vc3QgY29tbW9uIHJlYXNvbnMgYXJlIHRvIFsxMzVdLCBbMTM2XSBzaGFyZSBhIGNvbW1vbiB1bmRlcnN0YW5kaW5nIG9mXCIsXCJkZWZpbml0aW9uIGhhcyBiZWVuIHByZXNlbnRlZCBieSBOb3kgYW5kIE1jR3Vpbm5lc3MgWzEzNl0uXCJdLFwiMTY2MjIyNzM1MlwiOltcImlmZmVyZW50IGluc3RhbmNlcyBvZiB0aGUgc29sdXRpb24uICg2KSBDbGllbnQtc2VydmVyIGFyY2hpdGVjdHVyZSBzZXBhcmF0ZXMgc2Vuc2luZyBhbmQgcHJvY2Vzc2luZyBmcm9tIGVhY2ggb3RoZXIsIHN1Y2ggYXMgaW4gQ2FTUCBbMTg1XS4gOSkgSGlzdG9yeSBhbmQgU3RvcmFnZTogU3RvcmluZyBjb250ZXh0IGhpc3RvcnkgaXMgY3JpdGljYWwgWzE4Nl0gaW4gYm90aCB0cmFkaXRpb25hbCBjb250ZXh0LWF3YXJlIGNvbXB1dGluZyBhbmQgdGhlIElvVC4gSGlzdG9yaWMgZGF0YSBhbGxvd3Mgc2Vuc29yIGRhdGEgdG8gYmUgYmV0dGVyIHVuZGVyc3Rvb2QuIEV2ZW4gdGhvdWdoIG1vc3Qgb2YgdGhlIElvVCBzb2x1dGlvbnMgYW5kIGFwcGxpY2F0aW9ucyBhcmUgZm9jdXNlZCBvbiByZWFsIHRpbWUgaW50ZVwiXSxcIjE2NzI5ODI2NjVcIjpbXCJBU1BJUkUgWzYzXSDDlyDDlyDDl1wiXSxcIjE3MjQyMjA4MDZcIjpbXCJDaGFsbGVuZ2VzIG9mIHNlbWFudGljIHNlbnNvciB3ZWJzIGFyZSBpZGVudGlmaWVkIGFuZCBkaXNjdXNzZWQgaW4gWzE4N10uXCJdLFwiMTc1MTMyMzA1MlwiOltcInJhbGxlbCBhbmQgc2ltdWx0YW5lb3VzIGV2ZW50cywgZHVlIHRvIHRoZSBtYXNzaXZlIG51bWJlciBvZiBpbnRlcmFjdGlvbnMuIFJlYWwtdGltZSBkYXRhIHByb2Nlc3NpbmcgaXMgZXNzZW50aWFsLiAgU3BhY2UgY29uc2lkZXJhdGlvbnM6IFRoZSBwcmVjaXNlIGdlb2dyYXBoaWMgbG9jYXRpb24gb2YgYSBvYmplY3Qgd2lsbCBiZSBjcml0aWNhbCBbNTRdIGFzIGxvY2F0aW9uIHBsYXlzIGEgc2lnbmnvrIFjYW50IHJvbGUgaW4gY29udGV4dC1hd2FyZSBjb21wdXRpbmcuIFdoZW4gdGhlIG51bWJlciBvZiBvYmplY3RzIGdldCBsYXJnZXIsIHRyYWNraW5nIGJlY29tZXMgYSBrZXkgcmVxdWlyZW1lbnQuIEludGVyYWN0aW9ucyBhcmUgaGlnaGx5IGRlcGVuZGVudCBvbiB0aGVpciBsb2NhdGlvbnMsIHRoZWlyIFwiXSxcIjE3OTA0NDUwODNcIjpbXCJkIGJ5IFNjaGlsaXQgYW5kIFRoZWltZXIgWzJdIHdhcyBiYXNlZCBvbiBleGFtcGxlcyBhbmQgY2Fubm90IGJlIHVzZWQgdG8gaWRlbnRpZnkgbmV3IGNvbnRleHQuIEZ1cnRoZXIsIERleSBjbGFpbWVkIHRoYXQgZGXvrIFuaXRpb25zIHByb3ZpZGVkIGJ5IEJyb3duIFs3M10sIEZyYW5rbGluIGFuZCBGbGFjaHNiYXJ0IFs3NF0sIFJvZGRlbiBldCBhbC4gWzc1XSwgSHVsbCBldCBhbC4gWzc2XSwgYW5kIFdhcmQgZXQgYWwuIFs3N10gdXNlZCBzeW5vbnltcyB0byByZWZlciB0byBjb250ZXh0LCBzdWNoIGFzIGVudmlyb25tZW50IGFuZCBzaXR1YXRpb24uIFRoZXJlZm9yZSwgdGhlc2UgZGXvrIFuaXRpb25zIGFsc28gY2Fubm90IGJlIHVzZWQgdG8gaWRlbnRpZnkgbmV3IGNvbnRleHQuIEFib3dkIGFuZCBNeW5hdHRcIl0sXCIxODE0MDA3MDk3XCI6W1wiR1NOIFs2N10gw5cgw5dcIixcIlNlbnNvciBkYXRhIHN0cmVhbSBwcm9jZXNzaW5nIG1pZGRsZXdhcmUgc29sdXRpb25zIHN1Y2ggYXMgR1NOIFs2N11cIl0sXCIxODgyMDg4Mzk1XCI6W1wiIHh4eHg7IHJldmlzZWQgeHh4IHh4LCB4eHh4LiBkaXNjdXNzIGJyaWXvrIJ5IGluIFNlY3Rpb24gSUlJLiBUaGUgZGXvrIFuaXRpb25zIGZvciDigJhjb250ZXh04oCZIGFuZCDigJhjb250ZXh0LWF3YXJlbmVzc+KAmSB0aGF0IGFyZSB3aWRlbHkgYWNjZXB0ZWQgYnkgdGhlIHJlc2VhcmNoIGNvbW11bml0eSB0b2RheSB3ZXJlIHByb3Bvc2VkIGJ5IEFib3dkIGV0IGFsLiBbM10gaW4gMTk5OS4gRHVyaW5nIHRoZSBsYXN0IHR3byBkZWNhZGVzLCByZXNlYXJjaGVycyBhbmQgZW5naW5lZXJzIGhhdmUgZGV2ZWxvcGVkIGEgc2lnbmnvrIFjYW50IGFtb3VudCBvZiBwcm90b3R5cGVzLCBzeXN0ZW1zLCBhbmQgc29sdXRpb25zIHVzaW5nIGNvbnRleHQtYXdhcmUgY29tcHV0aW5nIHRlY2huaXF1ZXMuIEV2ZW4gdGhvdWdoIHRoZSBmb2N1XCIsXCJyb3BlcmFiaWxpdHksIHBsYXRmb3JtIHBvcnRhYmlsaXR5LCBjb250ZXh0LWF3YXJlbmVzcywgc2VjdXJpdHkgYW5kIHByaXZhY3ksIDFUaGUgdGVybSDigJhjb250ZXh04oCZIGltcGxpY2l0bHkgcHJvdmlkZSB0aGUgbWVhbmluZyBvZiDigJhpbmZvcm1hdGlvbuKAmSBhY2NvcmRpbmcgdG8gdGhlIHdpZGVseSBhY2NlcHRlZCBkZe+sgW5pdGlvbiBwcm92aWRlZCBieSBbM10uIFRoZXJlZm9yZSwgaXQgaXMgaW5hY2N1cmF0ZSB0byB1c2UgdGhlIHRlcm0g4oCYY29udGV4dCBpbmZvcm1hdGlvbuKAmSB3aGVyZSDigJhpbmZvcm1hdGlvbuKAmSBpcyBleHBsaWNpdGx5IG1lbnRpb25lZC4gSG93ZXZlciwgcmVzZWFyY2ggY29tbXVuaXR5IGFuZCBkb2N1bWVudHMgb24gdGhlIHdlYiBmcmVxdWVudGx5IHVzZSB0aGUgdGVybSDigJhjb250ZXh0IGlcIixcInNlIHRoZSBzaXR1YXRpb24gb2YgYW4gZW50aXR5LiBBbiBlbnRpdHkgaXMgYSBwZXJzb24sIHBsYWNlLCBvciBvYmplY3QgdGhhdCBpcyBjb25zaWRlcmVkIHJlbGV2YW50IHRvIHRoZSBpbnRlcmFjdGlvbiBiZXR3ZWVuIGEgdXNlciBhbmQgYW4gYXBwbGljYXRpb24sIGluY2x1ZGluZyB0aGUgdXNlciBhbmQgYXBwbGljYXRpb25zIHRoZW1zZWx2ZXMgWzNdLuKAnSBXZSBhY2NlcHQgdGhlIGRl76yBbml0aW9uIG9mIGNvbnRleHQgcHJvdmlkZWQgYnkgQWJvd2QgZXQgYWwuIFszXSB0byBiZSB1c2VkIGluIHRoaXMgcmVzZWFyY2ggd29yaywgYmVjYXVzZSB0aGlzIGRl76yBbml0aW9uIGNhbiBiZSB1c2VkIHRvIGlkZW50aWZ5IGNvbnRleHQgZnJvbSBkYXRhIGluIGdlbmVyYWwuIElmIHdlIGNvbnNpZGVyIGEgZGF0YSBcIixcImVudGllbnQsIHdhcyDvrIFyc3QgaW50cm9kdWNlZCBieSBTY2hpbGl0IGFuZCBUaGVpbWVyIFsyXSBpbiAxOTk0LiBMYXRlciwgaXQgd2FzIGRl76yBbmVkIGJ5IFJ5YW4gZXQgYWwuIFs4N10uIEluIGJvdGggY2FzZXMsIHRoZSBmb2N1cyB3YXMgb24gY29tcHV0ZXIgYXBwbGljYXRpb25zIGFuZCBzeXN0ZW1zLiBBcyBzdGF0ZWQgYnkgQWJvd2QgZXQgYWwuIFszXSwgdGhvc2UgZGXvrIFuaXRpb25zIGFyZSB0b28gc3BlY2nvrIFjIGFuZCBjYW5ub3QgYmUgdXNlZCB0byBpZGVudGlmeSB3aGV0aGVyIGEgZ2l2ZW4gc3lzdGVtIGlzIGEgY29udGV4dC1hd2FyZSBzeXN0ZW0gb3Igbm90LiBUaGVyZWZvcmUsIERleSBoYXMgZGXvrIFuZWQgdGhlIHRlcm0gY29udGV4dC1hd2FyZW5lc3MgYXMgZm9sbG93czog4oCcQSBzeXN0ZW0gaXNcIixcIm5kIGluZGVwZW5kZW50bHkuIDMpIERl76yBbml0aW9uIG9mIENvbnRleHQgTW9kZWwgYW5kIENvbnRleHQgQXR0cmlidXRlOiBXZSBhZG9wdCB0aGUgZm9sbG93aW5nIGludGVycHJldGF0aW9ucyBvZiBjb250ZXh0IG1vZGVsIGFuZCBjb250ZXh0IGF0dHJpYnV0ZXMgcHJvdmlkZWQgYnkgSGVucmlja3NlbiBbODldIGJhc2VkIG9uIEFib3dkIGV0IGFsLiBbM10gaW4gb3VyIHJlc2VhcmNoIHdvcmsuIElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFgsIFhYWFggWFhYWCA4IOKAnEEgY29udGV4dCBtb2RlbCBpZGVudGnvrIFlcyBhIGNvbmNyZXRlIHN1YnNldCBvZiB0aGUgY29udGV4dCB0aGF0IGlzIHJlYWxpc3RpY2FsbHkgYXR0YWluYWJsZSBmcm9tIHNlbnNvcnNcIl0sXCIxODg5Njg0NjY4XCI6W1wiU3BlY2lmaWNhbGx5LCBjbHVzdGVyaW5nIGlzIHVzZWQgaW4gbG93LWxldmVsIChzZW5zb3IgaGFyZHdhcmUgbGV2ZWwpIHNlbnNvciBuZXR3b3JrIG9wZXJhdGlvbnMgc3VjaCBhcyByb3V0aW5nIGFuZCBoaWdoIGxldmVsIHRhc2tzIHN1Y2ggYXMgaW5kb29yIGFuZCBvdXRkb29yIHBvc2l0aW9uaW5nIGFuZCBsb2NhdGlvbiBbMTU3XS5cIl0sXCIxOTY0MTgwNzQ5XCI6W1wiQ29uZmxpY3QgcmVzb2x1dGlvbiBpcyBjcml0aWNhbCBpbiB0aGUgY29udGV4dCBtYW5hZ2VtZW50IGRvbWFpbiBbMTg5XS5cIixcImRlZmluZWQgaW4gWzE4OV06XCJdLFwiMTk2NzkzMjg1M1wiOltcIjogVGhpcyBhbGxvd3MgYXBwcm94aW1hdGUgcmVhc29uaW5nIGluc3RlYWQgb2Yg76yBeGVkIGFuZCBjcmlzcCByZWFzb25pbmcuIEZ1enp5IGxvZ2ljIGlzIHNpbWlsYXIgdG8gcHJvYmFiaWxpc3RpYyByZWFzb25pbmcgYnV0IGNvbu+sgWRlbmNlIHZhbHVlcyByZXByZXNlbnQgZGVncmVlcyBvZiBtZW1iZXJzaGlwIHJhdGhlciB0aGFuIHByb2JhYmlsaXR5IFsxNjhdLiBJbiB0cmFkaXRpb25hbCBsb2dpYyB0aGVvcnksIGFjY2VwdGFibGUgdHJ1dGggdmFsdWVzIGFyZSAwIG9yIDEuIEluIGZ1enp5IGxvZ2ljIHBhcnRpYWwgdHJ1dGggdmFsdWVzIGFyZSBhY2NlcHRhYmxlLiBJdCBhbGxvd3MgcmVhbCB3b3JsZCBzY2VuYXJpb3MgdG8gYmUgcmVwcmVzZW50ZWQgbW9yZSBuYXR1cmFsbHk7IGFzIG1vc3QgcmVhbCB3b3JcIixcImVyZW50IHNvdXJjZXMuIEZ1cnRoZXIsIGl0IGNhbiBiZSB1c2VkIHRvIGlkZW50aWZ5IHJlc29sdXRpb25zIHRvIGNvbu+sgmljdHMgYW1vbmcgY29udGV4dC4gTW9zdCBvZnRlbiB0aGVzZSB0ZWNobmlxdWVzIGFyZSB1c2VkIHRvIHVuZGVyc3RhbmQgb2NjdXJyZW5jZSBvZiBldmVudHMuIFByb2JhYmlsaXN0aWMgbG9naWMgaGFzIGJlZW4gdXNlZCBpbiBbMTY4XSB0byBlbmNvZGUgYWNjZXNzIGNvbnRyb2wgcG9saWNpZXMuIERlbXBzdGVyLVNoYWZlciwgd2hpY2ggaXMgYmFzZWQgb24gcHJvYmFiaWxpc3RpYyBsb2dpYywgYWxsb3dzIGRpZmZlcmVudCBldmlkZW5jZSB0byBiZSBjb21iaW5lZCB0byBjYWxjdWxhdGUgdGhlIHByb2JhYmlsaXR5IG9mIGFuIGV2ZW50LiBEZW1wc3Rlci1TaGFmZXIgaXMgY29tbW9uXCIsXCJbMTg0XS4gKDMpIFNlcnZpY2UgYmFzZWQgYXJjaGl0ZWN0dXJlIHdoZXJlIHRoZSBlbnRpcmUgc29sdXRpb24gY29uc2lzdHMgb2Ygc2V2ZXJhbCBzZXJ2aWNlcyB3b3JraW5nIHRvZ2V0aGVyLiBIb3dldmVyLCBpbmRpdmlkdWFsIGFjY2VzcyB0byBlYWNoIHNlcnZpY2UgbWF5IG5vdCBiZSBwcm92aWRlZCBpbiBzb2x1dGlvbnMgc3VjaCBhcyBHYWlhIFsxNjhdLiAoNCkgTm9kZSBiYXNlZCBhcmNoaXRlY3R1cmUgYWxsb3dzIHRvIGRlcGxveW1lbnQgb2YgcGllY2VzIG9mIHNvZnR3YXJlIHdpdGggc2ltaWxhciBvciBkaWZmZXJlbnQgY2FwYWJpbGl0aWVzLCB3aGljaCBjb21tdW5pY2F0ZSBhbmQgY29sbGVjdGl2ZWx5IHByb2Nlc3MgZGF0YSBpbiBzZW5zb3IgbmV0d29ya3MgWzg1XS4gKDUpIENlbnRyYWxpc2VcIixcIiBNIE0gUiBQIDIg4oCTIOKAkyBYIEQgSCDigJMgQSDigJMg4oCTIOKAkyDigJMgWCBDb09MIFsxOTJdIDIwMDMgVCBPbiBSLE8gUSAxIOKAkyBYIFggRCBIIOKAkyBTIOKAkyDigJMg4oCTIOKAkyBYIENBUklTTUEgWzE5M10gMjAwMyBNIE0gUiBRIDIg4oCTIOKAkyDigJMg4oCTIEgg4oCTIE0gQyDigJMg4oCTIOKAkyDigJMgQ29CckEgWzExOV0gMjAwNCBNIE9uIFIsTyBRIDEgWCBYIFgg4oCTIEggWCBBIOKAkyDigJMg4oCTIOKAkyDigJMgR2FpYSBbMTY4XSAyMDA0IE0gRixPbiBTLFAsIEYgUSAyLDMgWCBYIFggRCBIIFggQSDigJMg4oCTIFgg4oCTIFggU09DQU0gWzE5NF0gMjAwNCBNIE9uIFIsTyBRLFAgMyBYIFggWCBEIEgg4oCTIEEg4oCTIEEg4oCTIOKAkyBYIENBUlMgWzE5NV0gMjAwNSBTIEsgVSDigJMg4oCTIOKAkyDigJMgWCBBIEgg4oCTIFAg4oCTIOKAkyDigJMg4oCTIOKAkyBDQVNOIFsxODhdIDIwMDUgTSBGLE9uIEYsTyBQIDIg4oCTIFgg4oCTIEQgTCDigJMgUFwiLFwiaG91Z2ggdGhlIGFyY2hpdGVjdHVyZSBpcyBjZW50cmFsaXNlZCwgc2V2ZXJhbCBicm9rZXJzIGNhbiB3b3JrIHRvZ2V0aGVyIHRocm91Z2ggYSBicm9rZXIgZmVkZXJhdGlvbi4gQ29udGV4dCBrbm93bGVkZ2UgaXMgcmVwcmVzZW50ZWQgaW4gUmVzb3VyY2UgRGVzY3JpcHRpb24gRnJhbWV3b3JrIChSREYpIHRyaXBsZXMgdXNpbmcgSmVuYS4gR2FpYSBbMTY4XSBpcyBhIGRpc3RyaWJ1dGVkIGNvbnRleHQgaW5mcmFzdHJ1Y3R1cmUgdW5jZXJ0YWludHkgYmFzZWQgcmVhc29uaW5nLiBPbnRvbG9naWVzIGFyZSB1c2VkIHRvIHJlcHJlc2VudGVkIGNvbnRleHQgaW5mb3JtYXRpb24uIEdhaWEgaGFzIGVtcGxveWVkIGEgUHJvbG9nIGJhc2VkIHByb2JhYmlsaXN0aWMgcmVhc29uaW5nIGZyYW1ld29yay4gVGhlIGFyXCJdLFwiMTk2ODU5ODc0MVwiOltcIiBNSURETEVXQVJFIENPTVBBUklTT04gWzE0XSBNaWRkbGV3YXJlIERNIEkgUFAgQ0EgU1AgSHlkcmEgWzYxXSBYIFggWCBYIFggSVNNQiBbNjJdIFggQVNQSVJFIFs2M10gWCBVQklXQVJFIFs2NF0gWCBYIFggVUJJU09BUCBbNjVdIFggWCBYIFVCSVJPQUQgWzY2XSBYIFggWCBYIFggR1NOIFs2N10gWCBTTUVQUCBbNjhdIFggWCBYIFggU09DUkFERVMgWzY5XSBYIFggWCBYIFNJUkVOQSBbNzBdIFggWCBYIFggV0hFUkVYIFs3MV0gWCBYIFggTGVnZW5kOiBEZXZpY2UgTWFuYWdlbWVudCAoRE0pLCBJbnRlcm9wZXJhdGlvbiAoSSksIFBsYXRmb3JtIFBvcnRhYmlsaXR5IChQUCksIENvbnRleHQgQXdhcmVuZXNzIChDQSksIFNlY3VyaXR5ICZhbXA7IFByaXZhY3kgKFNQKSBKLiBSZXNlYXJjaCBHYXBzIEFjY29yXCJdLFwiMTk3MTA4MDY2OFwiOltcIkR1ZSB0byB0aGUgc2NhbGUsIGl0IGlzIG5vdCBmZWFzaWJsZSB0byBjb25uZWN0IHNlbnNvcnMgbWFudWFsbHkgdG8gYW4gYXBwbGljYXRpb24gb3IgdG8gYSBtaWRkbGV3YXJlIFsyMjNdLlwiXSxcIjE5NzUzMjU5MzZcIjpbXCJQUklBTU9TIFsxNjZdIGhhcyB1c2VkIHNlbWFudGljXCJdLFwiMTk3OTUxOTQ2MlwiOltcImVtaWEgYXMgd2VsbCBhcyBpbmR1c3RyeS4gVGhlIG1haW4gcmVhc29ucyBiZWhpbmQgdGhpcyBpbnRlcmVzdCBhcmUgdGhlIGNhcGFiaWxpdGllcyB0aGF0IHRoZSBJb1QgWzIyXSwgWzIzXSB3aWxsIG9mZmVyLiBJdCBwcm9taXNlcyB0byBjcmVhdGUgYSB3b3JsZCB3aGVyZSBhbGwgdGhlIG9iamVjdHMgKGFsc28gY2FsbGVkIHNtYXJ0IG9iamVjdHMgWzI0XSkgYXJvdW5kIHVzIGFyZSBjb25uZWN0ZWQgdG8gdGhlIEludGVybmV0IGFuZCBjb21tdW5pY2F0ZSB3aXRoIGVhY2ggb3RoZXIgd2l0aCBtaW5pbXVtIGh1bWFuIGludGVydmVudGlvbiBbMjVdLiBUaGUgdWx0aW1hdGUgZ29hbCBpcyB0byBjcmVhdGUg4oCYYSBiZXR0ZXIgd29ybGQgZm9yIGh1bWFuIGJlaW5nc+KAmSwgd2hlcmUgb2JqZWN0cyBhcm91bmQgdVwiLFwicyBlc3RpbWF0ZWQgdGhhdCB0aGVyZSBhYm91dCAxLjUgYmlsbGlvbiBJbnRlcm5ldC1lbmFibGVkIFBDcyBhbmQgb3ZlciAxIGJpbGxpb24gSW50ZXJuZXQtZW5hYmxlZCBtb2JpbGUgcGhvbmVzIHRvZGF5LiBUaGVzZSB0d28gY2F0ZWdvcmllcyB3aWxsIGJlIGpvaW5lZCB3aXRoIEludGVybmV0LWVuYWJsZWQgZGV2aWNlcyAoc21hcnQgb2JqZWN0cyBbMjRdKSkgaW4gdGhlIGZ1dHVyZS4gQnkgMjAyMCwgdGhlcmUgd2lsbCBiZSA1MCB0byAxMDAgYmlsbGlvbiBkZXZpY2VzIGNvbm5lY3RlZCB0byB0aGUgSW50ZXJuZXQgWzRdLiBBY2NvcmRpbmcgdG8gQkNDIFJlc2VhcmNoIFszOF0sIHRoZSBnbG9iYWwgbWFya2V0IGZvciBzZW5zb3JzIHdhcyBhcm91bmQgJDU2LjMgYmlsbGlvbiBpbiAyMDEwLiBJbiAyMDFcIl0sXCIxOTgxNzY5MTA2XCI6W1wiRXhhbXBsZSAyOiBXNCBEaWFyeSBbMTIzXSB1c2VzIGEgVzQgKHdobywgd2hhdCwgd2hlcmUsIHdoZW4pIGJhc2VkIGNvbnRleHQgbW9kZWwgdG8gc3RydWN0dXJlIGRhdGEgaW4gb3JkZXIgdG8gZXh0cmFjdCBoaWdoLWxldmVsIGluZm9ybWF0aW9uIGZyb20gbG9jYXRpb24gZGF0YS5cIixcIlJldmlzaXRpbmcgYW4gZXhhbXBsZSBmcm9tIGEgZGlmZmVyZW50IHBlcnNwZWN0aXZlLCBXNCBEaWFyeSBbMTIzXSByZXByZXNlbnRlZCBjb250ZXh0IGFzIHR1cGxlcyAoZS5cIixcIlRoZXJlIGlzIGEgc2lnbmlmaWNhbnQgZ2FwIGJldHdlZW4gbG93LWxldmVsIHNlbnNvciByZWFkaW5ncyBhbmQgaGlnaGxldmVsIOKAmHNpdHVhdGlvbi1hd2FyZW5lc3PigJkgWzEyM10uXCJdLFwiMTk4Mjk2NDU3NVwiOltcIiDigJMgWCBYIEQgSCDigJMgUCDigJMg4oCTIOKAkyDigJMgWCBTQ09OU1RSRUFNIFsyMTFdIDIwMTAgUyBHIFIgUSA1IFgg4oCTIFgg4oCTIEgg4oCTIFAg4oCTIOKAkyDigJMgWCDigJMg4oCUIFsxMDFdIDIwMTAgTSBNIFAgUSAyLDQgWCDigJMgWCDigJMgSCDigJMgQSDigJMgRiBYIOKAkyDigJMgRmVlbEBIb21lIFsyMTJdIDIwMTAgTSBHLE9uIE8gUCxRIDIsNCDigJMgWCBYIOKAkyBIIFggQSDigJMg4oCTIOKAkyDigJMgWCBDb01pSG9DIFsyMTNdIDIwMTAgTSBPYiBSLFAgUSA1IOKAkyBYIFggRCBIIOKAkyBBIFYg4oCTIOKAkyDigJMg4oCTIEludGVsbGlnaWJpbGl0eSBbMTA4XSAyMDEwIFQg4oCTIFIsUyxQIFEgMSw1IOKAkyDigJMgWCBEIEgg4oCTIEEgViDigJMg4oCTIOKAkyDigJMgZXpDb250ZXh0IFsxMDVdIDIwMTAgTSBLLE9iIFIgUSA1IFggWCBYIOKAkyBIIOKAkyBBIOKAkyBBIOKAkyDigJMgWCBVYmlRdVNFIFsyMTRdIDIwMTAgTSBNIFIgUSA1IFgg4oCTXCIsXCJkZ2UgYmFzZSAoc3RvcmVzIGNvbnRleHQpLCBhbmQgc2V2ZXJhbCBvdGhlciBjb21wb25lbnRzIHRvIG1hbmFnZSB1c2VyIHF1ZXJpZXMsIHB1Ymxpc2gvc3Vic2NyaWJlIG1lY2hhbmlzbS4gVGhlIGFuc3dlcnMgdG8gdGhlIHVzZXIgcXVlcnkgd2lsbCByZXR1cm4gYnkgdXNpbmcgdGhlIHNhbWUgcGF0aCBhcyB3aGVuIHJlY2VpdmVkLiBDb01pSG9jIFsyMTNdIChDb250ZXh0IE1pZGRsZXdhcmUgZm9yIGFkLUhvQyBuZXR3b3JrKSBpcyBhIG1pZGRsZXdhcmUgZnJhbWV3b3JrIHRoYXQgc3VwcG9ydHMgY29udGV4dCBtYW5hZ2VtZW50IGFuZCBzaXR1YXRpb24gcmVhc29uaW5nLiBDb01pSG9jIHByb3Bvc2VzIGEgQ29Nb1MgKENvbnRleHQgTW9iaWxlIFNwYWNlcyksIGEgY29udGV4dCBtb2RlbGluZywgYW5kIHNcIl0sXCIxOTg0NjE5MjUwXCI6W1wiQ29uc29ydGl1bSAoT0dDKSBTZW5zb3IgV2ViIEVuYWJsZW1lbnQgcmVsYXRlZCBzdGFuZGFyZHMgc3VjaCBhcyBTZW5zb3IgTWFya3VwIExhbmd1YWdlcyAoU2Vuc29yTUwpIFsxMzNdLCBzZW5zb3Igb250b2xvZ2llcyBbMTQzXSwgYW5kIGltbWF0dXJlIGJ1dCBwcm9taXNpbmcgZWZmb3J0cyBzdWNoIGFzIFNlbnNvciBEZXZpY2UgRGXvrIFuaXRpb25zIFsyMjRdIHNob3cgZnV0dXJlIGRpcmVjdGlvbnMgdG8gY2Fycnkgb3V0IHRoZSByZXNlYXJjaCB3b3JrIGZ1cnRoZXIsIGluIG9yZGVyIHRvIHRhY2tsZSB0aGlzIGNoYWxsZW5nZS4gMikgQ29udGV4dCBkaXNjb3Zlcnk6IE9uY2Ugd2UgY29ubmVjdCBzZW5zb3JzIHRvIGEgc29mdHdhcmUgc29sdXRpb24sIGFzIG1lbnRpb25lZCBhYm92ZSwgdGhlcmUgaGFzIHRcIl0sXCIxOTg2MDAyNTM3XCI6W1widGhyZWUgY2F0ZWdvcmllcyBiYXNlZCBvbiB0aGVpciBmb2N1cyBbMjNdLCBbNF06IGluZHVzdHJ5LCBlbnZpcm9ubWVudCwgYW5kIHNvY2lldHkuIFRoZSBtYWduaXR1ZGUgb2YgdGhlIGFwcGxpY2F0aW9ucyBjYW4gYmUgc2VlbiBpbiB0aGUgc3RhdGlzdGljcyBwcmVzZW50ZWQgaW4gU2VjdGlvbiBJSS1ELiBTdXBwbHkgY2hhaW4gbWFuYWdlbWVudCBbMzFdLCB0cmFuc3BvcnRhdGlvbiBhbmQgbG9naXN0aWNzIFszMl0sIGFlcm9zcGFjZSwgYXZpYXRpb24sIGFuZCBhdXRvbW90aXZlIGFyZSBzb21lIG9mIHRoZSBpbmR1c3RyeSBmb2N1c2VkIGFwcGxpY2F0aW9ucyBvZiBJb1QuIFRlbGVjb21tdW5pY2F0aW9uLCBtZWRpY2FsIHRlY2hub2xvZ3kgWzMzXSwgaGVhbHRoY2FyZSwgc21hcnQgYnVpbGRpbmcsIGhcIl0sXCIxOTg5NDM1OTkyXCI6W1wiIFIsTyBRIDMgWCBYIFgg4oCTIEggWCBQIFYg4oCTIOKAkyDigJMg4oCTIFVQblAgWzIwNl0gMjAwOSBNIEssTSBSIFEgNCBYIOKAkyBYIEQgSCBYIEEg4oCTIEEgWCDigJMgWCBDT1NBUiBbMTUxXSAyMDA5IE0gT24gUyxPIFEgNSDigJMgWCBYIEEgSCDigJMgUCDigJMg4oCTIOKAkyDigJMg4oCTIFNQQkNBIFsxNjFdIDIwMDkgTSBPbiBSLE8gUSAyIOKAkyDigJMgWCBBIEggWCBBIOKAkyDigJMg4oCTIOKAkyDigJMgQy1DQVNUIFsyMDddIDIwMDkgTSBNIFIgUCxRIDUgWCDigJMgWCBEIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTIFgg4oCUIFsyMDhdIDIwMDkgTSBPbiBPIFAgNSBYIOKAkyBYIEQgSCDigJMgQSDigJMgQSDigJMg4oCTIOKAkyBDREEgWzIwOV0gMjAwOSBNIE9iIOKAkyBRIDQsNiDigJMg4oCTIOKAkyDigJMgSCDigJMgViDigJMg4oCTIOKAkyDigJMgWCBTQUxFUyBbMjEwXSAyMDA5IE0gTSBSIFEgMiw0IOKAkyDigJMgWCBEIEwg4oCTIFAg4oCTIEYg4oCTIOKAkyBYIE1pZFNlXCIsXCJvbnRleHRzIChlLmcuIGRvbWFpbiBzcGVjae+sgWMpLiBIeWRyYSBpZGVudGnvrIFlcyBjb250ZXh0IHJlYXNvbmluZyBydWxlIGVuZ2luZSwgY29udGV4dCBzdG9yYWdlLCBjb250ZXh0IHF1ZXJ5aW5nLCBhbmQgZXZlbnQvYWN0aW9uIG1hbmFnZW1lbnQgYXMgdGhlIGtleSBjb21wb25lbnRzIG9mIGEgY29udGV4dC1hd2FyZSBmcmFtZXdvcmsuIEMtQ2FzdCBbMjA3XSBpcyBtaWRkbGV3YXJlIHRoYXQgaW50ZWdyYXRlcyBXU04gaW50byBjb250ZXh0LWF3YXJlIHN5c3RlbXMgYnkgYWRkcmVzc2luZyBjb250ZXh0IGFjcXVpc2l0aW9uLCBkaXNzZW1pbmF0aW9uLCByZXByZXNlbnRhdGlvbiwgcmVjb2duaXNpbmcsIGFuZCByZWFzb25pbmcgYWJvdXQgY29udGV4dCBhbmQgc2l0dWF0aW9ucy4gQy1DYXN0IGxheXMgaXRzXCIsXCJuIHdoaWNoIGlzIGNyaXRpY2FsIGluIElvVCBzb2x1dGlvbnMgd2hlcmUgcG9zc2libGUgaW50ZXJhY3Rpb25zIGNhbm5vdCBiZSBpZGVudGnvrIFlZCBhdCB0aGUgZGVzaWduIGFuZCBkZXZlbG9wbWVudCBzdGFnZS4gZXpDb250ZXh0IFsxMDVdIHNoYXJlcyBhIGNvbW1vbiBub3Rpb24gb2YgY29udGV4dCBwcm92aWRlcnMgc2ltaWxhciB0byBDLUNhc3QgWzIwN10gdXNlcyB0aGVtIHRvIGRlY291cGxlIGNvbnRleHQgc291cmNlcyBmcm9tIHRoZSBzeXN0ZW0uIERpZmZlcmVudCB0eXBlcyBvZiBjb250ZXh0IHByb3ZpZGVycywgd2hpY2ggYXJlIGRlZGljYXRlZCB0byBjb21tdW5pY2F0aW5nIGFuZCByZXRyaWV2aW5nIGRhdGEgcmVsYXRlZCB0byBhIHNwZWNp76yBYyBkb21haW4sIGNhbiBiZSBlbXBsb3llZCB3aGVuXCJdLFwiMTk4OTg1OTA4NFwiOltcIls2MF0pIGJ5IGNvbWJpbmluZyBlYWNoIG90aGVy4oCZcyBzdHJlbmd0aHMuIFRBQkxFIEkgSU9UIE1JRERMRVdBUkUgQ09NUEFSSVNPTiBbMTRdIE1pZGRsZXdhcmUgRE0gSSBQUCBDQSBTUCBIeWRyYSBbNjFdIFggWCBYIFggWCBJU01CIFs2Ml0gWCBBU1BJUkUgWzYzXSBYIFVCSVdBUkUgWzY0XSBYIFggWCBVQklTT0FQIFs2NV0gWCBYIFggVUJJUk9BRCBbNjZdIFggWCBYIFggWCBHU04gWzY3XSBYIFNNRVBQIFs2OF0gWCBYIFggWCBTT0NSQURFUyBbNjldIFggWCBYIFggU0lSRU5BIFs3MF0gWCBYIFggWCBXSEVSRVggWzcxXSBYIFggWCBMZWdlbmQ6IERldmljZSBNYW5hZ2VtZW50IChETSksIEludGVyb3BlcmF0aW9uIChJKSwgUGxhdGZvcm0gUG9ydGFiaWxpdHkgKFBQKSwgQ29udGV4dCBBd2FyZW5lc3MgKENcIl0sXCIxOTkwOTkyNTMzXCI6W1wiYnkgdGhlIHJlYXNvbmVycyBzaG91bGQgYmUgYXZhaWxhYmxlIHRvIGJlIGV2YWx1YXRlZCB0byDvrIFuZCBwb3NzaWJsZSBpbmFjY3VyYWNpZXMgc28gZnVydGhlciBkZXZlbG9wbWVudCBjYW4gYmUgY2FycmllZCBvdXQuIFNvbWUgaW5pdGlhbCB3b3JrIGluIHRoaXMgYXJlYSBpcyBwcmVzZW50ZWQgaW4gdGhlIEludGVsbGlnaWJpbGl0eSBUb29sa2l0IFsxMDhdLiAgQXV0b21hdGljIGNvbnRleHQgbGlmZSBjeWNsZSBtYW5hZ2VtZW50OiBDb250ZXh0LWF3YXJlIGZyYW1ld29ya3Mgc2hvdWxkIGJlIGFibGUgdG8gYmUgdW5kZXJzdGFuZCBieSB0aGUgYXZhaWxhYmxlIGNvbnRleHQgc291cmNlcyAoaS5lLiBwaHlzaWNhbCBhbmQgdmlydHVhbCBzZW5zb3JzKSwgdGhlaXIgZGF0YSBzdHJ1Y3R1cmUsIGFuZCBhdVwiLFwiZy4gVGhlcmVmb3JlLCB0aGVzZSBtb2RlbHMgYXJlIG5vdCBzcGVjae+sgWMgdG8gY29udGV4dC1yZWFzb25pbmcgYnV0IGNvbW1vbmx5IHVzZWQgYWNyb3NzIG1hbnkgZGlmZmVyZW50IO+sgWVsZHMgaW4gY29tcHV0aW5nIGFuZCBlbmdpbmVlcmluZy4gV2UgcHJlc2VudCB0aGUgcmVzdWx0cyBvZiBhIHN1cnZleSBjb25kdWN0ZWQgYnkgTGltIGFuZCBEZXkgWzEwOF0gaW4gRmlndXJlIDcuIFRoZXkgaGF2ZSBpbnZlc3RpZ2F0ZWQgdGhlIHBvcHVsYXJpdHkgb2YgY29udGV4dCByZWFzb25pbmcgZGVjaXNpb24gbW9kZWxzLiBUaGUgc3VydmV5IGlzIGJhc2VkIG9uIGxpdGVyYXR1cmUgZnJvbSB0aHJlZSBtYWpvciBjb25mZXJlbmNlcyBvdmVyIO+sgXZlIHllYXJzOiBDb21wdXRlci1IdW1hbiBJbnRlcmFjdGlvbiAoQ0hJXCIsXCJnLiA3LiAoYSkgQ291bnRzIG9mIG1vZGVsIHR5cGVzIHVzZWQgaW4gMTA5IG9mIDExNCByZXZpZXdlZCBjb250ZXh0LWF3YXJlIGFwcGxpY2F0aW9ucy4gKGIpIENvdW50cyBmb3IgNTAgcmVjb2duaXRpb24gYXBwbGljYXRpb25zOyBjbGFzc2nvrIFlcnMgYXJlIHVzZWQgbW9zdCBvZnRlbiBmb3IgYXBwbGljYXRpb25zIHRoYXQgZG8gcmVjb2duaXRpb24gWzEwOF0uIFdlIGNsYXNzaWZ5IGNvbnRleHQgcmVhc29uaW5nIHRlY2huaXF1ZXMgYnJvYWRseSBpbnRvIHNpeCBjYXRlZ29yaWVzOiBzdXBlcnZpc2VkIGxlYXJuaW5nLCB1bnN1cGVydmlzZWQgbGVhcm5pbmcsIHJ1bGVzLCBmdXp6eSBsb2dpYywgb250b2xvZ2ljYWwgcmVhc29uaW5nIGFuZCBwcm9iYWJpbGlzdGljIHJlYXNvbmluZy4gQSBjb21wYXJpc29uIFwiLFwiIEgg4oCTIFAg4oCTIOKAkyDigJMgWCDigJMg4oCUIFsxMDFdIDIwMTAgTSBNIFAgUSAyLDQgWCDigJMgWCDigJMgSCDigJMgQSDigJMgRiBYIOKAkyDigJMgRmVlbEBIb21lIFsyMTJdIDIwMTAgTSBHLE9uIE8gUCxRIDIsNCDigJMgWCBYIOKAkyBIIFggQSDigJMg4oCTIOKAkyDigJMgWCBDb01pSG9DIFsyMTNdIDIwMTAgTSBPYiBSLFAgUSA1IOKAkyBYIFggRCBIIOKAkyBBIFYg4oCTIOKAkyDigJMg4oCTIEludGVsbGlnaWJpbGl0eSBbMTA4XSAyMDEwIFQg4oCTIFIsUyxQIFEgMSw1IOKAkyDigJMgWCBEIEgg4oCTIEEgViDigJMg4oCTIOKAkyDigJMgZXpDb250ZXh0IFsxMDVdIDIwMTAgTSBLLE9iIFIgUSA1IFggWCBYIOKAkyBIIOKAkyBBIOKAkyBBIOKAkyDigJMgWCBVYmlRdVNFIFsyMTRdIDIwMTAgTSBNIFIgUSA1IFgg4oCTIFggRCxBIEgg4oCTIEEg4oCTIOKAkyDigJMgWCDigJMgQ09QQUwgWzIxNV0gMjAxMCBNIE0gUiBQLFEgMSw1IOKAkyDigJMgWCBEIEggXCIsXCIgb2YgZXh0ZW5zaW9ucyBoYXZlIGJlZW4gZGV2ZWxvcGVkIHRvIGVuaGFuY2UgaXRzIGNvbnRleHQtYXdhcmUgY2FwYWJpbGl0aWVzLiBFbmFjdG9yIFsyMTddIHByb3ZpZGVzIGEgY29udGV4dCBkZWNpc2lvbiBtb2RlbGxpbmcgZmFjaWxpdHkgdG8gdGhlIENvbnRleHQgVG9vbGtpdC4gRnVydGhlciwgdGhlIEludGVsbGlnaWJpbGl0eSBUb29sa2l0IFsxMDhdIGV4dGVuZHMgdGhlIEVuYWN0b3IgZnJhbWV3b3JrIGJ5IHN1cHBvcnRpbmcgbW9yZSBkZWNpc2lvbiBtb2RlbHMgZm9yIGNvbnRleHQgcmVhc29uaW5nLiBDb250ZXh0IFRvb2xraXQgaWRlbnRp76yBZXMgdGhlIGNvbW1vbiBmZWF0dXJlcyByZXF1aXJlZCBieSBjb250ZXh0LWF3YXJlIGFwcGxpY2F0aW9ucyBhcyBjYXB0dXJlIGFuZCBhY2Nlc3Mgb2YgY1wiXSxcIjE5OTM0NDMyODhcIjpbXCLigJQgWzEwMV0gMjAxMCBNIE0gUCBRIDIsNCDigJMg4oCTIEgg4oCTIEEg4oCTIEYg4oCTIOKAk1wiXSxcIjE5OTU0NTIwMThcIjpbXCIoNikgQ2xpZW50LXNlcnZlciBhcmNoaXRlY3R1cmUgc2VwYXJhdGVzIHNlbnNpbmcgYW5kIHByb2Nlc3NpbmcgZnJvbSBlYWNoIG90aGVyLCBzdWNoIGFzIGluIENhU1AgWzE4NV0uXCIsXCJDYVNQIFsxODVdIDIwMDcgTSBNLE9uIE8gUCxRIDYg4oCTIOKAkyBEIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTXCJdLFwiMTk5NTk5OTY3OVwiOltcIlViaVF1U0UgWzIxNF0gMjAxMCBNIE0gUiBRIDUg4oCTIEQsQSBIIOKAkyBBIOKAkyDigJMg4oCTIOKAk1wiXSxcIjE5OTk5NzQ3NDlcIjpbXCJFbW9DQVNOIFsyMDVdIDIwMDggUyBLIFIgUSAyLDQg4oCTIOKAkyDigJMgRCBMIOKAkyBQIOKAkyDigJMg4oCTIOKAkyDigJNcIixcIjUpIEhhcmR3YXJlIExheWVyIFN1cHBvcnQ6IEVNb0NBU04gWzIwNV0sIFRSQUlMQkxBWkVSIFsxOTZdIGFuZCBDQVNOIFsxODhdIHNob3dzIHRoZSBpbXBvcnRhbmNlIG9mIGVtYmVkZGluZyBjb250ZXh0LWF3YXJlIGNhcGFiaWxpdGllcyBpbiBsb3cgKGhhcmR3YXJlKSBsYXllciBjb21tdW5pY2F0aW9uLlwiXSxcIjIwMDA2MjA2OThcIjpbXCJlaXIgbG9jYXRpb25zLCB0aGVpciBzdXJyb3VuZGluZ3MsIGFuZCBwcmVzZW5jZSBvZiBvdGhlciBlbnRpdGllcyAoZS5nLiBvYmplY3RzIGFuZCBwZW9wbGUpLiAgRXZlcnl0aGluZy1hcy1hLXNlcnZpY2U6IER1ZSB0byB0aGUgcG9wdWxhcml0eSBvZiBjbG91ZCBjb21wdXRpbmcgWzU1XSwgY29uc3VtaW5nIHJlc291cmNlcyBhcyBhIHNlcnZpY2UgWzU2XSBzdWNoIGFzIFBsYXRmb3JtLWFzLWEtU2VydmljZSAoUGFhUyksIEluZnJhc3RydWN0dXJlLWFzLWFTZXJ2aWNlIChJYWFTKSwgU29mdHdhcmUtYXMtYS1TZXJ2aWNlIChTYWFTKSwgaGFzIGJlY29tZSBtYWluIHN0cmVhbS4gRXZlcnl0aGluZy1hcy1hLXNlcnZpY2UgWzU3XSBtb2RlbCBpcyBoaWdobHkgZWbvrIFjaWVudCwgc2NhbGFibGUsIGFuZCBlYXNcIl0sXCIyMDAwOTk0MDA3XCI6W1wiWzEwNl0gYW5kIEJlcm5hcmRvcyBldCBhbC5cIixcIkNNUyBbMTA2XSAyMDA3IE0gT24gTyBQLFEgMSwyIOKAkyBTIEgg4oCTIEEg4oCTIEEg4oCTIOKAk1wiXSxcIjIwMDE0MjE1ODJcIjpbXCJuc2l2ZSBhbmQgZXh0ZW5zaXZlIGFtb3VudHMgb2YgaW5mb3JtYXRpb24gb24gc2VtYW50aWMgdGVjaG5vbG9neSBhcmUgYXZhaWxhYmxlIGluIFsxMzBdLCBbMTMxXSwgWzEzMl0uIEluIGFkZGl0aW9uLCBhIHNlbWFudGljIGJhc2VkIGFyY2hpdGVjdHVyZSBmb3Igc2Vuc29yIGRhdGEgZnVzaW9uIGlzIHByZXNlbnRlZCBpbiBbMTc0XSwgWzE3NV0sIFsxNzZdLiA2KSBQcm9iYWJpbGlzdGljIGxvZ2ljOiBUaGlzIGNhdGVnb3J5IG9mIHRlY2huaXF1ZXMgYWxsb3dzIGRlY2lzaW9ucyB0byBiZSBtYWRlIGJhc2VkIG9uIHByb2JhYmlsaXRpZXMgYXR0YWNoZWQgdG8gdGhlIGZhY3RzIHJlbGF0ZWQgdG8gdGhlIHByb2JsZW0uIEl0IGNhbiBiZSB1c2VkIHRvIGNvbWJpbmUgc2Vuc29yIGRhdGEgZnJvbSB0d28gZGlcIl0sXCIyMDA4MzU4MjIzXCI6W1wib3IgbmV0d29ya3Mgd2VyZSBsYXJnZWx5IHVzZWQgZm9yIG1vbml0b3JpbmcgcHVycG9zZXMgYW5kIG5vdCBmb3IgYWN0dWF0aW9uIFs0OV0uIEluIGNvbnRyYXN0LCBJb1QgaXMgbm90IGZvY3VzZWQgb24gc3BlY2nvrIFjIGFwcGxpY2F0aW9ucy4gVGhlIElvVCBjYW4gYmUgZXhwbGFpbmVkIGFzIGEgZ2VuZXJhbCBwdXJwb3NlIHNlbnNvciBuZXR3b3JrIFs1MF0uIFRoZXJlZm9yZSwgdGhlIElvVCBzaG91bGQgc3VwcG9ydCBtYW55IGtpbmRzIG9mIGFwcGxpY2F0aW9ucy4gRHVyaW5nIHRoZSBzdGFnZSBvZiBkZXBsb3lpbmcgc2Vuc29ycywgdGhlIElvVCB3b3VsZCBub3QgYmUgdGFyZ2V0ZWQgdG8gY29sbGVjdCBzcGVjae+sgWMgdHlwZXMgb2Ygc2Vuc29yIGRhdGEsIHJhdGhlciBpdCB3b3VsZCBkZXBsb3kgc2VuXCIsXCJ1ZXMgYWxsb3cgc3RydWN0dXJlIGRhdGEgdG8gYmUgbW9yZSBtZWFuaW5nZnVsIHdoaWNoIGV4cHJlc3MgcmVsYXRpb25zaGlwcyBhbW9uZyBkYXRhLiBFbmQtdXNlcnMgaW4gdGhlIElvVCBwYXJhZGlnbSBhcmUgbW9yZSBpbnRlcmVzdGVkIGluIGhpZ2hsZXZlbCBpbmZvcm1hdGlvbiBjb21wYXJlZCB0byBsb3ctbGV2ZWwgcmF3IHNlbnNvciBkYXRhIFs1MF0uIFRoZSBmb2xsb3dpbmcgZXhhbXBsZXMgZXhwbGFpbiB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGhpZ2hsZXZlbCBpbmZvcm1hdGlvbiBhbmQgbG93LWxldmVsIHJhdyBzZW5zb3IgZGF0YS4gSXQgaXMgcmFpbmluZyAoaGlnaC1sZXZlbCBpbmZvcm1hdGlvbikgY2FuIGJlIGRlcml2ZWQgZnJvbSBodW1pZGl0eSBpcyA4MCUgKGxvdy1sZXZlbCBzZW5zb1wiLFwi4oCTIOKAkyBYIEQgSCDigJMgQSBWIOKAkyDigJMg4oCTIOKAkyBlekNvbnRleHQgWzEwNV0gMjAxMCBNIEssT2IgUiBRIDUgWCBYIFgg4oCTIEgg4oCTIEEg4oCTIEEg4oCTIOKAkyBYIFViaVF1U0UgWzIxNF0gMjAxMCBNIE0gUiBRIDUgWCDigJMgWCBELEEgSCDigJMgQSDigJMg4oCTIOKAkyBYIOKAkyBDT1BBTCBbMjE1XSAyMDEwIE0gTSBSIFAsUSAxLDUg4oCTIOKAkyBYIEQgSCBYIFYgQSxGIOKAkyBYIFggT2N0b3B1cyBbNTBdIDIwMTEgUyBYIFggUCAyLDQg4oCTIOKAkyBYIEQgSCDigJMgQSDigJMgQSBYIOKAkyDigJMg4oCUIFsyMTZdIDIwMTEgTSDigJMgWCBQIDIg4oCTIOKAkyDigJMgRCBIIOKAkyBQIOKAkyBBIOKAkyDigJMgWCDigJQgWzE1M10gMjAxMSBTIEssT2IgUyxQIDIsNCBYIFggWCBELEEgSCDigJMgTSBWIEEsRiDigJMg4oCTIFggTm90ZXM6IFJlZmVyIFNlY3Rpb24gVi1BIGZvciB0aGUgbWVhbmluZ3Mgb2YgdGhlIGFiYnJldlwiLFwibnRleHQgaW50byBjb3JyZWN0IGZvcm1hdCwgaW4gdGhpcyBhcHByb2FjaCwga2V5dmFsdWUgcGFpcnMpLCBhbmQgcHJvdmlkZXJz4oCZIHJlZ2lzdHJ5IChtYWludGFpbnMgbGlzdCBvZiBjb250ZXh0IHByb3ZpZGVycyBhbmQgdGhlaXIgY2FwYWJpbGl0aWVzKS4gSmF2YUJlYW5zIGFyZSB1c2VkIGFzIHRoZSBtYWluIGRhdGEgZm9ybWF0LiBPY3RvcHVzIFs1MF0gaXMgYW4gb3Blbi1zb3VyY2UsIGR5bmFtaWNhbGx5IGV4dGVuc2libGUgc3lzdGVtIHRoYXQgc3VwcG9ydHMgZGF0YSBtYW5hZ2VtZW50IGFuZCBmdXNpb24gZm9yIElvVCBhcHBsaWNhdGlvbnMuIE9jdG9wdXMgZGV2ZWxvcHMgbWlkZGxld2FyZSBhYnN0cmFjdGlvbnMgYW5kIHByb2dyYW1taW5nIG1vZGVscyBmb3IgdGhlIElvVC4gSXQgZW5hYmxlc1wiLFwiaWNoIGFsbG93IGl0IHRvIG1vbml0b3IgYW5kIGFjY2VzcyBjb250ZXh0dWFsIGNvbnRyb2wgY29udGV4dC4gQXMgb250b2xvZ2llcyBhcmUgZ2V0dGluZyBwb3B1bGFyIGFuZCBhZG9wdGVkIGluIHdlYiByZWxhdGVkIGRldmVsb3BtZW50cywgc3VjaCBwcmFjdGljZSB3aWxsIG1ha2VzIElvVCBkZXZlbG9wbWVudCBtdWNoIGVhc2llci4gT2N0b3B1cyBbNTBdIGhpZ2hsaWdodHMgdGhlIHNpZ25p76yBY2FuY2Ugb2YgZGVzaWduaW5nIHByb2dyYW1taW5nIG1vZGVscyB0aGF0IGVuYWJsZSBub24tdGVjaG5pY2FsIHBlb3BsZSB0byBkZXBsb3kgc2Vuc29ycy4gQXMgd2UgbWVudGlvbmVkIGVhcmxpZXIsIHRoZSBtYWpvcml0eSBvZiB0aGUgc2Vuc29yIGRlcGxveW1lbnRzIGFyZSBleHBlY3RlZCB0byBiZSBjYXJyaVwiXSxcIjIwMTA4ODAxNjFcIjpbXCJQcmltYXJpbHkgdGhlcmUgd291bGQgYmUgdHdvIGFyY2hpdGVjdHVyZXM6IGV2ZW50IGRyaXZlbiBbNTFdIGFuZCB0aW1lIGRyaXZlbi5cIl0sXCIyMDExMTY0ODc4XCI6W1wiQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFgsIFhYWFggWFhYWCAyMiBJbiBbMTcxXSwgWzE3N10sIGl0IGhhcyBiZWVuIHVzZWQgdG8gdW5kZXJzdGFuZCB3aGV0aGVyIHRoZXJlIGlzIGEgbWVldGluZyBpbiB0aGUgcm9vbS4gT3RoZXIgZXhhbXBsZSBhcHBsaWNhdGlvbnMgYXJlIHByZXNlbnRlZCBpbiBbMTc4XSwgWzE3OV0uIGhpZGRlbiBNYXJrb3YgTW9kZWxzIFsxODBdIGFyZSBhbHNvIGEgcHJvYmFiaWxpc3RpYyB0ZWNobmlxdWUgdGhhdCBhbGxvd3Mgc3RhdGUgdG8gYmUgcmVwcmVzZW50ZWQgdXNpbmcgb2JzZXJ2YWJsZSBldmlkZW5jZSB3aXRob3V0IGRpcmVjdGx5IHJlYWRpbmcgdGhlIHN0YXRlLiBGb3IgZXhhbXBsZSwgaXQgcHJvdmlkZXMgYSBtZXRoXCJdLFwiMjAxNzIzMTMwNlwiOltcIls3N10gdXNlZCBzeW5vbnltcyB0byByZWZlciB0byBjb250ZXh0LCBzdWNoIGFzIGVudmlyb25tZW50IGFuZCBzaXR1YXRpb24uXCJdLFwiMjAyMTQ3NjA4N1wiOltcIkZlZWxASG9tZSBbMjEyXSAyMDEwIE0gRyxPbiBPIFAsUSAyLDQg4oCTIOKAkyBIIEEg4oCTIOKAkyDigJMg4oCTXCIsXCJGdXJ0aGVyLCBGZWVsQEhvbWUgWzIxMl0gc2hvd3MgaG93IGNyb3NzIGRvbWFpbiBjb250ZXh0IGNhbiBiZSBxdWVyaWVkIGluIG9yZGVyIHRvIGFuc3dlciBjb21wbGV4IHVzZXIgcmVxdWlyZW1lbnRzLlwiXSxcIjIwMjM0Njc4MTZcIjpbXCJhIGFuZCBhcHByb3ByaWF0ZWx5IGFubm90YXRpbmcgaXQgYXV0b21hdGljYWxseSBpbiBhIHBhcmFkaWdtIHN1Y2ggYXMgdGhlIElvVCwgd2hlcmUgYXBwbGljYXRpb24gZG9tYWlucyB2YXJ5IHdpZGVseSwgaXMgYSBjaGFsbGVuZ2luZyB0YXNrLiBSZWNlbnQgZGV2ZWxvcG1lbnRzIGluIHNlbWFudGljIHRlY2hub2xvZ2llcyBbMTM1XSwgWzE0M10sIFsyMjVdIGFuZCBsaW5rZWQgZGF0YSBbMjI2XSwgWzIyN10gc2hvdyBmdXR1cmUgZGlyZWN0aW9ucyB0byBjYXJyeSBvdXQgZnVydGhlciByZXNlYXJjaCB3b3JrLiBTZW1hbnRpYyB0ZWNobm9sb2d5IGlzIHBvcHVsYXJseSB1c2VkIHRvIGVuY29kZSBkb21haW4ga25vd2xlZGdlLiAzKSBBY3F1aXNpdGlvbiwgbW9kZWxsaW5nLCByZWFzb25pbmcsIGFuZCBkaXNcIl0sXCIyMDI0NDg2ODQ0XCI6W1widWN0aW9uIG9mIHRoZSB0ZXJtIOKAmHViaXF1aXRvdXMgY29tcHV0aW5n4oCZIGJ5IE1hcmsgV2Vpc2VyIFsxXSBpbiBoaXMgZ3JvdW5kLWJyZWFraW5nIHBhcGVyIFRoZSBDb21wdXRlciBmb3IgdGhlIDIxc3QgQ2VudHVyeSBpbiAxOTkxLiBUaGVuIHRoZSB0ZXJtIOKAmGNvbnRleHQtYXdhcmXigJkgd2FzIO+sgXJzdCB1c2VkIGJ5IFNjaGlsaXQgYW5kIFRoZWltZXIgWzJdIGluIDE5OTQuIFNpbmNlIHRoZW4sIHJlc2VhcmNoIGludG8gY29udGV4dC1hd2FyZW5lc3MgaGFzIGJlZW4gZXN0YWJsaXNoZWQgYXMgYSB3ZWxsIGtub3duIHJlc2VhcmNoIGFyZWEgaW4gY29tcHV0ZXIgc2NpZW5jZS4gTWFueSByZXNlYXJjaGVycyBoYXZlIHByb3Bvc2VkIGRl76yBbml0aW9ucyBhbmQgZXhwbGFuYXRpb25zIG9mIGRpZmZlcmVudCBhc1wiLFwiZXh0OiBUaGUgdGVybSBjb250ZXh0IGhhcyBiZWVuIGRl76yBbmVkIGJ5IG1hbnkgcmVzZWFyY2hlcnMuIERleSBldCBhbC4gWzcyXSBldmFsdWF0ZWQgYW5kIGhpZ2hsaWdodGVkIHRoZSB3ZWFrbmVzc2VzIG9mIHRoZXNlIGRl76yBbml0aW9ucy4gRGV5IGNsYWltZWQgdGhhdCB0aGUgZGXvrIFuaXRpb24gcHJvdmlkZWQgYnkgU2NoaWxpdCBhbmQgVGhlaW1lciBbMl0gd2FzIGJhc2VkIG9uIGV4YW1wbGVzIGFuZCBjYW5ub3QgYmUgdXNlZCB0byBpZGVudGlmeSBuZXcgY29udGV4dC4gRnVydGhlciwgRGV5IGNsYWltZWQgdGhhdCBkZe+sgW5pdGlvbnMgcHJvdmlkZWQgYnkgQnJvd24gWzczXSwgRnJhbmtsaW4gYW5kIEZsYWNoc2JhcnQgWzc0XSwgUm9kZGVuIGV0IGFsLiBbNzVdLCBIdWxsIGV0IGFsLiBbNzZdLCBhbmQgXCIsXCJvIHNlcGFyYXRlIGV2ZW50cy4gKGUuZy4gcmFpbmluZywgaGF2aW5nIGEgc2hvd2VyLCBkcml2aW5nIGEgY2FyLCBldGMuKSAyKSBEZe+sgW5pdGlvbiBvZiBDb250ZXh0LWF3YXJlbmVzczogVGhlIHRlcm0gY29udGV4dCBhd2FyZW5lc3MsIGFsc28gY2FsbGVkIHNlbnRpZW50LCB3YXMg76yBcnN0IGludHJvZHVjZWQgYnkgU2NoaWxpdCBhbmQgVGhlaW1lciBbMl0gaW4gMTk5NC4gTGF0ZXIsIGl0IHdhcyBkZe+sgW5lZCBieSBSeWFuIGV0IGFsLiBbODddLiBJbiBib3RoIGNhc2VzLCB0aGUgZm9jdXMgd2FzIG9uIGNvbXB1dGVyIGFwcGxpY2F0aW9ucyBhbmQgc3lzdGVtcy4gQXMgc3RhdGVkIGJ5IEFib3dkIGV0IGFsLiBbM10sIHRob3NlIGRl76yBbml0aW9ucyBhcmUgdG9vIHNwZWNp76yBYyBhbmQgY2Fubm90IGJlIHVzZVwiXSxcIjIwMjYyMDU5NjRcIjpbXCJ0aCB0aGUgc29waGlzdGljYXRlZCB0b29scyB0aGF0IGV4aXN0IHRvZGF5LiBBZGRpbmcgY29udGV4dCBpbmZvcm1hdGlvbiBhbmQgY2hhbmdpbmcgdGhlIGRhdGEgc3RydWN0dXJlIGlzIGFsc28gZGlm76yBY3VsdCBpbiBsYXRlciBzdGFnZXMuIEhvd2V2ZXIsIHNvbWUgb2YgdGhlIHJlY2VudCB0cmVuZHMgYW5kIHNvbHV0aW9ucyBpbiB0aGUgbm9TUUwgWzEyOV0gbW92ZW1lbnQgYWxsb3dzIHRoZXNlIHN0cnVjdHVyZSBhbHRlcmF0aW9uIGlzc3VlcyB0byBiZSBvdmVyY29tZS4gVGhlcmVmb3JlLCBncmFwaGljYWwgbW9kZWxsaW5nIHRlY2huaXF1ZXMgY2FuIGJlIHVzZWQgYXMgcGVyc2lzdGVudCBzdG9yYWdlIG9mIGNvbnRleHQuIDQpIE9iamVjdCBCYXNlZCBNb2RlbGxpbmc6IE9iamVjdCBiYXNlZCAob3Igb1wiXSxcIjIwMjYzNzQwNzVcIjpbXCJlIG1vZGVsbGluZy4gQW4gZXhhbXBsZSBvZiBwb3B1bGFyIG1hcmt1cCBzY2hlbWUgbW9kZWxsaW5nIGlzIENvbXBvc2l0ZSBDYXBhYmlsaXRpZXMvUHJlZmVyZW5jZSBQcm/vrIFsZXMgKENDL1BQKSBbMTI1XS4gVGhlcmUgYXJlIGEgc2lnbmnvrIFjYW50IG51bWJlciBvZiBzaW1pbGFyIGVtZXJnaW5nIGFwcGxpY2F0aW9ucyBzdWNoIGFzIENvbnRleHRNTCBbMTI2XSBpbiBjb250ZXh0LWF3YXJlIGNvbXB1dGluZy4gVHVwbGVzIGFyZSBhbHNvIHVzZWQgdG8gbW9kZWwgY29udGV4dCBbMTAzXS4gMykgR3JhcGhpY2FsIE1vZGVsbGluZzogSXQgbW9kZWxzIGNvbnRleHQgd2l0aCByZWxhdGlvbnNoaXBzLiBTb21lIGV4YW1wbGVzIG9mIHRoaXMgbW9kZWxsaW5nIHRlY2huaXF1ZSBhcmUgVW5p76yBZWQgTW9kZWxsaW5nIExcIl0sXCIyMDI4MjAxNTQ1XCI6W1wiUnVsZXMgYXJlIGFsc28gdXNlZCBpbiBldmVudCBkZXRlY3Rpb24gWzE2NF0sIFsxNjVdLlwiXSxcIjIwMzM0NjA2MzVcIjpbXCIgdW5kZXIgdW5jZXJ0YWludHkgc3VjaCBhcyBCYXllc2lhbiBuZXR3b3JrcywgRGVtcHN0ZXItU2hhZmVyIG9yIGZ1enp5IGxvZ2ljIGlzIGVzc2VudGlhbCBpbiBzdWNoIHNpdHVhdGlvbnMuIFRoZSBwcm9jZXNzIG9mIGhvdyB0aGUgbXVsdGlwbGUgdGVjaG5pcXVlcyBjYW4gYmUgY29tYmluZWQgdG9nZXRoZXIgaXMgcHJlc2VudGVkIGluIFsxMl0sIFsxODNdLiBXZSBicmll76yCeSBleHBsYWluIHRoZSBoeWJyaWQgY29udGV4dCBtb2RlbGxpbmcgYW5kIHJlYXNvbmluZyBhcHByb2FjaCBhcyBmb2xsb3dzLiBBdCB0aGUgbG93ZXN0IGxldmVsLCBzdGF0aXN0aWNhbCB0ZWNobmlxdWVzIGNhbiBiZSB1c2VkIHRvIGZ1c2Ugc2Vuc29yIGRhdGEuIFRoZW4sIGZ1enp5IGxvZ2ljIGNhbiBiZSBlbXBsb3llZCB0byBjb1wiLFwiYyB0ZWNobm9sb2dpZXMgc3VjaCBhcyBvbnRvbG9naWVzLiBPbnRvbG9naWNhbCByZWFzb25pbmcgY2FuIGJlIGFwcGxpZWQgdG8gaW5mZXIgYWRkaXRpb25hbCBjb250ZXh0IGluZm9ybWF0aW9uIHVzaW5nIGRvbWFpbiBrbm93bGVkZ2UgYXQgdGhlIGhpZ2hlciBsZXZlbC4gQSBzaW1pbGFyIHByb2Nlc3MgaXMgZXhwbGFpbmVkIGluIGRldGFpbCBpbiBbMTgzXS4gRC4gQ29udGV4dCBEaXN0cmlidXRpb24gQ29udGV4dCBkaXN0cmlidXRpb24gaXMgYSBmYWlybHkgc3RyYWlnaHRmb3J3YXJkIHRhc2suIEl0IHByb3ZpZGVzIG1ldGhvZHMgdG8gZGVsaXZlciBjb250ZXh0IHRvIHRoZSBjb25zdW1lcnMuIEZyb20gdGhlIGNvbnN1bWVyIHBlcnNwZWN0aXZlIHRoaXMgdGFzayBjYW4gYmUgY2FsbGVkIGNvbnRleHQgXCIsXCJpZGVudCB0aGF0IG5vIHNpbmdsZSB0ZWNobmlxdWUgd291bGQgc2VydmUgdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgSW9ULiBJbmNvcnBvcmF0aW5nIGFuZCBpbnRlZ3JhdGluZyBtdWx0aXBsZSB0ZWNobmlxdWVzIGhhcyBzaG93biBwcm9taXNpbmcgc3VjY2VzcyBpbiB0aGUg76yBZWxkLiBTb21lIG9mIHRoZSBlYXJseSB3b3JrIHN1Y2ggYXMgWzEyXSwgWzE4M10gaGF2ZSBkaXNjdXNzZWQgdGhlIHByb2Nlc3MgaW4gZGV0YWlsLiBIb3dldmVyLCBkdWUgdG8gdGhlIGltbWF0dXJpdHkgb2YgdGhlIO+sgWVsZCBvZiBJb1QsIGl0IGlzIGRpZu+sgWN1bHQgdG8gcHJlZGljdCB3aGVuIGFuZCB3aGVyZSB0byBlbXBsb3kgZWFjaCB0ZWNobmlxdWUuIFRoZXJlZm9yZSwgaXQgaXMgaW1wb3J0YW50IHRvIGRl76yBbmUgYW5kIGZvbFwiXSxcIjIwMzQ0NTk1NDBcIjpbXCJuZyBjYW4gYWxzbyBiZSBjb25zaWRlcmVkIGFzIGVzc2VudGlhbCByZWFsIHRpbWUgcHJvY2Vzc2luZyB0YXNrcy4gUmVhbCB0aW1lIHByb2Nlc3Npbmcgc29sdXRpb25zIGFyZSBmb2N1c2VkIG9uIHByb2Nlc3NpbmcgZmFzdGVyIHRoYW4gdHJhZGl0aW9uYWwgbWV0aG9kcywgd2hpY2ggYWxsb3dzIHNlbnNvciBzdHJlYW0gZGF0YSBwcm9jZXNzaW5nIFsyMTFdLiBUaGUgc3ltYm9sIChYKSBkZW5vdGVkIHRoZSBwcmVzZW5jZSBvZiByZWFsIHRpbWUgcHJvY2Vzc2luZyBmdW5jdGlvbmFsaXR5IGluIHNvbWUgZm9ybS4gMjApIFJlZ2lzdHJ5IE1haW50ZW5hbmNlIGFuZCBMb29rdXAgU2VydmljZXM6IFdlIHVzZSB0aGUgKFgpIHN5bWJvbCB0byBkZW5vdGUgdGhlIHByZXNlbmNlIG9mIHJlZ2lzdHJ5IG1haW50ZW5cIixcIiBPIFAgNSBYIOKAkyBYIEQgSCDigJMgQSDigJMgQSDigJMg4oCTIOKAkyBDREEgWzIwOV0gMjAwOSBNIE9iIOKAkyBRIDQsNiDigJMg4oCTIOKAkyDigJMgSCDigJMgViDigJMg4oCTIOKAkyDigJMgWCBTQUxFUyBbMjEwXSAyMDA5IE0gTSBSIFEgMiw0IOKAkyDigJMgWCBEIEwg4oCTIFAg4oCTIEYg4oCTIOKAkyBYIE1pZFNlbiBbNTJdIDIwMDkgTSBLIFIgUCxRIDUg4oCTIFggWCBEIEgg4oCTIFAg4oCTIOKAkyDigJMg4oCTIFggU0NPTlNUUkVBTSBbMjExXSAyMDEwIFMgRyBSIFEgNSBYIOKAkyBYIOKAkyBIIOKAkyBQIOKAkyDigJMg4oCTIFgg4oCTIOKAlCBbMTAxXSAyMDEwIE0gTSBQIFEgMiw0IFgg4oCTIFgg4oCTIEgg4oCTIEEg4oCTIEYgWCDigJMg4oCTIEZlZWxASG9tZSBbMjEyXSAyMDEwIE0gRyxPbiBPIFAsUSAyLDQg4oCTIFggWCDigJMgSCBYIEEg4oCTIOKAkyDigJMg4oCTIFggQ29NaUhvQyBbMjEzXSAyMDEwIE0gT2IgUixQIFEgNSDigJMgWCBYIEQgSCDigJMgQSBWIOKAk1wiLFwic2tzIG5lZWQgdG8gYmUgcGVyZm9ybWVkIGJ5IElvVCBzb2x1dGlvbnMuIFViaVF1U0UgWzIxNF0gc2hvd3MgaG93IHJlYWwgdGltZSBxdWVyeSBwcm9jZXNzaW5nIGNhbiBiZSBkb25lIGluY29ycG9yYXRpbmcgbGl2ZSBzdHJlYW1pbmcgZGF0YSBhbmQgaGlzdG9yaWMgY29udGV4dCBpbiByZXBvc2l0b3JpZXMuIFNpbWlsYXJseSwgU0NPTlNUUkVBTSBbMjExXSBoaWdobGlnaHRzIHRoZSBjaGFsbGVuZ2VzIGluIHJlYWwtdGltZSBjb250ZXh0IHN0cmVhbSBwcm9jZXNzaW5nIHdoZXJlIHJlYWwgdGltZSBwcm9jZXNzaW5nIGlzIGEgc2lnbmnvrIFjYW50IGNvbXBvbmVudCB0byBiZSBzdWNjZXNzZnVsIGluIHRoZSBJb1QuIE1vc3QgZXZlbnQgZGV0ZWN0aW9ucyBuZWVkIHRvIGJlIHBlcmZvcm1lZCBpbiByZWFsIHRcIl0sXCIyMDM4Nzk1MzU3XCI6W1wicmVhc29uaW5nLCBzdG9yYWdlIGFuZCBldmVudCBkZXRlY3Rpb24gKGNvbnNpZGVyaW5nIGVuZXJneSBjb25zdW1wdGlvbiBhbmQgYXZhaWxhYmlsaXR5KSBbMTg4XS5cIixcIkNBU04gWzE4OF0gMjAwNSBNIEYsT24gRixPIFAgMiDigJMg4oCTIEQgTCDigJMgUCDigJMg4oCTIOKAkyDigJMg4oCTXCIsXCI1KSBIYXJkd2FyZSBMYXllciBTdXBwb3J0OiBFTW9DQVNOIFsyMDVdLCBUUkFJTEJMQVpFUiBbMTk2XSBhbmQgQ0FTTiBbMTg4XSBzaG93cyB0aGUgaW1wb3J0YW5jZSBvZiBlbWJlZGRpbmcgY29udGV4dC1hd2FyZSBjYXBhYmlsaXRpZXMgaW4gbG93IChoYXJkd2FyZSkgbGF5ZXIgY29tbXVuaWNhdGlvbi5cIl0sXCIyMDM5NjczMzIwXCI6W1widGluZyBbNTVdLCBjb25zdW1pbmcgcmVzb3VyY2VzIGFzIGEgc2VydmljZSBbNTZdIHN1Y2ggYXMgUGxhdGZvcm0tYXMtYS1TZXJ2aWNlIChQYWFTKSwgSW5mcmFzdHJ1Y3R1cmUtYXMtYVNlcnZpY2UgKElhYVMpLCBTb2Z0d2FyZS1hcy1hLVNlcnZpY2UgKFNhYVMpLCBoYXMgYmVjb21lIG1haW4gc3RyZWFtLiBFdmVyeXRoaW5nLWFzLWEtc2VydmljZSBbNTddIG1vZGVsIGlzIGhpZ2hseSBlZu+sgWNpZW50LCBzY2FsYWJsZSwgYW5kIGVhc3kgdG8gdXNlLiBJb1QgZGVtYW5kcyBzaWduae+sgWNhbnQgYW1vdW50cyBvZiBpbmZyYXN0cnVjdHVyZSB0byBiZSBwdXQgaW4gcGxhY2UgaW4gb3JkZXIgdG8gbWFrZSBpdHMgdmlzaW9uIGEgcmVhbGl0eSwgd2hlcmUgaXQgd291bGQgZm9sbG93IGEgY29tbXVuaXR5IG9yIGNyXCJdLFwiMjA0MjAzNzEzNVwiOltcIlsxMzddIGRlZmluZWQgdGhlIGNvbmNlcHQgb2Ygb250b2xvZ3kgYXMgZm9sbG93cy5cIl0sXCIyMDQ2MTI1OTUyXCI6W1wiKSAoNSkgKDYpICg3KSAoOCkgKDkpICgxMCkgKDExKSAoMTIpICgxMykgKDE0KSAoMTUpICgxNikgKDE3KSAoMTgpICgxOSkgKDIwKSBDb250ZXh0IFRvb2xraXQgWzcyXSAyMDAxIFQgSyBYIFEgMSw1IFgg4oCTIOKAkyDigJMgSCDigJMgQSDigJMgQSDigJMg4oCTIOKAkyBTb2xhciBbMTg0XSAyMDAyIE0gSyxNLE9iIFIgUCAyIOKAkyDigJMgWCBEIEggWCBQIFggQSBYIOKAkyDigJMgQXVyYSBbMTkxXSAyMDAyIE0gTSBSIFAgMiDigJMg4oCTIFggRCBIIOKAkyBBIOKAkyDigJMg4oCTIOKAkyBYIENvT0wgWzE5Ml0gMjAwMyBUIE9uIFIsTyBRIDEg4oCTIFggWCBEIEgg4oCTIFMg4oCTIOKAkyDigJMg4oCTIFggQ0FSSVNNQSBbMTkzXSAyMDAzIE0gTSBSIFEgMiDigJMg4oCTIOKAkyDigJMgSCDigJMgTSBDIOKAkyDigJMg4oCTIOKAkyBDb0JyQSBbMTE5XSAyMDA0IE0gT24gUixPIFEgMSBYIFggWCDigJMgSCBYIEEg4oCTIOKAkyDigJMg4oCTIOKAkyBcIixcInNvbmluZy4gQ29udGV4dCBUb29sa2l0IGlkZW50ae+sgWVzIHRoZSBjb21tb24gZmVhdHVyZXMgcmVxdWlyZWQgYnkgY29udGV4dC1hd2FyZSBhcHBsaWNhdGlvbnMgYXMgY2FwdHVyZSBhbmQgYWNjZXNzIG9mIGNvbnRleHQsIHN0b3JhZ2UsIGRpc3RyaWJ1dGlvbiwgYW5kIGluZGVwZW5kZW50IGV4ZWN1dGlvbiBmcm9tIGFwcGxpY2F0aW9ucy4gQXVyYSBbMTkxXSBpcyBhIHRhc2sgb3JpZW50ZWQgc3lzdGVtIGJhc2VkIG9uIGRpc3RyaWJ1dGVkIGFyY2hpdGVjdHVyZSB3aGljaCBmb2N1c2VzIG9uIGRpZmZlcmVudCBjb21wdXRhdGlvbmFsIGRldmljZXMgdXNlZCBieSBodW1hbiB1c2VycyBldmVyeSBkYXkuIFRoZSBvYmplY3RpdmUgaXMgdG8gcnVuIGEgc2V0IG9mIGFwcGxpY2F0aW9ucyBjYWxsZWQgcGVyc29uXCIsXCIgaW1wb3J0YW50IHRhc2sgaW4gdGhlIElvVC4gUGVvcGxlIG1vdmUgZnJvbSBvbmUgc2l0dWF0aW9uIHRvIGFub3RoZXIgYW5kIElvVCBzb2x1dGlvbnMgbmVlZCB0byB0cmFjayB1c2VyIG1vdmVtZW50cyBhbmQgZmFjaWxpdGF0ZSBjb250ZXh0LWF3YXJlIGZ1bmN0aW9uYWxpdGllcyBvdmVyIGRpZmZlcmVudCBmb3JtcyBvZiBkZXZpY2VzLiBBdXJhIFsxOTFdIHNob3dzIHRoZSByZXF1aXJlbWVudCBvZiBoYXZpbmcgSW9UIG1pZGRsZXdhcmUgcnVubmluZyBvdmVyIG1hbnkgcGxhdGZvcm1zIGFuZCBkZXZpY2VzIHVuZGVyIGRpZmZlcmVudCByZXNvdXJjZSBsaW1pdGF0aW9ucyAoaS5lLiBmcm9tIGNsb3VkIHNlcnZlciwgY29tcHV0ZXJzLCB0YWJsZXRzLCBtb2JpbGUgcGhvbmVzIHRvIGV2ZXJ5ZGF5IG9iamVcIl0sXCIyMDQ3MTg5MTMyXCI6W1wiSW50ZXJhY3Rpb25zIGFyZSBoaWdobHkgZGVwZW5kZW50IG9uIHRoZWlyIGxvY2F0aW9ucywgdGhlaXIgc3Vycm91bmRpbmdzLCBhbmQgcHJlc2VuY2Ugb2Ygb3RoZXIgZW50aXRpZXMgKGUuZy4gb2JqZWN0cyBhbmQgcGVvcGxlKS4gIEV2ZXJ5dGhpbmctYXMtYS1zZXJ2aWNlOiBEdWUgdG8gdGhlIHBvcHVsYXJpdHkgb2YgY2xvdWQgY29tcHV0aW5nIFs1NV0sIGNvbnN1bWluZyByZXNvdXJjZXMgYXMgYSBzZXJ2aWNlIFs1Nl0gc3VjaCBhcyBQbGF0Zm9ybS1hcy1hLVNlcnZpY2UgKFBhYVMpLCBJbmZyYXN0cnVjdHVyZS1hcy1hU2VydmljZSAoSWFhUyksIFNvZnR3YXJlLWFzLWEtU2VydmljZSAoU2FhUyksIGhhcyBiZWNvbWUgbWFpbiBzdHJlYW0uIEV2ZXJ5dGhpbmctYXMtYS1zZXJ2aWNlIFs1N10gbW9kZVwiXSxcIjIwNDg2MTk2MTNcIjpbXCJEYXRhIGZ1c2lvbiBtZXRob2RzLCBtb2RlbHMsIGFuZCBjbGFzc2lmaWNhdGlvbiB0ZWNobmlxdWVzIGluIHRoZSB3aXJlbGVzcyBzZW5zb3IgbmV0d29ya3MgZG9tYWluIGFyZSBjb21wcmVoZW5zaXZlbHkgc3VydmV5ZWQgaW4gWzE5MF0uXCJdLFwiMjA1MDU3Mzc5NlwiOltcIlsxMDVdIGhhdmUgaWRlbnRpZmllZCBhbmQgY29tcHJlaGVuc2l2ZWx5IGRpc2N1c3NlZCBzaXggZGVzaWduIHByaW5jaXBsZXMgcmVsYXRlZCB0byBjb250ZXh0LWF3YXJlIG1hbmFnZW1lbnQgZnJhbWV3b3JrcyAobWlkZGxld2FyZSkuXCIsXCJlekNvbnRleHQgWzEwNV0gMjAxMCBNIEssT2IgUiBRIDUg4oCTIEgg4oCTIEEg4oCTIEEg4oCTIOKAk1wiXSxcIjIwNTE1NzU2MTNcIjpbXCJbMTA3XSBoYXZlIGFsc28gaWRlbnRpZmllZCBzZXZlcmFsXCJdLFwiMjA1NTU5MDQ0OVwiOltcImYgb2JqZWN0cyAoc2Vuc29ycyBhbmQgYWN0dWF0b3JzKSB0aGF0IGludGVyYWN0IGF1dG9ub21vdXNseS4gTmV3IG9iamVjdHMgd2lsbCBzdGFydCBjb21tdW5pY2F0aW5nIGFuZCBleGlzdGluZyBvbmVzIHdpbGwgZGlzYXBwZWFyLiBDdXJyZW50bHksIHRoZXJlIGFyZSBtaWxsaW9ucyBvZiBzZW5zb3JzIGRlcGxveWVkIGFyb3VuZCB0aGUgd29ybGQgWzUzXS4gSW50ZXJhY3Rpb25zIG1heSBkaWZmZXIgc2lnbmnvrIFjYW50bHkgZGVwZW5kaW5nIG9uIHRoZSBvYmplY3RzIGNhcGFiaWxpdGllcy4gU29tZSBvYmplY3RzIG1heSBoYXZlIHZlcnkgZmV3IGNhcGFiaWxpdGllcywgYW5kIGFzIHN1Y2ggc3RvcmUgdmVyeSBsaW1pdGVkIGluZm9ybWF0aW9uIGFuZCBkbyBubyBwcm9jZXNzaW5nIGF0IGFsbC4gSW4gY29cIl0sXCIyMDU2NjI2NTgxXCI6W1wiIHNlbnNvciBuZXR3b3JrcyB3ZXJlIHVzZWQgaW4gbGltaXRlZCBkb21haW5zIHRvIGFjaGlldmUgc3BlY2nvrIFjIHB1cnBvc2VzLCBzdWNoIGFzIGVudmlyb25tZW50IG1vbml0b3JpbmcgWzQwXSwgYWdyaWN1bHR1cmUgWzM1XSwgbWVkaWNhbCBjYXJlIFs0MV0sIGV2ZW50IGRldGVjdGlvbiBbNDJdLCBzdHJ1Y3R1cmFsIGhlYWx0aCBtb25pdG9yaW5nIFs0M10sIGV0Yy4gRnVydGhlciwgdGhlcmUgYXJlIHRocmVlIGNhdGVnb3JpZXMgb2Ygc2Vuc29yIG5ldHdvcmtzIHRoYXQgY29tcHJpc2UgdGhlIElvVCBbNDRdOiBib2R5IHNlbnNvciBuZXR3b3JrcyAoQlNOKSwgb2JqZWN0IHNlbnNvciBuZXR3b3JrcyAoT1NOKSwgYW5kIGVudmlyb25tZW50IHNlbnNvciBuZXR3b3JrcyAoRVNOKS4gTW9sbGEgYW5kIEFoYVwiXSxcIjIwNTkwMTkzNThcIjpbXCJJbiAyMDEwLCBCZXR0aW5pIGV0IGFsLiBbMTJdIGFsc28gY29tcHJlaGVuc2l2ZWx5IHN1cnZleWVkIGNvbnRleHQgbW9kZWxsaW5nIGFuZCByZWFzb25pbmcgYnkgZm9jdXNpbmcgb24gdGVjaG5pcXVlcyByYXRoZXIgdGhhbiBwcm9qZWN0cy4gSW4gdGhlIHNhbWUgeWVhciBhbm90aGVyIHN1cnZleSB3YXMgZG9uZSBieSBTYWVlZCBhbmQgV2FoZWVkIFsxM10gZm9jdXNpbmcgb24gYXJjaGl0ZWN0dXJlcyBpbiB0aGUgY29udGV4dC1hd2FyZSBtaWRkbGV3YXJlIGRvbWFpbi4gQmFuZHlvcGFkaHlheSBldCBhbC4gWzE0XSBoYXZlIGNvbmR1Y3RlZCBhIHN1cnZleSBvbiBleGlzdGluZyBwb3B1bGFyIEludGVybmV0IG9mIFRoaW5ncyBtaWRkbGV3YXJlIHNvbHV0aW9ucyBpbiAyMDExLkluIDIwMTIsIE1ha3Jpc1wiXSxcIjIwNTk3MjUyNDZcIjpbXCJIeWRyYSBbNjFdXCIsXCJIeWRyYTMgWzYxXSBpcyBhbiBJb1QgbWlkZGxld2FyZSB0aGF0IGFpbXMgdG8gaW50ZWdyYXRlIHdpcmVsZXNzIGRldmljZXMgYW5kIHNlbnNvcnMgaW50byBhbWJpZW50IGludGVsbGlnZW5jZSBzeXN0ZW1zLlwiLFwiNikgRHluYW1pYyBDb25maWd1cmF0aW9uIGFuZCBFeHRlbnNpb25zOiBIeWRyYSBbNjFdIGlzIG9uZSBvZiB0aGUgZWFybHkgZWZmb3J0cyBhdCBidWlsZGluZyBJb1QgbWlkZGxld2FyZSB3aGljaCBmb2N1c2VzIG9uIGNvbm5lY3RpbmcgZW1iZWRkZWQgZGV2aWNlcyB0byBhcHBsaWNhdGlvbnMuXCJdLFwiMjA2MTg3NzE2NlwiOltcIigyKSBEaXN0cmlidXRlZCBhcmNoaXRlY3R1cmUgZW5hYmxlcyBwZWVyLXRvLXBlZXIgaW50ZXJhY3Rpb24gaW4gYSBkaXN0cmlidXRlZCBmYXNoaW9uLCBzdWNoIGFzIGluIFNvbGFyIFsxODRdLlwiLFwiMTgpIER5bmFtaWMgQ29tcG9zaXRpb246IEFzIGV4cGxhaW5lZCBpbiBTb2xhciBbMTg0XSwgSW9UIHNvbHV0aW9ucyBtdXN0IGhhdmUgYSBwcm9ncmFtbWluZyBtb2RlbCB0aGF0IGFsbG93cyBkeW5hbWljIGNvbXBvc2l0aW9uIHdpdGhvdXQgcmVxdWlyaW5nIHRoZSBkZXZlbG9wZXIgb3IgdXNlciB0byBpZGVudGlmeSBzcGVjaWZpYyBzZW5zb3JzIGFuZCBkZXZpY2VzLlwiLFwiU29sYXIgWzE4NF0gMjAwMiBNIEssTSxPYiBSIFAgMiDigJMg4oCTIEQgSCBQIEEg4oCTIOKAk1wiLFwiRm9yIGV4YW1wbGUsIGRhdGEgbW9kZWxsaW5nIGFuZCBjb21tdW5pY2F0aW9uIGNhbiBiZSBkb25lIHVzaW5nIGRpZmZlcmVudCB0ZWNobmlxdWVzIGFzIGZvbGxvd3Mgd2hlcmUgZWFjaCBtZXRob2QgaGFzIGl0cyBvd24gYWR2YW50YWdlcyBhbmQgZGlzYWR2YW50YWdlcyBbMTg0XS5cIl0sXCIyMDY0NTMwMzAzXCI6W1wicyBjb25zaWRlciBhIHNpdHVhdGlvbiB3aGVyZSBhbiBlbnZpcm9ubWVudGFsIHNjaWVudGlzdCB3YW50cyB0byBtZWFzdXJlIGVudmlyb25tZW50YWwgcG9sbHV0aW9uIGluIE5ldyBZb3JrIGNpdHkuIFRoZXJlIGFyZSB0d28gbWFpbiBwcm9ibGVtczogKDEpIOKAmHdoYXQgc2Vuc29ycyBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHBvbGx1dGlvbj/igJkgWzIyOF0gKDIpIHdoZW4gdGhlcmUgYXJlIG11bHRpcGxlIHNlbnNvcnMgdGhhdCBjYW4gbWVhc3VyZSB0aGUgc2FtZSBwYXJhbWV0ZXIgKGUuZy4gcEggY29uY2VudHJhdGlvbiBpbiBhIGxha2UpLCDigJh3aGF0IHNlbnNvciBzaG91bGQgYmUgdXNlZD/igJkgWzIyOV0gSW4gb3JkZXIgdG8gYW5zd2VyIHF1ZXN0aW9uICgxKSwgZG9tYWluIGtub3dsZWRnZSBuZWVkcyBcIl0sXCIyMDcxMzc2ODU1XCI6W1wic3NpbmcgaW4gdGhlIO+sgXJzdCBmZXcgbGF5ZXJzIGNvdWxkIHJlZHVjZSBkYXRhIGNvbW11bmljYXRpb24uIEhvd2V2ZXIsIGRldmljZXMgaW4gdGhlIO+sgXJzdCBmZXcgbGF5ZXJzIGRvIG5vdCBoYXZlIGEgc3Vm76yBY2llbnQgYW1vdW50IG9mIGVuZXJneSBhbmQgcHJvY2Vzc2luZyBwb3dlciB0byBkbyBjb21wcmVoZW5zaXZlIGRhdGEgcHJvY2Vzc2luZyBbNDddLklvVCByZXNlYXJjaCBuZWVkcyB0b++sgW5kIG1vcmUgZWbvrIFjaWVudCBhbmQgZWZmZWN0aXZlIHdheXMgb2YgZGF0YSBtYW5hZ2VtZW50LCBzdWNoIGFzIGNvbGxlY3RpbmcsIG1vZGVsbGluZywgcmVhc29uaW5nLCBkaXN0cmlidXRpbmcuIEcuIFJlbGF0aW9uc2hpcCBCZXR3ZWVuIFNlbnNvciBOZXR3b3JrcyBhbmQgSW9UIEluIGVhcmxpZXIgc2VjdGlvXCJdLFwiMjA4NTM3NDY1MlwiOltcIiAxIOKAkyBYIFggRCBIIOKAkyBTIOKAkyDigJMg4oCTIOKAkyBYIENBUklTTUEgWzE5M10gMjAwMyBNIE0gUiBRIDIg4oCTIOKAkyDigJMg4oCTIEgg4oCTIE0gQyDigJMg4oCTIOKAkyDigJMgQ29CckEgWzExOV0gMjAwNCBNIE9uIFIsTyBRIDEgWCBYIFgg4oCTIEggWCBBIOKAkyDigJMg4oCTIOKAkyDigJMgR2FpYSBbMTY4XSAyMDA0IE0gRixPbiBTLFAsIEYgUSAyLDMgWCBYIFggRCBIIFggQSDigJMg4oCTIFgg4oCTIFggU09DQU0gWzE5NF0gMjAwNCBNIE9uIFIsTyBRLFAgMyBYIFggWCBEIEgg4oCTIEEg4oCTIEEg4oCTIOKAkyBYIENBUlMgWzE5NV0gMjAwNSBTIEsgVSDigJMg4oCTIOKAkyDigJMgWCBBIEgg4oCTIFAg4oCTIOKAkyDigJMg4oCTIOKAkyBDQVNOIFsxODhdIDIwMDUgTSBGLE9uIEYsTyBQIDIg4oCTIFgg4oCTIEQgTCDigJMgUCDigJMg4oCTIOKAkyDigJMg4oCTIFNDSyBbMTQyXSAyMDA1IE0gTSxPbiBSLE8gUSAxIFggWCBYIEEsRCBIIOKAkyBBIFYg4oCTIFwiLFwiYXBwcm9wcmlhdGUgY29udGV4dCBwcm92aWRlcnMgY2FuIGJlIGZvdW5kIGJhc2VkIG9uIHRoZWlyIGNhcGFiaWxpdGllcyB3aGVuIHJlcXVpcmVkKSwgY29udGV4dCBoaXN0b3J5IHNlcnZpY2UgKHN0b3JlcyBoaXN0b3J5IG9mIGNvbnRleHQpLCBhbmQgb250b2xvZ3kgc2VydmVyIChtYWludGFpbnMgZGlmZmVyZW50IG9udG9sb2dpZXMpLiBTT0NBTSBbMTk0XSAoU2VydmljZSBPcmllbnRlZCBDb250ZXh0LUF3YXJlIE1pZGRsZXdhcmUpIGlzIGFuIG9udG9sb2d5IGJhc2VkIGNvbnRleHQtYXdhcmUgbWlkZGxld2FyZS4gSXQgc2VwYXJhdGVzIHRoZSBvbnRvbG9naWVzIGludG8gdHdvIGxldmVsczogdXBwZXIgbGV2ZWwgb250b2xvZ3kgZm9yIGdlbmVyYWwgY29uY2VwdHMgYW5kIGxvd2VyIGxldmVsIG9udG9sXCIsXCJlbGxpbmc6IER1ZSB0byB1bnByZWRpY3RhYmlsaXR5IGFuZCBicm9hZG5lc3Mgb2YgSW9ULCBkYXRhIG1vZGVscyBuZWVkIHRvIGJlIGV4dGVuc2libGUgb24gZGVtYW5kLiBGb3IgZXhhbXBsZSwgSW9UIHNvbHV0aW9ucyBtYXkgbmVlZCB0byBiZSBleHBhbmQgaXRzIGtub3dsZWRnZS1iYXNlIHRvd2FyZHMgZGlmZmVyZW50IGRvbWFpbnMuIFNPQ0FNIFsxOTRdIHNob3dzIGhvdyBrbm93bGVkZ2UgY2FuIGJlIHNlcGFyYXRlZCBhbW9uZyBkaWZmZXJlbnQgbGV2ZWxzIG9mIG9udG9sb2dpZXM6IHVwcGVyIG9udG9sb2d5IGFuZCBkb21haW4gc3BlY2nvrIFjIG9udG9sb2d5LiBJbiBTT0NBTSwgdXBwZXIgb250b2xvZ3kgbW9kZWxzIGdlbmVyYWwgcHVycG9zZSBkYXRhIHdoaWxlIGRvbWFpbiBzcGVjae+sgWMgb250b2xvXCJdLFwiMjA5MDQxNTYwM1wiOltcIkNPUEFMIFsyMTVdIDIwMTAgTSBNIFIgUCxRIDEsNSDigJMg4oCTIEQgSCBWIEEsRiDigJNcIixcIkluIGxpbmUgd2l0aCBhYm92ZSBzb2x1dGlvbnMsIENPUEFMIFsyMTVdIGRlbW9uc3RyYXRlcyB0aGUgZXNzZW50aWFsIGZlYXR1cmVzIElvVCBtaWRkbGV3YXJlIHNob3VsZCBoYXZlLCBzdWNoIGFzIGxvb3NlbHkgY291cGxlZCBwbHVnaW4gYXJjaGl0ZWN0dXJlIGFuZCBhdXRvbWF0ZWQgY29kZSBnZW5lcmF0aW9uIHZpYSBhYnN0cmFjdHMgd2hpY2ggc3RpbXVsYXRlcyBleHRlbmRpYmlsaXR5IGFuZCB1c2FiaWxpdHkuXCJdLFwiMjA5MDUwNDM2NlwiOltcIlNldmVyYWwgZXhhbXBsZXMgb2YgYXBwbHlpbmcgZnV6enkgbG9naWMgdG8gcmVwcmVzZW50IGNvbnRleHQgaW5mb3JtYXRpb24gYXJlIHByZXNlbnRlZCBpbiBbMTcwXSwgWzE3MV0uXCIsXCJJbiBbMTcxXSwgWzE3N10sIGl0IGhhcyBiZWVuIHVzZWQgdG8gdW5kZXJzdGFuZCB3aGV0aGVyIHRoZXJlIGlzIGEgbWVldGluZyBpbiB0aGUgcm9vbS5cIl0sXCIyMDkxMTk0MTMxXCI6W1wiVGVsZWNvbW11bmljYXRpb24sIG1lZGljYWwgdGVjaG5vbG9neSBbMzNdLCBoZWFsdGhjYXJlLCBzbWFydCBidWlsZGluZywgaG9tZSBbMzRdIGFuZCBvZmZpY2UsIG1lZGlhLCBlbnRlcnRhaW5tZW50LCBhbmQgdGlja2V0aW5nIGFyZSBzb21lIG9mIHRoZSBzb2NpZXR5IGZvY3VzZWQgYXBwbGljYXRpb25zIG9mIElvVC5cIl0sXCIyMDkxNzU3MjgzXCI6W1wiVGhlIHVsdGltYXRlIGdvYWwgaXMgdG8gY3JlYXRlIOKAmGEgYmV0dGVyIHdvcmxkIGZvciBodW1hbiBiZWluZ3PigJksIHdoZXJlIG9iamVjdHMgYXJvdW5kIHVzIGtub3cgd2hhdCB3ZSBsaWtlLCB3aGF0IHdlIHdhbnQsIGFuZCB3aGF0IHdlIG5lZWQgYW5kIGFjdCBhY2NvcmRpbmdseSB3aXRob3V0IGV4cGxpY2l0IGluc3RydWN0aW9ucyBbMjZdLlwiXSxcIjIwOTU4NDE1MDlcIjpbXCJJdCBoYXMgYWxyZWFkeSBiZWNvbWUgYSBzZXJ2aWNlOiBDb250ZXh0LWFzLWEtU2VydmljZSAoQ1hhYVMpIFsxMDldLlwiLFwiWzEwOV0gaGF2ZSBjbGFzc2lmaWVkIGRhdGEgbGlmZSBjeWNsZXMgaW50byB0d28gY2F0ZWdvcmllczogRW50ZXJwcmlzZSBMaWZlY3ljbGUgQXBwcm9hY2hlcyAoRUxBKSBhbmQgQ29udGV4dCBMaWZlY3ljbGUgQXBwcm9hY2hlcyAoQ0xBKS5cIixcIjkpIFdDWE1TIExpZmVjeWNsZSBbMTA5XTogKGNvbnRleHQgc2Vuc2luZyDihpIgY29udGV4dCB0cmFuc21pc3Npb24g4oaSIGNvbnRleHQgYWNxdWlzaXRpb24g4oaSIC5cIl0sXCIyMDk2MTgzNzA0XCI6W1wiQ0RNUyBbMjAzXSAyMDA4IE0gSyxNIFIgUSAyIOKAkyBEIEgg4oCTIEEg4oCTIEEsRiDigJMg4oCTXCIsXCI0KSBIeWJyaWQgUmVhc29uaW5nOiBHYWlhIFsxNjhdLCBLbyBhbmQgU2ltIFsxNDFdLCBDRE1TIFsyMDNdLCBhbmQgSENvTSBbMTk4XSBoaWdobGlnaHQgdGhlIGltcG9ydGFuY2Ugb2YgZW1wbG95aW5nIG11bHRpcGxlIHJlYXNvbmluZyB0ZWNobmlxdWVzIHN1Y2ggYXMgQmF5ZXNpYW4gbmV0d29ya3MsIHByb2JhYmlsaXN0aWMgYW5kIGZ1enp5IGxvZ2ljLCB3aGVyZSBlYWNoIHRlY2huaXF1ZSBwZXJmb3JtcyB3ZWxsIGluIGRpZmZlcmVudCBzaXR1YXRpb25zLlwiXSxcIjIwOTcwMjI1MTVcIjpbXCJTZXZlcmFsIGV4YW1wbGVzIG9mIGFwcGx5aW5nIGZ1enp5IGxvZ2ljIHRvIHJlcHJlc2VudCBjb250ZXh0IGluZm9ybWF0aW9uIGFyZSBwcmVzZW50ZWQgaW4gWzE3MF0sIFsxNzFdLlwiXSxcIjIwOTg2NDQ3ODdcIjpbXCIgMyBYIFggWCBEIEgg4oCTIEEg4oCTIEEg4oCTIOKAkyBYIENBUlMgWzE5NV0gMjAwNSBTIEsgVSDigJMg4oCTIOKAkyDigJMgWCBBIEgg4oCTIFAg4oCTIOKAkyDigJMg4oCTIOKAkyBDQVNOIFsxODhdIDIwMDUgTSBGLE9uIEYsTyBQIDIg4oCTIFgg4oCTIEQgTCDigJMgUCDigJMg4oCTIOKAkyDigJMg4oCTIFNDSyBbMTQyXSAyMDA1IE0gTSxPbiBSLE8gUSAxIFggWCBYIEEsRCBIIOKAkyBBIFYg4oCTIOKAkyDigJMgWCBUUkFJTEJMQVpFUiBbMTk2XSAyMDA1IFMgSyBSIFEgMiDigJMg4oCTIOKAkyBEIEwg4oCTIFAg4oCTIOKAkyDigJMg4oCTIOKAkyBCSU9ORVRTIFsxOTddIDIwMDYgTSBPbiBSLE8gUSAxIOKAkyBYIOKAkyBBIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTIOKAkyBQUk9DT04gWzg2XSAyMDA2IFMgSyBSIFEgMiDigJMg4oCTIFggRCBMIOKAkyBQIOKAkyBBLEYg4oCTIOKAkyDigJMgQ01GIChNQUdORVQpIFs4NV0gMjAwNiBNIE0gUiBQLFEgMiw0IFgg4oCTIOKAkyBEIEgg4oCTIEEgXCIsXCJzIHVzaW5nIGVhY2ggb3RoZXLigJlzIHN0cmVuZ3Rocy4gQ09TQVIgWzE1MV0gY29tYmluZXMgc3RhdGlzdGljYWwgcmVhc29uaW5nIGFuZCBvbnRvbG9naWNhbCByZWFzb25pbmcgdGVjaG5pcXVlcyB0byBhY2hpZXZlIG1vcmUgYWNjdXJhdGUgcmVzdWx0cy4gNSkgSGFyZHdhcmUgTGF5ZXIgU3VwcG9ydDogRU1vQ0FTTiBbMjA1XSwgVFJBSUxCTEFaRVIgWzE5Nl0gYW5kIENBU04gWzE4OF0gc2hvd3MgdGhlIGltcG9ydGFuY2Ugb2YgZW1iZWRkaW5nIGNvbnRleHQtYXdhcmUgY2FwYWJpbGl0aWVzIGluIGxvdyAoaGFyZHdhcmUpIGxheWVyIGNvbW11bmljYXRpb24uIENvbnRleHQgYXdhcmVuZXNzIGFsbG93cyBzZW5zb3JzIHRvIGFjdCBtb3JlIGludGVsbGlnZW50bHkgYW5kIHNhdmUgZW5lcmd5LiBJbiB0aGUgSVwiXSxcIjIwOTk4OTU3MTRcIjpbXCJbOTVdICgyMDA1KTogSW5zdGVhZCBvZiBjYXRlZ29yaXNpbmcgY29udGV4dCwgdGhleSBjbGFzc2lmaWVkIHRoZSBjb250ZXh0IGNhdGVnb3Jpc2F0aW9uIHNjaGVtZXMgaW50byB0d28gYnJvYWRlciBjYXRlZ29yaWVzOiBvcGVyYXRpb25hbCBhbmQgY29uY2VwdHVhbC5cIl0sXCIyMTAwNjE0NzAzXCI6W1wiZWxwcyB0byBkZXRlcm1pbmUgaXRzIGludGVycHJldGF0aW9u4oCdICBEZe+sgW5pdGlvbiBieSBMb25nbWFuIFs4NF06IOKAnFRoZSBzaXR1YXRpb24sIGV2ZW50cywgb3IgaW5mb3JtYXRpb24gdGhhdCBhcmUgcmVsYXRlZCB0byBzb21ldGhpbmcgYW5kIHRoYXQgaGVscCB5b3UgdG8gdW5kZXJzdGFuZCBpdOKAnSBJbiBhZGRpdGlvbiwgU2FuY2hleiBldCBhbC4gWzg1XSBleHBsYWluZWQgdGhlIGRpc3RpbmN0aW9uIGJldHdlZW4gcmF3IGRhdGEgYW5kIGNvbnRleHQgaW5mb3JtYXRpb24gYXMgZm9sbG93czogIFJhdyAoc2Vuc29yKSBkYXRhOiBJcyB1bnByb2Nlc3NlZCBhbmQgcmV0cmlldmVkIGRpcmVjdGx5IGZyb20gdGhlIGRhdGEgc291cmNlLCBzdWNoIGFzIHNlbnNvcnMuICBDb250ZXh0IGluZm9ybWF0aW9uOlwiLFwicyBzdWNoIGFzIEdhaWEgWzE2OF0uICg0KSBOb2RlIGJhc2VkIGFyY2hpdGVjdHVyZSBhbGxvd3MgdG8gZGVwbG95bWVudCBvZiBwaWVjZXMgb2Ygc29mdHdhcmUgd2l0aCBzaW1pbGFyIG9yIGRpZmZlcmVudCBjYXBhYmlsaXRpZXMsIHdoaWNoIGNvbW11bmljYXRlIGFuZCBjb2xsZWN0aXZlbHkgcHJvY2VzcyBkYXRhIGluIHNlbnNvciBuZXR3b3JrcyBbODVdLiAoNSkgQ2VudHJhbGlzZWQgYXJjaGl0ZWN0dXJlIHdoaWNoIGFjdHMgYXMgYSBjb21wbGV0ZSBzdGFjayAoZS5nLiBtaWRkbGV3YXJlKSBhbmQgcHJvdmlkZXMgYXBwbGljYXRpb25zIHRvIGJlIGRldmVsb3BlZCBvbiB0b3Agb2YgdGhhdCwgYnV0IHByb3ZpZGVzIG5vIGNvbW11bmljYXRpb24gYmV0d2VlbiBkaWZmZXJlbnQgaW5zdGFuY2VzIG9mIHRcIixcIiBBLEQgSCDigJMgQSBWIOKAkyDigJMg4oCTIFggVFJBSUxCTEFaRVIgWzE5Nl0gMjAwNSBTIEsgUiBRIDIg4oCTIOKAkyDigJMgRCBMIOKAkyBQIOKAkyDigJMg4oCTIOKAkyDigJMgQklPTkVUUyBbMTk3XSAyMDA2IE0gT24gUixPIFEgMSDigJMgWCDigJMgQSBIIOKAkyBBIOKAkyDigJMg4oCTIOKAkyDigJMgUFJPQ09OIFs4Nl0gMjAwNiBTIEsgUiBRIDIg4oCTIOKAkyBYIEQgTCDigJMgUCDigJMgQSxGIOKAkyDigJMg4oCTIENNRiAoTUFHTkVUKSBbODVdIDIwMDYgTSBNIFIgUCxRIDIsNCBYIOKAkyDigJMgRCBIIOKAkyBBIEMg4oCTIFgg4oCTIOKAkyBlLVNFTlNFIFs0NF0gMjAwNiBNIOKAkyBSIFEgMiw0IOKAkyBYIOKAkyBEIEggWCBQIOKAkyBGIOKAkyDigJMg4oCTIEhDb00gWzE5OF0gMjAwNyBNIEcsT24gUixPIFEgNSBYIFgg4oCTIEQgSCDigJMgUyBWIEYg4oCTIOKAkyBYIENNUyBbMTA2XSAyMDA3IE0gT24gTyBQLFEgMSwyIFgg4oCTIFggUyBIIOKAkyBBIOKAkyBBXCIsXCJ2aWNlcyBzdWNoIGFzIGNhbWVyYXMsIHdlYiBjYW1zLCBhbmQgbWljcm93YXZlczsgYnV0LCBub3QgZm9yIGxvdyBlbmQgdGVtcGVyYXR1cmUgb3IgaHVtaWRpdHkgc2Vuc29ycy4gVVBuUCBhcHByb2FjaCBpcyBhIGtleSB0ZWNobm9sb2d5IHRoYXQgZW5hYmxlcyBhdXRvbWF0ZWQgY29u76yBZ3VyYXRpb24uIFNvbGFyIFsxODRdLCBDTUYgKE1BR05FVCkgWzg1XSwgYW5kIENPU01PUyBbMjAxXSBwcm9tb3RlIHRoZSBub3Rpb24gb2YgZHluYW1pYyBjb21wb3NpdGlvbiB3aGljaCBpcyBjcml0aWNhbCBpbiBJb1Qgc29sdXRpb25zIHdoZXJlIHBvc3NpYmxlIGludGVyYWN0aW9ucyBjYW5ub3QgYmUgaWRlbnRp76yBZWQgYXQgdGhlIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQgc3RhZ2UuIGV6Q29udGV4dCBbMTA1XSBzaGFcIl0sXCIyMTAzNTg4MjYzXCI6W1wiZW5zZSBhbmQgc2VuZCBkYXRhIHRvIHRoZSBzb2Z0d2FyZSBldmVyeSAyMCBzZWNvbmRzKS4gQm90aCBwdXNoIGFuZCBwdWxsIG1ldGhvZHMgY2FuIGJlIGVtcGxveWVkLiAzKSBCYXNlZCBvbiBTb3VyY2U6IEluIGFkZGl0aW9uLCBjb250ZXh0IGFjcXVpc2l0aW9uIG1ldGhvZHMgY2FuIGJlIGNhdGVnb3Jpc2VkIGludG8gdGhyZWUgY2F0ZWdvcmllcyBbMTE5XSBiYXNlZCBvbiB3aGVyZSB0aGUgY29udGV4dCBjYW1lIGZyb20uIEEgY29tcGFyaXNvbiBpcyBwcmVzZW50ZWQgaW4gVGFibGUgVklJLiAgQWNxdWlyZSBkaXJlY3RseSBmcm9tIHNlbnNvciBoYXJkd2FyZTogSW4gdGhpcyBtZXRob2QsIGNvbnRleHQgaXMgZGlyZWN0bHkgYWNxdWlyZWQgZnJvbSB0aGUgc2Vuc29yIGJ5IGNvbW11bmljYXRpbmcgd2lcIixcIiByZWxhdGlvbnNoaXBzIGFuZCBjb250ZXh0LiBJVCBhbHNvIHByb3ZpZGVzIGNvbXByZWhlbnNpdmUgcmVhc29uaW5nIG1lY2hhbmlzbXMgYXMgd2VsbC4gT250b2xvZ2llcyBhbHNvIGFsbG93IGtub3dsZWRnZSBzaGFyaW5nIGFuZCB0aGV5IGRlY291cGxlIHRoZSBrbm93bGVkZ2UgZnJvbSB0aGUgYXBwbGljYXRpb24gYW5kIHByb2dyYW0gY29kZXMgWzExOV0uIFRoZXJlIGFyZSBzZXZlcmFsIHJlYXNvbnMgdG8gZGV2ZWxvcCBhbmQgdXNlIG9udG9sb2dpZXMgaW4gY29udHJhc3QgdG8gb3RoZXIgbW9kZWxsaW5nIHRlY2huaXF1ZXMuIFRoZSBtb3N0IGNvbW1vbiByZWFzb25zIGFyZSB0byBbMTM1XSwgWzEzNl0gc2hhcmUgYSBjb21tb24gdW5kZXJzdGFuZGluZyBvZiB0aGUgc3RydWN0dXJlIG9mIGluZm9ybVwiLFwibGV4LCBvbnRvbG9naWVzIGNhbiBiZWNvbWVzIGV4Y2VlZGluZ2x5IGNvbXBsZXggY2F1c2luZyB0aGUgcmVhc29uaW5nIHByb2Nlc3MgdG8gYmUgcmVzb3VyY2UgaW50ZW5zaXZlIGFuZCBzbG93LiBIb3dldmVyLCBzb21lIG9mIHRoZSBtYWluIHJlYXNvbnMgdG8gY2hvb3NlIE9XTCBhcyB0aGUgY29udGV4dCBtb2RlbGxpbmcgbWVjaGFuaXNtIGFyZSBbMTE5XSwgWzE0Ml0uICBXM0Mgc3Ryb25nbHkgc3VwcG9ydHMgdGhlIHN0YW5kYXJkaXNhdGlvbiBvZiBPV0wuIFRoZXJlZm9yZSwgYSB2YXJpZXR5IG9mIGRldmVsb3BtZW50IHRvb2xzIGFyZSBhdmFpbGFibGUgZm9yIGludGVncmF0aW5nIGFuZCBtYW5hZ2luZyBPV0wgb250b2xvZ2llcywgd2hpY2ggbWFrZXMgaXQgZWFzaWVyIHRvIGRldmVsb3AgYW5kIHNcIixcIiBLLE0sT2IgUiBQIDIg4oCTIOKAkyBYIEQgSCBYIFAgWCBBIFgg4oCTIOKAkyBBdXJhIFsxOTFdIDIwMDIgTSBNIFIgUCAyIOKAkyDigJMgWCBEIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTIFggQ29PTCBbMTkyXSAyMDAzIFQgT24gUixPIFEgMSDigJMgWCBYIEQgSCDigJMgUyDigJMg4oCTIOKAkyDigJMgWCBDQVJJU01BIFsxOTNdIDIwMDMgTSBNIFIgUSAyIOKAkyDigJMg4oCTIOKAkyBIIOKAkyBNIEMg4oCTIOKAkyDigJMg4oCTIENvQnJBIFsxMTldIDIwMDQgTSBPbiBSLE8gUSAxIFggWCBYIOKAkyBIIFggQSDigJMg4oCTIOKAkyDigJMg4oCTIEdhaWEgWzE2OF0gMjAwNCBNIEYsT24gUyxQLCBGIFEgMiwzIFggWCBYIEQgSCBYIEEg4oCTIOKAkyBYIOKAkyBYIFNPQ0FNIFsxOTRdIDIwMDQgTSBPbiBSLE8gUSxQIDMgWCBYIFggRCBIIOKAkyBBIOKAkyBBIOKAkyDigJMgWCBDQVJTIFsxOTVdIDIwMDUgUyBLIFUg4oCTIOKAkyDigJMg4oCTIFggQSBIIOKAkyBQIOKAk1wiLFwiIGluIGF1Y3Rpb25zIHdpdGggZGlmZmVyZW50IGNvbnN0cmFpbnRzIGltcG9zZWQgb24gdGhlIGJpZGRpbmcgYnkgZGlmZmVyZW50IGFnZW50cyAoYWxzbyBjYWxsZWQgYXBwbGljYXRpb25zKS4gRmluYWwgZGVjaXNpb25zIGFyZSBtYWRlIGluIG9yZGVyIHRvIG1heGltaXNlIHRoZSBzb2NpYWwgd2VsZmFyZSBhbW9uZyB0aGUgYWdlbnRzLiBDb0JyQSBbMTE5XSAoQ29udGV4dCBCcm9rZXIgQXJjaGl0ZWN0dXJlKSBpcyBhIGJyb2tlcmNlbnRyaWMgYWdlbnQgYXJjaGl0ZWN0dXJlIHRoYXQgcHJvdmlkZXMga25vd2xlZGdlIHNoYXJpbmcgYW5kIGNvbnRleHQgcmVhc29uaW5nIGZvciBzbWFydCBzcGFjZXMuIEl0IGlzIHNwZWNpYWxseSBmb2N1c2VkIG9uIHNtYXJ0IG1lZXRpbmcgcGxhY2VzLiBDb0JyQSBhZGRyXCJdLFwiMjEwNTEwMzc3N1wiOltcIiB0aGUgSW50ZXJuZXQgb2YgVGhpbmdzPyBEdXJpbmcgdGhlIHBhc3QgZGVjYWRlLCB0aGUgSW9UIGhhcyBnYWluZWQgc2lnbmnvrIFjYW50IGF0dGVudGlvbiBpbiBhY2FkZW1pYSBhcyB3ZWxsIGFzIGluZHVzdHJ5LiBUaGUgbWFpbiByZWFzb25zIGJlaGluZCB0aGlzIGludGVyZXN0IGFyZSB0aGUgY2FwYWJpbGl0aWVzIHRoYXQgdGhlIElvVCBbMjJdLCBbMjNdIHdpbGwgb2ZmZXIuIEl0IHByb21pc2VzIHRvIGNyZWF0ZSBhIHdvcmxkIHdoZXJlIGFsbCB0aGUgb2JqZWN0cyAoYWxzbyBjYWxsZWQgc21hcnQgb2JqZWN0cyBbMjRdKSBhcm91bmQgdXMgYXJlIGNvbm5lY3RlZCB0byB0aGUgSW50ZXJuZXQgYW5kIGNvbW11bmljYXRlIHdpdGggZWFjaCBvdGhlciB3aXRoIG1pbmltdW0gaHVtYW4gaW50ZXJ2ZW50aW9cIixcImhlIElvVCwgaW50ZXJjb25uZWN0aW9uIGFuZCBjb21tdW5pY2F0aW9uIGJldHdlZW4gZXZlcnlkYXkgb2JqZWN0cywgZW5hYmxlcyBtYW55IGFwcGxpY2F0aW9ucyBpbiBtYW55IGRvbWFpbnMuIFRoZSBhcHBsaWNhdGlvbiBkb21haW4gY2FuIGJlIG1haW5seSBkaXZpZGVkIGluIHRvIHRocmVlIGNhdGVnb3JpZXMgYmFzZWQgb24gdGhlaXIgZm9jdXMgWzIzXSwgWzRdOiBpbmR1c3RyeSwgZW52aXJvbm1lbnQsIGFuZCBzb2NpZXR5LiBUaGUgbWFnbml0dWRlIG9mIHRoZSBhcHBsaWNhdGlvbnMgY2FuIGJlIHNlZW4gaW4gdGhlIHN0YXRpc3RpY3MgcHJlc2VudGVkIGluIFNlY3Rpb24gSUktRC4gU3VwcGx5IGNoYWluIG1hbmFnZW1lbnQgWzMxXSwgdHJhbnNwb3J0YXRpb24gYW5kIGxvZ2lzdGljcyBbMzJdLCBhXCJdLFwiMjEwNTI5NDc1MVwiOltcIktob28gWzEzNF0gaGFzIGV4cGxhaW5lZCB0aGUgZXZvbHV0aW9uIG9mIHRoZSB3ZWIgaW4gZm91ciBzdGFnZXM6IGJhc2ljIEludGVybmV0IGFzIFdlYiAxLlwiXSxcIjIxMDU1OTY2NzRcIjpbXCJbNzZdLCBhbmQgV2FyZCBldCBhbC5cIl0sXCIyMTA2ODAwOTc0XCI6W1wiZWJEdXN0LCBIb3VyZ2xhc3MsIEhpRmksIENvdWdhciwgSW1wYWxhLCBTSU5BLCBNYXRlLCBUaW55REIsIFNtYXJ0IE9iamVjdCwgQWdpbGxhLCBUaW55Q3VidXMsIFRpbnlMaW1lLCBFbnZpcm9UcmFjaywgTWlyZXMsIEhvb2QsIGFuZCBTbWFydCBNZXNzYWdlcy4gU29tZSBvZiB0aGUgYWJvdmUgYXBwcm9hY2hlcyBhcmUgc3VydmV5ZWQgaW4gWzhdLCBbNDVdLiBBIHN1cnZleSBvbiB3ZWIgYmFzZWQgd2lyZWxlc3Mgc2Vuc29yIGFyY2hpdGVjdHVyZXMgYW5kIGFwcGxpY2F0aW9ucyBpcyBwcmVzZW50ZWQgaW4gWzQ2XS4gSUVFRSBDT01NVU5JQ0FUSU9OUyBTVVJWRVlTICZhbXA7IFRVVE9SSUFMUywgVk9MLiBYLCBOTy4gWCwgWFhYWCBYWFhYIDUgRi4gTGF5ZXJzIGluIFNlbnNvciBOZXR3b3JrcyBXZSBoYXZcIl0sXCIyMTA3NDk4NzMwXCI6W1wiQWdyaWN1bHR1cmUgYW5kIGJyZWVkaW5nIFszNV0sIFszNl0sIHJlY3ljbGluZywgZGlzYXN0ZXIgYWxlcnRpbmcsIGVudmlyb25tZW50YWwgbW9uaXRvcmluZyBhcmUgc29tZSBvZiB0aGUgZW52aXJvbm1lbnQgZm9jdXNlZCBhcHBsaWNhdGlvbnMuXCJdLFwiMjEwODM5ODM3OFwiOltcImcgb24gYXJjaGl0ZWN0dXJlcyBpbiB0aGUgY29udGV4dC1hd2FyZSBtaWRkbGV3YXJlIGRvbWFpbi4gQmFuZHlvcGFkaHlheSBldCBhbC4gWzE0XSBoYXZlIGNvbmR1Y3RlZCBhIHN1cnZleSBvbiBleGlzdGluZyBwb3B1bGFyIEludGVybmV0IG9mIFRoaW5ncyBtaWRkbGV3YXJlIHNvbHV0aW9ucyBpbiAyMDExLkluIDIwMTIsIE1ha3JpcyBldCBhbC4gWzE1XSBoYXZlIGNvbmR1Y3RlZCBhIHN1cnZleSBvbiBjb250ZXh0LWF3YXJlIG1vYmlsZSBhbmQgd2lyZWxlc3MgbmV0d29ya2luZyAoQ0FNb1dpTikgZG9tYWluIHdoZXJlIHRoZXkgaGF2ZSBpZGVudGnvrIFlZCBhbGwgdGhlIHBvc3NpYmxlIGNvbXBvbmVudHMgb2YgYSB0eXBpY2FsIENBTW9XaU4gYXJjaGl0ZWN0dXJlLlRoZSBsYXRlc3Qgc3VydmV5IGlzIGRcIl0sXCIyMTEyODMwNjEyXCI6W1wiQ09TTU9TIFsyMDFdIDIwMDggTSBPYiBSIFEgMiw0IOKAkyDigJMg4oCTIEgg4oCTIFAg4oCTIEEg4oCTXCIsXCJTb2xhciBbMTg0XSwgQ01GIChNQUdORVQpIFs4NV0sIGFuZCBDT1NNT1MgWzIwMV0gcHJvbW90ZSB0aGUgbm90aW9uIG9mIGR5bmFtaWMgY29tcG9zaXRpb24gd2hpY2ggaXMgY3JpdGljYWwgaW4gSW9UIHNvbHV0aW9ucyB3aGVyZSBwb3NzaWJsZSBpbnRlcmFjdGlvbnMgY2Fubm90IGJlIGlkZW50aWZpZWQgYXQgdGhlIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQgc3RhZ2UuXCJdLFwiMjExMzA0MzAyOFwiOltcIkhvd2V2ZXIsIHNlbnNvciBuZXR3b3JrcyB3ZXJlIHVzZWQgaW4gbGltaXRlZCBkb21haW5zIHRvIGFjaGlldmUgc3BlY2lmaWMgcHVycG9zZXMsIHN1Y2ggYXMgZW52aXJvbm1lbnQgbW9uaXRvcmluZyBbNDBdLCBhZ3JpY3VsdHVyZSBbMzVdLCBtZWRpY2FsIGNhcmUgWzQxXSwgZXZlbnQgZGV0ZWN0aW9uIFs0Ml0sIHN0cnVjdHVyYWwgaGVhbHRoIG1vbml0b3JpbmcgWzQzXSwgZXRjLlwiXSxcIjIxMTMyNTAzMjNcIjpbXCJdLiBCYXllc2lhbiBOZXR3b3JrcyBpcyBhIHRlY2huaXF1ZSBiYXNlZCBvbiBwcm9iYWJpbGlzdGljIHJlYXNvbmluZyBjb25jZXB0cy4gSXQgdXNlcyBhbW9uZyB0aGVtLiBJdCBpcyBhIHdpZGVseSB1c2VkIHRlY2huaXF1ZSBpbiBzdGF0aXN0aWNhbCByZWFzb25pbmcuIEV4YW1wbGUgYXBwbGljYXRpb25zIGFyZSBwcmVzZW50ZWQgaW4gWzE0MV0sIFsxNTNdLiBCYXllc2lhbiBuZXR3b3JrcyBhcmUgY29tbW9ubHkgdXNlZCBpbiBjb21iaW5pbmcgdW5jZXJ0YWluIGluZm9ybWF0aW9uIGZyb20gYSBsYXJnZSBudW1iZXIgb2Ygc291cmNlcyBhbmQgZGVkdWNpbmcgaGlnaGVyLWxldmVsIGNvbnRleHRzLiBBcnRp76yBY2lhbCBuZXVyYWwgbmV0d29ya3MgaXMgYSB0ZWNobmlxdWUgdGhhdCBhdHRlbXB0cyB0byBtaVwiLFwiIDIwMTAgTSBNIFIgUSA1IFgg4oCTIFggRCxBIEgg4oCTIEEg4oCTIOKAkyDigJMgWCDigJMgQ09QQUwgWzIxNV0gMjAxMCBNIE0gUiBQLFEgMSw1IOKAkyDigJMgWCBEIEggWCBWIEEsRiDigJMgWCBYIE9jdG9wdXMgWzUwXSAyMDExIFMgWCBYIFAgMiw0IOKAkyDigJMgWCBEIEgg4oCTIEEg4oCTIEEgWCDigJMg4oCTIOKAlCBbMjE2XSAyMDExIE0g4oCTIFggUCAyIOKAkyDigJMg4oCTIEQgSCDigJMgUCDigJMgQSDigJMg4oCTIFgg4oCUIFsxNTNdIDIwMTEgUyBLLE9iIFMsUCAyLDQgWCBYIFggRCxBIEgg4oCTIE0gViBBLEYg4oCTIOKAkyBYIE5vdGVzOiBSZWZlciBTZWN0aW9uIFYtQSBmb3IgdGhlIG1lYW5pbmdzIG9mIHRoZSBhYmJyZXZpYXRpb25zIGFuZCBzeW1ib2xzIHVzZWQgaW4gdGhlIHRhYmxlIElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFhcIixcImdpdmVuIGF0dGVudGlvbiB3aGVyZSB0aGV5IGFyZSByYXJlbHkgYWRkcmVzc2VkIGJ5IG1hbnkgb3RoZXIgc29sdXRpb25zLiBTaGFyaW5nIGNvbnRleHQgaW5mb3JtYXRpb24gYWxsb3dzIG1vYmlsaXR5IGFuZCBzbW9vdGggdHJhbnNpdGlvbiBmcm9tIGRldmljZSB0byBkZXZpY2Ugb3Igc2l0dWF0aW9uIHRvIHNpdHVhdGlvbi4gUGFyayBldCBhbC4gWzE1M10gaGlnaGxpZ2h0IHRoZSBpbXBvcnRhbmNlIG9mIGNvbnRleHQgc2hhcmluZyB1c2luZyBtb2JpbGUgZGV2aWNlcywgd2hpY2ggYWxsb3dzIG1vcmUgY29tcHJlaGVuc2l2ZSBhbmQgYWNjdXJhdGUgcmVhc29uaW5nIGFuZCBoaWdoIGxldmVsIGNvbnRleHQgcmVjb2duaXRpb24uIDMpIE9uIERlbWFuZCBEYXRhIE1vZGVsbGluZzogRHVlIHRvIHVucHJlZFwiXSxcIjIxMTY3NzQ1OTZcIjpbXCIwOSBNIE9uIFIsTyBRIDIg4oCTIOKAkyBYIEEgSCBYIEEg4oCTIOKAkyDigJMg4oCTIOKAkyBDLUNBU1QgWzIwN10gMjAwOSBNIE0gUiBQLFEgNSBYIOKAkyBYIEQgSCDigJMgQSDigJMg4oCTIOKAkyDigJMgWCDigJQgWzIwOF0gMjAwOSBNIE9uIE8gUCA1IFgg4oCTIFggRCBIIOKAkyBBIOKAkyBBIOKAkyDigJMg4oCTIENEQSBbMjA5XSAyMDA5IE0gT2Ig4oCTIFEgNCw2IOKAkyDigJMg4oCTIOKAkyBIIOKAkyBWIOKAkyDigJMg4oCTIOKAkyBYIFNBTEVTIFsyMTBdIDIwMDkgTSBNIFIgUSAyLDQg4oCTIOKAkyBYIEQgTCDigJMgUCDigJMgRiDigJMg4oCTIFggTWlkU2VuIFs1Ml0gMjAwOSBNIEsgUiBQLFEgNSDigJMgWCBYIEQgSCDigJMgUCDigJMg4oCTIOKAkyDigJMgWCBTQ09OU1RSRUFNIFsyMTFdIDIwMTAgUyBHIFIgUSA1IFgg4oCTIFgg4oCTIEgg4oCTIFAg4oCTIOKAkyDigJMgWCDigJMg4oCUIFsxMDFdIDIwMTAgTSBNIFAgUSAyLDQgWCDigJMgWCDigJMgSCDigJMgQSDigJMgRiBYIOKAkyDigJMgXCIsXCJuZyBhbmQgaW50dWl0aXZlIHJlYXNvbmluZyBjYW4gb25seSBiZSBhY2hpZXZlZCBieSB1c2luZyByaWNoIHJlcHJlc2VudGF0aW9uIG1vZGVscy4gSW4gY29udHJhc3QsIEMtQ0FTVCBhdm9pZHMgdXNpbmcgb250b2xvZ2llcyB0byBtb2RlbCBjb250ZXh0IGNsYWltaW5nIG9udG9sb2dpZXMgYXJlIHRvbyByZXNvdXJjZSBpbnRlbnNpdmUuIFNBTEVTIFsyMTBdIChTY2FsYWJsZSBjb250ZXh0LUF3YXJlIG1pZGRsZXdhcmUgZm9yIG1vYmlMZSBFbnZpcm9tZW50UykgaXMgYSBjb250ZXh0LWF3YXJlIG1pZGRsZXdhcmUgdGhhdCBhY2hpZXZlcyBzY2FsYWJpbGl0eSBpbiBjb250ZXh0IGRpc3NlbWluYXRpb24uIFRoZSBtYWluIGNvbTNUaGUgbmFtZSDigJhIeWRyYeKAmSBoYXMgY2hhbmdlcyBpdHMgbmFtZSBkdWUgdG8gXCIsXCIgc3VjaCBhcyB0aGUgSW9UIHdoZXJlIGJpbGxpb25zIG9mIG9iamVjdHMgY29tbXVuaWNhdGUgd2l0aCBlYWNoIG90aGVyLCBzaWduae+sgWNhbnQgYW1vdW50cyBvZiBlbmVyZ3kgY2FuIGJlIHNhdmVkIGJ5IGZvbGxvd2luZyBmYWlybHkgc2ltcGxlIG9wdGltaXNhdGlvbiB0ZWNobmlxdWVzIGFzIHByZXNlbnRlZCBpbiBQUk9DT04gWzg2XS4gU0FMRVMgWzIxMF0gc2hvd3MgaG93IGNvbnRleHQgY2FuIGJlIG1hbmFnZWQgdXNpbmcgZGlzdHJpYnV0ZWQgYXJjaGl0ZWN0dXJlIHdpdGggYSB2YXJpZXR5IG9mIGRpZmZlcmVudCBkZXZpY2VzIHdpdGggZGlmZmVyZW50IHJlc291cmNlIGNvbnN0cmFpbnRzIGluIHRoZSBoYXJkd2FyZSBsZXZlbC4gNikgRHluYW1pYyBDb27vrIFndXJhdGlvbiBhbmQgRXh0ZW5zaW9uczogXCJdLFwiMjExNjgxNzM2OVwiOltcIlsxMl0gYWxzbyBjb21wcmVoZW5zaXZlbHkgc3VydmV5ZWQgY29udGV4dCBtb2RlbGxpbmcgYW5kIHJlYXNvbmluZyBieSBmb2N1c2luZyBvbiB0ZWNobmlxdWVzIHJhdGhlciB0aGFuIHByb2plY3RzLlwiLFwiVGhlIHJlcXVpcmVtZW50cyB0aGF0IG5lZWQgdG8gYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uIHdoZW4gbW9kZWxsaW5nIGNvbnRleHQgaW5mb3JtYXRpb24gYXJlIGlkZW50aWZpZWQgYW5kIGV4cGxhaW5lZCBpbiBbMTJdIGFzIGhldGVyb2dlbmVpdHkgYW5kIG1vYmlsaXR5LCByZWxhdGlvbnNoaXBzIGFuZCBkZXBlbmRlbmNpZXMsIHRpbWVsaW5lc3MgKGFsc28gY2FsbGVkIGZyZXNobmVzcyksIGltcGVyZmVjdGlvbiwgcmVhc29uaW5nLCB1c2FiaWxpdHkgb2YgbW9kZWxsaW5nIGZvcm1hbGlzbXMsIGFuZCBlZmZpY2llbnQgY29udGV4dCBwcm92aXNpb25pbmcuXCIsXCJTV1JMIGlzIG9uZSBvZiB0aGUgYXZhaWxhYmxlIHNvbHV0aW9ucyB0byBhZGQgcnVsZXMgaW4gT1dMIFsxMl0uXCIsXCJUaGUgbW9zdCBwb3B1bGFyIGNvbnRleHQgcmVhc29uaW5nIHRlY2huaXF1ZXMgKGFsc28gY2FsbGVkIGRlY2lzaW9uIG1vZGVscykgYXJlIHN1cnZleWVkIGluIFsxMV0sIFsxMl0sIFsxNDddLlwiLFwiVGhlIHByb2Nlc3Mgb2YgaG93IHRoZSBtdWx0aXBsZSB0ZWNobmlxdWVzIGNhbiBiZSBjb21iaW5lZCB0b2dldGhlciBpcyBwcmVzZW50ZWQgaW4gWzEyXSwgWzE4M10uXCIsXCJTb21lIG9mIHRoZSBlYXJseSB3b3JrIHN1Y2ggYXMgWzEyXSwgWzE4M10gaGF2ZSBkaXNjdXNzZWQgdGhlIHByb2Nlc3MgaW4gZGV0YWlsLlwiXSxcIjIxMTkwMjQ2MDZcIjpbXCIsT2IgUiBRIDUgWCBYIFgg4oCTIEgg4oCTIEEg4oCTIEEg4oCTIOKAkyBYIFViaVF1U0UgWzIxNF0gMjAxMCBNIE0gUiBRIDUgWCDigJMgWCBELEEgSCDigJMgQSDigJMg4oCTIOKAkyBYIOKAkyBDT1BBTCBbMjE1XSAyMDEwIE0gTSBSIFAsUSAxLDUg4oCTIOKAkyBYIEQgSCBYIFYgQSxGIOKAkyBYIFggT2N0b3B1cyBbNTBdIDIwMTEgUyBYIFggUCAyLDQg4oCTIOKAkyBYIEQgSCDigJMgQSDigJMgQSBYIOKAkyDigJMg4oCUIFsyMTZdIDIwMTEgTSDigJMgWCBQIDIg4oCTIOKAkyDigJMgRCBIIOKAkyBQIOKAkyBBIOKAkyDigJMgWCDigJQgWzE1M10gMjAxMSBTIEssT2IgUyxQIDIsNCBYIFggWCBELEEgSCDigJMgTSBWIEEsRiDigJMg4oCTIFggTm90ZXM6IFJlZmVyIFNlY3Rpb24gVi1BIGZvciB0aGUgbWVhbmluZ3Mgb2YgdGhlIGFiYnJldmlhdGlvbnMgYW5kIHN5bWJvbHMgdXNlZCBpbiB0aGUgdGFibGUgSUVFRSBDT01NVU5cIl0sXCIyMTE5MTgxODAwXCI6W1wiQ0RBIFsyMDldIDIwMDkgTSBPYiDigJMgUSA0LDYg4oCTIOKAkyDigJMg4oCTIEgg4oCTIFYg4oCTIOKAkyDigJMg4oCTXCIsXCJiZSBhY2hpZXZlZCBieSBmb2xsb3dpbmcgYXBwcm9hY2hlcyBzdWNoIGFzIENEQSBbMjA5XS5cIl0sXCIyMTIwOTAwOTQ3XCI6W1wiY3VsYXRlIHRoZSBwcm9iYWJpbGl0eSBvZiBhbiBldmVudC4gRGVtcHN0ZXItU2hhZmVyIGlzIGNvbW1vbmx5IHVzZWQgaW4gc2Vuc29yIGRhdGEgZnVzaW9uIGZvciBhY3Rpdml0eSByZWNvZ25pdGlvbi4gSUVFRSBDT01NVU5JQ0FUSU9OUyBTVVJWRVlTICZhbXA7IFRVVE9SSUFMUywgVk9MLiBYLCBOTy4gWCwgWFhYWCBYWFhYIDIyIEluIFsxNzFdLCBbMTc3XSwgaXQgaGFzIGJlZW4gdXNlZCB0byB1bmRlcnN0YW5kIHdoZXRoZXIgdGhlcmUgaXMgYSBtZWV0aW5nIGluIHRoZSByb29tLiBPdGhlciBleGFtcGxlIGFwcGxpY2F0aW9ucyBhcmUgcHJlc2VudGVkIGluIFsxNzhdLCBbMTc5XS4gaGlkZGVuIE1hcmtvdiBNb2RlbHMgWzE4MF0gYXJlIGFsc28gYSBwcm9iYWJpbGlzdGljIHRlY2huaXF1ZSB0aGF0IGFsXCJdLFwiMjEyMjU2OTUyNlwiOltcIiBvbiByZXNwb25zaWJpbGl0eSwgZnJlcXVlbmN5LCBjb250ZXh0IHNvdXJjZSwgc2Vuc29yIHR5cGUsIGFuZCBhY3F1aXNpdGlvbiBwcm9jZXNzLiAxKSBCYXNlZCBvbiBSZXNwb25zaWJpbGl0eTogQ29udGV4dCAoZS5nLiBzZW5zb3IgZGF0YSkgYWNxdWlzaXRpb24gY2FuIGJlIHByaW1hcmlseSBhY2NvbXBsaXNoZWQgdXNpbmcgdHdvIG1ldGhvZHMgWzExOF06IHB1c2ggYW5kIHB1bGwuIEEgY29tcGFyaXNvbiBpcyBwcmVzZW50ZWQgaW4gVGFibGUgVi4gIFB1bGw6IFRoZSBzb2Z0d2FyZSBjb21wb25lbnQgd2hpY2ggaXMgcmVzcG9uc2libGUgZm9yIGFjcXVpcmluZyBzZW5zb3IgZGF0YSBmcm9tIHNlbnNvcnMgbWFrZSBhIHJlcXVlc3QgKGUuZy4gcXVlcnkpIGZyb20gdGhlIHNlbnNvciBoYXJkd2FyZSBwXCIsXCIsTSBSIFEgMiBYIOKAkyBYIEQgSCDigJMgQSDigJMgQSxGIOKAkyDigJMgWCDigJQgWzE0MV0gMjAwOCBNIE9uIE8sUCBRIDUg4oCTIFgg4oCTIEQgSCDigJMg4oCTIFYg4oCTIOKAkyDigJMg4oCTIOKAlCBbMjA0XSAyMDA4IE0gT24gUixPIFAsUSA1IOKAkyDigJMgWCBEIEgg4oCTIFAg4oCTIEEg4oCTIOKAkyDigJMgQWNvTVMgWzg4XSAyMDA4IE0gTSxHLE9uIFIsTyBQIDUg4oCTIFggWCBBIEgg4oCTIFAg4oCTIOKAkyDigJMg4oCTIFggQ1JPQ08gWzExOF0gMjAwOCBNIE9uIFIsTyBRIFggWCDigJMgRCBIIFggQSBDLFYg4oCTIOKAkyDigJMgWCBFbW9DQVNOIFsyMDVdIDIwMDggUyBLIFIgUSAyLDQg4oCTIOKAkyDigJMgRCBMIOKAkyBQIOKAkyDigJMg4oCTIOKAkyDigJMgSHlkcmEgWzYxXSAyMDA5IE0gSyxPbixPYiBSLE8gUSAzIFggWCBYIOKAkyBIIFggUCBWIOKAkyDigJMg4oCTIOKAkyBVUG5QIFsyMDZdIDIwMDkgTSBLLE0gUiBRIDQgWCDigJMgWCBEIEggWCBBIOKAkyBcIixcIm4gd2l0aCBjb250ZXh0IHNvdXJjZXMsIGNvbnRleHQgc291cmNlIGRpc2NvdmVyeSwgcmVnaXN0cmF0aW9uLCBhbmQgY29u76yBZ3VyYXRpb24pLCBhbmQgcmVjb27vrIFndXJhdGlvbiBtYW5hZ2VyIChwZXJmb3JtcyBtb25pdG9yaW5nIHRhc2tzIHN1Y2ggYXMgbWFwcGluZyBjb250ZXh0IHNvdXJjZXMgdG8gY29udGV4dCBpbmZvcm1hdGlvbikuIENST0NPIFsxMThdIChDUk9zcyBhcHBsaWNhdGlvbiBDT250ZXh0IG1hbmFnZW1lbnQpIGlzIGFuIG9udG9sb2d5IGJhc2VkIGNvbnRleHQgbW9kZWxsaW5nIGFuZCBtYW5hZ2VtZW50IHNlcnZpY2UuIENST0NPIGlkZW50ae+sgWVzIHNldmVyYWwgcmVxdWlyZW1lbnRzIHRvIGJlIGEgY3Jvc3MgYXBwbGljYXRpb24sIHN1Y2ggYXMgYXBwbGljYXRpb24gcGx1Zy1pbiBjYXBhYlwiLFwiYWN5IG9mIHRoZSByZWFzb25pbmcuIEZ1cnRoZXIsIGl0IHNob3dzIGhvdyBjb250ZXh0IGNhbiBiZSBtb2RlbGxlZCBpbiBmb3JtYXRzIHN1Y2ggYXMgWE1MIGFuZCB0aGVuIGluc2VydGVkIGludG8gYW55IHByb2dyYW1taW5nIGxhbmd1YWdlIHZpYSBiaW5kaW5nIHRlY2huaXF1ZXMgKGUuZy4gZGF0YSBiaW5kaW5nIGluIEphdmEpLiBJbiBDUk9DTyBbMTE4XSwgdmFsaWRhdGlvbiAoZS5nLiBjb25zaXN0ZW5jeSksIGNvbu+sgmljdCByZXNvbHV0aW9uLCBhbmQgcHJpdmFjeSBjb25jZXJucyBhcmUgZ2l2ZW4gYXR0ZW50aW9uIHdoZXJlIHRoZXkgYXJlIHJhcmVseSBhZGRyZXNzZWQgYnkgbWFueSBvdGhlciBzb2x1dGlvbnMuIFNoYXJpbmcgY29udGV4dCBpbmZvcm1hdGlvbiBhbGxvd3MgbW9iaWxpdHkgYW5kIHNcIl0sXCIyMTI0OTU3Njk3XCI6W1wiYWNjZXB0ZWQgYnkgYSBncm91cC7igJ0gQW5vdGhlciBhY2NlcHRhYmxlIGRl76yBbml0aW9uIGhhcyBiZWVuIHByZXNlbnRlZCBieSBOb3kgYW5kIE1jR3Vpbm5lc3MgWzEzNl0uIEZ1cnRoZXIgb250b2xvZ2llcyBhcmUgZGlzY3Vzc2VkIGV4dGVuc2l2ZWx5IGFzIHByaW5jaXBsZXMsIG1ldGhvZHMsIGFuZCBhcHBsaWNhdGlvbnMgaW4gcGVyc3BlY3RpdmUgWzEzOF0uIFNvbWUgb2YgdGhlIHJlcXVpcmVtZW50cyBhbmQgb2JqZWN0aXZlcyBiZWhpbmQgZGVzaWduaW5nIGFuIG9udG9sb2d5IGFyZSBzaW1wbGljaXR5LCDvrIJleGliaWxpdHkgYW5kIGV4dGVuc2liaWxpdHksIGdlbmVyYWxpdHksIGFuZCBleHByZXNzaXZlbmVzcyBbMTM5XS4gSW4gYWRkaXRpb24sIHNvbWUgb2YgdGhlIGdlbmVyYWwgcmVxdWlyZW1lbnRzXCJdLFwiMjEyNjM2MjMxNFwiOltcIuKAlCBbMjA0XSAyMDA4IE0gT24gUixPIFAsUSA1IOKAkyDigJMgRCBIIOKAkyBQIOKAkyBBIOKAkyDigJMg4oCTXCIsXCJLaW0gYW5kIENob2kgWzIwNF0gbW9kZWxzIGNvbnRleHQgbWV0YS1kYXRhIGZyb20gYW4gb3BlcmF0aW9uYWwgcGVyc3BlY3RpdmUgYXMgZGlzY3Vzc2VkIGluIFNlY3Rpb24gSUlJLUMsIHdoaWNoIGFsbG93cyBpdCB0byB1bmRlcnN0YW5kIG9wZXJhdGlvbmFsIHBhcmFtZXRlcnMgc3VjaCBhcyBjb21wbGV4aXRpZXMsIHF1YWxpdHksIHVwLXRvLWRhdGVuZXNzLCBhbmQgY29zdCBvZiBhY3F1aXNpdGlvbi5cIl0sXCIyMTI2NjIyNjcxXCI6W1wiQ0FSSVNNQSBbMTkzXSAoQ29udGV4dC1Bd2FyZSBSZWZsZWN0aXZlIG1pZGRsZXdhcmUgU3lzdGVtIGZvciBNb2JpbGUgQXBwbGljYXRpb25zKSBpcyBmb2N1c2VkIG9uIG1vYmlsZSBzeXN0ZW1zIHdoZXJlIHRoZXkgYXJlIGV4dHJlbWVseSBkeW5hbWljLlwiXSxcIjIxMjY4MDE3NzlcIjpbXCJzLCBUaW55TGltZSwgRW52aXJvVHJhY2ssIE1pcmVzLCBIb29kLCBhbmQgU21hcnQgTWVzc2FnZXMuIFNvbWUgb2YgdGhlIGFib3ZlIGFwcHJvYWNoZXMgYXJlIHN1cnZleWVkIGluIFs4XSwgWzQ1XS4gQSBzdXJ2ZXkgb24gd2ViIGJhc2VkIHdpcmVsZXNzIHNlbnNvciBhcmNoaXRlY3R1cmVzIGFuZCBhcHBsaWNhdGlvbnMgaXMgcHJlc2VudGVkIGluIFs0Nl0uIElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFgsIFhYWFggWFhYWCA1IEYuIExheWVycyBpbiBTZW5zb3IgTmV0d29ya3MgV2UgaGF2ZSBwcmVzZW50ZWQgYSB0eXBpY2FsIHN0cnVjdHVyZSBvZiBhIHNlbnNvciBuZXR3b3JrIGluIEZpZ3VyZSAzLiBJdCBjb21wcmlzZXMgdGhlIG1vc3QgY29tbVwiXSxcIjIxMjcyMzU3ODlcIjpbXCJoZSBkZe+sgW5pdGlvbiBwcm92aWRlZCBieSBTY2hpbGl0IGFuZCBUaGVpbWVyIFsyXSB3YXMgYmFzZWQgb24gZXhhbXBsZXMgYW5kIGNhbm5vdCBiZSB1c2VkIHRvIGlkZW50aWZ5IG5ldyBjb250ZXh0LiBGdXJ0aGVyLCBEZXkgY2xhaW1lZCB0aGF0IGRl76yBbml0aW9ucyBwcm92aWRlZCBieSBCcm93biBbNzNdLCBGcmFua2xpbiBhbmQgRmxhY2hzYmFydCBbNzRdLCBSb2RkZW4gZXQgYWwuIFs3NV0sIEh1bGwgZXQgYWwuIFs3Nl0sIGFuZCBXYXJkIGV0IGFsLiBbNzddIHVzZWQgc3lub255bXMgdG8gcmVmZXIgdG8gY29udGV4dCwgc3VjaCBhcyBlbnZpcm9ubWVudCBhbmQgc2l0dWF0aW9uLiBUaGVyZWZvcmUsIHRoZXNlIGRl76yBbml0aW9ucyBhbHNvIGNhbm5vdCBiZSB1c2VkIHRvIGlkZW50aWZ5IG5ldyBjb250ZVwiXSxcIjIxMjc5MTg2MDVcIjpbXCI3IE0gTSxPbiBPIFAsUSA2IFgg4oCTIOKAkyBEIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTIFggU0lNIFsyMDBdIDIwMDcgTSBLLEcgUiDigJMgMiBYIOKAkyDigJMg4oCTIEgg4oCTIFAgQyBBIOKAkyDigJMg4oCTIOKAlCBbMTI0XSAyMDA3IE0gT24gTyBRIOKAkyDigJMgWCBEIEgg4oCTIFAgViBBIOKAkyDigJMg4oCTIENPU01PUyBbMjAxXSAyMDA4IE0gT2IgUiBRIDIsNCDigJMg4oCTIFgg4oCTIEgg4oCTIFAg4oCTIEEgWCDigJMgWCBETVMtQ0EgWzIwMl0gMjAwOCBTIE0gUiBRIDUg4oCTIOKAkyBYIOKAkyBIIOKAkyBBIOKAkyDigJMg4oCTIOKAkyDigJMgQ0RNUyBbMjAzXSAyMDA4IE0gSyxNIFIgUSAyIFgg4oCTIFggRCBIIOKAkyBBIOKAkyBBLEYg4oCTIOKAkyBYIOKAlCBbMTQxXSAyMDA4IE0gT24gTyxQIFEgNSDigJMgWCDigJMgRCBIIOKAkyDigJMgViDigJMg4oCTIOKAkyDigJMg4oCUIFsyMDRdIDIwMDggTSBPbiBSLE8gUCxRIDUg4oCTIOKAkyBYIEQgSCDigJMgUCDigJMgQSDigJMg4oCTIOKAkyBBY29NXCIsXCJ5IG1hbmFnZXIsIGNvbnRleHQgcHJvY2Vzc29yLCBjb250ZXh0IHJlYXNvbmVyLCBjb250ZXh0IGNvbu+sgWd1cmF0b3IsIGFuZCBtZXNzYWdlIG1hbmFnZXJzLiBUaGVyZWZvcmUsIENPU01PUyBmb2xsb3dzIGRpc3RyaWJ1dGVkIGFyY2hpdGVjdHVyZSB3aGljaCBpbmNyZWFzZXMgdGhlIHNjYWxhYmlsaXR5IG9mIHRoZSBtaWRkbGV3YXJlLiBETVMtQ0EgWzIwMl0gKERhdGEgTWFuYWdlbWVudCBTeXN0ZW0tQ29udGV4dCBBcmNoaXRlY3R1cmUpIGlzIGJhc2VkIG9uIHNtYXJ0IGJ1aWxkaW5nIGRvbWFpbi4gWE1MIGlzIHVzZWQgdG8gZGXvrIFuZSBydWxlcywgY29udGV4dHMsIGFuZCBzZXJ2aWNlcy4gRnVydGhlciwgYW4gZXZlbnQgZHJpdmVuIHJ1bGUgY2hlY2tpbmcgdGVjaG5pcXVlIGlzIHVzZWQgdG8gcmVhc29uXCJdLFwiMjEyNzk0OTE1MFwiOltcImVuc29yIG5ldHdvcmsgYW5kIHJlbGF0ZWQgcmVzZWFyY2ggZXhpc3RlZCBhIGxvbmcgdGltZSBiZWZvcmUgdGhlIElvVCB3YXMgaW50cm9kdWNlZC4gSG93ZXZlciwgc2Vuc29yIG5ldHdvcmtzIHdlcmUgdXNlZCBpbiBsaW1pdGVkIGRvbWFpbnMgdG8gYWNoaWV2ZSBzcGVjae+sgWMgcHVycG9zZXMsIHN1Y2ggYXMgZW52aXJvbm1lbnQgbW9uaXRvcmluZyBbNDBdLCBhZ3JpY3VsdHVyZSBbMzVdLCBtZWRpY2FsIGNhcmUgWzQxXSwgZXZlbnQgZGV0ZWN0aW9uIFs0Ml0sIHN0cnVjdHVyYWwgaGVhbHRoIG1vbml0b3JpbmcgWzQzXSwgZXRjLiBGdXJ0aGVyLCB0aGVyZSBhcmUgdGhyZWUgY2F0ZWdvcmllcyBvZiBzZW5zb3IgbmV0d29ya3MgdGhhdCBjb21wcmlzZSB0aGUgSW9UIFs0NF06IGJvZHkgc2Vuc29yIG5ldHdcIl0sXCIyMTI3OTgxODMxXCI6W1wibXVuaWNhdGlvbiwgbWVkaWNhbCB0ZWNobm9sb2d5IFszM10sIGhlYWx0aGNhcmUsIHNtYXJ0IGJ1aWxkaW5nLCBob21lIFszNF0gYW5kIG9m76yBY2UsIG1lZGlhLCBlbnRlcnRhaW5tZW50LCBhbmQgdGlja2V0aW5nIGFyZSBzb21lIG9mIHRoZSBzb2NpZXR5IGZvY3VzZWQgYXBwbGljYXRpb25zIG9mIElvVC4gQWdyaWN1bHR1cmUgYW5kIGJyZWVkaW5nIFszNV0sIFszNl0sIHJlY3ljbGluZywgZGlzYXN0ZXIgYWxlcnRpbmcsIGVudmlyb25tZW50YWwgbW9uaXRvcmluZyBhcmUgc29tZSBvZiB0aGUgZW52aXJvbm1lbnQgZm9jdXNlZCBhcHBsaWNhdGlvbnMuIEFzaW4gYW5kIEdhc2NvbiBbMzddIGxpc3RlZCA1NCBhcHBsaWNhdGlvbiBkb21haW5zIHVuZGVyIHR3ZWx2ZSBjYXRlZ29yaWVzOiBzbWFydCBjaXRpZVwiLFwicmVsYXRlZCByZXNlYXJjaCBleGlzdGVkIGEgbG9uZyB0aW1lIGJlZm9yZSB0aGUgSW9UIHdhcyBpbnRyb2R1Y2VkLiBIb3dldmVyLCBzZW5zb3IgbmV0d29ya3Mgd2VyZSB1c2VkIGluIGxpbWl0ZWQgZG9tYWlucyB0byBhY2hpZXZlIHNwZWNp76yBYyBwdXJwb3Nlcywgc3VjaCBhcyBlbnZpcm9ubWVudCBtb25pdG9yaW5nIFs0MF0sIGFncmljdWx0dXJlIFszNV0sIG1lZGljYWwgY2FyZSBbNDFdLCBldmVudCBkZXRlY3Rpb24gWzQyXSwgc3RydWN0dXJhbCBoZWFsdGggbW9uaXRvcmluZyBbNDNdLCBldGMuIEZ1cnRoZXIsIHRoZXJlIGFyZSB0aHJlZSBjYXRlZ29yaWVzIG9mIHNlbnNvciBuZXR3b3JrcyB0aGF0IGNvbXByaXNlIHRoZSBJb1QgWzQ0XTogYm9keSBzZW5zb3IgbmV0d29ya3MgKEJTTiksIG9iamVjdFwiXSxcIjIxMjgwMjYwMjNcIjpbXCJ1YmlxdWl0b3VzIGNvbXB1dGluZyB0byB0aGUgSW50ZXJuZXQgb2YgVGhpbmdzIChJb1QpIG92ZXIgdGhlIGxhc3QgZGVjYWRlLiBIb3dldmVyLCBjb250ZXh0LWF3YXJlIGNvbXB1dGluZyBiZWNhbWUgbW9yZSBwb3B1bGFyIHdpdGggdGhlIGludHJvZHVjdGlvbiBvZiB0aGUgdGVybSDigJh1YmlxdWl0b3VzIGNvbXB1dGluZ+KAmSBieSBNYXJrIFdlaXNlciBbMV0gaW4gaGlzIGdyb3VuZC1icmVha2luZyBwYXBlciBUaGUgQ29tcHV0ZXIgZm9yIHRoZSAyMXN0IENlbnR1cnkgaW4gMTk5MS4gVGhlbiB0aGUgdGVybSDigJhjb250ZXh0LWF3YXJl4oCZIHdhcyDvrIFyc3QgdXNlZCBieSBTY2hpbGl0IGFuZCBUaGVpbWVyIFsyXSBpbiAxOTk0LiBTaW5jZSB0aGVuLCByZXNlYXJjaCBpbnRvIGNvbnRleHQtYXdhcmVuZXNzIGhhc1wiXSxcIjIxMjg0Mjg3NThcIjpbXCJDQVRJT05TIFNVUlZFWVMgJmFtcDsgVFVUT1JJQUxTLCBWT0wuIFgsIE5PLiBYLCBYWFhYIFhYWFggMjIgSW4gWzE3MV0sIFsxNzddLCBpdCBoYXMgYmVlbiB1c2VkIHRvIHVuZGVyc3RhbmQgd2hldGhlciB0aGVyZSBpcyBhIG1lZXRpbmcgaW4gdGhlIHJvb20uIE90aGVyIGV4YW1wbGUgYXBwbGljYXRpb25zIGFyZSBwcmVzZW50ZWQgaW4gWzE3OF0sIFsxNzldLiBoaWRkZW4gTWFya292IE1vZGVscyBbMTgwXSBhcmUgYWxzbyBhIHByb2JhYmlsaXN0aWMgdGVjaG5pcXVlIHRoYXQgYWxsb3dzIHN0YXRlIHRvIGJlIHJlcHJlc2VudGVkIHVzaW5nIG9ic2VydmFibGUgZXZpZGVuY2Ugd2l0aG91dCBkaXJlY3RseSByZWFkaW5nIHRoZSBzdGF0ZS4gRm9yIGV4YW1wbGUsIGl0IHByb3ZpZGVzIGEgbWV0aG9kIHRvIGJcIl0sXCIyMTI4OTEwODI0XCI6W1widGhlIGVhcmx5IDE5ODBzIHRoZSBUQ1AvSVAgc3RhY2sgd2FzIGludHJvZHVjZWQuIFRoZW4sIGNvbW1lcmNpYWwgdXNlIG9mIHRoZSBJbnRlcm5ldCBzdGFydGVkIGluIHRoZSBsYXRlIDE5ODBzLiBMYXRlciwgdGhlIFdvcmxkIFdpZGUgV2ViIChXV1cpIGJlY2FtZSBhdmFpbGFibGUgaW4gMTk5MSB3aGljaCBtYWRlIHRoZSBJbnRlcm5ldCAoV29UKSBbMThdLCB3aGljaCBiYXNlZCBvbiBXV1csIGlzIGEgcGFydCBvZiBJb1QuIExhdGVyLCBtb2JpbGUgZGV2aWNlcyBjb25uZWN0ZWQgdG8gdGhlIEludGVybmV0IGFuZCBmb3JtZWQgdGhlIG1vYmlsZS1JbnRlcm5ldCBbMTldLiBXaXRoIHRoZSBlbWVyZ2VuY2Ugb2Ygc29jaWFsIG5ldHdvcmtpbmcsIHVzZXJzIHN0YXJ0ZWQgdG8gYmVjb21lIGNvbm5lY3RlZCBcIl0sXCIyMTMwMDAyMjA3XCI6W1wiRm9yIGV4YW1wbGUsIEFsdGVybmF0aXZlIENvbnRleHQgQ29uc3RydWN0aW9uIFRyZWVzIChBQ0NUKSBbMTgxXSBpcyBhbiBhcHByb2FjaCB0aGF0IGVuYWJsZXMgdGhlIGNvbmN1cnJlbnQgZXZhbHVhdGlvbiBhbmQgY29uc29saWRhdGlvbiBvZiBkaWZmZXJlbnQgcmVhc29uaW5nIG1vZGVscyBzdWNoIGFzIGxvZ2ljIHJ1bGVzLCBCYXllc2lhbiBuZXR3b3JrcyBhbmQgQ29Db0dyYXBocyBbMTgyXS5cIl0sXCIyMTMwNDAzMDQ2XCI6W1wic3RydWN0dXJlIGluIElvVCBwYXJhZGlnbSBzdWNoIGFzIHRyYWRpdGlvbmFsIGFkLWhvYyBuZXR3b3Jrcy4gVGhlc2UgYXJlIGNsZWFybHkgYSBkaWZmZXJlbnQgdGVjaG5vbG9neSBmcm9tIHNlbnNvciBuZXR3b3JrcyBhbmQgaGF2ZSBtYW55IHdlYWtuZXNzZXMuIFRoZSBkaWZmZXJlbmNlcyBhcmUgY29tcHJlaGVuc2l2ZWx5IGRpc2N1c3NlZCBpbiBbMzldLiBUaGVyZSBhcmUgdGhyZWUgbWFpbiBhcmNoaXRlY3R1cmVzIGluIHNlbnNvciBuZXR3b3Jrczog76yCYXQgYXJjaGl0ZWN0dXJlIChkYXRhIHRyYW5zZmVycyBmcm9tIHN0YXRpYyBzZW5zb3Igbm9kZXMgdG8gdGhlIHNpbmsgbm9kZSB1c2luZyBhIG11bHRpLWhvcCBmYXNoaW9uKSwgdHdvLWxheWVyIGFyY2hpdGVjdHVyZSAobW9yZSBzdGF0aWMgYW5kIFwiLFwicmUgYXJlIHNldmVyYWwgb3RoZXIgdGVjaG5vbG9naWVzIHRoYXQgY2FuIHByb3ZpZGUgYWNjZXNzIHRvIHNlbnNvciBoYXJkd2FyZSwgc3VjaCBhcyB3aXJlbGVzcyBhZC1ob2MgbmV0d29ya3MuIEhvd2V2ZXIsIHRoZXkgYXJlIG5vdCBzY2FsYWJsZSBhbmQgY2Fubm90IGFjY29tbW9kYXRlIHRoZSBuZWVkcyBvZiB0aGUgSW9UIGluZGl2aWR1YWxseSBbMzldLCB0aG91Z2ggdGhleSBjYW4gY29tcGxlbWVudCB0aGUgSW9UIGluZnJhc3RydWN0dXJlLiBBcyBpcyBjbGVhcmx5IGRlcGljdGVkIGluIEZpZ3VyZSA0LCBTTiBhcmUgYSBwYXJ0IG9mIHRoZSBJb1QuIEhvd2V2ZXIsIHRoZSBJb1QgaXMgbm90IGEgcGFydCBvZiBTTi4gRmlnLiA0LiBSZWxhdGlvbnNoaXAgYmV0d2VlbiBzZW5zb3IgbmV0d29ya3MgYW5cIl0sXCIyMTMwOTkzMDU3XCI6W1wiIDEg4oCTIFgg4oCTIEEgSCDigJMgQSDigJMg4oCTIOKAkyDigJMg4oCTIFBST0NPTiBbODZdIDIwMDYgUyBLIFIgUSAyIOKAkyDigJMgWCBEIEwg4oCTIFAg4oCTIEEsRiDigJMg4oCTIOKAkyBDTUYgKE1BR05FVCkgWzg1XSAyMDA2IE0gTSBSIFAsUSAyLDQgWCDigJMg4oCTIEQgSCDigJMgQSBDIOKAkyBYIOKAkyDigJMgZS1TRU5TRSBbNDRdIDIwMDYgTSDigJMgUiBRIDIsNCDigJMgWCDigJMgRCBIIFggUCDigJMgRiDigJMg4oCTIOKAkyBIQ29NIFsxOThdIDIwMDcgTSBHLE9uIFIsTyBRIDUgWCBYIOKAkyBEIEgg4oCTIFMgViBGIOKAkyDigJMgWCBDTVMgWzEwNl0gMjAwNyBNIE9uIE8gUCxRIDEsMiBYIOKAkyBYIFMgSCDigJMgQSDigJMgQSDigJMg4oCTIFggTW9DQSBbMTk5XSAyMDA3IE0gTSxPYiBPIFAsUSA0LDUg4oCTIOKAkyBYIEQgSCBYIEEgViDigJMg4oCTIFggWCBDYVNQIFsxODVdIDIwMDcgTSBNLE9uIE8gUCxRIDYgWCDigJMg4oCTIEQgSCDigJMgQVwiLFwicHR1cmluZywgZGF0YSBwcmUt76yBbHRlcmluZywgY29udGV4dCBhYnN0cmFjdGlvbiBkYXRhIHNvdXJjZSBpbnRlZ3JhdGlvbiwgSUVFRSBDT01NVU5JQ0FUSU9OUyBTVVJWRVlTICZhbXA7IFRVVE9SSUFMUywgVk9MLiBYLCBOTy4gWCwgWFhYWCBYWFhYIDI4IGNvbnRleHQgZXh0cmFjdGlvbiwgcnVsZSBlbmdpbmUsIGFuZCBhZGFwdGF0aW9uLiBIQ29NIFsxOThdIChIeWJyaWQgQ29udGV4dCBNYW5hZ2VtZW50KSBpcyBhIGh5YnJpZCBhcHByb2FjaCB3aGljaCBjb21iaW5lcyBzZW1hbnRpYyBvbnRvbG9neSBhbmQgcmVsYXRpb25hbCBzY2hlbWFzLiBUaGlzIGFwcHJvYWNoIGNsYWltcyB0aGF0IHN0YW5kYXJkIGRhdGFiYXNlIG1hbmFnZW1lbnQgc3lzdGVtcyBhbG9uZSBjYW5ub3QgYmUgdXNlZCB0byBtYW5hZ2VcIixcImhlbHAgaW4gYSB2YXJpZXR5IG9mIHNpdHVhdGlvbnMuIFRoZXkgYWxzbyBzdHJlc3NlcyB0aGUgcmVxdWlyZW1lbnQgb2YgaGF2aW5nIGRvbWFpbiBzcGVjae+sgWMgYW5kIGRvbWFpbiBpbmRlcGVuZGVudCBvbnRvbG9naWVzLiA0KSBIeWJyaWQgUmVhc29uaW5nOiBHYWlhIFsxNjhdLCBLbyBhbmQgU2ltIFsxNDFdLCBDRE1TIFsyMDNdLCBhbmQgSENvTSBbMTk4XSBoaWdobGlnaHQgdGhlIGltcG9ydGFuY2Ugb2YgZW1wbG95aW5nIG11bHRpcGxlIHJlYXNvbmluZyB0ZWNobmlxdWVzIHN1Y2ggYXMgQmF5ZXNpYW4gbmV0d29ya3MsIHByb2JhYmlsaXN0aWMgYW5kIGZ1enp5IGxvZ2ljLCB3aGVyZSBlYWNoIHRlY2huaXF1ZSBwZXJmb3JtcyB3ZWxsIGluIGRpZmZlcmVudCBzaXR1YXRpb25zLiBJbmNvcnBvcmF0aW9uXCJdLFwiMjEzMzAzMDM4M1wiOltcIm9uIGNvbnRleHQtYXdhcmUgbW9iaWxlIGFuZCB3aXJlbGVzcyBuZXR3b3JraW5nIChDQU1vV2lOKSBkb21haW4gd2hlcmUgdGhleSBoYXZlIGlkZW50ae+sgWVkIGFsbCB0aGUgcG9zc2libGUgY29tcG9uZW50cyBvZiBhIHR5cGljYWwgQ0FNb1dpTiBhcmNoaXRlY3R1cmUuVGhlIGxhdGVzdCBzdXJ2ZXkgaXMgZG9uZSBieSBCZWxsYXZpc3RhIGV0IGFsLiBbMTZdICgyMDEzKSB3aGljaCBpcyBmb2N1c2VkIG9uIGNvbnRleHQgZGlzdHJpYnV0aW9uIGZvciBtb2JpbGUgdWJpcXVpdG91cyBzeXN0ZW1zLiBPdXIgc3VydmV5IGRpZmZlcnMgZnJvbSB0aGUgcHJldmlvdXMgbGl0ZXJhdHVyZSBzdXJ2ZXlzIG1lbnRpb25lZCBhYm92ZSBpbiBtYW55IHdheXMuIE1vc3Qgb2YgdGhlIHN1cnZleXMgZXZhbHVhdGVkIGEgbGlcIixcIiBbODldLuKAnSA0KSBEZe+sgW5pdGlvbiBvZiBRdWFsaXR5IG9mIENvbnRleHQ6IFRoZXJlIGFyZSBudW1iZXIgb2YgZGXvrIFuaXRpb25zIGFuZCBwYXJhbWV0ZXJzIHRoYXQgaGF2ZSBiZWVuIHByb3Bvc2VkIGluIHRoZSBsaXRlcmF0dXJlIHJlZ2FyZGluZyBxdWFsaXR5IG9mIGNvbnRleHQgKFFvQykuIEEgc3VydmV5IG9uIFFvQyBpcyBwcmVzZW50ZWQgaW4gWzE2XS4gUW9DIGlzIGRl76yBbmVkIHVzaW5nIGEgc2V0IG9mIHBhcmFtZXRlcnMgdGhhdCBleHByZXNzZXMgdGhlIHF1YWxpdHkgb2YgcmVxdWlyZW1lbnRzIGFuZCBwcm9wZXJ0aWVzIG9mIHRoZSBjb250ZXh0IGRhdGEuIEFmdGVyIGV2YWx1YXRpbmcgYSBudW1iZXIgb2YgZGlmZmVyZW50IHBhcmFtZXRlciBwcm9wb3NhbHMgaW4gdGhlIGxpdGVyYXR1cmUsIFtcIl0sXCIyMTM0MTMxNzU1XCI6W1wiQ29PTCBbMTkyXSAyMDAzIFQgT24gUixPIFEgMSDigJMgRCBIIOKAkyBTIOKAkyDigJMg4oCTIOKAk1wiXSxcIjIxMzUzOTA3OTBcIjpbXCJGaWd1cmUgNy4gSXQgYWxsb3dzIHRoZSBnZW5lcmF0aW9uIG9mIGhpZ2ggbGV2ZWwgY29udGV4dCBpbmZvcm1hdGlvbiB1c2luZyBsb3cgbGV2ZWwgY29udGV4dC4gUmVjZW50bHksIHJ1bGVzIGhhdmUgYmVlbiBoZWF2aWx5IHVzZWQgd2hlbiBjb21iaW5lZCB3aXRoIG9udG9sb2dpY2FsIHJlYXNvbmluZyBbMTYwXSwgWzE2MV0sIFsxNjJdLiBNaVJFIFsxNjNdIGlzIGEgbWluaW1hbCBydWxlIGVuZ2luZSBmb3IgY29udGV4dC1hd2FyZSBtb2JpbGUgZGV2aWNlcy4gTW9zdCBvZiB0aGUgdXNlciBwcmVmZXJlbmNlcyBhcmUgZW5jb2RlZCB1c2luZyBydWxlcy4gUnVsZXMgYXJlIGFsc28gdXNlZCBpbiBldmVudCBkZXRlY3Rpb24gWzE2NF0sIFsxNjVdLiBSdWxlcyBhcmUgZXhwZWN0ZWQgdG8gcGxheSBhIHNpZ25cIl0sXCIyMTM3MTAwMzIwXCI6W1wiIFRoZW4gd2UgbGFiZWwgdGhlbSBhY2NvcmRpbmcgdG8gdGhlIHJlc3VsdHMgd2UgZXhwZWN0LiBUaGVuIHdlIGRlcml2ZSBhIGZ1bmN0aW9uIHRoYXQgY2FuIGdlbmVyYXRlIHRoZSBleHBlY3RlZCByZXN1bHRzIHVzaW5nIHRoZSB0cmFpbmluZyBkYXRhLiBUaGlzIHRlY2huaXF1ZSBpcyB3aWRlbHkgdXNlZCBpbiBtb2JpbGUgcGhvbmUgc2Vuc2luZyBbMTUwXSBhbmQgYWN0aXZpdHkgcmVjb2duaXRpb24gWzE1MV0uIERlY2lzaW9uIHRyZWUgaXMgYSBzdXBlcnZpc2VkIGxlYXJuaW5nIHRlY2huaXF1ZSB3aGVyZSBpdCBidWlsZHMgYSB0cmVlIGZyb20gYSBkYXRhc2V0IHRoYXQgY2FuIGJlIHVzZWQgdG8gY2xhc3NpZnkgZGF0YS4gVGhpcyB0ZWNobmlxdWUgaGFzIGJlZW4gdXNlZCB0byBkZXZlbG9wIGEgc3R1XCJdLFwiMjEzNzExNzYzN1wiOltcIkJJT05FVFMgWzE5N10gMjAwNiBNIE9uIFIsTyBRIDEg4oCTIOKAkyBBIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTIOKAk1wiLFwiWzIwOF0sIGFuZCBCSU9ORVRTIFsxOTddIHVzZSBkaWZmZXJlbnQgb250b2xvZ2llcyBmb3IgZWFjaCBjb250ZXh0IGNhdGVnb3J5LlwiXSxcIjIxNDEzMzUzMjNcIjpbXCIgKDEpIOKAmHdoYXQgc2Vuc29ycyBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHBvbGx1dGlvbj/igJkgWzIyOF0gKDIpIHdoZW4gdGhlcmUgYXJlIG11bHRpcGxlIHNlbnNvcnMgdGhhdCBjYW4gbWVhc3VyZSB0aGUgc2FtZSBwYXJhbWV0ZXIgKGUuZy4gcEggY29uY2VudHJhdGlvbiBpbiBhIGxha2UpLCDigJh3aGF0IHNlbnNvciBzaG91bGQgYmUgdXNlZD/igJkgWzIyOV0gSW4gb3JkZXIgdG8gYW5zd2VyIHF1ZXN0aW9uICgxKSwgZG9tYWluIGtub3dsZWRnZSBuZWVkcyB0byBiZSBpbmNvcnBvcmF0ZSB3aXRoIHRoZSBJb1Qgc29sdXRpb24uIE1hbnVhbGx5IHNlbGVjdGluZyB0aGUgc2Vuc29ycyB0aGF0IHdpbGwgcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCBlbnZpcm9ubWVudGFsIHBvbGx1dGlvbiBpcyBub3QgZmVhc1wiXSxcIjIxNDE4MDE1ODFcIjpbXCJkYXVmIGV0IGFsLiBbMTBdIGluIDIwMDcgb24gY29udGV4dC1hd2FyZSBzeXN0ZW1zIGFuZCBtaWRkbGV3YXJlIHNvbHV0aW9ucyB1c2luZyBkaWZmZXJlbnQgdGF4b25vbWllcy4gQm90aCBzdXJ2ZXlzIGNvbXBhcmVkIGxpbWl0ZWQgbnVtYmVycywgYnV0IGRpZmZlcmVudCBwcm9qZWN0cyB3aXRoIHZlcnkgbGl0dGxlIG92ZXJsYXAuIGMgZXQgYWwuIFsxMV0gKDIwMDkpIHJldmlld2VkIHBvcHVsYXIgY29udGV4dCByZXByZXNlbnRhdGlvbiBhbmQgcmVhc29uaW5nIGZyb20gYSBwZXJ2YXNpdmUgY29tcHV0aW5nIHBlcnNwZWN0aXZlLiBJbiAyMDEwLCBCZXR0aW5pIGV0IGFsLiBbMTJdIGFsc28gY29tcHJlaGVuc2l2ZWx5IHN1cnZleWVkIGNvbnRleHQgbW9kZWxsaW5nIGFuZCByZWFzb25pbmcgYnkgZm9jdVwiLFwicHJlc3NpdmVuZXNzIFsxMzldLiBJbiBhZGRpdGlvbiwgc29tZSBvZiB0aGUgZ2VuZXJhbCByZXF1aXJlbWVudHMgaW4gY29udGV4dCBtb2RlbGxpbmcgYW5kIHJlcHJlc2VudGF0aW9uIGFyZSB1bmlxdWUgaWRlbnRp76yBY2F0aW9uLCB2YWxpZGF0aW9uLCByZXVzZSwgaGFuZGxpbmcgdW5jZXJ0YWludHksIGFuZCBpbmNvbXBsZXRlIGluZm9ybWF0aW9uIFsxMV0uIEEgZnVydGhlciBlaWdodCBwcmluY2lwbGVzIGZvciBkZXZlbG9waW5nIG9udG9sb2dpZXMgYXJlIGlkZW50ae+sgWVkIGJ5IEtvcnBpcGFhIGFuZCBNYW50eWphcnZpIFsxNDBdIGFzOiBkb21haW4sIHNpbXBsaWNpdHksIHByYWN0aWNhbCBhY2Nlc3MsIO+sgmV4aWJpbGl0eSBhbmQgZXhwYW5kYWJpbGl0eSwgZmFjaWxpdGF0ZSBpbmZlcmVuY2UsIGdlbmVcIixcIkYgWzE0NF0sIFJERlMgWzE0NV0sIE9XTCBbMTQ2XS4gVGhlIGN1cnJlbnQgcmVjb21tZW5kYXRpb24gaXMgT1dMIDIgd2hpY2ggaXMgYW4gZXh0ZW5kZWQgdmVyc2lvbiBvZiBPV0wuIEEgc2lnbmnvrIFjYW50IGFtb3VudCBvZiBPV0wgdXNhZ2UgaGFzIGJlZW4gbm90aWNlZCBpbiB0aGUgY29udGV4dCBtb2RlbGxpbmcgYWQgcmVhc29uaW5nIGRvbWFpbiBbMTFdLiBJdCBmdXJ0aGVyIGVtcGhhc2lzZXMgdGhlIHJlcXVpcmVtZW50IElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFgsIFhYWFggWFhYWCAxOSBvZiBoYXZpbmcgdGhlIG1vZGVsbGluZyBsYW5ndWFnZSwgcmVhc29uaW5nIGVuZ2luZXMsIGFuZCBtZWNoYW5pc20gdG8gZGXvrIFuZSBydWxlcyBhcyBhIFwiLFwicyBvZiByYXcgY29udGV4dDogaW1wZXJmZWN0aW9uIChpLmUuIHVua25vd24sIGFtYmlndW91cywgaW1wcmVjaXNlLCBvciBlcnJvbmVvdXMpIGFuZCB1bmNlcnRhaW50eS4gUmVhc29uaW5nIHBlcmZvcm1hbmNlIGNhbiBiZSBtZWFzdXJlZCB1c2luZyBlZu+sgWNpZW5jeSwgc291bmRuZXNzLCBjb21wbGV0ZW5lc3MsIGFuZCBpbnRlcm9wZXJhYmlsaXR5IFsxMV0uIFJlYXNvbmluZyBpcyBhbHNvIGNhbGxlZCBpbmZlcmVuY2luZy4gQ29udGVzdCByZWFzb25pbmcgY29tcHJpc2VzIHNldmVyYWwgc3RlcHMuIEJyb2FkbHkgd2UgY2FuIGRpdmlkZSB0aGVtIGludG8gdGhyZWUgcGhhc2VzIFsxNDhdLiAgQ29udGV4dCBwcmUtcHJvY2Vzc2luZzogVGhpcyBwaGFzZSBjbGVhbnMgdGhlIGNvbGxlY3RlZCBzZW5zb3IgXCIsXCJpY2FsIHRvIGluZmVyIGhpZ2gtbGV2ZWwgY29udGV4dCB3aXRoIGhpZ2ggYWNjdXJhY3kuIENvbnRleHQgcmVhc29uaW5nIGhhcyBiZWVuIHJlc2VhcmNoZWQgb3ZlciBtYW55IHllYXJzLiBUaGUgbW9zdCBwb3B1bGFyIGNvbnRleHQgcmVhc29uaW5nIHRlY2huaXF1ZXMgKGFsc28gY2FsbGVkIGRlY2lzaW9uIG1vZGVscykgYXJlIHN1cnZleWVkIGluIFsxMV0sIFsxMl0sIFsxNDddLiBPdXIgaW50ZW50aW9uIGluIHRoaXMgcGFwZXIgaXMgbm90IHRvIHN1cnZleSBjb250ZXh0IHJlYXNvbmluZyB0ZWNobmlxdWVzIGJ1dCB0byBicmll76yCeSBpbnRyb2R1Y2UgdGhlbSBzbyBpdCB3aWxsIGhlbHAgdG8gdW5kZXJzdGFuZCBhbmQgYXBwcmVjaWF0ZSB0aGUgcm9sZSBvZiBjb250ZXh0IHJlYXNvbmluZyBpbiB0aGUgXCJdLFwiMjE0MzkyMjY2M1wiOltcInRvIGZyZXF1ZW50bHkgZW5jb3VudGVyZWQgcHJvYmxlbXMgbGlrZSBoZXRlcm9nZW5laXR5LCBpbnRlcm9wZXJhYmlsaXR5LCBzZWN1cml0eSwgZGVwZW5kYWJpbGl0eSBbNThdLlwiLFwiTWlkZGxld2FyZSBbNThdIGNhbiBiZSBleHBsYWluZWQgYXMgYSBzb2Z0d2FyZSBsYXllciB0aGF0IGxpZXMgYmV0d2VlbiB0aGUgaGFyZHdhcmUgYW5kIGFwcGxpY2F0aW9uIGxheWVycy5cIl0sXCIyMTQ0MjA2OTUyXCI6W1wiQSBkaXNjdXNzaW9uIG9uIGNvbW1vbmx5IHVzZWQgc2Vuc29yIGRhdGEgdHlwZXMgYW5kIHNlbnNvcnMgaXMgcHJlc2VudGVkIGluIFsxMjFdLlwiXSxcIjIxNDcwMTI5NjJcIjpbXCJ0ZW1zLiBDb21wcmVoZW5zaXZlIGFuZCBleHRlbnNpdmUgYW1vdW50cyBvZiBpbmZvcm1hdGlvbiBvbiBzZW1hbnRpYyB0ZWNobm9sb2d5IGFyZSBhdmFpbGFibGUgaW4gWzEzMF0sIFsxMzFdLCBbMTMyXS4gSW4gYWRkaXRpb24sIGEgc2VtYW50aWMgYmFzZWQgYXJjaGl0ZWN0dXJlIGZvciBzZW5zb3IgZGF0YSBmdXNpb24gaXMgcHJlc2VudGVkIGluIFsxNzRdLCBbMTc1XSwgWzE3Nl0uIDYpIFByb2JhYmlsaXN0aWMgbG9naWM6IFRoaXMgY2F0ZWdvcnkgb2YgdGVjaG5pcXVlcyBhbGxvd3MgZGVjaXNpb25zIHRvIGJlIG1hZGUgYmFzZWQgb24gcHJvYmFiaWxpdGllcyBhdHRhY2hlZCB0byB0aGUgZmFjdHMgcmVsYXRlZCB0byB0aGUgcHJvYmxlbS4gSXQgY2FuIGJlIHVzZWQgdG8gY29tYmluZSBzZW5zb3IgZGFcIl0sXCIyMTQ4MTMxMTIyXCI6W1wiSW4gdGhlIElvVCBwYXJhZGlnbSwgY29udGV4dCBpbmZvcm1hdGlvbiBoYXMgc2l4IHN0YXRlcyBbMTI0XTogcmVhZHksIHJ1bm5pbmcsIHN1c3BlbmRlZCwgcmVzdW1lZCwgZXhwaXJlZCwgYW5kIHRlcm1pbmF0ZWQuXCIsXCLigJQgWzEyNF0gMjAwNyBNIE9uIE8gUSDigJMg4oCTIEQgSCDigJMgUCBWIEEg4oCTIOKAkyDigJNcIl0sXCIyMTUxNjQyMTA5XCI6W1wiSXQgaGFzIGJlZW4gdXNlZCB0byBkZXRlY3QgYWN0aXZpdHkgcmVjb2duaXRpb24gb2YgcGF0aWVudHMgaW4gdGhlIGhlYWx0aGNhcmUgZG9tYWluIFsxNTVdIGFuZCB0byBsZWFybiBzaXR1YXRpb25zIGluIGEgc21hcnQgaG9tZSBlbnZpcm9ubWVudCBbMTU2XS5cIl0sXCIyMTUyMjY3NjUxXCI6W1wiIGRlY291cGxlIHRoZSBrbm93bGVkZ2UgZnJvbSB0aGUgYXBwbGljYXRpb24gYW5kIHByb2dyYW0gY29kZXMgWzExOV0uIFRoZXJlIGFyZSBzZXZlcmFsIHJlYXNvbnMgdG8gZGV2ZWxvcCBhbmQgdXNlIG9udG9sb2dpZXMgaW4gY29udHJhc3QgdG8gb3RoZXIgbW9kZWxsaW5nIHRlY2huaXF1ZXMuIFRoZSBtb3N0IGNvbW1vbiByZWFzb25zIGFyZSB0byBbMTM1XSwgWzEzNl0gc2hhcmUgYSBjb21tb24gdW5kZXJzdGFuZGluZyBvZiB0aGUgc3RydWN0dXJlIG9mIGluZm9ybWF0aW9uIGFtb25nIHBlb3BsZSBvciBzb2Z0d2FyZSBhZ2VudHMsIGFuYWx5c2UgZG9tYWluIGtub3dsZWRnZSwgc2VwYXJhdGUgZG9tYWluIGtub3dsZWRnZSBmcm9tIG9wZXJhdGlvbmFsIGtub3dsZWRnZSwgZW5hYmxlIHJldXNlIG9mIGRvXCIsXCJpbmcgc2Vuc29yIGRhdGEgYW5kIGFwcHJvcHJpYXRlbHkgYW5ub3RhdGluZyBpdCBhdXRvbWF0aWNhbGx5IGluIGEgcGFyYWRpZ20gc3VjaCBhcyB0aGUgSW9ULCB3aGVyZSBhcHBsaWNhdGlvbiBkb21haW5zIHZhcnkgd2lkZWx5LCBpcyBhIGNoYWxsZW5naW5nIHRhc2suIFJlY2VudCBkZXZlbG9wbWVudHMgaW4gc2VtYW50aWMgdGVjaG5vbG9naWVzIFsxMzVdLCBbMTQzXSwgWzIyNV0gYW5kIGxpbmtlZCBkYXRhIFsyMjZdLCBbMjI3XSBzaG93IGZ1dHVyZSBkaXJlY3Rpb25zIHRvIGNhcnJ5IG91dCBmdXJ0aGVyIHJlc2VhcmNoIHdvcmsuIFNlbWFudGljIHRlY2hub2xvZ3kgaXMgcG9wdWxhcmx5IHVzZWQgdG8gZW5jb2RlIGRvbWFpbiBrbm93bGVkZ2UuIDMpIEFjcXVpc2l0aW9uLCBtb2RlbGxpbmcsIHJlYXNcIl0sXCIyMTUzMDc0NzE3XCI6W1wiIEh1bGwgZXQgYWwuIFs3Nl0sIGFuZCBXYXJkIGV0IGFsLiBbNzddIHVzZWQgc3lub255bXMgdG8gcmVmZXIgdG8gY29udGV4dCwgc3VjaCBhcyBlbnZpcm9ubWVudCBhbmQgc2l0dWF0aW9uLiBUaGVyZWZvcmUsIHRoZXNlIGRl76yBbml0aW9ucyBhbHNvIGNhbm5vdCBiZSB1c2VkIHRvIGlkZW50aWZ5IG5ldyBjb250ZXh0LiBBYm93ZCBhbmQgTXluYXR0IFs3OF0gaWRlbnRp76yBZWQgdGhlIO+sgXZlIFfigJlzIChXaG8sIFdoYXQsIFdoZXJlLCBXaGVuLCBXaHkpIGFzIHRoZSBtaW5pbXVtIGluZm9ybWF0aW9uIHRoYXQgaXMgbmVjZXNzYXJ5IHRvIHVuZGVyc3RhbmQgY29udGV4dC4gU2NoaWxpdCBldCBhbC4gWzc5XSBhbmQgUGFzY29lIFs4MF0gaGF2ZSBhbHNvIGRl76yBbmVkIHRoZSB0ZXJtIGNvbnRleHQuIERleSBjbGFpXCIsXCJ0LCB0aGVyZSBhcmUgYSB2YXJpZXR5IG9mIG90aGVyIGluZG9vciBwb3NpdGlvbmluZyBzY2hlbWVzIHRoYXQgY2FuIGJlIHVzZWQuIFRoZXJlZm9yZSwgaW4gb3JkZXIgdG8gY29udGludW91c2x5IHRyYWNrIHRoZSBwb3NpdGlvbmluZyByZWdhcmRsZXNzIG9mIGluZG9vciBvciBvdXRkb29yLCBzZW5zb3IgZGF0YSBmdXNpb24gaXMgZXNzZW50aWFsIFs3OF0uIERhdGEgZnVzaW9uIG1ldGhvZHMsIG1vZGVscywgYW5kIGNsYXNzae+sgWNhdGlvbiB0ZWNobmlxdWVzIGluIHRoZSB3aXJlbGVzcyBzZW5zb3IgbmV0d29ya3MgZG9tYWluIGFyZSBjb21wcmVoZW5zaXZlbHkgc3VydmV5ZWQgaW4gWzE5MF0uIEluIG9yZGVyIHRvIGlkZW50aWZ5IGNvbnRleHQsIGl0IGlzIHBvc3NpYmxlIHRvIGNvbWJpbmUgZGF0YSBmXCJdLFwiMjE1NTM3MDMyMlwiOltcInJ2aSBbMTQwXSBhczogZG9tYWluLCBzaW1wbGljaXR5LCBwcmFjdGljYWwgYWNjZXNzLCDvrIJleGliaWxpdHkgYW5kIGV4cGFuZGFiaWxpdHksIGZhY2lsaXRhdGUgaW5mZXJlbmNlLCBnZW5lcmljaXR5LCBlZu+sgWNpZW5jeSwgYW5kIGV4cHJlc3NpdmVuZXNzLiBPbnRvbG9naWVzIGNvbnNpc3RzIG9mIHNldmVyYWwgY29tbW9uIGtleSBjb21wb25lbnRzIFsxNDFdLCBbMTQyXSBzdWNoIGFzIGluZGl2aWR1YWxzLCBjbGFzc2VzLCBhdHRyaWJ1dGVzLCByZWxhdGlvbnMsIGZ1bmN0aW9uIHRlcm1zLCByZXN0cmljdGlvbnMsIHJ1bGVzLCBheGlvbXMsIGFuZCBldmVudHMuIEZ1cnRoZXJtb3JlLCB0aGVyZSBhcmUgdHdvIHN0ZXBzIGluIGRldmVsb3Bpbmcgb250b2xvZ2llcy4gRmlyc3QsIHRoZSBkb21haW4gYW5kIHNcIixcImluIFsxNTJdLiBCYXllc2lhbiBOZXR3b3JrcyBpcyBhIHRlY2huaXF1ZSBiYXNlZCBvbiBwcm9iYWJpbGlzdGljIHJlYXNvbmluZyBjb25jZXB0cy4gSXQgdXNlcyBhbW9uZyB0aGVtLiBJdCBpcyBhIHdpZGVseSB1c2VkIHRlY2huaXF1ZSBpbiBzdGF0aXN0aWNhbCByZWFzb25pbmcuIEV4YW1wbGUgYXBwbGljYXRpb25zIGFyZSBwcmVzZW50ZWQgaW4gWzE0MV0sIFsxNTNdLiBCYXllc2lhbiBuZXR3b3JrcyBhcmUgY29tbW9ubHkgdXNlZCBpbiBjb21iaW5pbmcgdW5jZXJ0YWluIGluZm9ybWF0aW9uIGZyb20gYSBsYXJnZSBudW1iZXIgb2Ygc291cmNlcyBhbmQgZGVkdWNpbmcgaGlnaGVyLWxldmVsIGNvbnRleHRzLiBBcnRp76yBY2lhbCBuZXVyYWwgbmV0d29ya3MgaXMgYSB0ZWNobmlxdWUgdGhhdCBhdHRlbXB0XCIsXCIwMDcgTSBPbiBPIFEg4oCTIOKAkyBYIEQgSCDigJMgUCBWIEEg4oCTIOKAkyDigJMgQ09TTU9TIFsyMDFdIDIwMDggTSBPYiBSIFEgMiw0IOKAkyDigJMgWCDigJMgSCDigJMgUCDigJMgQSBYIOKAkyBYIERNUy1DQSBbMjAyXSAyMDA4IFMgTSBSIFEgNSDigJMg4oCTIFgg4oCTIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTIOKAkyBDRE1TIFsyMDNdIDIwMDggTSBLLE0gUiBRIDIgWCDigJMgWCBEIEgg4oCTIEEg4oCTIEEsRiDigJMg4oCTIFgg4oCUIFsxNDFdIDIwMDggTSBPbiBPLFAgUSA1IOKAkyBYIOKAkyBEIEgg4oCTIOKAkyBWIOKAkyDigJMg4oCTIOKAkyDigJQgWzIwNF0gMjAwOCBNIE9uIFIsTyBQLFEgNSDigJMg4oCTIFggRCBIIOKAkyBQIOKAkyBBIOKAkyDigJMg4oCTIEFjb01TIFs4OF0gMjAwOCBNIE0sRyxPbiBSLE8gUCA1IOKAkyBYIFggQSBIIOKAkyBQIOKAkyDigJMg4oCTIOKAkyBYIENST0NPIFsxMThdIDIwMDggTSBPbiBSLE8gUSBYIFgg4oCTIEQgSCBYIEEgQyxWIOKAkyBcIixcInlwZXMgb2YgY29udGV4dCBhcyB0aGV5IGNhbiBoZWxwIGluIGEgdmFyaWV0eSBvZiBzaXR1YXRpb25zLiBUaGV5IGFsc28gc3RyZXNzZXMgdGhlIHJlcXVpcmVtZW50IG9mIGhhdmluZyBkb21haW4gc3BlY2nvrIFjIGFuZCBkb21haW4gaW5kZXBlbmRlbnQgb250b2xvZ2llcy4gNCkgSHlicmlkIFJlYXNvbmluZzogR2FpYSBbMTY4XSwgS28gYW5kIFNpbSBbMTQxXSwgQ0RNUyBbMjAzXSwgYW5kIEhDb00gWzE5OF0gaGlnaGxpZ2h0IHRoZSBpbXBvcnRhbmNlIG9mIGVtcGxveWluZyBtdWx0aXBsZSByZWFzb25pbmcgdGVjaG5pcXVlcyBzdWNoIGFzIEJheWVzaWFuIG5ldHdvcmtzLCBwcm9iYWJpbGlzdGljIGFuZCBmdXp6eSBsb2dpYywgd2hlcmUgZWFjaCB0ZWNobmlxdWUgcGVyZm9ybXMgd2VsbCBpbiBkaWZmZXJlXCJdLFwiMjE1NzUwMjY2OFwiOltcIk1vc3RseSwgdGhlIElvVCBhbmQgU04gYXJlIGV2ZW50IGRyaXZlbiBbNTJdLlwiLFwiTWlkU2VuIFs1Ml0gMjAwOSBNIEsgUiBQLFEgNSDigJMgRCBIIOKAkyBQIOKAkyDigJMg4oCTIOKAk1wiXSxcIjIxNTc3MzU2NTlcIjpbXCJpb24gaXMgbGV2ZXJhZ2VkLiBJbiAyMDA0LCBTdHJhbmcgYW5kIExpbm5ob2ZmLVBvcGllbiBbN10gY29tcGFyZWQgdGhlIG1vc3QgcG9wdWxhciBjb250ZXh0IG1vZGVsbGluZyB0ZWNobmlxdWVzIGluIHRoZSDvrIFlbGQuIE1pZGRsZXdhcmUgc29sdXRpb25zIGZvciBzZW5zb3IgbmV0d29ya3MgYXJlIHN1cnZleWVkIGJ5IE1vbGxhIGFuZCBBaGFtZWQgWzhdIGluIDIwMDYuIFR3byBzZXBhcmF0ZSBzdXJ2ZXlzIHdlcmUgY29uZHVjdGVkIGJ5IEtqYWVyIFs5XSBhbmQgQmFsZGF1ZiBldCBhbC4gWzEwXSBpbiAyMDA3IG9uIGNvbnRleHQtYXdhcmUgc3lzdGVtcyBhbmQgbWlkZGxld2FyZSBzb2x1dGlvbnMgdXNpbmcgZGlmZmVyZW50IHRheG9ub21pZXMuIEJvdGggc3VydmV5cyBjb21wYXJlZCBsaW1pdGVkIG5cIixcImMuIEZ1cnRoZXIsIHRoZXJlIGFyZSB0aHJlZSBjYXRlZ29yaWVzIG9mIHNlbnNvciBuZXR3b3JrcyB0aGF0IGNvbXByaXNlIHRoZSBJb1QgWzQ0XTogYm9keSBzZW5zb3IgbmV0d29ya3MgKEJTTiksIG9iamVjdCBzZW5zb3IgbmV0d29ya3MgKE9TTiksIGFuZCBlbnZpcm9ubWVudCBzZW5zb3IgbmV0d29ya3MgKEVTTikuIE1vbGxhIGFuZCBBaGFtZWQgWzhdIGlkZW50ae+sgWVkIHRlbiBjaGFsbGVuZ2VzIHRoYXQgbmVlZCB0byBiZSBjb25zaWRlcmVkIHdoZW4gZGV2ZWxvcGluZyBzZW5zb3IgbmV0d29yayBtaWRkbGV3YXJlIHNvbHV0aW9uczogYWJzdHJhY3Rpb24gc3VwcG9ydCwgZGF0YSBmdXNpb24sIHJlc291cmNlIGNvbnN0cmFpbnRzLCBkeW5hbWljIHRvcG9sb2d5LCBhcHBsaWNhdGlvbiBrbm93bGVkZ1wiLFwidCwgSldlYkR1c3QsIEhvdXJnbGFzcywgSGlGaSwgQ291Z2FyLCBJbXBhbGEsIFNJTkEsIE1hdGUsIFRpbnlEQiwgU21hcnQgT2JqZWN0LCBBZ2lsbGEsIFRpbnlDdWJ1cywgVGlueUxpbWUsIEVudmlyb1RyYWNrLCBNaXJlcywgSG9vZCwgYW5kIFNtYXJ0IE1lc3NhZ2VzLiBTb21lIG9mIHRoZSBhYm92ZSBhcHByb2FjaGVzIGFyZSBzdXJ2ZXllZCBpbiBbOF0sIFs0NV0uIEEgc3VydmV5IG9uIHdlYiBiYXNlZCB3aXJlbGVzcyBzZW5zb3IgYXJjaGl0ZWN0dXJlcyBhbmQgYXBwbGljYXRpb25zIGlzIHByZXNlbnRlZCBpbiBbNDZdLiBJRUVFIENPTU1VTklDQVRJT05TIFNVUlZFWVMgJmFtcDsgVFVUT1JJQUxTLCBWT0wuIFgsIE5PLiBYLCBYWFhYIFhYWFggNSBGLiBMYXllcnMgaW4gU2Vuc29yIE5ldHdvcmtzIFwiXSxcIjIxNTc3Nzc3MzFcIjpbXCJvYmxlbSBvZiBjb250ZXh0IGF3YXJlbmVzcyBpdCB0byBjb21iaW5lIG11bHRpcGxlIG1vZGVscyBpbiBzdWNoIGEgd2F5IHRoYXQsIGFzIGEgd2hvbGUsIHRoZXkgcmVkdWNlIHdlYWtuZXNzZXMgYnkgY29tcGxlbWVudGluZyBlYWNoIG90aGVyLiBGb3IgZXhhbXBsZSwgQWx0ZXJuYXRpdmUgQ29udGV4dCBDb25zdHJ1Y3Rpb24gVHJlZXMgKEFDQ1QpIFsxODFdIGlzIGFuIGFwcHJvYWNoIHRoYXQgZW5hYmxlcyB0aGUgY29uY3VycmVudCBldmFsdWF0aW9uIGFuZCBjb25zb2xpZGF0aW9uIG9mIGRpZmZlcmVudCByZWFzb25pbmcgbW9kZWxzIHN1Y2ggYXMgbG9naWMgcnVsZXMsIEJheWVzaWFuIG5ldHdvcmtzIGFuZCBDb0NvR3JhcGhzIFsxODJdLiBUaGVyZSBhcmUgdHdvIHJlYXNvbnMgdGhhdCBjb250ZXh0IGlcIl0sXCIyMTU4NDQ5NjU5XCI6W1wiciBkYXRhIGZ1c2lvbjogSXQgaXMgYSBtZXRob2Qgb2YgY29tYmluaW5nIHNlbnNvciBkYXRhIGZyb20gbXVsdGlwbGUgc2Vuc29ycyB0byBwcm9kdWNlIG1vcmUgYWNjdXJhdGUsIG1vcmUgY29tcGxldGUsIGFuZCBtb3JlIGRlcGVuZGFibGUgaW5mb3JtYXRpb24gdGhhdCBjb3VsZCBub3QgYmUgYWNoaWV2ZSB0aHJvdWdoIGEgc2luZ2xlIHNlbnNvciBbMTQ5XS4gSW4gdGhlIElvVCwgZnVzaW9uIGlzIGV4dHJlbWVseSBpbXBvcnRhbnQsIGJlY2F1c2UgdGhlcmUgd2lsbCBiZSBiaWxsaW9ucyBvZiBzZW5zb3JzIGF2YWlsYWJsZS4gQXMgYSByZXN1bHQsIGEgbGFyZ2UgbnVtYmVyIG9mIGFsdGVybmF0aXZlIHNvdXJjZXMgd2lsbCBleGlzdCB0byBwcm92aWRlIHRoZSBzYW1lIGluZm9ybWF0aW9uLiAgQ29udGVcIixcImhpY2ggaXMgYWxzbyBjb25zaWRlcmVkIGEgZGF0YSBwcm9jZXNzaW5nIHRlY2huaXF1ZSwgaXMgY3JpdGljYWwgaW4gdW5kZXJzdGFuZGluZyBzZW5zb3IgZGF0YS4gSW4gb3JkZXIgdG8gbGF5IGEgc29saWQgZm91bmRhdGlvbiB0byBvdXIgZGlzY3Vzc2lvbiwgd2UgYWRvcHQgdGhlIGRl76yBbml0aW9uIHByb3ZpZGVkIGJ5IEhhbGwgYW5kIExsaW5hcyBbMTQ5XSBvbiBzZW5zb3IgZGF0YSBmdXNpb24uIOKAnFNlbnNvciBkYXRhIGZ1c2lvbiBpcyBhIG1ldGhvZCBvZiBjb21iaW5pbmcgc2Vuc29yIGRhdGEgZnJvbSBtdWx0aXBsZSBzZW5zb3JzIHRvIHByb2R1Y2UgbW9yZSBhY2N1cmF0ZSwgbW9yZSBjb21wbGV0ZSwgYW5kIG1vcmUgZGVwZW5kYWJsZSBpbmZvcm1hdGlvbiB0aGF0IGNvdWxkIG5vdCBiZSBwb3NzaWJcIl0sXCIyMTU4NzYzOTg0XCI6W1wiU0lNIFsyMDBdIDIwMDcgTSBLLEcgUiDigJMgMiDigJMg4oCTIOKAkyBIIOKAkyBQIEMgQSDigJMg4oCTIOKAk1wiXSxcIjIxNTk4MjEzNjNcIjpbXCJhcmUgdHlwaWNhbGx5IHVzZWQgdG8gbW9kZWwgY29tcGxleCByZWxhdGlvbnNoaXBzIGJldHdlZW4gaW5wdXRzIGFuZCBvdXRwdXRzIG9yIHRvIO+sgW5kIHBhdHRlcm5zIGluIGRhdGEuIEJvZHkgc2Vuc29yIG5ldHdvcmtzIGRvbWFpbiBoYXMgZW1wbG95ZWQgdGhpcyB0ZWNobmlxdWUgZm9yIHBlcnZhc2l2ZSBoZWFsdGhjYXJlIG1vbml0b3JpbmcgaW4gWzE1NF0uIFN1cHBvcnQgdmVjdG9yIG1hY2hpbmVzIGFyZSB3aWRlbHkgdXNlZCBmb3IgcGF0dGVybiByZWNvZ25pdGlvbiBpbiBjb250ZXh0LWF3YXJlIGNvbXB1dGluZy4gSXQgaGFzIGJlZW4gdXNlZCB0byBkZXRlY3QgYWN0aXZpdHkgcmVjb2duaXRpb24gb2YgcGF0aWVudHMgaW4gdGhlIGhlYWx0aGNhcmUgZG9tYWluIFsxNTVdIGFuZCB0byBsZWFybiBzaVwiLFwib24gWzE1OF0uIE5vaXNlIGRldGVjdGlvbiBhbmQgb3V0bGllciBkZXRlY3Rpb24gYXJlIG90aGVyIGFwcGxpY2F0aW9ucyBpbiBjb250ZXh0LWF3YXJlIGNvbXB1dGluZy4gQXBwbGljYXRpb25zIG9mIHVuc3VwZXJ2aXNlZCBsZWFybmluZyB0ZWNobmlxdWVzIGluIHJlbGF0aW9uIHRvIGJvZHkgc2Vuc29yIG5ldHdvcmtzIGFyZSBzdXJ2ZXllZCBpbiBbMTU0XS4gVGhlIHVuc3VwZXJ2aXNlZCBjbHVzdGVyaW5nIG1ldGhvZCBoYXMgYmVlbiBlbXBsb3llZCB0byBjYXB0dXJpbmcgdXNlciBjb250ZXh0cyBieSBkeW5hbWljIHByb++sgWxpbmcgaW4gWzE1OV0uIDMpIFJ1bGVzOiBUaGlzIGlzIHRoZSBzaW1wbGVzdCBhbmQgbW9zdCBzdHJhaWdodGZvcndhcmQgbWV0aG9kcyBvZiByZWFzb25pbmcgb3V0IG9mIGFsbCBcIl0sXCIyMTU5OTQxMDkxXCI6W1wiUCA1IOKAkyBYIFggQSBIIOKAkyBQIOKAkyDigJMg4oCTIOKAkyBYIENST0NPIFsxMThdIDIwMDggTSBPbiBSLE8gUSBYIFgg4oCTIEQgSCBYIEEgQyxWIOKAkyDigJMg4oCTIFggRW1vQ0FTTiBbMjA1XSAyMDA4IFMgSyBSIFEgMiw0IOKAkyDigJMg4oCTIEQgTCDigJMgUCDigJMg4oCTIOKAkyDigJMg4oCTIEh5ZHJhIFs2MV0gMjAwOSBNIEssT24sT2IgUixPIFEgMyBYIFggWCDigJMgSCBYIFAgViDigJMg4oCTIOKAkyDigJMgVVBuUCBbMjA2XSAyMDA5IE0gSyxNIFIgUSA0IFgg4oCTIFggRCBIIFggQSDigJMgQSBYIOKAkyBYIENPU0FSIFsxNTFdIDIwMDkgTSBPbiBTLE8gUSA1IOKAkyBYIFggQSBIIOKAkyBQIOKAkyDigJMg4oCTIOKAkyDigJMgU1BCQ0EgWzE2MV0gMjAwOSBNIE9uIFIsTyBRIDIg4oCTIOKAkyBYIEEgSCBYIEEg4oCTIOKAkyDigJMg4oCTIOKAkyBDLUNBU1QgWzIwN10gMjAwOSBNIE0gUiBQLFEgNSBYIOKAkyBYIEQgSCDigJMgQSDigJMg4oCTIOKAkyBcIixcInJvcG9zZWQgYSB0ZWNobmlxdWUgdGhhdCBhbGxvd3MgaXQgdG8gYXV0b21hdGljYWxseSBjb25uZWN0IHNlbnNvcnMgdG8gYW4gSW9UIHNvbHV0aW9uIHVzaW5nIFRyYW5zZHVjZXIgRWxlY3Ryb25pYyBEYXRhIFNoZWV0IChURURTKSBbMjIxXSBhbmQgU2Vuc29yIE1hcmt1cCBMYW5ndWFnZXMgKFNlbnNvck1MKSBbMTMzXS4gVVBuUCBGUkFNRVdPUksgWzIwNl0gaXMgc3Ryb25nbHkgcmVsYXRlZCB0byBhIHZpc2lvbiBvZiB0aGUgSW9UIHdoZXJlIG1hY2hpbmUtdG8tbWFjaGluZSBjb21tdW5pY2F0aW9uIHBsYXkgYSBzaWduae+sgWNhbnQgcm9sZS4gVGhpcyBhcHByb2FjaCBpcyBhcHBsaWNhYmxlIHRvIGRldmljZXMgc3VjaCBhcyBjYW1lcmFzLCB3ZWIgY2FtcywgYW5kIG1pY3Jvd2F2ZXM7IGJ1dCwgbm90IGZvXCJdLFwiMjE2MDM4NTI4M1wiOltcIkVuYWN0b3IgWzIxN10gcHJvdmlkZXMgYSBjb250ZXh0IGRlY2lzaW9uIG1vZGVsbGluZyBmYWNpbGl0eSB0byB0aGUgQ29udGV4dCBUb29sa2l0LlwiXSxcIjIxNjE4OTc2NzdcIjpbXCJyZW5lc3MgZnJhbWV3b3JrcyB0eXBpY2FsbHkgc2hvdWxkIHN1cHBvcnQgYWNxdWlzaXRpb24sIHJlcHJlc2VudGF0aW9uLCBkZWxpdmVyeSwgYW5kIHJlYWN0aW9uIFs3Ml0uIEluIGFkZGl0aW9uLCB0aGVyZSBhcmUgdGhyZWUgbWFpbiBhcHByb2FjaGVzIHRoYXQgd2UgY2FuIGZvbGxvdyB0byBidWlsZCBjb250ZXh0YXdhcmUgYXBwbGljYXRpb25zIFs4OF0uICBObyBhcHBsaWNhdGlvbi1sZXZlbCBjb250ZXh0IG1vZGVsOiBBcHBsaWNhdGlvbnMgcGVyZm9ybSBhbGwgdGhlIGFjdGlvbnMsIHN1Y2ggYXMgY29udGV4dCBhY3F1aXNpdGlvbiwgcHJlLXByb2Nlc3NpbmcsIHN0b3JpbmcsIGFuZCByZWFzb25pbmcgd2l0aGluIHRoZSBhcHBsaWNhdGlvbiBib3VuZGFyaWVzLiAgSW1wbGljaXQgY29udGV4dCBcIixcIjAwOCBTIE0gUiBRIDUg4oCTIOKAkyBYIOKAkyBIIOKAkyBBIOKAkyDigJMg4oCTIOKAkyDigJMgQ0RNUyBbMjAzXSAyMDA4IE0gSyxNIFIgUSAyIFgg4oCTIFggRCBIIOKAkyBBIOKAkyBBLEYg4oCTIOKAkyBYIOKAlCBbMTQxXSAyMDA4IE0gT24gTyxQIFEgNSDigJMgWCDigJMgRCBIIOKAkyDigJMgViDigJMg4oCTIOKAkyDigJMg4oCUIFsyMDRdIDIwMDggTSBPbiBSLE8gUCxRIDUg4oCTIOKAkyBYIEQgSCDigJMgUCDigJMgQSDigJMg4oCTIOKAkyBBY29NUyBbODhdIDIwMDggTSBNLEcsT24gUixPIFAgNSDigJMgWCBYIEEgSCDigJMgUCDigJMg4oCTIOKAkyDigJMgWCBDUk9DTyBbMTE4XSAyMDA4IE0gT24gUixPIFEgWCBYIOKAkyBEIEggWCBBIEMsViDigJMg4oCTIOKAkyBYIEVtb0NBU04gWzIwNV0gMjAwOCBTIEsgUiBRIDIsNCDigJMg4oCTIOKAkyBEIEwg4oCTIFAg4oCTIOKAkyDigJMg4oCTIOKAkyBIeWRyYSBbNjFdIDIwMDkgTSBLLE9uLE9iIFIsTyBRIDMgWCBYIFgg4oCTIEggXCIsXCJjZXMgYW5kIHB1c2ggdGhlbSB0byB0aGUgc2VydmVyIHRvIGJlIHVzZWQgYnkgdGhlIHJ1bGUgY2hlY2tpbmcgZW5naW5lLiBQcm92aWRpbmcgYSBtb2JpbGUgaW50ZXJmYWNlIHRvIGJ1aWxkIHJ1bGVzIGFuZCBxdWVyaWVzIGlzIGltcG9ydGFudCBpbiBhIGR5bmFtaWMgYW5kIG1vYmlsZSBlbnZpcm9ubWVudCBzdWNoIGFzIHRoZSBJb1QuIEFDb01TIFs4OF0gKEF1dG9ub21pYyBDb250ZXh0IE1hbmFnZW1lbnQgU3lzdGVtKSBjYW4gZHluYW1pY2FsbHkgY29u76yBZ3VyZSBhbmQgcmVjb27vrIFndXJlIGl0cyBjb250ZXh0IGluZm9ybWF0aW9uIGFjcXVpc2l0aW9uIGFuZCBwcmUtcHJvY2Vzc2luZyBmdW5jdGlvbmFsaXR5IHRvIHBlcmZvcm0gZmF1bHQgdG9sZXJhbnQgcHJvdmlzaW9uaW5nIG9mIGNvbnRleHQgaW5cIixcInJ5IGFzIGl0IGlzIGEgbWFqb3IgcmVxdWlyZW1lbnQgaW4gSW9UIG1pZGRsZXdhcmUgYXBwbGljYXRpb25zLCB3aGVyZSBkb21haW5zIGFuZCByZXF1aXJlZCBrbm93bGVkZ2UgY2Fubm90IGJlIHByZWRpY3RlZCBkdXJpbmcgdGhlIGRldmVsb3BtZW50IHN0YWdlLiBBIGNvbXBsZW1lbnRhcnkgdGVjaG5vbG9neSBoYXMgcHJvcG9zZWQgYnkgQUNvTVMgWzg4XS4gSXQgaGFzIHByb3Bvc2VkIGEgdGVjaG5pcXVlIHRoYXQgYWxsb3dzIGl0IHRvIGF1dG9tYXRpY2FsbHkgY29ubmVjdCBzZW5zb3JzIHRvIGFuIElvVCBzb2x1dGlvbiB1c2luZyBUcmFuc2R1Y2VyIEVsZWN0cm9uaWMgRGF0YSBTaGVldCAoVEVEUykgWzIyMV0gYW5kIFNlbnNvciBNYXJrdXAgTGFuZ3VhZ2VzIChTZW5zb3JNTCkgWzEzM10uIFVQblAgXCJdLFwiMjE2MzQxOTYyN1wiOltcImFuZCDvrIFuYWxseSwgY29udGV4dCBtYW5hZ2VtZW50IGRlc2lnbiBwcmluY2lwbGVzIGluIHRoZSBJb1QgcGFyYWRpZ20uIEEuIENvbnRleHQtYXdhcmVuZXNzIFJlbGF0ZWQgRGXvrIFuaXRpb25zIDEpIERl76yBbml0aW9uIG9mIENvbnRleHQ6IFRoZSB0ZXJtIGNvbnRleHQgaGFzIGJlZW4gZGXvrIFuZWQgYnkgbWFueSByZXNlYXJjaGVycy4gRGV5IGV0IGFsLiBbNzJdIGV2YWx1YXRlZCBhbmQgaGlnaGxpZ2h0ZWQgdGhlIHdlYWtuZXNzZXMgb2YgdGhlc2UgZGXvrIFuaXRpb25zLiBEZXkgY2xhaW1lZCB0aGF0IHRoZSBkZe+sgW5pdGlvbiBwcm92aWRlZCBieSBTY2hpbGl0IGFuZCBUaGVpbWVyIFsyXSB3YXMgYmFzZWQgb24gZXhhbXBsZXMgYW5kIGNhbm5vdCBiZSB1c2VkIHRvIGlkZW50aWZ5IG5ldyBjb250ZXh0LiBGdXJ0XCIsXCJnIHRoaXMgZGXvrIFuaXRpb24gd2UgY2FuIGVhc2lseSBpZGVudGlmeSB3aGV0aGVyIHRoaXMgc3lzdGVtIGlzIGEgY29udGV4dC1hd2FyZSBzeXN0ZW0gb3Igbm90LiBDb250ZXh0IGF3YXJlbmVzcyBmcmFtZXdvcmtzIHR5cGljYWxseSBzaG91bGQgc3VwcG9ydCBhY3F1aXNpdGlvbiwgcmVwcmVzZW50YXRpb24sIGRlbGl2ZXJ5LCBhbmQgcmVhY3Rpb24gWzcyXS4gSW4gYWRkaXRpb24sIHRoZXJlIGFyZSB0aHJlZSBtYWluIGFwcHJvYWNoZXMgdGhhdCB3ZSBjYW4gZm9sbG93IHRvIGJ1aWxkIGNvbnRleHRhd2FyZSBhcHBsaWNhdGlvbnMgWzg4XS4gIE5vIGFwcGxpY2F0aW9uLWxldmVsIGNvbnRleHQgbW9kZWw6IEFwcGxpY2F0aW9ucyBwZXJmb3JtIGFsbCB0aGUgYWN0aW9ucywgc3VjaCBhcyBjb250ZXh0IGFcIixcImN0dXJhbCBzdHlsZXMgYXJlIG51bWJlcmVkIGFzIGZvbGxvd3MuICgxKSBDb21wb25lbnQgYmFzZWQgYXJjaGl0ZWN0dXJlIHdoZXJlIHRoZSBlbnRpcmUgc29sdXRpb24gaXMgYmFzZWQgb24gbG9vc2VseSBjb3VwbGVkIG1ham9yIGNvbXBvbmVudHMsIHdoaWNoIGludGVyYWN0IGVhY2ggb3RoZXIuIEZvciBleGFtcGxlLCBDb250ZXh0IFRvb2xraXQgWzcyXSBoYXMgdGhyZWUgbWFqb3IgY29tcG9uZW50cyB3aGljaCBwZXJmb3JtIHRoZSBtb3N0IGNyaXRpY2FsIGZ1bmN0aW9uYWxpdGllcyBvZiB0aGUgc3lzdGVtLiAoMikgRGlzdHJpYnV0ZWQgYXJjaGl0ZWN0dXJlIGVuYWJsZXMgcGVlci10by1wZWVyIGludGVyYWN0aW9uIGluIGEgZGlzdHJpYnV0ZWQgZmFzaGlvbiwgc3VjaCBhcyBpbiBTb2xhciBbMTg0XCIsXCJvY2Vzc2luZzogV2UgZGVub3RlIHRoZSBwcmVzZW5jZSBvZiBjb250ZXh0IGFnZ3JlZ2F0aW9uIGZ1bmN0aW9uYWxpdHkgdXNpbmcgKEEpIGFuZCBjb250ZXh0IO+sgWx0ZXIgZnVuY3Rpb25hbGl0eSB1c2luZyAoRikuIEFnZ3JlZ2F0aW9uIGNhbiBiZSBleHBsYWluZWQgaW4gZGlmZmVyZW50IHdheXM7IGZvciBleGFtcGxlLCBDb250ZXh0IFRvb2xraXQgWzcyXSBoYXMgYSBkZWRpY2F0ZWQgY29tcG9uZW50IGNhbGxlZCBjb250ZXh0IGFnZ3JlZ2F0b3IgdG8gY29sbGVjdCBkYXRhIHJlbGF0ZWQgdG8gYSBzcGVjae+sgWMgZW50aXR5IChlLmcuIHBlcnNvbikgZnJvbSBkaWZmZXJlbnQgY29udGV4dCBzb3VyY2VzIGFuZCBhY3QgYXMgYSBwcm94eSB0byBjb250ZXh0IGFwcGxpY2F0aW9ucy4gVGhleSBkbyBub3QgcGVcIixcInRlY3Rpb24gZXJ5IEFubm90YXRpb24geHQgYXJlbmVzcyB5IFN1cHBvcnQgeHQgUHJvY2Vzc2luZyBDb21wb3NpdGlvbiBQcm9jZXNzaW5nIE1haW50ZW5hbmNlICgxKSAoMikgKDMpICg0KSAoNSkgKDYpICg3KSAoOCkgKDkpICgxMCkgKDExKSAoMTIpICgxMykgKDE0KSAoMTUpICgxNikgKDE3KSAoMTgpICgxOSkgKDIwKSBDb250ZXh0IFRvb2xraXQgWzcyXSAyMDAxIFQgSyBYIFEgMSw1IFgg4oCTIOKAkyDigJMgSCDigJMgQSDigJMgQSDigJMg4oCTIOKAkyBTb2xhciBbMTg0XSAyMDAyIE0gSyxNLE9iIFIgUCAyIOKAkyDigJMgWCBEIEggWCBQIFggQSBYIOKAkyDigJMgQXVyYSBbMTkxXSAyMDAyIE0gTSBSIFAgMiDigJMg4oCTIFggRCBIIOKAkyBBIOKAkyDigJMg4oCTIOKAkyBYIENvT0wgWzE5Ml0gMjAwMyBUIE9uIFIsTyBRIDEg4oCTIFggWCBEIEgg4oCTIFMg4oCTIOKAkyDigJMg4oCTIFhcIl0sXCIyMTY0ODY5Nzk0XCI6W1wib25tZW50IG1vbml0b3JpbmcgWzQwXSwgYWdyaWN1bHR1cmUgWzM1XSwgbWVkaWNhbCBjYXJlIFs0MV0sIGV2ZW50IGRldGVjdGlvbiBbNDJdLCBzdHJ1Y3R1cmFsIGhlYWx0aCBtb25pdG9yaW5nIFs0M10sIGV0Yy4gRnVydGhlciwgdGhlcmUgYXJlIHRocmVlIGNhdGVnb3JpZXMgb2Ygc2Vuc29yIG5ldHdvcmtzIHRoYXQgY29tcHJpc2UgdGhlIElvVCBbNDRdOiBib2R5IHNlbnNvciBuZXR3b3JrcyAoQlNOKSwgb2JqZWN0IHNlbnNvciBuZXR3b3JrcyAoT1NOKSwgYW5kIGVudmlyb25tZW50IHNlbnNvciBuZXR3b3JrcyAoRVNOKS4gTW9sbGEgYW5kIEFoYW1lZCBbOF0gaWRlbnRp76yBZWQgdGVuIGNoYWxsZW5nZXMgdGhhdCBuZWVkIHRvIGJlIGNvbnNpZGVyZWQgd2hlbiBkZXZlbG9waW5nIHNlbnNvciBuZXR3b1wiLFwiYWxsZWQgYWNyb3NzIGNvbXB1dGF0aW9uYWwgZGV2aWNlcyAoYm90aCBsb3cgYW5kIGhpZ2gtZW5kKSBhbmQgdGhlIGNsb3VkLiAgRnJvbSB0aGVpciBvcmlnaW4sIFNOcyB3ZXJlIGRlc2lnbmVkLCBkZXZlbG9wZWQsIGFuZCB1c2VkIGZvciBzcGVjae+sgWMgYXBwbGljYXRpb24gcHVycG9zZXMsIGZvciBleGFtcGxlLCBkZXRlY3RpbmcgYnVzaCDvrIFyZSBbNDRdLiBJbiB0aGUgZWFybHkgZGF5cywgc2Vuc29yIG5ldHdvcmtzIHdlcmUgbGFyZ2VseSB1c2VkIGZvciBtb25pdG9yaW5nIHB1cnBvc2VzIGFuZCBub3QgZm9yIGFjdHVhdGlvbiBbNDldLiBJbiBjb250cmFzdCwgSW9UIGlzIG5vdCBmb2N1c2VkIG9uIHNwZWNp76yBYyBhcHBsaWNhdGlvbnMuIFRoZSBJb1QgY2FuIGJlIGV4cGxhaW5lZCBhcyBhIGdlbmVyYVwiLFwi4oCTIOKAkyBEIEwg4oCTIFAg4oCTIOKAkyDigJMg4oCTIOKAkyBCSU9ORVRTIFsxOTddIDIwMDYgTSBPbiBSLE8gUSAxIOKAkyBYIOKAkyBBIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTIOKAkyBQUk9DT04gWzg2XSAyMDA2IFMgSyBSIFEgMiDigJMg4oCTIFggRCBMIOKAkyBQIOKAkyBBLEYg4oCTIOKAkyDigJMgQ01GIChNQUdORVQpIFs4NV0gMjAwNiBNIE0gUiBQLFEgMiw0IFgg4oCTIOKAkyBEIEgg4oCTIEEgQyDigJMgWCDigJMg4oCTIGUtU0VOU0UgWzQ0XSAyMDA2IE0g4oCTIFIgUSAyLDQg4oCTIFgg4oCTIEQgSCBYIFAg4oCTIEYg4oCTIOKAkyDigJMgSENvTSBbMTk4XSAyMDA3IE0gRyxPbiBSLE8gUSA1IFggWCDigJMgRCBIIOKAkyBTIFYgRiDigJMg4oCTIFggQ01TIFsxMDZdIDIwMDcgTSBPbiBPIFAsUSAxLDIgWCDigJMgWCBTIEgg4oCTIEEg4oCTIEEg4oCTIOKAkyBYIE1vQ0EgWzE5OV0gMjAwNyBNIE0sT2IgTyBQLFEgNCw1IOKAkyDigJMgWCBEIEggWCBBIFYgXCIsXCJkIHNlcnZpY2VzIGxvY2F0aW5nIHNlcnZpY2UgKGNvbnRleHQgcHJvdmlkZXJzIGFuZCBpbnRlcnByZXRlciBhcmUgYWxsb3dlZCB0byByZWdpc3RlciBzbyBvdGhlciBjb21wb25lbnRzIGNhbiBzZWFyY2ggZm9yIGFwcHJvcHJpYXRlcyBwcm92aWRlcnMgYW5kIGludGVycHJldGVycyBiYXNlZCBvbiB0aGVpciBjYXBhYmlsaXRpZXMpLiBlLVNFTlNFIFs0NF0gZW5hYmxlcyBhbWJpZW50IGludGVsbGlnZW5jZSB1c2luZyB3aXJlbGVzcyBtdWx0aS1zZW5zb3IgbmV0d29ya3MgZm9yIG1ha2luZyBjb250ZXh0LXJpY2ggaW5mb3JtYXRpb24gYXZhaWxhYmxlIHRvIGFwcGxpY2F0aW9ucyBhbmQgc2VydmljZXMuIGUtU0VOU0UgY29tYmluZXMgYm9keSBzZW5zb3IgbmV0d29ya3MgKEJTTiksIG9iamVjdCBzZW5zb1wiXSxcIjIxNjUwMDU2MTFcIjpbXCJwbGVzLCBtZXRob2RzLCBhbmQgYXBwbGljYXRpb25zIGluIHBlcnNwZWN0aXZlIFsxMzhdLiBTb21lIG9mIHRoZSByZXF1aXJlbWVudHMgYW5kIG9iamVjdGl2ZXMgYmVoaW5kIGRlc2lnbmluZyBhbiBvbnRvbG9neSBhcmUgc2ltcGxpY2l0eSwg76yCZXhpYmlsaXR5IGFuZCBleHRlbnNpYmlsaXR5LCBnZW5lcmFsaXR5LCBhbmQgZXhwcmVzc2l2ZW5lc3MgWzEzOV0uIEluIGFkZGl0aW9uLCBzb21lIG9mIHRoZSBnZW5lcmFsIHJlcXVpcmVtZW50cyBpbiBjb250ZXh0IG1vZGVsbGluZyBhbmQgcmVwcmVzZW50YXRpb24gYXJlIHVuaXF1ZSBpZGVudGnvrIFjYXRpb24sIHZhbGlkYXRpb24sIHJldXNlLCBoYW5kbGluZyB1bmNlcnRhaW50eSwgYW5kIGluY29tcGxldGUgaW5mb3JtYXRpb24gWzExXS4gQSBmdXJ0aGVyIGVpXCJdLFwiMjE2NTUyNTIwNlwiOltcImsgdGhlIHNlbnNvcnMgYmFzZWQgb24gZmFjdG9ycyBzdWNoIGFzIGFjY3VyYWN5LCByZWxldmFuY3ksIHVzZXIgZmVlZGJhY2ssIHJlbGlhYmlsaXR5LCBjb3N0LCBhbmQgY29tcGxldGVuZXNzLiBTaW1pbGFyIGNoYWxsZW5nZXMgaGF2ZSBiZWVuIGFkZHJlc3NlZCBpbiB0aGUgd2ViIHNlcnZpY2UgZG9tYWluIGR1cmluZyB0aGUgbGFzdCBkZWNhZGUgWzIzMF0sIFsyMzFdIHdoZXJlIHdlIGNhbiBsZWFybiBmcm9tIHRob3NlIGVmZm9ydHMuIDUpIFNlY3VyaXR5LCBwcml2YWN5LCBhbmQgdHJ1c3Q6IFRoaXMgaGFzIGJlZW4gYSBjaGFsbGVuZ2UgZm9yIGNvbnRleHQtYXdhcmUgY29tcHV0aW5nIHNpbmNlIHRoZSBiZWdpbm5pbmcuIFRoZSBhZHZhbnRhZ2Ugb2YgY29udGV4dCBpcyB0aGF0IGl0IHByb3ZpZGVzIFwiXSxcIjIxNjU2MTk5NTVcIjpbXCJUaGVyZSBhcmUgc2V2ZXJhbCBwb3B1bGFyIGNvbnRleHQgbW9kZWxsaW5nIHRlY2huaXF1ZXMgWzEwXSwgWzEyMl0gdXNlZCBpbiBjb250ZXh0LWF3YXJlIGNvbXB1dGluZy5cIl0sXCIyMTY2NDcyNDAxXCI6W1widXNlZCBmb3IgcGF0dGVybiByZWNvZ25pdGlvbiBpbiBjb250ZXh0LWF3YXJlIGNvbXB1dGluZy4gSXQgaGFzIGJlZW4gdXNlZCB0byBkZXRlY3QgYWN0aXZpdHkgcmVjb2duaXRpb24gb2YgcGF0aWVudHMgaW4gdGhlIGhlYWx0aGNhcmUgZG9tYWluIFsxNTVdIGFuZCB0byBsZWFybiBzaXR1YXRpb25zIGluIGEgc21hcnQgaG9tZSBlbnZpcm9ubWVudCBbMTU2XS4gMikgVW5zdXBlcnZpc2VkIGxlYXJuaW5nOiBUaGlzIGNhdGVnb3J5IG9mIHRlY2huaXF1ZXMgY2FuIO+sgW5kIGhpZGRlbiBzdHJ1Y3R1cmVzIGluIHVubGFiZWxsZWQgZGF0YS4gRHVlIHRvIHRoZSB1c2Ugb2Ygbm8gdHJhaW5pbmcgZGF0YSwgdGhlcmUgaXMgbm8gZXJyb3Igb3IgcmV3YXJkIHNpZ25hbCB0byBldmFsdWF0ZSBhIHBvdGVudGlhbCBzb2xcIixcImUgc3VjaCBhcyB1c2VyIGNhbGVuZGFyLCB3ZWF0aGVyLCBldGMuIGhpZGRlbiBNYXJrb3YgTW9kZWxzIGFyZSBjb21tb25seSB1c2VkIGluIGFjdGl2aXR5IHJlY29nbml0aW9uIGluIGNvbnRleHQtYXdhcmUgZG9tYWlucy4gRm9yIGV4YW1wbGUsIGl0IGhhcyBiZWVuIHVzZWQgdG8gbGVhcm4gc2l0dWF0aW9uIG1vZGVscyBpbiBhIHNtYXJ0IGhvbWUgWzE1Nl0uIFVwIHRvIG5vdywgd2UgaGF2ZSBwcmVzZW50ZWQgYW5kIGRpc2N1c3NlZCBhIG51bWJlciBvZiBjb250ZXh0IG1vZGVsbGluZyBhbmQgcmVhc29uaW5nIHRlY2huaXF1ZXMuIEhvd2V2ZXIsIGl0IGlzIGNsZWFyIHRoYXQgZWFjaCB0ZWNobmlxdWUgaGFzIGl0cyBvd24gc3RyZW5ndGhzIGFuZCB3ZWFrbmVzcy4gTm8gc2luZ2xlIHRlY2huaXF1ZSBjYVwiXSxcIjIxNjgxMDIyNTVcIjpbXCJlYXNvbmluZyBbMTYwXSwgWzE2MV0sIFsxNjJdLiBNaVJFIFsxNjNdIGlzIGEgbWluaW1hbCBydWxlIGVuZ2luZSBmb3IgY29udGV4dC1hd2FyZSBtb2JpbGUgZGV2aWNlcy4gTW9zdCBvZiB0aGUgdXNlciBwcmVmZXJlbmNlcyBhcmUgZW5jb2RlZCB1c2luZyBydWxlcy4gUnVsZXMgYXJlIGFsc28gdXNlZCBpbiBldmVudCBkZXRlY3Rpb24gWzE2NF0sIFsxNjVdLiBSdWxlcyBhcmUgZXhwZWN0ZWQgdG8gcGxheSBhIHNpZ25p76yBY2FudCByb2xlIGluIHRoZSBJb1QsIHdoZXJlIHRoZXkgYXJlIHRoZSBlYXNpZXN0IGFuZCBzaW1wbGVzdCB3YXkgdG8gbW9kZWwgaHVtYW4gdGhpbmtpbmcgYW5kIHJlYXNvbmluZyBpbiBtYWNoaW5lcy4gUFJJQU1PUyBbMTY2XSBoYXMgdXNlZCBzZW1hbnRpYyBydWxlcyB0byBhbm5vdFwiLFwidXJhdGVseSBpbiBoaWdobHkgZHluYW1pYyBhbmQgdW5jZXJ0YWluIGRvbWFpbnMuIE9udG9sb2dpY2FsIHJlYXNvbmluZyBpcyBoZWF2aWx5IHVzZWQgaW4gYSB3aWRlIHJhbmdlIG9mIGFwcGxpY2F0aW9ucywgc3VjaCBhcyBhY3Rpdml0eSByZWNvZ25pdGlvbiBbMTUxXSwgaHlicmlkIHJlYXNvbmluZyBbMTUxXSwgYW5kIGV2ZW50IGRldGVjdGlvbiBbMTY1XS4gQSBzdXJ2ZXkgb24gc2VtYW50aWMgYmFzZWQgcmVhc29uaW5nIGlzIHByZXNlbnRlZCBpbiBbMTQ3XS4gSXQgYWxzbyBjb21wYXJlcyBhIG51bWJlciBvZiBjb250ZXh0IGF3YXJlIGZyYW1ld29ya3MgYmFzZWQgb24gbW9kZWxsaW5nIHRlY2huaXF1ZSwgcmVhc29uaW5nIHRlY2huaXF1ZXMsIGFuZCBhcmNoaXRlY3R1cmVzIHVzZWQgaW4gdGhlaXIgXCJdLFwiMjE2ODIzNjkwMlwiOltcImlsbCBvZmZlci4gSXQgcHJvbWlzZXMgdG8gY3JlYXRlIGEgd29ybGQgd2hlcmUgYWxsIHRoZSBvYmplY3RzIChhbHNvIGNhbGxlZCBzbWFydCBvYmplY3RzIFsyNF0pIGFyb3VuZCB1cyBhcmUgY29ubmVjdGVkIHRvIHRoZSBJbnRlcm5ldCBhbmQgY29tbXVuaWNhdGUgd2l0aCBlYWNoIG90aGVyIHdpdGggbWluaW11bSBodW1hbiBpbnRlcnZlbnRpb24gWzI1XS4gVGhlIHVsdGltYXRlIGdvYWwgaXMgdG8gY3JlYXRlIOKAmGEgYmV0dGVyIHdvcmxkIGZvciBodW1hbiBiZWluZ3PigJksIHdoZXJlIG9iamVjdHMgYXJvdW5kIHVzIGtub3cgd2hhdCB3ZSBsaWtlLCB3aGF0IHdlIHdhbnQsIGFuZCB3aGF0IHdlIG5lZWQgYW5kIGFjdCBhY2NvcmRpbmdseSB3aXRob3V0IGV4cGxpY2l0IGluc3RydWN0aW9ucyBbMjZdLiBUaFwiXSxcIjIxNjg4Njc4MjNcIjpbXCJbMTBdIGluIDIwMDcgb24gY29udGV4dC1hd2FyZSBzeXN0ZW1zIGFuZCBtaWRkbGV3YXJlIHNvbHV0aW9ucyB1c2luZyBkaWZmZXJlbnQgdGF4b25vbWllcy5cIixcIlRoZXJlIGFyZSBzZXZlcmFsIHBvcHVsYXIgY29udGV4dCBtb2RlbGxpbmcgdGVjaG5pcXVlcyBbMTBdLCBbMTIyXSB1c2VkIGluIGNvbnRleHQtYXdhcmUgY29tcHV0aW5nLlwiXSxcIjIxNjk1MTEyNzVcIjpbXCJQLFEgMiw0IFgg4oCTIOKAkyBEIEgg4oCTIEEgQyDigJMgWCDigJMg4oCTIGUtU0VOU0UgWzQ0XSAyMDA2IE0g4oCTIFIgUSAyLDQg4oCTIFgg4oCTIEQgSCBYIFAg4oCTIEYg4oCTIOKAkyDigJMgSENvTSBbMTk4XSAyMDA3IE0gRyxPbiBSLE8gUSA1IFggWCDigJMgRCBIIOKAkyBTIFYgRiDigJMg4oCTIFggQ01TIFsxMDZdIDIwMDcgTSBPbiBPIFAsUSAxLDIgWCDigJMgWCBTIEgg4oCTIEEg4oCTIEEg4oCTIOKAkyBYIE1vQ0EgWzE5OV0gMjAwNyBNIE0sT2IgTyBQLFEgNCw1IOKAkyDigJMgWCBEIEggWCBBIFYg4oCTIOKAkyBYIFggQ2FTUCBbMTg1XSAyMDA3IE0gTSxPbiBPIFAsUSA2IFgg4oCTIOKAkyBEIEgg4oCTIEEg4oCTIOKAkyDigJMg4oCTIFggU0lNIFsyMDBdIDIwMDcgTSBLLEcgUiDigJMgMiBYIOKAkyDigJMg4oCTIEgg4oCTIFAgQyBBIOKAkyDigJMg4oCTIOKAlCBbMTI0XSAyMDA3IE0gT24gTyBRIOKAkyDigJMgWCBEIEgg4oCTIFAgViBBIOKAkyDigJMg4oCTIENcIixcIiBpbiBhIHN0YW5kYXJkIGRhdGFiYXNlIG1hbmFnZW1lbnQgc3lzdGVtKSwgcnVsZS1taW5pbmcgKGEgZGF0YSBiYXNlIHRoYXQgY29uc2lzdHMgb2YgcnVsZXMgdGhhdCB0ZWxsIHdoYXQgYWN0aW9ucyB0byBwZXJmb3JtIHdoZW4pLCBhbmQgaW50ZXJmYWNlcyAocHJvdmlkZXMgaW50ZXJmYWNlIHRvIHRoZSBjb250ZXh0IGNvbnN1bWVycykuIE1vQ0EgWzE5OV0gaXMgYSBzZXJ2aWNlIGJhc2VkIGRpc3RyaWJ1dGVkIG1pZGRsZXdhcmUgdGhhdCBlbXBsb3lzIG9udG9sb2dpZXMgdG8gbW9kZWwgYW5kIG1hbmFnZSBjb250ZXh0LiBUaGUgcHJpbWFyeSBjb25jZXB0dWFsIGNvbXBvbmVudCBpcyBjb250ZXh0IGRvbWFpbi4gVGhlIGNvbnRleHQgbWFuYWdlbWVudCBub2RlIChDTU4pIGlzIGluZnJhc3RydWN0dXJlIFwiLFwibHZlZC4gSW4gdGhlIElvVCwgdGhlcmUgd2lsbCBiZSBtYW55IGRhdGEgc291cmNlcyB0aGF0IHdpbGwgcHJvdmlkZSBzaW1pbGFyIGluZm9ybWF0aW9uIHRoYXQgY2FuIGJlIHVzZWQgdG8gZGVyaXZlIHRoZSBzYW1lIGtub3dsZWRnZSB3aGVyZSBjb27vrIJpY3QgcmVzb2x1dGlvbiB3aWxsIGhlbHAgdG8gbWFrZSBhY2N1cmF0ZSBhY3Rpb25zLiBNb0NBIFsxOTldIGFsc28gZW1waGFzaXplcyB2YWxpZGF0aW9uIG9mIGNvbnRleHQgd2hpY2ggaGFzIGFuIGltcGFjdCBvbiB0aGUgYWNjdXJhY3kgb2YgdGhlIHJlYXNvbmluZy4gRnVydGhlciwgaXQgc2hvd3MgaG93IGNvbnRleHQgY2FuIGJlIG1vZGVsbGVkIGluIGZvcm1hdHMgc3VjaCBhcyBYTUwgYW5kIHRoZW4gaW5zZXJ0ZWQgaW50byBhbnkgcHJvZ3JhbW1pbmdcIl0sXCIyMTczMjk1OTg1XCI6W1wiQ29udGV4dCByZWFzb25pbmcgY2FuIGJlIGRlZmluZWQgYXMgYSBtZXRob2Qgb2YgZGVkdWNpbmcgbmV3IGtub3dsZWRnZSwgYW5kIHVuZGVyc3RhbmRpbmcgYmV0dGVyLCBiYXNlZCBvbiB0aGUgYXZhaWxhYmxlIGNvbnRleHQgWzE0N10uXCIsXCJUaGUgbW9zdCBwb3B1bGFyIGNvbnRleHQgcmVhc29uaW5nIHRlY2huaXF1ZXMgKGFsc28gY2FsbGVkIGRlY2lzaW9uIG1vZGVscykgYXJlIHN1cnZleWVkIGluIFsxMV0sIFsxMl0sIFsxNDddLlwiLFwiQSBzdXJ2ZXkgb24gc2VtYW50aWMgYmFzZWQgcmVhc29uaW5nIGlzIHByZXNlbnRlZCBpbiBbMTQ3XS5cIl0sXCIyMTgxNzkxMjc1XCI6W1wiV0hFUkVYIFs3MV0gw5cgw5dcIl0sXCIyMTg1MjEzNzA0XCI6W1wiWzIyNV0gYW5kIGxpbmtlZCBkYXRhIFsyMjZdLCBbMjI3XSBzaG93IGZ1dHVyZSBkaXJlY3Rpb25zIHRvIGNhcnJ5IG91dCBmdXJ0aGVyIHJlc2VhcmNoIHdvcmsuXCJdLFwiMjM5NTQ3NTI0NFwiOltcInMgKGNvbnRleHQgYnJva2VyKSAhIGRpc3NlbWluYXRlIChjb250ZXh0IGJyb2tlcikgISB1c2UgKHNlcnZpY2UgcHJvdmlkZXIpICEgLi4uIDcpIEZlcnNjaGEgZXQgYWwuIExpZmVjeWNsZSBbMTE2XTogc2Vuc2luZyAhIHRyYW5zZm9ybWF0aW9uICEgcmVwcmVzZW50YXRpb24gISBydWxlIGJhc2UgISBhY3R1YXRpb24gISAuLi4gOCkgTU9TUVVJVE8gWzExN106IGNvbnRleHQgaW5mb3JtYXRpb24gZGlzY292ZXJ5ICEgY29udGV4dCBpbmZvcm1hdGlvbiBhY3F1aXNpdGlvbiAhIGNvbnRleHQgaW5mb3JtYXRpb24gcmVhc29uaW5nICEgLi4uIElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFgsIFhYWFggWFhYWCAxMyA5KSBXQ1hNUyBMaWZlY3ljbGUgWzEwOVwiXSxcIjIzOTk5MzUyMTNcIjpbXCJkZS4gRmluYWxseSwgYWN0dWF0b3JzIHBlcmZvcm0gdGhlIGRlY2lkZWQgYWN0aW9ucy4gVGhpcyBwcm9jZXNzIGlzIGZ1cnRoZXIgZGlzY3Vzc2VkIGluIFNlY3Rpb24gSVYuIEZ1cnRoZXIsIGludGVncmF0aW9uIGJldHdlZW4gd2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmtzIGFuZCB0aGUgSW9UIGFyZSBjb21wcmVoZW5zaXZlbHkgZGlzY3Vzc2VkIGluIFs0OF0uIFRoZSBkaWZmZXJlbmNlIGJldHdlZW4gc2Vuc29yIG5ldHdvcmtzIChTTikgYW5kIHRoZSBJb1QgaXMgbGFyZ2VseSB1bmV4cGxvcmVkIGFuZCBibHVycmVkLiBXZSBjYW4gZWxhYm9yYXRlIHNvbWUgb2YgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBib3RoIFNOIGFuZCBJb1QgdG8gaWRlbnRpZnkgdGhlIGRpZmZlcmVuY2VzLiAgU04gY29tcHJpc2VzXCJdLFwiMjUzODY2MTcxMFwiOltcInRlY2huaXF1ZXMsIGxldOKAmXMgYnJpZe+sgnkgaW50cm9kdWNlIGNvbnRleHQgbW9kZWxsaW5nIGZ1bmRhbWVudGFscy4gQ29udGV4dCBtb2RlbHMgY2FuIGJlIHN0YXRpYyBvciBkeW5hbWljLiBTdGF0aWMgbW9kZWxzIGhhdmUgYSBwcmVkZe+sgW5lZCBzZXQgb2YgY29udGV4dCBpbmZvcm1hdGlvbiB0aGF0IHdpbGwgYmUgY29sbGVjdGVkIGFuZCBzdG9yZWQgWzEwM10uIFRoZSByZXF1aXJlbWVudHMgdGhhdCBuZWVkIHRvIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbiB3aGVuIG1vZGVsbGluZyBjb250ZXh0IGluZm9ybWF0aW9uIGFyZSBpZGVudGnvrIFlZCBhbmQgZXhwbGFpbmVkIGluIFsxMl0gYXMgaGV0ZXJvZ2VuZWl0eSBhbmQgbW9iaWxpdHksIHJlbGF0aW9uc2hpcHMgYW5kIGRlcGVuZGVuY2llcywgdGltZWxpXCIsXCJDYXBhYmlsaXRpZXMvUHJlZmVyZW5jZSBQcm/vrIFsZXMgKENDL1BQKSBbMTI1XS4gVGhlcmUgYXJlIGEgc2lnbmnvrIFjYW50IG51bWJlciBvZiBzaW1pbGFyIGVtZXJnaW5nIGFwcGxpY2F0aW9ucyBzdWNoIGFzIENvbnRleHRNTCBbMTI2XSBpbiBjb250ZXh0LWF3YXJlIGNvbXB1dGluZy4gVHVwbGVzIGFyZSBhbHNvIHVzZWQgdG8gbW9kZWwgY29udGV4dCBbMTAzXS4gMykgR3JhcGhpY2FsIE1vZGVsbGluZzogSXQgbW9kZWxzIGNvbnRleHQgd2l0aCByZWxhdGlvbnNoaXBzLiBTb21lIGV4YW1wbGVzIG9mIHRoaXMgbW9kZWxsaW5nIHRlY2huaXF1ZSBhcmUgVW5p76yBZWQgTW9kZWxsaW5nIExhbmd1YWdlIChVTUwpIFsxMjddIGFuZCBPYmplY3QgUm9sZSBNb2RlbGxpbmcgKE9STSkgWzEyOF0uIEluIHRlcm1zIG9mIGVcIl0sXCIyNTM5OTEwNzY5XCI6W1wiWzc5XSBhbmQgUGFzY29lIFs4MF0gaGF2ZSBhbHNvIGRlZmluZWQgdGhlIHRlcm0gY29udGV4dC5cIl0sXCIyNTQyNzc3Mjg0XCI6W1wiTSBLLE0gUiBRIDQgWCDigJMgWCBEIEggWCBBIOKAkyBBIFgg4oCTIFggQ09TQVIgWzE1MV0gMjAwOSBNIE9uIFMsTyBRIDUg4oCTIFggWCBBIEgg4oCTIFAg4oCTIOKAkyDigJMg4oCTIOKAkyBTUEJDQSBbMTYxXSAyMDA5IE0gT24gUixPIFEgMiDigJMg4oCTIFggQSBIIFggQSDigJMg4oCTIOKAkyDigJMg4oCTIEMtQ0FTVCBbMjA3XSAyMDA5IE0gTSBSIFAsUSA1IFgg4oCTIFggRCBIIOKAkyBBIOKAkyDigJMg4oCTIOKAkyBYIOKAlCBbMjA4XSAyMDA5IE0gT24gTyBQIDUgWCDigJMgWCBEIEgg4oCTIEEg4oCTIEEg4oCTIOKAkyDigJMgQ0RBIFsyMDldIDIwMDkgTSBPYiDigJMgUSA0LDYg4oCTIOKAkyDigJMg4oCTIEgg4oCTIFYg4oCTIOKAkyDigJMg4oCTIFggU0FMRVMgWzIxMF0gMjAwOSBNIE0gUiBRIDIsNCDigJMg4oCTIFggRCBMIOKAkyBQIOKAkyBGIOKAkyDigJMgWCBNaWRTZW4gWzUyXSAyMDA5IE0gSyBSIFAsUSA1IOKAkyBYIFggRCBIIOKAkyBQIOKAkyDigJMg4oCTIOKAkyBYIFNcIixcImxldmVscyBpbmRlcGVuZGVudGx5LiBBcyBhbiBJb1Qgc29sdXRpb24gd2lsbCBiZSB1c2VkIGluIG1hbnkgZGlmZmVyZW50IGRvbWFpbnMsIHRoZSBhYmlsaXR5IHRvIGFkZCBvbnRvbG9naWVzIChpLmUuIGtub3dsZWRnZSkgd2hlbiBuZWNlc3NhcnkgaXMgY3JpdGljYWwgZm9yIHdpZGVyIGFkYXB0YXRpb24uIFNDSyBbMTQyXSwgWmhhbiBldCBhbC4gWzIwOF0sIElFRUUgQ09NTVVOSUNBVElPTlMgU1VSVkVZUyAmYW1wOyBUVVRPUklBTFMsIFZPTC4gWCwgTk8uIFgsIFhYWFggWFhYWCAzMSBhbmQgQklPTkVUUyBbMTk3XSB1c2UgZGlmZmVyZW50IG9udG9sb2dpZXMgZm9yIGVhY2ggY29udGV4dCBjYXRlZ29yeS4gQXMgd2UgZGlzY3Vzc2VkIGluIFNlY3Rpb24gSUlJLUMsIHRoZXJlIGFyZSBtYW55IGRpZmZlclwiXSxcIjI2MDI5NTY2MzBcIjpbXCLigJ0g4oCiIERlZmluaXRpb24gYnkgWzIxXTog4oCcVGhlIEludGVybmV0IG9mIFRoaW5ncyBhbGxvd3MgcGVvcGxlIGFuZCB0aGluZ3MyIHRvIGJlIGNvbm5lY3RlZCBBbnl0aW1lLCBBbnlwbGFjZSwgd2l0aCBBbnktXCIsXCJXZSBhY2NlcHQgdGhlIGxhc3QgZGVmaW5pdGlvbiBwcm92aWRlZCBieSBbMjFdIGZvciBvdXJcIixcIkRlZmluaXRpb24gb2YgdGhlIEludGVybmV0IG9mIFRoaW5nczogVGhlIEludGVybmV0IG9mIFRoaW5ncyBhbGxvd3MgcGVvcGxlIGFuZCB0aGluZ3MgdG8gYmUgY29ubmVjdGVkIGFueXRpbWUsIGFueXBsYWNlLCB3aXRoIGFueXRoaW5nIGFuZCBhbnlvbmUsIGlkZWFsbHkgdXNpbmcgYW55IHBhdGgvbmV0d29yayBhbmQgYW55IHNlcnZpY2UgWzIxXS5cIixcIuKAnSBUaGUgZnVuY3Rpb25hbGl0aWVzIHJlcXVpcmVkIGJ5IElvVCBtaWRkbGV3YXJlIHNvbHV0aW9ucyBhcmUgZXhwbGFpbmVkIGluIGRldGFpbCBpbiBbNF0sIFsxOV0sIFsyMF0sIFsyMV0sIFsyOV0uXCIsXCJGb3IgZXhhbXBsZSwgY29udGV4dCBhd2FyZW5lc3MgaGFzIGJlZW4gaWRlbnRpZmllZCBhcyBhbiBpbXBvcnRhbnQgSW9UIHJlc2VhcmNoIG5lZWQgYnkgdGhlIENsdXN0ZXIgb2YgRXVyb3BlYW4gUmVzZWFyY2ggUHJvamVjdHMgb24gdGhlIElvVCAoQ0VSUC1Jb1QpIFsyMV0gZnVuZGVkIGJ5IHRoZSBFdXJvcGVhbiBVbmlvbi5cIl0sXCIyNjY1NzU2MDgzXCI6W1wiSXQgY2FuIGFsc28gYmUgZXhwbGFpbmVkIGFzIGEgcHJvY2VzcyBvZiBnaXZpbmcgaGlnaC1sZXZlbCBjb250ZXh0IGRlZHVjdGlvbnMgZnJvbSBhIHNldCBvZiBjb250ZXh0cyBbOTddLlwiLFwiWzk3XSBoYXMgcHJvdmVkIHRoYXQgdXNpbmcgbW9yZSBjb250ZXh0IHdpbGwgbm90IG5lY2Vzc2FyaWx5IGltcHJvdmUgdGhlIGFjY3VyYWN5IG9mIHRoZSBpbmZlcmVuY2UgaW4gYSBjb25zaWRlcmFibGUgbWFubmVyLlwiXX0sXCJQUlwiOlsyMTA1MTAzNzc3LDIxMTE2MTk2MjYsMTg4MjA4ODM5NSwyMTE5MDQ2NjQyLDE5Njc2NjE1MTUsMjExNjgxNzM2OSwyMDM4MTk0MjIwLDIxNjg4Njc4MjMsMjEzNDI5NTA1MywxOTc5NTE5NDYyLDIxNjM0MTk2MjcsMTc1NTIyNzA2MywyMDU4NDAxMjEyLDIxMDI4MDIzNjMsMjExNDYyMzIyMSwyMTI5MzY4MTQwLDIxNjAxNzAwNTAsMjEyODAyNjAyMywyNTIxNDI1MzYxLDE1NzQyMjI2MzgsMjEwNTEwMzc3NywyMTExNjE5NjI2LDE4ODIwODgzOTUsMjExOTA0NjY0MiwxOTY3NjYxNTE1LDIxMTY4MTczNjksMjAzODE5NDIyMCwyMTY4ODY3ODIzLDIxMzQyOTUwNTMsMTk3OTUxOTQ2MiwyMTYzNDE5NjI3LDE3NTUyMjcwNjMsMjA1ODQwMTIxMiwyMTAyODAyMzYzLDIxMTQ2MjMyMjEsMjEyOTM2ODE0MCwyMTYwMTcwMDUwLDIxMjgwMjYwMjMsMjUyMTQyNTM2MSwxNTc0MjIyNjM4XSxcIkFORlwiOlt7XCJGTlwiOlwiQ2hhcml0aFwiLFwiTE5cIjpcIlBlcmVyYVwiLFwiU1wiOjF9LHtcIkZOXCI6XCJBcmthZHkgQi5cIixcIkxOXCI6XCJaYXNsYXZza3lcIixcIlNcIjoyfSx7XCJGTlwiOlwiUGV0ZXJcIixcIkxOXCI6XCJDaHJpc3RlblwiLFwiU1wiOjN9LHtcIkZOXCI6XCJEaW1pdHJpb3NcIixcIkxOXCI6XCJHZW9yZ2Frb3BvdWxvc1wiLFwiU1wiOjR9XSxcIkJWXCI6XCJJRUVFIENvbW11bmljYXRpb25zIFN1cnZleXMgYW5kIFR1dG9yaWFsc1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJJRUVFXCJ9In0seyJsb2dwcm9iIjotMTYuMTI2LCJrZXNFbnRpdHlJZCI6MTI2NTE1OCwiSWQiOjE5NzI2NDQ4OTgsIlRpIjoiaW50ZXJuZXQgZW5jeWNsb3BhZWRpYXMgZ28gaGVhZCB0byBoZWFkIiwiWSI6MjAwNSwiRCI6IjIwMDUtMTItMDEiLCJSSWQiOlsyMDAxMTQyNjg5LDIwMzIyNzcyOTgsMjA3MjA3NjU0N10sIkFBIjpbeyJBdU4iOiJqaW0gZ2lsZXMifV0sIkYiOlt7IkZOIjoib25saW5lIGVuY3ljbG9wZWRpYSJ9LHsiRk4iOiJlbmN5Y2xvcGVkaWEifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6ImxpYnJhcnkgc2NpZW5jZSJ9LHsiRk4iOiJoaXN0b3J5In1dLCJFIjoie1wiRE5cIjpcIkludGVybmV0IGVuY3ljbG9wYWVkaWFzIGdvIGhlYWQgdG8gaGVhZFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjYzLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkppbW15XCI6WzBdLFwiV2FsZXMnXCI6WzFdLFwiV2lraXBlZGlhXCI6WzJdLFwiY29tZXNcIjpbM10sXCJjbG9zZVwiOls0XSxcInRvXCI6WzUsNTldLFwiQnJpdGFubmljYVwiOls2XSxcImluXCI6WzcsMzIsNDRdLFwidGVybXNcIjpbOF0sXCJvZlwiOls5LDEyLDIzXSxcInRoZVwiOlsxMCwyNSwzM10sXCJhY2N1cmFjeVwiOlsxMV0sXCJpdHNcIjpbMTNdLFwic2NpZW5jZVwiOlsxNF0sXCJlbnRyaWVzLFwiOlsxNV0sXCJhXCI6WzE2XSxcIk5hdHVyZVwiOlsxNyw1N10sXCJpbnZlc3RpZ2F0aW9uXCI6WzE4XSxcImZpbmRzLlwiOlsxOV0sXCJVUERBVEU6XCI6WzIwXSxcInNlZVwiOlsyMV0sXCJkZXRhaWxzXCI6WzIyXSxcImhvd1wiOlsyNF0sXCJkYXRhXCI6WzI2XSxcIndlcmVcIjpbMjddLFwiY29sbGVjdGVkXCI6WzI4XSxcImZvclwiOlsyOV0sXCJ0aGlzXCI6WzMwLDQ1XSxcImFydGljbGVcIjpbMzFdLFwic3VwcGxlbWVudGFyeVwiOlszNF0sXCJpbmZvcm1hdGlvbi5cIjpbMzVdLFwiVVBEQVRFXCI6WzM2XSxcIjJcIjpbMzddLFwiKDI4XCI6WzM4XSxcIk1hcmNoXCI6WzM5XSxcIjIwMDYpLlwiOls0MF0sXCJUaGVcIjpbNDFdLFwicmVzdWx0c1wiOls0Ml0sXCJyZXBvcnRlZFwiOls0M10sXCJuZXdzXCI6WzQ2XSxcInN0b3J5XCI6WzQ3XSxcImFuZFwiOls0OF0sXCJ0aGVpclwiOls0OV0sXCJpbnRlcnByZXRhdGlvblwiOls1MF0sXCJoYXZlXCI6WzUxXSxcImJlZW5cIjpbNTJdLFwiZGlzcHV0ZWRcIjpbNTNdLFwiYnlcIjpbNTRdLFwiRW5jeWNsb3BhZWRpYVwiOls1NV0sXCJCcml0YW5uaWNhLlwiOls1Nl0sXCJyZXNwb25kZWRcIjpbNThdLFwidGhlc2VcIjpbNjBdLFwib2JqZWN0aW9uc1wiOls2MV0sXCIuXCI6WzYyXX19LFwiU1wiOlt7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3d3dy5uY2JpLm5sbS5uaWguZ292L3B1Ym1lZC8xNjM1NTE4MFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vYWRzYWJzLmhhcnZhcmQuZWR1L2Ficy8yMDA1TmF0dXIuNDM4Li45MDBHXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cubmF0dXJlLmNvbS9kb2lmaW5kZXIvMTAuMTAzOC80Mzg5MDBhXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGlhbG5ldC51bmlyaW9qYS5lcy9zZXJ2bGV0L2FydGljdWxvP2NvZGlnbz0xMzYzMDEyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9keC5kb2kub3JnLzEwLjEwMzgvNDM4OTAwYVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZW4uam91cm5hbHMuc2lkLmlyL1ZpZXdQYXBlci5hc3B4P0lEPTQxNjg1MFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3d3dy5zaWQuaXIvRW4vSm91cm5hbC9WaWV3UGFwZXIuYXNweD9JRD00MTY4NTBcIn1dLFwiVkZOXCI6XCJOYXR1cmVcIixcIlZcIjo0MzgsXCJJXCI6NzA3MCxcIkZQXCI6OTAwLFwiTFBcIjo5MDEsXCJET0lcIjpcIjEwLjEwMzgvNDM4OTAwYVwiLFwiUFJcIjpbMjExMTEyMjQyNCwxNjk0NjA0MTIsMjAzODQ4MzIwMSwyMDkzNzUzMDU2LDIwNjUxMDAxMjcsMjEzMjc2NDQ1MSwyMTU0OTQxOTk1LDIxMDIyNzExNjEsMjEyMDc3OTA0OCwyMTUyMzA0Njc0LDE5OTQwODEwNjcsMTQyMzQ1NDEyLDIzMzgzNzg4NzIsOTgyNTM5MCwxODg2MzM3MTMxLDE1ODA1NzM0MSwyMTM4MzM0MjU2LDIwMDcyMzIxNzUsMjA5NTAzMDQ4OCwyMDQxMTE0MjU0LDIxMTExMjI0MjQsMTY5NDYwNDEyLDIwMzg0ODMyMDEsMjA5Mzc1MzA1NiwyMDY1MTAwMTI3LDIxMzI3NjQ0NTEsMjE1NDk0MTk5NSwyMTAyMjcxMTYxLDIxMjA3NzkwNDgsMjE1MjMwNDY3NCwxOTk0MDgxMDY3LDE0MjM0NTQxMiwyMzM4Mzc4ODcyLDk4MjUzOTAsMTg4NjMzNzEzMSwxNTgwNTczNDEsMjEzODMzNDI1NiwyMDA3MjMyMTc1LDIwOTUwMzA0ODgsMjA0MTExNDI1NF0sXCJBTkZcIjpbe1wiRk5cIjpcIkppbVwiLFwiTE5cIjpcIkdpbGVzXCIsXCJTXCI6MX1dLFwiQlZcIjpcIk5hdHVyZVwiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJNYWNtaWxsYW5cIn0ifSx7ImxvZ3Byb2IiOi0xNi4xNDEsImtlc0VudGl0eUlkIjoxMjgzOTYyLCJJZCI6MTYwMzUwNDgxOCwiVGkiOiJzdHJhdGVneSBhbmQgdGhlIGludGVybmV0IiwiWSI6MjAwMSwiRCI6IjIwMDEtMDEtMDEiLCJBQSI6W3siQXVOIjoiZSBwb3J0ZXIgbWljaGFlbCJ9XSwiRiI6W3siRk4iOiJpbnRlcm5ldCBwcmVzZW5jZSBtYW5hZ2VtZW50In0seyJGTiI6ImludGVybmV0IHRyYWZmaWMifSx7IkZOIjoic3RyYXRlZ2ljIG1hbmFnZW1lbnQifSx7IkZOIjoiY29tcGV0aXRpdmUgYWR2YW50YWdlIn0seyJGTiI6ImFyY2hpdGVjdHVyZSJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoicHVibGljIHJlbGF0aW9ucyJ9LHsiRk4iOiJtYXJrZXRpbmcifSx7IkZOIjoiYnVzaW5lc3MifV0sIkUiOiJ7XCJETlwiOlwiU1RSQVRFR1kgQU5EIFRIRSBJTlRFUk5FVFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjg5LFwiSW52ZXJ0ZWRJbmRleFwiOntcIkFsdGhvdWdoXCI6WzBdLFwidGhlXCI6WzEsNDEsNjcsNzAsNzcsODRdLFwiSW50ZXJuZXRcIjpbMiwzMiw0Miw3MV0sXCJwcm92aWRlc1wiOlszLDM2XSxcImFuXCI6WzQsNDhdLFwiaWRlYWxcIjpbNV0sXCJhcmNoaXRlY3R1cmVcIjpbNl0sXCJmb3JcIjpbNyw1OF0sXCJsZXZlcmFnaW5nXCI6WzhdLFwib3Bwb3J0dW5pdHlcIjpbOV0sXCJpblwiOlsxMCw1NV0sXCJuZXdcIjpbMTFdLFwiYW5kXCI6WzEyLDYxXSxcImV4aXN0aW5nXCI6WzEzXSxcIm1hcmtldHMsXCI6WzE0XSxcImFcIjpbMTUsMTksNTldLFwiY29tcGFueVwiOlsxNiw2MF0sXCJjYW5cIjpbMTcsNTJdLFwiYWNoaWV2ZVwiOlsxOF0sXCJjb21wZXRpdGl2ZVwiOlsyMF0sXCJhZHZhbnRhZ2VcIjpbMjFdLFwib25seVwiOlsyMl0sXCJieVwiOlsyMywzNF0sXCJjcmVhdGluZ1wiOlsyNF0sXCJwcm9kdWN0c1wiOlsyNV0sXCJvclwiOlsyNl0sXCJzZXJ2aWNlc1wiOlsyN10sXCJvZlwiOlsyOCw0Nyw2OSw3OSw4N10sXCJ1bmlxdWVcIjpbMjldLFwidmFsdWUuXCI6WzMwXSxcIkFuXCI6WzMxXSxcInN0YWtlLFwiOlszM10sXCJpdHNlbGYsXCI6WzM1XSxcIm5vXCI6WzM3XSxcImFkdmFudGFnZSxcIjpbMzhdLFwiYnV0XCI6WzM5XSxcIndoZW5cIjpbNDBdLFwiaXNcIjpbNDNdLFwidXNlZFwiOls0NF0sXCJhc1wiOls0NSw4M10sXCJwYXJ0XCI6WzQ2XSxcIm92ZXJhbGxcIjpbNDldLFwic3RyYXRlZ3ksXCI6WzUwXSxcIml0XCI6WzUxXSxcImJlXCI6WzUzXSxcImVmZmVjdGl2ZVwiOls1NF0sXCJhY2hpZXZpbmdcIjpbNTZdLFwiZGlzdGluY3Rpb25cIjpbNTddLFwiaXRzXCI6WzYyXSxcInByb2R1Y3RzLlwiOls2M10sXCJUaGVcIjpbNjRdLFwiYXV0aG9yXCI6WzY1XSxcImFuYWx5emVzXCI6WzY2XSxcImltcGFjdFwiOls2OF0sXCJvblwiOls3Ml0sXCJ0cmFkaXRpb25hbFwiOls3M10sXCJidXNpbmVzc1wiOls3NF0sXCJzdHJhdGVneVwiOls3NV0sXCJ3aXRoaW5cIjpbNzZdLFwiZnJhbWV3b3JrXCI6Wzc4XSxcIndoYXRcIjpbODBdLFwiaGVcIjpbODFdLFwiZGVmaW5lc1wiOls4Ml0sXCJmaXZlXCI6Wzg1XSxcImZvcmNlc1wiOls4Nl0sXCJjb21wZXRpdGlvbi5cIjpbODhdfX0sXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcHVibWVkLzExMjQ2OTI1XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9lbi5qb3VybmFscy5zaWQuaXIvVmlld1BhcGVyLmFzcHg/SUQ9MjcyNTY1XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cuc2lkLmlyL0VuL0pvdXJuYWwvVmlld1BhcGVyLmFzcHg/SUQ9MjcyNTY1XCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly93d3cuY2ZhcHVicy5vcmcvZG9pL3BkZi8xMC4yNDY5L2RpZy52MzEubjQuOTYwXCJ9XSxcIlZGTlwiOlwiSGFydmFyZCBCdXNpbmVzcyBSZXZpZXdcIixcIlZcIjo3OSxcIklcIjozLFwiRlBcIjo2MixcIkxQXCI6NzgsXCJQUlwiOlsyMDYxOTc3NjE2LDIyOTU2NTYzNjYsMjAzMjI4NTU0MSwxNTI3MzExODU1LDE1MTc3MDEyNDcsMjM5NjA2MDU5NywxMDA0NTg0ODIxLDE4NTUyODM4ODcsMTQ4NzU1NzQ0OCwyMTIzNzA5MjE4LDIxNDA5NTY1NTYsMjE0MTk1MTMyOSwxNzAwMjA4NzkwLDIxNjY3OTIzMjMsMTk5MDUxMzc0MCwyMTQxNjQ3NDc1LDE1NjYxNzIwMDQsMjAyMTYzODM2NiwyMTY0MzE0OTM5LDIwMzU5MzQ3MTQsMjA2MTk3NzYxNiwyMjk1NjU2MzY2LDIwMzIyODU1NDEsMTUyNzMxMTg1NSwxNTE3NzAxMjQ3LDIzOTYwNjA1OTcsMTAwNDU4NDgyMSwxODU1MjgzODg3LDE0ODc1NTc0NDgsMjEyMzcwOTIxOCwyMTQwOTU2NTU2LDIxNDE5NTEzMjksMTcwMDIwODc5MCwyMTY2NzkyMzIzLDE5OTA1MTM3NDAsMjE0MTY0NzQ3NSwxNTY2MTcyMDA0LDIwMjE2MzgzNjYsMjE2NDMxNDkzOSwyMDM1OTM0NzE0XSxcIkFORlwiOlt7XCJGTlwiOlwiRSBQb3J0ZXJcIixcIkxOXCI6XCJNaWNoYWVsXCIsXCJTXCI6MX1dLFwiQlZcIjpcIkhhcnZhcmQgQnVzaW5lc3MgUmV2aWV3XCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIkhBUlZBUkQgQlVTSU5FU1MgUkVWSUVXXCJ9In0seyJsb2dwcm9iIjotMTYuMjU0LCJrZXNFbnRpdHlJZCI6MTQzNDc3NywiSWQiOjE1ODg0NjI1MjQsIlRpIjoib3B0aWNhbCBidXJzdCBzd2l0Y2hpbmcgb2JzIGEgbmV3IHBhcmFkaWdtIGZvciBhbiBvcHRpY2FsIGludGVybmV0IiwiWSI6MTk5OSwiRCI6IjE5OTktMDMtMTEiLCJSSWQiOlsyMTA1ODE4MTQ3LDIxNDgyNzU0NzcsMjQ2MDYzNDk2NiwyMTQ3MDkyNTk3LDIxNTkwNDg2MTgsMjE2NTM4NTQzOSwyMTM0NTAyNzQ1LDIxNDkwMDg3MTgsMjA2MzY1NzE5MSwyNTQ1NDczNTA5LDIxMTAyMjIyMzMsMjA2NTc0Mjk0MywyMTMxMDE4MjgyLDIxNTE4NDE5MDUsMjEyOTYxODgwOSwxOTk5MDk2MzA0LDIxMTgzOTI5NDcsMjA3OTU5Njg0MCwyMTA2NTczMjM3LDIxNTc5MTUxNzUsMjEzMjY5NDY4NiwyMDg5OTA5Mzg0LDIwOTk4OTE1MDIsMjExNDg0ODkxMywyMTM2NDQ5NDYzLDIxMDQ3ODU0NDcsMjEzNDA2MTIzOSwyMDk2OTI4OTAwLDIxMzUyNTk2MzQsMjE2MjM0OTE0MSwyMTY0MDgyMTk0LDI1ODk3MjU5NTksMjE0ODY1NTU3OSwyNTczMTYyMjY0XSwiQUEiOlt7IkF1TiI6ImNodW5taW5nIHFpYW8ifSx7IkF1TiI6Im15dW5nc2lrIHlvbyJ9XSwiRiI6W3siRk4iOiJkZWZsZWN0aW9uIHJvdXRpbmcifSx7IkZOIjoicHJvY2Vzc2luZyBkZWxheSJ9LHsiRk4iOiJvcHRpY2FsIGJ1cnN0IHN3aXRjaGluZyJ9LHsiRk4iOiJjZWxsIHJlbGF5In0seyJGTiI6Im5ldHdvcmsgcGFja2V0In0seyJGTiI6IndhdmVsZW5ndGggZGl2aXNpb24gbXVsdGlwbGV4aW5nIn0seyJGTiI6Im9wdGljYWwgY29tbXVuaWNhdGlvbiJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJyZWFsIHRpbWUgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiT3B0aWNhbCBidXJzdCBzd2l0Y2hpbmcgKE9CUykgLSBhIG5ldyBwYXJhZGlnbSBmb3IgYW4gb3B0aWNhbCBJbnRlcm5ldFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE0NixcIkludmVydGVkSW5kZXhcIjp7XCJUb1wiOlswXSxcInN1cHBvcnRcIjpbMSwxNDFdLFwiYnVyc3R5XCI6WzJdLFwidHJhZmZpY1wiOlszXSxcIm9uXCI6WzQsNzVdLFwidGhlXCI6WzUsMjgsMzUsNDMsNTMsNjQsODIsOTUsMTEzXSxcIkludGVybmV0XCI6WzZdLFwiKGFuZFwiOls3XSxcImVzcGVjaWFsbHlcIjpbOF0sXCJXV1cpXCI6WzldLFwiZWZmaWNpZW50bHksXCI6WzEwXSxcIm9wdGljYWxcIjpbMTEsMzksNTZdLFwiYnVyc3RcIjpbMTJdLFwic3dpdGNoaW5nXCI6WzEzXSxcIihPQlMpXCI6WzE0XSxcImlzXCI6WzE1LDc4LDE0NF0sXCJwcm9wb3NlZFwiOlsxNl0sXCJhc1wiOlsxNyw5NCwxMzcsMTM5XSxcImFcIjpbMThdLFwid2F5XCI6WzE5XSxcInRvXCI6WzIwLDg3LDEyOCwxNDBdLFwic3RyZWFtbGluZVwiOlsyMV0sXCJib3RoXCI6WzIyLDEzM10sXCJwcm90b2NvbHNcIjpbMjMsNjksODYsMTE4XSxcImFuZFwiOlsyNCw0MSw1OCw3MCwxMzVdLFwiaGFyZHdhcmVcIjpbMjVdLFwiaW5cIjpbMjYsNzFdLFwiYnVpbGRpbmdcIjpbMjddLFwiZnV0dXJlXCI6WzI5XSxcImdlbmVyYXRpb25cIjpbMzBdLFwiT3B0aWNhbFwiOlszMV0sXCJJbnRlcm5ldC5cIjpbMzJdLFwiQnlcIjpbMzNdLFwibGV2ZXJhZ2luZ1wiOlszNF0sXCJhdHRyYWN0aXZlXCI6WzM2XSxcInByb3BlcnRpZXNcIjpbMzddLFwib2ZcIjpbMzgsNTUsNjcsODQsOTcsMTE1LDEzMl0sXCJjb21tdW5pY2F0aW9uc1wiOls0MF0sXCJhdFwiOls0Ml0sXCJzYW1lXCI6WzQ0XSxcInRpbWUsXCI6WzQ1XSxcInRha2luZ1wiOls0Nl0sXCJpbnRvXCI6WzQ3XSxcImFjY291bnRcIjpbNDhdLFwiaXRzXCI6WzQ5XSxcImxpbWl0YXRpb25zLFwiOls1MF0sXCJPQlNcIjpbNTEsNjgsODUsMTE3XSxcImNvbWJpbmVzXCI6WzUyXSxcImJlc3RcIjpbNTRdLFwiY2lyY3VpdC1zd2l0Y2hpbmdcIjpbNTddLFwicGFja2V0L2NlbGxcIjpbNTldLFwic3dpdGNoaW5nLlwiOls2MF0sXCJJblwiOls2MSwxMTFdLFwidGhpc1wiOls2Ml0sXCJwYXBlcixcIjpbNjNdLFwiZ2VuZXJhbFwiOls2NV0sXCJjb25jZXB0XCI6WzY2XSxcInBhcnRpY3VsYXIsXCI6WzcyXSxcInRob3NlXCI6WzczXSxcImJhc2VkXCI6Wzc0XSxcIkp1c3QtRW5vdWdoLVRpbWVcIjpbNzZdLFwiKEpFVCksXCI6Wzc3XSxcImRlc2NyaWJlZCxcIjpbNzldLFwiYWxvbmdcIjpbODAsMTI0XSxcIndpdGhcIjpbODEsMTI1XSxcImFwcGxpY2FiaWxpdHlcIjpbODNdLFwiSVBcIjpbODhdLFwib3ZlclwiOls4OV0sXCJXRE0uXCI6WzkwXSxcIlNwZWNpZmljXCI6WzkxXSxcImlzc3Vlc1wiOls5Ml0sXCJzdWNoXCI6WzkzXSxcInVzZVwiOls5NiwxMjBdLFwiZmliZXJcIjpbOThdLFwiZGVsYXktbGluZXNcIjpbOTldLFwiKEZETHMpXCI6WzEwMF0sXCJmb3JcIjpbMTAxXSxcImFjY29tbW9kYXRpbmdcIjpbMTAyXSxcInByb2Nlc3NpbmdcIjpbMTAzXSxcImRlbGF5XCI6WzEwNF0sXCJhbmQvb3JcIjpbMTA1XSxcInJlc29sdmluZ1wiOlsxMDZdLFwiY29uZmxpY3RzXCI6WzEwN10sXCJhcmVcIjpbMTA4XSxcImFsc29cIjpbMTA5XSxcImRpc2N1c3NlZC5cIjpbMTEwXSxcImFkZGl0aW9uLFwiOlsxMTJdLFwicGVyZm9ybWFuY2VcIjpbMTE0XSxcIkpFVC1iYXNlZFwiOlsxMTZdLFwid2hpY2hcIjpbMTE5XSxcImFuXCI6WzEyMV0sXCJvZmZzZXRcIjpbMTIyXSxcInRpbWVcIjpbMTIzXSxcImRlbGF5ZWRcIjpbMTI2XSxcInJlc2VydmF0aW9uXCI6WzEyN10sXCJhY2hpZXZlXCI6WzEyOV0sXCJlZmZpY2llbnRcIjpbMTMwXSxcInV0aWxpemF0aW9uXCI6WzEzMV0sXCJiYW5kd2lkdGhcIjpbMTM0XSxcIkZETHNcIjpbMTM2XSxcIndlbGxcIjpbMTM4XSxcInByaW9yaXR5LWJhc2VkXCI6WzE0Ml0sXCJyb3V0aW5nXCI6WzE0M10sXCJldmFsdWF0ZWQuXCI6WzE0NV19fSxcIlNcIjpbe1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9jb250ZW50Lmlvc3ByZXNzLmNvbS9hcnRpY2xlcy9qb3VybmFsLW9mLWhpZ2gtc3BlZWQtbmV0d29ya3MvamhzMTU2XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MzEyODg0LjMxMjg5OFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZGJscC51bmktdHJpZXIuZGUvZGIvam91cm5hbHMvamhzbi9qaHNuOC5odG1sI1FpYW9ZOTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0zMTI4OThcIn1dLFwiVkZOXCI6XCJKb3VybmFsIG9mIEhpZ2ggU3BlZWQgTmV0d29ya3NcIixcIlZcIjo4LFwiSVwiOjEsXCJGUFwiOjY5LFwiTFBcIjo4NCxcIkNDXCI6e1wiMTk5OTA5NjMwNFwiOltcIlRoaXMgZGlzdGluZ3Vpc2hlcyBPQlMgZnJvbSBjaXJjdWl0LXN3aXRjaGluZyBhcyB3ZWxsIGFzIGZyb20gb3RoZXIgYnVyc3Qtc3dpdGNoaW5nIGFwcHJvYWNoZXMgdXNpbmcgcHJvdG9jb2xzIHN1Y2ggYXMgUmVzZXJ2YXRpb24vc2NoZWR1bGluZyB3aXRoIEp1c3QtSW4tVGltZSBzd2l0Y2hpbmcgKFJJVCkgWzE1XSBhbmQgdGVsbC1hbmQtd2FpdCAoVEFXKSwgYWxzbyBrbm93biBpbiBBVE0gYXMgQUJULURUIChEZWxheWVkIFRyYW5zbWlzc2lvbnMpIFs2LDM2XSwgYWxsIG9mIHdoaWNoIGFyZSB0d28td2F5IHJlc2VydmF0aW9uIHByb3RvY29scy5cIl0sXCIyMDYzNjU3MTkxXCI6W1wiTm90ZSB0aGF0IGFsdGVybmF0ZWx5LCBhIGZsb3cgb2YgcGFja2V0cyBjYW4gYmUgc3dpdGNoZWQgYmFzZWQgb24gdGhlIG1hdGNoIGJldHdlZW4gYSBsYWJlbCBjYXJyaWVkIGJ5IGVhY2ggcGFja2V04oCZcyBoZWFkZXIgYW5kIGEgbGFiZWwgc3RvcmVkIGF0IGVhY2ggbm9kZSwgd2hpY2ggaXMgc2V0IHVwIGVpdGhlciBieSBwcmV2aW91cyBwYWNrZXRzIG9mIHRoZSBzYW1lIGZsb3cgKGFzIGluIElQLXN3aXRjaGluZyBbMjNdKSBvciBieSB0aGUgbmV0d29yayAoYXMgaW4gVGFnLXN3aXRjaGluZyBbMzNdKS5cIl0sXCIyMDY1NzQyOTQzXCI6W1wiSW4gcGFydGljdWxhciwgdGhlIGxpbWl0ZWQgYnVmZmVyaW5nIHRpbWUgdGhhdCBjYW4gYmUgcHJvdmlkZWQgdG8gb3B0aWNhbCBzaWduYWxzIHByZXZlbnRzIHdvcm0taG9sZSByb3V0aW5nIGFuZCB2aXJ0dWFsIGN1dC10aHJvdWdoIHJvdXRpbmcgWzExLDE3XSwgd2hpY2ggYXJlIHBvcHVsYXIgaW4gc3lzdGVtcyB3aXRoIGVsZWN0cm9uaWMgYnVmZmVycywgZnJvbSBiZWluZyBkZXBsb3llZCBlZmZlY3RpdmVseSBpbiBvcHRpY2FsIG5ldHdvcmtzLlwiXSxcIjIwNzk1OTY4NDBcIjpbXCJUaGlzIGRpc3Rpbmd1aXNoZXMgT0JTIGZyb20gY2lyY3VpdC1zd2l0Y2hpbmcgYXMgd2VsbCBhcyBmcm9tIG90aGVyIGJ1cnN0LXN3aXRjaGluZyBhcHByb2FjaGVzIHVzaW5nIHByb3RvY29scyBzdWNoIGFzIFJlc2VydmF0aW9uL3NjaGVkdWxpbmcgd2l0aCBKdXN0LUluLVRpbWUgc3dpdGNoaW5nIChSSVQpIFsxNV0gYW5kIHRlbGwtYW5kLXdhaXQgKFRBVyksIGFsc28ga25vd24gaW4gQVRNIGFzIEFCVC1EVCAoRGVsYXllZCBUcmFuc21pc3Npb25zKSBbNiwzNl0sIGFsbCBvZiB3aGljaCBhcmUgdHdvLXdheSByZXNlcnZhdGlvbiBwcm90b2NvbHMuXCJdLFwiMjA4OTkwOTM4NFwiOltcIkluIG90aGVyIHdvcmRzLCBPQlMgdXNlcyBvbmUtd2F5IHJlc2VydmF0aW9uIHByb3RvY29scyBzaW1pbGFyIHRvIHRlbGwtbi1nbyAoVEFHKSBbMzcsIDM4XSwgYWxzbyBrbm93biBpbiBBVE0gYXMgZmFzdCByZXNlcnZhdGlvbiBwcm90b2NvbCAoRlJQKSBvciBBVE0gQmxvY2sgVHJhbnNmZXIgd2l0aCBJbW1lZGlhdGUgVHJhbnNtaXNzaW9ucyAoQUJULUlUKSBbMTYsMzVdLlwiXSxcIjIwOTY5Mjg5MDBcIjpbXCJCb3RoIGNlbnRyYWxpemVkIGNvbnRyb2wgWzEsMiw3LDE4XSBhbmQgZGlzdHJpYnV0ZWQgY29udHJvbCBbMjEsMjYsMzAsNDJdIGhhdmUgYmVlbiBzdHVkaWVkLCBhbmQgaW4gZWl0aGVyIGNhc2UsIGl0IGlzIGNvbW1vbiB0byB1c2Ugb3V0LW9mLWJhbmQgc2lnbmFsaW5nIChpLlwiXSxcIjIwOTk4OTE1MDJcIjpbXCJXaXRoIHBhY2tldC1zd2l0Y2hpbmcgWzQsOCwxMF0sIGVhY2ggaW50ZXJtZWRpYXRlIG5vZGUgc3RvcmVzIGFuIGluY29taW5nIHBhY2tldCwgYW5kIHRoZW4gZm9yd2FyZHMgaXQgdG8gdGhlIG5leHQgbm9kZSBiYXNlZCBvbiBpdHMgaGVhZGVyIGFuZCBhIGxvY2FsbHkgc3RvcmVkIHJvdXRpbmcgdGFibGUuXCIsXCJBbiBhbHRlcm5hdGl2ZSB0byBvcHRpY2FsIGNpcmN1aXQgc3dpdGNoaW5nIGlzIG9wdGljYWwgb3IgcGhvdG9uaWMgcGFja2V0L2NlbGwgc3dpdGNoaW5nIGluIHdoaWNoIGEgcGFja2V0IGlzIHNlbnQgYWxvbmcgd2l0aCBpdHMgaGVhZGVyIFs0LDgsMTBdLlwiXSxcIjIxMDQ3ODU0NDdcIjpbXCJOb3RlIHRoYXQgYWx0ZXJuYXRlbHksIGEgZmxvdyBvZiBwYWNrZXRzIGNhbiBiZSBzd2l0Y2hlZCBiYXNlZCBvbiB0aGUgbWF0Y2ggYmV0d2VlbiBhIGxhYmVsIGNhcnJpZWQgYnkgZWFjaCBwYWNrZXTigJlzIGhlYWRlciBhbmQgYSBsYWJlbCBzdG9yZWQgYXQgZWFjaCBub2RlLCB3aGljaCBpcyBzZXQgdXAgZWl0aGVyIGJ5IHByZXZpb3VzIHBhY2tldHMgb2YgdGhlIHNhbWUgZmxvdyAoYXMgaW4gSVAtc3dpdGNoaW5nIFsyM10pIG9yIGJ5IHRoZSBuZXR3b3JrIChhcyBpbiBUYWctc3dpdGNoaW5nIFszM10pLlwiXSxcIjIxMDU4MTgxNDdcIjpbXCIsIFdBTiB0cmFmZmljKSwgdHJhZmZpYyBnZW5lcmF0ZWQgYnkgV2ViIGJyb3dzZXJzLCB3aWRlLWFyZWEgVENQIGNvbm5lY3Rpb25zIChpbmNsdWRpbmcgRlRQIGFuZCBURUxORVQgdHJhZmZpYyBjYXJyaWVkIG92ZXIgVENQIGNvbm5lY3Rpb25zKSwgYW5kIHZhcmlhYmxlLWJpdC1yYXRlIChWQlIpIHZpZGVvIHNvdXJjZXMgYXJlIGFsbCBzZWxmLXNpbWlsYXIgKG9yIGJ1cnN0eSBhdCBhbGwgdGltZSBzY2FsZXMpIFszLDE5XS5cIl0sXCIyMTA2NTczMjM3XCI6W1wiQm90aCBjZW50cmFsaXplZCBjb250cm9sIFsxLDIsNywxOF0gYW5kIGRpc3RyaWJ1dGVkIGNvbnRyb2wgWzIxLDI2LDMwLDQyXSBoYXZlIGJlZW4gc3R1ZGllZCwgYW5kIGluIGVpdGhlciBjYXNlLCBpdCBpcyBjb21tb24gdG8gdXNlIG91dC1vZi1iYW5kIHNpZ25hbGluZyAoaS5cIl0sXCIyMTEwMjIyMjMzXCI6W1wiV2l0aCBwYWNrZXQtc3dpdGNoaW5nIFs0LDgsMTBdLCBlYWNoIGludGVybWVkaWF0ZSBub2RlIHN0b3JlcyBhbiBpbmNvbWluZyBwYWNrZXQsIGFuZCB0aGVuIGZvcndhcmRzIGl0IHRvIHRoZSBuZXh0IG5vZGUgYmFzZWQgb24gaXRzIGhlYWRlciBhbmQgYSBsb2NhbGx5IHN0b3JlZCByb3V0aW5nIHRhYmxlLlwiLFwiQW4gYWx0ZXJuYXRpdmUgdG8gb3B0aWNhbCBjaXJjdWl0IHN3aXRjaGluZyBpcyBvcHRpY2FsIG9yIHBob3RvbmljIHBhY2tldC9jZWxsIHN3aXRjaGluZyBpbiB3aGljaCBhIHBhY2tldCBpcyBzZW50IGFsb25nIHdpdGggaXRzIGhlYWRlciBbNCw4LDEwXS5cIl0sXCIyMTE0ODQ4OTEzXCI6W1wiQm90aCBjZW50cmFsaXplZCBjb250cm9sIFsxLDIsNywxOF0gYW5kIGRpc3RyaWJ1dGVkIGNvbnRyb2wgWzIxLDI2LDMwLDQyXSBoYXZlIGJlZW4gc3R1ZGllZCwgYW5kIGluIGVpdGhlciBjYXNlLCBpdCBpcyBjb21tb24gdG8gdXNlIG91dC1vZi1iYW5kIHNpZ25hbGluZyAoaS5cIl0sXCIyMTE4MzkyOTQ3XCI6W1wiQXMgYSByZXN1bHQgWzQxXSwgdGhlIGF2ZXJhZ2UgZHJvcHBpbmcgcHJvYmFiaWxpdHkgb2YgdGhlIGhpZ2ggcHJpb3JpdHkgYnVyc3RzIHdpbGwgYmUgYXQgbGVhc3QgMTAgdGltZXMgbG93ZXIgd2hlbiBrID0gOCwgYW5kIHNldmVyYWwgb3JkZXJzIG9mIG1hZ25pdHVkZSBsb3dlciB3aGVuIGsgPSAzMiAoYWx0aG91Z2ggdGhlIGF2ZXJhZ2UgYmxvY2tpbmcgcHJvYmFiaWxpdHkgb2YgYWxsIGJ1cnN0cyByZW1haW5zIHVuY2hhbmdlZCkuXCJdLFwiMjEyOTYxODgwOVwiOltcIlNwZWNpZmljYWxseSwgdXNpbmcgb3B0aWNhbCBjaXJjdWl0LXN3aXRjaGluZyB2aWEgd2F2ZWxlbmd0aCByb3V0aW5nIFs3LDIyLDMxXSwgYSBsaWdodHBhdGggbmVlZHMgdG8gYmUgZXN0YWJsaXNoZWQgZmlyc3QgZnJvbSBhIHNvdXJjZSBub2RlIHRvIGEgZGVzdGluYXRpb24gbm9kZSB1c2luZyBhIGRlZGljYXRlZCB3YXZlbGVuZ3RoIG9uIGVhY2ggbGluayBhbG9uZyBhIHBoeXNpY2FsIHBhdGguXCJdLFwiMjEzMTAxODI4MlwiOltcIldpdGggcGFja2V0LXN3aXRjaGluZyBbNCw4LDEwXSwgZWFjaCBpbnRlcm1lZGlhdGUgbm9kZSBzdG9yZXMgYW4gaW5jb21pbmcgcGFja2V0LCBhbmQgdGhlbiBmb3J3YXJkcyBpdCB0byB0aGUgbmV4dCBub2RlIGJhc2VkIG9uIGl0cyBoZWFkZXIgYW5kIGEgbG9jYWxseSBzdG9yZWQgcm91dGluZyB0YWJsZS5cIixcIkFuIGFsdGVybmF0aXZlIHRvIG9wdGljYWwgY2lyY3VpdCBzd2l0Y2hpbmcgaXMgb3B0aWNhbCBvciBwaG90b25pYyBwYWNrZXQvY2VsbCBzd2l0Y2hpbmcgaW4gd2hpY2ggYSBwYWNrZXQgaXMgc2VudCBhbG9uZyB3aXRoIGl0cyBoZWFkZXIgWzQsOCwxMF0uXCJdLFwiMjEzMjY5NDY4NlwiOltcIlRoaXMgZGlzdGluZ3Vpc2hlcyBPQlMgZnJvbSBjaXJjdWl0LXN3aXRjaGluZyBhcyB3ZWxsIGFzIGZyb20gb3RoZXIgYnVyc3Qtc3dpdGNoaW5nIGFwcHJvYWNoZXMgdXNpbmcgcHJvdG9jb2xzIHN1Y2ggYXMgUmVzZXJ2YXRpb24vc2NoZWR1bGluZyB3aXRoIEp1c3QtSW4tVGltZSBzd2l0Y2hpbmcgKFJJVCkgWzE1XSBhbmQgdGVsbC1hbmQtd2FpdCAoVEFXKSwgYWxzbyBrbm93biBpbiBBVE0gYXMgQUJULURUIChEZWxheWVkIFRyYW5zbWlzc2lvbnMpIFs2LDM2XSwgYWxsIG9mIHdoaWNoIGFyZSB0d28td2F5IHJlc2VydmF0aW9uIHByb3RvY29scy5cIl0sXCIyMTM0MDYxMjM5XCI6W1wiV2l0aCBjdXJyZW50IHRlY2hub2xvZ3ksIGEgRkRMLWJhc2VkIGJ1ZmZlciBjb250YWluaW5nIGEgZmV3IGtpbG9tZXRlcnMgb2YgZmliZXIsIGFuZCB0aHVzIHByb3ZpZGluZyBhIGZldyB0ZW5zIG9mIM68cyBkZWxheSBpcyBmZWFzaWJsZSBbMjBdLlwiXSxcIjIxMzUyNTk2MzRcIjpbXCIsIHNlZSBbMjEsMjhdKSwgd2hpbGUgYW5vdGhlciBWT04gbWF5IGFkb3B0IFNlbGYtcmVjb25maWd1cmF0aW9uIHRvIHN1cHBvcnQgc3RlYWR5LXRyYWZmaWMgYW5kIGxvbmctbGl2ZWQgY29ubmVjdGlvbnMgKGUuXCJdLFwiMjEzNjQ0OTQ2M1wiOltcIkluIG90aGVyIHdvcmRzLCBPQlMgdXNlcyBvbmUtd2F5IHJlc2VydmF0aW9uIHByb3RvY29scyBzaW1pbGFyIHRvIHRlbGwtbi1nbyAoVEFHKSBbMzcsIDM4XSwgYWxzbyBrbm93biBpbiBBVE0gYXMgZmFzdCByZXNlcnZhdGlvbiBwcm90b2NvbCAoRlJQKSBvciBBVE0gQmxvY2sgVHJhbnNmZXIgd2l0aCBJbW1lZGlhdGUgVHJhbnNtaXNzaW9ucyAoQUJULUlUKSBbMTYsMzVdLlwiXSxcIjIxNDcwOTI1OTdcIjpbXCJCb3RoIGNlbnRyYWxpemVkIGNvbnRyb2wgWzEsMiw3LDE4XSBhbmQgZGlzdHJpYnV0ZWQgY29udHJvbCBbMjEsMjYsMzAsNDJdIGhhdmUgYmVlbiBzdHVkaWVkLCBhbmQgaW4gZWl0aGVyIGNhc2UsIGl0IGlzIGNvbW1vbiB0byB1c2Ugb3V0LW9mLWJhbmQgc2lnbmFsaW5nIChpLlwiLFwiU3BlY2lmaWNhbGx5LCB1c2luZyBvcHRpY2FsIGNpcmN1aXQtc3dpdGNoaW5nIHZpYSB3YXZlbGVuZ3RoIHJvdXRpbmcgWzcsMjIsMzFdLCBhIGxpZ2h0cGF0aCBuZWVkcyB0byBiZSBlc3RhYmxpc2hlZCBmaXJzdCBmcm9tIGEgc291cmNlIG5vZGUgdG8gYSBkZXN0aW5hdGlvbiBub2RlIHVzaW5nIGEgZGVkaWNhdGVkIHdhdmVsZW5ndGggb24gZWFjaCBsaW5rIGFsb25nIGEgcGh5c2ljYWwgcGF0aC5cIl0sXCIyMTQ4Mjc1NDc3XCI6W1wiTW9yZSBpbXBvcnRhbnRseSwgc29tZSBzdHVkaWVzIGhhdmUgY29uY2x1ZGVkIHRoYXQsIGNvbnRyYXJ5IHRvIHRoZSBjb21tb24gYXNzdW1wdGlvbiBiYXNlZCBvbiBQb2lzc29uIHRyYWZmaWMsIG11bHRpcGxleGluZyBhIGxhcmdlIG51bWJlciBvZiBzZWxmLXNpbWlsYXIgdHJhZmZpYyBzdHJlYW1zIHJlc3VsdHMgaW4gYnVyc3R5IHRyYWZmaWMgWzEzLDI0XS5cIl0sXCIyMTQ4NjU1NTc5XCI6W1wiSW4gb3RoZXIgd29yZHMsIE9CUyB1c2VzIG9uZS13YXkgcmVzZXJ2YXRpb24gcHJvdG9jb2xzIHNpbWlsYXIgdG8gdGVsbC1uLWdvIChUQUcpIFszNywgMzhdLCBhbHNvIGtub3duIGluIEFUTSBhcyBmYXN0IHJlc2VydmF0aW9uIHByb3RvY29sIChGUlApIG9yIEFUTSBCbG9jayBUcmFuc2ZlciB3aXRoIEltbWVkaWF0ZSBUcmFuc21pc3Npb25zIChBQlQtSVQpIFsxNiwzNV0uXCJdLFwiMjE1MTg0MTkwNVwiOltcIkluIFNlY3Rpb24gMywgd2UgZGVzY3JpYmUgSnVzdC1Fbm91Z2gtVGltZSAoSkVUKSBbMzksNDBdLCBhbmQgYWxzbyBkaXNjdXNzIHNldmVyYWwgc3BlY2lmaWMgaXNzdWVzIHJlbGF0ZWQgdG8gSkVULWJhc2VkIE9CUyBwcm90b2NvbHMuXCIsXCJCeSBjaG9vc2luZyB0aGUgb2Zmc2V0IHRpbWUgYXQgdGhlIHNvdXJjZSB0byBiZSBsYXJnZXIgdGhhbiB0aGUgdG90YWwgcHJvY2Vzc2luZyB0aW1lIG9mIHRoZSBjb250cm9sIHBhY2tldCBhbG9uZyB0aGUgcGF0aCBbMzksNDBdLCBvbmUgY2FuIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3IgYSBkYXRhIGJ1cnN0IHRvIGJlIGJ1ZmZlcmVkIGF0IGFueSBzdWJzZXF1ZW50IGludGVybWVkaWF0ZSBub2RlIGp1c3QgdG8gd2FpdCBmb3IgdGhlIGNvbnRyb2wgcGFja2V0IHRvIGdldCBwcm9jZXNzZWQuXCJdLFwiMjE1NzkxNTE3NVwiOltcIk9uZSBvZiB0aGUgYmFzaWMgZm9ybXMgb2YgU2VsZi1yZWNvbmZpZ3VyYXRpb24gaXMgc2NoZWR1bGVkIGNvbW11bmljYXRpb25zIFs1LDksMjksMzRdLlwiXSxcIjIxNTkwNDg2MThcIjpbXCJNb3JlIGltcG9ydGFudGx5LCBzb21lIHN0dWRpZXMgaGF2ZSBjb25jbHVkZWQgdGhhdCwgY29udHJhcnkgdG8gdGhlIGNvbW1vbiBhc3N1bXB0aW9uIGJhc2VkIG9uIFBvaXNzb24gdHJhZmZpYywgbXVsdGlwbGV4aW5nIGEgbGFyZ2UgbnVtYmVyIG9mIHNlbGYtc2ltaWxhciB0cmFmZmljIHN0cmVhbXMgcmVzdWx0cyBpbiBidXJzdHkgdHJhZmZpYyBbMTMsMjRdLlwiXSxcIjIxNjQwODIxOTRcIjpbXCJCb3RoIGNlbnRyYWxpemVkIGNvbnRyb2wgWzEsMiw3LDE4XSBhbmQgZGlzdHJpYnV0ZWQgY29udHJvbCBbMjEsMjYsMzAsNDJdIGhhdmUgYmVlbiBzdHVkaWVkLCBhbmQgaW4gZWl0aGVyIGNhc2UsIGl0IGlzIGNvbW1vbiB0byB1c2Ugb3V0LW9mLWJhbmQgc2lnbmFsaW5nIChpLlwiXSxcIjIxNjUzODU0MzlcIjpbXCJJbiBhIHNpbWlsYXIgYXBwcm9hY2gsIHdoaWNoIG1heSBhbHNvIGJlIGNvbnNpZGVyZWQgYXMgYSBmb3JtIG9mIFNlbGYtcmVjb25maWd1cmF0aW9uLCBhIGxvZ2ljYWwgdG9wb2xvZ3kgKGFuYWxvZ291cyB0byBhIHN0YXRpYyBWT04pIGNvbnRhaW5pbmcgdGhlIHNldCBvZiBjb21tdW5pY2F0aW5nIG5vZGVzIGlzIGRldmlzZWQgYW5kIGVtYmVkZGVkIGV2ZW4gd2hlbiBiYW5kd2lkdGggaXMgbGltaXRlZCBbMjIsMzJdLCBzdWNoIHRoYXQgdGhlc2Ugbm9kZXMgbWF5IGNvbW11bmljYXRlIGF0IHRoZSBzYW1lIHRpbWUgYnV0IGEgbWVzc2FnZSBmcm9tIGl0cyBzb3VyY2UgdG8gaXRzIHVsdGltYXRlIGRlc3RpbmF0aW9uIG1heSBnbyB0aHJvdWdoIG1vcmUgdGhhbiBvbmUgbGlnaHRwYXRoLCB0aHVzIHJlcXVpcmluZyBPL0UgYW5kIEUvTyBjb252ZXJzaW9ucyBhdCB0aGUgbm9kZXMgd2hlcmUgdHdvIGxpZ2h0cGF0aHMgbWVldC5cIl0sXCIyNDYwNjM0OTY2XCI6W1wiSW4gcGFydGljdWxhciwgdGhlIGxpbWl0ZWQgYnVmZmVyaW5nIHRpbWUgdGhhdCBjYW4gYmUgcHJvdmlkZWQgdG8gb3B0aWNhbCBzaWduYWxzIHByZXZlbnRzIHdvcm0taG9sZSByb3V0aW5nIGFuZCB2aXJ0dWFsIGN1dC10aHJvdWdoIHJvdXRpbmcgWzExLDE3XSwgd2hpY2ggYXJlIHBvcHVsYXIgaW4gc3lzdGVtcyB3aXRoIGVsZWN0cm9uaWMgYnVmZmVycywgZnJvbSBiZWluZyBkZXBsb3llZCBlZmZlY3RpdmVseSBpbiBvcHRpY2FsIG5ldHdvcmtzLlwiXSxcIjI1NDU0NzM1MDlcIjpbXCJJbiBTZWN0aW9uIDMsIHdlIGRlc2NyaWJlIEp1c3QtRW5vdWdoLVRpbWUgKEpFVCkgWzM5LDQwXSwgYW5kIGFsc28gZGlzY3VzcyBzZXZlcmFsIHNwZWNpZmljIGlzc3VlcyByZWxhdGVkIHRvIEpFVC1iYXNlZCBPQlMgcHJvdG9jb2xzLlwiLFwiQnkgY2hvb3NpbmcgdGhlIG9mZnNldCB0aW1lIGF0IHRoZSBzb3VyY2UgdG8gYmUgbGFyZ2VyIHRoYW4gdGhlIHRvdGFsIHByb2Nlc3NpbmcgdGltZSBvZiB0aGUgY29udHJvbCBwYWNrZXQgYWxvbmcgdGhlIHBhdGggWzM5LDQwXSwgb25lIGNhbiBlbGltaW5hdGUgdGhlIG5lZWQgZm9yIGEgZGF0YSBidXJzdCB0byBiZSBidWZmZXJlZCBhdCBhbnkgc3Vic2VxdWVudCBpbnRlcm1lZGlhdGUgbm9kZSBqdXN0IHRvIHdhaXQgZm9yIHRoZSBjb250cm9sIHBhY2tldCB0byBnZXQgcHJvY2Vzc2VkLlwiXSxcIjI1NzMxNjIyNjRcIjpbXCJJbiBvcmRlciBmb3IgYSBXRE0gb3B0aWNhbCBsYXllciB0byBwcm92aWRlIGRpZmZlcmVudGlhdGVkIHNlcnZpY2VzIGluIGFuIGVmZmVjdGl2ZSBhbmQgZmVhc2libGUgd2F5LCBhcyB3ZWxsIGFzIHRvIGNpcmN1bXZlbnQgdGhlIGN1cnJlbnQgYW5kL29yIGZ1bmRhbWVudGFsIGVjb25vbWljIGFuZCB0ZWNobm9sb2dpY2FsIGxpbWl0cywgd2UgcHJvcG9zZWQgYW4gYXJjaGl0ZWN0dXJhbCBmcmFtZXdvcmsgYWxsb3dpbmcgZm9yIHNldmVyYWwgaW50ZXJvcGVyYWJsZSB2aXJ0dWFsIG9wdGljYWwgbmV0d29ya3MgKFZPTnMpIFsyN10uXCJdLFwiMjU4OTcyNTk1OVwiOltcIiwgc2VlIFsyNSwyOV0pLlwiLFwiT25lIG9mIHRoZSBiYXNpYyBmb3JtcyBvZiBTZWxmLXJlY29uZmlndXJhdGlvbiBpcyBzY2hlZHVsZWQgY29tbXVuaWNhdGlvbnMgWzUsOSwyOSwzNF0uXCIsXCJXaXRoIHN1ZmZpY2llbnQgYmFuZHdpZHRoLCBzY2hlZHVsZWQgY29tbXVuaWNhdGlvbnMgYmVjb21lIGVtYmVkZGVkIGNvbW11bmljYXRpb25zIGFzIGEgc3BlY2lhbCBpbnN0YW5jZSwgd2hlcmUgdGhlIHNjaGVkdWxlIGxlbmd0aCBpcyBvbmUsIG9yIGluIG90aGVyIHdvcmRzLCBjb21tdW5pY2F0aW9ucyBhbW9uZyB0aGUgZW50aXJlIHNldCBvZiBjb21tdW5pY2F0aW5nIG5vZGVzIGFyZSBhY2NvbW1vZGF0ZWQgYXQgdGhlIHNhbWUgdGltZSBbMjUsMjldLlwiXX0sXCJQUlwiOlsyMTY1MzM0OTY3LDIxNDEyMTc5NzMsMjE1NDM3MTgwMiwyMTQ5MjA2MTA4LDIwMjA1OTk2MzAsMjU0NTQ3MzUwOSwyMTM3MjM4OTg2LDIxMzU1MjYyNDQsMjYxMjkyNjk0NiwyMTQ0Mjg4OTM0LDIxMTIxNzA3NjgsMjE2NDA1NjQ1OSwyMDQ3NjY1ODE1LDIwNTM2NDQxNjYsMjAzMDY5ODg5MSwyMTQyNzQ0OTk1LDE1MDAwNTc0MTksMTk3NzI2NTU4NSwyMTA4MTY1MTc3LDIxMTM4MTY0NjYsMjE2NTMzNDk2NywyMTQxMjE3OTczLDIxNTQzNzE4MDIsMjE0OTIwNjEwOCwyMDIwNTk5NjMwLDI1NDU0NzM1MDksMjEzNzIzODk4NiwyMTM1NTI2MjQ0LDI2MTI5MjY5NDYsMjE0NDI4ODkzNCwyMTEyMTcwNzY4LDIxNjQwNTY0NTksMjA0NzY2NTgxNSwyMDUzNjQ0MTY2LDIwMzA2OTg4OTEsMjE0Mjc0NDk5NSwxNTAwMDU3NDE5LDE5NzcyNjU1ODUsMjEwODE2NTE3NywyMTEzODE2NDY2XSxcIkFORlwiOlt7XCJGTlwiOlwiQ2h1bm1pbmdcIixcIkxOXCI6XCJRaWFvXCIsXCJTXCI6MX0se1wiRk5cIjpcIk15dW5nc2lrXCIsXCJMTlwiOlwiWW9vXCIsXCJTXCI6Mn1dLFwiQlZcIjpcIkpvdXJuYWwgb2YgSGlnaCBTcGVlZCBOZXR3b3Jrc1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJJT1MgUHJlc3NcIn0ifSx7ImxvZ3Byb2IiOi0xNi4yNjIsImtlc0VudGl0eUlkIjoxNDQ1NzU4LCJJZCI6MTk3NTM5Mjc5MSwiVGkiOiJpbnRlcm5ldCBhZHZlcnRpc2luZyBhbmQgdGhlIGdlbmVyYWxpemVkIHNlY29uZCBwcmljZSBhdWN0aW9uIHNlbGxpbmcgYmlsbGlvbnMgb2YgZG9sbGFycyB3b3J0aCBvZiBrZXl3b3JkcyIsIlkiOjIwMDcsIkQiOiIyMDA3LTAyLTAxIiwiUklkIjpbMjE2NTIxNjYzOCwyMTMxOTUxMjA3LDIwOTYzNzU4NjEsMjA1NjIwNzQxOSwyMTMzMTk4MzExLDIwNTUwMzQxODMsMjEzNTA2MDQ5OCwyMTQxODA2NDQ4LDE3NjkxMjA4MzUsMjA0MzYzNDQ1MiwyMTQ4MjY4NzE5LDIxMDI5MDgxNTgsMjEzOTg5MTI4OCwyMTc5MjUyNDE0LDIxMTA1MDMwMzAsMjAzODI0MjU0NiwyMTYwNzQ2MjY3LDE3MzU3MTI4MjUsMjI5NDIxMDAxNCwyMTM0OTAxNDMwLDIwMTk3NjI5ODcsMjEzMTk4ODU5NywyMDAyMjY0NjExLDIwNzgwNDA2NzcsMjExNDQ4NzE2MSwyMDE1MDA3NjIwLDIxNTg0ODY2MjEsMjExNjgyMTEwNCwyMTIwMTAwNjEyLDIxMzc0MDI0MTcsMjA1NTIwMTcxMiwxOTY0Njc3ODU1LDE5ODU3MjY1MjQsMTk5MTg5MjIyMywxNjQ3NzgwODk0LDIwMTkzNTEzNTgsMjExNjg5NDk2NywxNDg0MTUyMjI4LDIwMjY1MDkyNTYsMjA5NDIwODQ3MCwxOTkzMzUxMDI5LDIwMzA3NzY0OCwyMDAyNDMwODQ0LDIwMjQ2OTQ1ODksMTk4NTY1NTE0MiwyMTA1ODY5Mzc2LDEwMTgyMzkwMiwyMDc3NTEwOTA2LDIwODYxNzY1MDEsMjAyNjAwMDM5NSwyMDE4MjQ1ODk2LDIxMDg4MDgxMjUsMjAzMTYzODY3MCwxNTU3Njk0ODMsMTk3NjI5ODYwOCwzNTY3Nzk2NCwxOTc4MDg2NjU2LDMwMDA1ODcxLDIyNTY3NzIwODZdLCJBQSI6W3siQXVOIjoiYmVuamFtaW4gZWRlbG1hbiJ9LHsiQXVOIjoibWljaGFlbCBvc3Ryb3Zza3kifSx7IkF1TiI6Im1pY2hhZWwgc2Nod2FyeiJ9XSwiRiI6W3siRk4iOiJjb3N0IHBlciBhY3F1aXNpdGlvbiJ9LHsiRk4iOiJjb3N0IHBlciBpbXByZXNzaW9uIn0seyJGTiI6InNoYXJlIG9mIHZvaWNlIn0seyJGTiI6ImdlbmVyYWxpemVkIHNlY29uZCBwcmljZSBhdWN0aW9uIn0seyJGTiI6ImtleXdvcmQgYWR2ZXJ0aXNpbmcifSx7IkZOIjoidmlja3JleSBjbGFya2UgZ3JvdmVzIGF1Y3Rpb24ifSx7IkZOIjoiZW5nbGlzaCBhdWN0aW9uIn0seyJGTiI6ImNvbW1vbiB2YWx1ZSBhdWN0aW9uIn0seyJGTiI6Im1pY3JvZWNvbm9taWNzIn0seyJGTiI6ImVjb25vbWljcyJ9XSwiRSI6IntcIkROXCI6XCJJbnRlcm5ldCBBZHZlcnRpc2luZyBhbmQgdGhlIEdlbmVyYWxpemVkIFNlY29uZCBQcmljZSBBdWN0aW9uOiBTZWxsaW5nIEJpbGxpb25zIG9mIERvbGxhcnMgV29ydGggb2YgS2V5d29yZHNcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxMzksXCJJbnZlcnRlZEluZGV4XCI6e1wiV2VcIjpbMF0sXCJpbnZlc3RpZ2F0ZVwiOlsxXSxcInRoZVwiOlsyLDM2LDM5LDQ2LDU1LDY3LDkwLDEwMCwxMDcsMTI2LDEzM10sXCJcXFwiZ2VuZXJhbGl6ZWRcIjpbM10sXCJzZWNvbmRcIjpbNF0sXCJwcmljZVxcXCJcIjpbNV0sXCJhdWN0aW9uXCI6WzYsMTAzXSxcIihHU1ApLFwiOls3XSxcImFcIjpbOCw5NSwxMTRdLFwibmV3XCI6WzldLFwibWVjaGFuaXNtXCI6WzEwLDM3LDQ3XSxcIndoaWNoXCI6WzExXSxcImlzXCI6WzEyLDI4LDgyLDExOF0sXCJ1c2VkXCI6WzEzXSxcImJ5XCI6WzE0XSxcInNlYXJjaFwiOlsxNV0sXCJlbmdpbmVzXCI6WzE2XSxcInRvXCI6WzE3LDMwLDU0LDEwNiwxMjldLFwic2VsbFwiOlsxOF0sXCJvbmxpbmVcIjpbMTldLFwiYWR2ZXJ0aXNpbmdcIjpbMjBdLFwidGhhdFwiOlsyMSwxMDQsMTExLDEyM10sXCJtb3N0XCI6WzIyXSxcIkludGVybmV0XCI6WzIzXSxcInVzZXJzXCI6WzI0XSxcImVuY291bnRlclwiOlsyNV0sXCJkYWlseS5cIjpbMjZdLFwiR1NQXCI6WzI3LDUxLDcwLDkzLDEwOF0sXCJ0YWlsb3JlZFwiOlsyOV0sXCJpdHNcIjpbMzEsNTldLFwidW5pcXVlXCI6WzMyLDExNV0sXCJlbnZpcm9ubWVudCxcIjpbMzMsOTddLFwiYW5kXCI6WzM0LDgwLDEwOV0sXCJuZWl0aGVyXCI6WzM1XSxcIm5vclwiOlszOF0sXCJlbnZpcm9ubWVudFwiOls0MF0sXCJoYXZlXCI6WzQxLDc0XSxcInByZXZpb3VzbHlcIjpbNDJdLFwiYmVlblwiOls0M10sXCJzdHVkaWVkXCI6WzQ0XSxcImluXCI6WzQ1LDc3LDk0LDEyNV0sXCJkZXNpZ25cIjpbNDhdLFwibGl0ZXJhdHVyZS5cIjpbNDldLFwiQWx0aG91Z2hcIjpbNTBdLFwibG9va3NcIjpbNTJdLFwic2ltaWxhclwiOls1M10sXCJWaWNrcmV5LUNsYXJrZS1Hcm92ZXNcIjpbNTZdLFwiKFZDRylcIjpbNTddLFwibWVjaGFuaXNtLFwiOls1OCw2OV0sXCJwcm9wZXJ0aWVzXCI6WzYwLDkxXSxcImFyZVwiOls2MV0sXCJ2ZXJ5XCI6WzYyXSxcImRpZmZlcmVudC5cIjpbNjNdLFwiSW5cIjpbNjRdLFwicGFydGljdWxhcixcIjpbNjVdLFwidW5saWtlXCI6WzY2XSxcIlZDR1wiOls2OF0sXCJnZW5lcmFsbHlcIjpbNzFdLFwiZG9lc1wiOls3Ml0sXCJub3RcIjpbNzMsODNdLFwiYW5cIjpbNzUsODQsMTE5XSxcImVxdWlsaWJyaXVtXCI6Wzc2LDg1LDEyMiwxMzZdLFwiZG9taW5hbnRcIjpbNzgsMTM0XSxcInN0cmF0ZWdpZXMsXCI6Wzc5XSxcInRydXRoLXRlbGxpbmdcIjpbODFdLFwib2ZcIjpbODYsOTIsMTM3XSxcIkdTUC5cIjpbODddLFwiVG9cIjpbODhdLFwiYW5hbHl6ZVwiOls4OV0sXCJkeW5hbWljXCI6Wzk2XSxcIndlXCI6Wzk4XSxcImRlc2NyaWJlXCI6Wzk5XSxcImdlbmVyYWxpemVkXCI6WzEwMV0sXCJFbmdsaXNoXCI6WzEwMl0sXCJjb3JyZXNwb25kc1wiOlsxMDVdLFwic2hvd1wiOlsxMTBdLFwiaXRcIjpbMTEyXSxcImhhc1wiOlsxMTNdLFwiZXF1aWxpYnJpdW0uXCI6WzExNl0sXCJUaGlzXCI6WzExN10sXCJleFwiOlsxMjBdLFwicG9zdFwiOlsxMjFdLFwicmVzdWx0c1wiOlsxMjRdLFwic2FtZVwiOlsxMjddLFwicGF5b2Zmc1wiOlsxMjhdLFwiYWxsXCI6WzEzMF0sXCJwbGF5ZXJzXCI6WzEzMV0sXCJhc1wiOlsxMzJdLFwic3RyYXRlZ3lcIjpbMTM1XSxcIlZDRy5cIjpbMTM4XX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmJlbmVkZWxtYW4ub3JnL3B1YmxpY2F0aW9ucy9nc3AtMDYwODAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lm5iZXIub3JnL3BhcGVycy93MTE3NjUucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly96b28uY3MueWFsZS5lZHUvY2xhc3Nlcy9jczQ1NS9mYWxsMTEvZ3NwX3ByZXNlbnRhdGlvbi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2Vjb25vbWljcy55YWxlLmVkdS9zaXRlcy9kZWZhdWx0L2ZpbGVzL2ZpbGVzL1dvcmtzaG9wcy1TZW1pbmFycy9NaWNyb1RoZW9yeS9vc3Ryb3Zza3ktMDcwNDExLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vdXNlcnMuY21zLmNhbHRlY2guZWR1L35hZGFtdy9jb3Vyc2VzLzI0MS9sZWN0dXJlcy9zZWFyY2gyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vcHVicy5hZWF3ZWIub3JnL2RvaS9wZGZwbHVzLzEwLjEyNTcvYWVyLjk3LjEuMjQyXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jb3Vyc2VzLmNtcy5jYWx0ZWNoLmVkdS9jczE0NC9sZWN0dXJlcy9nc3AucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuZGkuZW5zLmZyL35sZWxhcmdlL3NvYy9lb3MucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY2FsdGVjaC5lZHUvfmFkYW13L2NvdXJzZXMvMjQxL2xlY3R1cmVzL3NlYXJjaDIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY29sdW1iaWEuZWR1L2NvbXM2OTk4LTMvZ3NwLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmVlY3MuaGFydmFyZC5lZHUvY3MyODZyL2NvdXJzZXMvZmFsbDA5L3BhcGVycy9lb3MucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vcGFwZXJzLnNzcm4uY29tL3NvbDMvRGVsaXZlcnkuY2ZtL1NTUk5fSUQ5NDE3NjRfY29kZTM2MzU1NS5wZGY/YWJzdHJhY3RpZD04NjExNjRcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3Blb3BsZS5oc3MuY2FsdGVjaC5lZHUvfm1zaHVtL2VjMTA2L2dzcC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5wcmluY2V0b24uZWR1L2NvdXJzZXMvYXJjaGl2ZS9zcHIxMS9jb3M0NDgvd2ViL2RvY3Mvd2VlazNfcmVhZGluZzIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vZmFjdWx0eS5mdXF1YS5kdWtlLmVkdS9+ZG0xMjEvUGhEJTIwYXVjdGlvbi9hdWN0aW9uLTIwMDkvcGFwZXJzL0VkZWxtYW5fT3N0cm92c2t5X1NjaHdhcnoucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cubmJlci5vcmcvcGFwZXJzL3cxMTc2NVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vd3d3LmlzaWQuYWMuaW4vfmRtaXNocmEvZ21kb2MvZ3NwLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3d3dy5hZWF3ZWIub3JnL2FydGljbGVzP2lkPTEwLjEyNTcvYWVyLjk3LjEuMjQyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZWNvbnBhcGVycy5yZXBlYy5vcmcvYXJ0aWNsZS9hZWFhZWNyZXYvdl8zYTk3XzNheV8zYTIwMDdfM2FpXzNhMV8zYXBfM2EyNDItMjU5Lmh0bVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3BhcGVycy5zc3JuLmNvbS9zb2wzL3BhcGVycy5jZm0/YWJzdHJhY3RfaWQ9ODYxMTY0XCJ9XSxcIlZGTlwiOlwiVGhlIEFtZXJpY2FuIEVjb25vbWljIFJldmlld1wiLFwiVlwiOjk3LFwiSVwiOjEsXCJGUFwiOjI0MixcIkxQXCI6MjU5LFwiRE9JXCI6XCIxMC4yMTM5L3Nzcm4uODYxMTY0XCIsXCJDQ1wiOntcIjE3NjkxMjA4MzVcIjpbXCJDaHJpc3RvcGhlciBNZWVrLCBEYXZpZCBNLiBDaGlja2VyaW5nLCBhbmQgRGF2aWQgQi4gIFdpbHNvbiAoMjAwNSkgIGRlc2NyaWJlIGluY2VudGl2ZS1jb21wYXRpYmxlIGF1Y3Rpb25zIHdpdGggc3RvY2hhc3RpYyBhbGxvY2F0aW9uIHJ1bGVzLCBnZW5lcmFsaXppbmcgVmlja3JleSBhdWN0aW9ucywgYW5kIGFyZ3VlIHRoYXQgc3VjaCBhdWN0aW9ucyBjYW4gYmUgdXNlZnVsIGZvciBzZWxsaW5nIEludGVybmV0IGFkdmVydGlzaW5nIGRlc3BpdGUgYmVpbmcgaW5lZmZpY2llbnQuXCJdLFwiMjAyNjAwMDM5NVwiOltcIldlIHZpZXcgdGhlIGdlbmVyYWxpemVkIEVuZ2xpc2ggYXVjdGlvbiBpbiB0aGUgc2FtZSBsaWdodCBhcyB0aGUgdGEgy4Z0b25uZW1lbnQgcHJvY2Vzc2VzIGluIHRoZSB0aGVvcnkgb2YgZ2VuZXJhbCBlcXVpbGlicml1bSAoc2VlLCBlLmcuLCBBbmRyZXUgTWFzLUNvbGVsbCwgTWljaGFlbCBELiBXaGluc3RvbiwgYW5kIEplcnJ5IFIuICBHcmVlbiAxOTk1LCAgc2VjdC5cIl0sXCIyMTAyOTA4MTU4XCI6W1wiSWYgYSBiaWRkZXLigJlzIHZhbHVlIGlzIGluIHRoZSBpbnRlcnZhbCBbMCwgMV0gb3IgaW4gdGhlIGludGVydmFsIFsyLOKIniksIGhlIGRyb3BzIG91dCB3aGVuIHRoZSBjbG9jayByZWFjaGVzIGhpcyB2YWx1ZS5cIl0sXCIyMTQxODA2NDQ4XCI6W1wiSWYgYSBiaWRkZXLigJlzIHZhbHVlIGlzIGluIHRoZSBpbnRlcnZhbCBbMCwgMV0gb3IgaW4gdGhlIGludGVydmFsIFsyLOKIniksIGhlIGRyb3BzIG91dCB3aGVuIHRoZSBjbG9jayByZWFjaGVzIGhpcyB2YWx1ZS5cIl19LFwiUFJcIjpbMjEyNzM0NzYxMywyMDE1MDA3NjIwLDIwMjkwNTA3NzEsMjEzMzE5ODMxMSwyMTIwMTAwNjEyLDIxMzUwNjA0OTgsMjA3ODA0MDY3NywyMTEyOTYyNzYyLDIwODg1MzIyNTYsMjEzMzQ4MTA1MSwyMTQ2MDk2NTA0LDIxMzE5NTEyMDcsMjA4NTE5MjQ3OCwyMDkwODgzMjA0LDIwMDIyNjQ2MTEsMjExNzM0MDAxOCwyMTQzMTI2MDgyLDE5NTQ4MzQzNjAsMjE2MDc0NjI2NywyMTE5OTE0NTc3LDIxMjczNDc2MTMsMjAxNTAwNzYyMCwyMDI5MDUwNzcxLDIxMzMxOTgzMTEsMjEyMDEwMDYxMiwyMTM1MDYwNDk4LDIwNzgwNDA2NzcsMjExMjk2Mjc2MiwyMDg4NTMyMjU2LDIxMzM0ODEwNTEsMjE0NjA5NjUwNCwyMTMxOTUxMjA3LDIwODUxOTI0NzgsMjA5MDg4MzIwNCwyMDAyMjY0NjExLDIxMTczNDAwMTgsMjE0MzEyNjA4MiwxOTU0ODM0MzYwLDIxNjA3NDYyNjcsMjExOTkxNDU3N10sXCJBTkZcIjpbe1wiRk5cIjpcIkJlbmphbWluIEcuXCIsXCJMTlwiOlwiRWRlbG1hblwiLFwiU1wiOjF9LHtcIkZOXCI6XCJNaWNoYWVsXCIsXCJMTlwiOlwiT3N0cm92c2t5XCIsXCJTXCI6Mn0se1wiRk5cIjpcIk1pY2hhZWxcIixcIkxOXCI6XCJTY2h3YXJ6XCIsXCJTXCI6M31dLFwiQlZcIjpcIlRoZSBBbWVyaWNhbiBFY29ub21pYyBSZXZpZXdcIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiQW1lcmljYW4gRWNvbm9taWMgQXNzb2NpYXRpb25cIn0ifSx7ImxvZ3Byb2IiOi0xNi4yOTcsImtlc0VudGl0eUlkIjoxNDk2ODA2LCJJZCI6MjAzODE5NDIyMCwiVGkiOiJpbnRlcm5ldCBvZiB0aGluZ3MgaW4gaW5kdXN0cmllcyBhIHN1cnZleSIsIlkiOjIwMTQsIkQiOiIyMDE0LTExLTAxIiwiUklkIjpbMjEwNTEwMzc3NywyMTExNjE5NjI2LDE5OTA5MTE5NzcsMjExOTA0NjY0MiwyMDY4ODQ5Mjc3LDE5Nzk1MTk0NjIsMjE3MDU3NzQwOCwyNjAyOTU2NjMwLDIxMjM3NzAxOTgsMTk3MjAxMjE0NywyMDI2ODkyNDU5LDIwNDQ2NzYwNDksMjA5NDcyOTM3MSwxNDk3Mzc2NzYzLDIxNDM1OTE0NDIsMjE2NTg4NzU3MiwyMTA1OTc1MjkwLDIxMzYxMDI0ODAsMjAxNTYwNjUxNiw5MTIwNjMxOCwyMDk4MzE3ODk5LDIwMzQwNTUyNDAsMjA4NTQ5NTM2MSwyMDc4ODM3NDk5LDIwNzk5MzQ4MTIsMjA5ODAwNzEwMiwyMDQ3Mzk4MzYzLDIwNzU0MjI4ODMsMjAzMzI2NDk3NCwyMDIwNDQzNDIyLDE3MTQ0ODkxMSwyMDEyMjk2ODc1LDIxMTg2MDI4MDAsMjAzOTA0OTc3NCwxOTkyNjQ2NDM0LDE5ODY3NTU3MjIsMjE2MjEyNjAyOSwyMDUxNTkzMDI0LDY1Mjc5Mzc4NCwyMDcwOTQ0NjYwLDIwMjg5NTI4MjgsMjA2MjE0MTkwNywyMDA0NzM3ODQ0LDIwODk3NDQwMjcsMTk5NTA1NTAzOSwxOTY3NjMwMTMzLDIwMTkwMDExMDQsMjEwOTQwMzM4NywxOTQwMjA3ODMyLDIwMDk3MTU3MDYsMjEzOTMzNzk0MCwyMDc3OTUwODQ0LDIxMzUxMjY0MzYsMjA5MzY1MjM5MiwyMTQzNTAwODA0LDE5NjQ1NjcwNjYsMTk3NjE5NzY1OCwyMDQ5MjM0OTIyLDI0Nzk3Nzc1ODEsMTk3MjIyMzYzNSwyNzU0NDQ3MzksMjE3Njc5NDMxNywyMDYzNTkxNTYzLDIyMjEyNjgzMzAsMjAzNTYxMTM4OCwyMDEwNjA1Mjg1LDE5NzY0ODMwMjUsMTEwMjAzODAsMjE0MjQyNzE3OCwxNzAzNjY5ODQxLDE1NDk2OTYxLDIxNDIxMDY5NTAsMjA1OTg3ODY3MiwyMDYyNzA0ODM1LDI3NDE4MzQ4MDMsMjA3MzIwMzUzNywyMDY0ODg5MjQ3LDIwNDYzMjQyMjMsMTk4NjIxNDY3OCwzNjM0NTAxNCwyMTgyMTY2ODY3XSwiQUEiOlt7IkF1TiI6ImxpIGRhIHh1In0seyJBdU4iOiJ3dSBoZSJ9LHsiQXVOIjoic2hhbmNhbmcgbGkifV0sIkYiOlt7IkZOIjoiaW5kdXN0cmlhbCBpbnRlcm5ldCJ9LHsiRk4iOiJzZXJ2aWNlIG9yaWVudGVkIGFyY2hpdGVjdHVyZSJ9LHsiRk4iOiJuZWFyIGZpZWxkIGNvbW11bmljYXRpb24ifSx7IkZOIjoiZW50ZXJwcmlzZSBzeXN0ZW0ifSx7IkZOIjoiYmlnIGRhdGEifSx7IkZOIjoiaW50ZXJuZXQgb2YgdGhpbmdzIn0seyJGTiI6IndpcmVsZXNzIn0seyJGTiI6IndpcmVsZXNzIHNlbnNvciBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIHNlY3VyaXR5In0seyJGTiI6ImVuZ2luZWVyaW5nIn1dLCJFIjoie1wiRE5cIjpcIkludGVybmV0IG9mIFRoaW5ncyBpbiBJbmR1c3RyaWVzOiBBIFN1cnZleVwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjk3LFwiSW52ZXJ0ZWRJbmRleFwiOntcIkludGVybmV0XCI6WzBdLFwib2ZcIjpbMSwyMSwzNCw1Myw2Myw4Ml0sXCJUaGluZ3NcIjpbMl0sXCIoSW9UKVwiOlszXSxcImhhc1wiOls0XSxcInByb3ZpZGVkXCI6WzVdLFwiYVwiOls2XSxcInByb21pc2luZ1wiOls3XSxcIm9wcG9ydHVuaXR5XCI6WzhdLFwidG9cIjpbOSw0OV0sXCJidWlsZFwiOlsxMF0sXCJwb3dlcmZ1bFwiOlsxMV0sXCJpbmR1c3RyaWFsXCI6WzEyLDM1XSxcInN5c3RlbXNcIjpbMTNdLFwiYW5kXCI6WzE0LDI1LDI4LDQxLDczLDc3XSxcImFwcGxpY2F0aW9uc1wiOlsxNSwzNyw3MF0sXCJieVwiOlsxNl0sXCJsZXZlcmFnaW5nXCI6WzE3XSxcInRoZVwiOlsxOCw1MSw2MCw5MF0sXCJncm93aW5nXCI6WzE5XSxcInViaXF1aXR5XCI6WzIwXSxcInJhZGlvLWZyZXF1ZW5jeVwiOlsyMl0sXCJpZGVudGlmaWNhdGlvblwiOlsyM10sXCIoUkZJRCksXCI6WzI0XSxcIndpcmVsZXNzLFwiOlsyNl0sXCJtb2JpbGUsXCI6WzI3XSxcInNlbnNvclwiOlsyOV0sXCJkZXZpY2VzLlwiOlszMF0sXCJBXCI6WzMxLDc5XSxcIndpZGVcIjpbMzJdLFwicmFuZ2VcIjpbMzNdLFwiSW9UXCI6WzM2LDU0LDY5LDkzXSxcImhhdmVcIjpbMzhdLFwiYmVlblwiOlszOV0sXCJkZXZlbG9wZWRcIjpbNDBdLFwiZGVwbG95ZWRcIjpbNDJdLFwiaW5cIjpbNDMsNTUsNzEsOTRdLFwicmVjZW50XCI6WzQ0XSxcInllYXJzLlwiOls0NV0sXCJJblwiOls0Nl0sXCJhblwiOls0N10sXCJlZmZvcnRcIjpbNDhdLFwidW5kZXJzdGFuZFwiOls1MF0sXCJkZXZlbG9wbWVudFwiOls1Ml0sXCJpbmR1c3RyaWVzLFwiOls1Niw3Ml0sXCJ0aGlzXCI6WzU3LDgzXSxcInBhcGVyXCI6WzU4LDg1XSxcInJldmlld3NcIjpbNTldLFwiY3VycmVudFwiOls2MSw5MV0sXCJyZXNlYXJjaFwiOls2Miw3NV0sXCJJb1QsXCI6WzY0XSxcImtleVwiOls2NV0sXCJlbmFibGluZ1wiOls2Nl0sXCJ0ZWNobm9sb2dpZXMsXCI6WzY3XSxcIm1ham9yXCI6WzY4XSxcImlkZW50aWZpZXNcIjpbNzRdLFwidHJlbmRzXCI6Wzc2XSxcImNoYWxsZW5nZXMuXCI6Wzc4XSxcIm1haW5cIjpbODBdLFwiY29udHJpYnV0aW9uXCI6WzgxXSxcInJldmlld1wiOls4NF0sXCJpc1wiOls4Nl0sXCJ0aGF0XCI6Wzg3XSxcIml0XCI6Wzg4XSxcInN1bW1hcml6ZXNcIjpbODldLFwic3RhdGUtb2YtdGhlLWFydFwiOls5Ml0sXCJpbmR1c3RyaWVzXCI6Wzk1XSxcInN5c3RlbWF0aWNhbGx5LlwiOls5Nl19fSxcIlNcIjpbe1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2llZWV4cGxvcmUuaWVlZS5vcmcvZG9jdW1lbnQvNjcxNDQ5Ni9cIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2R4LmRvaS5vcmcvMTAuMTEwOS9USUkuMjAxNC4yMzAwNzUzXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLm9yZy8xMC4xMTA5L1RJSS4yMDE0LjIzMDA3NTNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL3RpaS90aWkxMC5odG1sI1h1SEwxNFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3d3dy5pbmZvbmEucGwvcmVzb3VyY2UvYndtZXRhMS5lbGVtZW50LmllZWUtYXJ0LTAwMDAwNjcxNDQ5NlwifV0sXCJWRk5cIjpcIklFRUUgVHJhbnNhY3Rpb25zIG9uIEluZHVzdHJpYWwgSW5mb3JtYXRpY3NcIixcIlZcIjoxMCxcIklcIjo0LFwiRlBcIjoyMjMzLFwiTFBcIjoyMjQzLFwiRE9JXCI6XCIxMC4xMTA5L1RJSS4yMDE0LjIzMDA3NTNcIixcIlBSXCI6WzIxMDUxMDM3NzcsMjExMTYxOTYyNiwyMTE5MDQ2NjQyLDIxMzQyOTUwNTMsMjA1ODQwMTIxMiwyMTM5NTMxODUyLDIwNjg4NDkyNzcsMjAzNzc1OTQxNywxOTcyMDEyMTQ3LDIxNjU4ODc1NzIsMTk2MzQ4OTkwOCwxOTc5NTE5NDYyLDIwMTU2MDY1MTYsMTc1NTIyNzA2MywyMDQxNzg1NDE5LDIxMjk4NDA3OTYsMTk0MzU3OTk3MywyMDAzNTQ0Mjk1LDE5NjY4MzY1OTUsMjAyOTYwODczOCwyMTA1MTAzNzc3LDIxMTE2MTk2MjYsMjExOTA0NjY0MiwyMTM0Mjk1MDUzLDIwNTg0MDEyMTIsMjEzOTUzMTg1MiwyMDY4ODQ5Mjc3LDIwMzc3NTk0MTcsMTk3MjAxMjE0NywyMTY1ODg3NTcyLDE5NjM0ODk5MDgsMTk3OTUxOTQ2MiwyMDE1NjA2NTE2LDE3NTUyMjcwNjMsMjA0MTc4NTQxOSwyMTI5ODQwNzk2LDE5NDM1Nzk5NzMsMjAwMzU0NDI5NSwxOTY2ODM2NTk1LDIwMjk2MDg3MzhdLFwiQU5GXCI6W3tcIkZOXCI6XCJMaSBEYVwiLFwiTE5cIjpcIlh1XCIsXCJTXCI6MX0se1wiRk5cIjpcIld1XCIsXCJMTlwiOlwiSGVcIixcIlNcIjoyfSx7XCJGTlwiOlwiU2hhbmNhbmdcIixcIkxOXCI6XCJMaVwiLFwiU1wiOjN9XSxcIkJWXCI6XCJJRUVFIFRyYW5zYWN0aW9ucyBvbiBJbmR1c3RyaWFsIEluZm9ybWF0aWNzXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIklFRUVcIn0ifSx7ImxvZ3Byb2IiOi0xNi4zMTcsImtlc0VudGl0eUlkIjoxNTI1MjM0LCJJZCI6MTk3OTUxOTQ2MiwiVGkiOiJzbWFydCBvYmplY3RzIGFzIGJ1aWxkaW5nIGJsb2NrcyBmb3IgdGhlIGludGVybmV0IG9mIHRoaW5ncyIsIlkiOjIwMTAsIkQiOiIyMDEwLTAxLTAxIiwiUklkIjpbMjEzODcyNzAxNywyMTMxNTA4NjgzLDIxMTY3NzY4MzgsMTUyODE5MjcyMCwyMTIyNTI4OTMzLDIwOTYzODA2MzMsMTk4MjMxMDAxOSwxNTQ0NjEyOTYyLDE1MjA1Mjg3MjIsMjE0NDY2MDQ1NywyMDcyNjkyMDU2XSwiQUEiOlt7IkF1TiI6ImdlcmQga29ydHVlbSJ9LHsiQXVOIjoiZmFoaW0ga2F3c2FyIn0seyJBdU4iOiJkYW5pZWwgZml0dG9uIn0seyJBdU4iOiJ2YXN1Z2hpIHN1bmRyYW1vb3J0aHkifV0sIkYiOlt7IkZOIjoic21hcnQgb2JqZWN0cyJ9LHsiRk4iOiJpbnRlbGxpZ2VudCBzZW5zb3IifSx7IkZOIjoiaW50ZXJhY3Rpdml0eSJ9LHsiRk4iOiJhYnN0cmFjdGlvbiJ9LHsiRk4iOiJoaWVyYXJjaHkifSx7IkZOIjoidWJpcXVpdG91cyBjb21wdXRpbmcifSx7IkZOIjoiZGVzaWduIG1ldGhvZHMifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6IndvcmxkIHdpZGUgd2ViIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlNtYXJ0IG9iamVjdHMgYXMgYnVpbGRpbmcgYmxvY2tzIGZvciB0aGUgSW50ZXJuZXQgb2YgdGhpbmdzXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6OTUsXCJJbnZlcnRlZEluZGV4XCI6e1wiVGhlXCI6WzBdLFwiY29tYmluYXRpb25cIjpbMV0sXCJvZlwiOlsyLDQxLDY0LDY5XSxcInRoZVwiOlszLDM5LDU5LDg3XSxcIkludGVybmV0XCI6WzQsNDBdLFwiYW5kXCI6WzUsMTQsMjgsNDMsNTMsNzIsODAsODRdLFwiZW1lcmdpbmdcIjpbNl0sXCJ0ZWNobm9sb2dpZXNcIjpbN10sXCJzdWNoXCI6WzhdLFwiYXNcIjpbOV0sXCJuZWFyZmllbGRcIjpbMTBdLFwiY29tbXVuaWNhdGlvbnMsXCI6WzExXSxcInJlYWwtdGltZVwiOlsxMl0sXCJsb2NhbGl6YXRpb24sXCI6WzEzXSxcImVtYmVkZGVkXCI6WzE1XSxcInNlbnNvcnNcIjpbMTZdLFwibGV0c1wiOlsxN10sXCJ1c1wiOlsxOF0sXCJ0cmFuc2Zvcm1cIjpbMTldLFwiZXZlcnlkYXlcIjpbMjBdLFwib2JqZWN0c1wiOlsyMSwyNCwzNCw4M10sXCJpbnRvXCI6WzIyXSxcInNtYXJ0XCI6WzIzLDU3LDgyXSxcInRoYXRcIjpbMjVdLFwiY2FuXCI6WzI2XSxcInVuZGVyc3RhbmRcIjpbMjddLFwicmVhY3RcIjpbMjldLFwidG9cIjpbMzBdLFwidGhlaXJcIjpbMzFdLFwiZW52aXJvbm1lbnQuXCI6WzMyXSxcIlN1Y2hcIjpbMzNdLFwiYXJlXCI6WzM1XSxcImJ1aWxkaW5nXCI6WzM2XSxcImJsb2Nrc1wiOlszN10sXCJmb3JcIjpbMzgsNTZdLFwiVGhpbmdzXCI6WzQyXSxcImVuYWJsZVwiOls0NF0sXCJub3ZlbFwiOls0NV0sXCJjb21wdXRpbmdcIjpbNDZdLFwiYXBwbGljYXRpb25zLlwiOls0N10sXCJBc1wiOls0OF0sXCJhXCI6WzQ5LDYyXSxcInN0ZXBcIjpbNTBdLFwidG93YXJkXCI6WzUxXSxcImRlc2lnblwiOls1Ml0sXCJhcmNoaXRlY3R1cmFsXCI6WzU0LDg5XSxcInByaW5jaXBsZXNcIjpbNTVdLFwib2JqZWN0cyxcIjpbNThdLFwiYXV0aG9yc1wiOls2MF0sXCJpbnRyb2R1Y2VcIjpbNjFdLFwiaGllcmFyY2h5XCI6WzYzXSxcImFyY2hpdGVjdHVyZXNcIjpbNjVdLFwid2l0aFwiOls2Nl0sXCJpbmNyZWFzaW5nXCI6WzY3XSxcImxldmVsc1wiOls2OF0sXCJyZWFsLXdvcmxkXCI6WzcwXSxcImF3YXJlbmVzc1wiOls3MV0sXCJpbnRlcmFjdGl2aXR5LlwiOls3M10sXCJJblwiOls3NF0sXCJwYXJ0aWN1bGFyLFwiOls3NV0sXCJ0aGV5XCI6Wzc2XSxcImRlc2NyaWJlXCI6Wzc3XSxcImFjdGl2aXR5LSxcIjpbNzhdLFwicG9saWN5LSxcIjpbNzldLFwicHJvY2Vzcy1hd2FyZVwiOls4MV0sXCJkZW1vbnN0cmF0ZVwiOls4NV0sXCJob3dcIjpbODZdLFwicmVzcGVjdGl2ZVwiOls4OF0sXCJhYnN0cmFjdGlvbnNcIjpbOTBdLFwic3VwcG9ydFwiOls5MV0sXCJpbmNyZWFzaW5nbHlcIjpbOTJdLFwiY29tcGxleFwiOls5M10sXCJhcHBsaWNhdGlvbi5cIjpbOTRdfX0sXCJTXCI6W3tcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9pZWVleHBsb3JlLmllZWUub3JnL3hwbC9hYnN0cmFjdEtleXdvcmRzLmpzcD9yZWxvYWQ9dHJ1ZSZhcm51bWJlcj01MzQyMzk5XCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jbG9rLnVjbGFuLmFjLnVrLzU0MDEvMy81NDAxX0ZpdHRvbi5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3VzaXIuc2FsZm9yZC5hYy51ay8yNzM1L1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC81MzQyMzk5L1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vb3JvLm9wZW4uYWMudWsvMzE2MzEvXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LmNvbXB1dGVyLm9yZy9jc2RsL21hZ3MvaWMvMjAxMC8wMS9taWMyMDEwMDEwMDQ0Lmh0bWxcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2Nsb2sudWNsYW4uYWMudWsvNTQwMS9cIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2R4LmRvaS5vcmcvMTAuMTEwOS9NSUMuMjAwOS4xNDNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3lhZGRhLmljbS5lZHUucGwveWFkZGEvZWxlbWVudC9id21ldGExLmVsZW1lbnQuaWVlZS0wMDAwMDUzNDIzOTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2ludGVybmV0L2ludGVybmV0MTQuaHRtbCNLb3J0dWVtS1NGMTBcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RvaS5pZWVlY29tcHV0ZXJzb2NpZXR5Lm9yZy8xMC4xMTA5L01JQy4yMDA5LjE0M1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTE3MjY1NjVcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2VwcmludHMubGFuY3MuYWMudWsvNTcyNjAvXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLm9yZy8xMC4xMTA5L01JQy4yMDA5LjE0M1wifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MTcyNjU1OC4xNzI2NTY1XCJ9XSxcIlZGTlwiOlwiSUVFRSBJbnRlcm5ldCBDb21wdXRpbmdcIixcIlZcIjoxNCxcIklcIjoxLFwiRlBcIjo0NCxcIkxQXCI6NTEsXCJET0lcIjpcIjEwLjExMDkvTUlDLjIwMDkuMTQzXCIsXCJQUlwiOlsyMTA1MTAzNzc3LDIxMTE2MTk2MjYsMTk3Mzc5NDA0MSwyMTE5MDQ2NjQyLDIwNjg4NDkyNzcsMjAzODE5NDIyMCwyMTI4MDI2MDIzLDE3NTUyMjcwNjMsMTk3MjAxMjE0NywyMTIzNzcwMTk4LDIwNTg0MDEyMTIsMjYwMjk1NjYzMCwyMTM2MTAyNDgwLDE5Njc1NjExOTQsMjExNDYzMTg1OCwyMTI0MDMzOTIwLDIwMjY4OTI0NTksMjUyMTQyNTM2MSwyMTUyNDQ1MTc1LDE4OTc0NTkwMzEsMjEwNTEwMzc3NywyMTExNjE5NjI2LDE5NzM3OTQwNDEsMjExOTA0NjY0MiwyMDY4ODQ5Mjc3LDIwMzgxOTQyMjAsMjEyODAyNjAyMywxNzU1MjI3MDYzLDE5NzIwMTIxNDcsMjEyMzc3MDE5OCwyMDU4NDAxMjEyLDI2MDI5NTY2MzAsMjEzNjEwMjQ4MCwxOTY3NTYxMTk0LDIxMTQ2MzE4NTgsMjEyNDAzMzkyMCwyMDI2ODkyNDU5LDI1MjE0MjUzNjEsMjE1MjQ0NTE3NSwxODk3NDU5MDMxXSxcIkFORlwiOlt7XCJGTlwiOlwiR2VyZFwiLFwiTE5cIjpcIktvcnR1ZW1cIixcIlNcIjoxfSx7XCJGTlwiOlwiRmFoaW1cIixcIkxOXCI6XCJLYXdzYXJcIixcIlNcIjoyfSx7XCJGTlwiOlwiRGFuaWVsXCIsXCJMTlwiOlwiRml0dG9uXCIsXCJTXCI6M30se1wiRk5cIjpcIlZhc3VnaGlcIixcIkxOXCI6XCJTdW5kcmFtb29ydGh5XCIsXCJTXCI6NH1dLFwiQlZcIjpcIklFRUUgSW50ZXJuZXQgQ29tcHV0aW5nXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIklFRUVcIn0ifSx7ImxvZ3Byb2IiOi0xNi4zMjUsImtlc0VudGl0eUlkIjoxNTM3NTMwLCJJZCI6MTQ5ODU4NTM3NCwiVGkiOiJob3cgdG8gb3duIHRoZSBpbnRlcm5ldCBpbiB5b3VyIHNwYXJlIHRpbWUiLCJZIjoyMDAyLCJEIjoiMjAwMi0wOC0wNSIsIlJJZCI6WzIwMzgxOTU4NzQsMjExNDU4MTkyOSwyMTQxNDA1MzAxLDIxNjQwMzMyNDgsODY5NDc4OCwyMTAzMjI4OTM5LDEyNzQ1MDFdLCJBQSI6W3siQXVOIjoic3R1YXJ0IHN0YW5pZm9yZCJ9LHsiQXVOIjoidmVybiBwYXhzb24ifSx7IkF1TiI6Im5pY2hvbGFzIHdlYXZlciJ9XSwiRiI6W3siRk4iOiJpbnRlcm5ldCBob3N0aW5nIHNlcnZpY2UifSx7IkZOIjoiY29tcHV0ZXIgd29ybSJ9LHsiRk4iOiJpbmZvcm1hdGlvbiBzZW5zaXRpdml0eSJ9LHsiRk4iOiJzcGFyZSBwYXJ0In0seyJGTiI6ImRlbmlhbCBvZiBzZXJ2aWNlIGF0dGFjayJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoiaW50ZXJuZXQgcHJpdmFjeSJ9LHsiRk4iOiJjb21wdXRlciBzZWN1cml0eSJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkhvdyB0byBPd24gdGhlIEludGVybmV0IGluIFlvdXIgU3BhcmUgVGltZVwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE0NSxcIkludmVydGVkSW5kZXhcIjp7XCJUaGVcIjpbMF0sXCJhYmlsaXR5XCI6WzFdLFwib2ZcIjpbMiw4LDExLDIyLDM4LDQ5LDU3LDY4LDcxLDg0LDg3LDEzN10sXCJhdHRhY2tlcnNcIjpbM10sXCJ0b1wiOls0LDE4LDM0LDQzXSxcInJhcGlkbHlcIjpbNV0sXCJnYWluXCI6WzZdLFwiY29udHJvbFwiOls3XSxcInZhc3RcIjpbOV0sXCJudW1iZXJzXCI6WzEwXSxcIkludGVybmV0XCI6WzEyXSxcImhvc3RzXCI6WzEzLDI4XSxcInBvc2VzXCI6WzE0XSxcImFuXCI6WzE1LDY2XSxcImltbWVuc2VcIjpbMTZdLFwicmlza1wiOlsxN10sXCJ0aGVcIjpbMTksMjMsNTgsNjksNzIsODVdLFwib3ZlcmFsbFwiOlsyMF0sXCJzZWN1cml0eVwiOlsyMV0sXCJJbnRlcm5ldC5cIjpbMjRdLFwiT25jZVwiOlsyNV0sXCJzdWJ2ZXJ0ZWQsXCI6WzI2XSxcInRoZXNlXCI6WzI3XSxcImNhblwiOlsyOV0sXCJub3RcIjpbMzBdLFwib25seVwiOlszMV0sXCJiZVwiOlszMl0sXCJ1c2VkXCI6WzMzXSxcImxhdW5jaFwiOlszNV0sXCJtYXNzaXZlXCI6WzM2XSxcImRlbmlhbFwiOlszN10sXCJzZXJ2aWNlXCI6WzM5XSxcImZsb29kcyxcIjpbNDBdLFwiYnV0XCI6WzQxXSxcImFsc29cIjpbNDJdLFwic3RlYWxcIjpbNDRdLFwib3JcIjpbNDVdLFwiY29ycnVwdFwiOls0Nl0sXCJncmVhdFwiOls0N10sXCJxdWFudGl0aWVzXCI6WzQ4XSxcInNlbnNpdGl2ZVwiOls1MF0sXCJpbmZvcm1hdGlvbixcIjpbNTFdLFwiYW5kXCI6WzUyLDU0LDEwNywxMTQsMTM1XSxcImNvbmZ1c2VcIjpbNTNdLFwiZGlzcnVwdFwiOls1NV0sXCJ1c2VcIjpbNTYsMTM2XSxcIm5ldHdvcmtcIjpbNTldLFwiaW5cIjpbNjAsOTFdLFwibW9yZVwiOls2MV0sXCJzdWJ0bGVcIjpbNjJdLFwid2F5cy5cIjpbNjNdLFwiV2VcIjpbNjQsNzQsOTRdLFwicHJlc2VudFwiOls2NV0sXCJhbmFseXNpc1wiOls2N10sXCJtYWduaXR1ZGVcIjpbNzBdLFwidGhyZWF0LlwiOls3M10sXCJiZWdpblwiOls3NV0sXCJ3aXRoXCI6Wzc2XSxcImFcIjpbNzcsMTI2LDE0Ml0sXCJtYXRoZW1hdGljYWxcIjpbNzhdLFwibW9kZWxcIjpbNzldLFwiZGVyaXZlZFwiOls4MF0sXCJmcm9tXCI6WzgxXSxcImVtcGlyaWNhbFwiOls4Ml0sXCJkYXRhXCI6WzgzXSxcInNwcmVhZFwiOls4Nl0sXCJDb2RlXCI6Wzg4LDEwNF0sXCJSZWRcIjpbODksMTA1XSxcIklcIjpbOTBdLFwiSnVseSxcIjpbOTJdLFwiMjAwMS5cIjpbOTNdLFwiZGlzY3Vzc1wiOls5NV0sXCJ0ZWNobmlxdWVzXCI6Wzk2XSxcInN1YnNlcXVlbnRseVwiOls5N10sXCJlbXBsb3llZFwiOls5OF0sXCJmb3JcIjpbOTldLFwiYWNoaWV2aW5nXCI6WzEwMF0sXCJncmVhdGVyXCI6WzEwMV0sXCJ2aXJ1bGVuY2VcIjpbMTAyXSxcImJ5XCI6WzEwM10sXCJJSVwiOlsxMDZdLFwiTmltZGEuXCI6WzEwOF0sXCJJblwiOlsxMDldLFwidGhpc1wiOlsxMTBdLFwiY29udGV4dCxcIjpbMTExXSxcIndlXCI6WzExMl0sXCJkZXZlbG9wXCI6WzExM10sXCJldmFsdWF0ZVwiOlsxMTVdLFwic2V2ZXJhbFwiOlsxMTZdLFwibmV3LFwiOlsxMTddLFwiaGlnaGx5XCI6WzExOF0sXCJ2aXJ1bGVudFwiOlsxMTldLFwicG9zc2libGVcIjpbMTIwXSxcInRlY2huaXF1ZXM6XCI6WzEyMV0sXCJoaXQtbGlzdFwiOlsxMjJdLFwic2Nhbm5pbmdcIjpbMTIzLDEzMF0sXCIod2hpY2hcIjpbMTI0LDEzMSwxNDBdLFwiY3JlYXRlc1wiOlsxMjUsMTQxXSxcIldhcmhvbFwiOlsxMjddLFwid29ybSksXCI6WzEyOF0sXCJwZXJtdXRhdGlvblwiOlsxMjldLFwiZW5hYmxlc1wiOlsxMzJdLFwic2VsZi1jb29yZGluYXRpbmdcIjpbMTMzXSxcInNjYW5uaW5nKSxcIjpbMTM0XSxcIkludGVybmV0LXNpemVkXCI6WzEzOF0sXCJoaXQtbGlzdHNcIjpbMTM5XSxcImZsYXNoXCI6WzE0M10sXCJ3b3JtKS5cIjpbMTQ0XX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmRhdmlkc2Fsb21vbi5uYW1lL0NvbXBTZWMvYXV4aWxpYXJ5L2NkYy53ZWIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuaWNpci5vcmcvdmVybi9wYXBlcnMvY2RjLXVzZW5peC1zZWMwMi9jZGMud2ViLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmlzbWxhYi51c2YuZWR1L2Rjb20vQ2gxM18wd25fc3BhcmV0aW1lLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LXVzZXJzLmNzLnVtbi5lZHUvfnpoYWkvY291cnNlcy81OTgwL3JlYWRpbmdzL2xlYzMvY2RjLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LnV0ZGFsbGFzLmVkdS9+a3hzMDI4MTAwL2NvdXJzZXMvUGFwZXJzL0hvd3RvT3duSW50ZXJuZXRpbllvdXJTcGFyZVRpbWUucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY211LmVkdS9+ZHJhZ25ldC8xNTc0NC9wYXBlcnMvcGF4c29uLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lmljc2kuYmVya2VsZXkuZWR1L3B1YnMvbmV0d29ya2luZy9jZGMtd2ViLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lml0LnV1LnNlL2VkdS9jb3Vyc2UvaG9tZXBhZ2UvZGF0YWtvbTIvdnQxMS9zY2hlZHVsZS8wd24ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cxLmljc2kuYmVya2VsZXkuZWR1L35ud2VhdmVyL3BhcGVycy8yMDAyLTB3bi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3BhZ2VzLmNzLndpc2MuZWR1L35ha2VsbGEvQ1M3NDAvUzExLzc0MC1QYXBlcnMvU1BXMDIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93ZW5rZS5ndGlzYy5nYXRlY2guZWR1L3dvcm1zLXJlYWRpbmdzL1N0YW5pZm9yZF9VU0VOSVgwMi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3VzZXJzLmVjZS5jbXUuZWR1L35hZHJpYW4vNzMxLXNwMDQvcmVhZGluZ3Mvc3B3LXdhcmhvbC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL21hdWlnYXRld2F5LmNvbS9+c3VyZmVyL2xpYnJhcnkvaG93X3RvX293bl90aGVfaW50ZXJuZXRfaW5feW91cl9zcGFyZV90aW1lLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vanBrYy5mdWRhbi5lZHUuY24vcGljdHVyZS9hcnRpY2xlLzEwMS9jZS81Yi81NjNkYzQ2ZTRkNmI5YjE1ZDc5NDI4NDc3MjY0LzQ2ZDcxMGZkLTgwZjItNDJmMy04ZGY2LTkyMmIwMzA1N2Y0OS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2NvdXJzZXMuaXNpLmpodS5lZHUvbmV0c2VjL3BhcGVycy9ob3d0bzB3bi5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5qaHUuZWR1L35mYWJpYW4vY291cnNlcy9DUzYwMC40MjQvY291cnNlX3BhcGVycy9zdGFuaWZvcmQwMmhvdy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5ydXRnZXJzLmVkdS9+cm1hcnRpbi90ZWFjaGluZy9mYWxsMDQvY3M1NTIvcmVhZGluZ3Mvc3RhbjAyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNjLmdhdGVjaC5lZHUvY2xhc3Nlcy9BWTIwMDcvY3M3MjYwX3NwcmluZy9wYXBlcnMvY2RjLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vZm1nLXd3dy5jcy51Y2xhLmVkdS9jbGFzc2VzLzIzOV8xLnNwcmluZzAzL3BhcGVycy9jZGMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jcy51bmMuZWR1L35mYWJpYW4vY291cnNlX3BhcGVycy9zdGFuaWZvcmQwMmhvdy5wZGZcIn1dLFwiVkZOXCI6XCJVU0VOSVggU2VjdXJpdHkgU3ltcG9zaXVtXCIsXCJWU05cIjpcIlNFQ1VSSVRZXCIsXCJGUFwiOjE0OSxcIkxQXCI6MTY3LFwiQ0NcIjp7XCIxMjc0NTAxXCI6W1wiWyBTcDg5ICwgRVI4OV0sIGJ1dCB0aGUgc2V2ZXJpdHkgb2YgdGhlaXIgdGhyZWF0IGhhcyByYXBpZGx5IGdyb3duIHdpdGggKGkpIHRoZSBpbmNyZWFzaW5nIGRlZ3JlZSB0byB3aGljaCB0aGUgSW50ZXJuZXQgaGFzIGJlY29tZSBwYXJ0IG9mIGEgbmF0aW9u4oCZcyBjcml0aWNhbCBpbmZyYXN0cnVjdHVyZSwgYW5kIChpaSkgdGhlIHJlY2VudCwgd2lkZWx5IHB1YmxpY2l6ZWQgaW50cm9kdWN0aW9uIG9mIHZlcnkgbGFyZ2UsIHZlcnkgcmFwaWRseSBzcHJlYWRpbmcgSW50ZXJuZXQgd29ybXMsIHN1Y2ggdGhhdCB0aGlzIHRlY2huaXF1ZSBpcyBsaWtlbHkgdG8gYmUgcGFydGljdWxhcmx5IGN1cnJlbnQgaW4gdGhlIG1pbmRzIG9mIGF0dGFja2Vycy5cXHUwMDFiQXMgd2VsbCBpbGx1c3RyYXRlZCBieSB0aGUgTmltZGEgd29ybS92aXJ1cyAoYW5kLCBpbmRlZWQsIHRoZSBvcmlnaW5hbCBJbnRlcm5ldCBXb3JtIFsgU3A4OSAsIEVSODldKSwgbWFsZXZvbGVudCBjb2RlIGlzIG5vdCByZXN0cmljdGVkIHRvIGEgc2luZ2xlIHRlY2huaXF1ZS5cXHUwMDFiRW1haWwgd29ybXMgaGF2ZSB1c2VkIHRoaXMgdGFjdGljIHNpbmNlIHRoZWlyIGluY2VwdGlvbiwgYXMgdGhleSBoYXJ2ZXN0IGFkZHJlc3NlcyBmcm9tIHRoZWlyIHZpY3RpbSBpbiBvcmRlciB0byBmaW5kIG5ldyBwb3RlbnRpYWwgdGFyZ2V0cywgYXMgZGlkIHRoZSBNb3JyaXMgd29ybSAobmVjZXNzYXJ5IGJlY2F1c2Ugb2YgdGhlIHZlcnkgc3BhcnNlIGFkZHJlc3Mgc3BhY2Ugd2hlbiBpdCB3YXMgcmVsZWFzZWQpIFsgU3A4OSAsIEVSODldLlwiXSxcIjg2OTQ3ODhcIjpbXCJTaW1pbGFybHksIHByZXZpb3VzbHkgc2VlbiBERE9TIHRvb2xzIHN1Y2ggYXMgU3RhY2hlbGRyYWh0IFtEaTk5XSBoYXZlIGluY2x1ZGVkIGJvdGggZW5jcnlwdGVkIGNvbW11bmljYXRpb24gYW5kIHVwZGF0ZSBtZWNoYW5pc21zIGZvciBkaXJlY3RseSBjb250cm9sbGluZyB0aGUgem9tYmllcy5cIl0sXCIyMDM4MTk1ODc0XCI6W1wiVGhlIHByb3BhZ2F0aW9uIG9mIGNvbnRhZ2lvbiB0aHJvdWdoIHN1Y2ggbmV0d29ya3MgaGFzIHJlY2VudGx5IGJlZW4gc3R1ZGllZCBbIFBWMDEgXS5cIl0sXCIyMTAzMjI4OTM5XCI6W1wiW1NwODksICBFUjg5IF0sIGJ1dCB0aGUgc2V2ZXJpdHkgb2YgdGhlaXIgdGhyZWF0IGhhcyByYXBpZGx5IGdyb3duIHdpdGggKGkpIHRoZSBpbmNyZWFzaW5nIGRlZ3JlZSB0byB3aGljaCB0aGUgSW50ZXJuZXQgaGFzIGJlY29tZSBwYXJ0IG9mIGEgbmF0aW9u4oCZcyBjcml0aWNhbCBpbmZyYXN0cnVjdHVyZSwgYW5kIChpaSkgdGhlIHJlY2VudCwgd2lkZWx5IHB1YmxpY2l6ZWQgaW50cm9kdWN0aW9uIG9mIHZlcnkgbGFyZ2UsIHZlcnkgcmFwaWRseSBzcHJlYWRpbmcgSW50ZXJuZXQgd29ybXMsIHN1Y2ggdGhhdCB0aGlzIHRlY2huaXF1ZSBpcyBsaWtlbHkgdG8gYmUgcGFydGljdWxhcmx5IGN1cnJlbnQgaW4gdGhlIG1pbmRzIG9mIGF0dGFja2Vycy5cXHUwMDFiQXMgd2VsbCBpbGx1c3RyYXRlZCBieSB0aGUgTmltZGEgd29ybS92aXJ1cyAoYW5kLCBpbmRlZWQsIHRoZSBvcmlnaW5hbCBJbnRlcm5ldCBXb3JtIFtTcDg5LCAgRVI4OSBdKSwgbWFsZXZvbGVudCBjb2RlIGlzIG5vdCByZXN0cmljdGVkIHRvIGEgc2luZ2xlIHRlY2huaXF1ZS5cXHUwMDFiRW1haWwgd29ybXMgaGF2ZSB1c2VkIHRoaXMgdGFjdGljIHNpbmNlIHRoZWlyIGluY2VwdGlvbiwgYXMgdGhleSBoYXJ2ZXN0IGFkZHJlc3NlcyBmcm9tIHRoZWlyIHZpY3RpbSBpbiBvcmRlciB0byBmaW5kIG5ldyBwb3RlbnRpYWwgdGFyZ2V0cywgYXMgZGlkIHRoZSBNb3JyaXMgd29ybSAobmVjZXNzYXJ5IGJlY2F1c2Ugb2YgdGhlIHZlcnkgc3BhcnNlIGFkZHJlc3Mgc3BhY2Ugd2hlbiBpdCB3YXMgcmVsZWFzZWQpIFtTcDg5LCAgRVI4OSBdLlwiXSxcIjIxNDE0MDUzMDFcIjpbXCI2IE9yLCBpZiB3ZSBtb2RlbCBUQ1Agc2xvdyBzdGFydCwgdGhlbiBhc3N1bWluZyBhbiBSVFQgb2YgMTAwIG1zZWMgKGhpZ2gpLCAxNTAwIGJ5dGUgc2VnbWVudHMsIGFuIGluaXRpYWwgd2luZG93IG9mIDEgc2VnbWVudCwgYW5kIHRoZSB1c2UgYnkgdGhlIHJlY2VpdmVyIG9mIGRlbGF5ZWQgYWNrbm93bGVkZ21lbnRzLCB0aGUgdHJhbnNmZXIgdGFrZXMgMi4zIHNlY29uZHMsIHVzaW5nIGVxdWF0aW9uICgxMCkgb2YgWyBDU0EwMCBdLlwiXSxcIjIxNjQwMzMyNDhcIjpbXCJVbmZvcnR1bmF0ZWx5LCBJbnRlcm5ldCBhcHBsaWNhdGlvbnMgc29tZXRpbWVzIGNhbiDigJxleHBsb2Rl4oCdIG9udG8gdGhlIHNjZW5lLCB2ZXJ5IHJhcGlkbHkgZ3Jvd2luZyBmcm9tIG5vIHVzZSB0byBjb21wcmlzaW5nIG1ham9yIHRyYWZmaWMgY29udHJpYnV0b3JzIFsgUGE5NCBdLlwiXX0sXCJQUlwiOlsyMDMxMDA2MzE1LDIwODM0NzcyMDYsMTk4MDA2NTc0MCwyMTM0MDA2NTk5LDIxMDMzMTUyMjIsMTk5NDM0MDU3NSwyMTI0NDg2MjExLDIxNTk5MTk0NzgsMjc0MzYzNDE0NywyMDIzOTU1NDAzLDE3ODE3NTgwMTUsMTc0NDIxMjIxMCwxNTk3MzA1NDQwLDIwMzkzOTA5MjYsMjE3NjA4NTgyMCwyMTcwNDgyMzk3LDE2NzQ4NzcxODYsMjA5MjA0MzI5NiwxNTMzMTg2NjY2LDIwMzM4MTEwODcsMjAzMTAwNjMxNSwyMDgzNDc3MjA2LDE5ODAwNjU3NDAsMjEzNDAwNjU5OSwyMTAzMzE1MjIyLDE5OTQzNDA1NzUsMjEyNDQ4NjIxMSwyMTU5OTE5NDc4LDI3NDM2MzQxNDcsMjAyMzk1NTQwMywxNzgxNzU4MDE1LDE3NDQyMTIyMTAsMTU5NzMwNTQ0MCwyMDM5MzkwOTI2LDIxNzYwODU4MjAsMjE3MDQ4MjM5NywxNjc0ODc3MTg2LDIwOTIwNDMyOTYsMTUzMzE4NjY2NiwyMDMzODExMDg3XSxcIkFORlwiOlt7XCJGTlwiOlwiU3R1YXJ0XCIsXCJMTlwiOlwiU3Rhbmlmb3JkXCIsXCJTXCI6MX0se1wiRk5cIjpcIlZlcm5cIixcIkxOXCI6XCJQYXhzb25cIixcIlNcIjoyfSx7XCJGTlwiOlwiTmljaG9sYXNcIixcIkxOXCI6XCJXZWF2ZXJcIixcIlNcIjozfV0sXCJCVlwiOlwiUHJvY2VlZGluZ3Mgb2YgdGhlIDExdGggVVNFTklYIFNlY3VyaXR5IFN5bXBvc2l1bVwiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJVU0VOSVggQXNzb2NpYXRpb25cIn0ifSx7ImxvZ3Byb2IiOi0xNi4zMzcsImtlc0VudGl0eUlkIjoxNTU2NTAyLCJJZCI6MTczMTk4MjM4NywiVGkiOiJpbnRlZ3JhdGVkIHNlcnZpY2VzIGluIHRoZSBpbnRlcm5ldCBhcmNoaXRlY3R1cmUgYW4gb3ZlcnZpZXciLCJZIjoxOTk0LCJEIjoiMTk5NC0wNi0wMSIsIlJJZCI6WzIwNzM0NDA0NjAsMjEwNDgyMDQ3MywyMTE2MTQyMzAzLDE5NzA2MjA5MzAsMjExNzY5NzAwNSwxNzkwNTQ0MzU0LDE5OTQ2MTY2MjUsMTc4NTQzNDI4OCw0MTkzODE3NywyMTc0MzU5NTQwLDE1MjgxMTg2NzEsMTA5OTgzNjc2XSwiQUEiOlt7IkF1TiI6InJvYmVydCBicmFkZW4ifSx7IkF1TiI6ImRhdmlkIGQgY2xhcmsifSx7IkF1TiI6InNjb3R0IHNoZW5rZXIifV0sIkYiOlt7IkZOIjoiYmFuZHdpZHRoIGJyb2tlciJ9LHsiRk4iOiJkaWZmZXJlbnRpYXRlZCBzZXJ2aWNlcyJ9LHsiRk4iOiJpbnRlcm5ldCB0cmFuc2l0In0seyJGTiI6ImludGVncmF0ZWQgc2VydmljZXMifSx7IkZOIjoidGVsZWNvbmZlcmVuY2UifSx7IkZOIjoiYXJjaGl0ZWN0dXJlIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiSW50ZWdyYXRlZCBTZXJ2aWNlcyBpbiB0aGUgSW50ZXJuZXQgQXJjaGl0ZWN0dXJlOiBhbiBPdmVydmlld1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjU2LFwiSW52ZXJ0ZWRJbmRleFwiOntcIlRoaXNcIjpbMCwzMF0sXCJtZW1vXCI6WzFdLFwiZGlzY3Vzc2VzXCI6WzJdLFwiYVwiOlszLDQzXSxcInByb3Bvc2VkXCI6WzRdLFwiZXh0ZW5zaW9uXCI6WzUsMzFdLFwidG9cIjpbNiwxMiwxNywzNF0sXCJ0aGVcIjpbNywyNCwzNl0sXCJJbnRlcm5ldFwiOls4XSxcImFyY2hpdGVjdHVyZVwiOls5XSxcImFuZFwiOlsxMCw1M10sXCJwcm90b2NvbHNcIjpbMTFdLFwicHJvdmlkZVwiOlsxM10sXCJpbnRlZ3JhdGVkXCI6WzE0XSxcInNlcnZpY2VzLFwiOlsxNV0sXCJpLmUuLFwiOlsxNl0sXCJzdXBwb3J0XCI6WzE4XSxcInJlYWwtXCI6WzE5XSxcInRpbWVcIjpbMjBdLFwiYXNcIjpbMjEsMjNdLFwid2VsbFwiOlsyMl0sXCJjdXJyZW50XCI6WzI1XSxcIm5vbi1yZWFsLXRpbWVcIjpbMjZdLFwic2VydmljZVwiOlsyNyw0MV0sXCJvZlwiOlsyOCw0NV0sXCJJUC5cIjpbMjldLFwiaXNcIjpbMzJdLFwibmVjZXNzYXJ5XCI6WzMzXSxcIm1lZXRcIjpbMzVdLFwiZ3Jvd2luZ1wiOlszN10sXCJuZWVkXCI6WzM4XSxcImZvclwiOlszOSw0Ml0sXCJyZWFsLXRpbWVcIjpbNDBdLFwidmFyaWV0eVwiOls0NF0sXCJuZXdcIjpbNDZdLFwiYXBwbGljYXRpb25zLFwiOls0N10sXCJpbmNsdWRpbmdcIjpbNDhdLFwidGVsZWNvbmZlcmVuY2luZyxcIjpbNDldLFwicmVtb3RlXCI6WzUwXSxcInNlbWluYXJzLFwiOls1MV0sXCJ0ZWxlc2NpZW5jZSxcIjpbNTJdLFwiZGlzdHJpYnV0ZWRcIjpbNTRdLFwic2ltdWxhdGlvbi5cIjpbNTVdfX0sXCJTXCI6W3tcIlR5XCI6MixcIlVcIjpcImh0dHBzOi8vd3d3LnJmYy1lZGl0b3Iub3JnL3JmYy9yZmMxNjMzLnR4dFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9pbmZvL3JmYzE2MzNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kc3BhY2UubWl0LmVkdS9oYW5kbGUvMTcyMS4xLzE1NDJcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD1SRkMxNjMzXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kc3BhY2UubWl0LmVkdS9iaXRzdHJlYW0vMTcyMS4xLzE1NDIvMS9pc2lhLnBkZlwifV0sXCJWRk5cIjpcIlJGQ1wiLFwiVlwiOjE2MzMsXCJGUFwiOjEsXCJMUFwiOjMzLFwiQ0NcIjp7XCI0MTkzODE3N1wiOltcIkFsdGhvdWdoIHRoZXJlIGFyZSBzdGlsbCBvcGVuIHJlc2VhcmNoIGlzc3VlcyBpbiBhZG1pc3Npb24gY29udHJvbCwgYSBmaXJzdCBjdXQgZXhpc3RzIFsgSkNTWjkyIF0uXFx1MDAxYkEgcmVjZW50IHByb3Bvc2FsLCB3aGljaCBpcyBsaWtlbHkgdG8gcHJvdmlkZSBiZXR0ZXIgbGluayB1dGlsaXphdGlvbiwgaXMgdG8gcHJvZ3JhbSB0aGUgcm91dGVyIHRvIG1lYXN1cmUgdGhlIGFjdHVhbCB1c2FnZSBieSBleGlzdGluZyBwYWNrZXQgZmxvd3MsIGFuZCB0byB1c2UgdGhpcyBtZWFzdXJlZCBpbmZvcm1hdGlvbiBhcyBhIGJhc2lzIG9mIGFkbWl0dGluZyBuZXcgZmxvd3MgWyBKQ1NaOTIgXS5cIl0sXCIxMDk5ODM2NzZcIjpbXCJTZWN0aW9uIDMgZGlzY3Vzc2VzIHJlYWwtdGltZSBzZXJ2aWNlIG1vZGVscyBbU0NaOTNhLCAgU0NaOTNiIF0uXFx1MDAxYldlIG5vdyBicmllZmx5IGRlc2NyaWJlIGEgcHJvcG9zYWwgZm9yIGEgY29yZSBzZXQgb2Ygc2VydmljZXMgZm9yIHRoZSBJbnRlcm5ldDsgdGhpcyBwcm9wb3NlZCBjb3JlIHNlcnZpY2UgbW9kZWwgaXMgbW9yZSBmdWxseSBkZXNjcmliZWQgaW4gW1NDWjkzYSwgIFNDWjkzYiBdLlwiXSxcIjE3ODU0MzQyODhcIjpbXCIodGhlIGxpdGVyYXR1cmUgaXMgbXVjaCB0b28gbGFyZ2UgdG8gbGlzdCBldmVuIGEgcmVwcmVzZW50YXRpdmUgc2FtcGxlIGhlcmU7IHNlZSB0aGUgcmVmZXJlbmNlcyBpbiBbQ1NaOTIsIEZsb3lkOTIsIEphY29ic29uOTEsIEpTQ1o5MywgIFBhcnRyaWRnZTkyICwgU0NaOTMsIFJTVlA5M2FdIGZvciBhIHBhcnRpYWwgbGlzdCkuXFx1MDAxYkluIG9yZGVyIHRvIHN0YXRlIGl0cyByZXNvdXJjZSByZXF1aXJlbWVudHMsIGFuIGFwcGxpY2F0aW9uIG11c3Qgc3BlY2lmeSB0aGUgZGVzaXJlZCBRb1MgdXNpbmcgYSBsaXN0IG9mIHBhcmFtZXRlcnMgdGhhdCBpcyBjYWxsZWQgYSBcXFwiZmxvd3NwZWNcXFwiIFsgUGFydHJpZGdlOTIgXS5cIl0sXCIxOTcwNjIwOTMwXCI6W1wiQSB0aGVvcmV0aWNhbCByZXN1bHQgYnkgUGFyZWtoIFsgUGFyZWtoOTIgXSBzaG93cyB0aGF0IGlmIHRoZSByb3V0ZXIgaW1wbGVtZW50cyBhIFdGUSBzY2hlZHVsaW5nIGRpc2NpcGxpbmUsIGFuZCBpZiB0aGUgbmF0dXJlIG9mIHRoZSB0cmFmZmljIHNvdXJjZSBjYW4gYmUgY2hhcmFjdGVyaXplZCAoZS5nLlwiXSxcIjE5OTQ2MTY2MjVcIjpbXCJTZWN0aW9uIDMgZGlzY3Vzc2VzIHJlYWwtdGltZSBzZXJ2aWNlIG1vZGVscyBbIFNDWjkzYSAsIFNDWjkzYl0uXFx1MDAxYldlIG5vdyBicmllZmx5IGRlc2NyaWJlIGEgcHJvcG9zYWwgZm9yIGEgY29yZSBzZXQgb2Ygc2VydmljZXMgZm9yIHRoZSBJbnRlcm5ldDsgdGhpcyBwcm9wb3NlZCBjb3JlIHNlcnZpY2UgbW9kZWwgaXMgbW9yZSBmdWxseSBkZXNjcmliZWQgaW4gWyBTQ1o5M2EgLCBTQ1o5M2JdLlwiXSxcIjIwNzM0NDA0NjBcIjpbXCJBbiBpZGVhbGl6ZWQgZmx1aWQgbW9kZWwgb2YgaW5zdGFudGFuZW91cyBsaW5rLXNoYXJpbmcgd2l0aCBwcm9wb3J0aW9uYWwgc2hhcmluZyBvZiBleGNlc3MgaXMgdGhlIGZsdWlkIHByb2Nlc3NvciBzaGFyaW5nIG1vZGVsIChpbnRyb2R1Y2VkIGluIFsgREtTODkgXSBhbmQgZnVydGhlciBleHBsb3JlZCBpbiBbUGFyZWtoOTJdIGFuZCBnZW5lcmFsaXplZCB0byB0aGUgaGllcmFyY2hpY2FsIGNhc2UpIHdoZXJlIGF0IGV2ZXJ5IGluc3RhbnRcIl0sXCIyMTA0ODIwNDczXCI6W1wiKHRoZSBsaXRlcmF0dXJlIGlzIG11Y2ggdG9vIGxhcmdlIHRvIGxpc3QgZXZlbiBhIHJlcHJlc2VudGF0aXZlIHNhbXBsZSBoZXJlOyBzZWUgdGhlIHJlZmVyZW5jZXMgaW4gWyBDU1o5MiAsIEZsb3lkOTIsIEphY29ic29uOTEsIEpTQ1o5MywgUGFydHJpZGdlOTIsIFNDWjkzLCBSU1ZQOTNhXSBmb3IgYSBwYXJ0aWFsIGxpc3QpLlxcdTAwMWJTZWN0aW9uIDQgZGlzY3Vzc2VzIHRyYWZmaWMgY29udHJvbCwgdGhlIGZvcndhcmRpbmcgYWxnb3JpdGhtcyB0byBiZSB1c2VkIGluIHJvdXRlcnMgWyBDU1o5MiBdLlwiXSxcIjIxMTYxNDIzMDNcIjpbXCJBdCBlYWNoIG5vZGUsIGEgbG9jYWwgcmVjb25jaWxpYXRpb24gbXVzdCBiZSBwZXJmb3JtZWQgYmV0d2VlbiB0aGUgb2ZmZXJlZCBhbmQgdGhlIHJlcXVlc3RlZCBmbG93c3BlYyB0byBjcmVhdGUgYSByZXNlcnZhdGlvbiwgYW5kIGFuIGFwcHJvcHJpYXRlbHkgbW9kaWZpZWQgcmVxdWVzdGVkIGZsb3dzcGVjIGlzIHBhc3NlZCBvbi4gVGhpcyB0d28tcGFzcyBzY2hlbWUgYWxsb3dzIGV4dGVuc2l2ZSBwcm9wZXJ0aWVzIGxpa2UgYWxsb3dlZCBkZWxheSB0byBiZSBkaXN0cmlidXRlZCBhY3Jvc3MgaG9wcyBpbiB0aGUgcGF0aCBbIFRlbmV0OTAgLCBTVDItOTBdLlwiXSxcIjIxMTc2OTcwMDVcIjpbXCJUaGUgSW50ZXJuZXQgYXJjaGl0ZWN0dXJlIHdhcyBiZWVuIGZvdW5kZWQgb24gdGhlIGNvbmNlcHQgdGhhdCBhbGwgZmxvdy1yZWxhdGVkIHN0YXRlIHNob3VsZCBiZSBpbiB0aGUgZW5kIHN5c3RlbXMgWyBDbGFyazg4IF0uXFx1MDAxYlRoZSBTUyBhcHByb2FjaCB3YXMgY2hvc2VuIHRvIG9idGFpbiB0aGUgc2ltcGxpY2l0eSBhbmQgcm9idXN0bmVzcyB0aGF0IGhhdmUgYmVlbiBkZW1vbnN0cmF0ZWQgYnkgY29ubmVjdGlvbmxlc3MgcHJvdG9jb2xzIHN1Y2ggYXMgSVAgWyBDbGFyazg4IF0uXFx1MDAxYkhvd2V2ZXIsIG91ciBnb2FsIGlzIHRvIHNpbXBseSBleHRlbmQgdGhlIEludGVybmV0IGFyY2hpdGVjdHVyZSwgbm90IHJlcGxhY2UgaXQuIFRoZSBmdW5kYW1lbnRhbCBjb25uZWN0aW9ubGVzcyBpbnRlcm5ldCBsYXllciBbIENsYXJrODggXSBoYXMgYmVlbiBoaWdobHkgc3VjY2Vzc2Z1bCwgYW5kIHdlIHdpc2ggdG8gcmV0YWluIGl0IGFzIGFuIGFyY2hpdGVjdHVyYWwgZm91bmRhdGlvbi5cIl0sXCIyMTc0MzU5NTQwXCI6W1wiVGhlIGZ1bmRhbWVudGFsIHNlcnZpY2UgbW9kZWwgb2YgdGhlIEludGVybmV0LCBhcyBlbWJvZGllZCBpbiB0aGUgYmVzdC1lZmZvcnQgZGVsaXZlcnkgc2VydmljZSBvZiBJUCwgaGFzIGJlZW4gdW5jaGFuZ2VkIHNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgdGhlIEludGVybmV0IHJlc2VhcmNoIHByb2plY3QgMjAgeWVhcnMgYWdvIFsgQ2VyZkthaG43NCBdLlwiXX0sXCJQUlwiOlsxOTc3ODY3MjYxLDIzMDcyMTUwNDMsMjAyNjgwMzA1MCwxNzQzNDc1NjgwLDE2NTExMTc4NzMsMjE1NjYzOTU0NSwxNTkyMDY0MDI4LDE5MDAzMzgwNjQsMjE1ODczMzgyMywyMTc2NTY2ODg0LDIxMzk0NDA3MDMsMjE0MTUxMjYxOCwyMDk5MDQwNDUxLDIwNzM0NDA0NjAsMTcyOTMyMTA4MCwyMDk4Mzc1Njk4LDIxMTYzNzgzMDgsMjE1OTM4MDYxOCw5ODEyNDQ4OSwyMTE0NDgwODgwLDE5Nzc4NjcyNjEsMjMwNzIxNTA0MywyMDI2ODAzMDUwLDE3NDM0NzU2ODAsMTY1MTExNzg3MywyMTU2NjM5NTQ1LDE1OTIwNjQwMjgsMTkwMDMzODA2NCwyMTU4NzMzODIzLDIxNzY1NjY4ODQsMjEzOTQ0MDcwMywyMTQxNTEyNjE4LDIwOTkwNDA0NTEsMjA3MzQ0MDQ2MCwxNzI5MzIxMDgwLDIwOTgzNzU2OTgsMjExNjM3ODMwOCwyMTU5MzgwNjE4LDk4MTI0NDg5LDIxMTQ0ODA4ODBdLFwiQU5GXCI6W3tcIkZOXCI6XCJSb2JlcnRcIixcIkxOXCI6XCJCcmFkZW5cIixcIlNcIjoxfSx7XCJGTlwiOlwiRGF2aWQgRC5cIixcIkxOXCI6XCJDbGFya1wiLFwiU1wiOjJ9LHtcIkZOXCI6XCJTY290dFwiLFwiTE5cIjpcIlNoZW5rZXJcIixcIlNcIjozfV0sXCJCVlwiOlwiUkZDXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIlJGQyBFZGl0b3JcIn0ifSx7ImxvZ3Byb2IiOi0xNi4zMzcsImtlc0VudGl0eUlkIjoxNTU2ODQwLCJJZCI6MjEyNzAzNDY4MywiVGkiOiJ0aGUgbXBlZyBkYXNoIHN0YW5kYXJkIGZvciBtdWx0aW1lZGlhIHN0cmVhbWluZyBvdmVyIHRoZSBpbnRlcm5ldCIsIlkiOjIwMTEsIkQiOiIyMDExLTA0LTAxIiwiUklkIjpbMjUwMzgyNjk0M10sIkFBIjpbeyJBdU4iOiJpcmFqIHNvZGFnYXIifV0sIkYiOlt7IkZOIjoiYWRhcHRpdmUgYml0cmF0ZSBzdHJlYW1pbmcifSx7IkZOIjoiZHluYW1pYyBhZGFwdGl2ZSBzdHJlYW1pbmcgb3ZlciBodHRwIn0seyJGTiI6InRyYW5zZm9ybSBjb2RpbmcifSx7IkZOIjoiZGFzaCJ9LHsiRk4iOiJpbnRlcm9wZXJhYmlsaXR5In0seyJGTiI6InNlcnZlciJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoibXVsdGltZWRpYSJ9LHsiRk4iOiJ3b3JsZCB3aWRlIHdlYiJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiVGhlIE1QRUctREFTSCBTdGFuZGFyZCBmb3IgTXVsdGltZWRpYSBTdHJlYW1pbmcgT3ZlciB0aGUgSW50ZXJuZXRcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjo1MCxcIkludmVydGVkSW5kZXhcIjp7XCJNUEVHXCI6WzBdLFwiaGFzXCI6WzFdLFwicmVjZW50bHlcIjpbMl0sXCJmaW5hbGl6ZWRcIjpbM10sXCJhXCI6WzRdLFwibmV3XCI6WzUsMzldLFwic3RhbmRhcmRcIjpbNiwxOF0sXCJ0b1wiOls3LDIwXSxcImVuYWJsZVwiOls4XSxcImR5bmFtaWNcIjpbOV0sXCJhbmRcIjpbMTAsMjddLFwiYWRhcHRpdmVcIjpbMTFdLFwic3RyZWFtaW5nXCI6WzEyXSxcIm9mXCI6WzEzLDI5LDQ1XSxcIm1lZGlhXCI6WzE0XSxcIm92ZXJcIjpbMTVdLFwiSFRUUC5cIjpbMTZdLFwiVGhpc1wiOlsxN10sXCJhaW1zXCI6WzE5XSxcImFkZHJlc3NcIjpbMjFdLFwidGhlXCI6WzIyLDQzLDQ3XSxcImludGVyb3BlcmFiaWxpdHlcIjpbMjNdLFwibmVlZHNcIjpbMjRdLFwiYmV0d2VlblwiOlsyNV0sXCJkZXZpY2VzXCI6WzI2XSxcInNlcnZlcnNcIjpbMjhdLFwidmFyaW91c1wiOlszMF0sXCJ2ZW5kb3JzLlwiOlszMV0sXCJUaGVyZVwiOlszMl0sXCJpc1wiOlszM10sXCJicm9hZFwiOlszNF0sXCJpbmR1c3RyeVwiOlszNV0sXCJzdXBwb3J0XCI6WzM2XSxcImZvclwiOlszN10sXCJ0aGlzXCI6WzM4XSxcInN0YW5kYXJkLFwiOls0MF0sXCJ3aGljaFwiOls0MV0sXCJvZmZlcnNcIjpbNDJdLFwicHJvbWlzZVwiOls0NF0sXCJ0cmFuc2Zvcm1pbmdcIjpbNDZdLFwibWVkaWEtc3RyZWFtaW5nXCI6WzQ4XSxcImxhbmRzY2FwZS5cIjpbNDldfX0sXCJTXCI6W3tcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9pZWVleHBsb3JlLmllZWUub3JnL3hwbC9hYnN0cmFjdEtleXdvcmRzLmpzcD9yZWxvYWQ9dHJ1ZSZhcm51bWJlcj02MDc3ODY0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9pZWVleHBsb3JlLmllZWUub3JnL2RvY3VtZW50LzYwNzc4NjQvXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LmNvbXB1dGVyLm9yZy9jc2RsL21hZ3MvbXUvMjAxMS8wNC9tbXUyMDExMDQwMDYyLmh0bWxcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3lhZGRhLmljbS5lZHUucGwveWFkZGEvZWxlbWVudC9id21ldGExLmVsZW1lbnQuaWVlZS0wMDAwMDYwNzc4NjRcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cuaW5mb25hLnBsL3Jlc291cmNlL2J3bWV0YTEuZWxlbWVudC5pZWVlLWFydC0wMDAwMDYwNzc4NjRcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2R4LmRvaS5vcmcvMTAuMTEwOS9NTVVMLjIwMTEuNzFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cuc2VtYW50aWNzY2hvbGFyLm9yZy9wYXBlci9UaGUtTVBFRy1EQVNILVN0YW5kYXJkLWZvci1NdWx0aW1lZGlhLVN0cmVhbWluZy10aGUtU29kYWdhci8yMDZmYzhjM2MyMjc3NDAyY2FjZWRiOTU4MTAxNGNmYWY2YWNhMDg0L2ZpZ3VyZS8wXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9qb3VybmFscy9pZWVlbW0vaWVlZW1tMTguaHRtbCNTb2RhZ2FyMTFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RvaS5pZWVlY29tcHV0ZXJzb2NpZXR5Lm9yZy8xMC4xMTA5L01NVUwuMjAxMS43MVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTIwODY0NDFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kub3JnLzEwLjExMDkvTU1VTC4yMDExLjcxXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9pZWVleHBsb3JlLmllZWUub3JnL3hwbC9hcnRpY2xlRGV0YWlscy5qc3A/dHA9JmFybnVtYmVyPTYwNzc4NjRcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTIwODY0NDFcIn1dLFwiVkZOXCI6XCJJRUVFIE11bHRpTWVkaWFcIixcIlZcIjoxOCxcIklcIjo0LFwiRlBcIjo2MixcIkxQXCI6NjcsXCJET0lcIjpcIjEwLjExMDkvTU1VTC4yMDExLjcxXCIsXCJQUlwiOlsyMTU2MTMzNTQ3LDE5NzIxOTE4MDIsMjE1MDQ1MzAzOCwyMDc3NTQ0MDEzLDIxNjc0MDc3NTIsMjAxNzE0NjAxNywyMDYxNzAwMjYyLDIxMTUzNjMyODksMjEzMDk1NDMyNiwyMTA0NjQ0NjcwLDE5ODY1NzAzNjgsMTk2NzMzMDgxNiwyMTU3Mzk0MzU3LDIwMTM2Mjg4NjQsMjA4MTY1NTM3NywyNTAzODI2OTQzLDE5OTAxNTQ5NzksMTk3OTc5MDQ4NSwyMDcwMTUzNzI0LDIxNDYzOTU1MzksMjE1NjEzMzU0NywxOTcyMTkxODAyLDIxNTA0NTMwMzgsMjA3NzU0NDAxMywyMTY3NDA3NzUyLDIwMTcxNDYwMTcsMjA2MTcwMDI2MiwyMTE1MzYzMjg5LDIxMzA5NTQzMjYsMjEwNDY0NDY3MCwxOTg2NTcwMzY4LDE5NjczMzA4MTYsMjE1NzM5NDM1NywyMDEzNjI4ODY0LDIwODE2NTUzNzcsMjUwMzgyNjk0MywxOTkwMTU0OTc5LDE5Nzk3OTA0ODUsMjA3MDE1MzcyNCwyMTQ2Mzk1NTM5XSxcIkFORlwiOlt7XCJGTlwiOlwiSXJhalwiLFwiTE5cIjpcIlNvZGFnYXJcIixcIlNcIjoxfV0sXCJCVlwiOlwiSUVFRSBNdWx0aU1lZGlhXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIklFRUVcIn0ifSx7ImxvZ3Byb2IiOi0xNi4zNzEsImtlc0VudGl0eUlkIjoxNjA5MTU2LCJJZCI6MjA4MTY0MjcxNCwiVGkiOiJpbnRlcm5ldCBwcm90b2NvbCB2ZXJzaW9uIDYgaXB2NiBzcGVjaWZpY2F0aW9uIiwiWSI6MTk5NSwiRCI6IjE5OTUtMTItMDEiLCJBQSI6W3siQXVOIjoic3RlcGhlbiBkZWVyaW5nIn0seyJBdU4iOiJyb2JlcnQgbSBoaW5kZW4ifV0sIkYiOlt7IkZOIjoiaXB2NiBkZXBsb3ltZW50In0seyJGTiI6ImxpbmsgY29udHJvbCBwcm90b2NvbCJ9LHsiRk4iOiJpbnRlcm5ldCBsYXllciJ9LHsiRk4iOiJyZXZlcnNlIGFkZHJlc3MgcmVzb2x1dGlvbiBwcm90b2NvbCJ9LHsiRk4iOiJpbnRlcm5ldCBwcm90b2NvbCBjb250cm9sIHByb3RvY29sIn0seyJGTiI6InBhdGggbXR1IGRpc2NvdmVyeSJ9LHsiRk4iOiJpbnRlcm5ldCBwcm90b2NvbCJ9LHsiRk4iOiJpbnRlcm5ldCBwcm90b2NvbCBzdWl0ZSJ9LHsiRk4iOiJ3b3JsZCB3aWRlIHdlYiJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiSW50ZXJuZXQgUHJvdG9jb2wsIFZlcnNpb24gNiAoSVB2NikgU3BlY2lmaWNhdGlvblwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjIwLFwiSW52ZXJ0ZWRJbmRleFwiOntcIlRoaXNcIjpbMF0sXCJkb2N1bWVudFwiOlsxXSxcInNwZWNpZmllc1wiOlsyXSxcInZlcnNpb25cIjpbM10sXCI2XCI6WzRdLFwib2ZcIjpbNV0sXCJ0aGVcIjpbNl0sXCJJbnRlcm5ldFwiOls3XSxcIlByb3RvY29sXCI6WzhdLFwiKElQdjYpLFwiOls5XSxcImFsc29cIjpbMTBdLFwic29tZXRpbWVzXCI6WzExXSxcInJlZmVycmVkXCI6WzEyXSxcInRvXCI6WzEzXSxcImFzXCI6WzE0XSxcIklQXCI6WzE1XSxcIk5leHRcIjpbMTZdLFwiR2VuZXJhdGlvblwiOlsxN10sXCJvclwiOlsxOF0sXCJJUG5nLlwiOlsxOV19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvcmZjL3BkZnJmYy9yZmMyNDYwLnR4dC5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvaW5mby9yZmM4MjAwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vcmZjcy53ZWIuZmMyLmNvbS9yZmMyNDYwLmh0bWxcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD1SRkMyNDYwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9UkZDMTg4M1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2R4LmRvaS5vcmcvMTAuMTc0ODclMkZSRkMyNDYwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vY2FtcHVzLmZoLXdvcm1zLmRlL35wcm9nYmF1L05ldFRlY2gvMDEvaW5mby9yZmMyNDYwLmh0bWxcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9jYW1wdXMuaHMtd29ybXMuZGUvfnByb2diYXUvTmV0VGVjaC8wMS9pbmZvL3JmYzI0NjAuaHRtbFwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMjQ2MFwifV0sXCJWRk5cIjpcIkludGVybmV0IFByb3RvY29sLCBWZXJzaW9uIDYgKElQdjYpIFNwZWNpZmljYXRpb24gXCIsXCJWXCI6MTg4MyxcIkZQXCI6MSxcIkxQXCI6MzcsXCJQUlwiOlsyNjExNTYwNjg3LDIxNDA0NzE0MzYsMjYxNzIxNjc2MCwyMTAxMTY0MDI4LDE5MDUwMjE4ODUsMjQ2OTM4ODE0NCwyMTE3MDA3MjQ1LDE5Nzc4NjcyNjEsMTY3NDE0NTY4OSwxOTU0MzM4NzYxLDE1NDA2NDEwODIsMjA5OTA0MDQ1MSwxOTIzMjg5MzM2LDIyNTQ2OTE4NTQsMjE1NjYzOTU0NSwyMjYzMTI0NjA3LDE3MzE5ODIzODcsMjA5NzcyNTY2NSwxNTM5OTk2MjQ2LDE3NDY0NjAxMTQsMjYxMTU2MDY4NywyMTQwNDcxNDM2LDI2MTcyMTY3NjAsMjEwMTE2NDAyOCwxOTA1MDIxODg1LDI0NjkzODgxNDQsMjExNzAwNzI0NSwxOTc3ODY3MjYxLDE2NzQxNDU2ODksMTk1NDMzODc2MSwxNTQwNjQxMDgyLDIwOTkwNDA0NTEsMTkyMzI4OTMzNiwyMjU0NjkxODU0LDIxNTY2Mzk1NDUsMjI2MzEyNDYwNywxNzMxOTgyMzg3LDIwOTc3MjU2NjUsMTUzOTk5NjI0NiwxNzQ2NDYwMTE0XSxcIkFORlwiOlt7XCJGTlwiOlwiU3RlcGhlbiBFLlwiLFwiTE5cIjpcIkRlZXJpbmdcIixcIlNcIjoxfSx7XCJGTlwiOlwiUm9iZXJ0IE0uXCIsXCJMTlwiOlwiSGluZGVuXCIsXCJTXCI6Mn1dLFwiQlZcIjpcIkludGVybmV0IFByb3RvY29sLCBWZXJzaW9uIDYgKElQdjYpIFNwZWNpZmljYXRpb24gXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIlJGQyBFZGl0b3JcIn0ifSx7ImxvZ3Byb2IiOi0xNi4zODcsImtlc0VudGl0eUlkIjoxNjM0MzA5LCJJZCI6MjEyOTIwMTM1OCwiVGkiOiJtb2RlbGluZyB0aGUgd29ybGQgZnJvbSBpbnRlcm5ldCBwaG90byBjb2xsZWN0aW9ucyIsIlkiOjIwMDgsIkQiOiIyMDA4LTExLTAxIiwiUklkIjpbMjE1MTEwMzkzNSwyMTA0OTc0NzU1LDIxMzE4NDY4OTQsMjEyODAxNzY2MiwyMTI0NDA0MzcyLDIxNzIxODgzMTcsMTk4MDkxMTc0NywyMTEwNzY0NzMzLDIxNDEyODI5MjAsMjE1NjU5ODYwMiwyMTMwMTAzNTIwLDIxMTEzMDg5MjUsMjEwNDk3ODczOCwyMTE5NzgxNTI3LDIwODUyNjExNjMsMjA2MzM2Njk5NywyMTYwMDE0MDAxLDI0Mjc4ODExNTMsMjEyNDMxMzE4NywyMTY1NDk3NDk1LDE1NDE2NDIyNDMsMjE2NTk0OTQyNSwyMjk0OTg1NzU4LDE5NzE3MTkzOTgsMTk3NjU5NTc2MSwyMTE4ODc3NzY5LDIxMDk2MzU1MzAsMTY5OTczNDYxMiwyMTcyMTkxOTAzLDIxMzg4MzUxNDEsMjExMTE2OTU3NCwyNTk4MzE5NjQ3LDIxNzEwMTEyNTEsMjA4MDYyOTAyOSwxOTg1NDE5MDcsMjA5ODc4OTgwMCwyMTAyNDgxODI4LDIwOTgzNjI0NTAsMjMzOTIyNjg1MiwyMTUxMjg1OTYyLDIxNTYxMTY3NzgsMjIzODQwMjM1NCwyMTQwNzg5MDM1LDIxNTk1MzYxNzUsMjE2ODEwMjQxNCwyMjk0MDE1ODc4LDIwMTg1Mzk0MDcsMjEzMzI2ODg2MiwyMTI3MDE2MjQyLDE1NDM1NDk2NDYsNDQ1NDYxMzIsMjE1NTMwNTEyNywyMTM0OTIxOTc0LDE0ODk0MDUxNTgsMjAzNzExNTIwOSwyMTM5MzkwMTk5LDIxMDYzNjQzNTgsMjA5NjYzNjQyMSwyMTM2MzA5MDA2LDIxMzc2NTg4MDAsMjAyNjEwMTg3OSwxNTIzMTA4ODI0LDIxNzEzOTM3MTIsMjExMTAwMzU5NCwyMDg1Njc1MDIyLDIxNjk1NzYyMzEsMTk2NTIzNTAzMSwxNTk5ODQxMjcwLDE5Njc3ODcxMzIsMjA0OTM5ODExMCwyMDAxODQ2MjQ3LDIxMjMzNDcyODksMTUyMjAxMjgzNSwyMTIxMDI5MzY5LDE3MzYzMjg0MjYsMTUzMDkyMzA3OCwxODc4NjMyOTgyLDIwMjcyMTgwNzMsMjA0Mzk2MjcyNywyNjEzNTQ3MTU1LDIwNjE4ODkyOCwxNTQ4ODA5MTkxLDE4ODA4MjkzMV0sIkFBIjpbeyJBdU4iOiJub2FoIHNuYXZlbHkifSx7IkF1TiI6InN0ZXZlbiBtIHNlaXR6In0seyJBdU4iOiJyaWNoYXJkIHN6ZWxpc2tpIn1dLCJGIjpbeyJGTiI6ImltYWdlIGJhc2VkIG1vZGVsaW5nIGFuZCByZW5kZXJpbmcifSx7IkZOIjoiM2QgbW9kZWxpbmcifSx7IkZOIjoicmVuZGVyaW5nIn0seyJGTiI6ImltYWdlIHJldHJpZXZhbCJ9LHsiRk4iOiJ0b3VyaXNtIn0seyJGTiI6InZpc3VhbGl6YXRpb24ifSx7IkZOIjoiaW1hZ2UgcHJvY2Vzc2luZyJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoiY29tcHV0ZXIgdmlzaW9uIn0seyJGTiI6ImFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiTW9kZWxpbmcgdGhlIFdvcmxkIGZyb20gSW50ZXJuZXQgUGhvdG8gQ29sbGVjdGlvbnNcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxMTksXCJJbnZlcnRlZEluZGV4XCI6e1wiVGhlcmVcIjpbMF0sXCJhcmVcIjpbMV0sXCJiaWxsaW9uc1wiOlsyXSxcIm9mXCI6WzMsMzQsNTEsNTcsNzgsOTddLFwicGhvdG9ncmFwaHNcIjpbNF0sXCJvblwiOls1LDQ5XSxcInRoZVwiOls2LDksMzIsOTgsMTE2XSxcIkludGVybmV0LFwiOls3XSxcImNvbXByaXNpbmdcIjpbOF0sXCJsYXJnZXN0XCI6WzEwXSxcImFuZFwiOlsxMSwzOCw0Myw4OCwxMDMsMTA4LDExM10sXCJtb3N0XCI6WzEyXSxcImRpdmVyc2VcIjpbMTNdLFwicGhvdG9cIjpbMTRdLFwiY29sbGVjdGlvblwiOlsxNV0sXCJldmVyXCI6WzE2XSxcImFzc2VtYmxlZC5cIjpbMTddLFwiSG93XCI6WzE4XSxcImNhblwiOlsxOV0sXCJjb21wdXRlclwiOlsyMF0sXCJ2aXNpb25cIjpbMjFdLFwicmVzZWFyY2hlcnNcIjpbMjJdLFwiZXhwbG9pdFwiOlsyM10sXCJ0aGlzXCI6WzI0LDI5XSxcImltYWdlcnk/XCI6WzI1XSxcIlRoaXNcIjpbMjYsNjgsODNdLFwicGFwZXJcIjpbMjcsODRdLFwiZXhwbG9yZXNcIjpbMjhdLFwicXVlc3Rpb25cIjpbMzBdLFwiZnJvbVwiOlszMSwxMDVdLFwic3RhbmRwb2ludFwiOlszM10sXCIzRFwiOlszNSw5NV0sXCJzY2VuZVwiOlszNl0sXCJtb2RlbGluZ1wiOlszNyw5Nl0sXCJ2aXN1YWxpemF0aW9uLlwiOlszOV0sXCJXZVwiOls0MF0sXCJwcmVzZW50XCI6WzQxXSxcInN0cnVjdHVyZS1mcm9tLW1vdGlvblwiOls0Ml0sXCJpbWFnZS1iYXNlZFwiOls0NF0sXCJyZW5kZXJpbmdcIjpbNDVdLFwiYWxnb3JpdGhtc1wiOls0Niw4N10sXCJ0aGF0XCI6WzQ3XSxcIm9wZXJhdGVcIjpbNDhdLFwiaHVuZHJlZHNcIjpbNTBdLFwiaW1hZ2VzXCI6WzUyXSxcImRvd25sb2FkZWRcIjpbNTNdLFwiYXNcIjpbNTQsOTBdLFwiYVwiOls1NSw5MV0sXCJyZXN1bHRcIjpbNTZdLFwia2V5d29yZC1iYXNlZFwiOls1OF0sXCJpbWFnZVwiOls1OV0sXCJzZWFyY2hcIjpbNjBdLFwicXVlcmllc1wiOls2MV0sXCJsaWtlXCI6WzYyXSxcIlxcXCJOb3RyZVwiOls2M10sXCJEYW1lXFxcIlwiOls2NF0sXCJvclwiOls2NV0sXCJcXFwiVHJldmlcIjpbNjZdLFwiRm91bnRhaW4uXFxcIlwiOls2N10sXCJhcHByb2FjaCxcIjpbNjldLFwid2hpY2hcIjpbNzBdLFwid2VcIjpbNzFdLFwiY2FsbFwiOls3Ml0sXCJQaG90b1wiOls3M10sXCJUb3VyaXNtLFwiOls3NF0sXCJoYXNcIjpbNzVdLFwiZW5hYmxlZFwiOls3Nl0sXCJyZWNvbnN0cnVjdGlvbnNcIjpbNzddLFwibnVtZXJvdXNcIjpbNzldLFwid2VsbC1rbm93blwiOls4MF0sXCJ3b3JsZFwiOls4MV0sXCJzaXRlcy5cIjpbODJdLFwicHJlc2VudHNcIjpbODVdLFwidGhlc2VcIjpbODZdLFwicmVzdWx0c1wiOls4OV0sXCJmaXJzdFwiOls5Ml0sXCJzdGVwXCI6WzkzXSxcInRvd2FyZHNcIjpbOTRdLFwid29ybGQnc1wiOls5OV0sXCJ3ZWxsLXBob3RvZ3JhcGhlZFwiOlsxMDBdLFwic2l0ZXMsXCI6WzEwMV0sXCJjaXRpZXMsXCI6WzEwMl0sXCJsYW5kc2NhcGVzXCI6WzEwNF0sXCJJbnRlcm5ldFwiOlsxMDZdLFwiaW1hZ2VyeSxcIjpbMTA3XSxcImRpc2N1c3Nlc1wiOlsxMDldLFwia2V5XCI6WzExMF0sXCJvcGVuXCI6WzExMV0sXCJwcm9ibGVtc1wiOlsxMTJdLFwiY2hhbGxlbmdlc1wiOlsxMTRdLFwiZm9yXCI6WzExNV0sXCJyZXNlYXJjaFwiOlsxMTddLFwiY29tbXVuaXR5LlwiOlsxMThdfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9waG90b3RvdXIuY3Mud2FzaGluZ3Rvbi5lZHUvTW9kZWxpbmdUaGVXb3JsZF9pamN2MDcucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuY29ybmVsbC5lZHUvfnNuYXZlbHkvcHVibGljYXRpb25zL3BhcGVycy9zbmF2ZWx5X2lqY3YwNy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9jb250ZW50L3BkZi8xMC4xMDA3JTJGczExMjYzLTAwNy0wMTA3LTMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vd3d3Lm1pY3Jvc29mdC5jb20vZW4tdXMvcmVzZWFyY2gvd3AtY29udGVudC91cGxvYWRzLzIwMDgvMTEvU25hdmVseS1JSkNWMDgucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wYWdlcy5jcy53aXNjLmVkdS9+ZHllci9jczUzNC1zcHJpbmcwOS9wYXBlcnMvcGhvdG90b3VyaXNtLWlqY3YwOC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy52aXJnaW5pYS5lZHUvfm1qaDd2L2JpYi9TbmF2ZWx5MDgucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jb3Vyc2VzLmNzLndhc2hpbmd0b24uZWR1L2NvdXJzZXMvY3NlcDU3Ni8wOHdpL25vdGVzL3NuYXZlbHlfaWpjdjA3LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmZhY3VsdHkuaWRjLmFjLmlsL2FyaWsvc2VtaW5hcjIwMTAvcGFwZXJzLzJEdG8zRC9Nb2RlbGluZ1RoZVdvcmxkX2lqY3YwNy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2dyYWlsLmNzLndhc2hpbmd0b24uZWR1L3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE1LzA4L3NuYXZlbHkyMDA4bXR3LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3VzZXJwYWdlcy51bmkta29ibGVuei5kZS9+YWdhcy9Eb2NzUHVibGljL1NuYXZlbHkyMDA4TVRXLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL3JkLnNwcmluZ2VyLmNvbS9jb250ZW50L3BkZi8xMC4xMDA3JTJGczExMjYzLTAwNy0wMTA3LTMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MuYWl0LmFjLnRoL35tZGFpbGV5L2N2cmVhZGluZ3MvU25hdmVseS1Nb2RlbGluZy5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9hcnRpY2xlLzEwLjEwMDcvczExMjYzLTAwNy0wMTA3LTNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9lbi11cy9yZXNlYXJjaC9wdWJsaWNhdGlvbi9tb2RlbGluZy10aGUtd29ybGQtZnJvbS1pbnRlcm5ldC1waG90by1jb2xsZWN0aW9ucy9cIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9yZXNlYXJjaC5taWNyb3NvZnQuY29tL2FwcHMvcHVicy9kZWZhdWx0LmFzcHg/aWQ9NzQwMzZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2lqY3YvaWpjdjgwLmh0bWwjU25hdmVseVNTMDhcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kub3JnLzEwLjEwMDcvczExMjYzLTAwNy0wMTA3LTNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2R4LmRvaS5vcmcvMTAuMTAwNy9zMTEyNjMtMDA3LTAxMDctM1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTE0MTI2NTQuMTQxMjY3M1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTE0MTI2NzNcIn1dLFwiVkZOXCI6XCJJbnRlcm5hdGlvbmFsIEpvdXJuYWwgb2YgQ29tcHV0ZXIgVmlzaW9uXCIsXCJWXCI6ODAsXCJJXCI6MixcIkZQXCI6MTg5LFwiTFBcIjoyMTAsXCJET0lcIjpcIjEwLjEwMDcvczExMjYzLTAwNy0wMTA3LTNcIixcIkNDXCI6e1wiNDQ1NDYxMzJcIjpbXCJUaGUgRi1tYXRyaXggcmV0dXJuZWQgYnkgUkFOU0FDIGlzIHJlZmluZWQgYnkgcnVubmluZyB0aGUgTGV2ZW5iZXJnLU1hcnF1YXJkdCBhbGdvcml0aG0gKE5vY2VkYWwgYW5kIFdyaWdodCAxOTk5KSBvbiB0aGUgZWlnaHQgcGFyYW1ldGVycyBvZiB0aGUgRm1hdHJpeCwgbWluaW1pemluZyBlcnJvcnMgZm9yIGFsbCB0aGUgaW5saWVycyB0byB0aGUgRi1tYXRyaXguXCJdLFwiMTg4MDgyOTMxXCI6W1wiVW5mb3J0dW5hdGVseSwgZWFybHkgdGVjaG5pcXVlcyByZWxpZWQgb24gbWF0Y2hpbmcgcGF0Y2hlcyBhcm91bmQgdGhlIGRldGVjdGVkIGtleXBvaW50cywgd2hpY2ggbGltaXRlZCB0aGVpciByYW5nZSBvZiBhcHBsaWNhYmlsaXR5IHRvIHNjZW5lcyBzZWVuIGZyb20gc2ltaWxhciB2aWV3cG9pbnRzLCBlLmcuLCBmb3IgYWVyaWFsIHBob3RvZ3JhbW1ldHJ5IGFwcGxpY2F0aW9ucyAoIEhhbm5haCAxOTg4ICkuXCJdLFwiMTk4NTQxOTA3XCI6W1wiTW9yZSByZWNlbnRseSwgcmVsYXRlZCB0ZWNobmlxdWVzIGZyb20gcGhvdG9ncmFtbWV0cnkgc3VjaCBhcyBidW5kbGUgYWRqdXN0bWVudCAoVHJpZ2dzIGV0IGFsLiAxOTk5KSAod2l0aCByZWxhdGVkIHNwYXJzZSBtYXRyaXggdGVjaG5pcXVlcywgU3plbGlza2kgYW5kIEthbmcgMTk5NCApaCBhdmUgbWFkZSB0aGVpciB3YXkgaW50byBjb21wdXRlciB2aXNpb24gYW5kIGFyZSBub3cgcmVnYXJkZWQgYXMgdGhlIGdvbGQgc3RhbmRhcmQgZm9yIHBlcmZvcm1pbmcgb3B0aW1hbCAzRCByZWNvbnN0cnVjdGlvbiBmcm9tIGNvcnJlc3BvbmRlbmNlcyAoIEhhcnRsZXkgYW5kIFppc3Nlcm1hbiAyMDA0ICkuXFx1MDAxYkR1cmluZyBlYWNoIFJBTlNBQyBpdGVyYXRpb24sIHdlIGNvbXB1dGUgYSBjYW5kaWRhdGUgZnVuZGFtZW50YWwgbWF0cml4IHVzaW5nIHRoZSBlaWdodC1wb2ludCBhbGdvcml0aG0gKCBIYXJ0bGV5IGFuZCBaaXNzZXJtYW4gMjAwNCApLCBub3JtYWxpemluZyB0aGUgcHJvYmxlbSB0byBpbXByb3ZlIHJvYnVzdG5lc3MgdG8gbm9pc2UgKEhhcnRsZXkgMTk5NykuXFx1MDAxYldlIHNlbGVjdCB0aGUgY2FtZXJhIHRoYXQgb2JzZXJ2ZXMgdGhlIGxhcmdlc3QgbnVtYmVyIG9mIHRyYWNrcyB3aG9zZSAzRCBsb2NhdGlvbnMgaGF2ZSBhbHJlYWR5IGJlZW4gZXN0aW1hdGVkLCBhbmQgaW5pdGlhbGl6ZSB0aGUgbmV3IGNhbWVyYeKAmXMgZXh0cmluc2ljIHBhcmFtZXRlcnMgdXNpbmcgdGhlIGRpcmVjdCBsaW5lYXIgdHJhbnNmb3JtIChETFQpIHRlY2huaXF1ZSAoIEhhcnRsZXkgYW5kIFppc3Nlcm1hbiAyMDA0ICkgaW5zaWRlIGEgUkFOU0FDIHByb2NlZHVyZS5cIl0sXCIyMDYxODg5MjhcIjpbXCJJQk0gaXMgdGhlIHByb2Nlc3Mgb2YgY3JlYXRpbmcgdGhyZWVkaW1lbnNpb25hbCBtb2RlbHMgZnJvbSBhIGNvbGxlY3Rpb24gb2YgaW5wdXQgaW1hZ2VzIChEZWJldmVjIGV0IGFsLiAxOTk2OyBHcnplc3pjenVrIDIwMDI7IFBvbGxlZmV5cyBldCBhbC4gMjAwNCkuXCJdLFwiMTQ4OTQwNTE1OFwiOltcIkZvciBzaXR1YXRpb25zIHdoZXJlIHRoZSBjYW1lcmEgY2FsaWJyYXRpb24gcGFyYW1ldGVycyBhcmUgdW5rbm93biwgc2VsZi1jYWxpYnJhdGlvbiB0ZWNobmlxdWVzLCB3aGljaCBmaXJzdCBlc3RpbWF0ZSBhIHByb2plY3RpdmUgcmVjb25zdHJ1Y3Rpb24gb2YgdGhlIDNEIHdvcmxkIGFuZCB0aGVuIHBlcmZvcm0gYSBtZXRyaWMgdXBncmFkZSBoYXZlIHByb3ZlbiB0byBiZSBzdWNjZXNzZnVsIChQb2xsZWZleXMgZXQgYWwuIDE5OTk7IFBvbGxlZmV5cyBhbmQgVmFuIEdvb2wgMjAwMikuXCJdLFwiMTUyMzEwODgyNFwiOltcIk5vdGFibGUgZXhhbXBsZXMgaW5jbHVkZSB0aGUgc2VtaS1hdXRvbWF0aWMgRmFjYWRlIHN5c3RlbSAoRGViZXZlYyBldCBhbC4gMTk5NiksIHdoaWNoIHdhcyB1c2VkIHRvIHJlY29uc3RydWN0IGNvbXBlbGxpbmcgZmx5dGhyb3VnaHMgb2YgdGhlIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBCZXJrZWxleSBjYW1wdXM7IGF1dG9tYXRpYyBhcmNoaXRlY3R1cmUgcmVjb25zdHJ1Y3Rpb24gc3lzdGVtcyBzdWNoIGFzIHRoYXQgb2YgRGljayBldCBhbC4gKDIwMDQpOyBhbmQgdGhlIE1JVCBDaXR5IFNjYW5uaW5nIFByb2plY3QgKCBUZWxsZXIgZXQgYWwuIDIwMDMgKSwgd2hpY2ggY2FwdHVyZWQgdGhvdXNhbmRzIG9mIGNhbGlicmF0ZWQgaW1hZ2VzIGZyb20gYW4gaW5zdHJ1bWVudGVkIHJpZyB0byBjb25zdHJ1Y3QgYSAzRCBtb2RlbCBvZiB0aGUgTUlUIGNhbXB1cy4sQXMgc3VjaCwgd2Ugc2lkZS1zdGVwIHRoZSBtb3JlIGNoYWxsZW5naW5nIHByb2JsZW1zIG9mIHJlY29uc3RydWN0aW5nIGZ1bGwgc3VyZmFjZSBtb2RlbHMgKERlYmV2ZWMgZXQgYWwuIDE5OTY7ICBUZWxsZXIgZXQgYWwuIDIwMDMgKSwgbGlnaHQgZmllbGRzIChHb3J0bGVyIGV0IGFsLiAxOTk2OyBMZXZveSBhbmQgSGFucmFoYW4gMTk5NiksIG9yIHBpeGVsLWFjY3VyYXRlIHZpZXcgaW50ZXJwb2xhdGlvbnMgKENoZW4gYW5kIFdpbGxpYW1zIDE5OTM7IE1jTWlsbGFuIGFuZCBCaXNob3AgMTk5NTsgU2VpdHogYW5kIER5ZXIgMTk5NjsgWml0bmljayBldCBhbC4gMjAwNCkuXCJdLFwiMTUzMDkyMzA3OFwiOltcIldoaWxlIExvbmd1ZXQtSGlnZ2lucyAoMTk4MSkgaW50cm9kdWNlZCBhIHN0aWxsIHdpZGVseSB1c2VkIHR3by1mcmFtZSByZWxhdGl2ZSBvcmllbnRhdGlvbiB0ZWNobmlxdWUgaW4gMTk4MSwgdGhlIGRldmVsb3BtZW50IG9mIG11bHRpLWZyYW1lIHN0cnVjdHVyZSBmcm9tIG1vdGlvbiB0ZWNobmlxdWVzLCBpbmNsdWRpbmcgZmFjdG9yaXphdGlvbiBtZXRob2RzIChUb21hc2kgYW5kIEthbmFkZSAxOTkyKSBhbmQgZ2xvYmFsIG9wdGltaXphdGlvbiB0ZWNobmlxdWVzIChTcGV0c2FraXMgYW5kIEFsb2ltb25vcyAxOTkxOyBTemVsaXNraSBhbmQgS2FuZyAxOTk0OyBPbGllbnNpcyAxOTk5KSBvY2N1cnJlZCBxdWl0ZSBhIGJpdCBsYXRlci5cIl0sXCIxNTQxNjQyMjQzXCI6W1wiV2hpbGUgdGhlc2UgZWFybHkgdGVjaG5pcXVlcyBkZXRlY3RlZCBrZXlwb2ludHMgYXQgYSBzaW5nbGUgc2NhbGUsIG1vZGVybiB0ZWNobmlxdWVzIHVzZSBhIHF1YXNpY29udGludW91cyBzYW1wbGluZyBvZiBzY2FsZSBzcGFjZSB0byBkZXRlY3QgcG9pbnRzIGludmFyaWFudCB0byBjaGFuZ2VzIGluIHNjYWxlIGFuZCBvcmllbnRhdGlvbiAoTG93ZSAyMDA0OyBNaWtvbGFqY3p5ayBhbmQgU2NobWlkIDIwMDQpIGFuZCBzb21ld2hhdCBpbnZhcmlhbnQgdG8gYWZmaW5lIHRyYW5zZm9ybWF0aW9ucyAoQmF1bWJlcmcgMjAwMDsgS2FkaXIgYW5kIEJyYWR5IDIwMDE7IFNjaGFmZmFsaXR6a3kgYW5kIFppc3Nlcm1hbiAyMDAyOyBNaWtvbGFqY3p5ayBldCBhbC4gMjAwNSkuXCIsXCIsIHRoZSBhdXRvbWF0aWMgbWF0Y2hpbmcgb2YgaW1hZ2VzIHRha2VuIGZyb20gd2lkZWx5IGRpZmZlcmVudCB2aWV3cyAoQmF1bWJlcmcgMjAwMDsgU2NoYWZmYWxpdHpreSBhbmQgWmlzc2VybWFuIDIwMDI7IFN0cmVjaGEgZXQgYWwuIDIwMDM7IFR1eXRlbGFhcnMgYW5kIFZhbiBHb29sIDIwMDQ7IE1hdGFzIGV0IGFsLiAyMDA0KSwgKHdlYWtseSkgYWZmaW5lLWludmFyaWFudCBmZWF0dXJlIGRlc2NyaXB0b3JzIG11c3QgYmUgdXNlZC5cIl0sXCIxNTQ4ODA5MTkxXCI6W1wiSW4gUGhvdG93YWxrZXIgKCBUYW5ha2EgZXQgYWwuIDIwMDIgKSwgYSB1c2VyIGNhbiBtYW51YWxseSBhdXRob3IgYSB3YWxrdGhyb3VnaCBvZiBhIHNjZW5lIGJ5IHNwZWNpZnlpbmcgdHJhbnNpdGlvbnMgYmV0d2VlbiBwYWlycyBvZiBpbWFnZXMgaW4gYSBjb2xsZWN0aW9uLlwiXSxcIjE2OTk3MzQ2MTJcIjpbXCJXaGlsZSB0aGVzZSBlYXJseSB0ZWNobmlxdWVzIGRldGVjdGVkIGtleXBvaW50cyBhdCBhIHNpbmdsZSBzY2FsZSwgbW9kZXJuIHRlY2huaXF1ZXMgdXNlIGEgcXVhc2ljb250aW51b3VzIHNhbXBsaW5nIG9mIHNjYWxlIHNwYWNlIHRvIGRldGVjdCBwb2ludHMgaW52YXJpYW50IHRvIGNoYW5nZXMgaW4gc2NhbGUgYW5kIG9yaWVudGF0aW9uIChMb3dlIDIwMDQ7IE1pa29sYWpjenlrIGFuZCBTY2htaWQgMjAwNCkgYW5kIHNvbWV3aGF0IGludmFyaWFudCB0byBhZmZpbmUgdHJhbnNmb3JtYXRpb25zIChCYXVtYmVyZyAyMDAwOyBLYWRpciBhbmQgQnJhZHkgMjAwMTsgU2NoYWZmYWxpdHpreSBhbmQgWmlzc2VybWFuIDIwMDI7IE1pa29sYWpjenlrIGV0IGFsLiAyMDA1KS5cIl0sXCIxODc4NjMyOTgyXCI6W1wiYW4gaW1hZ2Ugb3IgbWFwLCBhcyBpbiB0aGUgd29yayBvZiBSb2JlcnRzb24gYW5kIENpcG9sbGEgKDIwMDIpLlwiXSxcIjE5NjUyMzUwMzFcIjpbXCJGb3Igc2l0dWF0aW9ucyB3aGVyZSB0aGUgY2FtZXJhIGNhbGlicmF0aW9uIHBhcmFtZXRlcnMgYXJlIHVua25vd24sIHNlbGYtY2FsaWJyYXRpb24gdGVjaG5pcXVlcywgd2hpY2ggZmlyc3QgZXN0aW1hdGUgYSBwcm9qZWN0aXZlIHJlY29uc3RydWN0aW9uIG9mIHRoZSAzRCB3b3JsZCBhbmQgdGhlbiBwZXJmb3JtIGEgbWV0cmljIHVwZ3JhZGUgaGF2ZSBwcm92ZW4gdG8gYmUgc3VjY2Vzc2Z1bCAoUG9sbGVmZXlzIGV0IGFsLiAxOTk5OyAgUG9sbGVmZXlzIGFuZCBWYW4gR29vbCAyMDAyICkuXCJdLFwiMTk3MTcxOTM5OFwiOltcIklCTSBpcyB0aGUgcHJvY2VzcyBvZiBjcmVhdGluZyB0aHJlZWRpbWVuc2lvbmFsIG1vZGVscyBmcm9tIGEgY29sbGVjdGlvbiBvZiBpbnB1dCBpbWFnZXMgKCBEZWJldmVjIGV0IGFsLiAxOTk2OyAgR3J6ZXN6Y3p1ayAyMDAyOyBQb2xsZWZleXMgZXQgYWwuIDIwMDQpLixOb3RhYmxlIGV4YW1wbGVzIGluY2x1ZGUgdGhlIHNlbWktYXV0b21hdGljIEZhY2FkZSBzeXN0ZW0gKCBEZWJldmVjIGV0IGFsLiAxOTk2ICksIHdoaWNoIHdhcyB1c2VkIHRvIHJlY29uc3RydWN0IGNvbXBlbGxpbmcgZmx5dGhyb3VnaHMgb2YgdGhlIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBCZXJrZWxleSBjYW1wdXM7IGF1dG9tYXRpYyBhcmNoaXRlY3R1cmUgcmVjb25zdHJ1Y3Rpb24gc3lzdGVtcyBzdWNoIGFzIHRoYXQgb2YgRGljayBldCBhbC4gKDIwMDQpOyBhbmQgdGhlIE1JVCBDaXR5IFNjYW5uaW5nIFByb2plY3QgKFRlbGxlciBldCBhbC4gMjAwMyksIHdoaWNoIGNhcHR1cmVkIHRob3VzYW5kcyBvZiBjYWxpYnJhdGVkIGltYWdlcyBmcm9tIGFuIGluc3RydW1lbnRlZCByaWcgdG8gY29uc3RydWN0IGEgM0QgbW9kZWwgb2YgdGhlIE1JVCBjYW1wdXMuLEFzIHN1Y2gsIHdlIHNpZGUtc3RlcCB0aGUgbW9yZSBjaGFsbGVuZ2luZyBwcm9ibGVtcyBvZiByZWNvbnN0cnVjdGluZyBmdWxsIHN1cmZhY2UgbW9kZWxzICggRGViZXZlYyBldCBhbC4gMTk5NjsgIFRlbGxlciBldCBhbC4gMjAwMyksIGxpZ2h0IGZpZWxkcyAoR29ydGxlciBldCBhbC4gMTk5NjsgTGV2b3kgYW5kIEhhbnJhaGFuIDE5OTYpLCBvciBwaXhlbC1hY2N1cmF0ZSB2aWV3IGludGVycG9sYXRpb25zIChDaGVuIGFuZCBXaWxsaWFtcyAxOTkzOyBNY01pbGxhbiBhbmQgQmlzaG9wIDE5OTU7IFNlaXR6IGFuZCBEeWVyIDE5OTY7IFppdG5pY2sgZXQgYWwuIDIwMDQpLlwiXSxcIjE5ODA5MTE3NDdcIjpbXCJXaGlsZSB0aGVzZSBlYXJseSB0ZWNobmlxdWVzIGRldGVjdGVkIGtleXBvaW50cyBhdCBhIHNpbmdsZSBzY2FsZSwgbW9kZXJuIHRlY2huaXF1ZXMgdXNlIGEgcXVhc2ljb250aW51b3VzIHNhbXBsaW5nIG9mIHNjYWxlIHNwYWNlIHRvIGRldGVjdCBwb2ludHMgaW52YXJpYW50IHRvIGNoYW5nZXMgaW4gc2NhbGUgYW5kIG9yaWVudGF0aW9uIChMb3dlIDIwMDQ7IE1pa29sYWpjenlrIGFuZCBTY2htaWQgMjAwNCkgYW5kIHNvbWV3aGF0IGludmFyaWFudCB0byBhZmZpbmUgdHJhbnNmb3JtYXRpb25zIChCYXVtYmVyZyAyMDAwOyBLYWRpciBhbmQgQnJhZHkgMjAwMTsgU2NoYWZmYWxpdHpreSBhbmQgWmlzc2VybWFuIDIwMDI7IE1pa29sYWpjenlrIGV0IGFsLiAyMDA1KS5cIl0sXCIyMDAxODQ2MjQ3XCI6W1wiQSBmb3JlcnVubmVyIHRvIHRoaXMgZmllbGQgd2FzIHRoZSBncm91bmRicmVha2luZyBBc3BlbiBNb3ZpZU1hcCBwcm9qZWN0IChMaXBwbWFuIDE5ODApLCBpbiB3aGljaCB0aG91c2FuZHMgb2YgaW1hZ2VzIG9mIEFzcGVuIENvbG9yYWRvIHdlcmUgY2FwdHVyZWQgZnJvbSBhIG1vdmluZyBjYXIsIHJlZ2lzdGVyZWQgdG8gYSBzdHJlZXQgbWFwIG9mIHRoZSBjaXR5LCBhbmQgc3RvcmVkIG9uIGxhc2VyZGlzYy5cIixcInRvIHRoZSBuZWFyZXN0IG5laWdoYm9yLCB3ZSB1c2UgdGhlIHJhdGlvIHRlc3QgZGVzY3JpYmVkIGJ5IExvd2UgKDIwMDQpOiBmb3IgYSBmZWF0dXJlIGRlc2NyaXB0b3IgaW4gSSAsIHdlIGZpbmQgdGhlIHR3byBuZWFyZXN0IG5laWdoYm9ycyBpbiBKICwgd2l0aCBkaXN0YW5jZXMgZDEgYW5kIGQyLCB0aGVuIGFjY2VwdCB0aGUgbWF0Y2ggaWYgZDEgZDIgPCAwLlwiXSxcIjIwMjYxMDE4NzlcIjpbXCJOb3RhYmxlIGV4YW1wbGVzIGluY2x1ZGUgdGhlIHNlbWktYXV0b21hdGljIEZhY2FkZSBzeXN0ZW0gKERlYmV2ZWMgZXQgYWwuIDE5OTYpLCB3aGljaCB3YXMgdXNlZCB0byByZWNvbnN0cnVjdCBjb21wZWxsaW5nIGZseXRocm91Z2hzIG9mIHRoZSBVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgQmVya2VsZXkgY2FtcHVzOyBhdXRvbWF0aWMgYXJjaGl0ZWN0dXJlIHJlY29uc3RydWN0aW9uIHN5c3RlbXMgc3VjaCBhcyB0aGF0IG9mICBEaWNrIGV0IGFsLiAoMjAwNCkgOyBhbmQgdGhlIE1JVCBDaXR5IFNjYW5uaW5nIFByb2plY3QgKFRlbGxlciBldCBhbC4gMjAwMyksIHdoaWNoIGNhcHR1cmVkIHRob3VzYW5kcyBvZiBjYWxpYnJhdGVkIGltYWdlcyBmcm9tIGFuIGluc3RydW1lbnRlZCByaWcgdG8gY29uc3RydWN0IGEgM0QgbW9kZWwgb2YgdGhlIE1JVCBjYW1wdXMuXCJdLFwiMjAyNzIxODA3M1wiOltcIldoaWxlIExvbmd1ZXQtSGlnZ2lucyAoMTk4MSkgaW50cm9kdWNlZCBhIHN0aWxsIHdpZGVseSB1c2VkIHR3by1mcmFtZSByZWxhdGl2ZSBvcmllbnRhdGlvbiB0ZWNobmlxdWUgaW4gMTk4MSwgdGhlIGRldmVsb3BtZW50IG9mIG11bHRpLWZyYW1lIHN0cnVjdHVyZSBmcm9tIG1vdGlvbiB0ZWNobmlxdWVzLCBpbmNsdWRpbmcgZmFjdG9yaXphdGlvbiBtZXRob2RzIChUb21hc2kgYW5kIEthbmFkZSAxOTkyKSBhbmQgZ2xvYmFsIG9wdGltaXphdGlvbiB0ZWNobmlxdWVzICggU3BldHNha2lzIGFuZCBBbG9pbW9ub3MgMTk5MTsgIFN6ZWxpc2tpIGFuZCBLYW5nIDE5OTQ7IE9saWVuc2lzIDE5OTkpIG9jY3VycmVkIHF1aXRlIGEgYml0IGxhdGVyLlwiXSxcIjIwMzcxMTUyMDlcIjpbXCJTdGFuZm9yZCBDaXR5QmxvY2sgUHJvamVjdCAoUm9tYW4gZXQgYWwuIDIwMDQpLCB3aGljaCB1c2VzIHZpZGVvIG9mIGNpdHkgYmxvY2tzIHRvIGNyZWF0ZSBtdWx0aS1wZXJzcGVjdGl2ZSBzdHJpcCBpbWFnZXM7IGFuZCB0aGUgVXJiYW5TY2FwZSBwcm9qZWN0IG9mICBBa2JhcnphZGVoIGV0IGFsLiAoMjAwNikgLlwiXSxcIjIwNDM5NjI3MjdcIjpbXCJNb3JlIHJlY2VudCB3b3JrIGluIElCUiBoYXMgZm9jdXNlZCBvbiB0ZWNobmlxdWVzIGZvciBuZXcgdmlldyBzeW50aGVzaXMsIGUuZy4sIChDaGVuIGFuZCBXaWxsaWFtcyAxOTkzOyBNY01pbGxhbiBhbmQgQmlzaG9wIDE5OTU7IEdvcnRsZXIgZXQgYWwuIDE5OTY7IExldm95IGFuZCBIYW5yYWhhbiAxOTk2OyBTZWl0eiBhbmQgRHllciAxOTk2OyAgQWxpYWdhIGV0IGFsLiAyMDAzOyAgWml0bmljayBldCBhbC4gMjAwNDsgQnVlaGxlciBldCBhbC4gMjAwMSkuLEluIHRlcm1zIG9mIGFwcGxpY2F0aW9ucywgQWxpYWdhIGV0IGFsLuKAmXMgKDIwMDMpIFNlYSBvZiBJbWFnZXMgd29yayBpcyBwZXJoYXBzIGNsb3Nlc3QgdG8gb3VycyBpbiBpdHMgdXNlIG9mIGEgbGFyZ2UgY29sbGVjdGlvbiBvZiBpbWFnZXMgdGFrZW4gdGhyb3VnaG91dCBhbiBhcmNoaXRlY3R1cmFsIHNwYWNlOyB0aGUgc2FtZSBhdXRob3JzIGFkZHJlc3MgdGhlIHByb2JsZW0gb2YgY29tcHV0aW5nIGNvbnNpc3RlbnQgZmVhdHVyZSBtYXRjaGVzIGFjcm9zcyBtdWx0aXBsZSBpbWFnZXMgZm9yIHRoZSBwdXJwb3NlcyBvZiBJQlIgKCBBbGlhZ2EgZXQgYWwuIDIwMDMgKS5cIl0sXCIyMDQ5Mzk4MTEwXCI6W1wiUmVhbGl0eWZseXRocm91Z2ggKE1jQ3VyZHkgYW5kIEdyaXN3b2xkIDIwMDUpIHVzZXMgaW50ZXJmYWNlIGlkZWFzIHNpbWlsYXIgdG8gb3VycyBmb3IgZXhwbG9yaW5nIHZpZGVvIGZyb20gY2FtY29yZGVycyBpbnN0cnVtZW50ZWQgd2l0aCBHUFMgYW5kIHRpbHQgc2Vuc29ycywgYW5kIEthZG9iYXlhc2hpIGFuZCBUYW5ha2EgKDIwMDUpIHByZXNlbnQgYW4gaW50ZXJmYWNlIGZvciByZXRyaWV2aW5nIGltYWdlcyB1c2luZyBwcm94aW1pdHkgdG8gYSB2aXJ0dWFsIGNhbWVyYS5cIl0sXCIyMDYzMzY2OTk3XCI6W1wiV2hpbGUgTG9uZ3VldC1IaWdnaW5zICgxOTgxKSBpbnRyb2R1Y2VkIGEgc3RpbGwgd2lkZWx5IHVzZWQgdHdvLWZyYW1lIHJlbGF0aXZlIG9yaWVudGF0aW9uIHRlY2huaXF1ZSBpbiAxOTgxLCB0aGUgZGV2ZWxvcG1lbnQgb2YgbXVsdGktZnJhbWUgc3RydWN0dXJlIGZyb20gbW90aW9uIHRlY2huaXF1ZXMsIGluY2x1ZGluZyBmYWN0b3JpemF0aW9uIG1ldGhvZHMgKFRvbWFzaSBhbmQgS2FuYWRlIDE5OTIpIGFuZCBnbG9iYWwgb3B0aW1pemF0aW9uIHRlY2huaXF1ZXMgKFNwZXRzYWtpcyBhbmQgQWxvaW1vbm9zIDE5OTE7IFN6ZWxpc2tpIGFuZCBLYW5nIDE5OTQ7IE9saWVuc2lzIDE5OTkpIG9jY3VycmVkIHF1aXRlIGEgYml0IGxhdGVyLlwiLFwiLCAoQ2hlbiBhbmQgV2lsbGlhbXMgMTk5MzsgTWNNaWxsYW4gYW5kIEJpc2hvcCAxOTk1OyBHb3J0bGVyIGV0IGFsLiAxOTk2OyBMZXZveSBhbmQgSGFucmFoYW4gMTk5NjsgU2VpdHogYW5kIER5ZXIgMTk5NjsgQWxpYWdhIGV0IGFsLiAyMDAzOyBaaXRuaWNrIGV0IGFsLiAyMDA0OyBCdWVobGVyIGV0IGFsLiAyMDAxKS5cIixcIjIwMDMpLCBsaWdodCBmaWVsZHMgKEdvcnRsZXIgZXQgYWwuIDE5OTY7IExldm95IGFuZCBIYW5yYWhhbiAxOTk2KSwgb3IgcGl4ZWwtYWNjdXJhdGUgdmlldyBpbnRlcnBvbGF0aW9ucyAoQ2hlbiBhbmQgV2lsbGlhbXMgMTk5MzsgTWNNaWxsYW4gYW5kIEJpc2hvcCAxOTk1OyBTZWl0eiBhbmQgRHllciAxOTk2OyBaaXRuaWNrIGV0IGFsLlwiXSxcIjIwODA2MjkwMjlcIjpbXCJJQk0gaXMgdGhlIHByb2Nlc3Mgb2YgY3JlYXRpbmcgdGhyZWVkaW1lbnNpb25hbCBtb2RlbHMgZnJvbSBhIGNvbGxlY3Rpb24gb2YgaW5wdXQgaW1hZ2VzIChEZWJldmVjIGV0IGFsLiAxOTk2OyBHcnplc3pjenVrIDIwMDI7IFBvbGxlZmV5cyBldCBhbC4gMjAwNCkuXCJdLFwiMjA4NTI2MTE2M1wiOltcIkFmdGVyIG1hdGNoaW5nIGZlYXR1cmVzIGZvciBhbiBpbWFnZSBwYWlyIChJLCBKICksIHdlIHJvYnVzdGx5IGVzdGltYXRlIGEgZnVuZGFtZW50YWwgbWF0cml4IGZvciB0aGUgcGFpciB1c2luZyBSQU5TQUMgKEZpc2NobGVyIGFuZCBCb2xsZXMgMTk4MSkuXCJdLFwiMjA4NTY3NTAyMlwiOltcIk1hbnkgb2YgdGhlc2UgdGVjaG5pcXVlcyB1c2UgbWV0YWRhdGEsIHN1Y2ggYXMga2V5d29yZHMsIHBob3RvZ3JhcGhlciwgb3IgdGltZSwgYXMgYSBiYXNpcyBvZiBwaG90byBvcmdhbml6YXRpb24gKENvb3BlciBldCBhbC4gMjAwMykuXCJdLFwiMjA5NjYzNjQyMVwiOltcIlRoZSBMT0NBTEUgc3lzdGVtIChOYWFtYW4gZXQgYWwuIDIwMDMpIHVzZXMgcHJveGltaXR5IHRvIHRyYW5zZmVyIGxhYmVscyBiZXR3ZWVuIGdlb3JlZmVyZW5jZWQgcGhvdG9ncmFwaHMuXCJdLFwiMjA5ODM2MjQ1MFwiOltcIk1vcmUgcmVjZW50IHdvcmsgaW4gSUJSIGhhcyBmb2N1c2VkIG9uIHRlY2huaXF1ZXMgZm9yIG5ldyB2aWV3IHN5bnRoZXNpcywgZS5nLiwgKCBDaGVuIGFuZCBXaWxsaWFtcyAxOTkzOyAgTWNNaWxsYW4gYW5kIEJpc2hvcCAxOTk1OyBHb3J0bGVyIGV0IGFsLiAxOTk2OyBMZXZveSBhbmQgSGFucmFoYW4gMTk5NjsgU2VpdHogYW5kIER5ZXIgMTk5NjsgQWxpYWdhIGV0IGFsLiAyMDAzOyBaaXRuaWNrIGV0IGFsLiAyMDA0OyBCdWVobGVyIGV0IGFsLiAyMDAxKS4sQXMgc3VjaCwgd2Ugc2lkZS1zdGVwIHRoZSBtb3JlIGNoYWxsZW5naW5nIHByb2JsZW1zIG9mIHJlY29uc3RydWN0aW5nIGZ1bGwgc3VyZmFjZSBtb2RlbHMgKERlYmV2ZWMgZXQgYWwuIDE5OTY7IFRlbGxlciBldCBhbC4gMjAwMyksIGxpZ2h0IGZpZWxkcyAoR29ydGxlciBldCBhbC4gMTk5NjsgTGV2b3kgYW5kIEhhbnJhaGFuIDE5OTYpLCBvciBwaXhlbC1hY2N1cmF0ZSB2aWV3IGludGVycG9sYXRpb25zICggQ2hlbiBhbmQgV2lsbGlhbXMgMTk5MzsgIE1jTWlsbGFuIGFuZCBCaXNob3AgMTk5NTsgU2VpdHogYW5kIER5ZXIgMTk5NjsgWml0bmljayBldCBhbC4gMjAwNCkuXCJdLFwiMjA5ODc4OTgwMFwiOltcIkhvd2V2ZXIsIGZvciB0cnVlIHdpZGUgYmFzZWxpbmUgbWF0Y2hpbmcsIGkuZS4sIHRoZSBhdXRvbWF0aWMgbWF0Y2hpbmcgb2YgaW1hZ2VzIHRha2VuIGZyb20gd2lkZWx5IGRpZmZlcmVudCB2aWV3cyAoQmF1bWJlcmcgMjAwMDsgU2NoYWZmYWxpdHpreSBhbmQgWmlzc2VybWFuIDIwMDI7IFN0cmVjaGEgZXQgYWwuIDIwMDM7ICBUdXl0ZWxhYXJzIGFuZCBWYW4gR29vbCAyMDA0OyAgTWF0YXMgZXQgYWwuIDIwMDQpLCAod2Vha2x5KSBhZmZpbmUtaW52YXJpYW50IGZlYXR1cmUgZGVzY3JpcHRvcnMgbXVzdCBiZSB1c2VkLlwiXSxcIjIxMDI0ODE4MjhcIjpbXCJuZXNzIHRvIG5vaXNlIChIYXJ0bGV5IDE5OTcpLlwiXSxcIjIxMDQ5NzQ3NTVcIjpbXCJUaGVyZSBpcyBhbHNvIGEgbmVlZCBmb3IgZXZhbHVhdGlvbiBzdHVkaWVzLCBpbiB0aGUgc3Bpcml0IG9mIChTY2hhcnN0ZWluIGFuZCBTemVsaXNraSAyMDAyOyBTZWl0eiBldCBhbC4gMjAwNjsgU3plbGlza2kgZXQgYWwuIDIwMDYpLCB0aGF0IGJlbmNobWFyayB0aGUgYmVzdC1vZi1icmVlZCBTZk0gYWxnb3JpdGhtcyBhZ2FpbnN0IGdyb3VuZCB0cnV0aCBkYXRhc2V0cyBhbmQgZW5jb3VyLVwiXSxcIjIxMDQ5Nzg3MzhcIjpbXCJTb21lIHJlY2VudCBtYXRjaGluZyBhbGdvcml0aG1zICggR3JhdW1hbiBhbmQgRGFycmVsbCAyMDA1OyAgTmlzdGVyIGFuZCBTdGV3ZW5pdXMgMjAwNikgaGF2ZSBkZW1vbnN0cmF0ZWQgdGhlIGFiaWxpdHkgdG8gb3BlcmF0ZSBlZmZlY3RpdmVseSBvbiBkYXRhc2V0cyB0aGF0IGFwcHJvYWNoIHRoaXMgc2NhbGUsIGFsdGhvdWdoIG1vcmUgd29yayBpcyBuZWVkZWQgdG8gaW1wcm92ZSB0aGUgYWNjdXJhY3kgb2YgdGhlc2UgbWV0aG9kcywgZXNwZWNpYWxseSBvbiBJbnRlcm5ldCBwaG90byBjb2xsZWN0aW9ucy5cIl0sXCIyMTA2MzY0MzU4XCI6W1wiVGhlIFNmTSBhcHByb2FjaCB1c2VkIGluIHRoaXMgcGFwZXIgaXMgc2ltaWxhciB0byB0aGF0IG9mIEJyb3duIGFuZCBMb3dlICgyMDA1KSwgd2l0aCBzZXZlcmFsIG1vZGlmaWNhdGlvbnMgdG8gaW1wcm92ZSByb2J1c3RuZXNzIG92ZXIgYSB2YXJpZXR5IG9mIGRhdGEgc2V0cy5cIl0sXCIyMTA5NjM1NTMwXCI6W1wiVGhlIGNhbWVyYSBwYXJhbWV0ZXJzIGZvciB0aGlzIHBhaXIgYXJlIGVzdGltYXRlZCB1c2luZyBOaXN0w6ly4oCZcyBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgZml2ZSBwb2ludCBhbGdvcml0aG0gKE5pc3TDqXIgMjAwNCksMTAgdGhlbiB0aGUgdHJhY2tzIHZpc2libGUgaW4gdGhlIHR3byBpbWFnZXMgYXJlIHRyaWFuZ3VsYXRlZC5cIl0sXCIyMTExMDAzNTk0XCI6W1wiQWZ0ZXIgcmVjb25zdHJ1Y3RpbmcgYSBzY2VuZSwgd2Ugb3B0aW9uYWxseSBkZXRlY3QgM0QgbGluZSBzZWdtZW50cyBpbiB0aGUgc2NlbmUgdXNpbmcgYSB0ZWNobmlxdWUgc2ltaWxhciB0byB0aGF0IG9mICBTY2htaWQgYW5kIFppc3Nlcm1hbiAoMTk5NykgLlwiXSxcIjIxMTExNjk1NzRcIjpbXCJNb3JlIHJlY2VudCB3b3JrIGluIElCUiBoYXMgZm9jdXNlZCBvbiB0ZWNobmlxdWVzIGZvciBuZXcgdmlldyBzeW50aGVzaXMsIGUuZy4sIChDaGVuIGFuZCBXaWxsaWFtcyAxOTkzOyAgTWNNaWxsYW4gYW5kIEJpc2hvcCAxOTk1OyAgR29ydGxlciBldCBhbC4gMTk5NjsgTGV2b3kgYW5kIEhhbnJhaGFuIDE5OTY7IFNlaXR6IGFuZCBEeWVyIDE5OTY7IEFsaWFnYSBldCBhbC4gMjAwMzsgWml0bmljayBldCBhbC4gMjAwNDsgQnVlaGxlciBldCBhbC4gMjAwMSkuLEFzIHN1Y2gsIHdlIHNpZGUtc3RlcCB0aGUgbW9yZSBjaGFsbGVuZ2luZyBwcm9ibGVtcyBvZiByZWNvbnN0cnVjdGluZyBmdWxsIHN1cmZhY2UgbW9kZWxzIChEZWJldmVjIGV0IGFsLiAxOTk2OyBUZWxsZXIgZXQgYWwuIDIwMDMpLCBsaWdodCBmaWVsZHMgKEdvcnRsZXIgZXQgYWwuIDE5OTY7IExldm95IGFuZCBIYW5yYWhhbiAxOTk2KSwgb3IgcGl4ZWwtYWNjdXJhdGUgdmlldyBpbnRlcnBvbGF0aW9ucyAoQ2hlbiBhbmQgV2lsbGlhbXMgMTk5MzsgIE1jTWlsbGFuIGFuZCBCaXNob3AgMTk5NTsgIFNlaXR6IGFuZCBEeWVyIDE5OTY7IFppdG5pY2sgZXQgYWwuIDIwMDQpLlwiXSxcIjIxMTg4Nzc3NjlcIjpbXCJMdWNhcyBhbmQgS2FuYWRlICgxOTgxKSAgaGFkIGRldmVsb3BlZCBhIHBhdGNoIHRyYWNrZXIgYmFzZWQgb24gdHdvZGltZW5zaW9uYWwgaW1hZ2Ugc3RhdGlzdGljcywgd2hpbGUgTW9yYXZlYyAoMTk4MyApaSBudHJvZHVjZWQgdGhlIGNvbmNlcHQgb2Yg4oCcY29ybmVyLWxpa2XigJ0gZmVhdHVyZSBwb2ludHMuXCJdLFwiMjExOTc4MTUyN1wiOltcIk1vcmUgcmVjZW50IHdvcmsgaW4gSUJSIGhhcyBmb2N1c2VkIG9uIHRlY2huaXF1ZXMgZm9yIG5ldyB2aWV3IHN5bnRoZXNpcywgZS5nLiwgKENoZW4gYW5kIFdpbGxpYW1zIDE5OTM7IE1jTWlsbGFuIGFuZCBCaXNob3AgMTk5NTsgR29ydGxlciBldCBhbC4gMTk5NjsgTGV2b3kgYW5kIEhhbnJhaGFuIDE5OTY7IFNlaXR6IGFuZCBEeWVyIDE5OTY7IEFsaWFnYSBldCBhbC4gMjAwMzsgIFppdG5pY2sgZXQgYWwuIDIwMDQ7ICBCdWVobGVyIGV0IGFsLiAyMDAxKS4sQXMgc3VjaCwgd2Ugc2lkZS1zdGVwIHRoZSBtb3JlIGNoYWxsZW5naW5nIHByb2JsZW1zIG9mIHJlY29uc3RydWN0aW5nIGZ1bGwgc3VyZmFjZSBtb2RlbHMgKERlYmV2ZWMgZXQgYWwuIDE5OTY7IFRlbGxlciBldCBhbC4gMjAwMyksIGxpZ2h0IGZpZWxkcyAoR29ydGxlciBldCBhbC4gMTk5NjsgTGV2b3kgYW5kIEhhbnJhaGFuIDE5OTYpLCBvciBwaXhlbC1hY2N1cmF0ZSB2aWV3IGludGVycG9sYXRpb25zIChDaGVuIGFuZCBXaWxsaWFtcyAxOTkzOyBNY01pbGxhbiBhbmQgQmlzaG9wIDE5OTU7IFNlaXR6IGFuZCBEeWVyIDE5OTY7ICBaaXRuaWNrIGV0IGFsLiAyMDA0ICkuXCJdLFwiMjEyMTAyOTM2OVwiOltcIlRyaWFuZ3VsYXRlZCBNb3JwaHMgVG8gY3JlYXRlIGEgdHJpYW5ndWxhdGVkIG1vcnBoIGJldHdlZW4gdHdvIGNhbWVyYXMgQ2ogYW5kIENrLCB3ZSBmaXJzdCBjb21wdXRlIGEgMkQgRGVsYXVuYXkgdHJpYW5ndWxhdGlvbiBmb3IgaW1hZ2UgSWogdXNpbmcgdGhlIHByb2plY3Rpb25zIG9mIFBvaW50cyhDaiApIGludG8gSWogLiBUaGUgcHJvamVjdGlvbnMgb2YgTGluZXMoQ2ogKSBpbnRvIElqIGFyZSBpbXBvc2VkIGFzIGVkZ2UgY29uc3RyYWludHMgb24gdGhlIHRyaWFuZ3VsYXRpb24gKCBDaGV3IDE5ODcgKS5cIl0sXCIyMTIzMzQ3Mjg5XCI6W1wiVGhlc2UgZWZmb3J0cyBpbmNsdWRlIHRoZSA0RCBDaXRpZXMgcHJvamVjdCAoU2NoaW5kbGVyIGV0IGFsLiAyMDA3KSwgd2hpY2ggYWltcyB0byBjcmVhdGUgYSBzcGF0aWFsdGVtcG9yYWwgbW9kZWwgb2YgQXRsYW50YSBmcm9tIGhpc3RvcmljYWwgcGhvdG9ncmFwaHM7IHRoZVwiXSxcIjIxMjgwMTc2NjJcIjpbXCJTb21lIHJlY2VudCBtYXRjaGluZyBhbGdvcml0aG1zIChHcmF1bWFuIGFuZCBEYXJyZWxsIDIwMDU7ICBOaXN0ZXIgYW5kIFN0ZXdlbml1cyAyMDA2ICkgaGF2ZSBkZW1vbnN0cmF0ZWQgdGhlIGFiaWxpdHkgdG8gb3BlcmF0ZSBlZmZlY3RpdmVseSBvbiBkYXRhc2V0cyB0aGF0IGFwcHJvYWNoIHRoaXMgc2NhbGUsIGFsdGhvdWdoIG1vcmUgd29yayBpcyBuZWVkZWQgdG8gaW1wcm92ZSB0aGUgYWNjdXJhY3kgb2YgdGhlc2UgbWV0aG9kcywgZXNwZWNpYWxseSBvbiBJbnRlcm5ldCBwaG90byBjb2xsZWN0aW9ucy5cIl0sXCIyMTMwMTAzNTIwXCI6W1wiSWYgZmVhdHVyZXMgYXJlIGJlaW5nIHRyYWNrZWQgZnJvbSBmcmFtZSB0byBmcmFtZSwgYW4gYWZmaW5lIGV4dGVuc2lvbiBvZiB0aGUgYmFzaWMgTHVjYXMtS2FuYWRlIHRyYWNrZXIgaGFzIGJlZW4gc2hvd24gdG8gcGVyZm9ybSB3ZWxsIChTaGkgYW5kIFRvbWFzaSAxOTk0KS5cIl0sXCIyMTMxODQ2ODk0XCI6W1wiT25lIHBhcnRpY3VsYXIgc3lzdGVtIHJlbGF0ZWQgdG8gb3VyIHdvcmsgaXMgVmlkZW8gR29vZ2xlIChTaXZpYyBhbmQgWmlzc2VybWFuIDIwMDMpIChub3QgdG8gYmUgY29uZnVzZWQgd2l0aCBHb29nbGXigJlzIG93biB2aWRlbyBzZWFyY2gpLCB3aGljaCBhbGxvd3MgYSB1c2VyIHRvIHNlbGVjdCBhIHF1ZXJ5IG9iamVjdCBpbiBvbmUgZnJhbWUgb2YgdmlkZW8gYW5kIGVmZmljaWVudGx5IGZpbmQgdGhhdCBvYmplY3QgaW4gb3RoZXIgZnJhbWVzLlwiLFwiVGhpcyB0eXBlIG9mIHNlYXJjaCwgYXBwbGllZCB0byB2aWRlbyBpbiAoU2l2aWMgYW5kIFppc3Nlcm1hbiAyMDAzKSwgaXMgY29tcGxlbWVudGFyeSB0bywgYW5kIGhhcyBjZXJ0YWluIGFkdmFudGFnZXMgb3Zlciwga2V5d29yZCBzZWFyY2guXCJdLFwiMjEzNDkyMTk3NFwiOltcIlJlYWxpdHlmbHl0aHJvdWdoIChNY0N1cmR5IGFuZCBHcmlzd29sZCAyMDA1KSB1c2VzIGludGVyZmFjZSBpZGVhcyBzaW1pbGFyIHRvIG91cnMgZm9yIGV4cGxvcmluZyB2aWRlbyBmcm9tIGNhbWNvcmRlcnMgaW5zdHJ1bWVudGVkIHdpdGggR1BTIGFuZCB0aWx0IHNlbnNvcnMsIGFuZCAgS2Fkb2JheWFzaGkgYW5kIFRhbmFrYSAoMjAwNSkgIHByZXNlbnQgYW4gaW50ZXJmYWNlIGZvciByZXRyaWV2aW5nIGltYWdlcyB1c2luZyBwcm94aW1pdHkgdG8gYSB2aXJ0dWFsIGNhbWVyYS5cIl0sXCIyMTM3NjU4ODAwXCI6W1wiV2hpbGUgTG9uZ3VldC1IaWdnaW5zICgxOTgxKSBpbnRyb2R1Y2VkIGEgc3RpbGwgd2lkZWx5IHVzZWQgdHdvLWZyYW1lIHJlbGF0aXZlIG9yaWVudGF0aW9uIHRlY2huaXF1ZSBpbiAxOTgxLCB0aGUgZGV2ZWxvcG1lbnQgb2YgbXVsdGktZnJhbWUgc3RydWN0dXJlIGZyb20gbW90aW9uIHRlY2huaXF1ZXMsIGluY2x1ZGluZyBmYWN0b3JpemF0aW9uIG1ldGhvZHMgKFRvbWFzaSBhbmQgS2FuYWRlIDE5OTIpIGFuZCBnbG9iYWwgb3B0aW1pemF0aW9uIHRlY2huaXF1ZXMgKFNwZXRzYWtpcyBhbmQgQWxvaW1vbm9zIDE5OTE7IFN6ZWxpc2tpIGFuZCBLYW5nIDE5OTQ7IE9saWVuc2lzIDE5OTkpIG9jY3VycmVkIHF1aXRlIGEgYml0IGxhdGVyLlwiXSxcIjIxMzg4MzUxNDFcIjpbXCJXaGlsZSBMb25ndWV0LUhpZ2dpbnMgKDE5ODEpIGludHJvZHVjZWQgYSBzdGlsbCB3aWRlbHkgdXNlZCB0d28tZnJhbWUgcmVsYXRpdmUgb3JpZW50YXRpb24gdGVjaG5pcXVlIGluIDE5ODEsIHRoZSBkZXZlbG9wbWVudCBvZiBtdWx0aS1mcmFtZSBzdHJ1Y3R1cmUgZnJvbSBtb3Rpb24gdGVjaG5pcXVlcywgaW5jbHVkaW5nIGZhY3Rvcml6YXRpb24gbWV0aG9kcyAoVG9tYXNpIGFuZCBLYW5hZGUgMTk5MikgYW5kIGdsb2JhbCBvcHRpbWl6YXRpb24gdGVjaG5pcXVlcyAoU3BldHNha2lzIGFuZCBBbG9pbW9ub3MgMTk5MTsgU3plbGlza2kgYW5kIEthbmcgMTk5NDsgT2xpZW5zaXMgMTk5OSkgb2NjdXJyZWQgcXVpdGUgYSBiaXQgbGF0ZXIuXCJdLFwiMjEzOTM5MDE5OVwiOltcImRpbWVuc2lvbmFsIGltYWdlIHN0YXRpc3RpY3MsIHdoaWxlIE1vcmF2ZWMgKDE5ODMpIGludHJvLVwiXSxcIjIxNDA3ODkwMzVcIjpbXCJUaGVyZSBpcyBhbHNvIGEgbmVlZCBmb3IgZXZhbHVhdGlvbiBzdHVkaWVzLCBpbiB0aGUgc3Bpcml0IG9mIChTY2hhcnN0ZWluIGFuZCBTemVsaXNraSAyMDAyOyBTZWl0eiBldCBhbC4gMjAwNjsgU3plbGlza2kgZXQgYWwuIDIwMDYpLCB0aGF0IGJlbmNobWFyayB0aGUgYmVzdC1vZi1icmVlZCBTZk0gYWxnb3JpdGhtcyBhZ2FpbnN0IGdyb3VuZCB0cnV0aCBkYXRhc2V0cyBhbmQgZW5jb3VyLVwiXSxcIjIxNDEyODI5MjBcIjpbXCJWZXJnYXV3ZW4gYW5kIFZhbiBHb29sIGhhdmUgZGV2ZWxvcGVkIGEgc2ltaWxhciBhcHByb2FjaCAoIFZlcmdhdXdlbiBhbmQgVmFuIEdvb2wgMjAwNiApIGFuZCBhcmUgaG9zdGluZyBhIHdlYi1iYXNlZCByZWNvbnN0cnVjdGlvbiBzZXJ2aWNlIGZvciB1c2UgaW4gY3VsdHVyYWwgaGVyaXRhZ2UgYXBwbGljYXRpb25zNS5cIl0sXCIyMTUxMTAzOTM1XCI6W1wiV2hpbGUgdGhlc2UgZWFybHkgdGVjaG5pcXVlcyBkZXRlY3RlZCBrZXlwb2ludHMgYXQgYSBzaW5nbGUgc2NhbGUsIG1vZGVybiB0ZWNobmlxdWVzIHVzZSBhIHF1YXNpY29udGludW91cyBzYW1wbGluZyBvZiBzY2FsZSBzcGFjZSB0byBkZXRlY3QgcG9pbnRzIGludmFyaWFudCB0byBjaGFuZ2VzIGluIHNjYWxlIGFuZCBvcmllbnRhdGlvbiAoTG93ZSAyMDA0OyBNaWtvbGFqY3p5ayBhbmQgU2NobWlkIDIwMDQpIGFuZCBzb21ld2hhdCBpbnZhcmlhbnQgdG8gYWZmaW5lIHRyYW5zZm9ybWF0aW9ucyAoQmF1bWJlcmcgMjAwMDsgS2FkaXIgYW5kIEJyYWR5IDIwMDE7IFNjaGFmZmFsaXR6a3kgYW5kIFppc3Nlcm1hbiAyMDAyOyBNaWtvbGFqY3p5ayBldCBhbC5cIixcIkluIG91ciBvd24gUGhvdG8gVG91cmlzbSByZXNlYXJjaCwgd2UgaGF2ZSBiZWVuIHVzaW5nIExvd2XigJlzIFNjYWxlIEludmFyaWFudCBGZWF0dXJlIFRyYW5zZm9ybSAoU0lGVCkgKExvd2UgMjAwNCksIHdoaWNoIGlzIHdpZGVseSB1c2VkIGJ5IG90aGVycyBhbmQgaXMga25vd24gdG8gcGVyZm9ybSB3ZWxsIG92ZXIgYSByZWFzb25hYmxlIHJhbmdlIG9mIHZpZXdwb2ludCB2YXJpYXRpb24uXCIsXCJXZSB1c2UgdGhlIFNJRlQga2V5cG9pbnQgZGV0ZWN0b3IgKExvd2UgMjAwNCksIGJlY2F1c2Ugb2YgaXRzIGdvb2QgaW52YXJpYW5jZSB0byBpbWFnZSB0cmFuc2Zvcm1hdGlvbnMuXCIsXCJXZSB1c2UgdGhlIFNJRlQga2V5cG9pbnQgZGV0ZWN0b3IgKExvd2UgMjAwNCksIGJlY2F1c2Ugb2YgaXRzIGdvb2QgaW52YXJpYW5jZSB0byBpbWFnZSB0cmFuc2Zvcm1hdGlvbnMuIE90aGVyIGZlYXR1cmUgZGV0ZWN0b3JzIGNvdWxkIGFsc28gcG90ZW50aWFsbHkgYmUgdXNlZDsgc2V2ZXJhbCBkZXRlY3RvcnMgYXJlIGNvbXBhcmVkIGluIHRoZSB3b3JrIG9mIE1pa29sYWpjenlrIGV0IGFsLiAoMjAwNSkuIEluIGFkZGl0aW9uIHRvIHRoZSBrZXlwb2ludCBsb2NhdGlvbnMgdGhlbXNlbHZlcywgU0lGVCBwcm92aWRlcyBhXCJdLFwiMjE1NTMwNTEyN1wiOltcIlBob3RvQ29tcGFzIChOYWFtYW4gZXQgYWwuIDIwMDQpIGNsdXN0ZXJzIGltYWdlcyBiYXNlZCBvbiB0aW1lIGFuZCBsb2NhdGlvbi5cIl0sXCIyMTU2NTk4NjAyXCI6W1wiUGhvdG8gVG91cmlzbSAoU25hdmVseSBldCBhbC4gMjAwNikuXCIsXCJMaXZlIExhYnMsIGJhc2VkIGxhcmdlbHkgb24gKFNuYXZlbHkgZXQgYWwuIDIwMDYpLlwiXSxcIjIxNTk1MzYxNzVcIjpbXCJUaGVyZSBhcmUgbWFueSB0ZWNobmlxdWVzIGFuZCBjb21tZXJjaWFsIHByb2R1Y3RzIGZvciBicm93c2luZyBzZXRzIG9mIHBob3RvcyBhbmQgbXVjaCByZXNlYXJjaCBvbiB0aGUgc3ViamVjdCBvZiBob3cgcGVvcGxlIHRlbmQgdG8gb3JnYW5pemUgcGhvdG9zLCBlLmcuLCAoIFJvZGRlbiBhbmQgV29vZCAyMDAzICkuXCJdLFwiMjE2MDAxNDAwMVwiOltcIlRoZXJlIGlzIGFsc28gYSBuZWVkIGZvciBldmFsdWF0aW9uIHN0dWRpZXMsIGluIHRoZSBzcGlyaXQgb2YgKFNjaGFyc3RlaW4gYW5kIFN6ZWxpc2tpIDIwMDI7IFNlaXR6IGV0IGFsLiAyMDA2OyBTemVsaXNraSBldCBhbC4gMjAwNiksIHRoYXQgYmVuY2htYXJrIHRoZSBiZXN0LW9mLWJyZWVkIFNmTSBhbGdvcml0aG1zIGFnYWluc3QgZ3JvdW5kIHRydXRoIGRhdGFzZXRzIGFuZCBlbmNvdXItXCJdLFwiMjE2NTQ5NzQ5NVwiOltcIldoaWxlIHRoZXNlIGVhcmx5IHRlY2huaXF1ZXMgZGV0ZWN0ZWQga2V5cG9pbnRzIGF0IGEgc2luZ2xlIHNjYWxlLCBtb2Rlcm4gdGVjaG5pcXVlcyB1c2UgYSBxdWFzaWNvbnRpbnVvdXMgc2FtcGxpbmcgb2Ygc2NhbGUgc3BhY2UgdG8gZGV0ZWN0IHBvaW50cyBpbnZhcmlhbnQgdG8gY2hhbmdlcyBpbiBzY2FsZSBhbmQgb3JpZW50YXRpb24gKExvd2UgMjAwNDsgTWlrb2xhamN6eWsgYW5kIFNjaG1pZCAyMDA0KSBhbmQgc29tZXdoYXQgaW52YXJpYW50IHRvIGFmZmluZSB0cmFuc2Zvcm1hdGlvbnMgKEJhdW1iZXJnIDIwMDA7IEthZGlyIGFuZCBCcmFkeSAyMDAxOyBTY2hhZmZhbGl0emt5IGFuZCBaaXNzZXJtYW4gMjAwMjsgTWlrb2xhamN6eWsgZXQgYWwuIDIwMDUpLlwiLFwiLCB0aGUgYXV0b21hdGljIG1hdGNoaW5nIG9mIGltYWdlcyB0YWtlbiBmcm9tIHdpZGVseSBkaWZmZXJlbnQgdmlld3MgKEJhdW1iZXJnIDIwMDA7IFNjaGFmZmFsaXR6a3kgYW5kIFppc3Nlcm1hbiAyMDAyOyBTdHJlY2hhIGV0IGFsLiAyMDAzOyBUdXl0ZWxhYXJzIGFuZCBWYW4gR29vbCAyMDA0OyBNYXRhcyBldCBhbC4gMjAwNCksICh3ZWFrbHkpIGFmZmluZS1pbnZhcmlhbnQgZmVhdHVyZSBkZXNjcmlwdG9ycyBtdXN0IGJlIHVzZWQuXCJdLFwiMjE2NTk0OTQyNVwiOltcIlRvIGFzc2lzdCB0aGUgdXNlciwgd2UgZXN0aW1hdGUgdGhlIOKAnHVw4oCdIG9yIGdyYXZpdHkgdmVjdG9yIHVzaW5nIHRoZSBtZXRob2Qgb2YgU3plbGlza2kgKDIwMDYpLlwiXSxcIjIxNjgxMDI0MTRcIjpbXCJJbiBwYXJ0aWN1bGFyLCB0aGUgV29ybGQtV2lkZSBNZWRpYSBFeGNoYW5nZSAoV1dNWCkgKFRveWFtYSBldCBhbC4gMjAwMykgYXJyYW5nZXMgaW1hZ2VzIG9uIGFuIGludGVyYWN0aXZlIDJEIG1hcC5cIixcIiwgdGhyb3VnaCBzeXN0ZW1zIGxpa2UgV1dNWCAoVG95YW1hIGV0IGFsLiAyMDAzKSBvciBXaW5kb3dzIExpdmUgTG9jYWwxNCksIHRoaXMgbWFudWFsIHN0ZXAgd2lsbCBubyBsb25nZXIgYmUgbmVjZXNzYXJ5LlwiXSxcIjIxNjk1NzYyMzFcIjpbXCJTdGFuZm9yZCBDaXR5QmxvY2sgUHJvamVjdCAoUm9tw6FuIGV0IGFsLiAyMDA0KSwgd2hpY2ggdXNlcyB2aWRlbyBvZiBjaXR5IGJsb2NrcyB0byBjcmVhdGUgbXVsdGktcGVyc3BlY3RpdmUgc3RyaXAgaW1hZ2VzOyBhbmQgdGhlIFVyYmFuU2NhcGUgcHJvamVjdCBvZiBBa2JhcnphZGVoIGV0IGFsLiAoMjAwNikuIE91ciB3b3JrIGRpZmZlcnMgZnJvbSB0aGVzZSBwcmV2aW91cyBhcHByb2FjaGVzIGluIHRoYXQgd2Ugb25seSByZWNvbnN0cnVjdCBhIHNwYXJzZSAzRCBtb2RlbCBvZiB0aGUgd29ybGQsIHNpbmNlIG91ciBlbXBoYXNpcyBpcyBtb3JlIG9uIGNyZWF0aW5nIHNtb290aCAzRCB0cmFuc2l0aW9ucyBiZXR3ZWVuIHBob3RvZ3JhcGhzIHJhdGhlciB0aGFuIGludGVyYWN0aXZlbHkgdmlzdWFsaXppbmcgYSAzRCB3b3JsZC5cIl0sXCIyMTcxMDExMjUxXCI6W1wiVGhlIG1hc3NpdmUgYW1vdW50IG9mIGRhdGEgYXZhaWxhYmxlIG9uIHRoZSBJbnRlcm5ldCBpcyBzdGFydGluZyB0byBiZSB1c2VkIHRvIGFkZHJlc3Mgc2V2ZXJhbCBwcm9ibGVtcyBpbiBjb21wdXRlciBncmFwaGljcyBhbmQgY29tcHV0ZXIgdmlzaW9uLCBpbmNsdWRpbmcgb2JqZWN0IGNhdGVnb3J5IHJlY29nbml0aW9uLCAoRmVyZ3VzIGV0IGFsLiAyMDA1KSwgc2NlbmUgY29tcGxldGlvbiAoIEhheXMgYW5kIEVmcm9zIDIwMDcgKSwgYW5kIG9iamVjdCBpbnNlcnRpb24gKExhbG9uZGUgZXQgYWwuIDIwMDcpLlwiXSxcIjIxNzEzOTM3MTJcIjpbXCJIb3dldmVyLCBmb3IgdHJ1ZSB3aWRlIGJhc2VsaW5lIG1hdGNoaW5nLCBpLmUuLCB0aGUgYXV0b21hdGljIG1hdGNoaW5nIG9mIGltYWdlcyB0YWtlbiBmcm9tIHdpZGVseSBkaWZmZXJlbnQgdmlld3MgKEJhdW1iZXJnIDIwMDA7IFNjaGFmZmFsaXR6a3kgYW5kIFppc3Nlcm1hbiAyMDAyOyAgU3RyZWNoYSBldCBhbC4gMjAwMzsgIFR1eXRlbGFhcnMgYW5kIFZhbiBHb29sIDIwMDQ7IE1hdGFzIGV0IGFsLiAyMDA0KSwgKHdlYWtseSkgYWZmaW5lLWludmFyaWFudCBmZWF0dXJlIGRlc2NyaXB0b3JzIG11c3QgYmUgdXNlZC5cIl0sXCIyMTcyMTg4MzE3XCI6W1wiV2hpbGUgdGhlc2UgZWFybHkgdGVjaG5pcXVlcyBkZXRlY3RlZCBrZXlwb2ludHMgYXQgYSBzaW5nbGUgc2NhbGUsIG1vZGVybiB0ZWNobmlxdWVzIHVzZSBhIHF1YXNpY29udGludW91cyBzYW1wbGluZyBvZiBzY2FsZSBzcGFjZSB0byBkZXRlY3QgcG9pbnRzIGludmFyaWFudCB0byBjaGFuZ2VzIGluIHNjYWxlIGFuZCBvcmllbnRhdGlvbiAoTG93ZSAyMDA0OyBNaWtvbGFqY3p5ayBhbmQgU2NobWlkIDIwMDQpIGFuZCBzb21ld2hhdCBpbnZhcmlhbnQgdG8gYWZmaW5lIHRyYW5zZm9ybWF0aW9ucyAoQmF1bWJlcmcgMjAwMDsgS2FkaXIgYW5kIEJyYWR5IDIwMDE7IFNjaGFmZmFsaXR6a3kgYW5kIFppc3Nlcm1hbiAyMDAyOyBNaWtvbGFqY3p5ayBldCBhbC5cIl0sXCIyMTcyMTkxOTAzXCI6W1wiVGhlIG1hc3NpdmUgYW1vdW50IG9mIGRhdGEgYXZhaWxhYmxlIG9uIHRoZSBJbnRlcm5ldCBpcyBzdGFydGluZyB0byBiZSB1c2VkIHRvIGFkZHJlc3Mgc2V2ZXJhbCBwcm9ibGVtcyBpbiBjb21wdXRlciBncmFwaGljcyBhbmQgY29tcHV0ZXIgdmlzaW9uLCBpbmNsdWRpbmcgb2JqZWN0IGNhdGVnb3J5IHJlY29nbml0aW9uLCAoRmVyZ3VzIGV0IGFsLiAyMDA1KSwgc2NlbmUgY29tcGxldGlvbiAoSGF5cyBhbmQgRWZyb3MgMjAwNyksIGFuZCBvYmplY3QgaW5zZXJ0aW9uIChMYWxvbmRlIGV0IGFsLlwiXSxcIjIyMzg0MDIzNTRcIjpbXCJNb3JlIHJlY2VudCB3b3JrIGluIElCUiBoYXMgZm9jdXNlZCBvbiB0ZWNobmlxdWVzIGZvciBuZXcgdmlldyBzeW50aGVzaXMsIGUuZy4sIChDaGVuIGFuZCBXaWxsaWFtcyAxOTkzOyBNY01pbGxhbiBhbmQgQmlzaG9wIDE5OTU7IEdvcnRsZXIgZXQgYWwuIDE5OTY7IExldm95IGFuZCBIYW5yYWhhbiAxOTk2OyBTZWl0eiBhbmQgRHllciAxOTk2OyBBbGlhZ2EgZXQgYWwuIDIwMDM7IFppdG5pY2sgZXQgYWwuIDIwMDQ7ICBCdWVobGVyIGV0IGFsLiAyMDAxICkuXCJdLFwiMjMzOTIyNjg1MlwiOltcIikgVGhpcyBpcywgaW4gZWZmZWN0LCBhIGZvcm0gb2YgYWN0aXZlIHZpc2lvbiAoQWxvaW1vbm9zIDE5OTM7IEJsYWtlIGFuZCBZdWlsbGUgMTk5MykgYnV0IG9uIGEgbWFzc2l2ZSBzY2FsZSwgd2hlcmUgcGVvcGxlIGluIHRoZSB3b3JsZCBwb3B1bGF0aW9uIGFyZSB0aGUgYWN0aXZlIGFnZW50cyBmaWxsaW5nIGluIHRoZSBtaXNzaW5nIGRhdGEuXCJdLFwiMjQyNzg4MTE1M1wiOltcIk5leHQsIGZvciBlYWNoIHBhaXIgb2YgaW1hZ2VzLCB3ZSBtYXRjaCBrZXlwb2ludCBkZXNjcmlwdG9ycyBiZXR3ZWVuIHRoZSBwYWlyLCB1c2luZyB0aGUgYXBwcm94aW1hdGUgbmVhcmVzdCBuZWlnaGJvcnMgKEFOTikga2QtdHJlZSBwYWNrYWdlIG9mIEFyeWEgZXQgYWwuICgxOTk4KS4gVG8gbWF0Y2gga2V5cG9pbnRzIGJldHdlZW4gdHdvIGltYWdlcyBJIGFuZCBKICwgd2UgY3JlYXRlIGEga2QtdHJlZSBmcm9tIHRoZSBmZWF0dXJlIGRlc2NyaXB0b3JzIGluIEogLCB0aGVuLCBmb3IgZWFjaCBmZWF0dXJlIGluIEkgd2UgZmluZCB0aGUgbmVhcmVzdCBuZWlnaGJvciBpbiBKIHVzaW5nIHRoZSBrZC10cmVlLlwiXSxcIjI1OTgzMTk2NDdcIjpbXCJoZWFkLW1vdW50ZWQgZGlzcGxheSwgc3VjaCBhIGNhcGFiaWxpdHkgY291bGQgb2ZmZXIgYSBoaWdobHkgcG9ydGFibGUsIGNvbXB1dGVyLXZpc2lvbi1iYXNlZCBhdWdtZW50ZWQgcmVhbGl0eSBzeXN0ZW0gKEZlaW5lciBldCBhbC4gMTk5NykuXCJdfSxcIlBSXCI6WzIxNTExMDM5MzUsMjEyOTQwNDczNywyMDMzODE5MjI3LDIxNTY1OTg2MDIsMjA4NTI2MTE2MywyMTYzNDQ2Nzk0LDIxMjQzMTMxODcsMjAyNzI1NDE4MCwyMTA1MzAzMzU0LDIwMDg3MDY2NTksMjEwOTYzNTUzMCwyMTYwMDE0MDAxLDIwODA2MjkwMjksMjExOTYwNTYyMiwyMDAxNzkwMTM4LDE2Nzc0MDk5MDQsMjA5OTQ0MzcxNiwyMDU5NDk2MTM3LDIwNjQzODE3NzAsMjExNTM2MjYyMCwyMTUxMTAzOTM1LDIxMjk0MDQ3MzcsMjAzMzgxOTIyNywyMTU2NTk4NjAyLDIwODUyNjExNjMsMjE2MzQ0Njc5NCwyMTI0MzEzMTg3LDIwMjcyNTQxODAsMjEwNTMwMzM1NCwyMDA4NzA2NjU5LDIxMDk2MzU1MzAsMjE2MDAxNDAwMSwyMDgwNjI5MDI5LDIxMTk2MDU2MjIsMjAwMTc5MDEzOCwxNjc3NDA5OTA0LDIwOTk0NDM3MTYsMjA1OTQ5NjEzNywyMDY0MzgxNzcwLDIxMTUzNjI2MjBdLFwiQU5GXCI6W3tcIkZOXCI6XCJOb2FoXCIsXCJMTlwiOlwiU25hdmVseVwiLFwiU1wiOjF9LHtcIkZOXCI6XCJTdGV2ZW4gTS5cIixcIkxOXCI6XCJTZWl0elwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJSaWNoYXJkXCIsXCJMTlwiOlwiU3plbGlza2lcIixcIlNcIjozfV0sXCJCVlwiOlwiSW50ZXJuYXRpb25hbCBKb3VybmFsIG9mIENvbXB1dGVyIFZpc2lvblwiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJLbHV3ZXIgQWNhZGVtaWMgUHVibGlzaGVyc1wifSJ9LHsibG9ncHJvYiI6LTE2LjM5NCwia2VzRW50aXR5SWQiOjE2NDU2NDMsIklkIjoyMTAyMzUxNjU3LCJUaSI6ImFuIGFuYWx5c2lzIG9mIHRoZSBza3lwZSBwZWVyIHRvIHBlZXIgaW50ZXJuZXQgdGVsZXBob255IHByb3RvY29sIiwiWSI6MjAwNiwiRCI6IjIwMDYtMDQtMDEiLCJSSWQiOlsyMTE4NDI4MTkzLDIwOTc3MjU2NjUsMjE1ODA0OTgyMSwyNTY5NDAzNzAzLDE1Nzc4NDAwNjUsMjE2ODAxNDUzNiwyMTMyODg0ODAyLDQ3MTE5OTI4XSwiQUEiOlt7IkF1TiI6InNhbG1hbiBhIGJhc2V0In0seyJBdU4iOiJoZW5uaW5nIHNjaHVsenJpbm5lIn1dLCJGIjpbeyJGTiI6InVzZXIgaW5mb3JtYXRpb24ifSx7IkZOIjoibG9naW4ifSx7IkZOIjoibmV0d29yayBhZGRyZXNzIHRyYW5zbGF0aW9uIn0seyJGTiI6ImNvZGVjIn0seyJGTiI6InZvaWNlIG92ZXIgaXAifSx7IkZOIjoicGVlciB0byBwZWVyIn0seyJGTiI6ImludGVybmV0IHByaXZhY3kifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkFuIEFuYWx5c2lzIG9mIHRoZSBTa3lwZSBQZWVyLXRvLVBlZXIgSW50ZXJuZXQgVGVsZXBob255IFByb3RvY29sXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTE4LFwiSW52ZXJ0ZWRJbmRleFwiOntcIlNreXBlXCI6WzAsMTUsNDgsNTksODgsMTExXSxcImlzXCI6WzEsODFdLFwiYVwiOlsyLDQ1LDEwNCwxMTNdLFwicGVlci10by1wZWVyXCI6WzNdLFwiVm9JUFwiOls0LDM0XSxcImNsaWVudFwiOls1XSxcImRldmVsb3BlZFwiOls2XSxcImluXCI6WzcsNDRdLFwiMjAwM1wiOls4XSxcImJ5XCI6WzksODMsOTJdLFwidGhlXCI6WzEwLDg3LDk0XSxcIm9yZ2FuaXphdGlvblwiOlsxMV0sXCJ0aGF0XCI6WzEyLDE3XSxcImNyZWF0ZWRcIjpbMTNdLFwiS2F6YWEuXCI6WzE0XSxcImNsYWltc1wiOlsxNl0sXCJpdFwiOlsxOF0sXCJjYW5cIjpbMTldLFwid29ya1wiOlsyMF0sXCJhbG1vc3RcIjpbMjFdLFwic2VhbWxlc3NseVwiOlsyMl0sXCJhY3Jvc3NcIjpbMjNdLFwiTkFUc1wiOlsyNF0sXCJhbmRcIjpbMjUsMjcsNDAsNTMsNjUsNzMsOTEsOTddLFwiZmlyZXdhbGxzXCI6WzI2XSxcImhhc1wiOlsyOF0sXCJiZXR0ZXJcIjpbMjldLFwidm9pY2VcIjpbMzBdLFwicXVhbGl0eVwiOlszMV0sXCJ0aGFuXCI6WzMyXSxcIm90aGVyXCI6WzMzXSxcImNsaWVudHMuXCI6WzM1XSxcIkl0XCI6WzM2XSxcImVuY3J5cHRzXCI6WzM3XSxcImNhbGxzXCI6WzM4LDk5XSxcImVuZC10by1lbmQsXCI6WzM5XSxcInN0b3Jlc1wiOls0MV0sXCJ1c2VyXCI6WzQyXSxcImluZm9ybWF0aW9uXCI6WzQzXSxcImRlY2VudHJhbGl6ZWRcIjpbNDZdLFwiZmFzaGlvbi5cIjpbNDddLFwiYWxzb1wiOls0OV0sXCJzdXBwb3J0c1wiOls1MF0sXCJpbnN0YW50XCI6WzUxXSxcIm1lc3NhZ2luZ1wiOls1Ml0sXCJjb25mZXJlbmNpbmcuXCI6WzU0XSxcIlRoaXNcIjpbNTVdLFwicGFwZXJcIjpbNTZdLFwiYW5hbHl6ZXNcIjpbNTddLFwia2V5XCI6WzU4XSxcImZ1bmN0aW9uc1wiOls2MF0sXCJzdWNoXCI6WzYxXSxcImFzXCI6WzYyXSxcImxvZ2luLFwiOls2M10sXCJOQVRcIjpbNjRdLFwiZmlyZXdhbGxcIjpbNjZdLFwidHJhdmVyc2FsLFwiOls2N10sXCJjYWxsXCI6WzY4XSxcImVzdGFibGlzaG1lbnQsXCI6WzY5XSxcIm1lZGlhXCI6WzcwXSxcInRyYW5zZmVyLFwiOls3MV0sXCJjb2RlY3MsXCI6WzcyXSxcImNvbmZlcmVuY2luZ1wiOls3NF0sXCJ1bmRlclwiOls3NV0sXCJ0aHJlZVwiOls3Nl0sXCJkaWZmZXJlbnRcIjpbNzddLFwibmV0d29ya1wiOls3OCw4OV0sXCJzZXR1cHMuXCI6Wzc5XSxcIkFuYWx5c2lzXCI6WzgwXSxcInBlcmZvcm1lZFwiOls4Ml0sXCJjYXJlZnVsXCI6Wzg0XSxcInN0dWR5XCI6Wzg1XSxcIm9mXCI6Wzg2LDEwMCwxMDZdLFwidHJhZmZpY1wiOls5MF0sXCJpbnRlcmNlcHRpbmdcIjpbOTNdLFwic2hhcmVkXCI6Wzk1XSxcImxpYnJhcnlcIjpbOTZdLFwic3lzdGVtXCI6Wzk4XSxcIlNreXBlLlwiOlsxMDFdLFwiV2VcIjpbMTAyXSxcImRyYXdcIjpbMTAzXSxcIm1hcFwiOlsxMDVdLFwic3VwZXJcIjpbMTA3XSxcIm5vZGVzXCI6WzEwOF0sXCJ0b1wiOlsxMDldLFwid2hpY2hcIjpbMTEwXSxcImVzdGFibGlzaGVzXCI6WzExMl0sXCJUQ1BcIjpbMTE0XSxcImNvbm5lY3Rpb25cIjpbMTE1XSxcImF0XCI6WzExNl0sXCJsb2dpbi5cIjpbMTE3XX19LFwiU1wiOlt7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy94cGwvZnJlZWFic19hbGwuanNwP3JlbG9hZD10cnVlJmlzbnVtYmVyPTQxNDY2NTMmYXJudW1iZXI9NDE0Njk2NSZjb3VudD0zNTYmaW5kZXg9MzA5XCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cxLmNzLmNvbHVtYmlhLmVkdS9+c2FsbWFuL3B1YmxpY2F0aW9ucy9za3lwZTFfNC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5jb2x1bWJpYS5lZHUvfnNhbG1hbi9wdWJsaWNhdGlvbnMvc2t5cGUxXzQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9kcG5tLnBvc3RlY2guYWMua3IvbWNzL3BhcGVycy9Ta3lwZV9BbmFseXNpcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cuYWI5aWwubmV0L2NyeXB0by9za3lwZV9wcm90b2NvbF9hbmFseXNpcy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy51Y3NiLmVkdS9+cmF2ZW5iZW4vY2xhc3Nlcy8yNzYtZjA3L3BhcGVycy9za3lwZS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5lZWNzLmhhcnZhcmQuZWR1L35tZW1hL2NvdXJzZXMvY3MyNjQvcGFwZXJzL3NreXBlLWluZm9jb20yMDA2LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmR5bngubmV0L0FTVEVSSVNLL0RPQ1MvUERGL2N1Y3MtMDM5LTA0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmtlbnQuZWR1L35qYXZlZC9jbGFzcy1QMlAxM0YvcGFwZXJzLTIwMTAvcDAwLXNreXBlLTA0MTIwMTcucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuaXQudXUuc2UvZWR1L2NvdXJzZS9ob21lcGFnZS9kYXRha29tMi92dDA4L3NlbWluYXJzL3BhcGVycy9za3lwZV9pbmZvY29tMDYucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3NkLnVvYy5nci9+aHk1NTQvcGFwZXJzL3NreXBlLWluZm9jb20yMDA2LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL21pY2UuY3MuY29sdW1iaWEuZWR1L2dldFRlY2hyZXBvcnQucGhwP3RlY2hyZXBvcnRJRD05OSZmb3JtYXQ9cGRmJlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8va2lyaWxzLm9yZy9za3lwZS9zdHVmZi93ZWJzaXRlcy93d3cuY3MuY29sdW1iaWEuZWR1L35zYWxtYW4vcHVibGljYXRpb25zL2N1Y3MtMDM5LTA0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL2FjYWRlbWljY29tbW9ucy5jb2x1bWJpYS5lZHUvZG9pLzEwLjc5MTYvRDhENTEwMlIvZG93bmxvYWRcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cucmVzZWFyY2hnYXRlLm5ldC9wcm9maWxlL0hlbm5pbmdfU2NodWx6cmlubmUyL3B1YmxpY2F0aW9uLzE5NTc2NDFfQW5fQW5hbHlzaXNfb2ZfdGhlX1NreXBlX1BlZXItdG8tUGVlcl9JbnRlcm5ldF9UZWxlcGhvbnlfUHJvdG9jb2wvbGlua3MvMDJlN2U1MThjMTc1NmE4MjZjMDAwMDAwLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmV0Y3MuaXBmdy5lZHUvfmx1by9jcGV0NTgxL0xlY3R1cmVzL3NreXBlLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbmV0LnQtbGFicy50dS1iZXJsaW4uZGUvdGVhY2hpbmcvc3MwOS9JUl9zZW1pbmFyL3BhcGVycy9jdWNzLTAzOS0wNC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3VzZXJzLmluZm9ybWF0aWsuaGF3LWhhbWJ1cmcuZGUvfnNjaG1pZHQvaXQvc3VwL2JzLWFzcHBpLTA0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vYm91cmJvbi51c2MuZWR1L2NzNjk0LXMwOS9wYXBlcnMvc2t5cGUucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cucmFtb25taWxsYW4uY29tL2RvY3VtZW50b3MvYmlibGlvZ3JhZmlhL1NreXBlUDJQUHJvdG9jb2xBbmFseXNpcy5wZGZcIn1dLFwiVkZOXCI6XCJJRUVFIEludGVybmF0aW9uYWwgQ29uZmVyZW5jZSBDb21wdXRlciBhbmQgQ29tbXVuaWNhdGlvbnNcIixcIlZTTlwiOlwiSUNDQ1wiLFwiRlBcIjoxLFwiTFBcIjoxMSxcIkRPSVwiOlwiMTAuMTEwOS9JTkZPQ09NLjIwMDYuMzEyXCIsXCJDQ1wiOntcIjQ3MTE5OTI4XCI6W1wiV2UgY29uamVjdHVyZSB0aGF0IFNDIHVzZXMgYSB2YXJpYXRpb24gb2YgdGhlIFNUVU4gWzVdIGFuZCBUVVJOIFsxOV0gcHJvdG9jb2xzIHRvIGRldGVybWluZSB0aGUgdHlwZSBvZiBOQVQgYW5kIGZpcmV3YWxsIGl0IGlzIGJlaGluZC5cIl0sXCIyMDk3NzI1NjY1XCI6W1wiVW5saWtlIG1hbnkgSW50ZXJuZXQgcHJvdG9jb2xzLCBsaWtlIFNJUCBbNV0gYW5kIEhUVFAgWzZdLCB0aGVyZSBpcyBubyBkZWZhdWx0IFRDUCBvciBVRFAgbGlzdGVuaW5nIHBvcnQuXCJdLFwiMjEzMjg4NDgwMlwiOltcIkZvciBhIHRocmVlIHBhcnR5IGNvbmZlcmVuY2UsIFNreXBlIGRvZXMgbm90IGRvIGZ1bGwgbWVzaCBjb25mZXJlbmNpbmcgWzE3XS5cIl0sXCIyMTU4MDQ5ODIxXCI6W1wiQ2hvcmQgWzIwXSwgYW5vdGhlciBwZWVyLXRvLXBlZXIgcHJvdG9jb2wsIGhhcyBhIGZpbmdlciB0YWJsZSwgd2hpY2ggaXQgdXNlcyB0byBxdWlja2x5IGZpbmQgYSBub2RlLlwiXSxcIjIxNjgwMTQ1MzZcIjpbXCJ3b3JrLiBUaGVyZSBhcmUgdGhyZWUgbWFpbiBlbnRpdGllczogc3VwZXJub2Rlcywgb3JkaW5hcnkgbm9kZXMsIGFuZCB0aGUgbG9naW4gc2VydmVyLiBOQVQgYW5kIGZpcmV3YWxsIHRyYXZlcnNhbCBhcmUgaW1wb3J0YW50IFNreXBlIGZ1bmN0aW9ucy4gV2UgYmVsaWV2ZSB0aGF0IGVhY2ggU2t5cGUgbm9kZSB1c2VzIGEgdmFyaWFudCBvZiBTVFVOIFsxXSBwcm90b2NvbCB0byBkZXRlcm1pbmUgdGhlIHR5cGUgb2YgTkFUIGFuZCBmaXJld2FsbCBpdCBpcyBiZWhpbmQuIFdlIGFsc28gYmVsaWV2ZSB0aGF0IHRoZXJlIGlzIG5vIGdsb2JhbCBOQVQgYW5kIGZpcmV3YWxsIHRyYXZlcnNhbCBzZXJ2ZXIgYmVjYXVzZSBpZiB0aGVyZSB3YXMgb25lLCB0aGUgU2t5cGUgbm9kZSB3b3VsZCBoYXZlIGV4Y2hhbmdlXCIsXCJhZ2UuIFNreXBlIHVzZXMgMTUzNiB0byAyMDQ4IGJpdCBSU0EgdG8gbmVnb3RpYXRlIHN5bW1ldHJpYyBBRVMga2V5cy4gVXNlciBwdWJsaWMga2V5cyBhcmUgY2VydGlmaWVkIGJ5IFNreXBlIHNlcnZlciBhdCBsb2dpbi7igJ0gMi42IE5BVCBhbmQgRmlyZXdhbGwgV2UgY29uamVjdHVyZSB0aGF0IFNDIHVzZXMgYSB2YXJpYXRpb24gb2YgdGhlIFNUVU4gWzFdIGFuZCBUVVJOIFsxOF0gcHJvdG9jb2xzIHRvIGRldGVybWluZSB0aGUgdHlwZSBvZiBOQVQgYW5kIGZpcmV3YWxsIGl0IGlzIGJlaGluZC4gV2UgYWxzbyBjb25qZWN0dXJlIHRoYXQgU0MgcmVmcmVzaGVzIHRoaXMgaW5mb3JtYXRpb24gcGVyaW9kaWNhbGx5LiBUaGlzIGluZm9ybWF0aW9uIGlzIGFsc28gc3RvcmVkIGluIHRoZSBXaW5kb3dzIHJlZ2lcIixcInRoYXQgdGhlcmUgYXJlIGF0IGxlYXN0IHR3byB3YXlzIGluIHdoaWNoIGEgU0MgY2FuIGRldGVybWluZSB0aGlzIGluZm9ybWF0aW9uLiBPbmUgcG9zc2liaWxpdHkgaXMgdGhhdCBpdCBjYW4gZGV0ZXJtaW5lIHRoaXMgaW5mb3JtYXRpb24gYnkgZXhjaGFuZ2luZyBtZXNzYWdlcyB3aXRoIGl0cyBTTiB1c2luZyBhIHZhcmlhbnQgb2YgdGhlIFNUVU4gWzFdIHByb3RvY29sLiBUaGUgb3RoZXIgcG9zc2liaWxpdHkgaXMgdGhhdCBkdXJpbmcgbG9naW4sIGEgU0Mgc2VuZHMgYW5kIHBvc3NpYmx5IHJlY2VpdmVzIGRhdGEgZnJvbSBzb21lIG5vZGVzIGFmdGVyIGl0IGhhcyBtYWRlIGEgVENQIGNvbm5lY3Rpb24gd2l0aCB0aGUgU04uIFdlIGNvbmplY3R1cmUgdGhhdCBhdCB0aGlzIHBvaW50LCBTQyB1c2VzIGlcIixcImFuIE1TTiBhbmQgWWFob28gSU0gY2xpZW50czsgc2Vjb25kLCBpdCBjYW4gd29yayBhbG1vc3Qgc2VhbWxlc3NseSBiZWhpbmQgTkFUcyBhbmQgZmlyZXdhbGxzOyBhbmQgdGhpcmQsIGl0IGlzIGV4dHJlbWVseSBlYXN5IHRvIGluc3RhbGwgYW5kIHVzZS4gV2UgYmVsaWV2ZSB0aGF0IFNreXBlIGNsaWVudCB1c2VzIGl0cyB2ZXJzaW9uIG9mIFNUVU4gWzFdIHByb3RvY29sIHRvIGRldGVybWluZSB0aGUgdHlwZSBvZiBOQVQgb3IgZmlyZXdhbGwgaXQgaXMgYmVoaW5kLiBUaGUgTkFUIGFuZCBmaXJld2FsbCB0cmF2ZXJzYWwgdGVjaG5pcXVlcyBvZiBTa3lwZSBhcmUgc2ltaWxhciB0byBtYW55IGV4aXN0aW5nIGFwcGxpY2F0aW9ucyBzdWNoIGFzIG5ldHdvcmsgZ2FtZXMuIEl0IGlzIGJ5IHRoZSByYW5kb21cIl0sXCIyNTY5NDAzNzAzXCI6W1wibWx5IGNob29zZXMgdGhlIHBvcnQgbnVtYmVyIHVwb24gaW5zdGFsbGF0aW9uLiBJbiBhZGRpdGlvbiwgU0MgYWxzbyBvcGVucyBUQ1AgbGlzdGVuaW5nIHBvcnRzIGF0IHBvcnQgbnVtYmVyIDgwIChIVFRQIHBvcnQpLCBhbmQgcG9ydCBudW1iZXIgNDQzIChIVFRQUyBwb3J0KS4gVW5saWtlIG1hbnkgSW50ZXJuZXQgcHJvdG9jb2xzLCBsaWtlIFNJUCBbNV0gYW5kIEhUVFAgWzZdLCB0aGVyZSBpcyBubyBkZWZhdWx0IFRDUCBvciBVRFAgbGlzdGVuaW5nIHBvcnQuIEZpZ3VyZSAxNSBzaG93cyBhIHNuYXBzaG90IG9mIHRoZSBTa3lwZSBjb25uZWN0aW9uIGRpYWxvZyBib3guIFRoaXMgZmlndXJlIHNob3dzIHRoZSBwb3J0cyBvbiB3aGljaCBhIFNDIGxpc3RlbnMgZm9yIGluY29taW5nIGNvbm5lY3Rpb25zLlwiXX0sXCJQUlwiOlsxNTUwNzY4NDk2LDIxMTg0MjgxOTMsMjA5NzcyNTY2NSwyMTY3ODk4NDE0LDIxNjMwNTkxOTAsMjE3MDY1NTQxMSwyMTIwMjk4NTYxLDIxNTgwNDk4MjEsMjA5OTA0MDQ1MSwyMTUwNzc5NTE3LDIxMTkyNDUxMDYsMjE2ODAxNDUzNiwxMjI1OTE4NDEsMTYxMTc3Nzg2NiwyMzk5NjQyMDksMjEyOTI5MjA4MCwyMTM0NTMzNTc0LDI3OTg1MjQ4NDcsMjEyMTUzMTY5MSwyMTIyMjI2MzQ3LDE1NTA3Njg0OTYsMjExODQyODE5MywyMDk3NzI1NjY1LDIxNjc4OTg0MTQsMjE2MzA1OTE5MCwyMTcwNjU1NDExLDIxMjAyOTg1NjEsMjE1ODA0OTgyMSwyMDk5MDQwNDUxLDIxNTA3Nzk1MTcsMjExOTI0NTEwNiwyMTY4MDE0NTM2LDEyMjU5MTg0MSwxNjExNzc3ODY2LDIzOTk2NDIwOSwyMTI5MjkyMDgwLDIxMzQ1MzM1NzQsMjc5ODUyNDg0NywyMTIxNTMxNjkxLDIxMjIyMjYzNDddLFwiQU5GXCI6W3tcIkZOXCI6XCJTYWxtYW4gQWJkdWxcIixcIkxOXCI6XCJCYXNldFwiLFwiU1wiOjF9LHtcIkZOXCI6XCJIZW5uaW5nIEcuXCIsXCJMTlwiOlwiU2NodWx6cmlubmVcIixcIlNcIjoyfV0sXCJCVlwiOlwiUHJvY2VlZGluZ3MgSUVFRSBJTkZPQ09NIDIwMDYuIDI1VEggSUVFRSBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gQ29tcHV0ZXIgQ29tbXVuaWNhdGlvbnNcIixcIkJUXCI6XCJwXCIsXCJQQlwiOlwiRGVwYXJ0bWVudCBvZiBDb21wdXRlciBTY2llbmNlLCBDb2x1bWJpYSBVbml2ZXJzaXR5XCJ9In0seyJsb2dwcm9iIjotMTYuMzk1LCJrZXNFbnRpdHlJZCI6MTY0NzUzNCwiSWQiOjE1ODMwNTkwOTcsIlRpIjoidGhlIGZpbHRlciBidWJibGUgd2hhdCB0aGUgaW50ZXJuZXQgaXMgaGlkaW5nIGZyb20geW91IiwiWSI6MjAxMSwiRCI6IjIwMTEtMDUtMTIiLCJBQSI6W3siQXVOIjoiZWxpIHBhcmlzZXIifV0sIkYiOlt7IkZOIjoiY2xpY2thYmxlIn0seyJGTiI6ImluZ2VudWl0eSJ9LHsiRk4iOiJmaWx0ZXIgYnViYmxlIn0seyJGTiI6ImZsaXJ0aW5nIn0seyJGTiI6InBlcnNvbmFsbHkgaWRlbnRpZmlhYmxlIGluZm9ybWF0aW9uIn0seyJGTiI6Imtub3cgaG93In0seyJGTiI6InBlcnNvbmFsaXphdGlvbiJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoiYWR2ZXJ0aXNpbmcifSx7IkZOIjoiZW5naW5lZXJpbmcifV0sIkUiOiJ7XCJETlwiOlwiVGhlIEZpbHRlciBCdWJibGU6IFdoYXQgdGhlIEludGVybmV0IElzIEhpZGluZyBmcm9tIFlvdVwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE2MjIsXCJJbnZlcnRlZEluZGV4XCI6e1wiQXV0aG9yXCI6WzBdLFwiUSZBXCI6WzFdLFwid2l0aFwiOlsyLDIzLDE4MCwzMzksMzU5LDU4Nyw2ODksMTQxNCwxNDc5LDE0ODMsMTUxNV0sXCJFbGlcIjpbM10sXCJQYXJpc2VyXCI6WzRdLFwiUTpcIjpbNSwxMjIsMjk1LDQyNSw1NjMsNzAyLDc3OSw5MDMsMTA1NywxMzA4LDE0MjhdLFwiV2hhdFwiOls2LDQyNiwxMDY2LDExNjAsMTMwOV0sXCJpc1wiOls3LDk0LDE0MywxOTQsMzExLDQyNyw0ODQsNTg1LDU5Niw2NjAsNjc5LDY4Nyw3MjEsNzc2LDgxNiw5NTMsMTE0NiwxMTY0LDEyMjgsMTM3MSwxNDMxLDE1MDcsMTUzOV0sXCJhXCI6WzgsMjgsMjEyLDIzMSwyNDgsMjcxLDM2NSw0MDAsNDIzLDUxMSw1MjMsNTI2LDU0NSw4MDAsODI2LDgzNSw4NTMsODk4LDk2NSwxMDI3LDEwNzIsMTEwNSwxMTQ5LDEyMTQsMTIyOSwxMjQ3LDE0MTksMTQzMywxNDYyLDE1OTgsMTYxOF0sXCJGaWx0ZXJcIjpbOV0sXCJCdWJibGU/XCI6WzEwXSxcIkE6XCI6WzExLDE3MCwzMDMsNDMzLDU3Miw3MTEsNzk0LDk0NiwxMDc0LDEzMjQsMTQ0OF0sXCJXZXJlXCI6WzEyLDczMF0sXCJ1c2VkXCI6WzEzXSxcInRvXCI6WzE0LDQzLDYzLDcyLDg5LDEyMCwxMzQsMTUzLDE1OSwyMjMsMjM4LDMwNiwzMjYsMzM2LDM0NywzNTYsMzg0LDM5NCw0NDAsNDk0LDUwNCw1NDgsNjQ0LDY0Nyw2NTMsNjk5LDc0NCw3NDksODc2LDg3OCw5MjYsOTQwLDk2Miw5NzksOTkxLDk5NiwxMDAzLDEwMTcsMTAyMiwxMDMyLDEwMzYsMTA0MCwxMDYyLDEwOTYsMTEyNiwxMTU4LDExNzMsMTE4NSwxMjAyLDEyMDcsMTIxMCwxMjY3LDEyNzgsMTMwMiwxMzMzLDEzNTMsMTM5OSwxNDEyLDE0ODYsMTQ5NiwxNTI5LDE1NTYsMTU1OSwxNTY2LDE2MDZdLFwidGhpbmtpbmdcIjpbMTVdLFwib2ZcIjpbMTYsOTksMTA4LDE4NiwyMTQsMjc5LDMyOSwzOTAsMzkyLDYxOSw2MjMsNjI3LDc2NCw3NzQsNzgzLDgzMiw4MzgsODYyLDg5MSw4OTYsMTIxNiwxMjQ5LDEyODcsMTUxMywxNjIwXSxcInRoZVwiOlsxNywzNiw0Nyw2NiwxMjUsMTg3LDE5MSwyMDAsMjM5LDMwOCwzNDksMzcyLDM4MCwzODYsNDI4LDQ4OCw0OTksNTM1LDU4Myw1OTAsNjAzLDYwNyw2MzYsNjU4LDY3Nyw2ODQsNzI2LDgwMyw4MTIsODg5LDkyNCw5MjgsOTc2LDk5MiwxMDExLDEwOTMsMTEyMCwxMTU1LDExNjYsMTE3MCwxMTc3LDExODMsMTIxNywxMjc1LDEyOTUsMTMwNiwxMzExLDEzMzUsMTMzOCwxMzgxLDE0MjQsMTQzNywxNDUyLDE1MDUsMTU1NF0sXCJJbnRlcm5ldFwiOlsxOCw0MjksNTg0LDE0NTMsMTUwNiwxNTU1XSxcImxpa2VcIjpbMTksMjUsMTI0LDM4MSw1NTIsNTcwLDc1NCwxMjYzLDE1MTYsMTU3Ml0sXCJhblwiOlsyMCw0NjAsNDY0LDg0NiwxMDA4LDEwODRdLFwiZW5vcm1vdXNcIjpbMjFdLFwibGlicmFyeSxcIjpbMjJdLFwic2VydmljZXNcIjpbMjQsNzY2XSxcIkdvb2dsZVwiOlsyNiw0MCw0MzUsNDUxLDYwMiw2MTYsNjcxLDc1NSwxMzE1LDEzNzBdLFwicHJvdmlkaW5nXCI6WzI3XSxcInVuaXZlcnNhbFwiOlsyOV0sXCJtYXAuXCI6WzMwXSxcIkJ1dFwiOlszMSwxODQsNDc1LDUzMyw1ODksNjc1LDc0MCwxNDA5LDE0ODldLFwidGhhdHNcIjpbMzJdLFwibm9cIjpbMzNdLFwibG9uZ2VyXCI6WzM0XSxcInJlYWxseVwiOlszNSwxOTgsMjc1LDExNjIsMTU1Ml0sXCJjYXNlLlwiOlszN10sXCJTaXRlc1wiOlszOF0sXCJmcm9tXCI6WzM5LDc5LDg1LDQzMSw5NDJdLFwiYW5kXCI6WzQxLDQ2LDExMywxMTcsMTUxLDIzNCwzMjAsMzQzLDM3OSw0NDcsNTQ0LDYwMCw2NTAsNzQ3LDc1Niw4NTUsOTc1LDExOTAsMTE5NiwxMjEzLDEzMTYsMTMxOCwxNDU5LDE0ODIsMTQ5OCwxNTMyLDE1MzcsMTU0MywxNTg3LDE1OTBdLFwiRmFjZWJvb2tcIjpbNDIsNzU3LDg0OSw5NzIsMTMxN10sXCJZYWhvb1wiOls0NCwxMzE5XSxcIk5ld3NcIjpbNDUsMjA3XSxcIk5ld1wiOls0OCw3MzRdLFwiWW9ya1wiOls0OV0sXCJUaW1lc1wiOls1MF0sXCJhcmVcIjpbNTEsMTU3LDI0NywyNTgsMjg5LDM4Miw0NzIsNDkxLDQ5OCw1NjAsNTY4LDc1OCw3NjcsMTA4OSwxMzEwXSxcIm5vd1wiOls1MiwxMTgxLDE0MDNdLFwiaW5jcmVhc2luZ2x5XCI6WzUzXSxcInBlcnNvbmFsaXplZFwiOls1NCwzOTZdLFwiYmFzZWRcIjpbNTUsMTIyMl0sXCJvblwiOls1NiwyMDUsMjYwLDM1Miw0NTksNTI5LDU4Miw2NDksODQwLDg0NSw5NzEsMTAyNiwxMDQzLDExMDQsMTIyNF0sXCJ5b3VyXCI6WzU3LDMzMiw1MzAsODA4LDgyMCw4NzksMTE0MywxMzkyLDE0MDAsMTQ0Nl0sXCJ3ZWJcIjpbNTgsMTYxOV0sXCJoaXN0b3J5LFwiOls1OV0sXCJ0aGV5XCI6WzYwLDY4LDI1NSw0NjcsNDc2LDkxNSw5MjEsOTg2LDExODAsMTIzNiwxMjcyLDE2MDJdLFwiZmlsdGVyXCI6WzYxLDkyLDE5MiwzMDksMTE3MV0sXCJpbmZvcm1hdGlvblwiOls2MiwxMDAsMTMyLDE0MiwxNzYsMzY3LDQ4Miw2ODUsNzUyLDg5Miw5MDEsOTg5LDExNTZdLFwic2hvd1wiOls2NCwxMzAsMjI0XSxcInlvdVwiOls2NSw3MCwxMDQsMjAzLDIxMCwyNTcsMjY1LDI3MywzMjQsMzM0LDM0NSwzNTQsNDEwLDUxNSw1OTksNzMyLDczNyw4MDUsODE0LDgyMiw5MzQsOTY5LDExMDBdLFwic3R1ZmZcIjpbNjddLFwidGhpbmtcIjpbNjksMjU2LDE1MDBdLFwid2FudFwiOls3MSwzMjUsMzQ2XSxcInNlZS5cIjpbNzMsOTBdLFwiVGhhdFwiOls3NF0sXCJjYW5cIjpbNzUsMTM3LDQxOSw0NjgsNTA5LDgyMyw4NzAsODg1LDExMzNdLFwiYmVcIjpbNzYsMTM4LDQyMCw1MTAsMTEyNCwxMzI2LDEzNDgsMTM5NiwxNTk1XSxcInZlcnlcIjpbNzcsNjEzLDc2MSwxMjMwLDEzNDksMTM3NCwxNTA4XSxcImRpZmZlcmVudFwiOls3OCwyNDksNDQzLDYxNCwxNTMwXSxcIndoYXRcIjpbODAsODYsMjE1LDI2MSwyNjYsNjI1LDYzMSw2NDYsOTY4LDExODcsMTE5MywxNDE1LDE0NjhdLFwiZXZlcnlvbmVcIjpbODFdLFwiZWxzZVwiOls4Ml0sXCJzZWVzXCI6WzgzXSxcIm9yXCI6Wzg0LDIwOCwyNTksNTU0LDU2Niw1NzYsNjkyLDY5NCw3ODgsODY0LDExMDcsMTEwOSwxMzU1LDE1NzYsMTYwMF0sXCJ3ZVwiOls4Nyw2MTAsNjcwLDY4MSwxMTYxLDExODgsMTE5NCwxMjA1LDEyMjYsMTI4OSwxNDc0LDE1NTFdLFwibmVlZFwiOls4OCwzMzUsMzU1LDEwMzEsMTA0NiwxMTYzLDEyMDAsMTI5OSwxNTUzLDE1NjRdLFwiWW91clwiOls5MSwxNDI5XSxcImJ1YmJsZVwiOls5MywxOTMsMzEwLDExNzJdLFwidGhpc1wiOls5NSwxMDYsMzAxLDUwOCw3NzIsNzgxLDgzOSwxMDY0XSxcInVuaXF1ZSxcIjpbOTZdLFwicGVyc29uYWxcIjpbOTcsMzY2LDg4MCw5MTksMTA1NV0sXCJ1bml2ZXJzZVwiOls5OF0sXCJjcmVhdGVkXCI6WzEwMV0sXCJqdXN0XCI6WzEwMiwxNjEwXSxcImZvclwiOlsxMDMsNDQ0LDYzNCw3MTksNzk5LDk1MSw5NTUsMTAwMCwxMDgyLDExNjUsMTE3NiwxMjU0LDEzNTEsMTM2NiwxNDIzLDE0MzZdLFwiYnlcIjpbMTA1LDMxNCw4MTksMTI0NiwxNTgxLDE1OTddLFwiYXJyYXlcIjpbMTA3XSxcInBlcnNvbmFsaXppbmdcIjpbMTA5LDU2OV0sXCJmaWx0ZXJzLlwiOlsxMTBdLFwiSXRzXCI6WzExMSwxNzEsMzE3LDEyMzhdLFwiaW52aXNpYmxlXCI6WzExMl0sXCJpdHNcIjpbMTE0LDQ0Miw2NzMsNjk3LDc0MSw5NTYsMTUwMSwxNTIyXSxcImJlY29taW5nXCI6WzExNSwzMThdLFwibW9yZVwiOlsxMTYsMTE4LDg5OSwxMDUxLDEzOTcsMTQ2NCwxNDkxLDE1NDIsMTU0NF0sXCJkaWZmaWN1bHRcIjpbMTE5LDY5OF0sXCJlc2NhcGUuXCI6WzEyMV0sXCJJXCI6WzEyMywxNDUsNjAxLDE0OTldLFwiaWRlYVwiOlsxMjZdLFwidGhhdFwiOlsxMjcsMTU2LDE3OCwxOTUsMjI3LDI0MSwyODcsMzIyLDQ3MCw0OTAsNTkyLDY2MSw2ODAsNjg2LDc3MSw4MDIsODUxLDkwOCw5ODIsOTg4LDEwMTMsMTA0OCwxMDkyLDExMzEsMTE2OCwxMjM1LDEyNDEsMTI3NCwxMzU4LDE0MTYsMTQ0MywxNDkwLDE1NDEsMTU0NywxNTYwLDE2MDldLFwid2Vic2l0ZXNcIjpbMTI4XSxcIm1pZ2h0XCI6WzEyOV0sXCJtZVwiOlsxMzEsMTA4NywxNDcwXSxcInJlbGV2YW50XCI6WzEzMywzNDEsMzYwLDEzOThdLFwibXlcIjpbMTM1LDE2MSw3ODYsNzkwLDEwMzQsMTAzOCwxMDQxXSxcImludGVyZXN0c2l0XCI6WzEzNl0sXCJvdmVyd2hlbG1pbmdcIjpbMTM5XSxcImhvd1wiOlsxNDAsNDU1LDQ3OSw2MzksMTI3MF0sXCJtdWNoXCI6WzE0MV0sXCJhdmFpbGFibGVcIjpbMTQ0LDExNTddLFwiYWxyZWFkeVwiOlsxNDYsOTQ4XSxcIm9ubHlcIjpbMTQ3LDY4MiwxMTUyLDEyNjBdLFwid2F0Y2hcIjpbMTQ4LDEzNTRdLFwiVFZcIjpbMTQ5XSxcInNob3dzXCI6WzE1MCw2NjZdLFwibGlzdGVuXCI6WzE1Ml0sXCJyYWRpb1wiOlsxNTRdLFwicHJvZ3JhbXNcIjpbMTU1XSxcImtub3duXCI6WzE1OCw3OThdLFwiaGF2ZVwiOlsxNjAsMjExLDI3NiwzMjcsNzk3LDExODIsMTIwOCwxMjkwXSxcInNhbWVcIjpbMTYyLDUzNiw2MDQsNjA4XSxcInBvbGl0aWNhbFwiOlsxNjMsNjk1LDE0MzQsMTQ4NF0sXCJsZWFuaW5nLlwiOlsxNjRdLFwiV2hhdHNcIjpbMTY1XSxcInNvXCI6WzE2NiwxMTMwLDE1MjRdLFwiYmFkXCI6WzE2N10sXCJhYm91dFwiOlsxNjgsMTkwLDUxOSw1NDEsNjIxLDcwOCw3MjUsMTMyMSwxNDcxXSxcInRoaXM/XCI6WzE2OSw1NzFdLFwidHJ1ZTpcIjpbMTcyXSxcIldldmVcIjpbMTczXSxcImFsd2F5c1wiOlsxNzQsMTI0NCwxNDUwXSxcInNlbGVjdGVkXCI6WzE3NV0sXCJzb3VyY2VzXCI6WzE3N10sXCJhY2NvcmRcIjpbMTc5XSxcIm91clwiOlsxODEsNjU1LDY2Miw2OTAsOTE4LDk0M10sXCJvd25cIjpbMTgyXSxcInZpZXdzLlwiOlsxODNdLFwib25lXCI6WzE4NSw1NzQsNTkxLDc0Miw4NjFdLFwiY3JlZXB5XCI6WzE4OF0sXCJ0aGluZ3NcIjpbMTg5LDI4OCw0ODksNTAwLDEyMjVdLFwid2VyZVwiOlsxOTYsNjI5LDEyNzMsMTYxNF0sXCJub3RcIjpbMTk3LDEwNjksMTA3OCwxMzYwLDE1MjNdLFwiZG9pbmdcIjpbMTk5XSxcInNlbGVjdGluZy5cIjpbMjAxXSxcIldoZW5cIjpbMjAyLDY1N10sXCJ0dXJuXCI6WzIwNF0sXCJGb3hcIjpbMjA2LDIyMF0sXCJNU05CQyxcIjpbMjA5XSxcInNlbnNlXCI6WzIxMywyNzgsMTI0OCwxMzYzXSxcInRoZWlyXCI6WzIxNiw3MDksMTAwMSwxMDU0LDEzMjIsMTU4Ml0sXCJlZGl0b3JpYWxcIjpbMjE3XSxcInNlbnNpYmlsaXR5XCI6WzIxOF0sXCJpczpcIjpbMjE5XSxcImlzbnRcIjpbMjIxLDIzNl0sXCJnb2luZ1wiOlsyMjIsMjM3XSxcIm1hbnlcIjpbMjI1XSxcInN0b3JpZXNcIjpbMjI2LDU0MF0sXCJwb3J0cmF5XCI6WzIyOCwyNDJdLFwiT2JhbWFcIjpbMjI5XSxcImluXCI6WzIzMCwyODUsMzcwLDQwNiw0NDgsNjM1LDk5NCwxMDEwLDEwNTMsMTExOSwxMzM3LDEzNjEsMTM4MywxMzkxLDE0MDcsMTQyNiwxNjE3XSxcImdvb2RcIjpbMjMyLDE1MDldLFwibGlnaHQsXCI6WzIzM10sXCJNU05CQ1wiOlsyMzVdLFwib25lc1wiOlsyNDBdLFwiaGltXCI6WzI0M10sXCJiYWRseS5cIjpbMjQ0XSxcIlBlcnNvbmFsaXplZFwiOlsyNDVdLFwiZmlsdGVyc1wiOlsyNDZdLFwic3Rvcnk6XCI6WzI1MF0sXCJZb3VcIjpbMjUxLDg0Miw4ODQsOTA0XSxcImRvbnRcIjpbMjUyLDI3NCwxMTkxLDExOTddLFwia25vd1wiOlsyNTMsNDU0LDExOTVdLFwid2hvXCI6WzI1NCwxMDk5XSxcImJhc2lzXCI6WzI2Ml0sXCJ0aGV5cmVcIjpbMjYzLDI2NywxMzI4XSxcInNob3dpbmdcIjpbMjY0LDczMV0sXCJzaG93aW5nLlwiOlsyNjhdLFwiQW5kXCI6WzI2OSw3NjAsMTExOCwxMjgwLDE1NDYsMTYwOF0sXCJhc1wiOlsyNzAsNDIyLDg1MiwxNDMyXSxcInJlc3VsdCxcIjpbMjcyXSxcImFueVwiOlsyNzcsNzA0LDkzMSwxMDYwXSxcIndoYXRzXCI6WzI4MF0sXCJnZXR0aW5nXCI6WzI4MV0sXCJlZGl0ZWRcIjpbMjgyLDI5MSw0OTZdLFwib3V0XCI6WzI4MywyOTIsNDU4LDQ5NywxMDk4LDEyNjldLFwib3IsXCI6WzI4NF0sXCJmYWN0LFwiOlsyODYsNDQ5XSxcImJlaW5nXCI6WzI5MCw3MDZdLFwiYXRcIjpbMjkzLDYwNiw3NzcsNzkyLDkzMCwxMTQ3LDEzMTQsMTQxOCwxNTEwLDE1MjZdLFwiYWxsLlwiOlsyOTRdLFwiSG93XCI6WzI5NiwxNDQxXSxcImRvZXNcIjpbMjk3LDE0NDJdLFwibW9uZXlcIjpbMjk4LDM1MV0sXCJmaXRcIjpbMjk5XSxcImludG9cIjpbMzAwLDgyNSwxMDcxLDEwODBdLFwicGljdHVyZT9cIjpbMzAyXSxcIlRoZVwiOlszMDRdLFwicnVzaFwiOlszMDVdLFwiYnVpbGRcIjpbMzA3XSxcImFic29sdXRlbHlcIjpbMzEyXSxcImRyaXZlblwiOlszMTNdLFwiY29tbWVyY2lhbFwiOlszMTVdLFwiaW50ZXJlc3RzLlwiOlszMTZdLFwiY2xlYXJlclwiOlszMTksMzIxXSxcImlmXCI6WzMyMywzNDQsNTE0LDEwNjcsMTA3NiwxNjEzXSxcImxvdHNcIjpbMzI4XSxcInBlb3BsZVwiOlszMzAsNDcxLDU5NCw4MzMsMTA1MCwxMzUyLDE0MDUsMTQyNSwxNDc3LDE1MTQsMTUyOCwxNTMxXSxcInVzZVwiOlszMzFdLFwid2Vic2l0ZSxcIjpbMzMzXSxcInByb3ZpZGVcIjpbMzM3LDM1N10sXCJ0aGVtXCI6WzMzOCwzNTgsMTIwMSwxMjg4XSxcInBlcnNvbmFsbHlcIjpbMzQwXSxcImluZm9ybWF0aW9uLFwiOlszNDIsOTIwXSxcIm1ha2VcIjpbMzQ4LDkwNSw5OTcsMTIwM10sXCJtb3N0XCI6WzM1MCwzODcsNDkyLDU5NSw5MTBdLFwiYWRzLFwiOlszNTNdLFwiYWRzLlwiOlszNjFdLFwiVGhpc1wiOlszNjJdLFwiaGFzXCI6WzM2MywxMzU5LDE0OTRdLFwidHJpZ2dlcmVkXCI6WzM2NF0sXCJnb2xkXCI6WzM2OF0sXCJydXNoLFwiOlszNjldLFwid2hpY2hcIjpbMzcxLDQwNywxMTM1LDE1ODBdLFwibWFqb3JcIjpbMzczLDU4MF0sXCJjb21wYW5pZXNcIjpbMzc0LDU2NSwxMTY3XSxcIkdvb2dsZSxcIjpbMzc1LDEwODFdLFwiRmFjZWJvb2ssXCI6WzM3Niw5NTBdLFwiTWljcm9zb2Z0LFwiOlszNzddLFwiWWFob28sXCI6WzM3OF0sXCJjb21wZXRpbmdcIjpbMzgzXSxcImNyZWF0ZVwiOlszODUsODcxLDE0NjEsMTQ4N10sXCJjb21wcmVoZW5zaXZlXCI6WzM4OF0sXCJwb3J0cmFpdFwiOlszODldLFwiZWFjaFwiOlszOTEsNDgwLDYyMiwxNDgwXSxcInVzXCI6WzM5Myw2MjQsNjQzLDEzMDQsMTQ1NiwxNTY4XSxcImRyaXZlXCI6WzM5NV0sXCJwcm9kdWN0cy5cIjpbMzk3XSxcIlRoZXJlc1wiOlszOTgsMTAwN10sXCJhbHNvXCI6WzM5OSw4MTcsOTIyXSxcIndob2xlXCI6WzQwMSw3NTEsMTYwNF0sXCJiZWhhdmlvclwiOls0MDJdLFwibWFya2V0XCI6WzQwM10sXCJvcGVuaW5nXCI6WzQwNF0sXCJ1cFwiOls0MDUsNjY3LDEzODAsMTU1OF0sXCJldmVyeVwiOls0MDgsNDEzLDQxNiw0NDUsNTc5LDg2MF0sXCJhY3Rpb25cIjpbNDA5XSxcInRha2VcIjpbNDExLDExNzRdLFwib25saW5lXCI6WzQxMiw5NDRdLFwibW91c2VcIjpbNDE0XSxcImNsaWNrLFwiOls0MTVdLFwiZm9ybVwiOls0MTcsNTc1XSxcImVudHJ5XCI6WzQxOF0sXCJzb2xkXCI6WzQyMV0sXCJjb21tb2RpdHkuXCI6WzQyNF0sXCJoaWRpbmdcIjpbNDMwXSxcIm1lP1wiOls0MzJdLFwiQXNcIjpbNDM0XSxcImVuZ2luZWVyXCI6WzQzNiwxMDg1XSxcIkpvbmF0aGFuXCI6WzQzN10sXCJNY1BoaWVcIjpbNDM4XSxcImV4cGxhaW5lZFwiOls0MzldLFwibWUsXCI6WzQ0MSwxNTQ5XSxcInBlcnNvblwiOls0NDYsMTU5OV0sXCJldmVuXCI6WzQ1MCw2MzgsNzY4XSxcImRvZXNudFwiOls0NTIsMTAzMF0sXCJ0b3RhbGx5XCI6WzQ1M10sXCJpdFwiOls0NTYsNjQxLDY1Miw3MjgsOTA2LDk2MCw5ODEsOTk4LDEwMjksMTM3MywxNTY1XSxcInBsYXlzXCI6WzQ1N10sXCJpbmRpdmlkdWFsXCI6WzQ2MSwxMTM2XSxcImxldmVsLlwiOls0NjJdLFwiQXRcIjpbNDYzXSxcImFnZ3JlZ2F0ZVwiOls0NjVdLFwibGV2ZWwsXCI6WzQ2Nl0sXCJzZWVcIjpbNDY5LDY4Myw4MzQsMTE4OV0sXCJjbGlja2luZ1wiOls0NzNdLFwibW9yZS5cIjpbNDc0XSxcImNhbnRcIjpbNDc3LDE1OTRdLFwicHJlZGljdFwiOls0NzhdLFwiaW5kaXZpZHVhbHNcIjpbNDgxXSxcImVudmlyb25tZW50XCI6WzQ4M10sXCJhbHRlcmVkLlwiOls0ODVdLFwiSW5cIjpbNDg2LDU3M10sXCJnZW5lcmFsLFwiOls0ODddLFwibGlrZWx5XCI6WzQ5Myw1MDNdLFwiZ2V0XCI6WzQ5NSw2MTIsMTAxOCwxMDMzXSxcInlvdXJlXCI6WzUwMSw4NTgsMTA3NywxMTAzLDExMTIsMTExNSwxMTM4XSxcImxlYXN0XCI6WzUwMl0sXCJjbGlja1wiOls1MDUsNjQ4LDg0NF0sXCJvbi5cIjpbNTA2XSxcIlNvbWV0aW1lcyxcIjpbNTA3XSxcInJlYWxcIjpbNTEyXSxcInNlcnZpY2VcIjpbNTEzXSxcIm5ldmVyXCI6WzUxNl0sXCJyZWFkXCI6WzUxN10sXCJhcnRpY2xlc1wiOls1MThdLFwic3BvcnRzLFwiOls1MjBdLFwid2h5XCI6WzUyMSwxMTQxXSxcInNob3VsZFwiOls1MjJdLFwibmV3c3BhcGVyXCI6WzUyNF0sXCJwdXRcIjpbNTI1LDEwMjNdLFwiZm9vdGJhbGxcIjpbNTI3XSxcInN0b3J5XCI6WzUyOF0sXCJmcm9udFwiOls1MzEsMTM5M10sXCJwYWdlP1wiOls1MzJdLFwiYXBwbHlcIjpbNTM0XSxcImxvZ2ljXCI6WzUzN10sXCJ0byxcIjpbNTM4XSxcInNheSxcIjpbNTM5XSxcImZvcmVpZ25cIjpbNTQyXSxcInBvbGljeSxcIjpbNTQzXSxcInByb2JsZW1cIjpbNTQ2XSxcInN0YXJ0c1wiOls1NDddLFwiZW1lcmdlLlwiOls1NDldLFwiU29tZVwiOls1NTAsNzEyXSxcInRoaW5ncyxcIjpbNTUxXSxcImhvbWVsZXNzbmVzc1wiOls1NTNdLFwiZ2Vub2NpZGUsXCI6WzU1NV0sXCJhcmVudFwiOls1NTYsMTI4NF0sXCJoaWdobHlcIjpbNTU3LDU2MV0sXCJjbGlja2FibGVcIjpbNTU4XSxcImJ1dFwiOls1NTldLFwiaW1wb3J0YW50LlwiOls1NjJdLFwiV2hpY2hcIjpbNTY0XSxcIldlYnNpdGVzXCI6WzU2Nyw5MTFdLFwiYW5vdGhlcixcIjpbNTc3XSxcIm5lYXJseVwiOls1NzhdLFwid2Vic2l0ZVwiOls1ODFdLFwiZmxpcnRpbmdcIjpbNTg2XSxcInBlcnNvbmFsaXphdGlvbi5cIjpbNTg4XSxcInN1cnByaXNlc1wiOls1OTNdLFwiR29vZ2xlLlwiOls1OTddLFwiSWZcIjpbNTk4XSxcInRoaW5nXCI6WzYwNSw3NDNdLFwidGltZSxcIjpbNjA5LDk2N10sXCJtYXlcIjpbNjExLDEzOTVdLFwicmVzdWx0cy5cIjpbNjE1LDY1Nl0sXCJ0cmFja3NcIjpbNjE3XSxcImh1bmRyZWRzXCI6WzYxOF0sXCJzaWduYWxzXCI6WzYyMCwxMDkxXSxcImtpbmRcIjpbNjI2LDc3M10sXCJjb21wdXRlclwiOls2MjgsMTEzN10sXCJvbixcIjpbNjMwXSxcIndldmVcIjpbNjMyXSxcInNlYXJjaGVkXCI6WzYzM10sXCJwYXN0LFwiOls2MzddLFwibG9uZ1wiOls2NDAsOTY2XSxcInRha2VzXCI6WzY0Ml0sXCJkZWNpZGVcIjpbNjQ1XSxcInVzZXNcIjpbNjUxLDEwOTVdLFwiY3VzdG9taXplXCI6WzY1NF0sXCJyZXN1bHRcIjpbNjU5LDY3OF0sXCJmYXZvcml0ZVwiOls2NjNdLFwicGl6emFcIjpbNjY0XSxcInBhcmxvclwiOls2NjVdLFwiZmlyc3RcIjpbNjY4XSxcIndoZW5cIjpbNjY5LDY3Niw4MTEsOTU5LDExMTQsMTI2MSwxMzg1XSxcInBpenphLFwiOls2NzJdLFwidXNlZnVsLlwiOls2NzRdLFwiYWxpZ25lZFwiOls2ODhdLFwicmVsaWdpb3VzXCI6WzY5MV0sXCJzb2NpYWxcIjpbNjkzXSxcImJlbGllZnMsXCI6WzY5Nl0sXCJtYWludGFpblwiOls3MDAsOTIzXSxcInBlcnNwZWN0aXZlLlwiOls3MDFdLFwiQXJlXCI6WzcwM10sXCJzaXRlc1wiOls3MDUsNzEzLDkzNiwxMTMyXSxcInRyYW5zcGFyZW50XCI6WzcwNyw3MjRdLFwicGVyc29uYWxpemF0aW9uP1wiOls3MTAsMTA2NV0sXCJkb1wiOls3MTRdLFwiYmV0dGVyXCI6WzcxNSwxMjkyXSxcInRoYW5cIjpbNzE2LDEzNjksMTQwNF0sXCJvdGhlcnMuXCI6WzcxN10sXCJBbWF6b24sXCI6WzcxOF0sXCJleGFtcGxlLFwiOls3MjAsOTUyLDEwODNdLFwib2Z0ZW5cIjpbNzIyXSxcInF1aXRlXCI6WzcyM10sXCJwZXJzb25hbGl6YXRpb25cIjpbNzI3LDc4NCw4NjksMTM4NCwxNTM4XSxcImRvZXM6XCI6WzcyOV0sXCJCcmF2ZVwiOls3MzNdLFwiV29ybGRcIjpbNzM1XSxcImJlY2F1c2VcIjpbNzM2LDEyODYsMTUwMywxNTUwXSxcImJvdWdodFwiOls3MzhdLFwiMTk4NC5cIjpbNzM5XSxcInBlcnNvbmFsaXplXCI6Wzc0NSw3NTBdLFwicHJvZHVjdHNcIjpbNzQ2XSxcImFub3RoZXJcIjpbNzQ4XSxcImZsb3dzLFwiOls3NTNdLFwiZG9pbmcuXCI6Wzc1OV0sXCJmZXdcIjpbNzYyXSxcInVzZXJzXCI6Wzc2M10sXCJ0aG9zZVwiOls3NjUsOTM4XSxcIm1hcmdpbmFsbHlcIjpbNzY5XSxcImF3YXJlXCI6Wzc3MF0sXCJmaWx0ZXJpbmdcIjpbNzc1XSxcIndvcmsuXCI6Wzc3OF0sXCJEb2VzXCI6Wzc4MF0sXCJpc3N1ZVwiOls3ODJdLFwiaW1wYWN0XCI6Wzc4NV0sXCJwcml2YWN5XCI6Wzc4N10sXCJqZW9wYXJkaXplXCI6Wzc4OV0sXCJpZGVudGl0eVwiOls3OTFdLFwiYWxsP1wiOls3OTNdLFwiUmVzZWFyY2hcIjpbNzk1XSxcInBzeWNob2xvZ2lzdHNcIjpbNzk2XSxcIndoaWxlXCI6WzgwMSw5MDksMTAxNCwxMjgxLDE1MDRdLFwibWVkaWFcIjpbODA0LDgxMyw4NzMsODc0XSxcImNvbnN1bWVcIjpbODA2LDgxNSwxMzU2XSxcInNoYXBlc1wiOls4MDddLFwiaWRlbnRpdHkuXCI6WzgwOV0sXCJTb1wiOls4MTBdLFwic2hhcGVkXCI6WzgxOF0sXCJpZGVudGl0eSxcIjpbODIxXSxcInNsaXBcIjpbODI0XSxcIndlaXJkXCI6WzgyN10sXCJmZWVkYmFja1wiOls4MjhdLFwibG9vcC5cIjpbODI5XSxcIkFcIjpbODMwLDEyMjAsMTM4OF0sXCJsb3RcIjpbODMxXSxcInNpbXBsZVwiOls4MzZdLFwidmVyc2lvblwiOls4MzddLFwiRmFjZWJvb2s6XCI6Wzg0MV0sXCJpZGx5XCI6Wzg0M10sXCJvbGRcIjpbODQ3XSxcImNsYXNzbWF0ZSxcIjpbODQ4XSxcInJlYWRzXCI6Wzg1MF0sXCJmcmllbmRzaGlwLFwiOls4NTRdLFwicHJldHR5XCI6Wzg1Nl0sXCJzb29uXCI6Wzg1N10sXCJzZWVpbmdcIjpbODU5XSxcIkpvaG5cIjpbODYzXSxcIlN1ZXNcIjpbODY1XSxcInBvc3RzLlwiOls4NjZdLFwiR29uZVwiOls4NjddLFwiYXdyeSxcIjpbODY4XSxcImNvbXB1bHNpdmVcIjpbODcyXSxcInRhcmdldGVkXCI6Wzg3NV0sXCJhcHBlYWxcIjpbODc3XSxcInBzeWNob2xvZ2ljYWxcIjpbODgxXSxcIndlYWtcIjpbODgyXSxcInNwb3RzLlwiOls4ODNdLFwiZmluZFwiOls4ODZdLFwieW91cnNlbGZcIjpbODg3XSxcImVhdGluZ1wiOls4ODhdLFwiZXF1aXZhbGVudFwiOls4OTBdLFwianVua1wiOls4OTNdLFwiZm9vZFwiOls4OTRdLFwiaW5zdGVhZFwiOls4OTVdLFwiaGF2aW5nXCI6Wzg5N10sXCJiYWxhbmNlZFwiOls5MDBdLFwiZGlldC5cIjpbOTAyXSxcImNsZWFyXCI6WzkwN10sXCJ1c2VyXCI6WzkxMl0sXCJhZ3JlZW1lbnRzXCI6WzkxM10sXCJzYXlcIjpbOTE0XSxcIndvbnRcIjpbOTE2LDE2MTFdLFwic2hhcmVcIjpbOTE3XSxcInJpZ2h0XCI6WzkyNSwxNDAyXSxcImNoYW5nZVwiOls5MjddLFwicnVsZXNcIjpbOTI5LDkzOV0sXCJ0aW1lLlwiOls5MzJdLFwiRG9cIjpbOTMzXSxcImZvcmVzZWVcIjpbOTM1XSxcImNoYW5naW5nXCI6WzkzN10sXCJwcm9maXRcIjpbOTQxXSxcInBlcnNvbmFzP1wiOls5NDVdLFwiVGhleVwiOls5NDcsMTI1MiwxMzMxXSxcImhhdmUuXCI6Wzk0OV0sXCJub3RvcmlvdXNcIjpbOTU0XSxcImJhaXQtYW5kLXN3aXRjaFwiOls5NTddLFwidGFjdGljc1wiOls5NThdLFwiY29tZXNcIjpbOTYxXSxcInByaXZhY3kuXCI6Wzk2M10sXCJGb3JcIjpbOTY0XSxcIkxpa2VkXCI6Wzk3MF0sXCJ3YXNcIjpbOTczLDEyNTldLFwicHJpdmF0ZSxcIjpbOTc0XSxcInNpdGVcIjpbOTc3LDEwOTRdLFwicHJvbWlzZWRcIjpbOTc4XSxcImtlZXBcIjpbOTgwXSxcIndheS5cIjpbOTgzXSxcIlRoZW4sXCI6Wzk4NF0sXCJvdmVybmlnaHQsXCI6Wzk4NV0sXCJtYWRlXCI6Wzk4N10sXCJwdWJsaWNcIjpbOTkwLDEyMTFdLFwid29ybGQsXCI6Wzk5M10sXCJvcmRlclwiOls5OTVdLFwiZWFzaWVyXCI6Wzk5OV0sXCJhZHZlcnRpc2Vyc1wiOlsxMDAyXSxcInRhcmdldFwiOlsxMDA0XSxcInNwZWNpZmljXCI6WzEwMDVdLFwic3ViZ3JvdXBzLlwiOlsxMDA2XSxcImlyb255XCI6WzEwMDldLFwiZmFjdFwiOlsxMDEyXSxcIlJvbGV4XCI6WzEwMTVdLFwibmVlZHNcIjpbMTAxNl0sXCJUb21cIjpbMTAxOV0sXCJDcnVpc2VzXCI6WzEwMjBdLFwicGVybWlzc2lvblwiOlsxMDIxLDEwMzVdLFwiaGlzXCI6WzEwMjRdLFwiZmFjZVwiOlsxMDI1XSxcImJpbGxib2FyZCxcIjpbMTAyOF0sXCJhZHZlcnRpc2VcIjpbMTAzN10sXCJlbmRvcnNlbWVudFwiOlsxMDM5XSxcImZyaWVuZHNcIjpbMTA0Ml0sXCJGYWNlYm9vay5cIjpbMTA0NF0sXCJXZVwiOlsxMDQ1LDExOTksMTI5OCwxNTYzXSxcImxhd3NcIjpbMTA0N10sXCJnaXZlXCI6WzEwNDldLFwicmlnaHRzXCI6WzEwNTJdLFwiZGF0YS5cIjpbMTA1Nl0sXCJJc1wiOlsxMDU4XSxcInRoZXJlXCI6WzEwNTksMTA4OF0sXCJ3YXlcIjpbMTA2MV0sXCJhdm9pZFwiOlsxMDYzXSxcIkltXCI6WzEwNjgsMTIzM10sXCJsb2dnZWRcIjpbMTA3MCwxMDc5XSxcInNpdGU/XCI6WzEwNzNdLFwiRXZlblwiOlsxMDc1XSxcInRvbGRcIjpbMTA4Nl0sXCI1N1wiOlsxMDkwXSxcImZpZ3VyZVwiOlsxMDk3XSxcImFyZTpcIjpbMTEwMV0sXCJ3aGV0aGVyXCI6WzExMDJdLFwiTWFjXCI6WzExMDZdLFwiUENcIjpbMTEwOF0sXCJpUGFkLFwiOlsxMTEwXSxcIndoZXJlXCI6WzExMTFdLFwibG9jYXRlZFwiOlsxMTEzXSxcIkdvb2dsaW5nLFwiOlsxMTE2XSxcImV0Yy5cIjpbMTExN10sXCJuZWFyXCI6WzExMjFdLFwiZnV0dXJlLFwiOlsxMTIyXSxcIml0bGxcIjpbMTEyM10sXCJwb3NzaWJsZVwiOlsxMTI1XSxcImZpbmdlcnByaW50XCI6WzExMjddLFwidW5pcXVlXCI6WzExMjhdLFwiZGV2aWNlcyxcIjpbMTEyOV0sXCJ0ZWxsXCI6WzExMzRdLFwidXNpbmcuXCI6WzExMzldLFwiVGhhdHNcIjpbMTE0MCwxNDY3XSxcImVyYXNpbmdcIjpbMTE0Ml0sXCJicm93c2VyXCI6WzExNDRdLFwiY29va2llc1wiOlsxMTQ1XSxcImJlc3RcIjpbMTE0OF0sXCJwYXJ0aWFsXCI6WzExNTBdLFwic29sdXRpb25pdFwiOlsxMTUxXSxcInBhcnRpYWxseVwiOlsxMTUzXSxcImxpbWl0c1wiOlsxMTU0XSxcInBlcnNvbmFsaXplcnMuXCI6WzExNTldLFwicG93ZXJcIjpbMTE2OSwxMTc5LDExODRdLFwicmVzcG9uc2liaWxpdHlcIjpbMTE3NV0sXCJpbW1lbnNlXCI6WzExNzhdLFwiZGV0ZXJtaW5lXCI6WzExODZdLFwic2VlLFwiOlsxMTkyXSxcImtub3cuXCI6WzExOThdLFwic3VyZVwiOlsxMjA0XSxcImNvbnRpbnVlXCI6WzEyMDZdLFwiYWNjZXNzXCI6WzEyMDldLFwiZGlzY291cnNlXCI6WzEyMTIsMTUzNl0sXCJ2aWV3XCI6WzEyMTVdLFwiY29tbW9uXCI6WzEyMThdLFwiZ29vZC5cIjpbMTIxOV0sXCJ3b3JsZFwiOlsxMjIxXSxcInNvbGVseVwiOlsxMjIzXSxcIkxpa2VcIjpbMTIyN10sXCJpbmNvbXBsZXRlXCI6WzEyMzFdLFwid29ybGQuXCI6WzEyMzIsMTQ2Nl0sXCJvcHRpbWlzdGljXCI6WzEyMzRdLFwiY2FuLlwiOlsxMjM3XSxcIndvcnRoXCI6WzEyMzldLFwicmVtZW1iZXJpbmdcIjpbMTI0MF0sXCJuZXdzcGFwZXJzXCI6WzEyNDIsMTI3Nl0sXCJ3ZXJlbnRcIjpbMTI0M10sXCJpbmZvcm1lZFwiOlsxMjQ1LDEyOTNdLFwiam91cm5hbGlzdGljXCI6WzEyNTAsMTI4Ml0sXCJldGhpY3MuXCI6WzEyNTFdLFwiZXhpc3RlZFwiOlsxMjUzXSxcImNlbnR1cmllc1wiOlsxMjU1XSxcIndpdGhvdXRcIjpbMTI1Nl0sXCJpdC5cIjpbMTI1N10sXCJJdFwiOlsxMjU4LDEzNDZdLFwiY3JpdGljc1wiOlsxMjYyXSxcIldhbHRlclwiOlsxMjY0XSxcIkxpcHBtYW5cIjpbMTI2NV0sXCJiZWdhblwiOlsxMjY2LDEyNzddLFwicG9pbnRcIjpbMTI2OF0sXCJpbXBvcnRhbnRcIjpbMTI3MV0sXCJjaGFuZ2UuXCI6WzEyNzksMTQ4OF0sXCJldGhpY3NcIjpbMTI4MywxMzAxXSxcInBlcmZlY3QsXCI6WzEyODVdLFwiYmVlblwiOlsxMjkxLDEzNjRdLFwib3ZlclwiOlsxMjk0XSxcImxhc3RcIjpbMTI5Nl0sXCJjZW50dXJ5LlwiOlsxMjk3XSxcImFsZ29yaXRobWljXCI6WzEzMDBdLFwiZ3VpZGVcIjpbMTMwM10sXCJ0aHJvdWdoXCI6WzEzMDVdLFwibmV4dC5cIjpbMTMwN10sXCJidXNpbmVzc1wiOlsxMzEyXSxcImxlYWRlcnNcIjpbMTMxMywxNDg1XSxcInNheWluZ1wiOlsxMzIwXSxcInJlc3BvbnNpYmlsaXRpZXM/XCI6WzEzMjNdLFwiVG9cIjpbMTMyNV0sXCJob25lc3QsXCI6WzEzMjddLFwiZnJ1c3RyYXRpbmdseVwiOlsxMzI5XSxcImNveS5cIjpbMTMzMF0sXCJ0ZW5kXCI6WzEzMzJdLFwiZnJhbWVcIjpbMTMzNF0sXCJ0cmVuZFwiOlsxMzM2XSxcInBhc3NpdmVcIjpbMTMzOV0sXCJ0ZW5zZTpcIjpbMTM0MF0sXCJHb29nbGVzXCI6WzEzNDFdLFwiRXJpY1wiOlsxMzQyXSxcIlNjaG1pZHRcIjpbMTM0M10sXCJyZWNlbnRseVwiOlsxMzQ0XSxcInNhaWRcIjpbMTM0NSwxMzg3XSxcIndpbGxcIjpbMTM0N10sXCJoYXJkXCI6WzEzNTAsMTM3NV0sXCJzb21ldGhpbmdcIjpbMTM1N10sXCJzb21lXCI6WzEzNjJdLFwidGFpbG9yZWRcIjpbMTM2NV0sXCJ0aGVtLFwiOlsxMzY3XSxcInJhdGhlclwiOlsxMzY4XSxcIm1ha2luZ1wiOlsxMzcyLDE1NDBdLFwiTWFya1wiOlsxMzc2XSxcIlp1Y2tlcmJlcmdcIjpbMTM3N10sXCJwZXJmZWN0bHlcIjpbMTM3OF0sXCJzdW1tZWRcIjpbMTM3OV0sXCJ0ZW5zaW9uXCI6WzEzODJdLFwiaGVcIjpbMTM4NiwxNDEwXSxcInNxdWlycmVsXCI6WzEzODldLFwiZHlpbmdcIjpbMTM5MCwxNDA2XSxcInlhcmRcIjpbMTM5NF0sXCJpbnRlcmVzdHNcIjpbMTQwMSwxNTE3XSxcIkFmcmljYS5cIjpbMTQwOCwxNDI3XSxcInJlZnVzZXNcIjpbMTQxMV0sXCJlbmdhZ2VcIjpbMTQxM10sXCJtZWFuc1wiOlsxNDE3XSxcInNvY2lldGFsXCI6WzE0MjBdLFwibGV2ZWxcIjpbMTQyMV0sXCJlc3BlY2lhbGx5XCI6WzE0MjJdLFwiYmFja2dyb3VuZFwiOlsxNDMwXSxcIm9yZ2FuaXplclwiOlsxNDM1XSxcImxpYmVyYWxcIjpbMTQzOF0sXCJXZWJzaXRlXCI6WzE0MzldLFwiTW92ZU9uLm9yZy5cIjpbMTQ0MF0sXCJleHBlcmllbmNlXCI6WzE0NDRdLFwiaW5mb3JtXCI6WzE0NDVdLFwiYm9vaz9cIjpbMTQ0N10sXCJJdmVcIjpbMTQ0OV0sXCJiZWxpZXZlZFwiOlsxNDUxXSxcImNvdWxkXCI6WzE0NTRdLFwiY29ubmVjdFwiOlsxNDU1XSxcImFsbFwiOlsxNDU3LDE2MTVdLFwidG9nZXRoZXJcIjpbMTQ1OCwxNTE5XSxcImhlbHBcIjpbMTQ2MCwxNTY3XSxcImJldHRlcixcIjpbMTQ2M10sXCJkZW1vY3JhdGljXCI6WzE0NjUsMTQ5Ml0sXCJleGNpdGVkXCI6WzE0NjldLFwiTW92ZU9uXCI6WzE0NzJdLFwiaGVyZVwiOlsxNDczXSxcIndlcmUsXCI6WzE0NzVdLFwiY29ubmVjdGluZ1wiOlsxNDc2XSxcImRpcmVjdGx5XCI6WzE0NzhdLFwib3RoZXJcIjpbMTQ4MV0sXCJzb2NpZXR5XCI6WzE0OTNdLFwieWV0XCI6WzE0OTVdLFwiZW1lcmdlLFwiOlsxNDk3XSxcInBhcnRseVwiOlsxNTAyXSxcImhlbHBpbmdcIjpbMTUxMV0sXCJncm91cHNcIjpbMTUxMl0sXCJiYW5kXCI6WzE1MThdLFwiKGxpa2VcIjpbMTUyMF0sXCJNb3ZlT24pLFwiOlsxNTIxXSxcImhvdFwiOlsxNTI1XSxcImludHJvZHVjaW5nXCI6WzE1MjddLFwiaWRlYXMuXCI6WzE1MzNdLFwiRGVtb2NyYWN5XCI6WzE1MzRdLFwicmVxdWlyZXNcIjpbMTUzNV0sXCJlbHVzaXZlLlwiOlsxNTQ1XSxcIndvcnJpZXNcIjpbMTU0OF0sXCJsaXZlXCI6WzE1NTddLFwiY29ubmVjdGl2ZVwiOlsxNTYxXSxcInByb21pc2UuXCI6WzE1NjJdLFwic29sdmVcIjpbMTU2OV0sXCJnbG9iYWxcIjpbMTU3MF0sXCJwcm9ibGVtc1wiOlsxNTcxLDE1OTNdLFwiY2xpbWF0ZVwiOlsxNTczXSxcImNoYW5nZSxcIjpbMTU3NF0sXCJ0ZXJyb3Jpc20sXCI6WzE1NzVdLFwibmF0dXJhbFwiOlsxNTc3XSxcInJlc291cmNlXCI6WzE1NzhdLFwibWFuYWdlbWVudFwiOlsxNTc5XSxcIm5hdHVyZVwiOlsxNTgzXSxcInJlcXVpcmVcIjpbMTU4NCwxNjAzXSxcIm1hc3NpdmVcIjpbMTU4NV0sXCJjb29yZGluYXRpb24sXCI6WzE1ODZdLFwiZ3JlYXRcIjpbMTU4OF0sXCJ3aXNkb21cIjpbMTU4OV0sXCJpbmdlbnVpdHkuXCI6WzE1OTFdLFwiVGhlc2VcIjpbMTU5Ml0sXCJzb2x2ZWRcIjpbMTU5Nl0sXCJ0d29cIjpbMTYwMV0sXCJzb2NpZXRpZXNcIjpbMTYwNV0sXCJwYXJ0aWNpcGF0ZS5cIjpbMTYwN10sXCJoYXBwZW5cIjpbMTYxMl0sXCJpc29sYXRlZFwiOlsxNjE2XSxcIm9uZS5cIjpbMTYyMV19fSxcIlNcIjpbe1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9GaWx0ZXItQnViYmxlLVdoYXQtSW50ZXJuZXQtSGlkaW5nL2RwLzE1OTQyMDMwMDhcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0yMDI5MDc5XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9jaS5uaWkuYWMuanAvbmNpZC9CQjA1ODY1NzU4XCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0yMDI5MDc5XCJ9XSxcIlZGTlwiOlwiXCIsXCJQUlwiOlsxNjg2MDY1NDc4LDE1MDM5NzYxNDMsMTQyMzQ1NDEyLDIxMzAzNTQ5MTMsMjEzNzgwOTAwNiwxNTk2MTUzMDU5LDYxODIyODcwMiwxOTY2MTE0MjU0LDE5OTUyOTgzODQsMjExOTc1ODMyMywyMTY2MTU1MjU4LDIzMDA1NjcxMTcsMTk4NTc0OTA3NCwxNTAzNjU2NDM4LDIxNTIyODQzNDUsMjE3MDA0ODg0NSwxNTU3ODc2NjQ4LDIxMzc0ODg0MTMsMjE4NjA4OTc5NCwxNTI4Nzg0ODU4LDE2ODYwNjU0NzgsMTUwMzk3NjE0MywxNDIzNDU0MTIsMjEzMDM1NDkxMywyMTM3ODA5MDA2LDE1OTYxNTMwNTksNjE4MjI4NzAyLDE5NjYxMTQyNTQsMTk5NTI5ODM4NCwyMTE5NzU4MzIzLDIxNjYxNTUyNTgsMjMwMDU2NzExNywxOTg1NzQ5MDc0LDE1MDM2NTY0MzgsMjE1MjI4NDM0NSwyMTcwMDQ4ODQ1LDE1NTc4NzY2NDgsMjEzNzQ4ODQxMywyMTg2MDg5Nzk0LDE1Mjg3ODQ4NThdLFwiQU5GXCI6W3tcIkZOXCI6XCJFbGlcIixcIkxOXCI6XCJQYXJpc2VyXCIsXCJTXCI6MX1dLFwiQlRcIjpcImJcIixcIlBCXCI6XCJQZW5ndWluXCJ9In0seyJsb2dwcm9iIjotMTYuMzk2LCJrZXNFbnRpdHlJZCI6MTY0NzgxMywiSWQiOjIxNDcwNTAyOTUsIlRpIjoiaW50ZXJuZXQgcGFyYWRveCBhIHNvY2lhbCB0ZWNobm9sb2d5IHRoYXQgcmVkdWNlcyBzb2NpYWwgaW52b2x2ZW1lbnQgYW5kIHBzeWNob2xvZ2ljYWwgd2VsbCBiZWluZyIsIlkiOjE5OTgsIkQiOiIxOTk4LTAxLTAxIiwiUklkIjpbMTUxNzcwMTI0NywyMTU5NDAxNDkyLDIxMTYzMzk4MTIsMjExMjc3ODM0NSwyMDU2NDM0MTM1LDIwNTU0NjEwMDMsMjEwOTQ2OTk1MSwyMTI3NjE1ODEwLDIwMjQzNzI0MDcsMjA5MjkzMzc1OSwxOTgxMzc0MTYxLDIwNzU4OTQ0MzgsMjA0ODYyODE5MywyMTM1NDMzNzk4LDI1NjU2MzIxOTksMTgwMTM5NTQzOSwxNDQwMTI4ODQsMjAzMjYzMzMwMiwyMTU1MTUxMjMzLDE5ODUwMDk0NTcsMTk3NzgwMzQ5MiwxMjEzOTcxMzMsMjAxMjM3NjQ2NCwyMDEwMjIwMTE3LDE5NjkwMjAzNDQsMjEzNTY5MTU5NiwxNjE4ODAxMDgsMjE2MjQ5NDgxNywxNTM5MDk2NDE0LDUwMjYxMTU1LDIwODcyNzU5NTksMjAzNjAyODI0MSwyMTQ3OTg0NDg5LDIxNjQ5NTk0NjksMjE3MTIwNTY3NiwyODk2ODQzODc3LDYyMjYwOTgxLDIwNjEwMzEyNTQsMjA0NTQ5OTE5NCw5NzM4NjM5NiwxOTgwNTk3MTQ0LDIxMDY3MzMwNDcsMTY0NjE3MjA2NSwxODkyMDI1MjQsMjA3ODg1ODQxNiwyMDg5NDg5OTE3LDIwNTkzNjQyNTcsMjA0ODExMjAzMSwyMDk4NDY5NjgwLDE1NTk5MTI5NjRdLCJBQSI6W3siQXVOIjoicm9iZXJ0IGUga3JhdXQifSx7IkF1TiI6Im1pY2hhZWwgcGF0dGVyc29uIn0seyJBdU4iOiJ2aWNraSBsdW5kbWFyayJ9LHsiQXVOIjoic2FyYSBraWVzbGVyIn0seyJBdU4iOiJ0cmlkYXMgbXVrb3BoYWRoeWF5In0seyJBdU4iOiJ3aWxsaWFtIGwgc2NoZXJsaXMifV0sIkYiOlt7IkZOIjoic29jaWFsIGluZXJ0aWEifSx7IkZOIjoic3VpY2lkZSBhbmQgdGhlIGludGVybmV0In0seyJGTiI6InNvY2lhbCBpZGVudGl0eSBhcHByb2FjaCJ9LHsiRk4iOiJzb2NpYWwgcG9zaXRpb24ifSx7IkZOIjoic29jaWFsIGNvbXBldGVuY2UifSx7IkZOIjoic29jaWFsIGVuZ2FnZW1lbnQifSx7IkZOIjoic29jaWFsIGNoYW5nZSJ9LHsiRk4iOiJzb2NpYWwgcmVsYXRpb24ifSx7IkZOIjoic29jaW9lY29ub21pY3MifSx7IkZOIjoic29jaWFsIHBzeWNob2xvZ3kifSx7IkZOIjoicHN5Y2hvbG9neSJ9XSwiRSI6IntcIkROXCI6XCJJbnRlcm5ldCBwYXJhZG94OiBBIHNvY2lhbCB0ZWNobm9sb2d5IHRoYXQgcmVkdWNlcyBzb2NpYWwgaW52b2x2ZW1lbnQgYW5kIHBzeWNob2xvZ2ljYWwgd2VsbC1iZWluZz9cIixcIlNcIjpbe1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cubmNiaS5ubG0ubmloLmdvdi9wdWJtZWQvOTg0MTU3OVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcHN5Y25ldC5hcGEub3JnL2J1eS8xOTk4LTEwODg2LTAwMVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vY2kubmlpLmFjLmpwL25haWQvMzAwMTM1NzM0MjRcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RvaS5hcGEub3JnL2dldGRvaS5jZm0/ZG9pPTEwLjEwMzcvMDAwMy0wNjZYLjUzLjkuMTAxN1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMDM3LzAwMDMtMDY2WC41My45LjEwMTdcIn1dLFwiVkZOXCI6XCJBbWVyaWNhbiBQc3ljaG9sb2dpc3RcIixcIlZcIjo1MyxcIklcIjo5LFwiRlBcIjoxMDE3LFwiTFBcIjoxMDMxLFwiRE9JXCI6XCIxMC4xMDM3LzAwMDMtMDY2WC41My45LjEwMTdcIixcIkNDXCI6e1wiMTYxODgwMTA4XCI6W1wiTWFueSBzY2hvbGFycywgdGVjaG5vbG9naXN0cywgYW5kIHNvY2lhbCBjcml0aWNzIGJlbGlldmUgdGhhdCB0aGVzZSBjaGFuZ2VzIGFuZCB0aGUgSW50ZXJuZXQsIGluIHBhcnRpY3VsYXIsIGFyZSB0cmFuc2Zvcm1pbmcgZWNvbm9taWMgYW5kIHNvY2lhbCBsaWZlIChlZywgQW5kZXJzb24sIEJpa3NvbiwgTGF3LCAmIE1pdGNoZWxsLCAxOTk1OyBBdHRld2VsbCAmIFJ1bGUsIDE5ODQ7IEtpbmcgJiBLcmFlbWVyLCAxOTk1KS5cIl0sXCIxNjQ2MTcyMDY1XCI6W1wiSG93ZXZlciBtb3N0IGVtcGlyaWNhbCB3b3JrIGhhcyBpbmRpY2F0ZWQgdGhhdCB0ZWxldmlzaW9uIHdhdGNoaW5nIHJlZHVjZXMgc29jaWFsIGludm9sdmVtZW50IChCcm9keSwgMTk5MDsgSmFja3Nvbi1CZWVjayAmIFJvYmluc29uLCAxOTgxOyBOZXVtYW4sIDE5OTE7IE1hY2NvYnksIDE5NTEpLlwiXSxcIjIwMjQzNzI0MDdcIjpbXCJUaGUgSW50ZXJuZXQsIGxpa2UgaXRzIG5ldHdvcmsgcHJlZGVjZXNzb3JzIChTcHJvdWxsICYgS2llc2xlciwgMTk5MSksIGhhcyB0dXJuZWQgb3V0IHRvIGJlIGZhciBtb3JlIHNvY2lhbCB0aGFuIHRlbGV2aXNpb24sIGFuZCBpbiB0aGlzIHJlc3BlY3QsIHRoZSBpbXBhY3Qgb2YgdGhlIEludGVybmV0IG1heSBiZSBtb3JlIGxpa2UgdGhhdCBvZiB0aGUgdGVsZXBob25lIHRoYW4gb2YgVFYuXCJdLFwiMjAzMjYzMzMwMlwiOltcIlNpbmNlIHRoZSBpbnRyb2R1Y3Rpb24gb2YgY29tcHV0aW5nIGludG8gc29jaWV0eSwgc2Nob2xhcnMgYW5kIHRlY2hub2xvZ2lzdHMgaGF2ZSBwb25kZXJlZCBpdHMgcG9zc2libGUgc29jaWFsIGltcGFjdCAoZWcsIEJlbGwsIDE5NzM7IEphY29ic29uICYgUm91Y2VrLCAxOTU5OyBMZWF2aXR0ICYgV2hpc2xlciwgMTk1ODsgU2hvcnQsIFdpbGxpYW1zLCAmIENocmlzdGllLCAxOTc2KS5cIl0sXCIyMDg3Mjc1OTU5XCI6W1wiUGVvcGxlIHdobyByZXBvcnQgdGhleSBhcmUgZW5lcmdldGljIGFuZCBoYXBweSB3aGVuIHRoZXkgYXJlIGVuZ2FnZWQgaW4gYWN0aXZlIHNvY2lhbCBpbnRlcmFjdGlvbiBhbHNvIHJlcG9ydCB0aGV5IGFyZSBib3JlZCBhbmQgdW5oYXBweSB3aGVuIHRoZXkgYXJlIHdhdGNoaW5nIFRWIChLdWJleSAmIENzaWtzemVudG1paGFseWksIDE5OTApLlwiXSxcIjIwOTI5MzM3NTlcIjpbXCJCYXNpbmcgdGhlaXIgZXN0aW1hdGVzIG9uIGRldGFpbGVkIHRpbWUgZGlhcmllcywgUm9iaW5zb24gYW5kIEdvZGJleSAoMTk5Nzsgc2VlIGFsc28gUm9iaW5zb24sIDE5OTApIHJlcG9ydGVkIHRoYXQgYSB0eXBpY2FsIEFtZXJpY2FuIGFkdWx0IHNwZW5kcyB0aHJlZSBob3VycyBlYWNoIGRheSB3YXRjaGluZyBUVjsgY2hpbGRyZW5zIFRWIHdhdGNoaW5nIGlzIG11Y2ggaGlnaGVyIChDb25kcnksIDE5OTMpLlwiXSxcIjIxMzU2OTE1OTZcIjpbXCJTaW5jZSB0aGUgaW50cm9kdWN0aW9uIG9mIGNvbXB1dGluZyBpbnRvIHNvY2lldHksIHNjaG9sYXJzIGFuZCB0ZWNobm9sb2dpc3RzIGhhdmUgcG9uZGVyZWQgaXRzIHBvc3NpYmxlIHNvY2lhbCBpbXBhY3QgKGVnLCBCZWxsLCAxOTczOyBKYWNvYnNvbiAmIFJvdWNlaywgMTk1OTsgTGVhdml0dCAmIFdoaXNsZXIsIDE5NTg7IFNob3J0LCBXaWxsaWFtcywgJiBDaHJpc3RpZSwgMTk3NikuXCJdfSxcIlBSXCI6WzIwNjI4NjYxNDcsMjA5OTU1NjY1MywyMTQ3MjY0NDU1LDIwNTUwOTcyMjksMjE3MDA4MjMzNywxODAwNTYxMDU3LDIxMDk0Njk5NTEsMjExODM4NzY5MSwyMDIwMzkwMjk1LDI1NzYyOTczNzksMjExNjMzOTgxMiwxOTc4MTQ0MTkzLDIwMTU0NzY2MjQsMjExODI0MjExNCwxOTk2NTMzNDI1LDE5ODU3NDkwNzQsMjA3NDg2NTQyOCwxNDk1MDM4NzQ3LDIwMjQzODA5NDcsMjEwOTIyNzE4OCwyMDYyODY2MTQ3LDIwOTk1NTY2NTMsMjE0NzI2NDQ1NSwyMDU1MDk3MjI5LDIxNzAwODIzMzcsMTgwMDU2MTA1NywyMTA5NDY5OTUxLDIxMTgzODc2OTEsMjAyMDM5MDI5NSwyNTc2Mjk3Mzc5LDIxMTYzMzk4MTIsMTk3ODE0NDE5MywyMDE1NDc2NjI0LDIxMTgyNDIxMTQsMTk5NjUzMzQyNSwxOTg1NzQ5MDc0LDIwNzQ4NjU0MjgsMTQ5NTAzODc0NywyMDI0MzgwOTQ3LDIxMDkyMjcxODhdLFwiQU5GXCI6W3tcIkZOXCI6XCJSb2JlcnRcIixcIkxOXCI6XCJLcmF1dFwiLFwiU1wiOjF9LHtcIkZOXCI6XCJNaWNoYWVsXCIsXCJMTlwiOlwiUGF0dGVyc29uXCIsXCJTXCI6Mn0se1wiRk5cIjpcIlZpY2tpXCIsXCJMTlwiOlwiTHVuZG1hcmtcIixcIlNcIjozfSx7XCJGTlwiOlwiU2FyYVwiLFwiTE5cIjpcIktpZXNsZXJcIixcIlNcIjo0fSx7XCJGTlwiOlwiVHJpZGFzXCIsXCJMTlwiOlwiTXVrb3BoYWRoeWF5XCIsXCJTXCI6NX0se1wiRk5cIjpcIldpbGxpYW1cIixcIkxOXCI6XCJTY2hlcmxpc1wiLFwiU1wiOjZ9XSxcIkJWXCI6XCJBbWVyaWNhbiBQc3ljaG9sb2dpc3RcIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiQW0gUHN5Y2hvbFwifSJ9LHsibG9ncHJvYiI6LTE2LjQsImtlc0VudGl0eUlkIjoxNjU0MjIwLCJJZCI6MTQ5NTAzODc0NywiVGkiOiJsaWZlIG9uIHRoZSBzY3JlZW4gaWRlbnRpdHkgaW4gdGhlIGFnZSBvZiB0aGUgaW50ZXJuZXQiLCJZIjoxOTk1LCJEIjoiMTk5NS0wNy0wMSIsIkFBIjpbeyJBdU4iOiJzaGVycnkgdHVya2xlIn1dLCJGIjpbeyJGTiI6Im9ubGluZSBpZGVudGl0eSJ9LHsiRk4iOiJzb2Z0d2FyZSBkZXNpZ24ifSx7IkZOIjoiaWRlbnRpdHkgcGVyZm9ybWFuY2UifSx7IkZOIjoibW9kZXJuIGFydCJ9LHsiRk4iOiJhcnRpZmljaWFsIGxpZmUifSx7IkZOIjoicG9zdG1vZGVybmlzbSJ9LHsiRk4iOiJhcmNoaXRlY3R1cmUifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6Imh1bWFuaXRpZXMifSx7IkZOIjoicHN5Y2hvbG9neSJ9XSwiRSI6IntcIkROXCI6XCJMaWZlIG9uIHRoZSBTY3JlZW46IElkZW50aXR5IGluIHRoZSBBZ2Ugb2YgdGhlIEludGVybmV0XCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6Mjc1LFwiSW52ZXJ0ZWRJbmRleFwiOntcIkZyb21cIjpbMF0sXCJ0aGVcIjpbMSw3LDE2LDI5LDM5LDE0NSwxNjIsMjA5LDIxMiwyMzAsMjY0XSxcIlB1Ymxpc2hlcjpcXHJcXG5BXCI6WzJdLFwiUXVlc3Rpb25cIjpbM10sXCJvZlwiOls0LDE1LDE4LDI2LDM4LDQxLDY3LDg1LDg5LDExOSwxNTIsMTczLDIwOCwyMTEsMjU0XSxcIklkZW50aXR5XFxyXFxuTGlmZVwiOls1XSxcIm9uXCI6WzYsMjJdLFwiU2NyZWVuXCI6WzhdLFwiaXNcIjpbOSw5MSwxODldLFwiYVwiOlsxMCwzNiw0Niw2MiwxNzgsMTkwLDE5NF0sXCJmYXNjaW5hdGluZ1wiOlsxMV0sXCJhbmRcIjpbMTIsMjAsMjgsNDUsODEsMTAyLDEyMSwxMzcsMTY3LDIwMCwyMTYsMjU4XSxcIndpZGUtcmFuZ2luZ1wiOlsxM10sXCJpbnZlc3RpZ2F0aW9uXCI6WzE0XSxcImltcGFjdFwiOlsxN10sXCJjb21wdXRlcnNcIjpbMTldLFwibmV0d29ya2luZ1wiOlsyMV0sXCJzb2NpZXR5LFwiOlsyM10sXCJwZW9wbGVzJ1wiOlsyNF0sXCJwZXJjZXB0aW9uc1wiOlsyNV0sXCJ0aGVtc2VsdmVzLFwiOlsyN10sXCJpbmRpdmlkdWFsJ3NcIjpbMzBdLFwicmVsYXRpb25zaGlwXCI6WzMxXSxcInRvXCI6WzMyLDEwNiwxMTEsMTg2XSxcIm1hY2hpbmVzLlwiOlszM10sXCJTaGVycnlcIjpbMzRdLFwiVHVya2xlLFwiOlszNV0sXCJQcm9mZXNzb3JcIjpbMzddLFwiU29jaW9sb2d5XCI6WzQwXSxcIlNjaWVuY2VcIjpbNDJdLFwiYXRcIjpbNDNdLFwiTUlUXCI6WzQ0XSxcImxpY2Vuc2VkXCI6WzQ3XSxcInBzeWNob2xvZ2lzdCxcIjpbNDhdLFwidXNlc1wiOls0OV0sXCJJbnRlcm5ldFwiOls1MF0sXCJNVURzXCI6WzUxLDEyM10sXCIobXVsdGktdXNlclwiOls1Ml0sXCJkb21haW5zLFwiOls1M10sXCJvclwiOls1NCwyMzYsMjQ5XSxcImluXCI6WzU1LDk5LDEzNCwxNDQsMTQ4LDIyMl0sXCJvbGRlclwiOls1Nl0sXCJnYW1pbmdcIjpbNTddLFwicGFybGFuY2VcIjpbNThdLFwibXVsdGktdXNlclwiOls1OV0sXCJkdW5nZW9ucylcIjpbNjBdLFwiYXNcIjpbNjEsMjU2XSxcImxhdW5jaGluZ1wiOls2M10sXCJwYWRcIjpbNjRdLFwiZm9yXCI6WzY1LDExMywyNTFdLFwiZXhwbG9yYXRpb25zXCI6WzY2XSxcInNvZnR3YXJlXCI6WzY4LDE5OF0sXCJkZXNpZ24sXCI6WzY5XSxcInVzZXJcIjpbNzBdLFwiaW50ZXJmYWNlcyxcIjpbNzFdLFwic2ltdWxhdGlvbixcIjpbNzJdLFwiYXJ0aWZpY2lhbFwiOls3Myw3NV0sXCJpbnRlbGxpZ2VuY2UsXCI6Wzc0XSxcImxpZmUsXCI6Wzc2XSxcImFnZW50cyxcIjpbNzddLFwiXFxcImJvdHMsXFxcIlwiOls3OF0sXCJ2aXJ0dWFsXCI6Wzc5XSxcInJlYWxpdHksXCI6WzgwXSxcIlxcXCJ0aGVcIjpbODJdLFwib24tbGluZVwiOls4M10sXCJ3YXlcIjpbODRdLFwibGlmZS5cXFwiXCI6Wzg2XSxcIlxcclxcblR1cmtsZSdzXCI6Wzg3XSxcImRpc2N1c3Npb25cIjpbODhdLFwicG9zdG1vZGVybmlzbVwiOls5MF0sXCJwYXJ0aWN1bGFybHlcIjpbOTJdLFwiZW5saWdodGVuaW5nLlwiOls5M10sXCJTaGVcIjpbOTRdLFwic2hvd3NcIjpbOTVdLFwiaG93XCI6Wzk2LDI0MF0sXCJwb3N0bW9kZXJuXCI6Wzk3LDI2MF0sXCJjb25jZXB0c1wiOls5OF0sXCJhcnQsXCI6WzEwMF0sXCJhcmNoaXRlY3R1cmUsXCI6WzEwMSwyNjFdLFwiZXRoaWNzXCI6WzEwM10sXCJhcmVcIjpbMTA0LDEzMV0sXCJyZWxhdGVkXCI6WzEwNV0sXCJjb25jcmV0ZVwiOlsxMDddLFwidG9waWNzXCI6WzEwOF0sXCJtdWNoXCI6WzEwOV0sXCJjbG9zZXJcIjpbMTEwXSxcImhvbWUsXCI6WzExMl0sXCJleGFtcGxlXCI6WzExNF0sXCJBSVwiOlsxMTUsMjU1XSxcInJlc2VhcmNoXCI6WzExNl0sXCIoTWluc2t5J3NcIjpbMTE3XSxcIlxcXCJTb2NpZXR5XCI6WzExOF0sXCJNaW5kXFxcIilcIjpbMTIwXSxcImV2ZW5cIjpbMTIyXSxcIihleGVtcGxpZmllZFwiOlsxMjRdLFwiYnlcIjpbMTI1LDE2MV0sXCJzdHVkZW50c1wiOlsxMjZdLFwid2l0aFwiOlsxMjcsMjMzXSxcIlgtd2luZG93XCI6WzEyOF0sXCJ0ZXJtaW5hbHNcIjpbMTI5XSxcIndob1wiOlsxMzAsMTU0XSxcImRvaW5nXCI6WzEzMl0sXCJob21ld29ya1wiOlsxMzNdLFwib25lXCI6WzEzNV0sXCJ3aW5kb3dcIjpbMTM2XSxcInNpbXVsdGFuZW91c2x5XCI6WzEzOF0sXCJwbGF5aW5nXCI6WzEzOV0sXCJvdXRcIjpbMTQwXSxcInNldmVyYWxcIjpbMTQxXSxcImRpZmZlcmVudFwiOlsxNDIsMTc5XSxcInJvbGVzXCI6WzE0M10sXCJzYW1lXCI6WzE0Nl0sXCJNVURcIjpbMTQ3XSxcIm90aGVyXCI6WzE0OSwyMjBdLFwid2luZG93cykuXCI6WzE1MF0sXCJUaG9zZVwiOlsxNTFdLFwieW91XCI6WzE1M10sXCJoYXZlXCI6WzE1NSwxNzcsMjQ3XSxcIihsaWtlXCI6WzE1Nl0sXCJtZSlcIjpbMTU3XSxcImJlZW5cIjpbMTU4XSxcInR1cm5lZFwiOlsxNTldLFwib2ZmXCI6WzE2MF0sXCJzaGFsbG93LFwiOlsxNjNdLFwicHJldGVudGlvdXMsXCI6WzE2NF0sXCJtZWFuaW5nbGVzc1wiOlsxNjVdLFwicGFpbnRpbmdzXCI6WzE2Nl0sXCJzY3VscHR1cmVzXCI6WzE2OF0sXCJ0aGF0XCI6WzE2OV0sXCJsaXR0ZXJcIjpbMTcwXSxcIm91clwiOlsxNzFdLFwibXVzZXVtc1wiOlsxNzJdLFwibW9kZXJuXCI6WzE3NF0sXCJhcnRcIjpbMTc1XSxcIm1heVwiOlsxNzZdLFwicGVyc3BlY3RpdmVcIjpbMTgwXSxcImFmdGVyXCI6WzE4MV0sXCJoZWFyaW5nXCI6WzE4Ml0sXCJ3aGF0XCI6WzE4M10sXCJUdXJrbGVcIjpbMTg0LDIyNV0sXCJoYXNcIjpbMTg1XSxcInNheS5cIjpbMTg3XSxcIlxcclxcblRoaXNcIjpbMTg4XSxcInBzeWNob2FuYWx5dGljYWxcIjpbMTkxXSxcImJvb2ssXCI6WzE5Ml0sXCJub3RcIjpbMTkzLDIyN10sXCJ0ZWNobmljYWxcIjpbMTk1LDIxNF0sXCJvbmUuXCI6WzE5Nl0sXCJIb3dldmVyLFwiOlsxOTddLFwiZGV2ZWxvcGVyc1wiOlsxOTldLFwiZW5naW5lZXJzXCI6WzIwMV0sXCJ3aWxsXCI6WzIwMl0sXCJmaW5kXCI6WzIwM10sXCJpdFwiOlsyMDRdLFwiaGlnaGx5XCI6WzIwNV0sXCJhY2Nlc3NpYmxlXCI6WzIwNl0sXCJiZWNhdXNlXCI6WzIwN10sXCJkZXB0aFwiOlsyMTBdLFwiYXV0aG9yJ3NcIjpbMjEzXSxcInVuZGVyc3RhbmRpbmdcIjpbMjE1XSxcImNyZWRpYmlsaXR5LlwiOlsyMTddLFwiVW5saWtlXCI6WzIxOF0sXCJtb3N0XCI6WzIxOSwyNTNdLFwiYXV0aG9yc1wiOlsyMjFdLFwidGhpc1wiOlsyMjMsMjY4XSxcImdlbnJlLFwiOlsyMjRdLFwiZG9lc1wiOlsyMjZdLFwiY29uc3RhbnRseVwiOlsyMjhdLFwiamFyXCI6WzIyOV0sXCJ0ZWNobmljYWxseS1saXRlcmF0ZVwiOlsyMzFdLFwicmVhZGVyXCI6WzIzMl0sXCJibGF0YW50XCI6WzIzNF0sXCJlcnJvcnNcIjpbMjM1XSxcImJvZ3VzXCI6WzIzN10sXCJhc3NlcnRpb25zXCI6WzIzOF0sXCJhYm91dFwiOlsyMzldLFwidGhpbmdzXCI6WzI0MV0sXCJ3b3JrLlwiOlsyNDJdLFwiQWx0aG91Z2hcIjpbMjQzXSxcIklcIjpbMjQ0LDI2Ml0sXCJwZXJzb25hbGx5XCI6WzI0NV0sXCJkb24ndFwiOlsyNDZdLFwidGltZVwiOlsyNDgsMjY1XSxcInBhdGllbmNlXCI6WzI1MF0sXCJNVURzLHZpZXdcIjpbMjUyXSxcInNuYWtlLW9pbCxcIjpbMjU3XSxcImFiaG9yXCI6WzI1OV0sXCJ0aG91Z2h0XCI6WzI2M10sXCJzcGVudFwiOlsyNjZdLFwicmVhZGluZ1wiOlsyNjddLFwiYm9va1wiOlsyNjldLFwid2FzXCI6WzI3MF0sXCJhblwiOlsyNzFdLFwiZXh0cmVtZWx5XCI6WzI3Ml0sXCJnb29kXCI6WzI3M10sXCJpbnZlc3RtZW50LlwiOlsyNzRdfX0sXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NTI2NTE3XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9jaS5uaWkuYWMuanAvbmNpZC9CQjAzNTM5NDI1XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NTIzMDE1XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vaXMubXVuaS5jei9wdWJsaWNhdGlvbi82NDQyNzBcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTUyNjUxN1wifV0sXCJWRk5cIjpcIlwiLFwiUFJcIjpbMjExNjMzOTgxMiwyMDQ0OTUwMjc0LDIwNzAyNjkwMTIsMjU3NjI5NzM3OSwxOTY4ODc2MzkzLDIxMTYxOTk1MDgsMTk4MDg1MDkyNCwyMTQ3MDUwMjk1LDIwNTMxMjAxNDIsMjE0NTQ4MTUxMywxOTg3OTMwNzg0LDE1MzUxNzQ1NzksMTc4MDM4MjQ1MywyMzI3NTIxMjk3LDIxNjkyNDA4NTMsMjAzODYwMDI0NSwxOTk2NTMzNDI1LDIwNTU4NzYzNjUsMTk4NTc0OTA3NCwyMTQ3MjY0NDU1LDIxMTYzMzk4MTIsMjA0NDk1MDI3NCwyMDcwMjY5MDEyLDI1NzYyOTczNzksMTk2ODg3NjM5MywyMTE2MTk5NTA4LDE5ODA4NTA5MjQsMjE0NzA1MDI5NSwyMDUzMTIwMTQyLDIxNDU0ODE1MTMsMTk4NzkzMDc4NCwxNTM1MTc0NTc5LDE3ODAzODI0NTMsMjMyNzUyMTI5NywyMTY5MjQwODUzLDIwMzg2MDAyNDUsMTk5NjUzMzQyNSwyMDU1ODc2MzY1LDE5ODU3NDkwNzQsMjE0NzI2NDQ1NV0sXCJBTkZcIjpbe1wiRk5cIjpcIlNoZXJyeVwiLFwiTE5cIjpcIlR1cmtsZVwiLFwiU1wiOjF9XSxcIkJUXCI6XCJhXCIsXCJQQlwiOlwiU2ltb24gJiBTY2h1c3RlclwifSJ9LHsibG9ncHJvYiI6LTE2LjQxNSwia2VzRW50aXR5SWQiOjE2Nzk0MTMsIklkIjoyMTIzODk5MjM4LCJUaSI6Im0ybSBmcm9tIG1vYmlsZSB0byBlbWJlZGRlZCBpbnRlcm5ldCIsIlkiOjIwMTEsIkQiOiIyMDExLTA0LTAxIiwiUklkIjpbMjEzNjM0ODE2N10sIkFBIjpbeyJBdU4iOiJnZW5nIHd1In0seyJBdU4iOiJzaGlscGEgdGFsd2FyIn0seyJBdU4iOiJrZXJzdGluIGpvaG5zc29uIn0seyJBdU4iOiJuYWdlZW4gaGltYXlhdCJ9LHsiQXVOIjoia2V2aW4gZCBqb2huc29uIn1dLCJGIjpbeyJGTiI6ImFpciBpbnRlcmZhY2UifSx7IkZOIjoiaW5mb3JtYXRpb24gc29jaWV0eSJ9LHsiRk4iOiJzb2Z0d2FyZSBkZXBsb3ltZW50In0seyJGTiI6Im5ldHdvcmsgYXJjaGl0ZWN0dXJlIn0seyJGTiI6Im1vYmlsZSB0ZWxlcGhvbnkifSx7IkZOIjoid2lyZWxlc3MifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6ImNvbXB1dGVyIG5ldHdvcmsifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJNMk06IEZyb20gbW9iaWxlIHRvIGVtYmVkZGVkIGludGVybmV0XCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTAwLFwiSW52ZXJ0ZWRJbmRleFwiOntcIklzXCI6WzBdLFwiTTJNXCI6WzEsMTcsMzgsNjUsNzVdLFwiaHlwZVwiOlsyXSxcIm9yXCI6WzNdLFwidGhlXCI6WzQsMTYsMjYsNDcsNjEsNzFdLFwiZnV0dXJlXCI6WzUsNDhdLFwib2ZcIjpbNiw1MCw2NCw3NCw5MF0sXCJvdXJcIjpbN10sXCJpbmZvcm1hdGlvblwiOls4XSxcInNvY2lldHk/XCI6WzldLFwiV2hhdFwiOlsxMF0sXCJkb2VzXCI6WzExXSxcIml0XCI6WzEyXSxcInRha2VcIjpbMTNdLFwidG9cIjpbMTQsNTldLFwidHVyblwiOlsxNV0sXCJ2aXNpb25cIjpbMThdLFwiaW50b1wiOlsxOV0sXCJyZWFsaXR5P1wiOlsyMF0sXCJJblwiOlsyMSw2N10sXCJ0aGlzXCI6WzIyXSxcImFydGljbGVcIjpbMjNdLFwid2VcIjpbMjQsNjksOTRdLFwiZGlzY3Vzc1wiOlsyNSw5NV0sXCJidXNpbmVzc1wiOlsyN10sXCJtb3RpdmF0aW9uc1wiOlsyOF0sXCJhbmRcIjpbMjksNDEsNTUsODZdLFwidGVjaG5vbG9neVwiOlszMCw0Myw1M10sXCJjaGFsbGVuZ2VzXCI6WzMxXSxcImZvclwiOlszMiw5OF0sXCJtYWNoaW5lLXRvLW1hY2hpbmVcIjpbMzNdLFwiY29tbXVuaWNhdGlvbnMuXCI6WzM0XSxcIldlXCI6WzM1LDQ1XSxcImhpZ2hsaWdodFwiOlszNl0sXCJrZXlcIjpbMzddLFwiYXBwbGljYXRpb25cIjpbMzldLFwicmVxdWlyZW1lbnRzXCI6WzQwXSxcIm1ham9yXCI6WzQyXSxcImdhcHMuXCI6WzQ0XSxcImFuYWx5emVcIjpbNDZdLFwiZGlyZWN0aW9uc1wiOls0OV0sXCJhaXJcIjpbNTFdLFwiaW50ZXJmYWNlXCI6WzUyXSxcImltcHJvdmVtZW50c1wiOls1NF0sXCJuZXR3b3JrXCI6WzU2XSxcImFyY2hpdGVjdHVyZXNcIjpbNTddLFwiZXZvbHV0aW9uXCI6WzU4XSxcImVuYWJsZVwiOls2MF0sXCJtYXNzXCI6WzYyXSxcImRlcGxveW1lbnRcIjpbNjNdLFwic2VydmljZXMuXCI6WzY2XSxcInBhcnRpY3VsYXIsXCI6WzY4XSxcImNvbnNpZGVyXCI6WzcwXSxcInNhbGllbnRcIjpbNzJdLFwiZmVhdHVyZXNcIjpbNzNdLFwidHJhZmZpY1wiOls3Nl0sXCJ0aGF0XCI6Wzc3XSxcIm1heVwiOls3OF0sXCJub3RcIjpbNzldLFwiYmVcIjpbODBdLFwic3VwcG9ydGVkXCI6WzgxXSxcImVmZmljaWVudGx5XCI6WzgyXSxcImJ5XCI6WzgzXSxcInByZXNlbnRcIjpbODRdLFwic3RhbmRhcmRzLFwiOls4NV0sXCJwcm92aWRlXCI6Wzg3XSxcImFuXCI6Wzg4XSxcIm92ZXJ2aWV3XCI6Wzg5XSxcInBvdGVudGlhbFwiOls5MV0sXCJlbmhhbmNlbWVudHMuXCI6WzkyXSxcIkZpbmFsbHksXCI6WzkzXSxcInN0YW5kYXJkc1wiOls5Nl0sXCJkZXZlbG9wbWVudFwiOls5N10sXCJNMk0uXCI6Wzk5XX19LFwiU1wiOlt7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9hYnN0cmFjdC9kb2N1bWVudC81NzQxMTQ0L1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8veWFkZGEuaWNtLmVkdS5wbC95YWRkYS9lbGVtZW50L2J3bWV0YTEuZWxlbWVudC5pZWVlLTAwMDAwNTc0MTE0NFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMTA5L01DT00uMjAxMS41NzQxMTQ0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LmluZm9uYS5wbC9yZXNvdXJjZS9id21ldGExLmVsZW1lbnQuaWVlZS1hcnQtMDAwMDA1NzQxMTQ0XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9qb3VybmFscy9jbS9jbTQ5Lmh0bWwjV3VUSkhKMTFcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kub3JnLzEwLjExMDkvTUNPTS4yMDExLjU3NDExNDRcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2llZWV4cGxvcmUuaWVlZS5vcmcvbHBkb2NzL2VwaWMwMy93cmFwcGVyLmh0bT9hcm51bWJlcj01NzQxMTQ0XCJ9XSxcIlZGTlwiOlwiSUVFRSBDb21tdW5pY2F0aW9ucyBNYWdhemluZVwiLFwiVlwiOjQ5LFwiSVwiOjQsXCJGUFwiOjM2LFwiTFBcIjo0MyxcIkRPSVwiOlwiMTAuMTEwOS9NQ09NLjIwMTEuNTc0MTE0NFwiLFwiUFJcIjpbMjEwNTEwMzc3NywyMTMyMjQ3MzYyLDE5Njg2NzYxNDMsMTk4MTg1MzQ1MSwyMTY4NTM4NjgwLDIxMjgzNzI1NjUsMjA0MDA0OTkwOSwyMTIzNTAzMDk2LDIwOTc0MjIzNDksMjEyNTQxMDcxOCwyMTA0NTIzNDE5LDIxMTE2MTk2MjYsMjEyMjYxNjExNiwyMTE5MDQ2NjQyLDIxMTA3NjcxODcsNjA3ODE2Mjc3LDIwNTg1NTc5NDgsMjAwMTU2NTM2MCwyMDE4MDAxODgwLDIxMTk5NzcyMDcsMjEwNTEwMzc3NywyMTMyMjQ3MzYyLDE5Njg2NzYxNDMsMTk4MTg1MzQ1MSwyMTY4NTM4NjgwLDIxMjgzNzI1NjUsMjA0MDA0OTkwOSwyMTIzNTAzMDk2LDIwOTc0MjIzNDksMjEyNTQxMDcxOCwyMTA0NTIzNDE5LDIxMTE2MTk2MjYsMjEyMjYxNjExNiwyMTE5MDQ2NjQyLDIxMTA3NjcxODcsNjA3ODE2Mjc3LDIwNTg1NTc5NDgsMjAwMTU2NTM2MCwyMDE4MDAxODgwLDIxMTk5NzcyMDddLFwiQU5GXCI6W3tcIkZOXCI6XCJHZW5nXCIsXCJMTlwiOlwiV3VcIixcIlNcIjoxfSx7XCJGTlwiOlwiU2hpbHBhXCIsXCJMTlwiOlwiVGFsd2FyXCIsXCJTXCI6Mn0se1wiRk5cIjpcIktlcnN0aW5cIixcIkxOXCI6XCJKb2huc3NvblwiLFwiU1wiOjN9LHtcIkZOXCI6XCJOYWdlZW5cIixcIkxOXCI6XCJIaW1heWF0XCIsXCJTXCI6NH0se1wiRk5cIjpcIktldmluIEQuXCIsXCJMTlwiOlwiSm9obnNvblwiLFwiU1wiOjV9XSxcIkJWXCI6XCJJRUVFIENvbW11bmljYXRpb25zIE1hZ2F6aW5lXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIklFRUVcIn0ifSx7ImxvZ3Byb2IiOi0xNi40NTIsImtlc0VudGl0eUlkIjoxNzQxMjY0LCJJZCI6MjEyNjg4MDM2NiwiVGkiOiJwcm9tb3RpbmcgdGhlIHVzZSBvZiBlbmQgdG8gZW5kIGNvbmdlc3Rpb24gY29udHJvbCBpbiB0aGUgaW50ZXJuZXQiLCJZIjoxOTk5LCJEIjoiMTk5OS0wOC0wMSIsIlJJZCI6WzIwNjI2NjM2NjQsMjE1ODczMzgyMywyMTQwNDcxNDM2LDI3NTM1NDI0NTcsMjEyNDQ3ODY3OCwyMDczNDQwNDYwLDE5OTA5MjA5MTQsMjA5ODM3NTY5OCwyMDk2MDc3Mzk3LDE5NzA4Mzc3MzQsMjEwNDgyMDQ3MywyMTI5MzQ4ODQwLDIwMjE1MTIwODMsMTkyMzI4OTMzNiwyMTE3MjY0NDM1LDE2NjgyNzA2NTksMTk3MDEzMTg2NSwyMDIzMTQwMDM3LDIxMzMyMTMwMTcsMjAxMTczMDM4OCwxNTQxMDQ4OTY5LDE5OTM1NDkwNTEsMTc5ODIyMzAxOSwxOTk5OTU1MTU2LDE1ODQ5NzE3NzEsMjAyMzM2NjY2MiwyMTIwNTA3MzM4LDIwNzA2NDYzNzUsMjE0NDYwMTYxMSwyMTQ2NDMwNTE3LDEyNzUxNjEwNzMsMjc3MjE1MTU5MCwxNDczOTUxMDQsNTYyNTM3NzksMTgyNjM5NjcwMV0sIkFBIjpbeyJBdU4iOiJzYWxseSBmbG95ZCJ9LHsiQXVOIjoia2V2aW4gciBmYWxsIn1dLCJGIjpbeyJGTiI6ImhzdGNwIn0seyJGTiI6InRjcCB3ZXN0d29vZCBwbHVzIn0seyJGTiI6ImggdGNwIn0seyJGTiI6InRjcCBmcmllbmRseSByYXRlIGNvbnRyb2wifSx7IkZOIjoiYWRkaXRpdmUgaW5jcmVhc2UgbXVsdGlwbGljYXRpdmUgZGVjcmVhc2UifSx7IkZOIjoidGNwIHR1bmluZyJ9LHsiRk4iOiJuZXR3b3JrIHRyYWZmaWMgY29udHJvbCJ9LHsiRk4iOiJuZXR3b3JrIGNvbmdlc3Rpb24ifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJyZWFsIHRpbWUgY29tcHV0aW5nIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlByb21vdGluZyB0aGUgdXNlIG9mIGVuZC10by1lbmQgY29uZ2VzdGlvbiBjb250cm9sIGluIHRoZSBJbnRlcm5ldFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE3MixcIkludmVydGVkSW5kZXhcIjp7XCJUaGlzXCI6WzBdLFwicGFwZXJcIjpbMSw3NV0sXCJjb25zaWRlcnNcIjpbMl0sXCJ0aGVcIjpbMywxNiwzMCwzNyw0NCw2MywxMjhdLFwicG90ZW50aWFsbHlcIjpbNF0sXCJuZWdhdGl2ZVwiOls1LDE5XSxcImltcGFjdHNcIjpbNiwyMF0sXCJvZlwiOls3LDExLDM5LDQ2LDY1LDcyLDk4LDEyMywxNzBdLFwiYW5cIjpbOCwxNDhdLFwiaW5jcmVhc2luZ1wiOls5XSxcImRlcGxveW1lbnRcIjpbMTBdLFwibm9uLWNvbmdlc3Rpb24tY29udHJvbGxlZFwiOlsxMl0sXCJiZXN0LWVmZm9ydFwiOlsxMyw1MCw2OF0sXCJ0cmFmZmljXCI6WzE0LDI4XSxcIm9uXCI6WzE1XSxcIkludGVybmV0LlwiOlsxN10sXCJUaGVzZVwiOlsxOCw4OF0sXCJyYW5nZVwiOlsyMV0sXCJmcm9tXCI6WzIyXSxcImV4dHJlbWVcIjpbMjNdLFwidW5mYWlybmVzc1wiOlsyNF0sXCJhZ2FpbnN0XCI6WzI1XSxcImNvbXBldGluZ1wiOlsyNl0sXCJUQ1BcIjpbMjcsMTI2XSxcInRvXCI6WzI5LDU5LDkxLDEzNywxNDddLFwicG90ZW50aWFsXCI6WzMxXSxcImZvclwiOlszMiw4MCw4NV0sXCJjb25nZXN0aW9uXCI6WzMzLDQxLDk5XSxcImNvbGxhcHNlLlwiOlszNF0sXCJUb1wiOlszNV0sXCJwcm9tb3RlXCI6WzM2XSxcImluY2x1c2lvblwiOlszOF0sXCJlbmQtdG8tZW5kXCI6WzQwXSxcImNvbnRyb2xcIjpbNDJdLFwiaW5cIjpbNDMsNzAsOTYsMTI3LDE0NSwxNjddLFwiZGVzaWduXCI6WzQ1XSxcImZ1dHVyZVwiOls0N10sXCJwcm90b2NvbHNcIjpbNDhdLFwidXNpbmdcIjpbNDksMTA2XSxcInRyYWZmaWMsXCI6WzUxXSxcIndlXCI6WzUyXSxcImFyZ3VlXCI6WzUzXSxcInRoYXRcIjpbNTQsMTExLDEyMiwxNTldLFwicm91dGVyXCI6WzU1LDE0NF0sXCJtZWNoYW5pc21zXCI6WzU2XSxcImFyZVwiOls1Nyw5MF0sXCJuZWVkZWRcIjpbNThdLFwiaWRlbnRpZnlcIjpbNjAsOTJdLFwiYW5kXCI6WzYxLDE1M10sXCJyZXN0cmljdFwiOls2Ml0sXCJiYW5kd2lkdGhcIjpbNjQsODYsMTYzXSxcInNlbGVjdGVkXCI6WzY2XSxcImhpZ2gtYmFuZHdpZHRoXCI6WzY3LDk0XSxcImZsb3dzXCI6WzY5LDgzLDE2Nl0sXCJ0aW1lc1wiOls3MSw5N10sXCJjb25nZXN0aW9uLlwiOls3MywxNzFdLFwiVGhlXCI6Wzc0XSxcImRpc2N1c3Nlc1wiOls3Nl0sXCJzZXZlcmFsXCI6Wzc3XSxcImdlbmVyYWxcIjpbNzhdLFwiYXBwcm9hY2hlc1wiOls3OSw4OV0sXCJpZGVudGlmeWluZ1wiOls4MV0sXCJ0aG9zZVwiOls4Ml0sXCJzdWl0YWJsZVwiOls4NF0sXCJyZWd1bGF0aW9uLlwiOls4N10sXCJhXCI6WzkzLDE0MywxNTQsMTY4XSxcImZsb3dcIjpbOTUsMTEwLDEzMywxNTZdLFwiYXNcIjpbMTAwXSxcInVucmVzcG9uc2l2ZSxcIjpbMTAxXSxcIlxcXCJub3RcIjpbMTAyXSxcIlRDUC1mcmllbmRseVxcXCIsXCI6WzEwM10sXCJvclwiOlsxMDRdLFwic2ltcGx5XCI6WzEwNV0sXCJkaXNwcm9wb3J0aW9uYXRlXCI6WzEwN10sXCJiYW5kd2lkdGguXCI6WzEwOF0sXCJBXCI6WzEwOV0sXCJpc1wiOlsxMTIsMTE1LDEzNCwxNTddLFwibm90XCI6WzExM10sXCJcXFwiVENQLWZyaWVuZGx5XFxcIlwiOlsxMTRdLFwib25lXCI6WzExNiwxMzUsMTU4XSxcIndob3NlXCI6WzExN10sXCJsb25nLXRlcm1cIjpbMTE4XSxcImFycml2YWxcIjpbMTE5XSxcInJhdGVcIjpbMTIwXSxcImV4Y2VlZHNcIjpbMTIxXSxcImFueVwiOlsxMjRdLFwiY29uZm9ybWFudFwiOlsxMjVdLFwic2FtZVwiOlsxMjldLFwiY2lyY3Vtc3RhbmNlcy5cIjpbMTMwXSxcIkFuXCI6WzEzMV0sXCJ1bnJlc3BvbnNpdmVcIjpbMTMyXSxcImZhaWxpbmdcIjpbMTM2XSxcInJlZHVjZVwiOlsxMzhdLFwiaXRzXCI6WzEzOV0sXCJvZmZlcmVkXCI6WzE0MF0sXCJsb2FkXCI6WzE0MV0sXCJhdFwiOlsxNDJdLFwicmVzcG9uc2VcIjpbMTQ2XSxcImluY3JlYXNlZFwiOlsxNDldLFwicGFja2V0XCI6WzE1MF0sXCJkcm9wXCI6WzE1MV0sXCJyYXRlLFwiOlsxNTJdLFwiZGlzcHJvcG9ydGlvbmF0ZS1iYW5kd2lkdGhcIjpbMTU1XSxcInVzZXNcIjpbMTYwXSxcImNvbnNpZGVyYWJseVwiOlsxNjFdLFwibW9yZVwiOlsxNjJdLFwidGhhblwiOlsxNjRdLFwib3RoZXJcIjpbMTY1XSxcInRpbWVcIjpbMTY5XX19LFwiU1wiOlt7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy94cGwvZnJlZWFic19hbGwuanNwP2FybnVtYmVyPTc5MzAwMlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vd3d3LmNzaWUubnR1LmVkdS50dy9+Y2NmL3NwcmluZzIwMDQvRmxveWQ5OWJcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5pY2lyLm9yZy9mbG95ZC9wYXBlcnMvY29sbGFwc2UuZmViOTgucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9rZXZpbmZhbGwuY29tL3NlaXBhZ2UvdGFsa3MvdWNibW1zZW0ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vY3Nld2ViLnVjc2QuZWR1L2NsYXNzZXMvd2kwMS9jc2UyMjIvcGFwZXJzL2Zsb3lkLWUyZS1wcm9tb3RlLXRvbjk5LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vc3BlZWQuY2lzLm5jdHUuZWR1LnR3L355ZGxpbi9jb3Vyc2UvY24vbnIvcGFwZXJzLzFfQ29uZ2VzdGlvbkNvbnRyb2wvMV9UY3AvVE9OJTI3OTklMjBQcm9tb3RpbmclMjB0aGUlMjB1c2UlMjBvZiUyMGVuZC10by1lbmQlMjBjb25nZXN0aW9uJTIwY29udHJvbCUyMGluJTIwdGhlJTIwaW50ZXJuZXQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MudWNjcy5lZHUvfnh6aG91L3RlYWNoaW5nL0NTNTIyL1Byb2plY3RzL0UyRUNvbmdDb250cm9sLVRPTjE5OTkucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wYWdpbmFzLmZlLnVwLnB0L35tcmljYXJkby8wMl8wMy9hbXNyL2FydGlnb3MvZmxveWRGYWxsLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLndwaS5lZHUvfnJlay9BZHZfTmV0cy9QYXBlcnMvUHJvbW90aW5nX0V0RV9DQy5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL3Rvbi90b243Lmh0bWwjRmxveWRGOTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2llZWV4cGxvcmUuaWVlZS5vcmcvZG9jdW1lbnQvNzkzMDAyL1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vd3d3Lmljc3QucGt1LmVkdS5jbi9jb3Vyc2UvbWRuL3JlZi9DQzAyLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvZnRfZ2F0ZXdheS5jZm0/aWQ9MzE2NzQwJnR5cGU9cGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9keC5kb2kub3JnLzEwLjExMDkvOTAuNzkzMDAyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MzE2NzQwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLm9yZy8xMC4xMTA5LzkwLjc5MzAwMlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vd3d3LmNvbXNvYy5vcmcvbmV0L3ByaXZhdGUvMTk5OS9hdWcvcGRmLzA3bmV0MDQtZmxveWQucGRmXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly93d3cuaWVlZXhwbG9yZS5pZWVlLm9yZy9zdGFtcC9zdGFtcC5qc3A/YXJudW1iZXI9MDA3OTMwMDJcIn1dLFwiVkZOXCI6XCJJRUVFIEFDTSBUcmFuc2FjdGlvbnMgb24gTmV0d29ya2luZ1wiLFwiVlwiOjcsXCJJXCI6NCxcIkZQXCI6NDU4LFwiTFBcIjo0NzIsXCJET0lcIjpcIjEwLjExMDkvOTAuNzkzMDAyXCIsXCJDQ1wiOntcIjU2MjUzNzc5XCI6W1wiQSB2YXJpYW50IG9mIGZyYWdtZW50YXRpb24tYmFzZWQgY29uZ2VzdGlvbiBjb2xsYXBzZSBjb25jZXJucyB0aGUgbmV0d29yayB0cmFuc21pdHRpbmcgcGFja2V0cyByZWNlaXZlZCBjb3JyZWN0bHkgYnkgdGhlIHRyYW5zcG9ydC1sZXZlbCBhdCB0aGUgZW5kIG5vZGUsIGJ1dCBzdWJzZXF1ZW50bHkgZGlzY2FyZGVkIGJ5IHRoZSBlbmQtbm9kZSBiZWZvcmUgdGhleSBjYW4gYmUgb2YgdXNlIHRvIHRoZSBlbmQgdXNlciBbIFZhcjk2IF0uXCJdLFwiMTI3NTE2MTA3M1wiOltcIkZvciBhIHJvdXRlciB3aXRoIGFjdGl2ZSBxdWV1ZSBtYW5hZ2VtZW50IHN1Y2ggYXMgUkVEIFtGSjkzXSwgdGhlIGFycml2YWwgcmF0ZXMgb2YgaGlnaC1iYW5kd2lkdGggZmxvd3MgY2FuIGJlIGVmZmljaWVudGx5IGVzdGltYXRlZCBmcm9tIHRoZSByZWNlbnQgcGFja2V0IGRyb3AgaGlzdG9yeSBhdCB0aGUgcm91dGVyIFsgRkY5NyBdLlwiXSxcIjE1NDEwNDg5NjlcIjpbXCJJbiB0aGlzIHNlY3Rpb24sIHdlIGV4cGxvcmUgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRocm91Z2hwdXQgYW5kIHRoZSBwYWNrZXQgZHJvcCByYXRlIGZvciBhIGNvbmZvcm1hbnQgVENQIGNvbm5lY3Rpb24gWzExXSwgWzI2XSwgWyAyMiBdLCBbMjNdLlxcdTAwMWJUaGUgZXF1YXRpb24gdGhhdCByZXN1bHRzIGZyb20gdGhpcyBzdGVhZHktc3RhdGUgbW9kZWwgaGFzIGFsc28gYmVlbiBwcm9wb3NlZCBhcyBhIGJhc2lzIGZvciBuZXcgY29uZ2VzdGlvbi1jb250cm9sIG1lY2hhbmlzbXMgWyAyMiBdLlwiXSxcIjE1ODQ5NzE3NzFcIjpbXCJJbiBwYXJ0aWN1bGFyLCB3ZSBzaG93IHRoYXQgd2hpbGUgdGhlIHVzZSBvZiBjb25jdXJyZW50IGNvbm5lY3Rpb25zIGluY3JlYXNlcyB0aHJvdWdocHV0IGZvciB0aG9zZSBhcHBsaWNhdGlvbnMgdGhhdCBicmVhayBhIFRDUCBjb25uZWN0aW9uIGludG8gbXVsdGlwbGUgY29ubmVjdGlvbnMgKHJlbGF0aXZlIHRvIHRob3NlIGFwcGxpY2F0aW9ucyB0aGF0IGRvIG5vdCBkbyB0aGlzKSwgaXQgYWxzbyBpbmNyZWFzZXMgdGhlIHBhY2tldCBkcm9wIHJhdGUgc2hhcmVkIGJ5IGFsbCBvZiB0aGUgYmVzdC1lZmZvcnQgdHJhZmZpYyAoc2VlIGFsc28gWzJdKS5cIl0sXCIxNjY4MjcwNjU5XCI6W1wiRnJhZ21lbnRhdGlvbi1iYXNlZCBjb25nZXN0aW9uIGNvbGxhcHNlWzE2XSwgWyAyOSBdLCBjb25zaXN0cyBvZiB0aGUgbmV0d29yayB0cmFuc21pdHRpbmcgZnJhZ21lbnRzIG9yIGNlbGxzIG9mIHBhY2tldHMgdGhhdCB3aWxsIGJlIGRpc2NhcmRlZCBhdCB0aGUgcmVjZWl2ZXIgYmVjYXVzZSB0aGV5IGNhbm5vdCBiZSByZWFzc2VtYmxlZCBpbnRvIGEgdmFsaWQgcGFja2V0LlxcdTAwMWJBbHRob3VnaCB0aGUgbGFuZ3VhZ2UgaW4gdGhpcyBwYXBlciByZWZlcnMgb25seSB0byBwYWNrZXQgZHJvcHMsIHByb3Bvc2FscyBoYXZlIGJlZW4gbWFkZSB0byBhZGQgZXhwbGljaXQgY29uZ2VzdGlvbiBub3RpZmljYXRpb24gdG8gVENQL0lQIFsxMl0sIFsgMjkgXS5cIl0sXCIxNzk4MjIzMDE5XCI6W1wiVGhlIHByYWN0aWNlIG9mIHBhY2tldCBmcmFnbWVudGF0aW9uIHNob3VsZCBkZWNyZWFzZSB3aXRoIHRoZSB1c2Ugb2YgTVRVIGRpc2NvdmVyeSBbMjFdLlwiXSxcIjE4MjYzOTY3MDFcIjpbXCJBbm90aGVyIG1lY2hhbmlzbSBpcyBQYXRoIE1UVSBkaXNjb3ZlcnkgWzE3XSwgd2hpY2ggaGVscHMgdG8gbWluaW1pemUgcGFja2V0IGZyYWdtZW50YXRpb24uXCJdLFwiMTkyMzI4OTMzNlwiOltcIlRoZSBwcmFjdGljZSBvZiBwYWNrZXQgZnJhZ21lbnRhdGlvbiBzaG91bGQgZGVjcmVhc2Ugd2l0aCB0aGUgdXNlIG9mIE1UVSBkaXNjb3ZlcnkgW01EOTBdLCBidXQgdGhlIHByYWN0aWNlIG9mIGVuY3J5cHRpb24gWyBBdGs5NSBdIGlzIG1vcmUgbGlrZWx5IHRvIGJlIGluY3JlYXNpbmcuXCJdLFwiMTk3MDgzNzczNFwiOltcIkNsb3NlIHRvIDEwMCUgb2YgdGhlIHBhY2tldHMgaW4gdGhlIEludGVybmV0IGFyZSAxNTAwIGJ5dGVzIG9yIHNtYWxsZXIgWzMxXTsgcm91dGVycyBjb3VsZCBkZXRlY3QgdGhvc2UgaGlnaC1iYW5kd2lkdGggZmxvd3MgdGhhdCB1c2UgbGFyZ2VyIHBhY2tldHMgc2ltcGx5IGJ5IG9ic2VydmluZyB0aGUgc2l6ZXMgb2YgcGFja2V0cyBpbiB0aGUgcmVjZW50IGhpc3Rvcnkgb2YgZHJvcHBlZCBwYWNrZXRzLlwiXSxcIjE5OTA5MjA5MTRcIjpbXCJJbiB0aGlzIHNlY3Rpb24sIHdlIGV4cGxvcmUgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRocm91Z2hwdXQgYW5kIHRoZSBwYWNrZXQgZHJvcCByYXRlIGZvciBhIGNvbmZvcm1hbnQgVENQIGNvbm5lY3Rpb24gWzExXSwgWzI2XSwgWzIyXSwgWzIzXS5cIixcIlRoaXMgZXF1YXRpb24gaGFzIGFsc28gYmVlbiB2ZXJpZmllZCB3aXRoIHNpbXVsYXRpb25zIGFuZCBleHBlcmltZW50cyBpbiBbMjNdLlwiXSxcIjE5OTM1NDkwNTFcIjpbXCJbIDExIF0gYW5hbHl6ZXMgdGhpcyBkaWZmZXJlbmNlLCBhbmQgZ29lcyBvbiB0byBkaXNjdXNzIHRoZSByZWxhdGl2ZSBkaXN0cmlidXRpb24gb2YgYmFuZHdpZHRoIGJldHdlZW4gdHdvIGNvbXBldGluZyBUQ1AgY29ubmVjdGlvbnMgb24gcGF0aHMgd2l0aCBkaWZmZXJlbnQgbnVtYmVycyBvZiBjb25nZXN0ZWQgZ2F0ZXdheXMuXFx1MDAxYkZvciBleGFtcGxlLCBbIDExIF0gc2hvd3MgaG93LCBhcyBhIHJlc3VsdCBvZiBUQ1DigJlzIGNvbmdlc3Rpb24gY29udHJvbCBhbGdvcml0aG1zLCBhIGNvbm5lY3Rpb27igJlzIHRocm91Z2hwdXQgdmFyaWVzIGFzIHRoZSBpbnZlcnNlIG9mIHRoZSBjb25uZWN0aW9u4oCZcyByb3VuZC10cmlwIHRpbWUuXFx1MDAxYkZvciBwYXRocyB3aXRoIG11bHRpcGxlIGNvbmdlc3RlZCBnYXRld2F5cywgWyAxMSBdIGZ1cnRoZXIgc2hvd3MgaG93IGEgY29ubmVjdGlvbuKAmXMgdGhyb3VnaHB1dCB2YXJpZXMgYXMgdGhlIGludmVyc2Ugb2YgdGhlIHNxdWFyZSByb290IG9mIHRoZSBudW1iZXIgb2YgY29uZ2VzdGVkIGdhdGV3YXlzLlxcdTAwMWJJbiB0aGlzIHNlY3Rpb24sIHdlIGV4cGxvcmUgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRocm91Z2hwdXQgYW5kIHRoZSBwYWNrZXQgZHJvcCByYXRlIGZvciBhIGNvbmZvcm1hbnQgVENQIGNvbm5lY3Rpb24gWyAxMSBdLCBbMjZdLCBbMjJdLCBbMjNdLlxcdTAwMWJXZSBhc3N1bWUgYSBzdGVhZHktc3RhdGUgbW9kZWwgb2YgVENQIGFzIGludHJvZHVjZWQgaW4gU2VjdGlvbiBWIG9mIFsgMTEgXS5cIl0sXCIxOTk5OTU1MTU2XCI6W1wiQ29uZ2VzdGlvbiBjb2xsYXBzZSB3YXMgZmlyc3RyZXBvcnRlZCBpbiB0aGUgbWlkIDE5ODBzIFsgTmFnODQgXSwgYW5kIHdhcyBsYXJnZWx5IGR1ZSB0byBUQ1AgY29ubmVjdGlvbnMgdW5uZWNlc3NhcmlseSByZXRyYW5zbWl0dGluZyBwYWNrZXRzIHRoYXQgd2VyZSBlaXRoZXIgaW4gdHJhbnNpdCBvciBoYWQgYWxyZWFkeSBiZWVuIHJlY2VpdmVkIGF0IHRoZSByZWNlaXZlci5cXHUwMDFiQ2xhc3NpY2FsIGNvbmdlc3Rpb24gY29sbGFwc2UgaXMgYSBzdGFibGUgY29uZGl0aW9uIHRoYXQgY2FuIHJlc3VsdCBpbiB0aHJvdWdocHV0IHRoYXQgaXMgYSBzbWFsbCBmcmFjdGlvbiBvZiBub3JtYWwgWyBOYWc4NCBdLlwiXSxcIjIwMTE3MzAzODhcIjpbXCJbOF0gZGlzY3Vzc2VzIHRoZSByZWxhdGl2ZSBkaXN0cmlidXRpb24gb2YgYmFuZHdpZHRoIGJldHdlZW4gdHdvIGNvbXBldGluZyBUQ1AgY29ubmVjdGlvbnMgd2l0aCBkaWZmZXJlbnQgcm91bmQtdHJpcCB0aW1lcy5cIl0sXCIyMDIxNTEyMDgzXCI6W1widGltZW91dCBbNV0uXCJdLFwiMjAyMzE0MDAzN1wiOltcIkEgcm91dGVyIGNhbiDigJxyZWd1bGF0ZeKAnSBhIGZsb3figJlzIGJhbmR3aWR0aCBieSBkaWZmZXJlbnRpYWxseSBzY2hlZHVsaW5nIHBhY2tldHMgZnJvbSB0aGF0IGZsb3csIG9yIGJ5IHByZWZlcmVudGlhbGx5IGRyb3BwaW5nIHBhY2tldHMgZnJvbSB0aGF0IGZsb3cgYXQgdGhlIHJvdXRlciBbMThdLlwiLFwiVGhpcyBtaWRkbGUgcmFuZ2Ugd291bGQgYWxzbyBpbmNsdWRlIEZDRlMgc2NoZWR1bGluZyB3aXRoIGRpZmZlcmVudGlhbCBkcm9wcGluZyBmb3IgZmxvd3MgdXNpbmcgYSBkaXNwcm9wb3J0aW9uYXRlIHNoYXJlIG9mIHRoZSBiYW5kd2lkdGggWzE4XSwgb3Igc2NoZWR1bGluZyBtZWNoYW5pc21zIHN1Y2ggYXMgY2xhc3MtYmFzZWQgcXVldWVpbmcgKENCUSkgWzEwXSBvciBzdG9jaGFzdGljIGZhaXIgcXVldWVpbmcgKFNGUSkgWzIwXSB0aGF0IGNhbiBvcGVyYXRlIG9uIGxldmVscyBvZiBncmFudWxhcml0eSBiZXR3ZWVuIHRoZSB0d28gZXh0cmVtZXMgb2YgZWl0aGVyIGEgc2luZ2xlIGZsb3cgb3IgdGhlIGVudGlyZSBhZ2dyZWdhdGUgb2YgYmVzdC1lZmZvcnQgdHJhZmZpYy5cIl0sXCIyMDIzMzY2NjYyXCI6W1wiRnJhZ21lbnRhdGlvbi1iYXNlZCBjb25nZXN0aW9uIGNvbGxhcHNlWyAxNiBdLCBbMjldLCBjb25zaXN0cyBvZiB0aGUgbmV0d29yayB0cmFuc21pdHRpbmcgZnJhZ21lbnRzIG9yIGNlbGxzIG9mIHBhY2tldHMgdGhhdCB3aWxsIGJlIGRpc2NhcmRlZCBhdCB0aGUgcmVjZWl2ZXIgYmVjYXVzZSB0aGV5IGNhbm5vdCBiZSByZWFzc2VtYmxlZCBpbnRvIGEgdmFsaWQgcGFja2V0LlwiXSxcIjIwNjI2NjM2NjRcIjpbXCJBeGVscm9kIGluIOKAnFRoZSBFdm9sdXRpb24gb2YgQ29vcGVyYXRpb27igJ0gWzFdIGRpc2N1c3NlcyBzb21lIG9mIHRoZSBjb25kaXRpb25zIHJlcXVpcmVkIGlmIGNvb3BlcmF0aW9uIGlzIHRvIGJlIG1haW50YWluZWQgaW4gYSBzeXN0ZW0gYXMgYSBzdGFibGUgc3RhdGUuXCJdLFwiMjA3MzQ0MDQ2MFwiOltcIkluIGNvbXBhcmlzb24gdG8gRmFpciBRdWV1ZWluZyBbIERLUzkwIF0gb3IgUm91bmQgUm9iaW4gc2NoZWR1bGluZywgRklGTyBzY2hlZHVsaW5nIHJlZHVjZXMgdGhlIHRhaWwgb2YgdGhlIGRlbGF5IGRpc3RyaWJ1dGlvbiBbQ1NaOTJdLlwiXSxcIjIwOTgzNzU2OThcIjpbXCJUaGlzIG1pZGRsZSByYW5nZSB3b3VsZCBhbHNvIGluY2x1ZGUgRkNGUyBzY2hlZHVsaW5nIHdpdGggZGlmZmVyZW50aWFsIGRyb3BwaW5nIGZvciBmbG93cyB1c2luZyBhIGRpc3Byb3BvcnRpb25hdGUgc2hhcmUgb2YgdGhlIGJhbmR3aWR0aCBbTE05Nl0sIG9yIHNjaGVkdWxpbmcgbWVjaGFuaXNtcyBzdWNoIGFzIENsYXNzLUJhc2VkIFF1ZXVlaW5nIChDQlEpIFsgRko5NSBdIG9yIFN0b2NoYXN0aWMgRmFpciBRdWV1ZWluZyAoU0ZRKSBbTWNLOTBdIHRoYXQgY2FuIG9wZXJhdGUgb24gbGV2ZWxzIG9mIGdyYW51bGFyaXR5IGJldHdlZW4gdGhlIHR3byBleHRyZW1lcyBvZiBlaXRoZXIgYSBzaW5nbGUgZmxvdyBvciB0aGUgZW50aXJlIGFnZ3JlZ2F0ZSBvZiBiZXN0LWVmZm9ydCB0cmFmZmljLlwiXSxcIjIxMDQ4MjA0NzNcIjpbXCIoRklGTyBxdWV1ZWluZ+KAmXMgdG9sZXJhbmNlIG9mIHNob3J0IGJ1cnN0cyByZWR1Y2VzIHRoZSB3b3JzdC1jYXNlIHBhY2tldCBkZWxheSBmb3IgcGFja2V0cyB0aGF0IGFycml2ZSBhdCB0aGUgcm91dGVyIGluIGEgYnVyc3QsIGNvbXBhcmVkIHRvIHRoZSB3b3JzdC1jYXNlIGRlbGF5cyBmcm9tIHBlcmZsb3cgc2NoZWR1bGluZyBhbGdvcml0aG1zIFszXSkuXCIsXCJJbiBjb21wYXJpc29uIHRvIEZRIFs0XSBvciBSb3VuZCBSb2JpbiBzY2hlZHVsaW5nLCBGQ0ZTIHNjaGVkdWxpbmcgcmVkdWNlcyB0aGUgdGFpbCBvZiB0aGUgZGVsYXkgZGlzdHJpYnV0aW9uIFszXS5cIl0sXCIyMTE3MjY0NDM1XCI6W1wiVGhlIGFzc3VtcHRpb24gaW4gdGhpcyBtb2RlbCBvZiBhIGRldGVybWluaXN0aWMgYW5kIHJlcGVhdGFibGUgcGF0dGVybiwgYWx0aG91Z2ggYWRtaXR0ZWRseSB1bnJlYWxpc3RpYywgbGVhZHMgdG8gcmVzdWx0cyB2ZXJpZmllZCBieSBzaW11bGF0aW9ucyBpbiB0aGlzIHNlY3Rpb24gYW5kIGJ5IGluZGVwZW5kZW50bHkgZGVyaXZlZCBhbmQgbW9yZSByaWdvcm91cyBhbmFseXNpcyBpbiBbMjZdLCBbMTldLCBbMjddLlwiXSxcIjIxMjA1MDczMzhcIjpbXCJJbiBwYXJ0aWN1bGFyLCB3ZSBzaG93IHRoYXQgd2hpbGUgdGhlIHVzZSBvZiBjb25jdXJyZW50IGNvbm5lY3Rpb25zIGluY3JlYXNlcyB0aHJvdWdocHV0IGZvciB0aG9zZSBhcHBsaWNhdGlvbnMgdGhhdCBicmVhayBhIFRDUCBjb25uZWN0aW9uIGludG8gbXVsdGlwbGUgY29ubmVjdGlvbnMgKHJlbGF0aXZlIHRvIHRob3NlIGFwcGxpY2F0aW9ucyB0aGF0IGRvIG5vdCBkbyB0aGlzKSwgaXQgYWxzbyBpbmNyZWFzZXMgdGhlIHBhY2tldCBkcm9wIHJhdGUgc2hhcmVkIGJ5IGFsbCBvZiB0aGUgYmVzdC1lZmZvcnQgdHJhZmZpYyAoc2VlIGFsc28gWyAyIF0pLlwiXSxcIjIxMjQ0Nzg2NzhcIjpbXCJHaXZlbiB0aGUgcGFja2V0IGRyb3AgcmF0ZSB0aGUgbWluaW11bSByb3VuZC10cmlwIHRpbWUgYW5kIHRoZSBtYXhpbXVtIHBhY2tldCBzaXplIGEgcm91dGVyIGNhbiB1c2UgKDEpLCBvciB0aGUgaW1wcm92ZWQgZm9ybSBvZiB0aGUgZXF1YXRpb24gZ2l2ZW4gaW4gWzI3XSwgdG8gZWFzaWx5IGNhbGN1bGF0ZSB0aGUgbWF4aW11bSBhcnJpdmFsIHJhdGUgZnJvbSBhIGNvbmZvcm1hbnQgVENQIGNvbm5lY3Rpb24gaW4gc2ltaWxhciBjaXJjdW1zdGFuY2VzLlwiLFwiVGhlIGFzc3VtcHRpb24gaW4gdGhpcyBtb2RlbCBvZiBhIGRldGVybWluaXN0aWMgYW5kIHJlcGVhdGFibGUgcGF0dGVybiwgYWx0aG91Z2ggYWRtaXR0ZWRseSB1bnJlYWxpc3RpYywgbGVhZHMgdG8gcmVzdWx0cyB2ZXJpZmllZCBieSBzaW11bGF0aW9ucyBpbiB0aGlzIHNlY3Rpb24gYW5kIGJ5IGluZGVwZW5kZW50bHkgZGVyaXZlZCBhbmQgbW9yZSByaWdvcm91cyBhbmFseXNpcyBpbiBbMjZdLCBbMTldLCBbMjddLlwiLFwiYmFja29mZiBpbiB0aGUgbW9kZWwsIGFzIGluIFsyN10sIGdpdmVzIGEgbXVjaCBtb3JlIHJlYWxpc3RpYyByZXN1bHQuXCIsXCJUaGUgY3VydmVkIHNvbGlkIGxpbmUgaW4gdGhlIGJvdHRvbSBncmFwaCBzaG93cyB0aGUgcmV2aXNlZCBlcXVhdGlvbiBmcm9tIFsyN10uXCJdLFwiMjEzMzIxMzAxN1wiOltcIk9uZSBzdWNoIG1lY2hhbmlzbSBpcyBFYXJseSBQYWNrZXQgRGlzY2FyZCBbMjhdLCB3aGljaCBhcnJhbmdlcyB0aGF0IHdoZW4gYW4gQVRNIHN3aXRjaCBkcm9wcyBjZWxscywgaXQgd2lsbCBkcm9wIGEgY29tcGxldGUgZnJhbWXigJlzIHdvcnRoIG9mIGNlbGxzLlwiXSxcIjIxNDA0NzE0MzZcIjpbXCJUaGUgdXNlIG9mIGVuY3J5cHRpb24gaW4gdGhlIElQIFNlY3VyaXR5IFByb3RvY29sIChJUHNlYykgWzE1XSBjb3VsZCBwcmV2ZW50IHJvdXRlcnMgZnJvbSB1c2luZyBzb3VyY2UgSVAgYWRkcmVzc2VzIGFuZCBwb3J0IG51bWJlcnMgZm9yIGlkZW50aWZ5aW5nIHNvbWUgZmxvd3M7IGZvciB0aGlzIHRyYWZmaWMsIHJvdXRlcnMgY291bGQgdXNlIHRoZSB0cmlwbGUgaW4gdGhlIHBhY2tldCBoZWFkZXIgdGhhdCBkZWZpbmVzIHRoZSBTZWN1cml0eSBBc3NvY2lhdGlvbiB0byBpZGVudGlmeSBpbmRpdmlkdWFsIGZsb3dzIG9yIGFnZ3JlZ2F0ZXMgb2YgZmxvd3MuXCJdLFwiMjE0NDYwMTYxMVwiOltcIk9uZSBhcHByb2FjaCBpcyB0byBwcm9wb3NlLCBhcyB0aGUgcHJpbWFyeSBtZWNoYW5pc20gZm9yIHNoYXJpbmcgc2NhcmNlIGJhbmR3aWR0aCwgdGhhdCByb3V0ZXJzIGlzb2xhdGUgZWFjaCBmbG8gdywgYXMgbXVjaCBhcyBwb3NzaWJsZSwgZnJvbSB0aGUgZWZmZWN0cyBvZiBvdGhlciBmbG8gd3MgWyBTaGU5NCBdLlwiXSxcIjIxNDY0MzA1MTdcIjpbXCJUaGlzIG1pZGRsZSByYW5nZSB3b3VsZCBhbHNvIGluY2x1ZGUgRkNGUyBzY2hlZHVsaW5nIHdpdGggZGlmZmVyZW50aWFsIGRyb3BwaW5nIGZvciBmbG93cyB1c2luZyBhIGRpc3Byb3BvcnRpb25hdGUgc2hhcmUgb2YgdGhlIGJhbmR3aWR0aCBbMThdLCBvciBzY2hlZHVsaW5nIG1lY2hhbmlzbXMgc3VjaCBhcyBjbGFzcy1iYXNlZCBxdWV1ZWluZyAoQ0JRKSBbMTBdIG9yIHN0b2NoYXN0aWMgZmFpciBxdWV1ZWluZyAoU0ZRKSBbMjBdIHRoYXQgY2FuIG9wZXJhdGUgb24gbGV2ZWxzIG9mIGdyYW51bGFyaXR5IGJldHdlZW4gdGhlIHR3byBleHRyZW1lcyBvZiBlaXRoZXIgYSBzaW5nbGUgZmxvdyBvciB0aGUgZW50aXJlIGFnZ3JlZ2F0ZSBvZiBiZXN0LWVmZm9ydCB0cmFmZmljLlwiXSxcIjIxNTg3MzM4MjNcIjpbXCJGb3IgYSByb3V0ZXIgd2l0aCBhY3RpdmUgcXVldWUgbWFuYWdlbWVudCBzdWNoIGFzIFJFRCBbOV0sIHRoZSBhcnJpdmFsIHJhdGVzIG9mIGhpZ2gtYmFuZHdpZHRoIGZsb3dzIGNhbiBiZSBlZmZpY2llbnRseSBlc3RpbWF0ZWQgZnJvbSB0aGUgcmVjZW50IHBhY2tldCBkcm9wIGhpc3RvcnkgYXQgdGhlIHJvdXRlciBbNl0uXCJdLFwiMjc1MzU0MjQ1N1wiOltcImluIG1vZGVybiBpbXBsZW1lbnRhdGlvbnMgb2YgVENQIFsxNF0uXCIsXCJOZXZlcnRoZWxlc3MsIHRoZSB0d28gbGltaXRhdGlvbnMgb24gYSBUQ1DigJlzIHdpbmRvdyBpbmNyZWFzZSBhbmQgZGVjcmVhc2UgYWxnb3JpdGhtcyBoYXZlIGJlZW4gZm9sbG93ZWQgYnkgYWxsIGNvbmZvcm1hbnQgVENQIGltcGxlbWVudGF0aW9ucyBzaW5jZSAxOTg4IFsxNF0sIGFuZCBoYXZlIGFuIGluc3RhbGxlZCBiYXNlIGluIHRoZSBlbmQgc3lzdGVtcyBvZiB0aGUgSW50ZXJuZXQgdGhhdCB3aWxsIHBlcnNpc3QgZm9yIHNvbWUgdGltZSwgZXZlbiBpZiBhdCBzb21lIHBvaW50IGluIHRoZSBmdXR1cmUgY2hhbmdlcyBtaWdodCBiZSBwcm9wb3NlZCB0byB0aGUgVENQIHN0YW5kYXJkcyB0byBhbGxvdyBtb3JlIGFnZ3Jlc3NpdmUgcmVzcG9uc2VzIHRvIGNvbmdlc3Rpb24uXCIsXCJTaW5jZSBjb25nZXN0aW9uIGNvbnRyb2wgd2FzIGludHJvZHVjZWQgdG8gVENQIGluIDE5ODggWzE0XSwgVENQIGZsb3dzIGluIHRoZSBJbnRlcm5ldCBoYXZlIHVzZWQgcGFja2V0IGRyb3BzIGFzIGFuIGluZGljYXRpb24gb2YgY29uZ2VzdGlvbiwgYW5kIGhhdmUgcmVzcG9uZGVkIGJ5IHJlZHVjaW5nIHRoZWlyIG9mZmVyZWQgbG9hZCBieSBoYWxmIGZvciBlYWNoIHdpbmRvdyBvZiBkYXRhIGV4cGVyaWVuY2luZyBhIHBhY2tldCBkcm9wLlwiXSxcIjI3NzIxNTE1OTBcIjpbXCJDb25nZXN0aW9uIGNvbGxhcHNlIHdhcyBmaXJzdCByZXBvcnRlZCBpbiB0aGUgbWlkIDE5ODDigJlzIFsyNF0sIGFuZCB3YXMgbGFyZ2VseSBkdWUgdG8gVENQIGNvbm5lY3Rpb25zXCIsXCJnb29kcHV0IHRoYXQgaXMgYSBzbWFsbCBmcmFjdGlvbiBvZiBub3JtYWwgWzI0XS5cIl19LFwiUFJcIjpbMjE1ODczMzgyMywyNzUzNTQyNDU3LDIxNjMwOTMxMDcsMjEyNDQ3ODY3OCwxOTk1MTczNjA0LDE5OTA5MjA5MTQsMjEyOTM0ODg0MCwyMTU4NzAwMjc3LDE5Nzc4NjcyNjEsMjAyMzE0MDAzNywxNjI3OTE5MzQyLDIwOTkwNDA0NTEsMTY2NTk0MTc2OSwyMTU5NzE1NTcwLDIwNzM0NDA0NjAsMTgwNzc3OTI4MCwxOTcwMTMxODY1LDE1NDA2NDEwODIsMjEwMDk0ODI1NywyMTI5NDUzMDg1LDIxNTg3MzM4MjMsMjc1MzU0MjQ1NywyMTYzMDkzMTA3LDIxMjQ0Nzg2NzgsMTk5NTE3MzYwNCwxOTkwOTIwOTE0LDIxMjkzNDg4NDAsMjE1ODcwMDI3NywxOTc3ODY3MjYxLDIwMjMxNDAwMzcsMTYyNzkxOTM0MiwyMDk5MDQwNDUxLDE2NjU5NDE3NjksMjE1OTcxNTU3MCwyMDczNDQwNDYwLDE4MDc3NzkyODAsMTk3MDEzMTg2NSwxNTQwNjQxMDgyLDIxMDA5NDgyNTcsMjEyOTQ1MzA4NV0sXCJBTkZcIjpbe1wiRk5cIjpcIlNhbGx5XCIsXCJMTlwiOlwiRmxveWRcIixcIlNcIjoxfSx7XCJGTlwiOlwiS2V2aW4gUi5cIixcIkxOXCI6XCJGYWxsXCIsXCJTXCI6Mn1dLFwiQlZcIjpcIklFRUUgQUNNIFRyYW5zYWN0aW9ucyBvbiBOZXR3b3JraW5nXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIklFRUVcIn0ifSx7ImxvZ3Byb2IiOi0xNi40NTksImtlc0VudGl0eUlkIjoxNzUyMzYzLCJJZCI6MjE2OTc0MTYwNSwiVGkiOiJncmVlbmluZyBvZiB0aGUgaW50ZXJuZXQiLCJZIjoyMDAzLCJEIjoiMjAwMy0wOC0yNSIsIlJJZCI6WzIxMzU1MDU3MDIsMjAxMTY2Mjg3MSwyMDY0MzU5MDM5LDIxMDEwODc3NDIsMjE1NDU5Njk2OSwyMDI2MzkyMjk0LDIxNDM1MDYyOTksMTUzMjkzMjI0NywxMDUwMTI2NDZdLCJBQSI6W3siQXVOIjoibWFydXRpIGd1cHRhIn0seyJBdU4iOiJzdXJlc2ggc2luZ2gifV0sIkYiOlt7IkZOIjoibmlwcm5ldCJ9LHsiRk4iOiJpbnRlcm5ldCBiYWNrYm9uZSJ9LHsiRk4iOiJpbnRlcm5ldCB0cmFuc2l0In0seyJGTiI6ImR5bmFtaWMgY2lyY3VpdCBuZXR3b3JrIn0seyJGTiI6ImludGVybmV0IGxheWVyIn0seyJGTiI6ImludGVybmV0IGNvbm5lY3Rpb24gc2hhcmluZyJ9LHsiRk4iOiJ0aWVyIDEgbmV0d29yayJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoiY29tcHV0ZXIgc2VjdXJpdHkifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkdyZWVuaW5nIG9mIHRoZSBpbnRlcm5ldFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjEzMyxcIkludmVydGVkSW5kZXhcIjp7XCJJblwiOlswXSxcInRoaXNcIjpbMSw2NCw5MF0sXCJwYXBlclwiOlsyXSxcIndlXCI6WzMsNTQsNjcsOTVdLFwiZXhhbWluZVwiOls0XSxcInRoZVwiOls1LDE2LDIzLDMwLDY5LDExOF0sXCJzb21ld2hhdFwiOls2XSxcImNvbnRyb3ZlcnNpYWxcIjpbN10sXCJzdWJqZWN0XCI6WzhdLFwib2ZcIjpbOSwxMiwyNiwzNSwxMTFdLFwiZW5lcmd5XCI6WzEwLDM3LDExMywxMjJdLFwiY29uc3VtcHRpb25cIjpbMTFdLFwibmV0d29ya2luZ1wiOlsxMywxMDddLFwiZGV2aWNlc1wiOlsxNF0sXCJpblwiOlsxNSwxMTddLFwiSW50ZXJuZXQsXCI6WzE3XSxcIm1vdGl2YXRlZFwiOlsxOF0sXCJieVwiOlsxOSwyMiwzOF0sXCJkYXRhXCI6WzIwXSxcImNvbGxlY3RlZFwiOlsyMV0sXCJVLlMuXCI6WzI0XSxcIkRlcGFydG1lbnRcIjpbMjVdLFwiQ29tbWVyY2UuXCI6WzI3XSxcIldlXCI6WzI4XSxcImRpc2N1c3NcIjpbMjksNjhdLFwiaW1wYWN0XCI6WzMxLDExMF0sXCJvblwiOlszMl0sXCJuZXR3b3JrXCI6WzMzLDQwXSxcInByb3RvY29sc1wiOlszNCw4MF0sXCJzYXZpbmdcIjpbMzYsMTEyXSxcInB1dHRpbmdcIjpbMzldLFwiaW50ZXJmYWNlc1wiOls0MV0sXCJhbmRcIjpbNDIsNjVdLFwib3RoZXJcIjpbNDNdLFwicm91dGVyXCI6WzQ0XSxcIiZcIjpbNDVdLFwic3dpdGNoXCI6WzQ2XSxcImNvbXBvbmVudHNcIjpbNDddLFwidG9cIjpbNDgsNjIsNzQsNzcsODFdLFwic2xlZXAuXCI6WzQ5XSxcIlVzaW5nXCI6WzUwXSxcInNhbXBsZVwiOls1MV0sXCJwYWNrZXRcIjpbNTJdLFwidHJhY2VzLFwiOls1M10sXCJmaXJzdFwiOls1NV0sXCJzaG93XCI6WzU2XSxcInRoYXRcIjpbNTcsNzFdLFwiaXRcIjpbNThdLFwiaXNcIjpbNTksOTEsMTE0LDEyM10sXCJpbmRlZWRcIjpbNjBdLFwicmVhc29uYWJsZVwiOls2MV0sXCJkb1wiOls2Myw5Nl0sXCJ0aGVuXCI6WzY2XSxcImNoYW5nZXNcIjpbNzBdLFwibWF5XCI6WzcyXSxcIm5lZWRcIjpbNzNdLFwiYmVcIjpbNzVdLFwibWFkZVwiOls3Nl0sXCJjdXJyZW50XCI6Wzc4XSxcIkludGVybmV0XCI6Wzc5LDEzMV0sXCJzdXBwb3J0XCI6WzgyXSxcImFcIjpbODMsOTIsMTI0XSxcIm1vcmVcIjpbODRdLFwiYWdncmVzc2l2ZVwiOls4NV0sXCJzdHJhdGVneVwiOls4Nl0sXCJmb3JcIjpbODcsMTA1XSxcInNsZWVwaW5nLlwiOls4OF0sXCJTaW5jZVwiOls4OV0sXCJwb3NpdGlvblwiOls5M10sXCJwYXBlcixcIjpbOTRdLFwibm90XCI6Wzk3XSxcInByZXNlbnRcIjpbOThdLFwicmVzdWx0c1wiOls5OV0sXCJidXRcIjpbMTAwXSxcInJhdGhlclwiOlsxMDFdLFwic3VnZ2VzdFwiOlsxMDJdLFwiaW50ZXJlc3RpbmdcIjpbMTAzXSxcImRpcmVjdGlvbnNcIjpbMTA0XSxcImNvcmVcIjpbMTA2XSxcInJlc2VhcmNoLlwiOlsxMDhdLFwiVGhlXCI6WzEwOV0sXCJodWdlLFwiOlsxMTVdLFwicGFydGljdWxhcmx5XCI6WzExNl0sXCJkZXZlbG9waW5nXCI6WzExOV0sXCJ3b3JsZFwiOlsxMjBdLFwid2hlcmVcIjpbMTIxXSxcInByZWNpb3VzXCI6WzEyNV0sXCJyZXNvdXJjZVwiOlsxMjZdLFwid2hvc2VcIjpbMTI3XSxcInNjYXJjaXR5XCI6WzEyOF0sXCJoaW5kZXJzXCI6WzEyOV0sXCJ3aWRlc3ByZWFkXCI6WzEzMF0sXCJkZXBsb3ltZW50LlwiOlsxMzJdfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93ZWIuY2Vjcy5wZHguZWR1L35zaW5naC9mdHAvc2lnY29tbTAzLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3Lml0LnV1LnNlL2VkdS9jb3Vyc2UvaG9tZXBhZ2UvZGF0YWtvbTIvdnQwOC9zZW1pbmFycy9wYXBlcnMvZ3JlZW5pbmdfc2lnY29tbTAzLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmluZy51bml0bi5pdC9+Zm9udGFuYS9HcmVlbkludGVybmV0L09sZCUyMFBhcGVycy9HdXB0YSUyMC0lMjBHcmVlbmluZyUyMG9mJTIwdGhlJTIwSW50ZXJuZXQlMjBzaWdjb21tMDMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9sYXNzLmNzLnVtYXNzLmVkdS9+c2hlbm95L2NvdXJzZXMvZmFsbDA5LzY5MWdjL3BhcGVycy9ncmVlbmluZyUyMG9mJTIwdGhlJTIwaW50ZXJuZXQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MucnV0Z2Vycy5lZHUvfmJhZHJpLzU1MmRpci9wYXBlcnMvaW50cm8vcDE5LWd1cHRhLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLnBvdHNkYW0uZWR1L2ZhY3VsdHkvbGFkZGJjL1RlYWNoaW5nL05ldHdvcmtpbmcvU3R1ZGVudFBhcGVycy8yMDAzR3VwdGEtR3JlZW5pbmdPZlRoZUludGVybmV0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY29uZmVyZW5jZXMuc2lnY29tbS5vcmcvc2lnY29tbS8yMDAzL3BhcGVycy9wMTktZ3VwdGEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9ibnJnLmVlY3MuYmVya2VsZXkuZWR1L35yYW5keS9Db3Vyc2VzL0NTMjk0LkYwNy9OZXRQb3dlcjEucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9jb25mL3NpZ2NvbW0vc2lnY29tbTIwMDMuaHRtbCNHdXB0YVMwM1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTg2Mzk1NS44NjM5NTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1Lzg2Mzk1NS44NjM5NTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9kb2lkPTg2Mzk1NS44NjM5NTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5wZHguZWR1L35zaW5naC9mdHAvc2lnY29tbTAzLnBkZlwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9ODYzOTU5XCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kb2kuYWNtLm9yZy8xMC4xMTQ1Lzg2Mzk1NS44NjM5NTlcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5hcml6b25hLmVkdS9jbGFzc2VzL2NzNjUyL3NwcmluZzA5L2VuZXJneS9uZXR3b3JrJTIwaHcvR3JlZW5pbmclMjBvZiUyMHRoZSUyMEludGVybmV0LnBkZlwifV0sXCJWRk5cIjpcIkFDTSBTcGVjaWFsIEludGVyZXN0IEdyb3VwIG9uIERhdGEgQ29tbXVuaWNhdGlvblwiLFwiVlNOXCI6XCJTSUdDT01NXCIsXCJGUFwiOjE5LFwiTFBcIjoyNixcIkRPSVwiOlwiMTAuMTE0NS84NjM5NTUuODYzOTU5XCIsXCJDQ1wiOntcIjEwNTAxMjY0NlwiOltcIlJlY2VudGx5LCBhbiBvcGluaW9uIGhhcyBiZWVuIGV4cHJlc3NlZCBpbiB2YXJpb3VzIHF1YXJ0ZXJzIChzZWUgWzUsIDEyXSkgdGhhdCB0aGUgZW5lcmd5IGNvbnN1bXB0aW9uIG9mIHRoZSBJbnRlcm5ldCBpcyDigJx0b28gaGlnaOKAnSBhbmQgdGhhdCBzaW5jZSB0aGlzIGVuZXJneSBjb25zdW1wdGlvbiBjYW4gb25seSBncm93IGFzIHRoZSBJbnRlcm5ldCBleHBhbmRzLCB0aGlzIGlzIGEgY2F1c2UgZm9yIGNvbmNlcm4uXCJdLFwiMjAyNjM5MjI5NFwiOltcImJlY2F1c2Ugb2YgdGhlIGludGVycGxheSBiZXR3ZWVuIE1FRCAoTXVsdGktRXhpdC1EaXNjcmltaW5hdG9yKSBhbmQgdGhlIGNvc3Qgb2YgaW50ZXJuYWwgbGlua3Mgd2hlbiB1c2luZyByb3V0ZSByZWZsZWN0aW9uIGFuZCBiZWNhdXNlIG9mIHBhdGggYXN5bW1ldHJ5IGluIElCR1AgWzgsIDExXS5cIl0sXCIyMDY0MzU5MDM5XCI6W1wiRnVydGhlcm1vcmUsIFsgOSBdIGRpc2N1c3NlcyBsb3ctcG93ZXIgb3BlcmF0aW9uIGZvciBkYXRhIGNlbnRlcnMgKGFsYmVpdCBhdCBhIGRlZ3JhZGVkIGxldmVsIG9mIHNlcnZpY2UpLlwiXSxcIjIxMDEwODc3NDJcIjpbXCJKb25lcyBldCBhbCBwcm92aWRlIGEgZ29vZCBvdmVydmlldyBvZiB0aGVzZSBkaWZmZXJlbnQgdGVjaG5pcXVlcyBhdCB2YXJpb3VzIHByb3RvY29sIGxheWVycyBbMTNdLlwiXSxcIjIxMzU1MDU3MDJcIjpbXCJ0byBzbGVlcCBpcyBiYXNlZCBvbiB0aGUgc3RhdGUgb2Ygb25l4oCZcyBuZWlnaGJvcnMgKHN1Y2ggYXMgU01BQyBbMTZdKS5cIl0sXCIyMTQzNTA2Mjk5XCI6W1wiYmVjYXVzZSBvZiB0aGUgaW50ZXJwbGF5IGJldHdlZW4gTUVEIChNdWx0aS1FeGl0LURpc2NyaW1pbmF0b3IpIGFuZCB0aGUgY29zdCBvZiBpbnRlcm5hbCBsaW5rcyB3aGVuIHVzaW5nIHJvdXRlIHJlZmxlY3Rpb24gYW5kIGJlY2F1c2Ugb2YgcGF0aCBhc3ltbWV0cnkgaW4gSUJHUCBbOCwgMTFdLlwiXSxcIjIxNTQ1OTY5NjlcIjpbXCJGb3IgaW5zdGFuY2UsIEludGVsIGhhcyBbNF0gYW5ub3VuY2VkIGEgY29tcGFuaW9uIGNoaXBzZXQgYmFzZWQgb24gdGhlIFN0cm9uZ0FSTSBwcm9jZXNzb3IgdG8gZW5hYmxlIHNvZnR3YXJlIGR5bmFtaWMgdm9sdGFnZSBzY2FsaW5nIChEVlMpIFsxNV0gZm9yIHRoZVwiLFwiMSwxXSBbMSw1XSBbMTAsMTVdIFsxMDAsNTAwXSAwIDEwIDIwIDMwIDQwIDUwIDYwIEludGVy4oiScGFja2V0IGFycml2YWwgaW50ZXJ2YWxzIDExOjMwcG1cIl19LFwiUFJcIjpbMjE1Mjc4MzMyMSwxNTIzMjA5ODc2LDIwOTgwMDgwNzYsMjE3MTg2NjczNSwyMTY4NzgwOTE0LDIxMjUyNTY3NDUsMTkwNTEwNTM3OCwyMTUzNzk0MTk1LDIxMTg0MzgyMDAsMTkzNzUyNzY3MCwxNDg5NjQ4MjAsMjExODI3NjUzMywyMTUxMzAzOTUxLDIxNDk2NDE4MTIsMjExMjcwMTE2MywyMTM0ODA3NTc4LDIwNDMzNzMyOTIsMjE1NDAwNDU2MiwyMTE1NTM4OTAwLDIxMzE0MTQwNzEsMjE1Mjc4MzMyMSwxNTIzMjA5ODc2LDIwOTgwMDgwNzYsMjE3MTg2NjczNSwyMTY4NzgwOTE0LDIxMjUyNTY3NDUsMTkwNTEwNTM3OCwyMTUzNzk0MTk1LDIxMTg0MzgyMDAsMTkzNzUyNzY3MCwxNDg5NjQ4MjAsMjExODI3NjUzMywyMTUxMzAzOTUxLDIxNDk2NDE4MTIsMjExMjcwMTE2MywyMTM0ODA3NTc4LDIwNDMzNzMyOTIsMjE1NDAwNDU2MiwyMTE1NTM4OTAwLDIxMzE0MTQwNzFdLFwiQU5GXCI6W3tcIkZOXCI6XCJNYXJ1dGlcIixcIkxOXCI6XCJHdXB0YVwiLFwiU1wiOjF9LHtcIkZOXCI6XCJTdXJlc2hcIixcIkxOXCI6XCJTaW5naFwiLFwiU1wiOjJ9XSxcIkJWXCI6XCJQcm9jZWVkaW5ncyBvZiB0aGUgMjAwMyBjb25mZXJlbmNlIG9uIEFwcGxpY2F0aW9ucywgdGVjaG5vbG9naWVzLCBhcmNoaXRlY3R1cmVzLCBhbmQgcHJvdG9jb2xzIGZvciBjb21wdXRlciBjb21tdW5pY2F0aW9uc1wiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNi40NjUsImtlc0VudGl0eUlkIjoxNzYyNDIxLCJJZCI6MjEzMzY3MTk2OCwiVGkiOiJjb21wdXRlciBuZXR3b3JraW5nIGEgdG9wIGRvd24gYXBwcm9hY2ggZmVhdHVyaW5nIHRoZSBpbnRlcm5ldCIsIlkiOjIwMDAsIkQiOiIyMDAwLTA3LTEwIiwiUklkIjpbMjE2MTM0MjUxMSwyMTE3MDA3MjQ1LDIxNDUxMTgxMTAsMTc0NjQ2MDExNCwxNTY0MjgyNzkzLDE5NTg0MTY3OTcsMjE0ODI2NzkyNSwxNTkwNzA0MTkwLDE1Njg4NzQ4MDUsMjEzMDE0NDAwMiwyMDIyOTEyOTcyLDIwNDEzNDE4NjUsMTk5MzUyMDI0NSwyNzcyMzI5Mzk4LDIwODg2MTY3NzRdLCJBQSI6W3siQXVOIjoiamFtZXMgZiBrdXJvc2UifSx7IkF1TiI6ImtlaXRoIHcgcm9zcyJ9XSwiRiI6W3siRk4iOiJwcm90b2NvbCBzdGFjayJ9LHsiRk4iOiJhcHBsaWNhdGlvbiBsYXllciJ9LHsiRk4iOiJzb2Z0d2FyZSBkZWZpbmVkIG5ldHdvcmtpbmcifSx7IkZOIjoiYnVzaW5lc3MgaW50ZWxsaWdlbmNlIn0seyJGTiI6InRvcCBkb3duIGFuZCBib3R0b20gdXAgZGVzaWduIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImVuZ2luZWVyaW5nIn1dLCJFIjoie1wiRE5cIjpcIkNvbXB1dGVyIE5ldHdvcmtpbmc6IEEgVG9wLURvd24gQXBwcm9hY2ggRmVhdHVyaW5nIHRoZSBJbnRlcm5ldFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE3MixcIkludmVydGVkSW5kZXhcIjp7XCJGcm9tXCI6WzBdLFwidGhlXCI6WzEsNywxOCwyNCwzMCwzMyw1Myw1OCw3Miw3OSw4NiwxMTQsMTIzLDEzOSwxNDIsMTU0XSxcIlB1Ymxpc2hlcjpcXHJcXG5UaGVcIjpbMl0sXCJtb3N0XCI6WzNdLFwidXAtdG8tZGF0ZVwiOls0XSxcImludHJvZHVjdGlvblwiOls1LDY2XSxcInRvXCI6WzYsNDQsOTAsMTA0LDEyNywxNTIsMTY5XSxcImZpZWxkXCI6WzhdLFwib2ZcIjpbOSwzNiw2Nyw4MSwxMTMsMTMyLDE0MSwxNTYsMTY2XSxcImNvbXB1dGVyXCI6WzEwLDEzNCwxNTddLFwibmV0d29ya2luZyxcIjpbMTFdLFwidGhpc1wiOlsxMiw2MSw5NF0sXCJib29rJ3NcIjpbMTNdLFwidG9wLWRvd25cIjpbMTRdLFwiYXBwcm9hY2hcIjpbMTUsOTldLFwic3RhcnRzXCI6WzE2XSxcImF0XCI6WzE3LDUyXSxcImFwcGxpY2F0aW9uXCI6WzE5LDEwN10sXCJsYXllclwiOlsyMF0sXCJhbmRcIjpbMjEsNTUsMTA4XSxcIndvcmtzXCI6WzIyXSxcImRvd25cIjpbMjMsNTddLFwicHJvdG9jb2xcIjpbMjUsNTldLFwic3RhY2suXCI6WzI2XSxcIkl0XCI6WzI3LDE1OV0sXCJhbHNvXCI6WzI4LDE2MF0sXCJ1c2VzXCI6WzI5XSxcIkludGVybmV0XCI6WzMxLDEyNF0sXCJhc1wiOlszMiwxMjUsMTMwXSxcIm1haW5cIjpbMzRdLFwiZXhhbXBsZVwiOlszNV0sXCJuZXR3b3Jrcy5cIjpbMzddLFwiVGhpc1wiOlszOCwxMTksMTQ0XSxcImFsbFwiOlszOV0sXCJjcmVhdGVzXCI6WzQwXSxcImFcIjpbNDEsNjQsNzYsOTcsMTA1XSxcImJvb2tcIjpbNDIsNjIsOTUsMTIwLDE0NV0sXCJyZWxldmFudFwiOls0Myw2NV0sXCJ0aG9zZVwiOls0NV0sXCJpbnRlcmVzdGVkXCI6WzQ2XSxcImluXCI6WzQ3XSxcIm5ldHdvcmtpbmdcIjpbNDgsMTcwXSxcInRvZGF5LlwiOls0OV0sXCJCeVwiOls1MF0sXCJzdGFydGluZ1wiOls1MV0sXCJhcHBsaWNhdGlvbi1sYXllclwiOls1NF0sXCJ3b3JraW5nXCI6WzU2XSxcInN0YWNrLFwiOls2MF0sXCJwcm92aWRlc1wiOls2M10sXCJpbXBvcnRhbnRcIjpbNjhdLFwiY29uY2VwdHMuXCI6WzY5XSxcIkJhc2VkXCI6WzcwXSxcIm9uXCI6WzcxLDEyMl0sXCJyYXRpb25hbGVcIjpbNzNdLFwidGhhdFwiOls3NCwxMDBdLFwib25jZVwiOls3NV0sXCJyZWFkZXJcIjpbNzddLFwidW5kZXJzdGFuZHNcIjpbNzhdLFwiYXBwbGljYXRpb25zXCI6WzgwXSxcIm5ldHdvcmtzXCI6WzgyXSxcInRoZXlcIjpbODNdLFwiY2FuXCI6Wzg0XSxcInVuZGVyc3RhbmRcIjpbODVdLFwibmV0d29ya1wiOls4NywxMzVdLFwic2VydmljZXNcIjpbODhdLFwibmVlZGVkXCI6Wzg5XSxcInN1cHBvcnRcIjpbOTFdLFwidGhlc2VcIjpbOTJdLFwiYXBwbGljYXRpb25zLFwiOls5M10sXCJ0YWtlc1wiOls5Nl0sXCJcXFwidG9wLWRvd25cXFwiXCI6Wzk4XSxcImV4cG9zZXNcIjpbMTAxXSxcInJlYWRlcnNcIjpbMTAyXSxcImZpcnN0XCI6WzEwM10sXCJjb25jcmV0ZVwiOlsxMDZdLFwidGhlblwiOlsxMDldLFwiZHJhd3NcIjpbMTEwXSxcImludG9cIjpbMTExXSxcInNvbWVcIjpbMTEyXSxcImRlZXBlclwiOlsxMTVdLFwiaXNzdWVzXCI6WzExNl0sXCJzdXJyb3VuZGluZ1wiOlsxMTddLFwibmV0d29ya2luZy5cIjpbMTE4LDE1OF0sXCJmb2N1c2VzXCI6WzEyMV0sXCJvcHBvc2VkXCI6WzEyNl0sXCJhZGRyZXNzaW5nXCI6WzEyOF0sXCJpdFwiOlsxMjksMTY1XSxcIm9uZVwiOlsxMzFdLFwibWFueVwiOlsxMzNdLFwidGVjaG5vbG9naWVzLFwiOlsxMzZdLFwiZnVydGhlclwiOlsxMzddLFwibW90aXZhdGluZ1wiOlsxMzhdLFwic3R1ZHlcIjpbMTQwXSxcIm1hdGVyaWFsLlwiOlsxNDNdLFwiaXNcIjpbMTQ2XSxcImRlc2lnbmVkXCI6WzE0N10sXCJmb3JcIjpbMTQ4XSxcInByb2dyYW1tZXJzXCI6WzE0OV0sXCJ3aG9cIjpbMTUwXSxcIm5lZWRcIjpbMTUxXSxcImxlYXJuXCI6WzE1M10sXCJmdW5kYW1lbnRhbHNcIjpbMTU1XSxcImhhc1wiOlsxNjFdLFwiZXh0ZW5zaXZlXCI6WzE2Ml0sXCJtYXRlcmlhbFwiOlsxNjNdLFwibWFraW5nXCI6WzE2NF0sXCJncmVhdFwiOlsxNjddLFwiaW50ZXJlc3RcIjpbMTY4XSxcInByb2Zlc3Npb25hbHMuXCI6WzE3MV19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5zY2llbmNlLnNtaXRoLmVkdS9+amNhcmRlbGwvQ291cnNlcy9FR1IzMjgvUmVhZGluZ3MvS1IlMjBDUkMucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vQ29tcHV0ZXItTmV0d29ya2luZy1Ub3AtRG93bi1BcHByb2FjaC1GZWF0dXJpbmcvZHAvMDIwMTQ3NzExNFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTU0OTczNVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vY2kubmlpLmFjLmpwL25jaWQvQkE3MTAzNjIzOFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vd3d3LmV1cmVjb20uZnIvZnIvcHVibGljYXRpb24vOTk2XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vaXMubXVuaS5jei9wdWJsaWNhdGlvbi81MDk1NTZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BvcnRhbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD05ODM0MDdcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTU0OTczNVwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vd3d3LmV1cmVjb20uZnIvcHVibGljYXRpb24vOTk2XCJ9XSxcIlZGTlwiOlwiXCIsXCJQUlwiOlsyNzUzNTQyNDU3LDE1NDAwNDc0OTUsMjE1ODczMzgyMywxOTc3ODY3MjYxLDE1NjgwODA4NTksMjEyNDY1MTM5OSwyNjEzMTczMDQ4LDIwOTkwNDA0NTEsMjA5OTU3NDQ4MiwxNTQwNjQxMDgyLDIxMDIyNTg1NDMsMTYyNzkxOTM0MiwxODA3Nzc5MjgwLDE3MzE5ODIzODcsMTYzNDE4Mzg0LDIxMDEyMTQ2OTAsMjEzOTM3ODU0OSwyMTI0NDc4Njc4LDIxNDU0MTc1NzQsMjE3NjU2Njg4NCwyNzUzNTQyNDU3LDE1NDAwNDc0OTUsMjE1ODczMzgyMywxOTc3ODY3MjYxLDE1NjgwODA4NTksMjEyNDY1MTM5OSwyNjEzMTczMDQ4LDIwOTkwNDA0NTEsMjA5OTU3NDQ4MiwxNTQwNjQxMDgyLDIxMDIyNTg1NDMsMTYyNzkxOTM0MiwxODA3Nzc5MjgwLDE3MzE5ODIzODcsMTYzNDE4Mzg0LDIxMDEyMTQ2OTAsMjEzOTM3ODU0OSwyMTI0NDc4Njc4LDIxNDU0MTc1NzQsMjE3NjU2Njg4NF0sXCJBTkZcIjpbe1wiRk5cIjpcIkphbWVzIEYuXCIsXCJMTlwiOlwiS3Vyb3NlXCIsXCJTXCI6MX0se1wiRk5cIjpcIktlaXRoIFcuXCIsXCJMTlwiOlwiUm9zc1wiLFwiU1wiOjJ9XSxcIkJUXCI6XCJiXCIsXCJQQlwiOlwiQWRkaXNvbiBXZXNsZXlcIn0ifSx7ImxvZ3Byb2IiOi0xNi41MDMsImtlc0VudGl0eUlkIjoxODMwMjY3LCJJZCI6MTU1Nzg3NjY0OCwiVGkiOiJ0aGUgc2hhbGxvd3Mgd2hhdCB0aGUgaW50ZXJuZXQgaXMgZG9pbmcgdG8gb3VyIGJyYWlucyIsIlkiOjIwMTAsIkQiOiIyMDEwLTAxLTAxIiwiQUEiOlt7IkF1TiI6Im5pY2hvbGFzIGcgY2FyciJ9XSwiRiI6W3siRk4iOiJwcmludGluZyBwcmVzcyJ9LHsiRk4iOiJhZGVwdCJ9LHsiRk4iOiJwc3ljaGUifSx7IkZOIjoiY29udGVtcGxhdGlvbiJ9LHsiRk4iOiJpbnRlbGxlY3R1YWwgaGlzdG9yeSJ9LHsiRk4iOiJjcml0aWNpc20ifSx7IkZOIjoiaW5mb3JtYXRpb24gdGVjaG5vbG9neSJ9LHsiRk4iOiJ0aGUgaW50ZXJuZXQifSx7IkZOIjoiaHVtYW5pdGllcyJ9LHsiRk4iOiJwc3ljaG9sb2d5In1dLCJFIjoie1wiRE5cIjpcIlRoZSBTaGFsbG93czogV2hhdCB0aGUgSW50ZXJuZXQgSXMgRG9pbmcgdG8gT3VyIEJyYWluc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjM2MSxcIkludmVydGVkSW5kZXhcIjp7XCJUaGVcIjpbMCw0LDE1OSwzMDNdLFwiYmVzdC1zZWxsaW5nXCI6WzFdLFwiYXV0aG9yXCI6WzJdLFwib2ZcIjpbMyw0MSw1NCw1OSw4OCwxMTEsMTMxLDE3OSwxOTksMjA0LDIzNCwyMzcsMjQ2LDI1MSwyNTUsMzE5LDMyOCwzNDBdLFwiQmlnXCI6WzVdLFwiU3dpdGNoXCI6WzZdLFwicmV0dXJuc1wiOls3XSxcIndpdGhcIjpbOCwzMDYsMzExXSxcImFuXCI6WzksMTk1LDI0OV0sXCJleHBsb3NpdmVcIjpbMTBdLFwibG9va1wiOlsxMV0sXCJhdFwiOlsxMiwyNzZdLFwidGVjaG5vbG9neXNcIjpbMTNdLFwiZWZmZWN0XCI6WzE0XSxcIm9uXCI6WzE1LDE3Nl0sXCJ0aGVcIjpbMTYsNDUsNTUsNjUsODQsODksMTA3LDExMiwxMTQsMTE5LDEyMiwxMjUsMTQ3LDE3NywyMDIsMjExLDIyNywyMzAsMjQ3LDI2MSwzMTcsMzI1LDMzOCwzNTJdLFwibWluZC5cIjpbMTddLFwiSXNcIjpbMThdLFwiR29vZ2xlXCI6WzE5XSxcIm1ha2luZ1wiOlsyMF0sXCJ1c1wiOlsyMSwyNjVdLFwic3R1cGlkP1wiOlsyMl0sXCJXaGVuXCI6WzIzXSxcIk5pY2hvbGFzXCI6WzI0XSxcIkNhcnJcIjpbMjUsNzksMTg1XSxcInBvc2VkXCI6WzI2XSxcInRoYXRcIjpbMjcsMTkwLDI0NSwzNDhdLFwicXVlc3Rpb24sXCI6WzI4XSxcImluXCI6WzI5LDEzNCwxNTQsMjY2XSxcImFcIjpbMzAsMzksMTI4LDE4NywzMTIsMzI5LDM0Nl0sXCJjZWxlYnJhdGVkXCI6WzMxXSxcIkF0bGFudGljXCI6WzMyXSxcIk1vbnRobHlcIjpbMzNdLFwiY292ZXJcIjpbMzRdLFwic3RvcnksXCI6WzM1XSxcImhlXCI6WzM2LDk4XSxcInRhcHBlZFwiOlszN10sXCJpbnRvXCI6WzM4LDgzXSxcIndlbGxcIjpbNDBdLFwiYW54aWV0eVwiOls0Ml0sXCJhYm91dFwiOls0MywyMDEsMzM3LDM1Nl0sXCJob3dcIjpbNDQsMTAwLDIxMF0sXCJJbnRlcm5ldFwiOls0NiwyMjhdLFwiaXNcIjpbNDcsMjQ0LDI2MywyODUsMzQ1XSxcImNoYW5naW5nXCI6WzQ4XSxcInVzLlwiOls0OV0sXCJIZVwiOls1MCwyMDhdLFwiYWxzb1wiOls1MV0sXCJjcnlzdGFsbGl6ZWRcIjpbNTJdLFwib25lXCI6WzUzXSxcIm1vc3RcIjpbNTYsODVdLFwiaW1wb3J0YW50XCI6WzU3XSxcImRlYmF0ZXNcIjpbNThdLFwib3VyXCI6WzYwLDcxLDE1NywxNzIsMjE3LDI4NiwzNDEsMzU5XSxcInRpbWU6XCI6WzYxXSxcIkFzXCI6WzYyLDk3XSxcIndlXCI6WzYzLDY5LDE2MSwyODIsMzU0XSxcImVuam95XCI6WzY0XSxcIk5ldHNcIjpbNjZdLFwiYm91bnRpZXMsXCI6WzY3XSxcImFyZVwiOls2OCwyNzEsMjgzXSxcInNhY3JpZmljaW5nXCI6WzcwXSxcImFiaWxpdHlcIjpbNzJdLFwidG9cIjpbNzMsMTE2LDExOCwxNTYsMTYzLDE4MywyMTVdLFwicmVhZFwiOls3NF0sXCJhbmRcIjpbNzUsOTIsMTI0LDE0MiwxNDksMTY2LDIwNiwyMjEsMjUzLDI1OCwyNzgsMjkxLDI5OSwzNThdLFwidGhpbmtcIjpbNzYsMzU1XSxcImRlZXBseT9cIjpbNzddLFwiTm93LFwiOls3OF0sXCJleHBhbmRzXCI6WzgwXSxcImhpc1wiOls4MV0sXCJhcmd1bWVudFwiOls4Ml0sXCJjb21wZWxsaW5nXCI6Wzg2XSxcImV4cGxvcmF0aW9uXCI6Wzg3XSxcIkludGVybmV0c1wiOls5MF0sXCJpbnRlbGxlY3R1YWxcIjpbOTEsMTk2LDI5NF0sXCJjdWx0dXJhbFwiOls5MywzMDFdLFwiY29uc2VxdWVuY2VzXCI6Wzk0XSxcInlldFwiOls5NV0sXCJwdWJsaXNoZWQuXCI6Wzk2XSxcImRlc2NyaWJlc1wiOls5OV0sXCJodW1hblwiOlsxMDFdLFwidGhvdWdodFwiOlsxMDJdLFwiaGFzXCI6WzEwM10sXCJiZWVuXCI6WzEwNF0sXCJzaGFwZWRcIjpbMTA1XSxcInRocm91Z2hcIjpbMTA2XSxcImNlbnR1cmllc1wiOlsxMDhdLFwiYnlcIjpbMTA5LDEzNl0sXCJ0b29sc1wiOlsxMTBdLFwibWluZGZyb21cIjpbMTEzXSxcImFscGhhYmV0XCI6WzExNV0sXCJtYXBzLFwiOlsxMTddLFwicHJpbnRpbmdcIjpbMTIwXSxcInByZXNzLFwiOlsxMjFdLFwiY2xvY2ssXCI6WzEyM10sXCJjb21wdXRlckNhcnJcIjpbMTI2XSxcImludGVyd2VhdmVzXCI6WzEyN10sXCJmYXNjaW5hdGluZ1wiOlsxMjldLFwiYWNjb3VudFwiOlsxMzBdLFwicmVjZW50XCI6WzEzMl0sXCJkaXNjb3Zlcmllc1wiOlsxMzNdLFwibmV1cm9zY2llbmNlXCI6WzEzNV0sXCJzdWNoXCI6WzEzN10sXCJwaW9uZWVyc1wiOlsxMzhdLFwiYXNcIjpbMTM5LDMzMl0sXCJNaWNoYWVsXCI6WzE0MF0sXCJNZXJ6ZW5pY2hcIjpbMTQxXSxcIkVyaWNcIjpbMTQzXSxcIkthbmRlbC5cIjpbMTQ0XSxcIk91clwiOlsxNDVdLFwiYnJhaW5zLFwiOlsxNDZdLFwiaGlzdG9yaWNhbFwiOlsxNDhdLFwic2NpZW50aWZpY1wiOlsxNTBdLFwiZXZpZGVuY2VcIjpbMTUxXSxcInJldmVhbHMsXCI6WzE1Ml0sXCJjaGFuZ2VcIjpbMTUzXSxcInJlc3BvbnNlXCI6WzE1NV0sXCJleHBlcmllbmNlcy5cIjpbMTU4XSxcInRlY2hub2xvZ2llc1wiOlsxNjBdLFwidXNlXCI6WzE2Ml0sXCJmaW5kLFwiOlsxNjRdLFwic3RvcmUsXCI6WzE2NV0sXCJzaGFyZVwiOlsxNjddLFwiaW5mb3JtYXRpb25cIjpbMTY4LDE5MiwyMzhdLFwiY2FuXCI6WzE2OV0sXCJsaXRlcmFsbHlcIjpbMTcwXSxcInJlcm91dGVcIjpbMTcxXSxcIm5ldXJhbFwiOlsxNzNdLFwicGF0aHdheXMuXCI6WzE3NF0sXCJCdWlsZGluZ1wiOlsxNzVdLFwiaW5zaWdodHNcIjpbMTc4XSxcInRoaW5rZXJzXCI6WzE4MF0sXCJmcm9tXCI6WzE4MSwyMzldLFwiUGxhdG9cIjpbMTgyXSxcIk1jTHVoYW4sXCI6WzE4NF0sXCJtYWtlc1wiOlsxODZdLFwiY29udmluY2luZ1wiOlsxODhdLFwiY2FzZVwiOlsxODldLFwiZXZlcnlcIjpbMTkxXSxcInRlY2hub2xvZ3lcIjpbMTkzXSxcImNhcnJpZXNcIjpbMTk0XSxcImV0aGljYVwiOlsxOTddLFwic2V0XCI6WzE5OF0sXCJhc3N1bXB0aW9uc1wiOlsyMDBdLFwibmF0dXJlXCI6WzIwM10sXCJrbm93bGVkZ2VcIjpbMjA1XSxcImludGVsbGlnZW5jZS5cIjpbMjA3XSxcImV4cGxhaW5zXCI6WzIwOV0sXCJwcmludGVkXCI6WzIxMl0sXCJib29rXCI6WzIxMywzNDddLFwic2VydmVkXCI6WzIxNF0sXCJmb2N1c1wiOlsyMTZdLFwiYXR0ZW50aW9uLFwiOlsyMThdLFwicHJvbW90aW5nXCI6WzIxOV0sXCJkZWVwXCI6WzIyMF0sXCJjcmVhdGl2ZVwiOlsyMjJdLFwidGhvdWdodC5cIjpbMjIzXSxcIkluXCI6WzIyNF0sXCJzdGFya1wiOlsyMjVdLFwiY29udHJhc3QsXCI6WzIyNl0sXCJlbmNvdXJhZ2VzXCI6WzIyOV0sXCJyYXBpZCxcIjpbMjMxXSxcImRpc3RyYWN0ZWRcIjpbMjMyXSxcInNhbXBsaW5nXCI6WzIzM10sXCJzbWFsbFwiOlsyMzVdLFwiYml0c1wiOlsyMzZdLFwibWFueVwiOlsyNDBdLFwic291cmNlcy5cIjpbMjQxXSxcIkl0c1wiOlsyNDJdLFwiZXRoaWNcIjpbMjQzLDI1MF0sXCJpbmR1c3RyaWFsaXN0LFwiOlsyNDhdLFwic3BlZWRcIjpbMjUyXSxcImVmZmljaWVuY3ksXCI6WzI1NF0sXCJvcHRpbWl6ZWRcIjpbMjU2XSxcInByb2R1Y3Rpb25cIjpbMjU3XSxcImNvbnN1bXB0aW9uYW5kXCI6WzI1OV0sXCJub3dcIjpbMjYwXSxcIk5ldFwiOlsyNjJdLFwicmVtYWtpbmdcIjpbMjY0XSxcIml0c1wiOlsyNjddLFwib3duXCI6WzI2OF0sXCJpbWFnZS5cIjpbMjY5XSxcIldlXCI6WzI3MF0sXCJiZWNvbWluZ1wiOlsyNzJdLFwiZXZlclwiOlsyNzNdLFwibW9yZVwiOlsyNzRdLFwiYWRlcHRcIjpbMjc1XSxcInNjYW5uaW5nXCI6WzI3N10sXCJza2ltbWluZyxcIjpbMjc5XSxcImJ1dFwiOlsyODBdLFwid2hhdFwiOlsyODFdLFwibG9zaW5nXCI6WzI4NF0sXCJjYXBhY2l0eVwiOlsyODddLFwiZm9yXCI6WzI4OF0sXCJjb25jZW50cmF0aW9uLFwiOlsyODldLFwiY29udGVtcGxhdGlvbixcIjpbMjkwXSxcInJlZmxlY3Rpb24uXCI6WzI5Ml0sXCJQYXJ0XCI6WzI5M10sXCJoaXN0b3J5LFwiOlsyOTVdLFwicGFydFwiOlsyOTYsMzAwXSxcInBvcHVsYXJcIjpbMjk3XSxcInNjaWVuY2UsXCI6WzI5OF0sXCJjcml0aWNpc20sXCI6WzMwMl0sXCJTaGFsbG93c1wiOlszMDRdLFwic3BhcmtsZXNcIjpbMzA1XSxcIm1lbW9yYWJsZVwiOlszMDddLFwidmlnbmV0dGVzRnJpZWRyaWNoXCI6WzMwOF0sXCJOaWV0enNjaGVcIjpbMzA5XSxcIndyZXN0bGluZ1wiOlszMTBdLFwidHlwZXdyaXRlcixcIjpbMzEzXSxcIlNpZ211bmRcIjpbMzE0XSxcIkZyZXVkXCI6WzMxNV0sXCJkaXNzZWN0aW5nXCI6WzMxNl0sXCJicmFpbnNcIjpbMzE4XSxcInNlYVwiOlszMjBdLFwiY3JlYXR1cmVzLFwiOlszMjFdLFwiTmF0aGFuaWVsXCI6WzMyMl0sXCJIYXd0aG9ybmVcIjpbMzIzXSxcImNvbnRlbXBsYXRpbmdcIjpbMzI0XSxcInRodW5kZXJvdXNcIjpbMzI2XSxcImFwcHJvYWNoXCI6WzMyN10sXCJzdGVhbVwiOlszMzBdLFwibG9jb21vdGl2ZWV2ZW5cIjpbMzMxXSxcIml0XCI6WzMzM10sXCJwbHVtYnNcIjpbMzM0XSxcInByb2ZvdW5kXCI6WzMzNV0sXCJxdWVzdGlvbnNcIjpbMzM2XSxcInN0YXRlXCI6WzMzOV0sXCJtb2Rlcm5cIjpbMzQyXSxcInBzeWNoZS5cIjpbMzQzXSxcIlRoaXNcIjpbMzQ0XSxcIndpbGxcIjpbMzQ5XSxcImZvcmV2ZXJcIjpbMzUwXSxcImFsdGVyXCI6WzM1MV0sXCJ3YXlcIjpbMzUzXSxcIm1lZGlhXCI6WzM1N10sXCJtaW5kcy5cIjpbMzYwXX19LFwiU1wiOlt7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1RoZV9TaGFsbG93czpfV2hhdF90aGVfSW50ZXJuZXRfSXNfRG9pbmdfdG9fT3VyX0JyYWluc1wifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vamNhdy5vcmcvYnVsbGV0aW4vd3AtY29udGVudC91cGxvYWRzLzIwMTAvMTEvMjAxMDExaWtlaGFyYS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9TaGFsbG93cy1XaGF0LUludGVybmV0LURvaW5nLUJyYWlucy9kcC8wMzkzMDcyMjIzXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MTg1NTAyM1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vd3d3Lm1vdW50YWludmlld2NvbGxlZ2UuZWR1L0FjYWRlbWljcy9jb21tb25ib29rL0RvY3VtZW50cy9Db21tb25Cb29rMjAxNC1UZW50YXRpdmVFdmVudHMucGRmXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9jaS5uaWkuYWMuanAvbmNpZC9CQjAyNzM4MzkwXCJ9XSxcIlZGTlwiOlwiXCIsXCJQUlwiOlsxODkyNTAyNzIwLDE5ODc5MzA3ODQsMjEyOTgxMzA3MywxNTY5MDA2ODc3LDIxNTg1NTk0ODQsMTk2NDU5NjgyOSwxNDg3NTA5MjA4LDE1NzIyMzgxNzAsMTU4MzA1OTA5NywxNzkyMDc2MzI4LDIyMzU1MzIxNDcsMTk4MDg1MDkyNCwxNDIzNDU0MTIsMjA1MzEyMDE0MiwyMDk3MjEwODE3LDIzMDA1NjcxMTcsMTU4NjEwOTM1NywxNjA1NjIwODU3LDIxNDcxMzk3NDAsMjIzMDUxODg2NSwxODkyNTAyNzIwLDE5ODc5MzA3ODQsMjEyOTgxMzA3MywxNTY5MDA2ODc3LDIxNTg1NTk0ODQsMTk2NDU5NjgyOSwxNDg3NTA5MjA4LDE1NzIyMzgxNzAsMTU4MzA1OTA5NywxNzkyMDc2MzI4LDIyMzU1MzIxNDcsMTk4MDg1MDkyNCwxNDIzNDU0MTIsMjA1MzEyMDE0MiwyMDk3MjEwODE3LDIzMDA1NjcxMTcsMTU4NjEwOTM1NywxNjA1NjIwODU3LDIxNDcxMzk3NDAsMjIzMDUxODg2NV0sXCJBTkZcIjpbe1wiRk5cIjpcIk5pY2hvbGFzIEcuXCIsXCJMTlwiOlwiQ2FyclwiLFwiU1wiOjF9XSxcIkJUXCI6XCJiXCIsXCJQQlwiOlwiVy4gVy4gTm9ydG9uICYgQ29tcGFueVwifSJ9LHsibG9ncHJvYiI6LTE2LjUzMywia2VzRW50aXR5SWQiOjE4ODI1OTEsIklkIjoyMDgxMzU3NjUwLCJUaSI6ImluZmVycmluZyBpbnRlcm5ldCBkZW5pYWwgb2Ygc2VydmljZSBhY3Rpdml0eSIsIlkiOjIwMDYsIkQiOiIyMDA2LTA1LTAxIiwiUklkIjpbMTk2Nzk0OTc3MCwxODY3MjE5NjUyLDE5NzI2OTk3ODIsMjE1MDIyODYwNSwyMDgxNDYxNjI0LDE1NzgxMzg3MTEsMjExNzIyMjU1NCwyMDYxNjQ1ODEsMjAwMTYxOTU1NiwyMTU5MTYwODMzLDE1ODQ1MTQwMjEsMjA5NjAzMDk2NywyMDg0NzE5MzExLDE1ODI0NTM3NzksMTI1MzY2NjMyOCwxNTE4MTU0OTE3LDE5MjA4MDI5MDksMjA0NTE2ODI3OSwxNjg2MjY5ODkzLDE0OTgzNDg1ODQsMTQ4NDQ3NTYzLDI0MzQ3NDYsMjA3OTMxODUxMCw5Nzk2NTg5MywxNDk1MjkwNDgsMjI3NTQ0ODU1Myw0MjkxNTczNyw5OTA5NjQwOF0sIkFBIjpbeyJBdU4iOiJkYXZpZCBtb29yZSJ9LHsiQXVOIjoiY29sbGVlbiBzaGFubm9uIn0seyJBdU4iOiJkb3VnbGFzIGogYnJvd24ifSx7IkF1TiI6Imdlb2ZmcmV5IG0gdm9lbGtlciJ9LHsiQXVOIjoic3RlZmFuIHNhdmFnZSJ9XSwiRiI6W3siRk4iOiJkZG9zIG1pdGlnYXRpb24ifSx7IkZOIjoidHJpbm9vIn0seyJGTiI6ImluZ3Jlc3MgZmlsdGVyaW5nIn0seyJGTiI6ImFwcGxpY2F0aW9uIGxheWVyIGRkb3MgYXR0YWNrIn0seyJGTiI6Im5ldHdvcmsgdGVsZXNjb3BlIn0seyJGTiI6ImlwIHRyYWNlYmFjayJ9LHsiRk4iOiJuZXR3b3JrIHNlY3VyaXR5In0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJpbnRlcm5ldCBwcml2YWN5In0seyJGTiI6ImNvbXB1dGVyIHNlY3VyaXR5In0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkluZmVycmluZyBJbnRlcm5ldCBkZW5pYWwtb2Ytc2VydmljZSBhY3Rpdml0eVwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE2MyxcIkludmVydGVkSW5kZXhcIjp7XCJJblwiOlswLDEwMl0sXCJ0aGlzXCI6WzEsNjUsODUsMTUwXSxcImFydGljbGUsXCI6WzJdLFwid2VcIjpbMyw4NywxMDRdLFwic2Vla1wiOls0XSxcInRvXCI6WzUsMjEsMzMsMTI2LDE0MCwxNjFdLFwiYWRkcmVzc1wiOls2XSxcImFcIjpbNyw0Niw1NCw3Ml0sXCJzaW1wbGVcIjpbOF0sXCJxdWVzdGlvbjpcIjpbOV0sXCLigJxIb3dcIjpbMTBdLFwicHJldmFsZW50XCI6WzExXSxcImFyZVwiOlsxMl0sXCJkZW5pYWwtb2Ytc2VydmljZVwiOlsxMyw2MSwxNDZdLFwiYXR0YWNrc1wiOlsxNCwxMDhdLFwiaW5cIjpbMTVdLFwidGhlXCI6WzE2LDI0LDI3LDkwLDEzOCwxNTNdLFwiSW50ZXJuZXQ/4oCdXCI6WzE3XSxcIk91clwiOlsxOF0sXCJtb3RpdmF0aW9uXCI6WzE5XSxcImlzXCI6WzIwLDEzN10sXCJxdWFudGl0YXRpdmVseVwiOlsyMiw4OF0sXCJ1bmRlcnN0YW5kXCI6WzIzXSxcIm5hdHVyZVwiOlsyNV0sXCJvZlwiOlsyNiwzNyw0Miw1Nyw5NSwxNDQsMTU4XSxcImN1cnJlbnRcIjpbMjhdLFwidGhyZWF0XCI6WzI5XSxcImFzXCI6WzMwLDMyLDEyMl0sXCJ3ZWxsXCI6WzMxXSxcImVuYWJsZVwiOlszNF0sXCJsb25nZXItdGVybVwiOlszNV0sXCJhbmFseXNlc1wiOlszNl0sXCJ0cmVuZHNcIjpbMzhdLFwiYW5kXCI6WzM5LDkzLDk3LDEyNCwxMzAsMTQ4XSxcInJlY3VycmluZ1wiOls0MF0sXCJwYXR0ZXJuc1wiOls0MV0sXCJhdHRhY2tzLlwiOls0M10sXCJXZVwiOls0NCw2MywxMzNdLFwicHJlc2VudFwiOls0NV0sXCJuZXdcIjpbNDddLFwidGVjaG5pcXVlLFwiOls0OF0sXCJjYWxsZWRcIjpbNDldLFwi4oCcYmFja3NjYXR0ZXJcIjpbNTBdLFwiYW5hbHlzaXMs4oCdXCI6WzUxXSxcInRoYXRcIjpbNTIsMTQ5XSxcInByb3ZpZGVzXCI6WzUzXSxcImNvbnNlcnZhdGl2ZVwiOls1NV0sXCJlc3RpbWF0ZVwiOls1Nl0sXCJ3b3JsZHdpZGVcIjpbNTldLFwiYWN0aXZpdHkuXCI6WzYyXSxcInVzZVwiOls2NF0sXCJhcHByb2FjaFwiOls2Nl0sXCJvblwiOls2N10sXCIyMlwiOls2OF0sXCJ0cmFjZXNcIjpbNjldLFwiKGVhY2hcIjpbNzBdLFwiY292ZXJpbmdcIjpbNzFdLFwid2Vla1wiOls3M10sXCJvclwiOls3NF0sXCJtb3JlKVwiOls3NV0sXCJnYXRoZXJlZFwiOls3Nl0sXCJvdmVyXCI6Wzc3LDEwNiwxMTFdLFwidGhyZWVcIjpbNzhdLFwieWVhcnNcIjpbNzldLFwiZnJvbVwiOls4MCwxMTddLFwiMjAwMVwiOls4MV0sXCJ0aHJvdWdoXCI6WzgyXSxcIjIwMDQuXCI6WzgzXSxcIkFjcm9zc1wiOls4NF0sXCJjb3JwdXNcIjpbODZdLFwiYXNzZXNzXCI6Wzg5XSxcIm51bWJlcixcIjpbOTFdLFwiZHVyYXRpb24sXCI6WzkyXSxcImZvY3VzXCI6Wzk0XSxcImF0dGFja3MsXCI6Wzk2XSxcInF1YWxpdGF0aXZlbHlcIjpbOThdLFwiY2hhcmFjdGVyaXplXCI6Wzk5XSxcInRoZWlyXCI6WzEwMF0sXCJiZWhhdmlvci5cIjpbMTAxXSxcInRvdGFsLFwiOlsxMDNdLFwib2JzZXJ2ZWRcIjpbMTA1XSxcIjY4LDAwMFwiOlsxMDddLFwiZGlyZWN0ZWRcIjpbMTA5XSxcImF0XCI6WzExMF0sXCIzNCwwMDBcIjpbMTEyXSxcImRpc3RpbmN0XCI6WzExM10sXCJ2aWN0aW1cIjpbMTE0XSxcIklQXCI6WzExNV0sXCJhZGRyZXNzZXMtLS1yYW5naW5nXCI6WzExNl0sXCJ3ZWxsLWtub3duXCI6WzExOF0sXCJlLWNvbW1lcmNlXCI6WzExOV0sXCJjb21wYW5pZXNcIjpbMTIwXSxcInN1Y2hcIjpbMTIxLDE1OV0sXCJBbWF6b25cIjpbMTIzXSxcIkhvdG1haWxcIjpbMTI1XSxcInNtYWxsXCI6WzEyN10sXCJmb3JlaWduXCI6WzEyOF0sXCJJU1BzXCI6WzEyOV0sXCJkaWFsLXVwXCI6WzEzMV0sXCJjb25uZWN0aW9ucy5cIjpbMTMyXSxcImJlbGlldmVcIjpbMTM0XSxcIm91clwiOlsxMzVdLFwidGVjaG5pcXVlXCI6WzEzNl0sXCJmaXJzdFwiOlsxMzldLFwicHJvdmlkZVwiOlsxNDFdLFwicXVhbnRpdGF0aXZlXCI6WzE0Ml0sXCJlc3RpbWF0ZXNcIjpbMTQzXSxcIkludGVybmV0LXdpZGVcIjpbMTQ1XSxcImFjdGl2aXR5XCI6WzE0NywxNjBdLFwiYXJ0aWNsZVwiOlsxNTFdLFwiZGVzY3JpYmVzXCI6WzE1Ml0sXCJtb3N0XCI6WzE1NF0sXCJjb21wcmVoZW5zaXZlXCI6WzE1NV0sXCJwdWJsaWNcIjpbMTU2XSxcIm1lYXN1cmVtZW50c1wiOlsxNTddLFwiZGF0ZS5cIjpbMTYyXX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL2NzZXdlYi51Y3NkLmVkdS9+c2F2YWdlL3BhcGVycy9Vc2VuaXhTZWMwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jYWlkYS5vcmcvcHVibGljYXRpb25zL3BhcGVycy8yMDA2L2JhY2tzY2F0dGVyX2Rvcy9iYWNrc2NhdHRlcl9kb3MucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vdXNlcnMuY3MuZHVrZS5lZHUvfmNoYXNlL29jcHMyMTQvc2xpZGVzL2JhY2tzY2F0dGVyLXV2YTAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vbXkuZml0LmVkdS9+Z21hcmluL0NTRTU2MzYvQmFja3NjYXR0ZXIucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuaWNpci5vcmcvdmVybi9jczI2MW4vcGFwZXJzL01WUy1ERG9TLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmR0aWMubWlsL2R0aWMvdHIvZnVsbHRleHQvdTIvYTQwMDAwMy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy53bS5lZHUvfmhudy9jb3Vyc2VzL2NzNzgwL3BhcGVycy9Vc2VuaXhTZWMwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL25tcy5sY3MubWl0LmVkdS82ODI5LXBhcGVycy9iYWNrc2NhdHRlci5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3dlYi5jcy53cGkuZWR1L35yZWsvQWR2X05ldHMvRmFsbDIwMDkvSW5mZXItRE9TLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LmNzLmpodS5lZHUvfmZhYmlhbi9jb3Vyc2VzL0NTNjAwLjQyNC9jb3Vyc2VfcGFwZXJzL2luZmVycmluZy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2Z0cC5jYWlkYS5vcmcvcHVibGljYXRpb25zL3BhcGVycy8yMDAxL0JhY2tTY2F0dGVyL3VzZW5peHNlY3VyaXR5MDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vd3d3LnNlY3VyaXRlaW5mby5jb20vZWJvb2tzL3BkZi9kZG9zLWluZm8ucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9sYXNyLmNzLnVjbGEuZWR1L2NsYXNzZXMvMjM5XzEuc3ByaW5nMDMvcGFwZXJzL2luZmVyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vdXNlcnMuZWNlLmNtdS5lZHUvfmFkcmlhbi83MzEtczA3L3JlYWRpbmdzL01WUy1ERG9TLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vd3d3LndpbmRvd3NlY3VyaXR5LmNvbS91cGxhcnRpY2xlL0luZm9ybWF0aW9uX1dhcmZhcmUvdXNlbml4c2VjdXJpdHkwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3Byb2plY3RzLmxhYXMuZnIvTUVUUk9TRUMvRE9DL3VzZW5peHNlY3VyaXR5MDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3NkLnVvYy5nci9+aHk1NTgvcGFwZXJzL3VzZW5peHNlY3VyaXR5MDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93ZWIuZWVjcy51bWljaC5lZHUvfmFwcmFrYXNoL3NlY3VyaXR5L2hhbmRvdXRzL1VzZW5peFNlYzAxLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vZm1nLXd3dy5jcy51Y2xhLmVkdS9jbGFzc2VzLzIzOV8xLnNwcmluZzAzL3BhcGVycy9pbmZlci5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3BhZ2VzLmNzLndpc2MuZWR1L35ha2VsbGEvQ1M3NDAvUzA3Lzc0MC1QYXBlcnMvTVZTMDEucGRmXCJ9XSxcIlZGTlwiOlwiQUNNIFRyYW5zYWN0aW9ucyBvbiBDb21wdXRlciBTeXN0ZW1zXCIsXCJWXCI6MjQsXCJJXCI6MixcIkZQXCI6MTE1LFwiTFBcIjoxMzksXCJET0lcIjpcIjEwLjExNDUvMTEzMjAyNi4xMTMyMDI3XCIsXCJDQ1wiOntcIjI0MzQ3NDZcIjpbXCJXZSB0aGVuIG1hcHBlZCBBUyBudW1iZXJzIHRvIGlkZW50aWZ5aW5nIG5hbWVzIHVzaW5nIHRoZSBOZXRHZW8gWzE3XSBzZXJ2aWNlIHRvIGRvIGxvb2t1cHMgaW4gcmVnaXN0cnkgd2hvaXMgc2VydmVycy5cIl0sXCI5OTA5NjQwOFwiOltcIldoaWxlIGRlbmlhbC1vZi1zZXJ2aWNlIGhhcyBsb25nIGJlZW4gcmVjb2duaXplZCBhcyBhIHByb2JsZW0gWzE0LCAxOF0sIHRoZXJlIGhhcyBiZWVuIGxpbWl0ZWQgcmVzZWFyY2ggb24gdGhlIHRvcGljLlwiXSxcIjIwNjE2NDU4MVwiOltcIkdpdmVuIHRoZSBwcmFjdGljYWwgZGlmZmljdWx0eSBvZiBlbnN1cmluZyB0aGF0IGFsbCBuZXR3b3JrcyBhcmUgZmlsdGVyZWQsIG90aGVyIHdvcmsgaGFzIGZvY3VzZWQgb24gZGV2ZWxvcGluZyB0b29scyBhbmQgbWVjaGFuaXNtcyBmb3IgdHJhY2luZyBmbG93cyBvZiBwYWNrZXRzIHRocm91Z2ggdGhlIG5ldHdvcmsgaW5kZXBlbmRlbnQgb2YgdGhlaXIgb3N0ZW5zaWJseSBjbGFpbWVkIHNvdXJjZSBhZGRyZXNzIFszLCAyNiwgMjMsIDIsIDI0LCAxMV0uXCJdLFwiMTI1MzY2NjMyOFwiOltcIkZpcnN0LCBpbiBjb250cmFzdCB0byBvdGhlciBJbnRlcm5ldCB3b3JrbG9hZHMgc3VjaCBhcyBXZWIgW1dvbG1hbiBldCBhbC4gMTk5OV0gYW5kIHBlZXItdG8tcGVlciBmaWxlIHNoYXJpbmcgW1Nhcm9pdSBldCBhbC5cIl0sXCIxNTE4MTU0OTE3XCI6W1wiR2l2ZW4gdGhlIHByYWN0aWNhbCBkaWZmaWN1bHR5IG9mIGVuc3VyaW5nIHRoYXQgYWxsIG5ldHdvcmtzIGFyZSBmaWx0ZXJlZCwgb3RoZXIgd29yayBoYXMgZm9jdXNlZCBvbiBkZXZlbG9waW5nIHRvb2xzIGFuZCBtZWNoYW5pc21zIGZvciB0cmFjaW5nIGZsb3dzIG9mIHBhY2tldHMgdGhyb3VnaCB0aGUgbmV0d29yayBpbmRlcGVuZGVudCBvZiB0aGVpciBvc3RlbnNpYmx5IGNsYWltZWQgc291cmNlIGFkZHJlc3MgWzMsIDI2LCAyMywgMiwgMjQsIDExXS5cIl0sXCIxNTgyNDUzNzc5XCI6W1wiUHJvYmFibHkgdGhlIGJlc3Qga25vd24gcHJpb3Igd29yayBpcyBIb3dhcmTigJlzIFBoRCB0aGVzaXMg4oCTIGEgbG9uZ2l0dWRpbmFsIHN0dWR5IG9mIGluY2lkZW50IHJlcG9ydHMgcmVjZWl2ZWQgYnkgdGhlIENvbXB1dGVyIEVtZXJnZW5jeSBSZXNwb25zZSBUZWFtIChDRVJUKSBmcm9tIDE5ODkgdG8gMTk5NSBbMTVdLlwiXSxcIjE2ODYyNjk4OTNcIjpbXCJUaGUgZmlyc3QgY2F0ZWdvcnkgaXMgY29tcG9zZWQgb2YgYm90aCBhcHByb2FjaGVzIGZvciBtaXRpZ2F0aW5nIHRoZSBpbXBhY3Qgb2Ygc3BlY2lmaWMgYXR0YWNrcyBbNCwgMTZdIGFuZCBnZW5lcmFsIHN5c3RlbSBtZWNoYW5pc21zIFsyNSwgMV0gZm9yIGNvbnRyb2xsaW5nIHJlc291cmNlIHVzYWdlIG9uIHRoZSB2aWN0aW0gbWFjaGluZS5cIl0sXCIxODY3MjE5NjUyXCI6W1wiRmlyc3QsIHNvbWUgSVNQcyBlbXBsb3kgaW5ncmVzcyBmaWx0ZXJpbmcgWzEyLCA1XSBvbiB0aGVpciByb3V0ZXJzIHRvIGRyb3AgcGFja2V0cyB3aXRoIHNvdXJjZSBJUCBhZGRyZXNzZXMgb3V0c2lkZSB0aGUgcmFuZ2Ugb2YgYSBjdXN0b21lcuKAmXMgbmV0d29yay5cIixcIlRoZSBiZXN0IGtub3duIGFuZCBtb3N0IHdpZGVseSBkZXBsb3llZCBvZiB0aGVzZSBwcm9wb3NhbHMgaXMgc28tY2FsbGVkIGluZ3Jlc3MgYW5kIGVncmVzcyBmaWx0ZXJpbmcgWzEyLCA1XS5cIl0sXCIxOTY3OTQ5NzcwXCI6W1wiR2l2ZW4gdGhlIHByYWN0aWNhbCBkaWZmaWN1bHR5IG9mIGVuc3VyaW5nIHRoYXQgYWxsIG5ldHdvcmtzIGFyZSBmaWx0ZXJlZCwgb3RoZXIgd29yayBoYXMgZm9jdXNlZCBvbiBkZXZlbG9waW5nIHRvb2xzIGFuZCBtZWNoYW5pc21zIGZvciB0cmFjaW5nIGZsb3dzIG9mIHBhY2tldHMgdGhyb3VnaCB0aGUgbmV0d29yayBpbmRlcGVuZGVudCBvZiB0aGVpciBvc3RlbnNpYmx5IGNsYWltZWQgc291cmNlIGFkZHJlc3MgWzMsIDI2LCAyMywgMiwgMjQsIDExXS5cIl0sXCIyMDQ1MTY4Mjc5XCI6W1wiVGhlIGZpcnN0IGNhdGVnb3J5IGlzIGNvbXBvc2VkIG9mIGJvdGggYXBwcm9hY2hlcyBmb3IgbWl0aWdhdGluZyB0aGUgaW1wYWN0IG9mIHNwZWNpZmljIGF0dGFja3MgWzQsIDE2XSBhbmQgZ2VuZXJhbCBzeXN0ZW0gbWVjaGFuaXNtcyBbMjUsIDFdIGZvciBjb250cm9sbGluZyByZXNvdXJjZSB1c2FnZSBvbiB0aGUgdmljdGltIG1hY2hpbmUuXCJdLFwiMjA3OTMxODUxMFwiOltcIldoaWxlIGRlbmlhbC1vZi1zZXJ2aWNlIGhhcyBsb25nIGJlZW4gcmVjb2duaXplZCBhcyBhIHByb2JsZW0gWzE0LCAxOF0sIHRoZXJlIGhhcyBiZWVuIGxpbWl0ZWQgcmVzZWFyY2ggb24gdGhlIHRvcGljLlwiXSxcIjIwODE0NjE2MjRcIjpbXCJUaGUgZmlyc3QgY2F0ZWdvcnkgaXMgY29tcG9zZWQgb2YgYm90aCBhcHByb2FjaGVzIGZvciBtaXRpZ2F0aW5nIHRoZSBpbXBhY3Qgb2Ygc3BlY2lmaWMgYXR0YWNrcyBbNCwgMTZdIGFuZCBnZW5lcmFsIHN5c3RlbSBtZWNoYW5pc21zIFsyNSwgMV0gZm9yIGNvbnRyb2xsaW5nIHJlc291cmNlIHVzYWdlIG9uIHRoZSB2aWN0aW0gbWFjaGluZS5cIl0sXCIyMTE3MjIyNTU0XCI6W1wiR2l2ZW4gdGhlIHByYWN0aWNhbCBkaWZmaWN1bHR5IG9mIGVuc3VyaW5nIHRoYXQgYWxsIG5ldHdvcmtzIGFyZSBmaWx0ZXJlZCwgb3RoZXIgd29yayBoYXMgZm9jdXNlZCBvbiBkZXZlbG9waW5nIHRvb2xzIGFuZCBtZWNoYW5pc21zIGZvciB0cmFjaW5nIGZsb3dzIG9mIHBhY2tldHMgdGhyb3VnaCB0aGUgbmV0d29yayBpbmRlcGVuZGVudCBvZiB0aGVpciBvc3RlbnNpYmx5IGNsYWltZWQgc291cmNlIGFkZHJlc3MgWzMsIDI2LCAyMywgMiwgMjQsIDExXS5cIl0sXCIyMTUwMjI4NjA1XCI6W1wiR2l2ZW4gdGhlIHByYWN0aWNhbCBkaWZmaWN1bHR5IG9mIGVuc3VyaW5nIHRoYXQgYWxsIG5ldHdvcmtzIGFyZSBmaWx0ZXJlZCwgb3RoZXIgd29yayBoYXMgZm9jdXNlZCBvbiBkZXZlbG9waW5nIHRvb2xzIGFuZCBtZWNoYW5pc21zIGZvciB0cmFjaW5nIGZsb3dzIG9mIHBhY2tldHMgdGhyb3VnaCB0aGUgbmV0d29yayBpbmRlcGVuZGVudCBvZiB0aGVpciBvc3RlbnNpYmx5IGNsYWltZWQgc291cmNlIGFkZHJlc3MgWzMsIDI2LCAyMywgMiwgMjQsIDExXS5cIl0sXCIyMjc1NDQ4NTUzXCI6W1wiVGhlIHNlY29uZCBhcmVhIG9mIHJlc2VhcmNoLCBha2luIHRvIHRyYWRpdGlvbmFsIGludHJ1c2lvbiBkZXRlY3Rpb24sIGlzIGFib3V0IHRlY2huaXF1ZXMgYW5kIGFsZ29yaXRobXMgZm9yIGF1dG9tYXRpY2FsbHkgZGV0ZWN0aW5nIGF0dGFja3MgYXMgdGhleSBvY2N1ciBbMjIsIDEzXS5cIl19LFwiUFJcIjpbMTk2Nzk0OTc3MCwxODY3MjE5NjUyLDIxMTkwMzAzNDMsMjEwNDY5MjI5MiwyMTI3MjczMjIxLDIxNTQxNzgxNTQsMjE1MDIyODYwNSwyMTYyMTMzMTUwLDE1MjAwNjg1OTIsMjE3NjA4NTgyMCwyMTcwNzcxMDMwLDE2NzQ4NzcxODYsMjE1OTE2MDgzMywyMDAxNjE5NTU2LDIwNjE2NDU4MSwxNDk4NTg1Mzc0LDE1NzgxMzg3MTEsMjAwMTk2ODI5NywyMDgzNDc3MjA2LDIxNjQ2ODY2NjUsMTk2Nzk0OTc3MCwxODY3MjE5NjUyLDIxMTkwMzAzNDMsMjEwNDY5MjI5MiwyMTI3MjczMjIxLDIxNTQxNzgxNTQsMjE1MDIyODYwNSwyMTYyMTMzMTUwLDE1MjAwNjg1OTIsMjE3NjA4NTgyMCwyMTcwNzcxMDMwLDE2NzQ4NzcxODYsMjE1OTE2MDgzMywyMDAxNjE5NTU2LDIwNjE2NDU4MSwxNDk4NTg1Mzc0LDE1NzgxMzg3MTEsMjAwMTk2ODI5NywyMDgzNDc3MjA2LDIxNjQ2ODY2NjVdLFwiQU5GXCI6W3tcIkZOXCI6XCJEYXZpZFwiLFwiTE5cIjpcIk1vb3JlXCIsXCJTXCI6MX0se1wiRk5cIjpcIkNvbGxlZW5cIixcIkxOXCI6XCJTaGFubm9uXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkRvdWdsYXMgSi5cIixcIkxOXCI6XCJCcm93blwiLFwiU1wiOjN9LHtcIkZOXCI6XCJHZW9mZnJleSBNLlwiLFwiTE5cIjpcIlZvZWxrZXJcIixcIlNcIjo0fSx7XCJGTlwiOlwiU3RlZmFuXCIsXCJMTlwiOlwiU2F2YWdlXCIsXCJTXCI6NX1dLFwiQlZcIjpcIkFDTSBUcmFuc2FjdGlvbnMgb24gQ29tcHV0ZXIgU3lzdGVtc1wiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNi41NDEsImtlc0VudGl0eUlkIjoxODk3MjcyLCJJZCI6MjA5NzYyNTYzOCwiVGkiOiJkZWxheSB0b2xlcmFudCBuZXR3b3JraW5nIGFuIGFwcHJvYWNoIHRvIGludGVycGxhbmV0YXJ5IGludGVybmV0IiwiWSI6MjAwMywiRCI6IjIwMDMtMDYtMDEiLCJSSWQiOlsyMTI0NDc4Njc4LDIxMDUzMzgwNjEsMjAxODUwMTcwMSwyMTAxMDMxMDYwXSwiQUEiOlt7IkF1TiI6InNjb3R0IGMgYnVybGVpZ2gifSx7IkF1TiI6ImFkcmlhbiBqIGhvb2tlIn0seyJBdU4iOiJsZWlnaCB0b3JnZXJzb24ifSx7IkF1TiI6ImtldmluIHIgZmFsbCJ9LHsiQXVOIjoidmludCBjZXJmIn0seyJBdU4iOiJib2IgZHVyc3QifSx7IkF1TiI6ImtlaXRoIHNjb3R0In0seyJBdU4iOiJob3dhcmQgd2Vpc3MifV0sIkYiOlt7IkZOIjoiaW50ZXJwbGFuZXRhcnkgaW50ZXJuZXQifSx7IkZOIjoicmVzZXJ2ZWQgaXAgYWRkcmVzc2VzIn0seyJGTiI6ImxpbmsgY29udHJvbCBwcm90b2NvbCJ9LHsiRk4iOiJkeW5hbWljIGNpcmN1aXQgbmV0d29yayJ9LHsiRk4iOiJpbnRlcm5ldCBsYXllciJ9LHsiRk4iOiJkZWxheSB0b2xlcmFudCBuZXR3b3JraW5nIn0seyJGTiI6ImludGVybmV0IHByb3RvY29sIHN1aXRlIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkRlbGF5LXRvbGVyYW50IG5ldHdvcmtpbmc6IGFuIGFwcHJvYWNoIHRvIGludGVycGxhbmV0YXJ5IEludGVybmV0XCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTQxLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkluY3JlYXNpbmdseSxcIjpbMF0sXCJuZXR3b3JrXCI6WzEsMTEyXSxcImFwcGxpY2F0aW9uc1wiOlsyXSxcIm11c3RcIjpbMywzNF0sXCJjb21tdW5pY2F0ZVwiOls0XSxcIndpdGhcIjpbNV0sXCJjb3VudGVycGFydHNcIjpbNl0sXCJhY3Jvc3NcIjpbN10sXCJkaXNwYXJhdGVcIjpbOCw2NF0sXCJuZXR3b3JraW5nXCI6WzksOTRdLFwiZW52aXJvbm1lbnRzXCI6WzEwLDY1XSxcImNoYXJhY3Rlcml6ZWRcIjpbMTFdLFwiYnlcIjpbMTJdLFwic2lnbmlmaWNhbnRseVwiOlsxM10sXCJkaWZmZXJlbnRcIjpbMTRdLFwic2V0c1wiOlsxNV0sXCJvZlwiOlsxNiw3MiwxMDMsMTMyXSxcInBoeXNpY2FsXCI6WzE3XSxcImFuZFwiOlsxOCwzOCw1OCw3MCw5NywxMzldLFwib3BlcmF0aW9uYWxcIjpbMTldLFwiY29uc3RyYWludHM7XCI6WzIwXSxcIndpZGVcIjpbMjFdLFwidmFyaWF0aW9uc1wiOlsyMl0sXCJpblwiOlsyMyw2Ml0sXCJ0cmFuc21pc3Npb25cIjpbMjRdLFwibGF0ZW5jeVwiOlsyNV0sXCJhcmVcIjpbMjYsNzhdLFwicGFydGljdWxhcmx5XCI6WzI3XSxcInRyb3VibGVzb21lLlwiOlsyOF0sXCJUaGVcIjpbMjksNzVdLFwicHJvcG9zZWRcIjpbMzBdLFwiSW50ZXJwbGFuZXRhcnlcIjpbMzFdLFwiSW50ZXJuZXQsXCI6WzMyXSxcIndoaWNoXCI6WzMzXSxcImVuY29tcGFzc1wiOlszNV0sXCJib3RoXCI6WzM2XSxcInRlcnJlc3RyaWFsXCI6WzM3XSxcImludGVycGxhbmV0YXJ5XCI6WzM5XSxcImxpbmtzLFwiOls0MF0sXCJpc1wiOls0MV0sXCJhblwiOls0Ml0sXCJleHRyZW1lXCI6WzQzXSxcImNhc2UuXCI6WzQ0XSxcIkFuXCI6WzQ1XSxcImFyY2hpdGVjdHVyZVwiOls0Niw5NiwxMzVdLFwiYmFzZWRcIjpbNDddLFwib25cIjpbNDgsMTA3XSxcImFcIjpbNDksOTIsMTA4XSxcIlxcXCJsZWFzdFwiOls1MF0sXCJjb21tb25cIjpbNTFdLFwiZGVub21pbmF0b3JcXFwiXCI6WzUyXSxcInByb3RvY29sXCI6WzUzLDExM10sXCJ0aGF0XCI6WzU0LDg5LDEwNCwxMjIsMTI5XSxcImNhblwiOls1NV0sXCJvcGVyYXRlXCI6WzU2XSxcInN1Y2Nlc3NmdWxseVwiOls1N10sXCIod2hlcmVcIjpbNTldLFwicmVxdWlyZWQpXCI6WzYwXSxcInJlbGlhYmx5XCI6WzYxXSxcIm11bHRpcGxlXCI6WzYzXSxcIndvdWxkXCI6WzY2LDkwXSxcInNpbXBsaWZ5XCI6WzY3XSxcInRoZVwiOls2OCw5OSwxMzAsMTMzXSxcImRldmVsb3BtZW50XCI6WzY5XSxcImRlcGxveW1lbnRcIjpbNzEsMTM4XSxcInN1Y2hcIjpbNzNdLFwiYXBwbGljYXRpb25zLlwiOls3NF0sXCJJbnRlcm5ldFwiOls3NiwxMTldLFwicHJvdG9jb2xzXCI6Wzc3XSxcImlsbFwiOls3OV0sXCJzdWl0ZWRcIjpbODBdLFwiZm9yXCI6WzgxXSxcInRoaXNcIjpbODJdLFwicHVycG9zZS5cIjpbODNdLFwiV2VcIjpbODQsMTE2XSxcImlkZW50aWZ5XCI6Wzg1XSxcInRocmVlXCI6Wzg2XSxcImZ1bmRhbWVudGFsXCI6Wzg3XSxcInByaW5jaXBsZXNcIjpbODhdLFwidW5kZXJsaWVcIjpbOTFdLFwiZGVsYXktdG9sZXJhbnRcIjpbOTNdLFwiKERUTilcIjpbOTVdLFwiZGVzY3JpYmVcIjpbOThdLFwibWFpblwiOlsxMDBdLFwic3RydWN0dXJhbFwiOlsxMDFdLFwiZWxlbWVudHNcIjpbMTAyXSxcImFyY2hpdGVjdHVyZSxcIjpbMTA1XSxcImNlbnRlcmVkXCI6WzEwNl0sXCJuZXdcIjpbMTA5XSxcImVuZC10by1lbmRcIjpbMTEwXSxcIm92ZXJsYXlcIjpbMTExXSxcImNhbGxlZFwiOlsxMTRdLFwiQnVuZGxpbmcuXCI6WzExNV0sXCJhbHNvXCI6WzExN10sXCJleGFtaW5lXCI6WzExOF0sXCJpbmZyYXN0cnVjdHVyZVwiOlsxMjBdLFwiYWRhcHRhdGlvbnNcIjpbMTIxXSxcIm1pZ2h0XCI6WzEyM10sXCJ5aWVsZFwiOlsxMjRdLFwiY29tcGFyYWJsZVwiOlsxMjVdLFwicGVyZm9ybWFuY2VcIjpbMTI2XSxcImJ1dFwiOlsxMjddLFwiY29uY2x1ZGVcIjpbMTI4XSxcInNpbXBsaWNpdHlcIjpbMTMxXSxcIkRUTlwiOlsxMzRdLFwicHJvbWlzZXNcIjpbMTM2XSxcImVhc2llclwiOlsxMzddLFwiZXh0ZW5zaW9uLlwiOlsxNDBdfX0sXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9pZWVleHBsb3JlLmllZWUub3JnL2RvY3VtZW50LzEyMDQ3NTkvXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLm9yZy8xMC4xMTA5L01DT00uMjAwMy4xMjA0NzU5XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9qb3VybmFscy9jbS9jbTQxLmh0bWwjQnVybGVpZ2hIVEZDRFNXMDNcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTIyOTIyNjZcIn1dLFwiVkZOXCI6XCJJRUVFIENvbW11bmljYXRpb25zIE1hZ2F6aW5lXCIsXCJWXCI6NDEsXCJJXCI6NixcIkZQXCI6MTI4LFwiTFBcIjoxMzYsXCJET0lcIjpcIjEwLjExMDkvTUNPTS4yMDAzLjEyMDQ3NTlcIixcIlBSXCI6WzIxMTIzMTY2OTQsMTU3MjQ4MTk2NSwyMDEwNjM0NjQwLDIxMjU5NTcwMzgsMjE2MjA3Njk2NywyMTQyNTIyNTI3LDIxMjM4MjU4OTYsMjEyOTg0OTk5OSwyMTM2NDIwMjMzLDIyNTM1MTcwMzcsMTk2NjUxODI4MiwyMTQ5OTU5ODE1LDE5NjUzOTYyMjcsMjAyMTQ5NzkwNCwyMTM1NzEyNzEwLDIyNzM1MTU3NTgsMjE1MTM0Mjg2MSwyMTEyNzAxMTYwLDIxMDc5MzA4NDYsMjEwOTUyODcxOCwyMTEyMzE2Njk0LDE1NzI0ODE5NjUsMjAxMDYzNDY0MCwyMTI1OTU3MDM4LDIxNjIwNzY5NjcsMjE0MjUyMjUyNywyMTIzODI1ODk2LDIxMjk4NDk5OTksMjEzNjQyMDIzMywyMjUzNTE3MDM3LDE5NjY1MTgyODIsMjE0OTk1OTgxNSwxOTY1Mzk2MjI3LDIwMjE0OTc5MDQsMjEzNTcxMjcxMCwyMjczNTE1NzU4LDIxNTEzNDI4NjEsMjExMjcwMTE2MCwyMTA3OTMwODQ2LDIxMDk1Mjg3MThdLFwiQU5GXCI6W3tcIkZOXCI6XCJTY290dCBDLlwiLFwiTE5cIjpcIkJ1cmxlaWdoXCIsXCJTXCI6MX0se1wiRk5cIjpcIkFkcmlhblwiLFwiTE5cIjpcIkhvb2tlXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkxlaWdoXCIsXCJMTlwiOlwiVG9yZ2Vyc29uXCIsXCJTXCI6M30se1wiRk5cIjpcIktldmluXCIsXCJMTlwiOlwiRmFsbFwiLFwiU1wiOjR9LHtcIkZOXCI6XCJWaW50XCIsXCJMTlwiOlwiQ2VyZlwiLFwiU1wiOjV9LHtcIkZOXCI6XCJCb2JcIixcIkxOXCI6XCJEdXJzdFwiLFwiU1wiOjZ9LHtcIkZOXCI6XCJLZWl0aCBMLlwiLFwiTE5cIjpcIlNjb3R0XCIsXCJTXCI6N30se1wiRk5cIjpcIkhvd2FyZCBTLlwiLFwiTE5cIjpcIldlaXNzXCIsXCJTXCI6OH1dLFwiQlZcIjpcIklFRUUgQ29tbXVuaWNhdGlvbnMgTWFnYXppbmVcIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiSUVFRVwifSJ9LHsibG9ncHJvYiI6LTE2LjU0NCwia2VzRW50aXR5SWQiOjE5MDM4NjAsIklkIjoxOTc3MDM3NzM0LCJUaSI6ImRpZ2l0YWwgZGl2aWRlIGNpdmljIGVuZ2FnZW1lbnQgaW5mb3JtYXRpb24gcG92ZXJ0eSBhbmQgdGhlIGludGVybmV0IHdvcmxkd2lkZSIsIlkiOjIwMDEsIkQiOiIyMDAxLTAxLTAxIiwiQUEiOlt7IkF1TiI6InBpcHBhIG5vcnJpcyJ9XSwiRiI6W3siRk4iOiJlIGRlbW9jcmFjeSJ9LHsiRk4iOiJwb2xpdGljYWwgc3lzdGVtIn0seyJGTiI6ImRpZ2l0YWwgZGl2aWRlIn0seyJGTiI6ImluZm9ybWF0aW9uIGFuZCBjb21tdW5pY2F0aW9uIHRlY2hub2xvZ2llcyBmb3IgZGV2ZWxvcG1lbnQifSx7IkZOIjoiY2l2aWMgZW5nYWdlbWVudCJ9LHsiRk4iOiJvbmxpbmUgY29tbXVuaXR5In0seyJGTiI6InBvdmVydHkifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6InB1YmxpYyByZWxhdGlvbnMifSx7IkZOIjoicG9saXRpY2FsIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiRGlnaXRhbCBEaXZpZGU6IENpdmljIEVuZ2FnZW1lbnQsIEluZm9ybWF0aW9uIFBvdmVydHksIGFuZCB0aGUgSW50ZXJuZXQgV29ybGR3aWRlXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTMzLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkZyb21cIjpbMF0sXCJ0aGVcIjpbMSw5LDM4LDY4LDc1LDc4LDg0LDg5LDEwMCwxMDYsMTE2LDEyMSwxMzFdLFwiUHVibGlzaGVyOlxcclxcbkRpZ2l0YWxcIjpbMl0sXCJEaXZpZGVcIjpbM10sXCJleGFtaW5lc1wiOls0LDgzXSxcImFjY2Vzc1wiOls1XSxcImFuZFwiOls2LDIyLDMyLDUyLDYwLDg4LDExNSwxMTldLFwidXNlXCI6WzcsNTVdLFwib2ZcIjpbOCwxMjhdLFwiSW50ZXJuZXRcIjpbMTAsNTYsNzZdLFwiaW5cIjpbMTEsNjIsMTEzXSxcIjE3OVwiOlsxMl0sXCJuYXRpb25zXCI6WzEzXSxcIndvcmxkLXdpZGUuXCI6WzE0XSxcIkFcIjpbMTUsMjVdLFwiZ2xvYmFsXCI6WzE2XSxcImRpdmlkZVwiOlsxNywyNyw0NV0sXCJpc1wiOlsxOCwyOCw0Nl0sXCJldmlkZW50XCI6WzE5XSxcImJldHdlZW5cIjpbMjAsMzAsNDgsNzFdLFwiaW5kdXN0cmlhbGl6ZWRcIjpbMjFdLFwiZGV2ZWxvcGluZ1wiOlsyM10sXCJzb2NpZXRpZXMuXCI6WzI0XSxcInNvY2lhbFwiOlsyNl0sXCJhcHBhcmVudFwiOlsyOV0sXCJyaWNoXCI6WzMxXSxcInBvb3JcIjpbMzNdLFwid2l0aGluXCI6WzM0XSxcImVhY2hcIjpbMzVdLFwibmF0aW9uLlwiOlszNl0sXCJXaXRoaW5cIjpbMzddLFwib25saW5lXCI6WzM5XSxcImNvbW11bml0eSxcIjpbNDBdLFwiZXZpZGVuY2VcIjpbNDFdLFwiZm9yXCI6WzQyXSxcImFcIjpbNDNdLFwiZGVtb2NyYXRpY1wiOls0NF0sXCJlbWVyZ2luZ1wiOls0N10sXCJ0aG9zZVwiOls0OV0sXCJ3aG9cIjpbNTAsNzNdLFwiZG9cIjpbNTEsNTNdLFwibm90XCI6WzU0XSxcInJlc291cmNlc1wiOls1N10sXCJ0b1wiOls1OCw5NiwxMTAsMTI1XSxcImVuZ2FnZVwiOls1OV0sXCJwYXJ0aWNpcGF0ZVwiOls2MV0sXCJwdWJsaWNcIjpbNjMsMTA3XSxcImxpZmUuXCI6WzY0XSxcIlBhcnRcIjpbNjUsODEsMTAyXSxcIklcIjpbNjZdLFwib3V0bGluZXNcIjpbNjddLFwidGhlb3JldGljYWxcIjpbNjldLFwiZGViYXRlXCI6WzcwXSxcImN5YmVyLW9wdGltaXN0c1wiOls3Ml0sXCJzZWVcIjpbNzRdLFwiYXNcIjpbNzddLFwiZ3JlYXRcIjpbNzldLFwibGV2ZWxlci5cIjpbODBdLFwiSUlcIjpbODJdLFwidmlydHVhbFwiOls4NV0sXCJwb2xpdGljYWxcIjpbODZdLFwic3lzdGVtXCI6Wzg3XSxcIndheVwiOls5MF0sXCJ0aGF0XCI6WzkxXSxcInJlcHJlc2VudGF0aXZlXCI6WzkyXSxcImluc3RpdHV0aW9uc1wiOls5M10sXCJoYXZlXCI6Wzk0XSxcInJlc3BvbmRlZFwiOls5NSwxMDldLFwibmV3XCI6Wzk3XSxcIm9wcG9ydHVuaXRpZXNcIjpbOTgsMTEyXSxcIm9uXCI6Wzk5XSxcIkludGVybmV0LlwiOlsxMDEsMTMyXSxcIklJSVwiOlsxMDNdLFwiYW5hbHl6ZXNcIjpbMTA0XSxcImhvd1wiOlsxMDVdLFwiaGFzXCI6WzEwOF0sXCJ0aGVzZVwiOlsxMTFdLFwiRXVyb3BlXCI6WzExNF0sXCJVbml0ZWRcIjpbMTE3XSxcIlN0YXRlc1wiOlsxMThdLFwiZGV2ZWxvcHNcIjpbMTIwXSxcImNpdmljXCI6WzEyMl0sXCJlbmdhZ2VtZW50XCI6WzEyM10sXCJtb2RlbFwiOlsxMjRdLFwiZXhwbGFpblwiOlsxMjZdLFwicGF0dGVybnNcIjpbMTI3XSxcInBhcnRpY2lwYXRpb25cIjpbMTI5XSxcInZpYVwiOlsxMzBdfX0sXCJTXCI6W3tcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LmNhbWJyaWRnZS5vcmcvY29yZS9ib29rcy9kaWdpdGFsLWRpdmlkZS8yMEVGRUQ1NTc0Njk1QUM3OUQxQkJDNkUyOTVCMUVDMFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vaWN0bG9neS5uZXQvYmlibGlvZ3JhcGh5L3JlcG9ydHMvcHJvamVjdHMucGhwP2lkcD04MjZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9EaWdpdGFsLURpdmlkZS1FbmdhZ2VtZW50LUluZm9ybWF0aW9uLUNvbW11bmljYXRpb24vZHAvMDUyMTgwNzUxNFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTUxNjIwNlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vY2kubmlpLmFjLmpwL25jaWQvQkE1NDI5MTY4MFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTUxNjE5OFwifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9NTE2MjA2XCJ9XSxcIlZGTlwiOlwiXCIsXCJQUlwiOlsxNTM5MTQyNTQ5LDIxNDcyNjQ0NTUsNjM2MDYxOTYyLDE5OTA1MTM3NDAsMTg3MzE3NTA1NSwyMTAwMzQ3NjMxLDIwNTMxMjAxNDIsMjExMDg3MzAzMCwyMTI3MDgxMzM1LDIxMTYzMzk4MTIsMTY2MDU0MDUzNCwyNzk4ODYyOTYxLDE1MTQxODY0ODUsMjAzMTM0MDQwNCw1NzcyNTM4NzksMjE1Nzc2NzU4OCwyMDQwNDg0MzU1LDIwOTk5NzcxNDIsMTU5NDgxOTcxMSw1NjE0MDc3OTEsMTUzOTE0MjU0OSwyMTQ3MjY0NDU1LDYzNjA2MTk2MiwxOTkwNTEzNzQwLDE4NzMxNzUwNTUsMjEwMDM0NzYzMSwyMDUzMTIwMTQyLDIxMTA4NzMwMzAsMjEyNzA4MTMzNSwyMTE2MzM5ODEyLDE2NjA1NDA1MzQsMjc5ODg2Mjk2MSwxNTE0MTg2NDg1LDIwMzEzNDA0MDQsNTc3MjUzODc5LDIxNTc3Njc1ODgsMjA0MDQ4NDM1NSwyMDk5OTc3MTQyLDE1OTQ4MTk3MTEsNTYxNDA3NzkxXSxcIkFORlwiOlt7XCJGTlwiOlwiUGlwcGFcIixcIkxOXCI6XCJOb3JyaXNcIixcIlNcIjoxfV0sXCJCVFwiOlwiYlwiLFwiUEJcIjpcIkNhbWJyaWRnZSBVbml2ZXJzaXR5IFByZXNzXCJ9In0seyJsb2dwcm9iIjotMTYuNTQ5LCJrZXNFbnRpdHlJZCI6MTkxMjM3MiwiSWQiOjE5MjQ0NjQ2NywiVGkiOiJ6b29rZWVwZXIgd2FpdCBmcmVlIGNvb3JkaW5hdGlvbiBmb3IgaW50ZXJuZXQgc2NhbGUgc3lzdGVtcyIsIlkiOjIwMTAsIkQiOiIyMDEwLTA2LTIzIiwiUklkIjpbMjE1MzcwNDYyNSwxOTkyNDc5MjEwLDIwNzU4NTQ0MjUsMTc3MzEwNzY0LDIwMDUzNzM3MTQsMjExMTU4Njk2MiwyMTE0NTc5MDIyLDIxNDMxNDk1MzYsMjEwMTkzOTAzNiwyMTUyNDY1MTczLDIwODU0MDc2NTUsMjAwNTIxNjY1NSwyMTM5MzU5MjE3LDIxMDgwMjYwODksMTQ5NzE1MDczMCwyMTQ3NTI0NTk4LDIxMjk0NjcxNTIsMjEyODM1MjA2MiwyMTYxMDM4NzczLDIwNjcyOTMzODUsMjAzNjUyNzE0NSwxNDk1ODAyMzU5LDI3NzM3NzIyMTUsMjExNjgyMDU0OSw3ODI5NzI4LDE5Nzg3NDkyMzIsMjExOTMzOTQ1NCwxNjIyMjY1NTUyLDI3NDg2MDQwMTUsMTk2MjQ1NTI0MywyMDU4NjM4MTAzXSwiQUEiOlt7IkF1TiI6InBhdHJpY2sgZGF2aWQgaHVudCJ9LHsiQXVOIjoibWFoYWRldiBrb25hciJ9LHsiQXVOIjoiZmxhdmlvIGp1bnF1ZWlyYSJ9LHsiQXVOIjoiYmVuamFtaW4gcmVlZCJ9XSwiRiI6W3siRk4iOiJ0cmFuc2FjdGlvbnMgcGVyIHNlY29uZCJ9LHsiRk4iOiJkaXN0cmlidXRlZCBsb2NrIG1hbmFnZXIifSx7IkZOIjoic3RhdGUgbWFjaGluZSByZXBsaWNhdGlvbiJ9LHsiRk4iOiJsaW5lYXJpemFiaWxpdHkifSx7IkZOIjoiZmlmbyJ9LHsiRk4iOiJjYWNoZSJ9LHsiRk4iOiJzZXJ2ZXIifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6InJlYWwgdGltZSBjb21wdXRpbmcifSx7IkZOIjoiZGlzdHJpYnV0ZWQgY29tcHV0aW5nIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiWm9vS2VlcGVyOiB3YWl0LWZyZWUgY29vcmRpbmF0aW9uIGZvciBpbnRlcm5ldC1zY2FsZSBzeXN0ZW1zXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTgwLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkluXCI6WzAsOTZdLFwidGhpc1wiOlsxXSxcInBhcGVyLFwiOlsyXSxcIndlXCI6WzNdLFwiZGVzY3JpYmVcIjpbNF0sXCJab29LZWVwZXIsXCI6WzVdLFwiYVwiOls2LDI1LDUzLDgzLDkyLDEwNCwxMzBdLFwic2VydmljZVwiOls3LDk0XSxcImZvclwiOls4LDMxLDExNSwxNDVdLFwiY29vcmRpbmF0aW5nXCI6WzldLFwicHJvY2Vzc2VzXCI6WzEwXSxcIm9mXCI6WzExLDE4LDY2LDc3LDEwOCwxMTEsMTI5LDE2MywxNjVdLFwiZGlzdHJpYnV0ZWRcIjpbMTIsNDksNzhdLFwiYXBwbGljYXRpb25zLlwiOlsxMywxNzldLFwiU2luY2VcIjpbMTRdLFwiWm9vS2VlcGVyXCI6WzE1LDIxLDg5LDEwMiwxMjEsMTU3LDE3Ml0sXCJpc1wiOlsxNl0sXCJwYXJ0XCI6WzE3XSxcImNyaXRpY2FsXCI6WzE5XSxcImluZnJhc3RydWN0dXJlLFwiOlsyMF0sXCJhaW1zXCI6WzIyXSxcInRvXCI6WzIzLDc0LDgxLDk4LDE1MCwxNTMsMTYxLDE3M10sXCJwcm92aWRlXCI6WzI0LDgyXSxcInNpbXBsZVwiOlsyNl0sXCJhbmRcIjpbMjcsNDgsMTEzXSxcImhpZ2hcIjpbMjgsMTMxXSxcInBlcmZvcm1hbmNlXCI6WzI5LDEzMiwxNzBdLFwia2VybmVsXCI6WzMwXSxcImJ1aWxkaW5nXCI6WzMyXSxcIm1vcmVcIjpbMzNdLFwiY29tcGxleFwiOlszNF0sXCJjb29yZGluYXRpb25cIjpbMzUsODddLFwicHJpbWl0aXZlc1wiOlszNl0sXCJhdFwiOlszN10sXCJ0aGVcIjpbMzgsNjMsOTksMTIwLDEyNywxNDZdLFwiY2xpZW50LlwiOlszOV0sXCJJdFwiOls0MF0sXCJpbmNvcnBvcmF0ZXNcIjpbNDFdLFwiZWxlbWVudHNcIjpbNDJdLFwiZnJvbVwiOls0M10sXCJncm91cFwiOls0NF0sXCJtZXNzYWdpbmcsXCI6WzQ1XSxcInNoYXJlZFwiOls0Niw2N10sXCJyZWdpc3RlcnMsXCI6WzQ3XSxcImxvY2tcIjpbNTBdLFwic2VydmljZXNcIjpbNTFdLFwiaW5cIjpbNTJdLFwicmVwbGljYXRlZCxcIjpbNTRdLFwiY2VudHJhbGl6ZWRcIjpbNTVdLFwic2VydmljZS5cIjpbNTZdLFwiVGhlXCI6WzU3XSxcImludGVyZmFjZVwiOls1OCw5MF0sXCJleHBvc2VkXCI6WzU5XSxcImJ5XCI6WzYwLDE0MCwxNzddLFwiWm9vLUtlZXBlclwiOls2MV0sXCJoYXNcIjpbNjJdLFwid2FpdC1mcmVlXCI6WzY0LDEwMF0sXCJhc3BlY3RzXCI6WzY1XSxcInJlZ2lzdGVyc1wiOls2OF0sXCJ3aXRoXCI6WzY5LDEzNV0sXCJhblwiOls3MF0sXCJldmVudC1kcml2ZW5cIjpbNzFdLFwibWVjaGFuaXNtXCI6WzcyXSxcInNpbWlsYXJcIjpbNzNdLFwiY2FjaGVcIjpbNzVdLFwiaW52YWxpZGF0aW9uc1wiOls3Nl0sXCJmaWxlXCI6Wzc5XSxcInN5c3RlbXNcIjpbODBdLFwic2ltcGxlLFwiOls4NF0sXCJ5ZXRcIjpbODVdLFwicG93ZXJmdWxcIjpbODZdLFwic2VydmljZS5cXHJcXG5cXHJcXG5UaGVcIjpbODhdLFwiZW5hYmxlc1wiOls5MV0sXCJoaWdoLXBlcmZvcm1hbmNlXCI6WzkzXSxcImltcGxlbWVudGF0aW9uLlwiOls5NV0sXCJhZGRpdGlvblwiOls5N10sXCJwcm9wZXJ0eSxcIjpbMTAxXSxcInByb3ZpZGVzXCI6WzEwM10sXCJwZXJcIjpbMTA1LDE2N10sXCJjbGllbnRcIjpbMTA2LDE3OF0sXCJndWFyYW50ZWVcIjpbMTA3XSxcIkZJRk9cIjpbMTA5XSxcImV4ZWN1dGlvblwiOlsxMTBdLFwicmVxdWVzdHNcIjpbMTEyLDExNywxMzddLFwibGluZWFyaXphYmlsaXR5XCI6WzExNF0sXCJhbGxcIjpbMTE2XSxcInRoYXRcIjpbMTE4LDE1Nl0sXCJjaGFuZ2VcIjpbMTE5XSxcInN0YXRlLlwiOlsxMjJdLFwiVGhlc2VcIjpbMTIzXSxcImRlc2lnblwiOlsxMjRdLFwiZGVjaXNpb25zXCI6WzEyNV0sXCJlbmFibGVcIjpbMTI2XSxcImltcGxlbWVudGF0aW9uXCI6WzEyOF0sXCJwcm9jZXNzaW5nXCI6WzEzM10sXCJwaXBlbGluZVwiOlsxMzRdLFwicmVhZFwiOlsxMzYsMTUyXSxcImJlaW5nXCI6WzEzOF0sXCJzYXRpc2ZpZWRcIjpbMTM5XSxcImxvY2FsXCI6WzE0MV0sXCJzZXJ2ZXJzLlwiOlsxNDJdLFwiV2VcIjpbMTQzXSxcInNob3dcIjpbMTQ0XSxcInRhcmdldFwiOlsxNDddLFwid29ya2xvYWRzLFwiOlsxNDhdLFwiMjoxXCI6WzE0OV0sXCIxMDA6MVwiOlsxNTFdLFwid3JpdGVcIjpbMTU0XSxcInJhdGlvLFwiOlsxNTVdLFwiY2FuXCI6WzE1OF0sXCJoYW5kbGVcIjpbMTU5XSxcInRlbnNcIjpbMTYwXSxcImh1bmRyZWRzXCI6WzE2Ml0sXCJ0aG91c2FuZHNcIjpbMTY0XSxcInRyYW5zYWN0aW9uc1wiOlsxNjZdLFwic2Vjb25kLlwiOlsxNjhdLFwiVGhpc1wiOlsxNjldLFwiYWxsb3dzXCI6WzE3MV0sXCJiZVwiOlsxNzRdLFwidXNlZFwiOlsxNzVdLFwiZXh0ZW5zaXZlbHlcIjpbMTc2XX19LFwiU1wiOlt7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vc3RhdGljLmNzLmJyb3duLmVkdS9jb3Vyc2VzL2NzMjI3L2FyY2hpdmVzLzIwMTIvcGFwZXJzL3JlcGxpY2F0aW9uL2h1bnQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vd3d3LnVzZW5peC5vcmcvbGVnYWN5L2V2ZW50L2F0YzEwL3RlY2gvZnVsbF9wYXBlcnMvSHVudC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly9wZG9zLmNzYWlsLm1pdC5lZHUvNi44MjQvcGFwZXJzL3pvb2tlZXBlci5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5jb3JuZWxsLmVkdS9jb3Vyc2VzL2NzNjQ1Mi8yMDEyc3AvcGFwZXJzL3pvb2tlZXBlci11c2VuaXgxMC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2RlcHRpbmZvLnVuaWNlLmZyL3R3aWtpL3B1Yi9NaW5mby9EaXN0cmlidXRlZEFsZ28vWm9vS2VlcGVyLnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vY3MuYnJvd24uZWR1L2NvdXJzZXMvY3MyMjcvYXJjaGl2ZXMvMjAxMi9wYXBlcnMvcmVwbGljYXRpb24vaHVudC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3N0YXRpYy51c2VuaXgub3JnL2V2ZW50cy9hdGMxMC90ZWNoL2Z1bGxfcGFwZXJzL0h1bnQucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3cuY3MucHJpbmNldG9uLmVkdS9jb3Vyc2VzL2FyY2hpdmUvZmFsbDEwL2NvczU5N0IvcGFwZXJzL3pvb2tlZXBlci11c2VuaXgxMC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2FxdWFsYWIuY3Mubm9ydGh3ZXN0ZXJuLmVkdS9jb21wb25lbnQvYXR0YWNobWVudHMvZG93bmxvYWQvMzIwXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly93d3czLm5kLmVkdS9+ZHRoYWluL2NvdXJzZXMvY3NlNDA4MjIvZmFsbDIwMTQvcGFwZXJzL3pvb2tlZXBlci5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0xODU1ODUxXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wZXJzby50ZWxlY29tLXBhcmlzdGVjaC5mci9+a3V6bmV0c28vSU5GMzQ2L3BhcGVycy96b29rZWVwZXIucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9jb25mL3VzZW5peC91c2VuaXgyMDEwLmh0bWwjSHVudEtKUjEwXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0xODU1ODUxXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHBzOi8vd3d3LnVzZW5peC5vcmcvY29uZmVyZW5jZS91c2VuaXgtYXRjLTEwL3pvb2tlZXBlci13YWl0LWZyZWUtY29vcmRpbmF0aW9uLWludGVybmV0LXNjYWxlLXN5c3RlbXNcIn1dLFwiVkZOXCI6XCJVU0VOSVggQW5udWFsIFRlY2huaWNhbCBDb25mZXJlbmNlXCIsXCJWU05cIjpcIlVTRU5JWCBBVENcIixcIkZQXCI6MTEsXCJMUFwiOjExLFwiQ0NcIjp7XCIxNDk1ODAyMzU5XCI6W1wiVGhlcmUgaGF2ZSBiZWVuIHByb3Bvc2FscyBvZiBwcm90b2NvbHMgZm9yIHByYWN0aWNhbCBpbXBsZW1lbnRhdGlvbnMgb2YgQnl6YW50aW5lLXRvbGVyYW50IHJlcGxpY2F0ZWQgc3RhdGVtYWNoaW5lcyBbNywgMTAsIDE4LCAxLCAyOF0uXCJdLFwiMTQ5NzE1MDczMFwiOltcIkJveHdvb2QgWzIxXSBpcyBhIHN5c3RlbSB0aGF0IHVzZXMgZGlzdHJpYnV0ZWQgbG9jayBzZXJ2ZXJzLlwiXSxcIjE2MjIyNjU1NTJcIjpbXCJGaW5hbGx5LCBUb3RlbSBndWFyYW50ZWVzIHRvdGFsIG9yZGVyIG9mIG1lc3NhZ2UgZGVsaXZlcnkgaW4gYW4gYXJjaGl0ZWN0dXJlIHRoYXQgZXhwbG9pdHMgaGFyZHdhcmUgYnJvYWRjYXN0cyBvZiBsb2NhbCBhcmVhIG5ldHdvcmtzIFsyMl0uXCJdLFwiMTk2MjQ1NTI0M1wiOltcIlNvbWUgZWFybHkgc3lzdGVtcyBwcm9wb3NlIGEgZGlzdHJpYnV0ZWQgbG9jayBzZXJ2aWNlIGZvciB0cmFuc2FjdGlvbmFsIGFwcGxpY2F0aW9ucyBbMTNdLCBhbmQgZm9yIHNoYXJpbmcgaW5mb3JtYXRpb24gaW4gY2x1c3RlcnMgb2YgY29tcHV0ZXJzIFsxOV0uXCJdLFwiMTk3ODc0OTIzMlwiOltcIk90aGVyIHNlcnZpY2VzIGhhdmUgYmVlbiBkZXZlbG9wZWQgc3BlY2lmaWNhbGx5IGZvciBsZWFkZXIgZWxlY3Rpb24gWzI1XSBhbmQgY29uZmlndXJhdGlvbiBbMjddLlwiXSxcIjE5OTI0NzkyMTBcIjpbXCJGb3IgZXhhbXBsZSwgQ2h1YmJ5IFs2XSBpcyBhIGxvY2tpbmcgc2VydmljZSB3aXRoIHN0cm9uZyBzeW5jaHJvbml6YXRpb24gZ3VhcmFudGVlcy5cIixcIlRvIGFzc2VzcyB0aGUgbGF0ZW5jeSBvZiByZXF1ZXN0cywgd2UgY3JlYXRlZCBhIGJlbmNobWFyayBtb2RlbGVkIGFmdGVyIHRoZSBDaHViYnkgYmVuY2htYXJrIFs2XS5cIixcIk1vcmUgcmVjZW50bHksIENodWJieSBwcm9wb3NlcyBhIHN5c3RlbSB0byBtYW5hZ2UgYWR2aXNvcnkgbG9ja3MgZm9yIGRpc3RyaWJ1dGVkIGFwcGxpY2F0aW9ucyBbNl0uXCJdLFwiMjAwNTM3MzcxNFwiOltcIlpvb0tlZXBlciB3YXRjaGVzLCBob3dldmVyLCBhcmUgc2ltaWxhciBpbiBzcGlyaXQgdG8gdGhlIGNhY2hlIGNhbGxiYWNrcyBvZiBBRlMgWzE2XS5cIl0sXCIyMDM2NTI3MTQ1XCI6W1wiVG8gZ3VhcmFudGVlIHRoYXQgdXBkYXRlIG9wZXJhdGlvbnMgc2F0aXNmeSBsaW5lYXJpemFiaWxpdHksIHdlIGltcGxlbWVudCBhIGxlYWRlci1iYXNlZCBhdG9taWMgYnJvYWRjYXN0IHByb3RvY29sIFsyM10sIGNhbGxlZCBaYWIgWzI0XS5cIixcIlRoZSBsZWFkZXIgZXhlY3V0ZXMgdGhlIHJlcXVlc3QgYW5kIGJyb2FkY2FzdHMgdGhlIGNoYW5nZSB0byB0aGUgWm9vS2VlcGVyIHN0YXRlIHRocm91Z2ggWmFiIFsyNF0sIGFuIGF0b21pYyBicm9hZGNhc3QgcHJvdG9jb2wuXCJdLFwiMjA1ODYzODEwM1wiOltcIlNvbWUgZWFybHkgc3lzdGVtcyBwcm9wb3NlIGEgZGlzdHJpYnV0ZWQgbG9jayBzZXJ2aWNlIGZvciB0cmFuc2FjdGlvbmFsIGFwcGxpY2F0aW9ucyBbMTNdLCBhbmQgZm9yIHNoYXJpbmcgaW5mb3JtYXRpb24gaW4gY2x1c3RlcnMgb2YgY29tcHV0ZXJzIFsxOV0uXCJdLFwiMjA2NzI5MzM4NVwiOltcIkhvcnVzIFszMF0gYW5kIEVuc2VtYmxlIFszMV0gYXJlIHN5c3RlbXMgdGhhdCBldm9sdmVkIGZyb20gSVNJUy5cIl0sXCIyMDc1ODU0NDI1XCI6W1wiT25lIGltcG9ydGFudCB0ZWNobmlxdWUgZm9yIGJ1aWxkaW5nIGZhdWx0LXRvbGVyYW50IHNlcnZpY2VzIGlzIHN0YXRlLW1hY2hpbmUgcmVwbGljYXRpb24gWzI2XSwgYW5kIFBheG9zIFsyMF1cIl0sXCIyMDg1NDA3NjU1XCI6W1wiSW4gZmFjdCwgd2UgY2FuIGltcGxlbWVudCBjb25zZW5zdXMgZm9yIGFueSBudW1iZXIgb2YgcHJvY2Vzc2VzIHdpdGggb3VyIEFQSSwgYW5kIGFjY29yZGluZyB0byB0aGUgaGllcmFyY2h5IG9mIEhlcmxpaHksIFpvb0tlZXBlciBpbXBsZW1lbnRzIGEgdW5pdmVyc2FsIG9iamVjdCBbMTRdLlwiXSxcIjIxMDE5MzkwMzZcIjpbXCJmcm9tIHRoZSBvbmUgb3JpZ2luYWxseSBwcm9wb3NlZCBieSBIZXJsaWh5IFsxNV0sIGFuZCB3ZSBjYWxsIGl0IEEtbGluZWFyaXphYmlsaXR5IChhc3luY2hyb25vdXMgbGluZWFyaXphYmlsaXR5KS5cIl0sXCIyMTA4MDI2MDg5XCI6W1wiU2luZm9uaWEgWzJdIGludHJvZHVjZXMgbWluaS10cmFuc2FjdGlvbnMsIGEgbmV3IHBhcmFkaWdtIGZvciBidWlsZGluZyBzY2FsYWJsZSBkaXN0cmlidXRlZCBzeXN0ZW1zLlwiXSxcIjIxMTE1ODY5NjJcIjpbXCJbMTJdLlwiXSxcIjIxMTQ1NzkwMjJcIjpbXCJUaGVyZSBoYXZlIGJlZW4gcHJvcG9zYWxzIG9mIHByb3RvY29scyBmb3IgcHJhY3RpY2FsIGltcGxlbWVudGF0aW9ucyBvZiBCeXphbnRpbmUtdG9sZXJhbnQgcmVwbGljYXRlZCBzdGF0ZW1hY2hpbmVzIFs3LCAxMCwgMTgsIDEsIDI4XS5cIl0sXCIyMTE2ODIwNTQ5XCI6W1wiVGhpcyBwcmltaXRpdmUgaXMgc2ltaWxhciBpbiBpZGVhIHRvIHRoZSBmbHVzaCBwcmltaXRpdmUgb2YgSVNJUyBbNV0uXCIsXCJPbmUgZWFybHkgc3lzdGVtIGlzIElTSVMgWzVdLlwiXSxcIjIxMTkzMzk0NTRcIjpbXCJPdGhlciBzZXJ2aWNlcyBoYXZlIGJlZW4gZGV2ZWxvcGVkIHNwZWNpZmljYWxseSBmb3IgbGVhZGVyIGVsZWN0aW9uIFsyNV0gYW5kIGNvbmZpZ3VyYXRpb24gWzI3XS5cIl0sXCIyMTI4MzUyMDYyXCI6W1wiY3VzcyBhbiBhcHByb2FjaCB0byBtYWtlIFpvb0tlZXBlciBmdWxseSBCeXphbnRpbmUgZmF1bHQtdG9sZXJhbnQgd2l0aG91dCBtb2RpZnlpbmcgdGhlIGN1cnJlbnQgc2VydmVyIGNvZGUgYmFzZSBbOV0uXCJdLFwiMjEyOTQ2NzE1MlwiOltcIlRoZXJlIGhhdmUgYmVlbiBwcm9wb3NhbHMgb2YgcHJvdG9jb2xzIGZvciBwcmFjdGljYWwgaW1wbGVtZW50YXRpb25zIG9mIEJ5emFudGluZS10b2xlcmFudCByZXBsaWNhdGVkIHN0YXRlbWFjaGluZXMgWzcsIDEwLCAxOCwgMSwgMjhdLlwiXSxcIjIxMzkzNTkyMTdcIjpbXCJUaGVyZSBoYXZlIGJlZW4gcHJvcG9zYWxzIG9mIHByb3RvY29scyBmb3IgcHJhY3RpY2FsIGltcGxlbWVudGF0aW9ucyBvZiBCeXphbnRpbmUtdG9sZXJhbnQgcmVwbGljYXRlZCBzdGF0ZW1hY2hpbmVzIFs3LCAxMCwgMTgsIDEsIDI4XS5cIl0sXCIyMTQzMTQ5NTM2XCI6W1wiSW4gZmFjdCwgYXMgQ2h1YmJ5IFs4XSwgd2Uga2VlcCBhIHJlcGxheSBsb2cgKGEgd3JpdGUtYWhlYWRcIl0sXCIyMTQ3NTI0NTk4XCI6W1wiVGhlcmUgaGF2ZSBiZWVuIHByb3Bvc2FscyBvZiBwcm90b2NvbHMgZm9yIHByYWN0aWNhbCBpbXBsZW1lbnRhdGlvbnMgb2YgQnl6YW50aW5lLXRvbGVyYW50IHJlcGxpY2F0ZWQgc3RhdGVtYWNoaW5lcyBbNywgMTAsIDE4LCAxLCAyOF0uXCJdLFwiMjE1MjQ2NTE3M1wiOltcIk9uZSBpbXBvcnRhbnQgdGVjaG5pcXVlIGZvciBidWlsZGluZyBmYXVsdC10b2xlcmFudCBzZXJ2aWNlcyBpcyBzdGF0ZS1tYWNoaW5lIHJlcGxpY2F0aW9uIFsyNl0sIGFuZCBQYXhvcyBbMjBdXCJdLFwiMjE2MTAzODc3M1wiOltcIkRlcFNwYWNlIFs0XSB1c2VzIGEgdHVwbGUgc3BhY2UgdG8gcHJvdmlkZSBhIEJ5emFudGluZSBmYXVsdC10b2xlcmFudCBzZXJ2aWNlLlwiXSxcIjI3NDg2MDQwMTVcIjpbXCJUbyBndWFyYW50ZWUgdGhhdCB1cGRhdGUgb3BlcmF0aW9ucyBzYXRpc2Z5IGxpbmVhcml6YWJpbGl0eSwgd2UgaW1wbGVtZW50IGEgbGVhZGVyLWJhc2VkIGF0b21pYyBicm9hZGNhc3QgcHJvdG9jb2wgWzIzXSwgY2FsbGVkIFphYiBbMjRdLlwiXX0sXCJQUlwiOlsxOTkyNDc5MjEwLDIwNzU4NTQ0MjUsMjE1MzcwNDYyNSwyMTczMjEzMDYwLDI2MjQzMDQwMzUsMjA4Nzk0NjcwMCwyMTUwMDEzNTU5LDIxMTk1NjU3NDIsMjExOTczODE3MSwyMTgyNjg4MTg2LDIxNTI0NjUxNzMsMTk4NTIyOTE2OCwyMTMwOTIzMTExLDIwMTM0MDk0ODUsMjEwMTkzOTAzNiwyMTQzMTQ5NTM2LDIxNDcxMTg0MDYsMTk3MzUwMTI0MiwyNzk4OTE1NzAyLDIxMzE3MjY3MTQsMTk5MjQ3OTIxMCwyMDc1ODU0NDI1LDIxNTM3MDQ2MjUsMjE3MzIxMzA2MCwyNjI0MzA0MDM1LDIwODc5NDY3MDAsMjE1MDAxMzU1OSwyMTE5NTY1NzQyLDIxMTk3MzgxNzEsMjE4MjY4ODE4NiwyMTUyNDY1MTczLDE5ODUyMjkxNjgsMjEzMDkyMzExMSwyMDEzNDA5NDg1LDIxMDE5MzkwMzYsMjE0MzE0OTUzNiwyMTQ3MTE4NDA2LDE5NzM1MDEyNDIsMjc5ODkxNTcwMiwyMTMxNzI2NzE0XSxcIkFORlwiOlt7XCJGTlwiOlwiUGF0cmlja1wiLFwiTE5cIjpcIkh1bnRcIixcIlNcIjoxfSx7XCJGTlwiOlwiTWFoYWRldlwiLFwiTE5cIjpcIktvbmFyXCIsXCJTXCI6Mn0se1wiRk5cIjpcIkZsYXZpbyBQYWl2YVwiLFwiTE5cIjpcIkp1bnF1ZWlyYVwiLFwiU1wiOjN9LHtcIkZOXCI6XCJCZW5qYW1pblwiLFwiTE5cIjpcIlJlZWRcIixcIlNcIjo0fV0sXCJCVlwiOlwiVVNFTklYQVRDJzEwIFByb2NlZWRpbmdzIG9mIHRoZSAyMDEwIFVTRU5JWCBjb25mZXJlbmNlIG9uIFVTRU5JWCBhbm51YWwgdGVjaG5pY2FsIGNvbmZlcmVuY2VcIixcIkJUXCI6XCJwXCIsXCJQQlwiOlwiVVNFTklYIEFzc29jaWF0aW9uXCJ9In0seyJsb2dwcm9iIjotMTYuNTUzLCJrZXNFbnRpdHlJZCI6MTkxOTc3NiwiSWQiOjIxOTY1NTUwNzAsIlRpIjoiZ3VpZGVkIGludGVybmV0IGJhc2VkIHJ1bWluYXRpb24gZm9jdXNlZCBjb2duaXRpdmUgYmVoYXZpb3VyYWwgdGhlcmFweSBpIHJmY2J0IHZlcnN1cyBhIG5vIGludGVydmVudGlvbiBjb250cm9sIHRvIHByZXZlbnQgZGVwcmVzc2lvbiBpbiBoaWdoIHJ1bWluYXRpbmcgeW91bmcgYWR1bHRzIGFsb25nIHdpdGggYW4gYWRqdW5jdCBhc3Nlc3NtZW50IG9mIHRoZSBmZWFzaWJpbGl0eSBvZiB1bmd1aWRlZCBpIHJmY2J0IGluIHRoZSByZWR1Y2luZyBzdHJlc3MgYW5kIHByZXZlbnRpbmcgZGVwcmVzc2lvbiB0cmlhbCByZXNwb25kIHN0dWR5IHByb3RvY29sIGZvciBhIHBoYXNlIGlpaSByYW5kb21pc2VkIGNvbnRyb2xsZWQgdHJpYWwiLCJZIjoyMDE2LCJEIjoiMjAxNi0xMi0wMSIsIlJJZCI6WzIxMDg2OTY3ODMsMjExODgyNjg3NCwyMTMyMzIyMzQwLDE0ODQ4NjQwMjYsMjA0MzcwNTYwNywyMTY5NDM0MTUyLDIxMzgyOTAxNjksMjA0ODUzMzc5MiwyMTE4OTQwNjY2LDIwOTA1NzgyNjAsMjE0MDUyNjc3OSwyMTUwMjk2OTY1LDIxMDU1Njg1NDcsMjAwOTczNTE3NSwyMDAxODY2NDU0LDIxNTAwODg4OTAsMjE1NjQyNjQxOCwyMDUxMDM3OTgyLDIxMDg0NDM4ODIsMTk2ODkyMzMxOCwyMTUyMTc0MTAxLDE5MzIwMjgzNjUsMjU1MDkyMzI4NiwyMTIwODA2OTM1LDIwNDM4NzIxNjAsMjEyOTIwNTQxMywyMDQ1NzEyNzY0LDE5NjgwNTU3MzUsMTc2NDc2OTI1MSwxOTcxMDczODQ3LDIwMzMxNjgxNDAsMjAzNzI5MTU4MCwyMDIyNzgzNDUwLDIwMjU5MDc2MjQsMjE0NjMyMjI2NCwxNTAwMDc4MjU0LDIwMzMzNTE0NDcsMjA1Mzc4MTg2NiwyMTMzNTA1ODUyLDIxMzk2MDM4NzgsMTk5NDA3NDI3MiwyMDc1MzE1NTEyLDIwNDY5NjQzODEsMjEyMzc3NDc0NCwxOTk4MzMyMzc4LDIxNTM5MTU4OTIsMjE1MTUwNDg5MiwxOTgzNDg4MDEyLDIwMDA2MDMwMzIsMjA3MDYwNzUwNSwyMTY2MDQzODc3LDIwMzI2MzY3NzYsMjA2MDM5ODcyMiwyMDg4OTExMTM4LDE5NzE2NDM4MDYsMjA0NzIxNzMwMiwyMTEzODEwMzA3LDIxNTgyMTY2NzYsMTk5MTE3NDA1MiwyMTEyNjgxNjAyXSwiQUEiOlt7IkF1TiI6Imxvcm5hIGNvb2sifSx7IkF1TiI6ImVkd2FyZCByIHdhdGtpbnMifV0sIkYiOlt7IkZOIjoid29ycnkifSx7IkZOIjoicnVtaW5hdGlvbiJ9LHsiRk4iOiJwc3ljaG9sb2dpY2FsIGludGVydmVudGlvbiJ9LHsiRk4iOiJyYW5kb21pemVkIGNvbnRyb2xsZWQgdHJpYWwifSx7IkZOIjoieW91bmcgYWR1bHQifSx7IkZOIjoicGh5c2ljYWwgdGhlcmFweSJ9LHsiRk4iOiJtZWRpY2luZSJ9XSwiRSI6IntcIkROXCI6XCJHdWlkZWQsIGludGVybmV0LWJhc2VkLCBydW1pbmF0aW9uLWZvY3VzZWQgY29nbml0aXZlIGJlaGF2aW91cmFsIHRoZXJhcHkgKGktUkZDQlQpIHZlcnN1cyBhIG5vLWludGVydmVudGlvbiBjb250cm9sIHRvIHByZXZlbnQgZGVwcmVzc2lvbiBpbiBoaWdoLXJ1bWluYXRpbmcgeW91bmcgYWR1bHRzLCBhbG9uZyB3aXRoIGFuIGFkanVuY3QgYXNzZXNzbWVudCBvZiB0aGUgZmVhc2liaWxpdHkgb2YgdW5ndWlkZWQgaS1SRkNCVCwgaW4gdGhlIFJFZHVjaW5nIFN0cmVzcyBhbmQgUHJldmVudGluZyBEZXByZXNzaW9uIHRyaWFsIChSRVNQT05EKTogc3R1ZHkgcHJvdG9jb2wgZm9yIGEgcGhhc2UgSUlJIHJhbmRvbWlzZWQgY29udHJvbGxlZCB0cmlhbFwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjEyOCxcIkludmVydGVkSW5kZXhcIjp7XCJCYWNrZ3JvdW5kOlwiOlswXSxcIkRlcHJlc3Npb25cIjpbMV0sXCJpc1wiOlsyLDgsMzVdLFwiYVwiOlszLDExLDcwLDc3LDExNF0sXCJnbG9iYWxcIjpbNF0sXCJoZWFsdGhcIjpbNV0sXCJjaGFsbGVuZ2UuXCI6WzZdLFwiUHJldmVudGlvblwiOls3XSxcImhpZ2hsaWdodGVkXCI6WzldLFwiYXNcIjpbMTAsNDVdLFwicHJpb3JpdHlcIjpbMTJdLFwidG9cIjpbMTMsMzIsMzksNTIsODYsMTIwXSxcInJlZHVjZVwiOlsxNF0sXCJpdHNcIjpbMTVdLFwicHJldmFsZW5jZS5cIjpbMTZdLFwiQWx0aG91Z2hcIjpbMTddLFwiZWZmZWN0aXZlXCI6WzE4XSxcInByZXZlbnRpdmVcIjpbMTldLFwiaW50ZXJ2ZW50aW9uc1wiOlsyMCwzOF0sXCJleGlzdCxcIjpbMjFdLFwidGhlXCI6WzIyLDEwOCwxMjFdLFwiZWZmaWNhY3lcIjpbMjMsMzRdLFwiYW5kXCI6WzI0LDU3LDYyLDkzLDEwMCwxMDddLFwiY292ZXJhZ2VcIjpbMjVdLFwiY2FuXCI6WzI2XSxcImJlXCI6WzI3XSxcImltcHJvdmVkLlwiOlsyOF0sXCJPbmVcIjpbMjldLFwicHJvcG9zZWRcIjpbMzBdLFwibWVhbnNcIjpbMzFdLFwiaW5jcmVhc2VcIjpbMzNdLFwiYnlcIjpbMzZdLFwidXNpbmdcIjpbMzddLFwidGFyZ2V0XCI6WzQwLDU0XSxcInNwZWNpZmljXCI6WzQxXSxcInJpc2tcIjpbNDJdLFwiZmFjdG9ycyxcIjpbNDNdLFwic3VjaFwiOls0NF0sXCJydW1pbmF0aW9uLlwiOls0Nl0sXCJSdW1pbmF0aW9uLWZvY3VzZWRcIjpbNDddLFwiQ0JUXCI6WzQ4XSxcIihSRkNCVClcIjpbNDldLFwid2FzXCI6WzUwXSxcImRldmVsb3BlZFwiOls1MV0sXCJzcGVjaWZpY2FsbHlcIjpbNTNdLFwiZGVwcmVzc2l2ZVwiOls1NSw2MCwxMDUsMTExXSxcInJ1bWluYXRpb25cIjpbNTYsOTRdLFwicmVkdWNlc1wiOls1OF0sXCJhY3V0ZVwiOls1OV0sXCJzeW1wdG9tc1wiOls2MSwxMDZdLFwicmVsYXBzZVwiOls2M10sXCJmb3JcIjpbNjRdLFwicGF0aWVudHNcIjpbNjVdLFwid2l0aFwiOls2Niw5MF0sXCJyZXNpZHVhbFwiOls2N10sXCJkZXByZXNzaW9uXCI6WzY4XSxcImluXCI6WzY5LDgyXSxcInJhbmRvbWlzZWRcIjpbNzEsNzldLFwiY29udHJvbGxlZFwiOls3Ml0sXCJ0cmlhbC5cIjpbNzNdLFwiUHJlbGltaW5hcnlcIjpbNzRdLFwiZmluZGluZ3NcIjpbNzVdLFwiZnJvbVwiOls3Nl0sXCJEdXRjaFwiOls3OF0sXCJwcmV2ZW50aW9uXCI6WzgwXSxcInRyaWFsXCI6WzgxXSxcIjI1MVwiOls4M10sXCJoaWdoLXJpc2tcIjpbODRdLFwiMTUtXCI6Wzg1XSxcIjIyLXllYXItb2xkXCI6Wzg3XSxcInN1YmplY3RzXCI6Wzg4XSxcInNlbGVjdGVkXCI6Wzg5XSxcImVsZXZhdGVkXCI6WzkxXSxcIndvcnJ5XCI6WzkyXSxcImZvdW5kXCI6Wzk1XSxcInRoYXRcIjpbOTZdLFwiYm90aFwiOls5N10sXCJzdXBwb3J0ZWRcIjpbOThdLFwiaW50ZXJuZXQtUkZCQ1RcIjpbOTldLFwiZ3JvdXAtZGVsaXZlcmVkXCI6WzEwMV0sXCJSRkNCVFwiOlsxMDJdLFwiZXF1YWxseVwiOlsxMDNdLFwicmVkdWNlZFwiOlsxMDRdLFwib25zZXRcIjpbMTA5XSxcIm9mXCI6WzExMCwxMTZdLFwiY2FzZXNcIjpbMTEyXSxcIm92ZXJcIjpbMTEzXSxcInBlcmlvZFwiOlsxMTVdLFwiMVwiOlsxMTddLFwieWVhcixcIjpbMTE4XSxcInJlbGF0aXZlXCI6WzExOV0sXCJuby1pbnRlcnZlbnRpb25cIjpbMTIyXSxcImNvbnRyb2wuXCI6WzEyM10sXCIoQ29udGludWVkXCI6WzEyNF0sXCJvblwiOlsxMjVdLFwibmV4dFwiOlsxMjZdLFwicGFnZSlcIjpbMTI3XX19LFwiU1wiOlt7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcHVibWVkLzI2NzI1NDc2XCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vdHJpYWxzam91cm5hbC5iaW9tZWRjZW50cmFsLmNvbS90cmFjay9wZGYvMTAuMTE4Ni9zMTMwNjMtMDE1LTExMjgtOVwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwczovL2xpbmsuc3ByaW5nZXIuY29tL2NvbnRlbnQvcGRmLzEwLjExODYlMkZzMTMwNjMtMDE1LTExMjgtOS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly90cmlhbHNqb3VybmFsLmJpb21lZGNlbnRyYWwuY29tL2FydGljbGVzLzEwLjExODYvczEzMDYzLTAxNS0xMTI4LTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cubmNiaS5ubG0ubmloLmdvdi9wdWJtZWQvMjY3MjU0NzYvXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vbGluay5zcHJpbmdlci5jb20vYXJ0aWNsZS8xMC4xMTg2JTJGczEzMDYzLTAxNS0xMTI4LTlcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9vcmUuZXhldGVyLmFjLnVrL3JlcG9zaXRvcnkvaGFuZGxlLzEwODcxLzE5MTEwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9ldXJvcGVwbWMub3JnL2FydGljbGVzL1BNQzQ2OTg4MjNcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL3BhcGVyaXR5Lm9yZy9wLzc1MDkyMTgwL2d1aWRlZC1pbnRlcm5ldC1iYXNlZC1ydW1pbmF0aW9uLWZvY3VzZWQtY29nbml0aXZlLWJlaGF2aW91cmFsLXRoZXJhcHktaS1yZmNidC12ZXJzdXMtYVwifV0sXCJWRk5cIjpcIlRyaWFsc1wiLFwiVlwiOjE3LFwiSVwiOjEsXCJGUFwiOjEsXCJMUFwiOjEsXCJET0lcIjpcIjEwLjExODYvczEzMDYzLTAxNS0xMTI4LTlcIixcIkNDXCI6e1wiMTQ4NDg2NDAyNlwiOltcIkRhdGEgY2xlYW5pbmcgd2lsbCBmb2xsb3cgdGhlIHByb3RvY29sIHNldCBvdXQgYnkgVGFiYWNobmljayBhbmQgRmlkZWxsIFs1OV0uXCJdLFwiMTUwMDA3ODI1NFwiOltcImRlcHJlc3Npb24gWzE24oCTMTldOyBhbmQgYykgbWVkaWF0ZWQgdGhlIGVmZmVjdHMgb2Ygb3RoZXIgcmlzayBmYWN0b3JzIG9uIHRoZSBvbnNldCBvZiBkZXByZXNzaW9uIFsyMF0uXCJdLFwiMTc2NDc2OTI1MVwiOltcImNvbnNpc3RzIG9mIGJyaWVmIHNjcmVlbmluZyBxdWVzdGlvbnMgb24gYWxjb2hvbCBhbmQgZHJ1ZyB1c2U7IHN5bXB0b21zIG9mIGJpcG9sYXIgZGlzb3JkZXIgYW5kIHBzeWNob3NpcyAoUHN5Y2hvc2lzIFNjcmVlbmluZyBRdWVzdGlvbm5haXJlLCBQU1EgWzUwXSk7IGFzc2Vzcy1cIl0sXCIxOTMyMDI4MzY1XCI6W1wiTWV0YS1hbmFseXNlcyBbM+KAkzVdIGhhdmUgZm91bmQgdGhhdCB1bml2ZXJzYWwgaW50ZXJ2ZW50aW9ucyAoYWltZWQgYXQgZW50aXJlIHBvcHVsYXRpb25zLCByZWdhcmRsZXNzIG9mIHJpc2sgZmFjdG9ycykgaGFkIG9ubHkgc21hbGwtdG8taW5zaWduaWZpY2FudCBlZmZlY3Qgc2l6ZXMgcG9zdC1pbnRlcnZlbnRpb24gYW5kIGxvbmdlci10ZXJtIGVmZmVjdHMgd2VyZSBtaXhlZC5cIixcIkdyZWF0ZXIgZWZmZWN0IHNpemVzIHdlcmUgZm91bmQgZm9yIHRhcmdldGVkIGludGVydmVudGlvbnMgKHNlbGVjdGl2ZTogYWltZWQgYXQgYSBzdWJncm91cCBwcmVzZW50aW5nIHdpdGgga25vd24gcmlzayBmYWN0b3JzOyBpbmRpY2F0ZWQ6IGFpbWVkIGF0IGluZGl2aWR1YWxzIHdpdGggc3ViY2xpbmljYWwgc3ltcHRvbXMpLCBhbmQgdGhlc2UgZWZmZWN0cyB3ZXJlIHN1c3RhaW5lZCBmb3IgbG9uZ2VyIHRoYW4gdW5pdmVyc2FsIGludGVydmVudGlvbnMgWzVdLlwiLFwiQ3JpdGlxdWVzIG9mIHByZXZlbnRpb24gcmVzZWFyY2ggdHJpYWxzIGluY2x1ZGUgYSBmb2N1cyBvbiB0cmVhdG1lbnQgZWZmZWN0cyAoY2hhbmdlIGluIHN5bXB0b21zIHJlbGF0aXZlIHRvIGNvbnRyb2xzIFszXSkgcmF0aGVyIHRoYW4gb24gYSByZWR1Y3Rpb24gaW4gaW5jaWRlbmNlIHJhdGVzIFs2XTsgaW5zdWZmaWNpZW50IHN0YXRpc3RpY2FsIHBvd2VyIGR1ZSB0byBsb3cgYmFzZS1yYXRlcyAocGFydGljdWxhcmx5IGluIHVuaXZlcnNhbCBzYW1wbGVzKTsgYW5kIHNob3J0IGZvbGxvdy11cCBwZXJpb2RzLCB3aGljaCBpbnRlcmZlcmUgd2l0aCB0aGUgZWx1Y2lkYXRpb24gb2YgbG9uZ2VyLXRlcm0gZWZmZWN0cyBbNV0uXCJdLFwiMTk2ODkyMzMxOFwiOltcIlsxMuKAkzE1XTsgYikgb25zZXQgYW5kIGR1cmF0aW9uIG9mIGVwaXNvZGVzIG9mIG1ham9yXCIsXCJQYXJ0aWNpcGFudHMgd2lsbCBiZSB5b3VuZyBhZHVsdHMgcmVzaWRlbnQgaW4gdGhlIFVLIGFnZWQgMTggdG8gMjQgeWVhcnMgYW5kIHdpdGggZWxldmF0ZWQgUk5ULCBkZWZpbmVkIGFzIHNjb3JpbmcgYWJvdmUgdGhlIDc1dGggcGVyY2VudGlsZSBvbiBhdCBsZWFzdCBvbmUgbWVhc3VyZSBvZiB3b3JyeS8gcnVtaW5hdGlvbiAo4omlNTAgb24gdGhlIFBTV1EgWzQwXSBhbmQvb3Ig4omlIDQwIG9uIHRoZSBSUlMgWzE1XSkuXCJdLFwiMTk3MTA3Mzg0N1wiOltcInByb3ZpZGUgZXZpZGVuY2UgdGhhdCBydW1pbmF0aW9uIGNhdXNhbGx5IGluZmx1ZW5jZXMgbmVnYXRpdmUgbW9vZCBhbmQgYSByYW5nZSBvZiBjb2duaXRpdmUgcHJvY2Vzc2VzIFsxMV0sIGluY2x1ZGluZyBpbmNyZWFzZWQgbmVnYXRpdmUgdGhpbmtpbmcgWzIxXSwgaW1wYWlyZWQgY29uY2VudHJhdGlvbiBbMjJdIGFuZCBpbXBhaXJlZCBwcm9ibGVtLXNvbHZpbmcgWzIzXS5cIl0sXCIxOTcxNjQzODA2XCI6W1wiTW9yZW92ZXIsIEhhbmtpbiBbMjddIGRlbW9uc3RyYXRlZCB0aGF0IHJ1bWluYXRpb24gaXMgYSBzcGVjaWZpYyByaXNrIGZhY3RvciBmb3IgZGVwcmVzc2lvbiBpbiBhZG9sZXNjZW5jZSwgd2l0aCBydW1pbmF0aW9uIHByb3NwZWN0aXZlbHkgcHJlZGljdGluZyBmbHVjdHVhdGlvbnMgaW4gZGVwcmVzc2l2ZSBzeW1wdG9tcyBhbmQgaW50ZXJuYWxpc2luZyBwcm9ibGVtcywgYnV0IG5vdCBhbnhpb3VzIGFyb3VzYWwgb3IgZXh0ZXJuYWxpc2luZyBwcm9ibGVtcy5cIixcIkRpZmZlcmVuY2VzIGluIHJ1bWluYXRpb24gbGV2ZWxzIGNhbiBwYXJ0aWFsbHkgZXhwbGFpbiB0aGlzIGdlbmRlciBiaWFzLCB3aXRoIDI3ICUgb2YgdGhlIGFzc29jaWF0aW9uIGJldHdlZW4gZ2VuZGVyIGFuZCBkZXByZXNzaW9uIGV4cGxhaW5lZCBieSBydW1pbmF0aW9uIFsyN10uXCJdLFwiMTk4MzQ4ODAxMlwiOltcIlsxMuKAkzE1XTsgYikgb25zZXQgYW5kIGR1cmF0aW9uIG9mIGVwaXNvZGVzIG9mIG1ham9yXCJdLFwiMTk5MTE3NDA1MlwiOltcIlRhcmdldGluZyBzdWNoIHByb2Nlc3NlcyBoYXMgdGhlIHBvdGVudGlhbCB0byBpbXBhY3Qgc2V2ZXJhbCBkaXNvcmRlcnMgd2l0aCBhIHNpbmdsZSBpbnRlcnZlbnRpb24gWzEwXS5cIl0sXCIxOTk0MDc0MjcyXCI6W1wiSW4gZXhwZXJpbWVudGFsIHN0dWRpZXMsIHJlbGF0aXZlIHRvIHRoZSBhYnN0cmFjdCBtb2RlLCB0aGUgY29uY3JldGUgbW9kZSBpbXByb3ZlZCBwcm9ibGVtLXNvbHZpbmcgWzUzLCA1NF0gYW5kIHJlZHVjZWQgZW1vdGlvbmFsIHJlYWN0aXZpdHkgaW4gcmVzcG9uc2UgdG8gZmFpbHVyZSBbNTVdLlwiXSxcIjE5OTgzMzIzNzhcIjpbXCJBbHRlcm5hdGl2ZSBtb2RlcyBvZiBkZWxpdmVyeSwgc3VjaCBhcyBpbnRlcm5ldGJhc2VkIHRyZWF0bWVudHMsIGhhdmUgcG90ZW50aWFsIGFkdmFudGFnZXMgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmc6IHJlYWNoaW5nIGxhcmdlIG51bWJlcnMgYXQgYSByZWxhdGl2ZWx5IGxvdyBjb3N0OyBncmVhdGVyIGVhc2Ugb2YgYWNjZXNzIGFuZCBjb252ZW5pZW5jZSBmb3IgdGhlIHVzZXI7IGF2YWlsYWJsZSBhdCBhbnkgdGltZSBhbmQgcGxhY2U7IGFuZCBncmVhdGVyIGF1dG9ub215IGZvciB0aGUgY2xpZW50LCBhbm9ueW1pdHkgYW5kIGdyZWF0ZXIgdGltZSB0byByZWZsZWN0IFs2LCAzNCwgMzVdLlwiLFwiQW5kZXJzc29uIFszNF0gdGhlcmVmb3JlIGFyZ3VlZCBmb3Igc29tZSBmb3JtIG9mIGd1aWRhbmNlIGluIG9yZGVyIHRvIGFjaGlldmUgc2ltaWxhciBlZmZlY3RpdmVuZXNzIHRvIGZhY2UtdG8tZmFjZSB0aGVyYXBpZXMuXCJdLFwiMjAwMDYwMzAzMlwiOltcIlRoaXMgcmVsYXRpb25zaGlwIGJldHdlZW4gUk5UIGFuZCBlbW90aW9uYWwgZGlzb3JkZXJzIGlzIGFsc28gZm91bmQgaW4gY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIFsxMiwgMTgsIDI04oCTMjZdLlwiXSxcIjIwMDE4NjY0NTRcIjpbXCJQYXJ0aWNpcGFudHMgd2lsbCBiZSB5b3VuZyBhZHVsdHMgcmVzaWRlbnQgaW4gdGhlIFVLIGFnZWQgMTggdG8gMjQgeWVhcnMgYW5kIHdpdGggZWxldmF0ZWQgUk5ULCBkZWZpbmVkIGFzIHNjb3JpbmcgYWJvdmUgdGhlIDc1dGggcGVyY2VudGlsZSBvbiBhdCBsZWFzdCBvbmUgbWVhc3VyZSBvZiB3b3JyeS8gcnVtaW5hdGlvbiAo4omlNTAgb24gdGhlIFBTV1EgWzQwXSBhbmQvb3Ig4omlIDQwIG9uIHRoZSBSUlMgWzE1XSkuXCJdLFwiMjAwOTczNTE3NVwiOltcImRlcHJlc3Npb24gWzE24oCTMTldOyBhbmQgYykgbWVkaWF0ZWQgdGhlIGVmZmVjdHMgb2Ygb3RoZXIgcmlzayBmYWN0b3JzIG9uIHRoZSBvbnNldCBvZiBkZXByZXNzaW9uIFsyMF0uXCJdLFwiMjAyNTkwNzYyNFwiOltcImRlcHJlc3Npb24gWzE24oCTMTldOyBhbmQgYykgbWVkaWF0ZWQgdGhlIGVmZmVjdHMgb2Ygb3RoZXIgcmlzayBmYWN0b3JzIG9uIHRoZSBvbnNldCBvZiBkZXByZXNzaW9uIFsyMF0uXCJdLFwiMjAzMzE2ODE0MFwiOltcIkluIGV4cGVyaW1lbnRhbCBzdHVkaWVzLCByZWxhdGl2ZSB0byB0aGUgYWJzdHJhY3QgbW9kZSwgdGhlIGNvbmNyZXRlIG1vZGUgaW1wcm92ZWQgcHJvYmxlbS1zb2x2aW5nIFs1MywgNTRdIGFuZCByZWR1Y2VkIGVtb3Rpb25hbCByZWFjdGl2aXR5IGluIHJlc3BvbnNlIHRvIGZhaWx1cmUgWzU1XS5cIl0sXCIyMDMzMzUxNDQ3XCI6W1wiZGVwcmVzc2lvbiBbMTbigJMxOV07IGFuZCBjKSBtZWRpYXRlZCB0aGUgZWZmZWN0cyBvZiBvdGhlciByaXNrIGZhY3RvcnMgb24gdGhlIG9uc2V0IG9mIGRlcHJlc3Npb24gWzIwXS5cIl0sXCIyMDM3MjkxNTgwXCI6W1wiQWx0ZXJuYXRpdmUgbW9kZXMgb2YgZGVsaXZlcnksIHN1Y2ggYXMgaW50ZXJuZXRiYXNlZCB0cmVhdG1lbnRzLCBoYXZlIHBvdGVudGlhbCBhZHZhbnRhZ2VzIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nOiByZWFjaGluZyBsYXJnZSBudW1iZXJzIGF0IGEgcmVsYXRpdmVseSBsb3cgY29zdDsgZ3JlYXRlciBlYXNlIG9mIGFjY2VzcyBhbmQgY29udmVuaWVuY2UgZm9yIHRoZSB1c2VyOyBhdmFpbGFibGUgYXQgYW55IHRpbWUgYW5kIHBsYWNlOyBhbmQgZ3JlYXRlciBhdXRvbm9teSBmb3IgdGhlIGNsaWVudCwgYW5vbnltaXR5IGFuZCBncmVhdGVyIHRpbWUgdG8gcmVmbGVjdCBbNiwgMzQsIDM1XS5cIixcIkFjY2VwdGFiaWxpdHkgcmF0aW5ncyBmb3IgaW50ZXJuZXQtYmFzZWQgdGhlcmFwaWVzIGFyZSBnZW5lcmFsbHkgaGlnaCBbMzVdLlwiXSxcIjIwNDM3MDU2MDdcIjpbXCJQYXJ0aWNpcGFudHMgd2VyZSBhc3Nlc3NlZCBmb3Igc3ltcHRvbXMgYW5kIOKAmGNhc2VuZXNz4oCZIG9mIGRlcHJlc3Npb24gYW5kIGFueGlldHkgb24gc3RhbmRhcmRpc2VkIHNlbGYtcmVwb3J0IG1lYXN1cmVzIChQYXRpZW50IEhlYWx0aCBRdWVzdGlvbm5haXJlLCBQSFEtOTsgWzQxXTsgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciBTY3JlZW5lciwgR0FELTc7IFs0Ml0pIGF0IGJhc2VsaW5lLCBwb3N0LWludGVydmVudGlvbiwgMyBtb250aCBhbmQgMTIgbW9udGggZm9sbG93LXVwcy5cIl0sXCIyMDQzODcyMTYwXCI6W1wiTWV0YS1hbmFseXNlcyBbM+KAkzVdIGhhdmUgZm91bmQgdGhhdCB1bml2ZXJzYWwgaW50ZXJ2ZW50aW9ucyAoYWltZWQgYXQgZW50aXJlIHBvcHVsYXRpb25zLCByZWdhcmRsZXNzIG9mIHJpc2sgZmFjdG9ycykgaGFkIG9ubHkgc21hbGwtdG8taW5zaWduaWZpY2FudCBlZmZlY3Qgc2l6ZXMgcG9zdC1pbnRlcnZlbnRpb24gYW5kIGxvbmdlci10ZXJtIGVmZmVjdHMgd2VyZSBtaXhlZC5cIl0sXCIyMDQ1NzEyNzY0XCI6W1wiZGVwcmVzc2lvbiBbMTbigJMxOV07IGFuZCBjKSBtZWRpYXRlZCB0aGUgZWZmZWN0cyBvZiBvdGhlciByaXNrIGZhY3RvcnMgb24gdGhlIG9uc2V0IG9mIGRlcHJlc3Npb24gWzIwXS5cIixcIm90aGVyIGRpc29yZGVycywgaW5jbHVkaW5nIGFueGlldHksIGVhdGluZyBkaXNvcmRlcnMgYW5kIHN1YnN0YW5jZSBhYnVzZSBbMThdLlwiLFwiVGhpcyByZWxhdGlvbnNoaXAgYmV0d2VlbiBSTlQgYW5kIGVtb3Rpb25hbCBkaXNvcmRlcnMgaXMgYWxzbyBmb3VuZCBpbiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgWzEyLCAxOCwgMjTigJMyNl0uXCJdLFwiMjA0Njk2NDM4MVwiOltcIkluIGV4cGVyaW1lbnRhbCBzdHVkaWVzLCByZWxhdGl2ZSB0byB0aGUgYWJzdHJhY3QgbW9kZSwgdGhlIGNvbmNyZXRlIG1vZGUgaW1wcm92ZWQgcHJvYmxlbS1zb2x2aW5nIFs1MywgNTRdIGFuZCByZWR1Y2VkIGVtb3Rpb25hbCByZWFjdGl2aXR5IGluIHJlc3BvbnNlIHRvIGZhaWx1cmUgWzU1XS5cIl0sXCIyMDQ3MjE3MzAyXCI6W1wiVGhpcyByZWxhdGlvbnNoaXAgYmV0d2VlbiBSTlQgYW5kIGVtb3Rpb25hbCBkaXNvcmRlcnMgaXMgYWxzbyBmb3VuZCBpbiBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgWzEyLCAxOCwgMjTigJMyNl0uXCJdLFwiMjA1MTAzNzk4MlwiOltcIkVsaWdpYmxlIHBhcnRpY2lwYW50cyBhcmUgdGhlbiBhc2tlZCB0byBjb21wbGV0ZSBiYXNlbGluZSBtZWFzdXJlcywgYXNzZXNzaW5nIGVwaXNvZGljIHN0cmVzcyAodGhlIEVwaXNvZGljIExpZmUgRXZlbnQgSW50ZXJ2aWV3LCBwYXJ0IG9mIHRoZSBVQ0xBIExpZmUgU3RyZXNzIEludGVydmlldyBbNTFdKTsgbGV2ZWxzIG9mIHdvcnJ5IGFuZCBydW1pbmF0aW9uIChQU1dRIGFuZCBSUlMpOyBzeW1wdG9tIHNldmVyaXR5IG9mIGRlcHJlc3Npb24gYW5kIGdlbmVyYWxpemVkIGFueGlldHkgKFBIUS05IGFuZCBHQUQtNyk7IG5ldXJvdGljaXNtIChFeXNlbmNrIFBlcnNvbmFsaXR5IFF1ZXN0aW9ubmFpcmUtUmV2aXNlZCBOZXVyb3RpY2lzbSBzdWItc2NhbGUgKEVQUS1SOyBbNTJdKSBhbmQgaGlzdG9yeSAoZmFtaWx5IGhpc3Rvcnkgb2YgZGVwcmVzc2lvbiwgZXhwZXJpZW5jZSBvZiBhYnVzZSBpbiBjaGlsZGhvb2QpLlwiXSxcIjIwNTM3ODE4NjZcIjpbXCJbMjnigJMzM10pLlwiLFwiUkZDQlQgc2Vla3MgdG8gY2hhbmdlIHRoZSBwcm9jZXNzIG9mIHRoaW5raW5nIGFzIG9wcG9zZWQgdG8gdGhlIGNvbnRlbnQgb2YgdGhvdWdodHMgYXMgaW4gc3RhbmRhcmQgQ0JUIFszMF0uXCJdLFwiMjA2MDM5ODcyMlwiOltcIlsxMuKAkzE1XTsgYikgb25zZXQgYW5kIGR1cmF0aW9uIG9mIGVwaXNvZGVzIG9mIG1ham9yXCJdLFwiMjA3MDYwNzUwNVwiOltcIlRoaXMgcmVsYXRpb25zaGlwIGJldHdlZW4gUk5UIGFuZCBlbW90aW9uYWwgZGlzb3JkZXJzIGlzIGFsc28gZm91bmQgaW4gY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIFsxMiwgMTgsIDI04oCTMjZdLlwiXSxcIjIwNzUzMTU1MTJcIjpbXCJbMjnigJMzM10pLlwiLFwiVW5kZXJwaW5uaW5nIFJGQ0JUIGlzIHRoZSBpZGVhIHRoYXQgc2hpZnRpbmcgaW5kaXZpZHVhbHMgaW50byB0aGUgY29uY3JldGUgbW9kZSB3aWxsIHJlZHVjZSB1bmNvbnN0cnVjdGl2ZSBydW1pbmF0aW9uOyBjb25zaXN0ZW50IHdpdGggdGhpcywgcmVwZWF0ZWQgdHJhaW5pbmcgb2YgZHlzcGhvcmljIGFuZCBkZXByZXNzZWQgcGFydGljaXBhbnRzIHRvIGJlY29tZSBtb3JlIGNvbmNyZXRlIHJlZHVjZXMgZGVwcmVzc2lvbiBhbmQgcnVtaW5hdGlvbiBpbiBib3RoIGEgcHJvb2Ytb2YtcHJpbmNpcGxlIHN0dWR5IGFuZCBhIHJhbmRvbWlzZWQgY29udHJvbGxlZCB0cmlhbCBbMzEsIDMzXS5cIl0sXCIyMDg4OTExMTM4XCI6W1wiWzI54oCTMzNdKS5cIl0sXCIyMDkwNTc4MjYwXCI6W1wiRW1lcmdlbnQgZXZpZGVuY2UgZXhpc3RzIHRoYXQgaW50ZXJuZXQtYmFzZWQgQ0JUIGlzIGFuIGVmZmVjdGl2ZSwgZmVhc2libGUgYW5kIGFjY2VwdGFibGUgdHJlYXRtZW50IGZvciBhY3V0ZSBkZXByZXNzaW9uIGFuZCBhbnhpZXR5IFszNiwgMzddLlwiLFwiQWx0aG91Z2ggcHVyZWx5IHNlbGYtZ3VpZGVkIGludGVybmV0IGludGVydmVudGlvbnMgZm9yIGRlcHJlc3Npb24gYXJlIGF2YWlsYWJsZSwgdGhleSBhcmUgZ2VuZXJhbGx5IGxlc3MgZWZmZWN0aXZlIGFuZCBoYXZlIGdyZWF0ZXIgZHJvcC1vdXQgdGhhbiBndWlkZWQgaW50ZXJ2ZW50aW9ucyBmb3IgZGVwcmVzc2lvbiB3aXRoIHRoZXJhcGlzdCBpbnB1dCBbMzYsIDM4LCAzOV0uXCJdLFwiMjEwNTU2ODU0N1wiOltcIkFsdGhvdWdoIHB1cmVseSBzZWxmLWd1aWRlZCBpbnRlcm5ldCBpbnRlcnZlbnRpb25zIGZvciBkZXByZXNzaW9uIGFyZSBhdmFpbGFibGUsIHRoZXkgYXJlIGdlbmVyYWxseSBsZXNzIGVmZmVjdGl2ZSBhbmQgaGF2ZSBncmVhdGVyIGRyb3Atb3V0IHRoYW4gZ3VpZGVkIGludGVydmVudGlvbnMgZm9yIGRlcHJlc3Npb24gd2l0aCB0aGVyYXBpc3QgaW5wdXQgWzM2LCAzOCwgMzldLlwiXSxcIjIxMDg2OTY3ODNcIjpbXCJTdGF0aXN0aWNhbCBhbmFseXNpcyB3aWxsIGZvbGxvdyB0aGUgQ09OU09SVCBzdGFuZGFyZHMgWzYwXS5cIl0sXCIyMTEyNjgxNjAyXCI6W1wiWzQ4XSkuXCJdLFwiMjExMzgxMDMwN1wiOltcIldoaWxlIHRoZXJlIGFyZSBzb21lIGVhcmx5IHBvc2l0aXZlIGZpbmRpbmdzIGZyb20gcHJldmVudGlvbiByZXNlYXJjaCwgaW1wcm92ZW1lbnQgaXMgcG9zc2libGUgaW4gdGVybXMgb2YgZWZmaWNhY3ksIGNvc3QtZWZmZWN0aXZlbmVzcyBhbmQgYWNjZXB0YWJpbGl0eSBbN10uXCIsXCJGaXJzdCwgaW50ZXJ2ZW50aW9ucyBzaG91bGQgYmUgdGFyZ2V0ZWQgYXQgaGlnaGVyLXJpc2sgaW5kaXZpZHVhbHMgcmF0aGVyIHRoYW4gYXQgdW5pdmVyc2FsIHBvcHVsYXRpb25zIFs3XS5cIixcIlJpc2sgZmFjdG9ycyBjYW4gYmUgdXNlZCBub3Qgb25seSB0byBpZGVudGlmeSBpbmRpdmlkdWFscyBidXQgYWxzbyBhcyBhIGRpcmVjdCB0YXJnZXQgZm9yIGludGVydmVudGlvbiBbN10uXCIsXCJSZXBldGl0aXZlIG5lZ2F0aXZlIHRob3VnaHQgKFJOVCksIGluY29ycG9yYXRpbmcgd29ycnkgYW5kIHJ1bWluYXRpb24sIGhhcyBiZWVuIHByb3Bvc2VkIGFzIGEgcG90ZW50aWFsIHRhcmdldCBmb3Igc2VsZWN0aXZlIHByZXZlbnRpb24gcHJvZ3JhbW1lcyBbN10uXCJdLFwiMjExODgyNjg3NFwiOltcIkEgZ2VuZGVyIGJpYXMgZXhpc3RzIGluIGRlcHJlc3Npb24gcmF0ZXMgKGFwcHJveGltYXRlbHkgMjoxIGZlbWFsZTogbWFsZSBbMjhdKS5cIl0sXCIyMTIwODA2OTM1XCI6W1wiQ3JpdGlxdWVzIG9mIHByZXZlbnRpb24gcmVzZWFyY2ggdHJpYWxzIGluY2x1ZGUgYSBmb2N1cyBvbiB0cmVhdG1lbnQgZWZmZWN0cyAoY2hhbmdlIGluIHN5bXB0b21zIHJlbGF0aXZlIHRvIGNvbnRyb2xzIFszXSkgcmF0aGVyIHRoYW4gb24gYSByZWR1Y3Rpb24gaW4gaW5jaWRlbmNlIHJhdGVzIFs2XTsgaW5zdWZmaWNpZW50IHN0YXRpc3RpY2FsIHBvd2VyIGR1ZSB0byBsb3cgYmFzZS1yYXRlcyAocGFydGljdWxhcmx5IGluIHVuaXZlcnNhbCBzYW1wbGVzKTsgYW5kIHNob3J0IGZvbGxvdy11cCBwZXJpb2RzLCB3aGljaCBpbnRlcmZlcmUgd2l0aCB0aGUgZWx1Y2lkYXRpb24gb2YgbG9uZ2VyLXRlcm0gZWZmZWN0cyBbNV0uXCIsXCJTdWNoIGluZGl2aWR1YWxzIGhhdmUgdGhlIG1vc3QgdG8gZ2FpbiBmcm9tIGFuIGludGVydmVudGlvbiwgYW5kIHRoZSBiYXNlIHJhdGUgb2YgbmV3IGNhc2VzIHdpbGwgYmUgaGlnaGVyIGluIGhpZ2gtcmlzayBncm91cHMsIG1lYW5pbmcgdGhhdCBzbWFsbGVyIHNhbXBsZSBzaXplcyBhcmUgbmVlZGVkIHRvIG9idGFpbiBhZGVxdWF0ZSBzdGF0aXN0aWNhbCBwb3dlciB0byBkZXRlY3QgYW4gZWZmZWN0IFs2XS5cIixcIkFsdGVybmF0aXZlIG1vZGVzIG9mIGRlbGl2ZXJ5LCBzdWNoIGFzIGludGVybmV0YmFzZWQgdHJlYXRtZW50cywgaGF2ZSBwb3RlbnRpYWwgYWR2YW50YWdlcyBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZzogcmVhY2hpbmcgbGFyZ2UgbnVtYmVycyBhdCBhIHJlbGF0aXZlbHkgbG93IGNvc3Q7IGdyZWF0ZXIgZWFzZSBvZiBhY2Nlc3MgYW5kIGNvbnZlbmllbmNlIGZvciB0aGUgdXNlcjsgYXZhaWxhYmxlIGF0IGFueSB0aW1lIGFuZCBwbGFjZTsgYW5kIGdyZWF0ZXIgYXV0b25vbXkgZm9yIHRoZSBjbGllbnQsIGFub255bWl0eSBhbmQgZ3JlYXRlciB0aW1lIHRvIHJlZmxlY3QgWzYsIDM0LCAzNV0uXCIsXCJwYXJ0aWNpcGFudHMgaXMgbm90IGNvbnNpc3RlbnQgd2l0aCBzdHJpY3QgZGVmaW5pdGlvbnMgb2YgaW5pdGlhbCBvbnNldCBwcmV2ZW50aW9uIHN0dWRpZXMsIHRoZXJlIGlzIGEgc3Ryb25nIGFyZ3VtZW50IGZvciBwcmV2ZW50aW5nIGZ1cnRoZXIgcmVsYXBzZXMgYW5kIHJlY3VycmVuY2VzLCBlc3BlY2lhbGx5IGFzIGEgbWFqb3IgcmlzayBmYWN0b3IgZm9yIGEgZGVwcmVzc2l2ZSBlcGlzb2RlIGlzIGEgaGlzdG9yeSBvZiBkZXByZXNzaXZlIGVwaXNvZGVzIFs2XS5cIl0sXCIyMTIzNzc0NzQ0XCI6W1wiWzEy4oCTMTVdOyBiKSBvbnNldCBhbmQgZHVyYXRpb24gb2YgZXBpc29kZXMgb2YgbWFqb3JcIixcIlRoaXMgcmVsYXRpb25zaGlwIGJldHdlZW4gUk5UIGFuZCBlbW90aW9uYWwgZGlzb3JkZXJzIGlzIGFsc28gZm91bmQgaW4gY2hpbGRyZW4gYW5kIGFkb2xlc2NlbnRzIFsxMiwgMTgsIDI04oCTMjZdLlwiXSxcIjIxMjkyMDU0MTNcIjpbXCJJbiBhZGRpdGlvbiwgcnVtaW5hdGlvbiBpcyBjb25jZXB0dWFsaXNlZCBhcyBhIGZvcm0gb2YgYXZvaWRhbmNlIFsxMSwgNTZdLCB3aGljaCBpcyB0YXJnZXRlZCBvbiBiZWhhdmlvdXJhbCBhY3RpdmF0aW9uIHByaW5jaXBsZXMgWzU3XSB3aXRoIGF2b2lkYW5jZVwiXSxcIjIxMzIzMjIzNDBcIjpbXCJQYXJ0aWNpcGFudHMgd2VyZSBhc3Nlc3NlZCBmb3Igc3ltcHRvbXMgYW5kIOKAmGNhc2VuZXNz4oCZIG9mIGRlcHJlc3Npb24gYW5kIGFueGlldHkgb24gc3RhbmRhcmRpc2VkIHNlbGYtcmVwb3J0IG1lYXN1cmVzIChQYXRpZW50IEhlYWx0aCBRdWVzdGlvbm5haXJlLCBQSFEtOTsgWzQxXTsgR2VuZXJhbGl6ZWQgQW54aWV0eSBEaXNvcmRlciBTY3JlZW5lciwgR0FELTc7IFs0Ml0pIGF0IGJhc2VsaW5lLCBwb3N0LWludGVydmVudGlvbiwgMyBtb250aCBhbmQgMTIgbW9udGggZm9sbG93LXVwcy5cIl0sXCIyMTMzNTA1ODUyXCI6W1wiWzI54oCTMzNdKS5cIl0sXCIyMTM4MjkwMTY5XCI6W1wiU3Vic2VxdWVudCBhbmFseXNlcyB3aWxsIHVzZSB0aGUgQ29tcGxpZXIgQXZlcmFnZSBDYXVzYWwgRWZmZWN0IChDQUNFKSBhbmFseXNpcyBbNjEsIDYyXS5cIl0sXCIyMTQwNTI2Nzc5XCI6W1wib2YgYSByYW5nZSBvZiBkaXNvcmRlcnMsIGluY2x1ZGluZyBkZXByZXNzaW9uLCBhbnhpZXR5IGFuZCBwaHlzaWNhbCBoZWFsdGggaXNzdWVzIFsxMV0uXCIsXCJwcm92aWRlIGV2aWRlbmNlIHRoYXQgcnVtaW5hdGlvbiBjYXVzYWxseSBpbmZsdWVuY2VzIG5lZ2F0aXZlIG1vb2QgYW5kIGEgcmFuZ2Ugb2YgY29nbml0aXZlIHByb2Nlc3NlcyBbMTFdLCBpbmNsdWRpbmcgaW5jcmVhc2VkIG5lZ2F0aXZlIHRoaW5raW5nIFsyMV0sIGltcGFpcmVkIGNvbmNlbnRyYXRpb24gWzIyXSBhbmQgaW1wYWlyZWQgcHJvYmxlbS1zb2x2aW5nIFsyM10uXCIsXCJSRkNCVCBpcyBkZXJpdmVkIGZyb20gdGhlb3JldGljYWwgbW9kZWxzIFsxMV0gYW5kIGV4cGVyaW1lbnRhbCBmaW5kaW5ncywgd2hpY2ggcHJvcG9zZSB0aGUgZXhpc3RlbmNlIG9mIGRpc3RpbmN0IHR5cGVzIG9mIHJlcGV0aXRpdmUgdGhvdWdodCAoUlQpIHdpdGggZGlzdGluY3QgY29uc2VxdWVuY2VzOiBjb25zdHJ1Y3RpdmUgUlQgaXMgY2hhcmFjdGVyaXplZCBieSBhIGNvbmNyZXRlLCBzcGVjaWZpYyBhbmQgYWN0aW9uLW9yaWVudGVkIG1vZGUgb2YgcHJvY2Vzc2luZywgZm9jdXNpbmcgb24gaG93IGV2ZW50cyBoYXBwZW4sIHdoZXJlYXMgdW5jb24tXCIsXCJzdHJ1Y3RpdmUgUlQgaXMgY2hhcmFjdGVyaXNlZCBieSBhbiBhYnN0cmFjdCBhbmQgZXZhbHVhdGl2ZSBwcm9jZXNzaW5nIG1vZGUsIGZvY3VzaW5nIG9uIHRoZSBtZWFuaW5nIGFuZCBpbXBsaWNhdGlvbnMgb2YgZXZlbnRzIGFuZCBkaWZmaWN1bHRpZXMgWzExXS5cIixcIkluIGFkZGl0aW9uLCBydW1pbmF0aW9uIGlzIGNvbmNlcHR1YWxpc2VkIGFzIGEgZm9ybSBvZiBhdm9pZGFuY2UgWzExLCA1Nl0sIHdoaWNoIGlzIHRhcmdldGVkIG9uIGJlaGF2aW91cmFsIGFjdGl2YXRpb24gcHJpbmNpcGxlcyBbNTddIHdpdGggYXZvaWRhbmNlXCJdLFwiMjE0NjMyMjI2NFwiOltcIlN1YnNlcXVlbnQgYW5hbHlzZXMgd2lsbCB1c2UgdGhlIENvbXBsaWVyIEF2ZXJhZ2UgQ2F1c2FsIEVmZmVjdCAoQ0FDRSkgYW5hbHlzaXMgWzYxLCA2Ml0uXCJdLFwiMjE1MDA4ODg5MFwiOltcIkFkZGl0aW9uYWxseSBkZXByZXNzaW9uIGlzIHByZXZhbGVudCBpbiB0aGlzIHBvcHVsYXRpb24gWzQ2XSBhbmQgdGhlIG51bWJlciBvZiBzdHVkZW50cyBleHBlcmllbmNpbmcgaGlnaCBsZXZlbHMgb2Ygd29ycnksIHN0cmVzcyBhbmQgc3ltcHRvbXMgb2YgZGVwcmVzc2lvbiBhbmQgYW54aWV0eSBpcyBhbHNvIGhpZ2ggWzQ3XSwgaW5kaWNhdGluZyB0aGF0IHRoZXJlIGlzIGEgc2lnbmlmaWNhbnQgZ3JvdXAgb2YgYXQtcmlzayBzdHVkZW50cyB3aG8gY291bGQgYmUgdGFyZ2V0ZWQgd2l0aCBhIHByZXZlbnRpdmUgaW50ZXJ2ZW50aW9uLlwiXSxcIjIxNTAyOTY5NjVcIjpbXCJFbWVyZ2VudCBldmlkZW5jZSBleGlzdHMgdGhhdCBpbnRlcm5ldC1iYXNlZCBDQlQgaXMgYW4gZWZmZWN0aXZlLCBmZWFzaWJsZSBhbmQgYWNjZXB0YWJsZSB0cmVhdG1lbnQgZm9yIGFjdXRlIGRlcHJlc3Npb24gYW5kIGFueGlldHkgWzM2LCAzN10uXCJdLFwiMjE1MzkxNTg5MlwiOltcInByb3ZpZGUgZXZpZGVuY2UgdGhhdCBydW1pbmF0aW9uIGNhdXNhbGx5IGluZmx1ZW5jZXMgbmVnYXRpdmUgbW9vZCBhbmQgYSByYW5nZSBvZiBjb2duaXRpdmUgcHJvY2Vzc2VzIFsxMV0sIGluY2x1ZGluZyBpbmNyZWFzZWQgbmVnYXRpdmUgdGhpbmtpbmcgWzIxXSwgaW1wYWlyZWQgY29uY2VudHJhdGlvbiBbMjJdIGFuZCBpbXBhaXJlZCBwcm9ibGVtLXNvbHZpbmcgWzIzXS5cIl0sXCIyMTU2NDI2NDE4XCI6W1wiTWV0YS1hbmFseXNlcyBbM+KAkzVdIGhhdmUgZm91bmQgdGhhdCB1bml2ZXJzYWwgaW50ZXJ2ZW50aW9ucyAoYWltZWQgYXQgZW50aXJlIHBvcHVsYXRpb25zLCByZWdhcmRsZXNzIG9mIHJpc2sgZmFjdG9ycykgaGFkIG9ubHkgc21hbGwtdG8taW5zaWduaWZpY2FudCBlZmZlY3Qgc2l6ZXMgcG9zdC1pbnRlcnZlbnRpb24gYW5kIGxvbmdlci10ZXJtIGVmZmVjdHMgd2VyZSBtaXhlZC5cIixcIkNyaXRpcXVlcyBvZiBwcmV2ZW50aW9uIHJlc2VhcmNoIHRyaWFscyBpbmNsdWRlIGEgZm9jdXMgb24gdHJlYXRtZW50IGVmZmVjdHMgKGNoYW5nZSBpbiBzeW1wdG9tcyByZWxhdGl2ZSB0byBjb250cm9scyBbM10pIHJhdGhlciB0aGFuIG9uIGEgcmVkdWN0aW9uIGluIGluY2lkZW5jZSByYXRlcyBbNl07IGluc3VmZmljaWVudCBzdGF0aXN0aWNhbCBwb3dlciBkdWUgdG8gbG93IGJhc2UtcmF0ZXMgKHBhcnRpY3VsYXJseSBpbiB1bml2ZXJzYWwgc2FtcGxlcyk7IGFuZCBzaG9ydCBmb2xsb3ctdXAgcGVyaW9kcywgd2hpY2ggaW50ZXJmZXJlIHdpdGggdGhlIGVsdWNpZGF0aW9uIG9mIGxvbmdlci10ZXJtIGVmZmVjdHMgWzVdLlwiXSxcIjIxNjYwNDM4NzdcIjpbXCJwcm92aWRlIGV2aWRlbmNlIHRoYXQgcnVtaW5hdGlvbiBjYXVzYWxseSBpbmZsdWVuY2VzIG5lZ2F0aXZlIG1vb2QgYW5kIGEgcmFuZ2Ugb2YgY29nbml0aXZlIHByb2Nlc3NlcyBbMTFdLCBpbmNsdWRpbmcgaW5jcmVhc2VkIG5lZ2F0aXZlIHRoaW5raW5nIFsyMV0sIGltcGFpcmVkIGNvbmNlbnRyYXRpb24gWzIyXSBhbmQgaW1wYWlyZWQgcHJvYmxlbS1zb2x2aW5nIFsyM10uXCJdLFwiMjU1MDkyMzI4NlwiOltcIkluIGFkZGl0aW9uLCBydW1pbmF0aW9uIGlzIGNvbmNlcHR1YWxpc2VkIGFzIGEgZm9ybSBvZiBhdm9pZGFuY2UgWzExLCA1Nl0sIHdoaWNoIGlzIHRhcmdldGVkIG9uIGJlaGF2aW91cmFsIGFjdGl2YXRpb24gcHJpbmNpcGxlcyBbNTddIHdpdGggYXZvaWRhbmNlXCJdfSxcIlBSXCI6WzIwNTUyNDU2OTAsMjA3MzY0NDE2MiwyMTM0MjM2NDI2LDI4Nzk1MDQ2NywxNDgzMzE3NDk1LDE1MjEzNTIwODYsMTUyOTc3NTE4NiwxODQyMjkwNTYyLDE5Nzk0MDk3ODcsMTk4MTc5NjEyMCwxOTg2NjQ5MDQwLDE5OTI3NDYwNDIsMjAxNDE2MjIzMiwyMDE5MTU5NDEwLDIwMTk5OTIyMjYsMjAyMjkxNDA5NiwyMDQ1ODE2NjM1LDIwNTAxNjA4MjcsMjA1NTc2OTc3MCwyMDU2NjYzNTk2LDIwNTUyNDU2OTAsMjA3MzY0NDE2MiwyMTM0MjM2NDI2LDI4Nzk1MDQ2NywxNDgzMzE3NDk1LDE1MjEzNTIwODYsMTUyOTc3NTE4NiwxODQyMjkwNTYyLDE5Nzk0MDk3ODcsMTk4MTc5NjEyMCwxOTg2NjQ5MDQwLDE5OTI3NDYwNDIsMjAxNDE2MjIzMiwyMDE5MTU5NDEwLDIwMTk5OTIyMjYsMjAyMjkxNDA5NiwyMDQ1ODE2NjM1LDIwNTAxNjA4MjcsMjA1NTc2OTc3MCwyMDU2NjYzNTk2XSxcIkFORlwiOlt7XCJGTlwiOlwiTG9ybmFcIixcIkxOXCI6XCJDb29rXCIsXCJTXCI6MX0se1wiRk5cIjpcIkVkd2FyZFwiLFwiTE5cIjpcIldhdGtpbnNcIixcIlNcIjoyfV0sXCJCVlwiOlwiVHJpYWxzXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIkJpb01lZCBDZW50cmFsXCJ9In0seyJsb2dwcm9iIjotMTYuNTU2LCJrZXNFbnRpdHlJZCI6MTkyNDgzOSwiSWQiOjI3NjkxMzMwNTUsIlRpIjoiaW50ZXJuZXQgZGlhbWV0ZXIgb2YgdGhlIHdvcmxkIHdpZGUgd2ViIiwiWSI6MTk5OSwiRCI6IjE5OTktMDktMDEiLCJBQSI6W3siQXVOIjoicmVrYSBhbGJlcnQifSx7IkF1TiI6Imhhd29vbmcgamVvbmcifSx7IkF1TiI6ImFsYmVydGxhc3psbyBiYXJhYmFzaSJ9XSwiRiI6W3siRk4iOiJ3ZWIgYXBwbGljYXRpb24gc2VjdXJpdHkifSx7IkZOIjoid2ViIGRldmVsb3BtZW50In0seyJGTiI6IndlYiBuYXZpZ2F0aW9uIn0seyJGTiI6IndlYiAyIDAifSx7IkZOIjoid2ViIHBhZ2UifSx7IkZOIjoiZGlyZWN0ZWQgZ3JhcGgifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6IndvcmxkIHdpZGUgd2ViIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiSW50ZXJuZXQ6IERpYW1ldGVyIG9mIHRoZSBXb3JsZC1XaWRlIFdlYlwiLFwiU1wiOlt7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vYWRzYWJzLmhhcnZhcmQuZWR1L2Ficy8xOTk5TmF0dXIuNDAxLi4xMzBBXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9rb2FzYXMua2Fpc3QuYWMua3IvaGFuZGxlLzEwMjAzLzY4NTEzXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cubmF0dXJlLmNvbS9kb2lmaW5kZXIvMTAuMTAzOC80MzYwMVwifV0sXCJWRk5cIjpcIk5hdHVyZVwiLFwiVlwiOjQwMSxcIklcIjo2NzQ5LFwiRlBcIjoxMzAsXCJMUFwiOjEzMSxcIkRPSVwiOlwiMTAuMTAzOC80MzYwMVwiLFwiUFJcIjpbMjExMjA5MDcwMiwyMDA4NjIwMjY0LDIxMjQ2Mzc0OTIsMjc2ODMxNzc0MSwyMTQ4NjA2MTk2LDIxNDQ4ODUzNDIsMTk3Njk2OTIyMSwyMDY1NzY5NTAyLDIxMjUzMTU1NjcsMjE2NDcyNzE3NiwxOTcxNDIxOTI1LDIxMzA3OTA3MjUsMjEwNDA4NTY3MiwxNTczNTc5MzI5LDE5ODM2MTAxMzMsMjEwNzM2NzYyLDIxNzUxMTAwMDUsMjEyMTgyMTg0MSwyMDI2MDQyMjA2LDIxMzY5MzE2NjYsMjExMjA5MDcwMiwyMDA4NjIwMjY0LDIxMjQ2Mzc0OTIsMjc2ODMxNzc0MSwyMTQ4NjA2MTk2LDIxNDQ4ODUzNDIsMTk3Njk2OTIyMSwyMDY1NzY5NTAyLDIxMjUzMTU1NjcsMjE2NDcyNzE3NiwxOTcxNDIxOTI1LDIxMzA3OTA3MjUsMjEwNDA4NTY3MiwxNTczNTc5MzI5LDE5ODM2MTAxMzMsMjEwNzM2NzYyLDIxNzUxMTAwMDUsMjEyMTgyMTg0MSwyMDI2MDQyMjA2LDIxMzY5MzE2NjZdLFwiQU5GXCI6W3tcIkZOXCI6XCJSw6lrYVwiLFwiTE5cIjpcIkFsYmVydFwiLFwiU1wiOjF9LHtcIkZOXCI6XCJIYXdvb25nXCIsXCJMTlwiOlwiSmVvbmdcIixcIlNcIjoyfSx7XCJGTlwiOlwiQWxiZXJ0LUzDoXN6bMOzXCIsXCJMTlwiOlwiQmFyYWLDoXNpXCIsXCJTXCI6M31dLFwiQlZcIjpcIk5hdHVyZVwiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJNQUNNSUxMQU4gTUFHQVpJTkVTIExURFwifSJ9LHsibG9ncHJvYiI6LTE2LjU4OCwia2VzRW50aXR5SWQiOjE5ODYzMjEsIklkIjoxNTE5NjMwMDMxLCJUaSI6InBldyBpbnRlcm5ldCBhbWVyaWNhbiBsaWZlIHByb2plY3QiLCJZIjoyMDAyLCJEIjoiMjAwMi0wMS0wMSIsIkFBIjpbeyJBdU4iOiJzdXNhbm5haCBmb3gifV0sIkYiOlt7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6ImludGVybmV0IHByaXZhY3kifSx7IkZOIjoiYnVzaW5lc3MifV0sIkUiOiJ7XCJETlwiOlwiUGV3IEludGVybmV0ICYgQW1lcmljYW4gTGlmZSBQcm9qZWN0XCIsXCJWRk5cIjpcIlwiLFwiUFJcIjpbMTk4NTc0OTA3NCwyMDk5NTU2NjUzLDI1OTE5MDM0NzYsMjEyOTgxMzA3MywyMTQ3MjY0NDU1LDIyMzA1MTg4NjUsMTk5MDUxMzc0MCwxMjg2NzUwMjAsMjU3NjI5NzM3OSwyMTQ3MDUwMjk1LDE3OTE1ODc2NjMsMTU1NjU0Mzk1NywyMDYxNDc0NDI3LDIxMDk0Njk5NTEsMjExNjMzOTgxMiwxNTY2NDgxOTY1LDIxMTYxOTk1MDgsMTY4OTk5MTc2OSwyMTY3NDg3OTk1LDIwNDQ5NTAyNzQsMTk4NTc0OTA3NCwyMDk5NTU2NjUzLDI1OTE5MDM0NzYsMjEyOTgxMzA3MywyMTQ3MjY0NDU1LDIyMzA1MTg4NjUsMTk5MDUxMzc0MCwxMjg2NzUwMjAsMjU3NjI5NzM3OSwyMTQ3MDUwMjk1LDE3OTE1ODc2NjMsMTU1NjU0Mzk1NywyMDYxNDc0NDI3LDIxMDk0Njk5NTEsMjExNjMzOTgxMiwxNTY2NDgxOTY1LDIxMTYxOTk1MDgsMTY4OTk5MTc2OSwyMTY3NDg3OTk1LDIwNDQ5NTAyNzRdLFwiQU5GXCI6W3tcIkZOXCI6XCJTdXNhbm5haFwiLFwiTE5cIjpcIkZveFwiLFwiU1wiOjF9XSxcIkJUXCI6XCJhXCJ9In0seyJsb2dwcm9iIjotMTYuNTkzLCJrZXNFbnRpdHlJZCI6MTk5NjkxMSwiSWQiOjE1MDM2NTY0MzgsIlRpIjoidGhlIG5ldCBkZWx1c2lvbiB0aGUgZGFyayBzaWRlIG9mIGludGVybmV0IGZyZWVkb20iLCJZIjoyMDEyLCJEIjoiMjAxMi0wMi0yOCIsIkFBIjpbeyJBdU4iOiJldmdlbnkgdiBtb3Jvem92In1dLCJGIjpbeyJGTiI6ImRpZ2l0YWwgZGlwbG9tYWN5In0seyJGTiI6ImF1dGhvcml0YXJpYW5pc20ifSx7IkZOIjoiaW5mb3JtYXRpb24gYW5kIGNvbW11bmljYXRpb24gdGVjaG5vbG9naWVzIGZvciBkZXZlbG9wbWVudCJ9LHsiRk4iOiJkZW1vY3JhY3kifSx7IkZOIjoiZGlwbG9tYWN5In0seyJGTiI6ImVudGVydGFpbm1lbnQifSx7IkZOIjoic29jaWFsIG1lZGlhIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJwdWJsaWMgcmVsYXRpb25zIn0seyJGTiI6InBvbGl0aWNhbCBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlRoZSBOZXQgRGVsdXNpb246IFRoZSBEYXJrIFNpZGUgb2YgSW50ZXJuZXQgRnJlZWRvbVwiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE5NCxcIkludmVydGVkSW5kZXhcIjp7XCJUaGVcIjpbMF0sXCJyZXZvbHV0aW9uXCI6WzFdLFwid2lsbFwiOlsyXSxcImJlXCI6WzNdLFwiVHdpdHRlcmVkIVwiOls0XSxcImRlY2xhcmVkXCI6WzVdLFwiam91cm5hbGlzdFwiOls2LDg0XSxcIkFuZHJld1wiOls3XSxcIlN1bGxpdmFuXCI6WzhdLFwiYWZ0ZXJcIjpbOV0sXCJwcm90ZXN0c1wiOlsxMF0sXCJlcnVwdGVkXCI6WzExXSxcImluXCI6WzEyLDE0LDMwLDEyN10sXCJJcmFuXCI6WzEzLDMxXSxcIkp1bmVcIjpbMTVdLFwiMjAwOS5cIjpbMTZdLFwiWWV0XCI6WzE3XSxcImZvclwiOlsxOCw5NCwxODZdLFwiYWxsXCI6WzE5XSxcInRoZVwiOlsyMCwyMywyNyw0OCw2OSw5NSwxMDAsMTMxLDE2MSwxNzcsMTg3XSxcInRhbGtcIjpbMjFdLFwiYWJvdXRcIjpbMjJdLFwiZGVtb2NyYXRpemluZ1wiOlsyNCw5N10sXCJwb3dlclwiOlsyNV0sXCJvZlwiOlsyNiw5OSwxNDgsMTYwLDE3OSwxODldLFwiSW50ZXJuZXQsXCI6WzI4LDEwMV0sXCJyZWdpbWVzXCI6WzI5XSxcImFuZFwiOlszMiwzNyw2MSw4NSwxMTQsMTQyLDE2MywxNjksMTcyXSxcIkNoaW5hXCI6WzMzXSxcImFyZVwiOlszNCw0NV0sXCJhc1wiOlszNSwzOSwxMzksMTQ0LDE2NiwxOTFdLFwic3RhYmxlXCI6WzM2XSxcInJlcHJlc3NpdmVcIjpbMzhdLFwiZXZlci5cIjpbNDBdLFwiSW5cIjpbNDEsODBdLFwiZmFjdCxcIjpbNDJdLFwiYXV0aG9yaXRhcmlhblwiOls0M10sXCJnb3Zlcm5tZW50c1wiOls0NF0sXCJlZmZlY3RpdmVseVwiOls0Nl0sXCJ1c2luZ1wiOls0N10sXCJJbnRlcm5ldFwiOls0OSwxNjIsMTgwXSxcInRvXCI6WzUwXSxcInN1cHByZXNzXCI6WzUxXSxcImZyZWVcIjpbNTJdLFwic3BlZWNoLFwiOls1M10sXCJob25lXCI6WzU0XSxcInRoZWlyXCI6WzU1LDYzXSxcInN1cnZlaWxsYW5jZVwiOls1Nl0sXCJ0ZWNobmlxdWVzLFwiOls1N10sXCJkaXNzZW1pbmF0ZVwiOls1OF0sXCJjdXR0aW5nLWVkZ2VcIjpbNTldLFwicHJvcGFnYW5kYSxcIjpbNjBdLFwicGFjaWZ5XCI6WzYyXSxcInBvcHVsYXRpb25zXCI6WzY0XSxcIndpdGhcIjpbNjUsNzNdLFwiZGlnaXRhbFwiOls2Niw3NywxMzVdLFwiZW50ZXJ0YWlubWVudC5cIjpbNjddLFwiQ291bGRcIjpbNjhdLFwicmVjZW50XCI6WzcwXSxcIldlc3Rlcm5cIjpbNzEsMTAyXSxcIm9ic2Vzc2lvblwiOls3Ml0sXCJwcm9tb3RpbmdcIjpbNzRdLFwiZGVtb2NyYWN5XCI6Wzc1LDE5MF0sXCJieVwiOls3Niw5Ml0sXCJtZWFuc1wiOls3OF0sXCJiYWNrZmlyZT9cIjpbNzldLFwidGhpc1wiOls4MV0sXCJzcGlyaXRlZFwiOls4Ml0sXCJib29rLFwiOls4M10sXCJzb2NpYWxcIjpbODYsMTY0XSxcImNvbW1lbnRhdG9yXCI6Wzg3XSxcIkV2Z2VueVwiOls4OF0sXCJNb3Jvem92XCI6Wzg5LDE1M10sXCJzaG93c1wiOls5MCwxNTRdLFwidGhhdFwiOls5MSwxMzRdLFwiZmFsbGluZ1wiOls5M10sXCJzdXBwb3NlZGx5XCI6Wzk2XSxcIm5hdHVyZVwiOls5OF0sXCJkby1nb29kZXJzXCI6WzEwM10sXCJtYXlcIjpbMTA0XSxcImhhdmVcIjpbMTA1LDE4M10sXCJtaXNzZWRcIjpbMTA2XSxcImhvd1wiOlsxMDddLFwiaXRcIjpbMTA4LDExNl0sXCJhbHNvXCI6WzEwOV0sXCJlbnRyZW5jaGVzXCI6WzExMF0sXCJkaWN0YXRvcnMsXCI6WzExMV0sXCJ0aHJlYXRlbnNcIjpbMTEyXSxcImRpc3NpZGVudHMsXCI6WzExM10sXCJtYWtlc1wiOlsxMTVdLFwiaGFyZGVybm90XCI6WzExN10sXCJlYXNpZXJ0b1wiOlsxMThdLFwicHJvbW90ZVwiOlsxMTldLFwiZGVtb2NyYWN5LlwiOlsxMjBdLFwiQnV6endvcmRzXCI6WzEyMV0sXCJsaWtlXCI6WzEyMiwxNzZdLFwiMjFzdC1jZW50dXJ5XCI6WzEyM10sXCJzdGF0ZWNyYWZ0XCI6WzEyNF0sXCJzb3VuZFwiOlsxMjVdLFwiZ29vZFwiOlsxMjZdLFwiUG93ZXJQb2ludFwiOlsxMjhdLFwicHJlc2VudGF0aW9ucyxcIjpbMTI5XSxcImJ1dFwiOlsxMzBdLFwicmVhbGl0eVwiOlsxMzJdLFwiaXNcIjpbMTMzXSxcImRpcGxvbWFjeVwiOlsxMzZdLFwicmVxdWlyZXNcIjpbMTM3XSxcImp1c3RcIjpbMTM4XSxcIm11Y2hcIjpbMTQwXSxcIm92ZXJzaWdodFwiOlsxNDFdLFwiY29uc2lkZXJhdGlvblwiOlsxNDNdLFwiYW55XCI6WzE0NV0sXCJvdGhlclwiOlsxNDZdLFwia2luZFwiOlsxNDddLFwiZGlwbG9tYWN5LlwiOlsxNDldLFwiTWFyc2hhbGluZ1wiOlsxNTBdLFwiY29tcGVsbGluZ1wiOlsxNTFdLFwiZXZpZGVuY2UsXCI6WzE1Ml0sXCJ3aHlcIjpbMTU1LDE3MF0sXCJ3ZVwiOlsxNTZdLFwibXVzdFwiOlsxNTddLFwic3RvcFwiOlsxNThdLFwidGhpbmtpbmdcIjpbMTU5XSxcIm1lZGlhXCI6WzE2NV0sXCJpbmhlcmVudGx5XCI6WzE2N10sXCJsaWJlcmF0aW5nXCI6WzE2OF0sXCJhbWJpdGlvdXNcIjpbMTcxXSxcInNlZW1pbmdseVwiOlsxNzNdLFwibm9ibGVcIjpbMTc0XSxcImluaXRpYXRpdmVzXCI6WzE3NV0sXCJwcm9tb3Rpb25cIjpbMTc4XSxcImZyZWVkb21cIjpbMTgxXSxcIm1pZ2h0XCI6WzE4Ml0sXCJkaXNhc3Ryb3VzXCI6WzE4NF0sXCJpbXBsaWNhdGlvbnNcIjpbMTg1XSxcImZ1dHVyZVwiOlsxODhdLFwiYVwiOlsxOTJdLFwid2hvbGUuXCI6WzE5M119fSxcIlNcIjpbe1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9OZXQtRGVsdXNpb24tRGFyay1JbnRlcm5ldC1GcmVlZG9tL2RwLzE1ODY0ODg3NDBcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2NpLm5paS5hYy5qcC9uY2lkL0JCMDU1MzUxOTZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0xOTY0ODc5XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9pY3Rsb2d5Lm5ldC9iaWJsaW9ncmFwaHkvcmVwb3J0cy9wcm9qZWN0cy5waHA/aWRwPTE4OTRcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2NpLm5paS5hYy5qcC9uY2lkL0JCMDk0OTI2MlhcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTE5NjQ4NzlcIn1dLFwiVkZOXCI6XCJcIixcIlBSXCI6WzE1OTYxNTMwNTksMTQyMzQ1NDEyLDYxODIyODcwMiwxNTcwMTc0MDYyLDIwOTkxNDc2OTIsMjYxMTYzNDUxNSwyNTQ4MDgxMjA3LDI2MTQ3MjE4NzAsMTQ5NTM3MDI0NSwyMDUzMTIwMTQyLDIxMjM4MzUxODksMjE0NzI2NDQ1NSwyMTQ0MTg4NzYzLDE1Mjg3ODQ4NTgsMTk3NzAzNzczNCwyMTMyMjgyMjY2LDIxNDkyMzE3NjUsMTU4MzA1OTA5NywxOTk1NTgyNzI0LDIxMDk0Njk5NTEsMTU5NjE1MzA1OSwxNDIzNDU0MTIsNjE4MjI4NzAyLDE1NzAxNzQwNjIsMjA5OTE0NzY5MiwyNjExNjM0NTE1LDI1NDgwODEyMDcsMjYxNDcyMTg3MCwxNDk1MzcwMjQ1LDIwNTMxMjAxNDIsMjEyMzgzNTE4OSwyMTQ3MjY0NDU1LDIxNDQxODg3NjMsMTUyODc4NDg1OCwxOTc3MDM3NzM0LDIxMzIyODIyNjYsMjE0OTIzMTc2NSwxNTgzMDU5MDk3LDE5OTU1ODI3MjQsMjEwOTQ2OTk1MV0sXCJBTkZcIjpbe1wiRk5cIjpcIkV2Z2VueSBWLlwiLFwiTE5cIjpcIk1vcm96b3ZcIixcIlNcIjoxfV0sXCJCVFwiOlwiYlwiLFwiUEJcIjpcIlBlcnNldXMgQm9va3NcIn0ifSx7ImxvZ3Byb2IiOi0xNi42MTcsImtlc0VudGl0eUlkIjoyMDQyOTI3LCJJZCI6MjE1NTQ0NDMxMywiVGkiOiJhIGJsdWVwcmludCBmb3IgaW50cm9kdWNpbmcgZGlzcnVwdGl2ZSB0ZWNobm9sb2d5IGludG8gdGhlIGludGVybmV0IiwiWSI6MjAwMywiRCI6IjIwMDMtMDEtMDEiLCJSSWQiOlsyMTE4NDI4MTkzLDIxNjc4OTg0MTQsMjExMTk5NjQ4NiwyMTA0MjEwODk0LDIxNDQ1NTMwNzgsMjE1MDY3NjU4NiwyMTIzODIwODIwLDE5NzA3MDU0NDMsMjE1NjY0NDUwMSwyMDg5NjYxOTQ2LDIxNDg2NDcyODEsMjAzNjczMjU5OCwxNTYzMzE1MTYyLDIwNDM1Nzk3MDMsMTk2OTQ5MDEwMSwxMjQzNTUxMDMsMjU3NTc3NzVdLCJBQSI6W3siQXVOIjoibGFycnkgbCBwZXRlcnNvbiJ9LHsiQXVOIjoidCB3IGFuZGVyc29uIn0seyJBdU4iOiJkYXZpZCBlIGN1bGxlciJ9LHsiQXVOIjoidGltb3RoeSByb3Njb2UifV0sIkYiOlt7IkZOIjoic2VydmljZSBvcmllbnRhdGlvbiJ9LHsiRk4iOiJwbGFuZXRsYWIifSx7IkZOIjoiaGlnaGx5IG9wdGltaXplZCB0b2xlcmFuY2UifSx7IkZOIjoidGVzdGJlZCJ9LHsiRk4iOiJvdmVybGF5IG5ldHdvcmsifSx7IkZOIjoibmV0d29yayBzaW11bGF0aW9uIn0seyJGTiI6Im5ldHdvcmsgYXJjaGl0ZWN0dXJlIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJjb21wdXRlciBzZWN1cml0eSJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImRpc3RyaWJ1dGVkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkEgYmx1ZXByaW50IGZvciBpbnRyb2R1Y2luZyBkaXNydXB0aXZlIHRlY2hub2xvZ3kgaW50byB0aGUgSW50ZXJuZXRcIixcIklBXCI6e1wiSW5kZXhMZW5ndGhcIjoxNTksXCJJbnZlcnRlZEluZGV4XCI6e1wiVGhpc1wiOlswLDU5XSxcInBhcGVyXCI6WzEsMTQzXSxcImFyZ3Vlc1wiOlsyXSxcInRoYXRcIjpbMywxNSw0Miw0Niw1NCw2OCwxMjJdLFwiYVwiOls0LDg1LDEyMCwxMzJdLFwibmV3XCI6WzUsNTAsMTMzXSxcImNsYXNzXCI6WzZdLFwib2ZcIjpbNyw4NywxMzFdLFwiZ2VvZ3JhcGhpY2FsbHlcIjpbOF0sXCJkaXN0cmlidXRlZFwiOls5XSxcIm5ldHdvcmtcIjpbMTAsMzUsMTM2LDE1MF0sXCJzZXJ2aWNlc1wiOlsxMSwyNiw3Niw5OV0sXCJpc1wiOlsxMiwyN10sXCJlbWVyZ2luZyxcIjpbMTNdLFwiYW5kXCI6WzE0LDIzLDUyLDgzLDEwMywxMDldLFwidGhlXCI6WzE2LDg4LDEyOSwxNDJdLFwibW9zdFwiOlsxN10sXCJlZmZlY3RpdmVcIjpbMThdLFwid2F5XCI6WzE5XSxcInRvXCI6WzIwLDQ4LDU2LDgwLDExNF0sXCJkZXNpZ24sXCI6WzIxXSxcImV2YWx1YXRlLFwiOlsyMl0sXCJkZXBsb3lcIjpbMjRdLFwidGhlc2VcIjpbMjUsMTI0LDE1NF0sXCJieVwiOlsyOF0sXCJ1c2luZ1wiOlsyOV0sXCJhblwiOlszMCw0MCwxNDhdLFwib3ZlcmxheS1iYXNlZFwiOlszMV0sXCJ0ZXN0YmVkLlwiOlszMl0sXCJVbmxpa2VcIjpbMzNdLFwiY29udmVudGlvbmFsXCI6WzM0XSxcInRlc3RiZWRzLFwiOlszNl0sXCJob3dldmVyLFwiOlszN10sXCJ3ZVwiOlszOF0sXCJhZHZvY2F0ZVwiOlszOV0sXCJhcHByb2FjaFwiOls0MV0sXCJzdXBwb3J0c1wiOls0MywxMjNdLFwiYm90aFwiOls0NF0sXCJyZXNlYXJjaGVyc1wiOls0NV0sXCJ3YW50XCI6WzQ3LDU1XSxcImRldmVsb3BcIjpbNDldLFwic2VydmljZXMsXCI6WzUxXSxcImNsaWVudHNcIjpbNTNdLFwidXNlXCI6WzU3XSxcInRoZW0uXCI6WzU4XSxcImR1YWxcIjpbNjBdLFwidXNlLFwiOls2MV0sXCJpblwiOls2Miw3MywxMDUsMTU3XSxcInR1cm4sXCI6WzYzXSxcInN1Z2dlc3RzXCI6WzY0XSxcImZvdXJcIjpbNjUsMTU1XSxcImRlc2lnblwiOls2NiwxMjVdLFwicHJpbmNpcGxlc1wiOls2NywxMjYsMTU2XSxcImFyZVwiOls2OV0sXCJub3RcIjpbNzBdLFwid2lkZWx5XCI6WzcxXSxcInN1cHBvcnRlZFwiOls3Ml0sXCJleGlzdGluZ1wiOls3NF0sXCJ0ZXN0YmVkczpcIjpbNzVdLFwic2hvdWxkXCI6Wzc3LDk0LDEwMCwxMTFdLFwiYmVcIjpbNzgsOTUsMTAxLDExMl0sXCJhYmxlXCI6Wzc5XSxcInJ1blwiOls4MSwxMDRdLFwiY29udGludW91c2x5XCI6WzgyXSxcImFjY2Vzc1wiOls4NF0sXCJzbGljZVwiOls4Nl0sXCJvdmVybGF5J3NcIjpbODldLFwicmVzb3VyY2VzLFwiOls5MF0sXCJjb250cm9sXCI6WzkxXSxcIm92ZXJcIjpbOTJdLFwicmVzb3VyY2VzXCI6WzkzXSxcImRpc3RyaWJ1dGVkLFwiOls5Nl0sXCJvdmVybGF5XCI6Wzk3LDE0OV0sXCJtYW5hZ2VtZW50XCI6Wzk4XSxcInVuYnVuZGxlZFwiOlsxMDJdLFwidGhlaXJcIjpbMTA2XSxcIm93blwiOlsxMDddLFwic2xpY2VzLFwiOlsxMDhdLFwiQVBJc1wiOlsxMTBdLFwiZGVzaWduZWRcIjpbMTEzLDE1Ml0sXCJwcm9tb3RlXCI6WzExNV0sXCJhcHBsaWNhdGlvblwiOlsxMTZdLFwiZGV2ZWxvcG1lbnQuXCI6WzExN10sXCJXZVwiOlsxMThdLFwiYmVsaWV2ZVwiOlsxMTldLFwidGVzdGJlZFwiOlsxMjFdLFwid2lsbFwiOlsxMjddLFwiZmFjaWxpdGF0ZVwiOlsxMjhdLFwiZW1lcmdlbmNlXCI6WzEzMF0sXCJzZXJ2aWNlLW9yaWVudGVkXCI6WzEzNV0sXCJhcmNoaXRlY3R1cmVcIjpbMTM3XSxcIi5cIjpbMTM4XSxcIlRvd2FyZHNcIjpbMTM5XSxcInRoaXNcIjpbMTQwXSxcImVuZCxcIjpbMTQxXSxcImFsc29cIjpbMTQ0XSxcImJyaWVmbHlcIjpbMTQ1XSxcImRlc2NyaWJlc1wiOlsxNDZdLFwiUGxhbmV0TGFiLFwiOlsxNDddLFwiYmVpbmdcIjpbMTUxXSxcIndpdGhcIjpbMTUzXSxcIm1pbmQuXCI6WzE1OF19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy5wcmluY2V0b24uZWR1L2NvdXJzZXMvYXJjaGl2ZS9mYWxsMDMvY3M1OTdCL2hhbmRvdXRzL3BkbjAyLTAwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93d3cucGxhbmV0LWxhYi5vcmcvZmlsZXMvcGRuL1BETi0wMi0wMDEvcGRuLTAyLTAwMS5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jc2wubXR1LmVkdS9jczY0NjEvd3d3L1JlYWRpbmcvUGV0ZXJzb24wMy5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5tZWFzdXJlbWVudC1sYWIub3JnL2ZpbGVzL3Bkbi9QRE4tMDItMDAxL3Bkbi0wMi0wMDEucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9wZW9wbGUuaW5mLmV0aHouY2gvdHJvc2NvZS9wdWJzL1BsbnRMYkhvdE5ldHMucGRmXCJ9LHtcIlR5XCI6MyxcIlVcIjpcImh0dHA6Ly9jY3Iuc2lnY29tbS5vcmcvYXJjaGl2ZS8yMDAzL2phbjAzL2Njci0yMDAzLTEtcGV0ZXJzb24ucGRmXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9qb3VybmFscy9jY3IvY2NyMzMuaHRtbCNQZXRlcnNvbkFDUjAzXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9Nzc0NzcyXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly93d3cuY3Mud2FzaGluZ3Rvbi5lZHUvaG9tZXMvdG9tL3B1YnMvYmx1ZXByaW50LnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vcG9ydGFsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2RvaWQ9Nzc0NzYzLjc3NDc3MlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5hY20ub3JnLzEwLjExNDUvNzc0NzYzLjc3NDc3MlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2FyaXpvbmEucHVyZS5lbHNldmllci5jb20vZW4vcHVibGljYXRpb25zL2EtYmx1ZXByaW50LWZvci1pbnRyb2R1Y2luZy1kaXNydXB0aXZlLXRlY2hub2xvZ3ktaW50by10aGUtaW50ZXJuXCJ9LHtcIlR5XCI6MCxcIlVcIjpcImh0dHA6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD03NzQ3NzJcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL3d3dy5pbnRlbC1yZXNlYXJjaC5uZXQvUHVibGljYXRpb25zL0JlcmtlbGV5LzEyMDUyMDAyMTAyNV82OC5wZGZcIn1dLFwiVkZOXCI6XCJBQ00gU3BlY2lhbCBJbnRlcmVzdCBHcm91cCBvbiBEYXRhIENvbW11bmljYXRpb25cIixcIlZTTlwiOlwiU0lHQ09NTVwiLFwiVlwiOjMzLFwiSVwiOjEsXCJGUFwiOjU5LFwiTFBcIjo2NCxcIkRPSVwiOlwiMTAuMTE0NS83NzQ3NjMuNzc0NzcyXCIsXCJDQ1wiOntcIjI1NzU3Nzc1XCI6W1wiVGhpcyBlbWVyZ2luZyBjbGFzcyBvZiBhcHBsaWNhdGlvbnMgaW5jbHVkZXMgbmV0d29yay1lbWJlZGRlZCBzdG9yYWdlIFsxMl0sIHBlZXItdG9wZWVyIGxlIHNoYXJpbmcgWzE2LCA0XSwgY29udGVudCBkaXN0cmlidXRpb24gbmV0d29ya3MgWzIwXSwgcm9idXN0IHJvdXRpbmcgb3ZlcmxheXMgWzE3LCAyXSwgc2NhbGFibGUgb2JqZWN0IGxvY2F0aW9uIFszLCAxNSwgIDE4ICwgMTRdLCBhbmQgc2NhbGFibGUgZXZlbnQgcHJvcGFnYXRpb24gWzVdLlwiXSxcIjE1NjMzMTUxNjJcIjpbXCJUaGlzIGVtZXJnaW5nIGNsYXNzIG9mIGFwcGxpY2F0aW9ucyBpbmNsdWRlcyBuZXR3b3JrLWVtYmVkZGVkIHN0b3JhZ2UgWzEyXSwgcGVlci10b3BlZXIgbGUgc2hhcmluZyBbMTYsIDRdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBuZXR3b3JrcyBbMjBdLCByb2J1c3Qgcm91dGluZyBvdmVybGF5cyBbMTcsIDJdLCBzY2FsYWJsZSBvYmplY3QgbG9jYXRpb24gWyAzICwgMTUsIDE4LCAxNF0sIGFuZCBzY2FsYWJsZSBldmVudCBwcm9wYWdhdGlvbiBbNV0uXCJdLFwiMTk2OTQ5MDEwMVwiOltcIlRoaXMgZW1lcmdpbmcgY2xhc3Mgb2YgYXBwbGljYXRpb25zIGluY2x1ZGVzIG5ldHdvcmstZW1iZWRkZWQgc3RvcmFnZSBbMTJdLCBwZWVyLXRvcGVlciBsZSBzaGFyaW5nIFsxNiwgNF0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIG5ldHdvcmtzIFsgMjAgXSwgcm9idXN0IHJvdXRpbmcgb3ZlcmxheXMgWzE3LCAyXSwgc2NhbGFibGUgb2JqZWN0IGxvY2F0aW9uIFszLCAxNSwgMTgsIDE0XSwgYW5kIHNjYWxhYmxlIGV2ZW50IHByb3BhZ2F0aW9uIFs1XS5cIl0sXCIxOTcwNzA1NDQzXCI6W1wiRW11bGFiIGlzIGEgbmV0d29yayBleHBlcmltZW50YXRpb24gZmFjaWxpdHkgc3VwcG9ydGVkIGJ5IHRoZSBVbml2ZXJzaXR5IG9mIFV0YWggWyAyMiBdLlwiXSxcIjIwMzY3MzI1OThcIjpbXCJUaGlzIGVtZXJnaW5nIGNsYXNzIG9mIGFwcGxpY2F0aW9ucyBpbmNsdWRlcyBuZXR3b3JrLWVtYmVkZGVkIHN0b3JhZ2UgWzEyXSwgcGVlci10b3BlZXIgZmlsZSBzaGFyaW5nIFsxNiwgNF0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIG5ldHdvcmtzIFsyMF0sIHJvYnVzdCByb3V0aW5nIG92ZXJsYXlzIFsxNywgMl0sIHNjYWxhYmxlIG9iamVjdCBsb2NhdGlvbiBbMywgMTUsIDE4LCAxNF0sIGFuZCBzY2FsYWJsZSBldmVudCBwcm9wYWdhdGlvbiBbNV0uXCJdLFwiMjA0MzU3OTcwM1wiOltcIlRoZSBzZWNvbmQgZW9ydCByZXZvbHZlcyBhcm91bmQgaXNvbGF0aW9uIGtlcm5lbHMgbGlrZSBEZW5hbGkgWzIxXSBhbmQgWGVub3NlcnZlcnMgWyA3IF0sIHdoaWNoIHByb3ZpZGUgYSBsb3ctbGV2ZWwgaXNvbGF0aW9uIGludGVyZmFjZSB0aGF0IGNsb3NlbHkgcmVzZW1ibGVzIHZpcnR1YWxpemF0aW9uIG9mIHRoZSBoYXJkd2FyZS5cIl0sXCIyMDg5NjYxOTQ2XCI6W1wiVGhlIHNlY29uZCBlb3J0IHJldm9sdmVzIGFyb3VuZCBpc29sYXRpb24ga2VybmVscyBsaWtlIERlbmFsaSBbIDIxIF0gYW5kIFhlbm9zZXJ2ZXJzIFs3XSwgd2hpY2ggcHJvdmlkZSBhIGxvdy1sZXZlbCBpc29sYXRpb24gaW50ZXJmYWNlIHRoYXQgY2xvc2VseSByZXNlbWJsZXMgdmlydHVhbGl6YXRpb24gb2YgdGhlIGhhcmR3YXJlLlwiXSxcIjIxMDQyMTA4OTRcIjpbXCJUaGlzIGVtZXJnaW5nIGNsYXNzIG9mIGFwcGxpY2F0aW9ucyBpbmNsdWRlcyBuZXR3b3JrLWVtYmVkZGVkIHN0b3JhZ2UgWzEyXSwgcGVlci10b3BlZXIgZmlsZSBzaGFyaW5nIFsxNiwgNF0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIG5ldHdvcmtzIFsyMF0sIHJvYnVzdCByb3V0aW5nIG92ZXJsYXlzIFsxNywgMl0sIHNjYWxhYmxlIG9iamVjdCBsb2NhdGlvbiBbMywgMTUsIDE4LCAxNF0sIGFuZCBzY2FsYWJsZSBldmVudCBwcm9wYWdhdGlvbiBbNV0uXCJdLFwiMjExMTk5NjQ4NlwiOltcIuKAoiBUaGUgR3JpZCBpcyBhIGNvbGxlY3Rpb24gb2YgbWlkZGxld2FyZSwgY2FsbGVkIEdsb2J1cyBbNl0sIHRoYXQgYWxsb3dzIHJlc2VhcmNoZXJzIHRvIGRpc3RyaWJ1dGUgbGFyZ2Ugc2NpZW50aWZpYyBhcHBsaWNhdGlvbnMgYWNyb3NzIGEgZGlzdHJpYnV0ZWQgc2V0IG9mIGNvbXB1dGF0aW9uYWwgcmVzb3VyY2VzIFs5XS5cIl0sXCIyMTIzODIwODIwXCI6W1wiVGhpcyBlbWVyZ2luZyBjbGFzcyBvZiBhcHBsaWNhdGlvbnMgaW5jbHVkZXMgbmV0d29yay1lbWJlZGRlZCBzdG9yYWdlIFsxMl0sIHBlZXItdG9wZWVyIGxlIHNoYXJpbmcgWyAxNiAsIDRdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBuZXR3b3JrcyBbMjBdLCByb2J1c3Qgcm91dGluZyBvdmVybGF5cyBbMTcsIDJdLCBzY2FsYWJsZSBvYmplY3QgbG9jYXRpb24gWzMsIDE1LCAxOCwgMTRdLCBhbmQgc2NhbGFibGUgZXZlbnQgcHJvcGFnYXRpb24gWzVdLlwiXSxcIjIxNDQ1NTMwNzhcIjpbXCJUaGlzIGVtZXJnaW5nIGNsYXNzIG9mIGFwcGxpY2F0aW9ucyBpbmNsdWRlcyBuZXR3b3JrLWVtYmVkZGVkIHN0b3JhZ2UgWzEyXSwgcGVlci10b3BlZXIgbGUgc2hhcmluZyBbMTYsIDRdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBuZXR3b3JrcyBbMjBdLCByb2J1c3Qgcm91dGluZyBvdmVybGF5cyBbMTcsICAyIF0sIHNjYWxhYmxlIG9iamVjdCBsb2NhdGlvbiBbMywgMTUsIDE4LCAxNF0sIGFuZCBzY2FsYWJsZSBldmVudCBwcm9wYWdhdGlvbiBbNV0uXCJdLFwiMjE0ODY0NzI4MVwiOltcIlRoaXMgZW1lcmdpbmcgY2xhc3Mgb2YgYXBwbGljYXRpb25zIGluY2x1ZGVzIG5ldHdvcmstZW1iZWRkZWQgc3RvcmFnZSBbMTJdLCBwZWVyLXRvcGVlciBsZSBzaGFyaW5nIFsxNiwgNF0sIGNvbnRlbnQgZGlzdHJpYnV0aW9uIG5ldHdvcmtzIFsyMF0sIHJvYnVzdCByb3V0aW5nIG92ZXJsYXlzIFsxNywgMl0sIHNjYWxhYmxlIG9iamVjdCBsb2NhdGlvbiBbMywgMTUsIDE4LCAgMTQgXSwgYW5kIHNjYWxhYmxlIGV2ZW50IHByb3BhZ2F0aW9uIFs1XS5cIl0sXCIyMTUwNjc2NTg2XCI6W1wiVGhpcyBlbWVyZ2luZyBjbGFzcyBvZiBhcHBsaWNhdGlvbnMgaW5jbHVkZXMgbmV0d29yay1lbWJlZGRlZCBzdG9yYWdlIFsxMl0sIHBlZXItdG9wZWVyIGxlIHNoYXJpbmcgWzE2LCAgNCBdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBuZXR3b3JrcyBbMjBdLCByb2J1c3Qgcm91dGluZyBvdmVybGF5cyBbMTcsIDJdLCBzY2FsYWJsZSBvYmplY3QgbG9jYXRpb24gWzMsIDE1LCAxOCwgMTRdLCBhbmQgc2NhbGFibGUgZXZlbnQgcHJvcGFnYXRpb24gWzVdLlwiXSxcIjIxNTY2NDQ1MDFcIjpbXCJUaGlzIGVtZXJnaW5nIGNsYXNzIG9mIGFwcGxpY2F0aW9ucyBpbmNsdWRlcyBuZXR3b3JrLWVtYmVkZGVkIHN0b3JhZ2UgWzEyXSwgcGVlci10b3BlZXIgbGUgc2hhcmluZyBbMTYsIDRdLCBjb250ZW50IGRpc3RyaWJ1dGlvbiBuZXR3b3JrcyBbMjBdLCByb2J1c3Qgcm91dGluZyBvdmVybGF5cyBbMTcsIDJdLCBzY2FsYWJsZSBvYmplY3QgbG9jYXRpb24gWzMsIDE1LCAxOCwgMTRdLCBhbmQgc2NhbGFibGUgZXZlbnQgcHJvcGFnYXRpb24gWyA1IF0uXCJdfSxcIlBSXCI6WzE5NzA3MDU0NDMsMjExODQyODE5MywyMTQ0NTUzMDc4LDIxNjc4OTg0MTQsMjE1ODA0OTgyMSwyMTMxNzI2NzE0LDIxNjMwNTkxOTAsMjEwMTI5NjIyMywyMTUwNjc2NTg2LDIxMjU1MzA2MjMsMjEwNzU4OTQ2NywyMTIzNzMyMzg1LDIxNTc5MTg2MTcsMjA1NDI3ODc4MywyMDEwMzY1NDY3LDE0OTI1MjIxMDYsMjEwNTMxMDc5NSwyMTQ4NjYyNzQ4LDIxMDQyMTA4OTQsMTUxMTI5NDAyLDE5NzA3MDU0NDMsMjExODQyODE5MywyMTQ0NTUzMDc4LDIxNjc4OTg0MTQsMjE1ODA0OTgyMSwyMTMxNzI2NzE0LDIxNjMwNTkxOTAsMjEwMTI5NjIyMywyMTUwNjc2NTg2LDIxMjU1MzA2MjMsMjEwNzU4OTQ2NywyMTIzNzMyMzg1LDIxNTc5MTg2MTcsMjA1NDI3ODc4MywyMDEwMzY1NDY3LDE0OTI1MjIxMDYsMjEwNTMxMDc5NSwyMTQ4NjYyNzQ4LDIxMDQyMTA4OTQsMTUxMTI5NDAyXSxcIkFORlwiOlt7XCJGTlwiOlwiTGFycnkgTC5cIixcIkxOXCI6XCJQZXRlcnNvblwiLFwiU1wiOjF9LHtcIkZOXCI6XCJUaG9tYXMgRS5cIixcIkxOXCI6XCJBbmRlcnNvblwiLFwiU1wiOjJ9LHtcIkZOXCI6XCJEYXZpZCBFLlwiLFwiTE5cIjpcIkN1bGxlclwiLFwiU1wiOjN9LHtcIkZOXCI6XCJUaW1vdGh5XCIsXCJMTlwiOlwiUm9zY29lXCIsXCJTXCI6NH1dLFwiQlZcIjpcImFjbSBzcGVjaWFsIGludGVyZXN0IGdyb3VwIG9uIGRhdGEgY29tbXVuaWNhdGlvblwiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNi42MzYsImtlc0VudGl0eUlkIjoyMDgyMDE5LCJJZCI6MjA2Mjk3ODQ1MiwiVGkiOiJ0aGUgaW50ZXJuZXQgb2YgdGhpbmdzIGEgc3VydmV5IiwiWSI6MjAxNSwiRCI6IjIwMTUtMDQtMDEiLCJSSWQiOlsyMTE5MDQ2NjQyLDIwOTYzNTY5ODUsMjAwMTI5MTY2OSwxOTczNzk0MDQxLDIxMjM3NzAxOTgsMjA4NDk0NjQyNywyMTY1ODg3NTcyLDIxNTQ4NzE3ODEsMjExMDc1MzQ3MiwyMDQ0MTgxMzgzLDIxMzk1MzE4NTIsMjAxNTYwNjUxNiwyMTQwODA1Nzc0LDIxMjk4NDA3OTYsMjE1MjQ0NTE3NSwxOTYzNDg5OTA4LDIwMjAwNDEyMTQsMTk2NjgzNjU5NSwyMTM1MTM4NzkwLDIxMzQ0MTE2MTEsMTUwMTM3NzIwMywyMDM0MDU1MjQwLDIwOTM2NzgzNTEsMjA4NTkwOTk0NCwxOTc3Nzc3NzgwLDIwNDczNTI2MjgsMjEzMjUwMzg3OCwyMTQxODY1MjgyLDE0Nzk5NzIzMDgsMjA5ODAwNzEwMiwyMDc1NDIyODgzLDIxMjU4MTg1NTMsMTk5NzE4MjQyNywyMDIwNDQzNDIyLDIxNTAxMzM0ODEsMjA1NTU2MjQ5MywyMDM5MDQ5Nzc0LDIwMjI3MDk2MzEsMTk2NjEwMDMwNywyMTE3ODU1MDkxLDIwNTA0MTI2MzUsMjA1MTU5MzAyNCwyMTAyMzkzMTYzLDIxMTkxMTk3NDEsMjA3MDk0NDY2MCwyMDYyMTQxOTA3LDIwMDYzNjY4MjMsMjAwNDczNzg0NCwyMTA2NjQ4NDgyLDE5OTUwNTUwMzksMjA1NTY3Njg2OCwyMDE1OTA4NTgyLDIwODIyNjYzNDQsMjA2NzE2OTAyMiwxOTQwMjA3ODMyLDIwODE3NTQzODQsMTU3OTQyMzE4NywyMTQ2NTIwNDk1LDE3ODY0NDg2NzQsMjA5MzY1MjM5MiwyMDkzNTU0MzU2LDIxMjYxMTI2MTMsMjA1NzQwMTIwOSwxOTgzMjQ3MTAwLDIxNDM1MDA4MDQsMjA0MTgzMTM5OSwyMDU1Nzc5NjM5LDIxMDA3NjYwNjQsMjA5MjkxMDQyNSwyMDI5NzMyMjUzLDIwMzUxNzY3MDcsMjA0NDE2MjI2NSwyMTI2NDAxMjM2LDIxMTQzMzE5NjUsMjA1MjEwMDU1MywxNTc5ODMyOTE3LDIwMzQ5NTE5MTksMjA3NjEzOTQ0OSwyMDM3OTE2NzE2XSwiQUEiOlt7IkF1TiI6InNoYW5jYW5nIGxpIn0seyJBdU4iOiJsaSBkYSB4dSJ9LHsiQXVOIjoic2hhbnNoYW4gemhhbyJ9XSwiRiI6W3siRk4iOiJzZXJ2aWNlIG9yaWVudGVkIGFyY2hpdGVjdHVyZSJ9LHsiRk4iOiJpbnRlcm5ldCBvZiB0aGluZ3MifSx7IkZOIjoiYXJjaGl0ZWN0dXJlIn0seyJGTiI6InRoZSBpbnRlcm5ldCJ9LHsiRk4iOiJjb21wdXRlciBzZWN1cml0eSJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIlRoZSBpbnRlcm5ldCBvZiB0aGluZ3M6IGEgc3VydmV5XCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTMyLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkluXCI6WzAsNzJdLFwicmVjZW50XCI6WzFdLFwieWVhcixcIjpbMl0sXCJ0aGVcIjpbMywyMCwyMywzNiw0OCw1MSw2Niw3NSw5OCwxMTAsMTE2LDEyM10sXCJJbnRlcm5ldFwiOls0LDIxLDM3LDYwXSxcIm9mXCI6WzUsMTksMjIsMjksMzUsNDAsNTAsNjEsODIsOTAsMTAwXSxcIlRoaW5nc1wiOls2LDYyXSxcIihJb1QpXCI6WzcsNjNdLFwiaGFzXCI6WzhdLFwiZHJhd25cIjpbOV0sXCJzaWduaWZpY2FudFwiOlsxMF0sXCJyZXNlYXJjaFwiOlsxMSwxMjRdLFwiYXR0ZW50aW9uLlwiOlsxMl0sXCJJb1RcIjpbMTMsODMsOTEsMTAxLDExMV0sXCJpc1wiOlsxNF0sXCJjb25zaWRlcmVkXCI6WzE1XSxcImFzXCI6WzE2XSxcImFcIjpbMTddLFwicGFydFwiOlsxOF0sXCJmdXR1cmVcIjpbMjQsMzRdLFwiYW5kXCI6WzI1LDU2LDgwLDEyNl0sXCJ3aWxsXCI6WzI2LDM4LDQ1LDY0XSxcImNvbXByaXNlXCI6WzI3XSxcImJpbGxpb25zXCI6WzI4XSxcImludGVsbGlnZW50XCI6WzMwXSxcImNvbW11bmljYXRpbmdcIjpbMzFdLFwiYHRoaW5ncycuXCI6WzMyXSxcIlRoZVwiOlszMyw1OV0sXCJjb25zaXN0XCI6WzM5XSxcImhldGVyb2dlbmVvdXNseVwiOls0MV0sXCJjb25uZWN0ZWRcIjpbNDIsNjddLFwiZGV2aWNlc1wiOls0M10sXCJ0aGF0XCI6WzQ0XSxcImZ1cnRoZXJcIjpbNDZdLFwiZXh0ZW5kXCI6WzQ3XSxcImJvcmRlcnNcIjpbNDldLFwid29ybGRcIjpbNTJdLFwid2l0aFwiOls1Myw2OV0sXCJwaHlzaWNhbFwiOls1NF0sXCJlbnRpdGllc1wiOls1NV0sXCJ2aXJ0dWFsXCI6WzU3XSxcImNvbXBvbmVudHMuXCI6WzU4XSxcImVtcG93ZXJcIjpbNjVdLFwidGhpbmdzXCI6WzY4XSxcIm5ld1wiOls3MF0sXCJjYXBhYmlsaXRpZXMuXCI6WzcxXSxcInRoaXNcIjpbNzNdLFwic3VydmV5LFwiOls3NF0sXCJkZWZpbml0aW9ucyxcIjpbNzZdLFwiYXJjaGl0ZWN0dXJlLFwiOls3N10sXCJmdW5kYW1lbnRhbFwiOls3OF0sXCJ0ZWNobm9sb2dpZXMsXCI6Wzc5XSxcImFwcGxpY2F0aW9uc1wiOls4MSwxMTJdLFwiYXJlXCI6Wzg0LDkyLDEwMiwxMTMsMTMwXSxcInN5c3RlbWF0aWNhbGx5XCI6Wzg1XSxcInJldmlld2VkLlwiOls4Nl0sXCJGaXJzdGx5LFwiOls4N10sXCJ2YXJpb3VzXCI6Wzg4XSxcImRlZmluaXRpb25zXCI6Wzg5XSxcImludHJvZHVjZWQ7XCI6WzkzXSxcInNlY29uZGx5LFwiOls5NF0sXCJlbWVyZ2luZ1wiOls5NV0sXCJ0ZWNobmlxdWVzXCI6Wzk2XSxcImZvclwiOls5N10sXCJpbXBsZW1lbnRhdGlvblwiOls5OV0sXCJkaXNjdXNzZWQ7XCI6WzEwM10sXCJ0aGlyZGx5LFwiOlsxMDRdLFwic29tZVwiOlsxMDVdLFwib3BlblwiOlsxMDZdLFwiaXNzdWVzXCI6WzEwN10sXCJyZWxhdGVkXCI6WzEwOF0sXCJ0b1wiOlsxMDldLFwiZXhwbG9yZWQ7XCI6WzExNF0sXCJmaW5hbGx5LFwiOlsxMTVdLFwibWFqb3JcIjpbMTE3XSxcImNoYWxsZW5nZXNcIjpbMTE4XSxcIndoaWNoXCI6WzExOV0sXCJuZWVkXCI6WzEyMF0sXCJhZGRyZXNzaW5nXCI6WzEyMV0sXCJieVwiOlsxMjJdLFwiY29tbXVuaXR5XCI6WzEyNV0sXCJjb3JyZXNwb25kaW5nXCI6WzEyN10sXCJwb3RlbnRpYWxcIjpbMTI4XSxcInNvbHV0aW9uc1wiOlsxMjldLFwiaW52ZXN0aWdhdGVkLlwiOlsxMzFdfX0sXCJTXCI6W3tcIlR5XCI6MyxcIlVcIjpcImh0dHBzOi8vcmQuc3ByaW5nZXIuY29tL2NvbnRlbnQvcGRmLzEwLjEwMDclMkZzMTA3OTYtMDE0LTk0OTItNy5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9hcnRpY2xlLzEwLjEwMDclMkZzMTA3OTYtMDE0LTk0OTItN1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3JkLnNwcmluZ2VyLmNvbS9hcnRpY2xlLzEwLjEwMDclMkZzMTA3OTYtMDE0LTk0OTItN1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTI3NTA2MjVcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2VwcmludHMudXdlLmFjLnVrLzMwOTQxL1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2Vjb25wYXBlcnMucmVwZWMub3JnL1JlUEVjOnNwcjppbmZvc2Y6djoxNzp5OjIwMTU6aToyOmQ6MTAuMTAwN19zMTA3OTYtMDE0LTk0OTItN1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2lkZWFzLnJlcGVjLm9yZy9hL3Nwci9pbmZvc2YvdjE3eTIwMTVpMmQxMC4xMDA3X3MxMDc5Ni0wMTQtOTQ5Mi03Lmh0bWxcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2pvdXJuYWxzL2lzZi9pc2YxNy5odG1sI0xpWFoxNVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5vcmcvMTAuMTAwNy9zMTA3OTYtMDE0LTk0OTItN1wifV0sXCJWRk5cIjpcIkluZm9ybWF0aW9uIFN5c3RlbXMgRnJvbnRpZXJzXCIsXCJWXCI6MTcsXCJJXCI6MixcIkZQXCI6MjQzLFwiTFBcIjoyNTksXCJET0lcIjpcIjEwLjEwMDcvczEwNzk2LTAxNC05NDkyLTdcIixcIlBSXCI6WzIxMTE2MTk2MjYsMjAzNzc1OTQxNywyMDM4MTk0MjIwLDIxMTkwNDY2NDIsMjEzNDI5NTA1MywyMDY4ODQ5Mjc3LDIxMzk1MzE4NTIsMTc1NTIyNzA2MywyMTY1ODg3NTcyLDE5Njc1NjExOTQsMTk2MzQ4OTkwOCwxOTcyMDEyMTQ3LDI2MDI5NTY2MzAsMjA3NjU4Nzg2MywxOTc5NTE5NDYyLDE4Mzc5ODI5NTMsMTk3Mzc5NDA0MSwyMTI5ODQwNzk2LDIwNTg0MDEyMTIsMjEyMzc3MDE5OCwyMTExNjE5NjI2LDIwMzc3NTk0MTcsMjAzODE5NDIyMCwyMTE5MDQ2NjQyLDIxMzQyOTUwNTMsMjA2ODg0OTI3NywyMTM5NTMxODUyLDE3NTUyMjcwNjMsMjE2NTg4NzU3MiwxOTY3NTYxMTk0LDE5NjM0ODk5MDgsMTk3MjAxMjE0NywyNjAyOTU2NjMwLDIwNzY1ODc4NjMsMTk3OTUxOTQ2MiwxODM3OTgyOTUzLDE5NzM3OTQwNDEsMjEyOTg0MDc5NiwyMDU4NDAxMjEyLDIxMjM3NzAxOThdLFwiQU5GXCI6W3tcIkZOXCI6XCJTaGFuY2FuZ1wiLFwiTE5cIjpcIkxpXCIsXCJTXCI6MX0se1wiRk5cIjpcIkxpIERhXCIsXCJMTlwiOlwiWHVcIixcIlNcIjoyfSx7XCJGTlwiOlwiU2hhbnNoYW5cIixcIkxOXCI6XCJaaGFvXCIsXCJTXCI6M31dLFwiQlZcIjpcIkluZm9ybWF0aW9uIFN5c3RlbXMgRnJvbnRpZXJzXCIsXCJCVFwiOlwiYVwiLFwiUEJcIjpcIktsdXdlciBBY2FkZW1pYyBQdWJsaXNoZXJzXCJ9In0seyJsb2dwcm9iIjotMTYuNjQsImtlc0VudGl0eUlkIjoyMDkwNjUwLCJJZCI6MjU5MTkwMzQ3NiwiVGkiOiJzb2NpYWwgbWVkaWEgbW9iaWxlIGludGVybmV0IHVzZSBhbW9uZyB0ZWVucyBhbmQgeW91bmcgYWR1bHRzIiwiWSI6MjAxMCwiRCI6IjIwMTAtMDItMDMiLCJBQSI6W3siQXVOIjoiYW1hbmRhIGxlbmhhcnQifSx7IkF1TiI6ImtyaXN0ZW4gcHVyY2VsbCJ9LHsiQXVOIjoiYWFyb24gc21pdGgifSx7IkF1TiI6ImthdGhyeW4gemlja3VociJ9XSwiRiI6W3siRk4iOiJzb2NpYWwgbWVkaWEifSx7IkZOIjoieW91bmcgYWR1bHQifSx7IkZOIjoidGhlIGludGVybmV0In0seyJGTiI6ImludGVybmV0IHByaXZhY3kifSx7IkZOIjoiYWR2ZXJ0aXNpbmcifSx7IkZOIjoicG9saXRpY2FsIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiU29jaWFsIE1lZGlhICYgTW9iaWxlIEludGVybmV0IFVzZSBBbW9uZyBUZWVucyBhbmQgWW91bmcgQWR1bHRzXCIsXCJWRk5cIjpcIlwiLFwiUFJcIjpbMTk4NTc0OTA3NCwyMDk5NTU2NjUzLDE1MTk2MzAwMzEsMjEyMTAwMTY5OSwyMDM0ODczNDA4LDIyMzA1MTg4NjUsMTY4OTk5MTc2OSwyMTI5ODEzMDczLDIxMDE4NDM2OTcsMjE1MTc0OTk0MCwyMTA2MTAzODEyLDIwMjg2Nzc2ODAsMjExMjIwNTMwNiwyMTEyOTU3MzM5LDIxMjE1ODMxMTUsMjE2OTI3MzkxNywyMDExNTU0NTIzLDIxMTExMTIyMzgsMjExNzE5ODI2MCwyNjA2ODI2MDMwLDE5ODU3NDkwNzQsMjA5OTU1NjY1MywxNTE5NjMwMDMxLDIxMjEwMDE2OTksMjAzNDg3MzQwOCwyMjMwNTE4ODY1LDE2ODk5OTE3NjksMjEyOTgxMzA3MywyMTAxODQzNjk3LDIxNTE3NDk5NDAsMjEwNjEwMzgxMiwyMDI4Njc3NjgwLDIxMTIyMDUzMDYsMjExMjk1NzMzOSwyMTIxNTgzMTE1LDIxNjkyNzM5MTcsMjAxMTU1NDUyMywyMTExMTEyMjM4LDIxMTcxOTgyNjAsMjYwNjgyNjAzMF0sXCJBTkZcIjpbe1wiRk5cIjpcIkFtYW5kYVwiLFwiTE5cIjpcIkxlbmhhcnRcIixcIlNcIjoxfSx7XCJGTlwiOlwiS3Jpc3RlblwiLFwiTE5cIjpcIlB1cmNlbGxcIixcIlNcIjoyfSx7XCJGTlwiOlwiQWFyb25cIixcIkxOXCI6XCJTbWl0aFwiLFwiU1wiOjN9LHtcIkZOXCI6XCJLYXRocnluXCIsXCJMTlwiOlwiWmlja3VoclwiLFwiU1wiOjR9XSxcIkJUXCI6XCJhXCJ9In0seyJsb2dwcm9iIjotMTYuNjQ2LCJrZXNFbnRpdHlJZCI6MjEwMjkzNiwiSWQiOjIwNDYyMzU0MDQsIlRpIjoiY2xvdWQgY29tcHV0aW5nIGRpc3RyaWJ1dGVkIGludGVybmV0IGNvbXB1dGluZyBmb3IgaXQgYW5kIHNjaWVudGlmaWMgcmVzZWFyY2giLCJZIjoyMDA5LCJEIjoiMjAwOS0wOS0wMSIsIkFBIjpbeyJBdU4iOiJtYXJpb3MgZCBkaWthaWFrb3MifSx7IkF1TiI6ImRpbWl0cmlvcyBrYXRzYXJvcyJ9LHsiQXVOIjoicGFua2FqIG1laHJhIn0seyJBdU4iOiJnZW9yZ2UgcGFsbGlzIn0seyJBdU4iOiJhdGhlbmEgdmFrYWxpIn1dLCJGIjpbeyJGTiI6ImNsb3VkIHRlc3RpbmcifSx7IkZOIjoidXRpbGl0eSBjb21wdXRpbmcifSx7IkZOIjoiY2xvdWQgY29tcHV0aW5nIHNlY3VyaXR5In0seyJGTiI6InNvZnR3YXJlIGFzIGEgc2VydmljZSJ9LHsiRk4iOiJzZXJ2aWNlcyBjb21wdXRpbmcifSx7IkZOIjoicHJvdmlzaW9uaW5nIn0seyJGTiI6ImRhdGEgYXMgYSBzZXJ2aWNlIn0seyJGTiI6ImNsb3VkIGNvbXB1dGluZyJ9LHsiRk4iOiJjb21wdXRlciBzZWN1cml0eSJ9LHsiRk4iOiJ3b3JsZCB3aWRlIHdlYiJ9LHsiRk4iOiJjb21wdXRlciBuZXR3b3JrIn0seyJGTiI6ImNvbXB1dGVyIHNjaWVuY2UifV0sIkUiOiJ7XCJETlwiOlwiQ2xvdWQgQ29tcHV0aW5nOiBEaXN0cmlidXRlZCBJbnRlcm5ldCBDb21wdXRpbmcgZm9yIElUIGFuZCBTY2llbnRpZmljIFJlc2VhcmNoXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6MTcyLFwiSW52ZXJ0ZWRJbmRleFwiOntcIkNsb3VkXCI6WzBdLFwiY29tcHV0aW5nXCI6WzEsNjAsNzMsMTQzXSxcImlzXCI6WzJdLFwiYVwiOlszLDIxLDM3LDExNV0sXCJkaXNydXB0aXZlXCI6WzRdLFwidGVjaG5vbG9neVwiOls1LDE2OF0sXCJ3aXRoXCI6WzZdLFwicHJvZm91bmRcIjpbN10sXCJpbXBsaWNhdGlvbnNcIjpbOF0sXCJub3RcIjpbOV0sXCJvbmx5XCI6WzEwXSxcImZvclwiOlsxMSwxNl0sXCJJbnRlcm5ldFwiOlsxMiwxMjddLFwic2VydmljZXNcIjpbMTMsNjgsMTI5XSxcImJ1dFwiOlsxNF0sXCJhbHNvXCI6WzE1XSxcInRoZVwiOlsxNywyOCwxNTcsMTYwXSxcIklUXCI6WzE4LDQ0XSxcInNlY3RvclwiOlsxOV0sXCJhc1wiOlsyMCwzNiwxMzFdLFwid2hvbGUuXCI6WzIyXSxcIkl0c1wiOlsyM10sXCJlbWVyZ2VuY2VcIjpbMjRdLFwicHJvbWlzZXNcIjpbMjVdLFwidG9cIjpbMjYsODUsMTE4LDE2NV0sXCJzdHJlYW1saW5lXCI6WzI3XSxcIm9uLWRlbWFuZFwiOlsyOV0sXCJwcm92aXNpb25pbmdcIjpbMzBdLFwib2ZcIjpbMzEsNDEsNTgsNjcsMTU2XSxcInNvZnR3YXJlLFwiOlszMl0sXCJoYXJkd2FyZSxcIjpbMzNdLFwiYW5kXCI6WzM0LDQ3LDU2LDYzLDY5LDc1LDg4LDkwLDEwNCwxMzcsMTU5XSxcImRhdGFcIjpbMzUsNzAsOThdLFwic2VydmljZSxcIjpbMzhdLFwiYWNoaWV2aW5nXCI6WzM5XSxcImVjb25vbWllc1wiOls0MF0sXCJzY2FsZVwiOls0Ml0sXCJpblwiOls0Myw3MSwxNzBdLFwic29sdXRpb25zJ1wiOls0NV0sXCJkZXBsb3ltZW50XCI6WzQ2XSxcIm9wZXJhdGlvbi5cIjpbNDhdLFwiVGhpc1wiOls0OV0sXCJpc3N1ZSdzXCI6WzUwXSxcImFydGljbGVzXCI6WzUxXSxcInRhY2tsZVwiOls1Ml0sXCJ0b3BpY3NcIjpbNTNdLFwiaW5jbHVkaW5nXCI6WzU0XSxcImFyY2hpdGVjdHVyZVwiOls1NV0sXCJtYW5hZ2VtZW50XCI6WzU3XSxcImNsb3VkXCI6WzU5LDcyLDEyMCwxNDIsMTQ3XSxcImluZnJhc3RydWN0dXJlcyxcIjpbNjEsNzRdLFwiU2FhU1wiOls2Ml0sXCJJYWFTXCI6WzY0XSxcImFwcGxpY2F0aW9ucyxcIjpbNjVdLFwiZGlzY292ZXJ5XCI6WzY2XSxcImNyb3NzLXBsYXRmb3JtXCI6Wzc2XSxcImludGVyb3BlcmFiaWxpdHkuXCI6Wzc3XSxcIlN0aWxsLFwiOls3OF0sXCJzZXZlcmFsXCI6Wzc5XSxcIm91dHN0YW5kaW5nXCI6WzgwXSxcImlzc3Vlc1wiOls4MSw5NV0sXCJleGlzdCxcIjpbODJdLFwicGFydGljdWxhcmx5XCI6WzgzXSxcInJlbGF0ZWRcIjpbODRdLFwiU0xBcyxcIjpbODZdLFwic2VjdXJpdHlcIjpbODddLFwicHJpdmFjeSxcIjpbODldLFwicG93ZXJcIjpbOTFdLFwiZWZmaWNpZW5jeS5cIjpbOTJdLFwiT3RoZXJcIjpbOTNdLFwib3BlblwiOls5NF0sXCJpbmNsdWRlXCI6Wzk2XSxcIm93bmVyc2hpcCxcIjpbOTddLFwidHJhbnNmZXJcIjpbOTldLFwiYm90dGxlbmVja3MsXCI6WzEwMF0sXCJwZXJmb3JtYW5jZVwiOlsxMDFdLFwidW5wcmVkaWN0YWJpbGl0eSxcIjpbMTAyXSxcInJlbGlhYmlsaXR5LFwiOlsxMDNdLFwic29mdHdhcmVcIjpbMTA1XSxcImxpY2Vuc2luZ1wiOlsxMDZdLFwiaXNzdWVzLlwiOlsxMDddLFwiRmluYWxseSxcIjpbMTA4XSxcImhvc3RlZFwiOlsxMDldLFwiYXBwbGljYXRpb25zJ1wiOlsxMTBdLFwiYnVzaW5lc3NcIjpbMTExXSxcIm1vZGVsc1wiOlsxMTJdLFwibXVzdFwiOlsxMTMsMTYzXSxcInNob3dcIjpbMTE0XSxcImNsZWFyXCI6WzExNl0sXCJwYXRod2F5XCI6WzExN10sXCJtb25ldGl6aW5nXCI6WzExOV0sXCJjb21wdXRpbmcuXCI6WzEyMV0sXCJTZXZlcmFsXCI6WzEyMl0sXCJjb21wYW5pZXNcIjpbMTIzXSxcImhhdmVcIjpbMTI0XSxcImFscmVhZHlcIjpbMTI1XSxcImJ1aWx0XCI6WzEyNl0sXCJjb25zdW1lclwiOlsxMjhdLFwic3VjaFwiOlsxMzBdLFwic2VhcmNoLFwiOlsxMzJdLFwic29jaWFsXCI6WzEzM10sXCJuZXR3b3JraW5nLFwiOlsxMzRdLFwiV2ViXCI6WzEzNV0sXCJlbWFpbCxcIjpbMTM2XSxcIm9ubGluZVwiOlsxMzhdLFwiY29tbWVyY2VcIjpbMTM5XSxcInRoYXRcIjpbMTQwXSxcInVzZVwiOlsxNDFdLFwiaW5mcmFzdHJ1Y3R1cmUuXCI6WzE0NF0sXCJBYm92ZVwiOlsxNDVdLFwiYWxsLFwiOlsxNDZdLFwiY29tcHV0aW5nJ3NcIjpbMTQ4XSxcInN0aWxsXCI6WzE0OV0sXCJ1bmtub3duXCI6WzE1MF0sXCJcXFwia2lsbGVyXCI6WzE1MV0sXCJhcHBsaWNhdGlvblxcXCJcIjpbMTUyXSxcIndpbGxcIjpbMTUzXSxcImRldGVybWluZVwiOlsxNTRdLFwibWFueVwiOlsxNTVdLFwiY2hhbGxlbmdlc1wiOlsxNThdLFwic29sdXRpb25zXCI6WzE2MV0sXCJ3ZVwiOlsxNjJdLFwiZGV2ZWxvcFwiOlsxNjRdLFwibWFrZVwiOlsxNjZdLFwidGhpc1wiOlsxNjddLFwid29ya1wiOlsxNjldLFwicHJhY3RpY2UuXCI6WzE3MV19fSxcIlNcIjpbe1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2llZWV4cGxvcmUuaWVlZS5vcmcvYWJzdHJhY3QvZG9jdW1lbnQvNTIzMzYwN1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL3d3dy5jb21wdXRlci5vcmcvY3NkbC9tYWdzL2ljLzIwMDkvMDUvbWljMjAwOTA1MDAxMC5odG1sXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kbC5hY20ub3JnL2NpdGF0aW9uLmNmbT9pZD0xNjM4NjkxXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly95YWRkYS5pY20uZWR1LnBsL3lhZGRhL2VsZW1lbnQvYndtZXRhMS5lbGVtZW50LmllZWUtMDAwMDA1MjMzNjA3XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9lbi5qb3VybmFscy5zaWQuaXIvVmlld1BhcGVyLmFzcHg/SUQ9MzAwOTU4XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vd3d3LnNpZC5pci9Fbi9Kb3VybmFsL1ZpZXdQYXBlci5hc3B4P0lEPTMwMDk1OFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZG9pLmllZWVjb21wdXRlcnNvY2lldHkub3JnLzEwLjExMDkvTUlDLjIwMDkuMTAzXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9qb3VybmFscy9pbnRlcm5ldC9pbnRlcm5ldDEzLmh0bWwjRGlrYWlha29zS01QVjA5XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZG9pLm9yZy8xMC4xMTA5L01JQy4yMDA5LjEwM1wifSx7XCJUeVwiOjAsXCJVXCI6XCJodHRwOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MTYzODU4OC4xNjM4NjkxXCJ9XSxcIlZGTlwiOlwiSUVFRSBJbnRlcm5ldCBDb21wdXRpbmdcIixcIlZcIjoxMyxcIklcIjo1LFwiRlBcIjoxMCxcIkxQXCI6MTMsXCJET0lcIjpcIjEwLjExMDkvTUlDLjIwMDkuMTAzXCIsXCJQUlwiOlsyMTE0Mjk2NTYxLDIxMzE2Mjk4NTcsMjI3NTUzMDg1NiwyMzM3OTY5NDI1LDE5NzczNjc0MzEsMjAxMjc1MzgzNywyMTMxNjQ2MDczLDIxNTQxNTgxMDUsMjE0Njg0MDE1MCwyMTA5MDI2NzQ3LDE5OTM5NDk1NDEsMjA1ODQxMDQ2MCwyMTc3ODAyNDQ1LDI1NjkzNzgxNDAsMjEwNDcyNTQ3MCwxOTY5NzExNjEwLDIwNDUyODc0MTQsMjAwNTEzMzI1NiwyMDk4NjExNDE5LDIxMDQ1NjA4NTUsMjExNDI5NjU2MSwyMTMxNjI5ODU3LDIyNzU1MzA4NTYsMjMzNzk2OTQyNSwxOTc3MzY3NDMxLDIwMTI3NTM4MzcsMjEzMTY0NjA3MywyMTU0MTU4MTA1LDIxNDY4NDAxNTAsMjEwOTAyNjc0NywxOTkzOTQ5NTQxLDIwNTg0MTA0NjAsMjE3NzgwMjQ0NSwyNTY5Mzc4MTQwLDIxMDQ3MjU0NzAsMTk2OTcxMTYxMCwyMDQ1Mjg3NDE0LDIwMDUxMzMyNTYsMjA5ODYxMTQxOSwyMTA0NTYwODU1XSxcIkFORlwiOlt7XCJGTlwiOlwiTWFyaW9zIEQuXCIsXCJMTlwiOlwiRGlrYWlha29zXCIsXCJTXCI6MX0se1wiRk5cIjpcIkRpbWl0cmlvc1wiLFwiTE5cIjpcIkthdHNhcm9zXCIsXCJTXCI6Mn0se1wiRk5cIjpcIlBhbmthalwiLFwiTE5cIjpcIk1laHJhXCIsXCJTXCI6M30se1wiRk5cIjpcIkdlb3JnZVwiLFwiTE5cIjpcIlBhbGxpc1wiLFwiU1wiOjR9LHtcIkZOXCI6XCJBdGhlbmFcIixcIkxOXCI6XCJWYWthbGlcIixcIlNcIjo1fV0sXCJCVlwiOlwiSUVFRSBJbnRlcm5ldCBDb21wdXRpbmdcIixcIkJUXCI6XCJhXCIsXCJQQlwiOlwiSUVFRVwifSJ9LHsibG9ncHJvYiI6LTE2LjY1Niwia2VzRW50aXR5SWQiOjIxMjI5MzQsIklkIjoyMDEyMDk1MjA2LCJUaSI6ImludGVybmV0IHRyYWZmaWMgY2xhc3NpZmljYXRpb24gdXNpbmcgYmF5ZXNpYW4gYW5hbHlzaXMgdGVjaG5pcXVlcyIsIlkiOjIwMDUsIkQiOiIyMDA1LTA2LTA2IiwiUklkIjpbMjYxMTgzMjE5OCwyMTI1MDU1MjU5LDE1MDQ2OTQ4MzYsMjE0ODI3NTQ3NywxNTUwMjA2MzI0LDIxNDQwOTg1ODksMTUyMTU1MzU0OCwxNjYxODcxMDE1LDE5MTIxMjM0MDcsMjE3MTYzNDU0OCwxNDgxMjc3NjQ3LDIxMDMzMTI4NjQsMTUyNDQ5NjA3OCwyMDM1NjU0NzE2LDI4ODUxMTMxNTksMjAyMDg2NTQ2LDE4NjA2NTE1MjEsMjE1MDM5ODU3NywxNTk4MDk3NTIxLDE1MTM4ODYzODAsMjE2NDg2NzM4NCwyMTM5Mzg2MjMzLDE0OTUyOTA0OCwxOTk3NjEwMjY0XSwiQUEiOlt7IkF1TiI6ImFuZHJldyB3IG1vb3JlIn0seyJBdU4iOiJkZW5pcyB6dWV2In1dLCJGIjpbeyJGTiI6ImJheWVzaWFuIHByb2dyYW1taW5nIn0seyJGTiI6InRyYWZmaWMgY2xhc3NpZmljYXRpb24ifSx7IkZOIjoiaW50ZXJuZXQgdHJhZmZpYyJ9LHsiRk4iOiJiYXllcyBlc3RpbWF0b3IifSx7IkZOIjoiZXN0aW1hdG9yIn0seyJGTiI6Im5haXZlIGJheWVzIGNsYXNzaWZpZXIifSx7IkZOIjoiY2F0ZWdvcml6YXRpb24ifSx7IkZOIjoicXVhbGl0eSBvZiBzZXJ2aWNlIn0seyJGTiI6Im1hY2hpbmUgbGVhcm5pbmcifSx7IkZOIjoicGF0dGVybiByZWNvZ25pdGlvbiJ9LHsiRk4iOiJhcnRpZmljaWFsIGludGVsbGlnZW5jZSJ9LHsiRk4iOiJjb21wdXRlciBzY2llbmNlIn1dLCJFIjoie1wiRE5cIjpcIkludGVybmV0IHRyYWZmaWMgY2xhc3NpZmljYXRpb24gdXNpbmcgYmF5ZXNpYW4gYW5hbHlzaXMgdGVjaG5pcXVlc1wiLFwiSUFcIjp7XCJJbmRleExlbmd0aFwiOjE4MixcIkludmVydGVkSW5kZXhcIjp7XCJBY2N1cmF0ZVwiOlswXSxcInRyYWZmaWNcIjpbMSwzOSwxNzAsMTc2XSxcImNsYXNzaWZpY2F0aW9uXCI6WzIsMTA4XSxcImlzXCI6WzMsMTI0XSxcIm9mXCI6WzQsMjAsNjgsODIsODUsOTQsMTQ2LDE2MywxNjgsMTc1XSxcImZ1bmRhbWVudGFsXCI6WzVdLFwiaW1wb3J0YW5jZVwiOls2XSxcInRvXCI6WzcsMTUsMjIsMzcsNTQsMTAxLDExOSwxNzFdLFwibnVtZXJvdXNcIjpbOF0sXCJvdGhlclwiOls5XSxcIm5ldHdvcmtcIjpbMTAsNDhdLFwiYWN0aXZpdGllcyxcIjpbMTFdLFwiZnJvbVwiOlsxMiwxOCwxNDNdLFwic2VjdXJpdHlcIjpbMTNdLFwibW9uaXRvcmluZ1wiOlsxNF0sXCJhY2NvdW50aW5nLFwiOlsxNl0sXCJhbmRcIjpbMTcsMTA5LDE0OV0sXCJRdWFsaXR5XCI6WzE5XSxcIlNlcnZpY2VcIjpbMjFdLFwicHJvdmlkaW5nXCI6WzIzXSxcIm9wZXJhdG9yc1wiOlsyNF0sXCJ3aXRoXCI6WzI1LDcxLDkxLDExMCwxNDBdLFwidXNlZnVsXCI6WzI2XSxcImZvcmVjYXN0c1wiOlsyN10sXCJmb3JcIjpbMjhdLFwibG9uZy10ZXJtXCI6WzI5XSxcInByb3Zpc2lvbmluZy5cIjpbMzBdLFwiV2VcIjpbMzEsNzYsMTU2XSxcImFwcGx5XCI6WzMyXSxcImFcIjpbMzMsNTUsMTI1LDE2MF0sXCJOYWl2ZVwiOlszNCw1Nyw5NV0sXCJCYXllc1wiOlszNSw1OCw3NCw5Nl0sXCJlc3RpbWF0b3JcIjpbMzYsOTddLFwiY2F0ZWdvcml6ZVwiOlszOF0sXCJieVwiOls0MF0sXCJhcHBsaWNhdGlvbi5cIjpbNDFdLFwiVW5pcXVlbHksXCI6WzQyXSxcIm91clwiOls0MywxMzUsMTQ3LDE2NF0sXCJ3b3JrXCI6WzQ0XSxcImNhcGl0YWxpemVzXCI6WzQ1XSxcIm9uXCI6WzQ2LDEwNl0sXCJoYW5kLWNsYXNzaWZpZWRcIjpbNDddLFwiZGF0YSxcIjpbNDksMTM5XSxcInVzaW5nXCI6WzUwLDE1MywxNjYsMTc3XSxcIml0XCI6WzUxXSxcImFzXCI6WzUyLDE1OV0sXCJpbnB1dFwiOls1M10sXCJzdXBlcnZpc2VkXCI6WzU2XSxcImVzdGltYXRvci5cIjpbNTksNzVdLFwiSW5cIjpbNjBdLFwidGhpc1wiOls2MSw4NiwxMTcsMTIzLDE1OF0sXCJwYXBlclwiOls2Ml0sXCJ3ZVwiOls2Myw5OCwxMTRdLFwiaWxsdXN0cmF0ZVwiOls2NCw3OF0sXCJ0aGVcIjpbNjUsNzIsNzksOTIsMTczXSxcImhpZ2hcIjpbNjZdLFwibGV2ZWxcIjpbNjddLFwiYWNjdXJhY3lcIjpbNjksODEsMTA1XSxcImFjaGlldmFibGVcIjpbNzBdLFwiXFxcXE5haXZlXCI6WzczXSxcImZ1cnRoZXJcIjpbNzddLFwiaW1wcm92ZWRcIjpbODBdLFwicmVmaW5lZFwiOls4M10sXCJ2YXJpYW50c1wiOls4NF0sXCJlc3RpbWF0b3IuT3VyXCI6Wzg3XSxcInJlc3VsdHNcIjpbODhdLFwiaW5kaWNhdGVcIjpbODldLFwidGhhdFwiOls5MCwxMzFdLFwic2ltcGxlc3RcIjpbOTNdLFwiYXJlXCI6Wzk5XSxcImFibGVcIjpbMTAwXSxcImFjaGlldmVcIjpbMTAyLDEzMl0sXCJhYm91dFwiOlsxMDNdLFwiNjUlXCI6WzEwNF0sXCJwZXItZmxvd1wiOlsxMDddLFwidHdvXCI6WzExMV0sXCJwb3dlcmZ1bFwiOlsxMTIsMTYxXSxcInJlZmluZW1lbnRzXCI6WzExM10sXCJjYW5cIjpbMTE1XSxcImltcHJvdmVcIjpbMTE2XSxcInZhbHVlXCI6WzExOF0sXCJiZXR0ZXJcIjpbMTIwXSxcInRoYW5cIjpbMTIxXSxcIjk1JTtcIjpbMTIyXSxcInZhc3RcIjpbMTI2XSxcImltcHJvdmVtZW50XCI6WzEyN10sXCJvdmVyXCI6WzEyOF0sXCJ0cmFkaXRpb25hbFwiOlsxMjldLFwidGVjaG5pcXVlc1wiOlsxMzBdLFwiNTAtLTcwJS5cIjpbMTMzXSxcIldoaWxlXCI6WzEzNF0sXCJ0ZWNobmlxdWVcIjpbMTM2XSxcInVzZXNcIjpbMTM3XSxcInRyYWluaW5nXCI6WzEzOCwxNDhdLFwiY2F0ZWdvcmllc1wiOlsxNDFdLFwiZGVyaXZlZFwiOlsxNDJdLFwicGFja2V0LWNvbnRlbnQsXCI6WzE0NF0sXCJhbGxcIjpbMTQ1XSxcInRlc3RpbmdcIjpbMTUwXSxcIndhc1wiOlsxNTFdLFwiZG9uZVwiOlsxNTJdLFwiaGVhZGVyLWRlcml2ZWRcIjpbMTU0XSxcImRpc2NyaW1pbmF0b3JzLlwiOlsxNTVdLFwiZW1waGFzaXplXCI6WzE1N10sXCJhc3BlY3RcIjpbMTYyXSxcImFwcHJvYWNoOlwiOlsxNjVdLFwic2FtcGxlc1wiOlsxNjddLFwid2VsbC1rbm93blwiOlsxNjldLFwiYWxsb3dcIjpbMTcyXSxcImNhdGVnb3JpemF0aW9uXCI6WzE3NF0sXCJjb21tb25seVwiOlsxNzhdLFwiYXZhaWxhYmxlXCI6WzE3OV0sXCJpbmZvcm1hdGlvblwiOlsxODBdLFwiYWxvbmUuXCI6WzE4MV19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jbC5jYW0uYWMudWsvfmF3bTIyL3B1YmxpY2F0aW9ucy9tb29yZTIwMDVpbnRlcm5ldC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL2l0ay5pbHN0dS5lZHUvZmFjdWx0eS95dGFuZy90cmFmZmljL1RDLUJheWVzaWFuLVNpZ21ldHJpY3MwNS5wZGZcIn0se1wiVHlcIjoxLFwiVVwiOlwiaHR0cDovL2RibHAudW5pLXRyaWVyLmRlL2RiL2NvbmYvc2lnbWV0cmljcy9zaWdtZXRyaWNzMjAwNS5odG1sI01vb3JlWjA1XCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHBzOi8vZGwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/aWQ9MTA2NDIyMFwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5hY20ub3JnLzEwLjExNDUvMTA2NDIxMi4xMDY0MjIwXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9wb3J0YWwuYWNtLm9yZy9jaXRhdGlvbi5jZm0/ZG9pZD0xMDcxNjkwLjEwNjQyMjBcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RsLmFjbS5vcmcvY2l0YXRpb24uY2ZtP2lkPTEwNjQyMjBcIn0se1wiVHlcIjowLFwiVVwiOlwiaHR0cDovL2RvaS5hY20ub3JnLzEwLjExNDUvMTA2NDIxMi4xMDY0MjIwXCJ9XSxcIlZGTlwiOlwiTWVhc3VyZW1lbnQgYW5kIE1vZGVsaW5nIG9mIENvbXB1dGVyIFN5c3RlbXNcIixcIlZTTlwiOlwiU0lHTUVUUklDU1wiLFwiVlwiOjMzLFwiSVwiOjEsXCJGUFwiOjUwLFwiTFBcIjo2MCxcIkRPSVwiOlwiMTAuMTE0NS8xMDY0MjEyLjEwNjQyMjBcIixcIkNDXCI6e1wiMTQ5NTI5MDQ4XCI6W1wiUGFzc2l2ZWx5LWNvbGxlY3RlZCBwYWNrZXQtaGVhZGVyIHRyYWNlcywgc3VjaCBhcyB0aG9zZSBwZXJmb3JtZWQgYnkgTkxBTlIvTU5BWzddIGFuZCBXQU5EWzhdLCBhcmUgY29tbW9ubHkgYXZhaWxhYmxlIGFuZCBvdmVyY29tZSBpc3N1ZXMgb2YgY29uZmlkZW50aWFsaXR5IGFuZCBwcml2YWN5LlwiLFwiV2hpbGUgbm90IGNvbnNpZGVyaW5nIHRoZSB3aWRlciB1c2Ugb2Ygam9pbnQgZGlzdHJpYnV0aW9ucyBmb3IgaWRlbnRpZnlpbmcgY2xhc3NlcyBvZiB0cmFmZmljLCBDbGFmZnkgWzddIGRpZCBvYnNlcnZlIHRoYXQgRE5TIHRyYWZmaWMgd2FzIGNsZWFybHkgaWRlbnRpZmlhYmxlIHVzaW5nIHRoZSBqb2ludC1kaXN0cmlidXRpb24gb2YgZmxvdy1kdXJhdGlvbiBhbmQgdGhlIG51bWJlciBvZiBwYWNrZXRzIHRyYW5zZmVycmVkLlwiXSxcIjIwMjA4NjU0NlwiOltcIlRocm91Z2hvdXQgdGhpcyBzdHVkeSB3ZSBoYXZlIHVzZWQgZGF0YSBjb2xsZWN0ZWQgYnkgdGhlIGhpZ2hwZXJmb3JtYW5jZSBuZXR3b3JrIG1vbml0b3IgZGVzY3JpYmVkIGluIFsxNF0uXCJdLFwiMTQ4MTI3NzY0N1wiOltcIlsxMV0gc2VlayB0byBpZGVudGlmeSB0cmFmZmljIHdpdGggc2ltaWxhciBvYnNlcnZhYmxlIHByb3BlcnRpZXMgYW5kIGFwcGx5IGFuIHVudHJhaW5lZCBjbGFzc2lmaWVyIHRvIHRoaXMgcHJvYmxlbS5cIl0sXCIxNTEzODg2MzgwXCI6W1wiWzEzXSBpcyBpbnRlbmRlZCB0byBwcm92aWRlIGFjY3VyYXRlIGluZm9ybWF0aW9uIGZvciB0aGVpciBzaW11bGF0aW9uIHdvcmsuXCJdLFwiMTUyMTU1MzU0OFwiOltcIlRoaXMgbGVhZHMgdG8gdHJhZGl0aW9uYWwgdGVjaG5pcXVlcyBmb3IgdHJhZmZpYy9mbG93IGNsYXNzaWZpY2F0aW9uIHRoYXQgYXJlIG9mdGVuIG5vLW1vcmUgYWNjdXJhdGUgdGhhbiA1MOKAkzcwJSBbMSwgMiwgM10uXCJdLFwiMTUyNDQ5NjA3OFwiOltcIlRhYmxlIDEgZ2l2ZXMgYSBmZXcgZXhhbXBsZXMgZHJhd24gZnJvbSB0aGUgMjQ4IHBlci1mbG93IGRpc2NyaW1pbmF0b3JzIHRoYXQgd2UgdXNlLCB0aGUgZnVsbCBsaXN0IGlzIGdpdmVuIGluIFsxNV0uXCIsXCJGdWxsIGRldGFpbHMgZW5hYmxpbmcgcmVhZGVycyB0byBkb3dubG9hZCBvdXIgdHJhaW5pbmcgc2V0cyBhcmUgcHJvdmlkZWQgaW4gWzE1XS5cIl0sXCIxNTUwMjA2MzI0XCI6W1wiRXhhbXBsZXMgaWxsdXN0cmF0aW5nIHRoZSB1c2Ugb2YgQmF5ZXMgdG9vbHMgaW4gdmFyaW91cyBlbGRzIGluY2x1ZGUgdGV4dCByZWNvZ25pdGlvbiwgbWVkaWNhbCBzY2llbmNlcyBhbmQgaW4gYXN0cm9ub215IChlLmcuLCBbMTgsICAxOSAsIDIwXSkuXCJdLFwiMTU5ODA5NzUyMVwiOltcIk90aGVyIHVzZXJzIG9mIGNsYXNzaWNhdGlvbiBtYXkgaGF2ZSBib3RoIHNpbXBsZXIgZGVuaXRpb25zLCBlLmcuLCBOb3JtYWwgdmVyc3VzIE1hbGljaW91cywgb3IgbW9yZSBjb21wbGV4IGRlbml0aW9ucywgZS5nLiwgdGhlIGlkZW50aWNhdGlvbiBvZiBzcGVjaWMgYXBwbGljYXRpb25zIG9yIHNwZWNpYyBUQ1AgaW1wbGVtZW50YXRpb25zIFsgMTcgXS5cIl0sXCIxNjYxODcxMDE1XCI6W1wiQXMgbWVudGlvbmVkIGluIHRoZSBwcmV2aW91cyBzZWN0aW9uLCB3ZSB3aWxsIGFsc28gY29uc2lkZXIgYSB2ZXJ5IHByb21pc2luZyBtZXRob2Qgb2YgZmVhdHVyZSBzZWxlY3Rpb24gYW5kIHJlZHVuZGFuY3kgcmVkdWN0aW9uLCBGYXN0IENvcnJlbGF0aW9uLUJhc2VkIEZpbHRlciAoRkNCRikgZGVzY3JpYmVkIGluIFsyMV0uXCIsXCJJbiB0aGlzIHBhcGVyLCB3ZSB3aWxsIGJlIHVzaW5nIEZhc3QgQ29ycmVsYXRpb24tQmFzZWQgRmlsdGVyIChGQ0JGKSwgZGVzY3JpYmVkIGluIFsyMV0sIGFzIHdlbGwgYXMgYSB2YXJpYXRpb24gb2YgYSB3cmFwcGVyIG1ldGhvZCBpbiBkZXRlcm1pbmluZyB0aGUgdmFsdWUgb2YgdGhlIHRocmVzaG9sZCAoZGVzY3JpYmVkIGxhdGVyIGluIHRoaXMgU2VjdGlvbikuXCIsXCJUaGUgRkNCRiBmaWx0ZXIgbWV0aG9kIHBlcmZvcm1zIHZlcnkgd2VsbCBpbiBpbXByb3ZpbmcgdGhlIHBlcmZvcm1hbmNlIG9mIE5hxLHMiHZlIEJheWVzIHdoZW4gY29udHJhc3RlZCB3aXRoIG90aGVyIHJlbGF0ZWQgdGVjaG5pcXVlcyBbMjFdLlwiLFwiQWNjb3JkaW5nIHRvIFsyMV0sIGEgZGlzY3JpbWluYXRvciBpcyBnb29kIGlmIGl0IGlzIHJlbGV2YW50IHRvIHRoZSBjbGFzcyBjb25jZXB0IGJ1dCBpdCBpcyBub3QgcmVkdW5kYW50IHRvIGFueSBvZiB0aGUgb3RoZXIgcmVsZXZhbnQgZmVhdHVyZXMuXCIsXCJNb3Jlb3ZlciwgWzIxXSBzaG93IHRoYXQgdGhlIGluZm9ybWF0aW9uIGdhaW4gaXMgc3ltbWV0cmljIGZvciByYW5kb20gdmFyaWFibGVzIFggYW5kIFkgLlwiLFwiQnkgdGhpcyBwb2ludCwgRXF1YXRpb24gKDEyKSBoYXMgb25seSBiZWVuIGRlZmluZWQgZm9yIG5vbWluYWwgdmFsdWVzICwgdGhlcmVmb3JlIEZDQkYgY29udGludW91cyBkaXNjcmltaW5hdG9ycyBkaXNjcmV0ZSBiZWZvcmUgdGhlIGNvcmUgYW5hbHlzaXMgWzIxXS5cIixcIkhvd2V2ZXIsIFsyMV0gbm90ZSB0aGF0IHRoaXMgbWV0aG9kIGlzIHF1aXRlIGNvbXB1dGF0aW9uYWxseSBleHBlbnNpdmUgYW5kIHNvIHRoZSBzb2x1dGlvbiB0aGV5IHByb3Bvc2UgY29uc2lkZXJzIFNVIHZhbHVlcywgYmVjYXVzZSBzeW1tZXRyaWNhbCB1bmNlcnRhaW50eSBjYXB0dXJlcyBwYWlyd2lzZSBjcm9zcyBjb3JyZWxhdGlvbiBpbmZvcm1hdGlvbi5cIl0sXCIxODYwNjUxNTIxXCI6W1wiVGhpcyBsZWFkcyB0byB0cmFkaXRpb25hbCB0ZWNobmlxdWVzIGZvciB0cmFmZmljL2Zsb3cgY2xhc3NpZmljYXRpb24gdGhhdCBhcmUgb2Z0ZW4gbm8tbW9yZSBhY2N1cmF0ZSB0aGFuIDUw4oCTNzAlIFsxLCAyLCAzXS5cIixcIkZvciBleGFtcGxlLCB0aGUgbW9zdCBjb21tb24gdGVjaG5pcXVlIGZvciB0aGUgaWRlbnRpZmljYXRpb24gb2YgSW50ZXJuZXQgbmV0d29yayBhcHBsaWNhdGlvbnMgdGhyb3VnaCB0cmFmZmljIG1vbml0b3JpbmcgcmVsaWVzIG9uIHRoZSB1c2Ugb2Ygd2VsbCBrbm93biBwb3J0czogYW4gYW5hbHlzaXMgb2YgdGhlIGhlYWRlcnMgb2YgcGFja2V0cyBpcyB1c2VkIHRvIGlkZW50aWZ5IHRyYWZmaWMgYXNzb2NpYXRlZCB3aXRoIGEgcGFydGljdWxhciBwb3J0IGFuZCB0aHVzIG9mIGEgcGFydGljdWxhciBhcHBsaWNhdGlvbiBbMSwgMl0uXCIsXCJTeW1tZXRyaWNhbCB1bmNlcnRhaW50eSAoMTIpIHRha2VzIHZhbHVlcyBpbiBbMCwgMV0sIHdoZXJlIHRoZSB2YWx1ZSAxIG1lYW5zIHRoYXQgdGhlIGtub3dsZWRnZSBvZiBkaXNjcmltaW5hdG9yIHZhbHVlcyBpbmR1Y2VzIHRoZSB2YWx1ZSBvZiB0aGUgb3RoZXIsIHdoaWxlIDAgc3VnZ2VzdHMgdGhhdCBhdHRyaWJ1dGVzIFggYW5kIFkgYXJlIGluZGVwZW5kZW50LlwiXSxcIjE5MTIxMjM0MDdcIjpbXCJUaGUgc2VsZWN0aW9uIG9mIHRoZSBzdGF0aXN0aWNhbCBiYW5kd2lkdGgsIGFzIGRlbmVkIGluIHRoZSBwcmV2aW91cyBwYXJhZ3JhcGgsIHBsYXlzIGFuIGltcG9ydGFudCByb2xlIGluIHRoZSBhY2N1cmFjeSBvZiB0aGUgbW9kZWwgYW5kIHNvbWUgbmljZSB0aGVvcmV0aWNhbCBwcm9wZXJ0aWVzIGFyZSBtZW50aW9uZWQgaW4gWyAyNCBdLlxcdTAwMWJBbGwgdG9vbHMgdXNlZCBpbiB0aGlzIHBhcGVyIGFyZSBkZXNjcmliZWQgaW4gc2VjdGlvbiA1LiBJbiBbIDI0IF0sIGl0IGlzIHNob3duIHRoYXQgdGhlIEtlcm5lbCBFc3RpbWF0aW9uIG1ldGhvZCBwZXJmb3JtcyBtdWNoIGJldHRlciBpbiBzaXR1YXRpb25zIHdoZW4gdGhlIG5vcm1hbGl0eSBhc3N1bXB0aW9uIGlzIHN0cm9uZ2x5XCJdLFwiMTk5NzYxMDI2NFwiOltcIkV4YW1wbGVzIGlsbHVzdHJhdGluZyB0aGUgdXNlIG9mIEJheWVzIHRvb2xzIGluIHZhcmlvdXMgZWxkcyBpbmNsdWRlIHRleHQgcmVjb2duaXRpb24sIG1lZGljYWwgc2NpZW5jZXMgYW5kIGluIGFzdHJvbm9teSAoZS5nLiwgWzE4LCAxOSwgIDIwIF0pLlwiXSxcIjIwMzU2NTQ3MTZcIjpbXCJQYXNzaXZlbHktY29sbGVjdGVkIHBhY2tldC1oZWFkZXIgdHJhY2VzLCBzdWNoIGFzIHRob3NlIHBlcmZvcm1lZCBieSBOTEFOUi9NTkFbN10gYW5kIFdBTkRbOF0sIGFyZSBjb21tb25seSBhdmFpbGFibGUgYW5kIG92ZXJjb21lIGlzc3VlcyBvZiBjb25maWRlbnRpYWxpdHkgYW5kIHByaXZhY3kuXCIsXCJbOF0gbWFrZSBlZmZlY3RpdmUgdXNlIG9mIHRoZSBwYWNrZXQtc2l6ZSBwcm9maWxlIG9mIHBhcnRpY3VsYXIgYXBwbGljYXRpb25zLlwiXSxcIjIxMDMzMTI4NjRcIjpbXCJPdGhlciBhdXRob3JzIHRoYXQgaGF2ZSBub3RlZCB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIGNsYXNzIG9mIHRyYWZmaWMgYW5kIGl0cyBvYnNlcnZlZCBzdGF0aXN0aWNhbCBwcm9wZXJ0aWVzIGluY2x1ZGUgUGF4c29uIFs2XSB3aG8gcmVwb3J0cyBvbiB0aGUgZGlzdHJpYnV0aW9uIG9mIGZsb3ctYnl0ZXMgYW5kIGZsb3ctcGFja2V0cyBmb3IgYSBudW1iZXIgb2Ygc3BlY2lmaWMgYXBwbGljYXRpb25zLlwiXSxcIjIxMjUwNTUyNTlcIjpbXCJTaW1pbGFybHksIHRoZSBpbmZvcm1hdGlvbiBnYWluLCBbMjVdLCBpcyBleHByZXNzZWQgYXNcIl0sXCIyMTQ0MDk4NTg5XCI6W1wiWzRdIGlkZW50aWZ5IGFuIGFkZGl0aW9uYWwgYXBwbGljYXRpb24gb2YgdHJhZmZpYyBjYXRlZ29yaXphdGlvbjsgdGhleSBub3RlIHRoYXQgdGhlIGdyb3d0aCBvciBkZWNsaW5lIG9mIHBhcnRpY3VsYXIgdHJhZmZpYyB0eXBlcyBjYW4gaGF2ZSBhIGRpcmVjdCBpbXBhY3Qgb24gc29jaWFsIGFuZCBwb2xpdGljYWwgZGVjaS1cIixcIkFuIGV4YW1wbGUgYXBwbGljYXRpb24gdGhhdCB3b3VsZCBiZW5lZml0IGlzIHBlZXIyLXBlZXIgd2hpY2ggdGVuZHMgdG8gZXhoaWJpdCBzcGVjaWZpYywgaWRlbnRpZmlhYmxlIGFjY2VzcyBwYXR0ZXJucyBhY3Jvc3MgbnVtZXJvdXMgZmxvd3MgWzRdLlwiXSxcIjIxNDgyNzU0NzdcIjpbXCJXaGlsZSBub3Qgc3RyaWN0bHkgY2xhc3NpZmljYXRpb24sIEZsb3lkICYgUGF4c29uIFs5XSBvYnNlcnZlIHRoYXQgc2ltcGxlIChQb2lzc29uKSBtb2RlbHMgYXJlIHVuYWJsZSB0byBlZmZlY3RpdmVseSBjYXB0dXJlIHNvbWUgbmV0d29yayBjaGFyYWN0ZXJpc3RpY3MuXCJdLFwiMjE1MDM5ODU3N1wiOltcIkV4YW1wbGVzIGlsbHVzdHJhdGluZyB0aGUgdXNlIG9mIEJheWVzIHRvb2xzIGluIHZhcmlvdXMgZWxkcyBpbmNsdWRlIHRleHQgcmVjb2duaXRpb24sIG1lZGljYWwgc2NpZW5jZXMgYW5kIGluIGFzdHJvbm9teSAoZS5nLiwgWyAxOCAsIDE5LCAyMF0pLlwiXSxcIjIxNjQ4NjczODRcIjpbXCJbMTJdIGF0dGVtcHQgZmxvdyBjbGFzc2lmaWNhdGlvbiB3aXRoIGEgbWluZCB0byBpZGVudGlmeWluZyBtZW1iZXJzaGlwIGFtb25nIGEgc21hbGxlciBncm91cCBvZiBjbGFzc2VzOiB0aGUgZWxlcGhhbnQgZmxvd3Mg4oCUIHRob3NlIG9mIGxvbmctbGlmZSBhbmQgbGFyZ2UgZGF0YS1jb250ZW50IOKAlCBhbmQgbm9uLVwiXSxcIjIxNzE2MzQ1NDhcIjpbXCJbMTBdIHBlcmZvcm0gY2xhc3NpZmljYXRpb24gb2YgdHJhZmZpYyBmbG93cyBpbnRvIGEgc21hbGwgbnVtYmVyIG9mIGNsYXNzZXMgc3VpdGFibGUgZm9yIFF1YWxpdHkgb2YgU2VydmljZSBhcHBsaWNhdGlvbnMuXCJdLFwiMjYxMTgzMjE5OFwiOltcIkFkZGl0aW9uYWwgaW5mb3JtYXRpb24gb24gTmHEscyIdmUgQmF5ZXMgdGVjaG5pcXVlIGNvdWxkIGJlIGZvdW5kIGluIFsyMl0uXCIsXCJBbHRob3VnaCB0aGVzZSBhc3N1bXB0aW9ucyBhcmUgbm90IHJlYWxpc3RpYywgTmHEscyIdmUgQmF5ZXMgaGFzIGJlZW4gc2hvd24gdG8gd29yayBiZXR0ZXIgdGhhbiBtb3JlLWNvbXBsZXggbWV0aG9kcyBhbmQgY29wZSB3aXRoIGNvbXBsZXggc2l0dWF0aW9ucyBbMjJdLlwiLFwiQXMgZGVzY3JpYmVkIGluIFsyMl0sIHRoZSBwcmVkaWN0aW9uIGFjY3VyYWN5IG9mIHRoZSBOYcSxzIh2ZSBCYXllcyBhbGdvcml0aG0gc3VmZmVycyBmcm9tIHRoZSBwcmVzZW5jZSBvZiBpcnJlbGV2YW50IGFuZCByZWR1bmRhbnQgYXR0cmlidXRlcy5cIixcIjQgb2YgdGhlIFdFS0Egc29mdHdhcmUgc3VpdGUgWzIyXS5cIl0sXCIyODg1MTEzMTU5XCI6W1wiUGFzc2l2ZWx5LWNvbGxlY3RlZCBwYWNrZXQtaGVhZGVyIHRyYWNlcywgc3VjaCBhcyB0aG9zZSBwZXJmb3JtZWQgYnkgTkxBTlIvTU5BWzddIGFuZCBXQU5EWyA4IF0sIGFyZSBjb21tb25seSBhdmFpbGFibGUgYW5kIG92ZXJjb21lIGlzc3VlcyBvZiBjb25kZW50aWFsaXR5IGFuZCBwcml2YWN5LlxcdTAwMWJJbiBhbiBhbmFseXNpcyBvZiBJbnRlcm5ldCBjaGF0IHN5c3RlbXMsIERld2VzIGV0IGFsLiBbIDggXSBtYWtlIGVmZmVjdGl2ZSB1c2Ugb2YgdGhlIHBhY2tldC1zaXplIHByb2xlIG9mIHBhcnRpY3VsYXIgYXBwbGljYXRpb25zLlwiXX0sXCJQUlwiOlsyMTIyMjI2MzQ3LDE1MjE1NTM1NDgsMjA0MTg1NTE4MywxNDgxMjc3NjQ3LDIxMjE5NzMwMDEsMjE3MTYzNDU0OCwyMTE5MjcxMTYwLDIwNzMwODkyNDMsMjE0OTI3NDA0OSwyMDk2MTE4NDQzLDIxNDQwOTg1ODksMjEwMTIyMjI2NCwyMTMzNDczNDE3LDIwMTE2MjgxMzQsMjA1NTI2MTU5NSwyMTU3MzQ5MDYxLDE1MjQ0OTYwNzgsMTU1OTgxMDE0OCwyMTMwNTk4MjA1LDIwODc0MDU1NzYsMjEyMjIyNjM0NywxNTIxNTUzNTQ4LDIwNDE4NTUxODMsMTQ4MTI3NzY0NywyMTIxOTczMDAxLDIxNzE2MzQ1NDgsMjExOTI3MTE2MCwyMDczMDg5MjQzLDIxNDkyNzQwNDksMjA5NjExODQ0MywyMTQ0MDk4NTg5LDIxMDEyMjIyNjQsMjEzMzQ3MzQxNywyMDExNjI4MTM0LDIwNTUyNjE1OTUsMjE1NzM0OTA2MSwxNTI0NDk2MDc4LDE1NTk4MTAxNDgsMjEzMDU5ODIwNSwyMDg3NDA1NTc2XSxcIkFORlwiOlt7XCJGTlwiOlwiQW5kcmV3IFcuXCIsXCJMTlwiOlwiTW9vcmVcIixcIlNcIjoxfSx7XCJGTlwiOlwiRGVuaXNcIixcIkxOXCI6XCJadWV2XCIsXCJTXCI6Mn1dLFwiQlZcIjpcIlByb2NlZWRpbmdzIG9mIHRoZSAyMDA1IEFDTSBTSUdNRVRSSUNTIGludGVybmF0aW9uYWwgY29uZmVyZW5jZSBvbiBNZWFzdXJlbWVudCBhbmQgbW9kZWxpbmcgb2YgY29tcHV0ZXIgc3lzdGVtc1wiLFwiQlRcIjpcInBcIixcIlBCXCI6XCJBQ01cIn0ifSx7ImxvZ3Byb2IiOi0xNi42NzQsImtlc0VudGl0eUlkIjoyMTYwMjAzLCJJZCI6MjA3MjY0MTg5MiwiVGkiOiJyZXNlYXJjaCBkaXJlY3Rpb25zIGZvciB0aGUgaW50ZXJuZXQgb2YgdGhpbmdzIiwiWSI6MjAxNCwiRCI6IjIwMTQtMDItMDEiLCJSSWQiOlsyMDk0NjM2NDk4LDIxMjQyODA5NzAsMjE1ODY4MzkxNiwyMDIzMzQ2ODU5LDE2NjMxMDkzNDcsMjEzMjA5MjQzNywyMTI2ODY2NDk1LDIxMzI0NzY1MjUsMjA1MTU2MDAwNiwxOTY5Mjg3NjYyLDIwMjUxNTg5NTYsMjE2ODgxNjgxMiwxOTc3NjQ5MjUzLDE5Njc5ODQzMjgsMTk5ODA4ODM5OSwyMTQ3ODQ1NDkwLDE1NzY0ODg5NzMsMjA0MTc1MjI1MCwyMTAwMzc1OTE3LDIyMzgwNDMwNTcsMjAxMjQ3MDM3NSwyMTI4NTU5NzYwLDIwMzI2NDIyMDcsMjE1ODExMDEwNSwyMDA2NTAzOTI5LDIwNDU1Mjg1MjgsMjE2MTkyNzcwOCwyMTExOTA3Nzg4LDIwNzY5NDQ5MTVdLCJBQSI6W3siQXVOIjoiam9obiBhIHN0YW5rb3ZpYyJ9XSwiRiI6W3siRk4iOiJvcGVuIHJlc2VhcmNoIn0seyJGTiI6ImludGVybmV0IG9mIHRoaW5ncyJ9LHsiRk4iOiJuZXR3b3JrIHNlY3VyaXR5In0seyJGTiI6Im1vYmlsZSBjb21wdXRpbmcifSx7IkZOIjoid2lyZWxlc3Mgc2Vuc29yIG5ldHdvcmsifSx7IkZOIjoiY29tcHV0ZXIgc2VjdXJpdHkifSx7IkZOIjoiY29tcHV0ZXIgbmV0d29yayJ9LHsiRk4iOiJkaXN0cmlidXRlZCBjb21wdXRpbmcifSx7IkZOIjoiY29tcHV0ZXIgc2NpZW5jZSJ9XSwiRSI6IntcIkROXCI6XCJSZXNlYXJjaCBEaXJlY3Rpb25zIGZvciB0aGUgSW50ZXJuZXQgb2YgVGhpbmdzXCIsXCJJQVwiOntcIkluZGV4TGVuZ3RoXCI6OTAsXCJJbnZlcnRlZEluZGV4XCI6e1wiTWFueVwiOlswXSxcInRlY2huaWNhbFwiOlsxXSxcImNvbW11bml0aWVzXCI6WzIsNDVdLFwiYXJlXCI6WzMsODAsODhdLFwidmlnb3JvdXNseVwiOls0XSxcInB1cnN1aW5nXCI6WzVdLFwicmVzZWFyY2hcIjpbNiw1NSw3OCw4M10sXCJ0b3BpY3NcIjpbNyw3OSw4N10sXCJ0aGF0XCI6WzhdLFwiY29udHJpYnV0ZVwiOls5XSxcInRvXCI6WzEwXSxcInRoZVwiOlsxMSw2Niw2OV0sXCJJbnRlcm5ldFwiOlsxMl0sXCJvZlwiOlsxM10sXCJUaGluZ3NcIjpbMTRdLFwiKElvVCkuXCI6WzE1XSxcIk5vd2FkYXlzLFwiOlsxNl0sXCJhc1wiOlsxN10sXCJzZW5zaW5nLFwiOlsxOF0sXCJhY3R1YXRpb24sXCI6WzE5XSxcImNvbW11bmljYXRpb24sXCI6WzIwXSxcImFuZFwiOlsyMSwyNyw4Ml0sXCJjb250cm9sXCI6WzIyXSxcImJlY29tZVwiOlsyM10sXCJldmVuXCI6WzI0XSxcIm1vcmVcIjpbMjVdLFwic29waGlzdGljYXRlZFwiOlsyNl0sXCJ1YmlxdWl0b3VzLFwiOlsyOF0sXCJ0aGVyZVwiOlsyOV0sXCJpc1wiOlszMCw0Niw3Ml0sXCJhXCI6WzMxLDUwLDU5XSxcInNpZ25pZmljYW50XCI6WzMyXSxcIm92ZXJsYXBcIjpbMzNdLFwiaW5cIjpbMzQsNTcsNjhdLFwidGhlc2VcIjpbMzUsODZdLFwiY29tbXVuaXRpZXMsXCI6WzM2XSxcInNvbWV0aW1lc1wiOlszN10sXCJmcm9tXCI6WzM4XSxcInNsaWdodGx5XCI6WzM5XSxcImRpZmZlcmVudFwiOls0MF0sXCJwZXJzcGVjdGl2ZXMuXCI6WzQxXSxcIk1vcmVcIjpbNDJdLFwiY29vcGVyYXRpb25cIjpbNDNdLFwiYmV0d2VlblwiOls0NF0sXCJlbmNvdXJhZ2VkLlwiOls0N10sXCJUb1wiOls0OF0sXCJwcm92aWRlXCI6WzQ5XSxcImJhc2lzXCI6WzUxXSxcImZvclwiOls1Miw2MV0sXCJkaXNjdXNzaW5nXCI6WzUzXSxcIm9wZW5cIjpbNTRdLFwicHJvYmxlbXNcIjpbNTYsODRdLFwiSW9ULFwiOls1OF0sXCJ2aXNpb25cIjpbNjBdLFwiaG93XCI6WzYyXSxcIklvVFwiOls2M10sXCJjb3VsZFwiOls2NF0sXCJjaGFuZ2VcIjpbNjVdLFwid29ybGRcIjpbNjddLFwiZGlzdGFudFwiOls3MF0sXCJmdXR1cmVcIjpbNzFdLFwiZmlyc3RcIjpbNzNdLFwicHJlc2VudGVkLlwiOls3NF0sXCJUaGVuLFwiOls3NV0sXCJlaWdodFwiOls3Nl0sXCJrZXlcIjpbNzddLFwiZW51bWVyYXRlZFwiOls4MV0sXCJ3aXRoaW5cIjpbODVdLFwiZGlzY3Vzc2VkLlwiOls4OV19fSxcIlNcIjpbe1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3d3dy5jcy52aXJnaW5pYS5lZHUvfnN0YW5rb3ZpYy9wc2ZpbGVzL0lPVC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cHM6Ly93ZWIuZWVjcy51bWljaC5lZHUvfnByYWJhbC90ZWFjaGluZy9yZXNvdXJjZXMvZWVjczU4Mi9zdGFua292aWMxNGlvdC5wZGZcIn0se1wiVHlcIjozLFwiVVwiOlwiaHR0cDovL3JvbWlzYXRyaWF3YWhvbm8ubmV0L2xlY3R1cmUvcm0vc3VydmV5L25ldHdvcmslMjBzZWN1cml0eS9TdGFua292aWMlMjAtJTIwUmVzZWFyY2glMjBEaXJlY3Rpb25zJTIwZm9yJTIwdGhlJTIwSW50ZXJuZXQlMjBvZiUyMFRoaW5ncyUyMC0lMjAyMDE0LnBkZlwifSx7XCJUeVwiOjMsXCJVXCI6XCJodHRwOi8vZWNlZGhhLm9yZy9kb2NzL2RlZmF1bHQtc291cmNlL3NvdXJjZS9yZXNlYXJjaC1kaXJlY3Rpb25zLWZvci10aGUtaW50ZXJuZXQtb2YtdGhpbmdzLnBkZlwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vaWVlZXhwbG9yZS5pZWVlLm9yZy9kb2N1bWVudC82Nzc0ODU4L1wifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwczovL2RvaS5vcmcvMTAuMTEwOS9KSU9ULjIwMTQuMjMxMjI5MVwifSx7XCJUeVwiOjEsXCJVXCI6XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMTA5L0pJT1QuMjAxNC4yMzEyMjkxXCJ9LHtcIlR5XCI6MSxcIlVcIjpcImh0dHA6Ly9kYmxwLnVuaS10cmllci5kZS9kYi9qb3VybmFscy9pb3RqL2lvdGoxLmh0bWwjU3RhbmtvdmljMTRcIn1dLFwiVkZOXCI6XCJJRUVFIEludGVybmV0IG9mIFRoaW5ncyBKb3VybmFsXCIsXCJWXCI6MSxcIklcIjoxLFwiRlBcIjozLFwiTFBcIjo5LFwiRE9JXCI6XCIxMC4xMTA5L0pJT1QuMjAxNC4yMzEyMjkxXCIsXCJDQ1wiOntcIjE1NzY0ODg5NzNcIjpbXCJUaGlzIGluY2x1ZGVzIGZvcm1hbCBtZXRob2RzIHRvIGRldmVsb3AgcmVsaWFibGUgY29kZSwgaW4gc2l0dSBkZWJ1Z2dpbmcgdGVjaG5pcXVlcywgb25saW5lIGZhdWx0IHRvbGVyYW5jZSwgaW4tZmllbGRtYWludGVuYW5jZSwgYW5kIGdlbmVyYWwgaGVhbHRoIG1vbml0b3Jpbmcgc2VydmljZXMgWzIzXeKAk1syNV0uXCJdLFwiMTY2MzEwOTM0N1wiOltcImFjdHVhdG9ycyBjYW4gYmUgY2hlY2tlZHdoZW4gdGhlIGFwcCBpcyBpbnN0YWxsZWQgWzEyXS5cIl0sXCIxOTY3OTg0MzI4XCI6W1wiU29sdXRpb25zIG1heSByZXF1aXJlIGRvd25sb2FkaW5nIG5ldyBjb2RlIFsxMF0gYW5kIHRoaXMgaXRzZWxmIGlzIG9wZW4gdG8gc2VjdXJpdHkgYXR0YWNrcy5cIl0sXCIxOTY5Mjg3NjYyXCI6W1wiTWFueSBwZW9wbGUgWzhdLCBpbmNsdWRpbmcgbXlzZWxmIFsyOF0sIFsyOV0sIGhvbGQgdGhlIHZpZXdcIl0sXCIxOTc3NjQ5MjUzXCI6W1wiSHVtYW4gaW4tdGhlLWxvb3Agc3lzdGVtcyBvZmZlciBleGNpdGluZyBvcHBvcnR1bml0aWVzIHRvIGEgYnJvYWQgcmFuZ2Ugb2YgYXBwbGljYXRpb25zIGluY2x1ZGluZyBlbmVyZ3ltYW5hZ2VtZW50IFsxN10sIGhlYWx0aCBjYXJlIFsxNV0sIGFuZCBhdXRvbW9iaWxlIHN5c3RlbXMgWzldLCBbMTZdLlwiXSxcIjE5OTgwODgzOTlcIjpbXCJIb3cgd2lsbCB0aGVzZSBvYmplY3RzIGludGVyYWN0IGluIGFuZCBhY3Jvc3MgYXBwbGljYXRpb25zIFszN10/XCJdLFwiMjAwNjUwMzkyOVwiOltcIkxldCB1cyBjb25zaWRlciBhIGZldyBleGFtcGxlcyBvZiBkZXBlbmRlbmNpZXMgWzIxXSwgWzMxXSwgWzMyXS5cIl0sXCIyMDEyNDcwMzc1XCI6W1wiQ2x1c3RlcmluZywgZGF0YSBtaW5pbmcsIGluZmVyZW5jZSwgZmlyc3QgcHJpbmNpcGxlbW9kZWxzIGJhc2VkIG9uIGh1bWFuIHBoeXNpb2xvZ3kgWzE0XSBhbmQgYmVoYXZpb3JzIG1heSBhbGwgYmUgbmVjZXNzYXJ5IHRlY2huaXF1ZXMgdG8gYmUgZW5oYW5jZWQgYW5kIGFwcGxpZWQgZm9yIGRpZmZlcmVudCBhcHBsaWNhdGlvbnMuXCJdLFwiMjAyMzM0Njg1OVwiOltcIkFzc3VtZSB0aGF0IHdlIGludGVncmF0ZSBzZXZlcmFsIHN5c3RlbXMgcmVzcG9uc2libGUgZm9yIGVuZXJneSBtYW5hZ2VtZW50IChjb250cm9sbGluZyB0aGVybW9zdGF0cyBbMTddLCB3aW5kb3dzLCBkb29ycywgYW5kIHNoYWRlcykgYW5kIGhvbWUgaGVhbHRoIGNhcmUgKGNvbnRyb2xsaW5nIGxpZ2h0cywgVFZzLCBib2R5IG5vZGVzbWVhc3VyaW5nIGhlYXJ0IHJhdGUgYW5kIHRlbXBlcmF0dXJlLCBhbmQgc2xlZXAgYXBuZWEgbWFjaGluZXMgWzMzXSkuXCIsXCJIdW1hbiBpbi10aGUtbG9vcCBzeXN0ZW1zIG9mZmVyIGV4Y2l0aW5nIG9wcG9ydHVuaXRpZXMgdG8gYSBicm9hZCByYW5nZSBvZiBhcHBsaWNhdGlvbnMgaW5jbHVkaW5nIGVuZXJneW1hbmFnZW1lbnQgWzE3XSwgaGVhbHRoIGNhcmUgWzE1XSwgYW5kIGF1dG9tb2JpbGUgc3lzdGVtcyBbOV0sIFsxNl0uXCJdLFwiMjA0MTc1MjI1MFwiOltcImhvbWUgc2Vuc2luZyB0byBzdXBwb3J0IHJlbW90ZSBtZWRpY2luZSBhbmQgd2VsbG5lc3MgWzExXS5cIl0sXCIyMDUxNTYwMDA2XCI6W1wiU2VlIGFsc28gWzI2XSBmb3IgYWRkaXRpb25hbCBkZXNjcmlwdGlvbnMgb2YgaHVtYW4taW4tdGhlLWxvb3Agc3lzdGVtcy5cIl0sXCIyMDc2OTQ0OTE1XCI6W1widHJhbnNwb3J0YXRpb24gWzldOyBwZW9wbGUgaGF2ZSBzbWFydHBob25lcyB3aXRoIHNlbnNvcnMgZm9yXCIsXCJIdW1hbiBpbi10aGUtbG9vcCBzeXN0ZW1zIG9mZmVyIGV4Y2l0aW5nIG9wcG9ydHVuaXRpZXMgdG8gYSBicm9hZCByYW5nZSBvZiBhcHBsaWNhdGlvbnMgaW5jbHVkaW5nIGVuZXJneW1hbmFnZW1lbnQgWzE3XSwgaGVhbHRoIGNhcmUgWzE1XSwgYW5kIGF1dG9tb2JpbGUgc3lzdGVtcyBbOV0sIFsxNl0uXCJdLFwiMjA5NDYzNjQ5OFwiOltcIlRoZSBtb3N0IGNvbW1vbiAoYW5kIHNpbXBsZSkgZXhhbXBsZSBvZiB0aGlzIGRldGVyaW9yYXRpb24gcHJvYmxlbSBpcyB3aXRoIGNsb2NrIHN5bmNocm9uaXphdGlvbiBbMThdLlwiXSxcIjIxMDAzNzU5MTdcIjpbXCJUaGVzZSBwcm9ibGVtcyBhcmUgYmVnaW5uaW5nIHRvIGJlIGFkZHJlc3NlZCBieSB3b3JrIHN1Y2ggYXMgdGhhdCBmb3VuZCBpbiBbMzRdLlwiLFwiSW4gWzM0XSwgdGhlIHN5c3RlbSBvcGVyYXRlcyB3aXRoIGEgYmFzZSBsZXZlbCBvZiBzdXBwb3J0IGluY2x1ZGluZyBzdHJvbmcgYXR0YWNrIGRldGVjdGlvbiBjYXBhYmlsaXRpZXMuXCJdLFwiMjEyNDI4MDk3MFwiOltcIkEgZnVuZGFtZW50YWwgcHJvYmxlbSB0aGF0IGlzIHBlcnZhc2l2ZSBpbiB0aGUgSW50ZXJuZXQgbm93YWRheXMgdGhhdCBtdXN0IGJlIHNvbHZlZCBpcyBkZWFsaW5nIHdpdGggc2VjdXJpdHkgYXR0YWNrcyBbMjJdLCBbMzZdLlwiXSxcIjIxMjY4NjY0OTVcIjpbXCJUaGlzIGluY2x1ZGVzIGZvcm1hbCBtZXRob2RzIHRvIGRldmVsb3AgcmVsaWFibGUgY29kZSwgaW4gc2l0dSBkZWJ1Z2dpbmcgdGVjaG5pcXVlcywgb25saW5lIGZhdWx0IHRvbGVyYW5jZSwgaW4tZmllbGRtYWludGVuYW5jZSwgYW5kIGdlbmVyYWwgaGVhbHRoIG1vbml0b3Jpbmcgc2VydmljZXMgWzIzXeKAk1syNV0uXCJdLFwiMjEyODU1OTc2MFwiOltcIlRoaXMgaXNzdWVjYW5iZWNvbnNpZGVyZWRhZm9ybW9mZW50cm9weSB3aGVyZSBhIHN5c3RlbSB3aWxsIGRldGVyaW9yYXRlICh0ZW5kIHRvd2FyZCBkaXNvcmRlcikgdW5sZXNzIGVuZXJneSBpbiB0aGUgZm9ybSBvZiByZXJ1bm5pbmcgcHJvdG9jb2xzIGFuZCBvdGhlciBzZWxmLWhlYWxpbmcgbWVjaGFuaXNtcyBpcyBhcHBsaWVkIFszNV0uXCJdLFwiMjE1ODY4MzkxNlwiOltcIk1hbnkgcGVvcGxlIFs4XSwgaW5jbHVkaW5nIG15c2VsZiBbMjhdLCBbMjldLCBob2xkIHRoZSB2aWV3XCJdLFwiMjE2ODgxNjgxMlwiOltcIkEgZnVuZGFtZW50YWwgcHJvYmxlbSB0aGF0IGlzIHBlcnZhc2l2ZSBpbiB0aGUgSW50ZXJuZXQgbm93YWRheXMgdGhhdCBtdXN0IGJlIHNvbHZlZCBpcyBkZWFsaW5nIHdpdGggc2VjdXJpdHkgYXR0YWNrcyBbMjJdLCBbMzZdLlwiLFwiSXQgaXMgbGlrZWx5IHRoYXQgc2lnbmlmaWNhbnQgaGFyZHdhcmUgc3VwcG9ydCBbMjJdIHdpbGwgYmUgbmVjZXNzYXJ5IGZvciBwcm92aWRpbmcgZW5jcnlwdGlvbiwgYXV0aGVudGljYXRpb24sIGF0dGVzdGF0aW9uLCBhbmQgdGFtcGVyIHByb29mIGtleXMuXCJdLFwiMjIzODA0MzA1N1wiOltcIk5ldyByZXNlYXJjaCBpcyBuZWNlc3NhcnkgdG8gcmFpc2UgaHVtYW4taW4tdGhlLWxvb3AgY29udHJvbCB0byBhIGNlbnRyYWwgcHJpbmNpcGxlIGluIHN5c3RlbSBkZXNpZ24gYW5kIHRvIHNvbHZlIHRocmVlIG1haW4gY2hhbGxlbmdlcyBbMjBdLlwiLFwiRmluYWxseSwgc29tZSBvZiBTZWN0aW9uIElJSS1IIGlzIGZyb20gWzIwXS5cIl19LFwiUFJcIjpbMjEwNTEwMzc3NywyMDU4NDAxMjEyLDIxMTE2MTk2MjYsMjExOTA0NjY0MiwyMDY4ODQ5Mjc3LDIxMjYzMTE0MTEsMjEzNDI5NTA1MywyMDM4MTk0MjIwLDE3NTUyMjcwNjMsMTk3OTUxOTQ2MiwxOTkyMDI1MTk2LDIwMzE4NTAzOTIsMjE0MDY2OTk2MCwxOTcyMDEyMTQ3LDIwMzc3NTk0MTcsMjA0MTc4NTQxOSwyMTE0NjIzMjIxLDIxMjA2MjkxNTgsMjEyOTA3OTQ2MiwyMTQzNTkxNDQyLDIxMDUxMDM3NzcsMjA1ODQwMTIxMiwyMTExNjE5NjI2LDIxMTkwNDY2NDIsMjA2ODg0OTI3NywyMTI2MzExNDExLDIxMzQyOTUwNTMsMjAzODE5NDIyMCwxNzU1MjI3MDYzLDE5Nzk1MTk0NjIsMTk5MjAyNTE5NiwyMDMxODUwMzkyLDIxNDA2Njk5NjAsMTk3MjAxMjE0NywyMDM3NzU5NDE3LDIwNDE3ODU0MTksMjExNDYyMzIyMSwyMTIwNjI5MTU4LDIxMjkwNzk0NjIsMjE0MzU5MTQ0Ml0sXCJBTkZcIjpbe1wiRk5cIjpcIkpvaG4gQS5cIixcIkxOXCI6XCJTdGFua292aWNcIixcIlNcIjoxfV0sXCJCVlwiOlwiSUVFRSBJbnRlcm5ldCBvZiBUaGluZ3MgSm91cm5hbFwiLFwiQlRcIjpcImFcIixcIlBCXCI6XCJJRUVFXCJ9In1dfQ==
    http_version: 
  recorded_at: Sat, 24 Nov 2018 09:28:53 GMT
- request:
    method: get
    uri: https://api.labs.cognitive.microsoft.com/academic/v1.0/evaluate?attributes=Id,Ti,AA.AuN,Y,D,F.FN,E,RId&count=50&expr=Or(W==%27internet%27)&model=latest&offset=0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Ocp-Apim-Subscription-Key:
      - NO_TOKEN
  response:
    status:
      code: 401
      message: Access Denied
    headers:
      Content-Length:
      - '198'
      Content-Type:
      - application/json
      Www-Authenticate:
      - AzureApiManagementKey realm="https://api.labs.cognitive.microsoft.com/academic/v1.0",name="Ocp-Apim-Subscription-Key",type="header"
      Date:
      - Sat, 24 Nov 2018 09:28:54 GMT
    body:
      encoding: UTF-8
      string: "\n{\"error\":{\"code\":\"Unspecified\",\"message\":\"Access denied
        due to invalid subscription key. Make sure you are subscribed to an API you
        are trying to call and provide the right key.\"}}\n                "
    http_version: 
  recorded_at: Sat, 24 Nov 2018 09:28:54 GMT
recorded_with: VCR 4.0.0
